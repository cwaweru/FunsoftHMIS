/*
 * MultiPartMailIntfr.java
 *
 * Created on May 8, 2008, 5:34 PM
 */

package biz.systempartners.communications;

import org.apache.log4j.varia.NullAppender;
import org.jfree.xml.factory.objects.JavaBaseClassFactory;

/**
 *
 * @author  root
 */
public class MultiPartMailIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable {
    
    /**
     * Creates new form MultiPartMailIntfr
     */
    javax.swing.JLabel attachmentLabels[] = null;
    
    java.util.Vector attachmentsVector = null;
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    java.lang.Thread sendMailThread = null;
    
    public MultiPartMailIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        //    sendMailThread = new java.lang.Thread(this, "Send Mail");
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainMailPanel = new javax.swing.JPanel();
        mailHeaderPanel = new javax.swing.JPanel();
        toAddressFieldLbl = new javax.swing.JLabel();
        ccAddressFieldLbl = new javax.swing.JLabel();
        bccAddressFieldLbl = new javax.swing.JLabel();
        subjectFieldLbl = new javax.swing.JLabel();
        toAddressJscrl = new javax.swing.JScrollPane();
        toAddressTxt = new javax.swing.JTextArea();
        ccAddressJscrl = new javax.swing.JScrollPane();
        ccAddressTxt = new javax.swing.JTextArea();
        bccAddressJscrl = new javax.swing.JScrollPane();
        bccAddressTxt = new javax.swing.JTextArea();
        subjectJscrl = new javax.swing.JScrollPane();
        subjectTxt = new javax.swing.JTextArea();
        mailBodyPanel = new javax.swing.JPanel();
        mailcomposerPanel = new org.jdesktop.swingx.JXTitledPanel();
        mailEditor = new kiwi.ui.SimpleEditor();
        attachmentsPanel = new javax.swing.JPanel();
        attachmentsJscrl = new javax.swing.JScrollPane();
        attachmentsPane = new javax.swing.JPanel();
        actionsPanel = new javax.swing.JPanel();
        spacerLabel = new javax.swing.JLabel();
        sendMailBtn = new javax.swing.JButton();
        resetEmailerBtn = new javax.swing.JButton();
        exitEmailerBtn = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Email Composer");
        setAutoscrolls(true);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainMailPanel.setLayout(new java.awt.GridBagLayout());

        mailHeaderPanel.setLayout(new java.awt.GridBagLayout());

        toAddressFieldLbl.setText("To:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(toAddressFieldLbl, gridBagConstraints);

        ccAddressFieldLbl.setText("Cc:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(ccAddressFieldLbl, gridBagConstraints);

        bccAddressFieldLbl.setText("Bcc:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(bccAddressFieldLbl, gridBagConstraints);

        subjectFieldLbl.setText("Subject:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(subjectFieldLbl, gridBagConstraints);

        toAddressTxt.setColumns(20);
        toAddressTxt.setRows(1);
        toAddressJscrl.setViewportView(toAddressTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(toAddressJscrl, gridBagConstraints);

        ccAddressTxt.setColumns(20);
        ccAddressTxt.setRows(1);
        ccAddressJscrl.setViewportView(ccAddressTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(ccAddressJscrl, gridBagConstraints);

        bccAddressTxt.setColumns(20);
        bccAddressTxt.setRows(1);
        bccAddressJscrl.setViewportView(bccAddressTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(bccAddressJscrl, gridBagConstraints);

        subjectTxt.setColumns(20);
        subjectTxt.setRows(1);
        subjectJscrl.setViewportView(subjectTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        mailHeaderPanel.add(subjectJscrl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainMailPanel.add(mailHeaderPanel, gridBagConstraints);

        mailBodyPanel.setLayout(new java.awt.GridBagLayout());

        mailcomposerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mailcomposerPanel.setLayout(new java.awt.GridBagLayout());

        mailEditor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mailcomposerPanel.add(mailEditor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mailBodyPanel.add(mailcomposerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        mainMailPanel.add(mailBodyPanel, gridBagConstraints);

        attachmentsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mail attachments. Click on the space provided below to select files to attach.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        attachmentsPanel.setLayout(new java.awt.GridBagLayout());

        attachmentsJscrl.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        attachmentsJscrl.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        attachmentsPane.setBackground(new java.awt.Color(204, 255, 204));
        attachmentsPane.setToolTipText("Click here to add files to attach to the message.");
        attachmentsPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attachmentsPaneMouseClicked(evt);
            }
        });
        attachmentsJscrl.setViewportView(attachmentsPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        attachmentsPanel.add(attachmentsJscrl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        mainMailPanel.add(attachmentsPanel, gridBagConstraints);

        actionsPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(spacerLabel, gridBagConstraints);

        sendMailBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Email 3.png"))); // NOI18N
        sendMailBtn.setText("Send Mail");
        sendMailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMailBtnActionPerformed(evt);
            }
        });
        actionsPanel.add(sendMailBtn, new java.awt.GridBagConstraints());

        resetEmailerBtn.setText("Refresh/Reset");
        resetEmailerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetEmailerBtnActionPerformed(evt);
            }
        });
        actionsPanel.add(resetEmailerBtn, new java.awt.GridBagConstraints());

        exitEmailerBtn.setText("Close Emailer");
        exitEmailerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitEmailerBtnActionPerformed(evt);
            }
        });
        actionsPanel.add(exitEmailerBtn, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainMailPanel.add(actionsPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainMailPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void sendMailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMailBtnActionPerformed
        
        java.lang.String attachmentFiles[] = null;
        
        java.lang.String addreses[] = null;
        
        // java.lang.String ccAddreses[] = null
        
        // java.lang.String bccAddreses[] = null
        
        sendMailThread = new java.lang.Thread(this, "Send Mail");
        
        sendMailThread.start();
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_sendMailBtnActionPerformed
    
    private void exitEmailerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitEmailerBtnActionPerformed
        
        this.dispose();
        
// TODO add your handling code here:
    }//GEN-LAST:event_exitEmailerBtnActionPerformed
    
    private void resetEmailerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetEmailerBtnActionPerformed
        
        this.toAddressTxt.setText(null);
        this.ccAddressTxt.setText(null);
        this.bccAddressTxt.setText(null);
        this.subjectTxt.setText(null);
        this.mailEditor.setText(null);
        this.attachmentsPane.removeAll();
// TODO add your handling code here:
    }//GEN-LAST:event_resetEmailerBtnActionPerformed
    
    private void attachmentsPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attachmentsPaneMouseClicked
        
        attachmentsPane.invalidate();
        
        javax.swing.JFileChooser attachmentChooser = new javax.swing.JFileChooser(new java.io.File(System.getProperty("docsdir")));
        
        attachmentChooser.setMultiSelectionEnabled(true);//AcceptAllFileFilterUsed(true);
        
        attachmentChooser.setDragEnabled(true);
        
        int returnVal = attachmentChooser.showDialog(this,"Select files to attach");
        
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            
            //  System.out.println("selected files = :"+attachmentChooser.getSelectedFile().getAbsoluteFile());
            
            java.io.File attachmentFiles[] = attachmentChooser.getSelectedFiles();
            
            attachmentsVector = new java.util.Vector(1,1);
            
            attachmentLabels = new javax.swing.JLabel[attachmentFiles.length];
            
            System.out.println("Attachments number["+attachmentFiles.length+"]");
            
            for(int i = 0; i < attachmentFiles.length; i++){
                
                attachmentLabels[i] = new javax.swing.JLabel();
                
                attachmentsVector.addElement(attachmentFiles[i].getPath());
                
                attachmentLabels[i].setText(attachmentFiles[i].getPath());
                
                attachmentLabels[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Email 3.png")));
                
                attachmentsPane.add(attachmentLabels[i]);
                
                this.attachmentsJscrl.setViewportView(attachmentsPane);
                
                System.out.println("Attachment done ...");
            }
            
            attachmentsJscrl.validate();
            
            com.afrisoftech.hospital.HospitalMain.storePreferences();
            
        }
// TODO add your handling code here:
    }//GEN-LAST:event_attachmentsPaneMouseClicked
    
    private java.lang.String[] getAddresses(String addressString){
        
        String addresses[] = null;
        
        java.util.Vector addressesVector = new java.util.Vector(1,1);
        
        java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(addressString,",");
        
        addresses = new java.lang.String[tokenizer.countTokens()];
        
        while(tokenizer.hasMoreTokens()){
            String address = tokenizer.nextToken();
            // if(address.ma){
            addressesVector.addElement(address);
            // }
            
        }
        
        addresses = (String[]) addressesVector.toArray(addresses);
        
        return addresses;
        
    }
    
    public void run(){
        
        biz.systempartners.claims.AdvancedSendFile.SendFile(connectDB,(String[]) attachmentsVector.toArray(new java.lang.String[attachmentsVector.size()]), (java.lang.String[])this.getAddresses(this.toAddressTxt.getText()), (java.lang.String[])this.getAddresses(this.ccAddressTxt.getText()), (java.lang.String[])this.getAddresses(this.bccAddressTxt.getText()), this.subjectTxt.getText(), this.mailEditor.getText());
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JScrollPane attachmentsJscrl;
    private javax.swing.JPanel attachmentsPane;
    private javax.swing.JPanel attachmentsPanel;
    private javax.swing.JLabel bccAddressFieldLbl;
    private javax.swing.JScrollPane bccAddressJscrl;
    private javax.swing.JTextArea bccAddressTxt;
    private javax.swing.JLabel ccAddressFieldLbl;
    private javax.swing.JScrollPane ccAddressJscrl;
    private javax.swing.JTextArea ccAddressTxt;
    private javax.swing.JButton exitEmailerBtn;
    private javax.swing.JPanel mailBodyPanel;
    private kiwi.ui.SimpleEditor mailEditor;
    private javax.swing.JPanel mailHeaderPanel;
    private org.jdesktop.swingx.JXTitledPanel mailcomposerPanel;
    private javax.swing.JPanel mainMailPanel;
    private javax.swing.JButton resetEmailerBtn;
    private javax.swing.JButton sendMailBtn;
    private javax.swing.JLabel spacerLabel;
    private javax.swing.JLabel subjectFieldLbl;
    private javax.swing.JScrollPane subjectJscrl;
    private javax.swing.JTextArea subjectTxt;
    private javax.swing.JLabel toAddressFieldLbl;
    private javax.swing.JScrollPane toAddressJscrl;
    private javax.swing.JTextArea toAddressTxt;
    // End of variables declaration//GEN-END:variables
    
}
