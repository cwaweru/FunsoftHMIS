/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.systempartners.utils;

import java.awt.Color;
import java.sql.SQLException;
import org.jdesktop.swingx.decorator.ColorHighlighter;
//import org.openide.util.Exceptions;

/**
 *
 * @author Charles
 */
public class HelpDeskIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form HelpDeskIntfr
     */
    java.sql.Connection connectDB = null;

    public HelpDeskIntfr(java.sql.Connection connDB) {

        connectDB = connDB;

        initComponents();
        java.util.Vector<org.jdesktop.swingx.decorator.Highlighter> tableHighlighters = new java.util.Vector<org.jdesktop.swingx.decorator.Highlighter>(1, 1);
        //org.jdesktop.swingx.decorator.Highlighter tableHighlighterArray[] ;// = new org.jdesktop.swingx.decorator.Highlighter()[];
        com.afrisoftech.dbadmin.JXTable predicateTable = (com.afrisoftech.dbadmin.JXTable) irFollowUpTable;
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate = new org.jdesktop.swingx.decorator.PatternPredicate("Emergency", 7, 7);
        ColorHighlighter magenta = new ColorHighlighter(patternPredicate, Color.RED, null, Color.RED, null);
        tableHighlighters.addElement(magenta);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate1 = new org.jdesktop.swingx.decorator.PatternPredicate("Urgent", 7, 7);
        ColorHighlighter pink = new ColorHighlighter(patternPredicate1, Color.PINK, null, Color.PINK, null);
        tableHighlighters.add(pink);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate2 = new org.jdesktop.swingx.decorator.PatternPredicate("Important", 7, 7);
        ColorHighlighter cyan = new ColorHighlighter(patternPredicate2, Color.CYAN, null, Color.CYAN, null);
        tableHighlighters.add(cyan);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate3 = new org.jdesktop.swingx.decorator.PatternPredicate("Routine", 7, 7);
        ColorHighlighter orange = new ColorHighlighter(patternPredicate3, Color.ORANGE, null, Color.ORANGE, null);
        tableHighlighters.add(cyan);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate4 = new org.jdesktop.swingx.decorator.PatternPredicate("true", 9, 9);
        ColorHighlighter green = new ColorHighlighter(patternPredicate4, Color.GREEN, null, Color.GREEN, null);
        tableHighlighters.add(green);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate5 = new org.jdesktop.swingx.decorator.PatternPredicate("false", 9, 9);
        ColorHighlighter cancelled = new ColorHighlighter(patternPredicate5, Color.YELLOW, null, Color.YELLOW, null);
        tableHighlighters.add(cancelled);
        // Highlighter shading = new ShadingColorHighlighter(new HighlightPredicate.ColumnHighlightPredicate(6));
        ColorHighlighter tableHighlightersArray[] = new ColorHighlighter[]{magenta, cyan, green, pink, orange, cancelled};
        predicateTable.setHighlighterPipeline(predicateTable, tableHighlightersArray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        levelButtonGroup = new javax.swing.ButtonGroup();
        headerPanel = new javax.swing.JPanel();
        departmentCmbx = new javax.swing.JComboBox();
        sectionCmbx = new javax.swing.JComboBox();
        natureofIRCmbx = new javax.swing.JComboBox();
        actionPanel = new javax.swing.JPanel();
        sendRequestBtn = new javax.swing.JButton();
        clearFormBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        spacerLabel = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        closeRequestBtn = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        bodyPanel = new javax.swing.JPanel();
        interventionRequestJscrl = new javax.swing.JScrollPane();
        interventionRequestEditorPane = new javax.swing.JEditorPane();
        emergencyChkbx = new javax.swing.JCheckBox();
        urgentChkbx = new javax.swing.JCheckBox();
        importantChkbx = new javax.swing.JCheckBox();
        routineChkbx = new javax.swing.JCheckBox();
        requestTelephoneTxt = new javax.swing.JTextField();
        followUpPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        irFollowUpTable = new com.afrisoftech.dbadmin.JXTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Funsoft HMIS ICT - Help Desk - Register all your ICT intervention requests here");
        setAutoscrolls(true);
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        headerPanel.setLayout(new java.awt.GridBagLayout());

        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT depart_name FROM pb_main_department order by 1"));
        departmentCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Select department"));
        departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(departmentCmbx, gridBagConstraints);

        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM master_file ORDER BY 1"));
        sectionCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Select section"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(sectionCmbx, gridBagConstraints);

        natureofIRCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Funsoft Issue", "Training requirement", "Network disconnection", "Computer malfunction", "Keyboard malfunction", "Mouse malfuntion", "Computer Viruses", "Monitor malfunction", "Power failure", "Other", " " }));
        natureofIRCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Nature of problem"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(natureofIRCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(headerPanel, gridBagConstraints);

        actionPanel.setLayout(new java.awt.GridBagLayout());

        sendRequestBtn.setText("Send Intervention Request(IR)");
        sendRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendRequestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        actionPanel.add(sendRequestBtn, gridBagConstraints);

        clearFormBtn.setText("Clear Form");
        clearFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        actionPanel.add(clearFormBtn, gridBagConstraints);

        closeBtn.setText("Close form");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        actionPanel.add(closeBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        actionPanel.add(spacerLabel, gridBagConstraints);

        refreshBtn.setText("Refresh form");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionPanel.add(refreshBtn, gridBagConstraints);

        closeRequestBtn.setText("Close request");
        closeRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeRequestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionPanel.add(closeRequestBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(actionPanel, gridBagConstraints);

        bodyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Describe the nature of the problem here (Emergency - in 30Mins, Urgent - in 1 Hr, Important -  in 2 hrs, Routine - in 12 Hrs)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(153, 153, 255)));
        bodyPanel.setLayout(new java.awt.GridBagLayout());

        interventionRequestJscrl.setViewportView(interventionRequestEditorPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(interventionRequestJscrl, gridBagConstraints);

        levelButtonGroup.add(emergencyChkbx);
        emergencyChkbx.setText("Emergency");
        emergencyChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        emergencyChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(emergencyChkbx, gridBagConstraints);

        levelButtonGroup.add(urgentChkbx);
        urgentChkbx.setText("Urgent");
        urgentChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        urgentChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(urgentChkbx, gridBagConstraints);

        levelButtonGroup.add(importantChkbx);
        importantChkbx.setText("Important");
        importantChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        importantChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(importantChkbx, gridBagConstraints);

        levelButtonGroup.add(routineChkbx);
        routineChkbx.setSelected(true);
        routineChkbx.setText("Routine");
        routineChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        routineChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(routineChkbx, gridBagConstraints);

        requestTelephoneTxt.setBorder(javax.swing.BorderFactory.createTitledBorder("Tel/Ext"));
        requestTelephoneTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTelephoneTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(requestTelephoneTxt, gridBagConstraints);

        jTabbedPane1.addTab("Intervention Request Panel", bodyPanel);

        followUpPanel.setLayout(new java.awt.GridBagLayout());

        irFollowUpTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT request_id, requisition_department, requisition_section, requisition_nature, requisition_description, ir_source, ir_request_time, ir_level, (SELECT current_actor FROM help_desk_operations WHERE help_desk_operations.request_id = funsoft_help_desk.request_id ORDER BY 1 DESC LIMIT 1) as current_actor, resolved FROM funsoft_help_desk WHERE ir_source = current_user ORDER BY 1"));
        jScrollPane1.setViewportView(irFollowUpTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        followUpPanel.add(jScrollPane1, gridBagConstraints);

        jTabbedPane1.addTab("Intervention Request follow-up panel", followUpPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void departmentCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentCmbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentCmbxActionPerformed

    private void clearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBtnActionPerformed

        this.getContentPane().removeAll();

        this.initComponents();

        this.invalidate();

        this.validate();

        repaint();

        // TODO add your handling code here:
    }//GEN-LAST:event_clearFormBtnActionPerformed

    private void sendRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendRequestBtnActionPerformed
        String IR_LEVEL = "Routine";
        
        if (this.emergencyChkbx.isSelected()){
            IR_LEVEL = "Emergency";
        } else if(this.urgentChkbx.isSelected()){
            IR_LEVEL = "Urgent";
        } else if(this.importantChkbx.isSelected()){
            IR_LEVEL = "Important";
        } else {
            IR_LEVEL = "Routine";
        }
        
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO funsoft_help_desk("
                    + "            requisition_department, requisition_section, requisition_nature, "
                    + "            requisition_description, ir_level, requesitor_telephone)"
                    + "    VALUES (?, ?, ?, "
                    + "            ?, initcap(?), ?)");
            pstmt.setString(1, departmentCmbx.getSelectedItem().toString());
            pstmt.setString(2, sectionCmbx.getSelectedItem().toString());
            pstmt.setString(3, natureofIRCmbx.getSelectedItem().toString());
            pstmt.setString(4, interventionRequestEditorPane.getText());
            pstmt.setString(5, IR_LEVEL);
            pstmt.setString(6, requestTelephoneTxt.getText());
            pstmt.execute();
            javax.swing.JOptionPane.showMessageDialog(this, "Intervention Requested (ICT-IR) registered successfully");
            refreshBtn.doClick();
            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_sendRequestBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
       irFollowUpTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT request_id, requisition_department, requisition_section, requisition_nature, requisition_description, ir_source, ir_request_time, ir_level, (SELECT current_actor FROM help_desk_operations WHERE help_desk_operations.request_id = funsoft_help_desk.request_id ORDER BY 1 DESC LIMIT 1) as current_actor, resolved FROM funsoft_help_desk  WHERE ir_source = current_user ORDER BY 1"));
 
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void requestTelephoneTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTelephoneTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requestTelephoneTxtActionPerformed

    private void closeRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeRequestBtnActionPerformed
        if(Boolean.parseBoolean(irFollowUpTable.getValueAt(irFollowUpTable.getSelectedRow(), 9).toString())){
            try {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE funsoft_help_desk SET resolved = true WHERE request_id::varchar = '"+irFollowUpTable.getValueAt(irFollowUpTable.getSelectedRow(), 0).toString()+"'");
                pstmt.executeUpdate();
                javax.swing.JOptionPane.showMessageDialog(this, "Selected Intervention Request(s) updated as resolved.");
            } catch (SQLException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                            ex.printStackTrace();             //Exceptions.printStackTrace(ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_closeRequestBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPanel;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton clearFormBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton closeRequestBtn;
    private javax.swing.JComboBox departmentCmbx;
    private javax.swing.JCheckBox emergencyChkbx;
    private javax.swing.JPanel followUpPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JCheckBox importantChkbx;
    private javax.swing.JEditorPane interventionRequestEditorPane;
    private javax.swing.JScrollPane interventionRequestJscrl;
    private javax.swing.JTable irFollowUpTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.ButtonGroup levelButtonGroup;
    private javax.swing.JComboBox natureofIRCmbx;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField requestTelephoneTxt;
    private javax.swing.JCheckBox routineChkbx;
    private javax.swing.JComboBox sectionCmbx;
    private javax.swing.JButton sendRequestBtn;
    private javax.swing.JLabel spacerLabel;
    private javax.swing.JCheckBox urgentChkbx;
    // End of variables declaration//GEN-END:variables
}
