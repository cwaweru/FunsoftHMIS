/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.systempartners.reports;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
//import org.openide.util.Exceptions;

/**
 *
 * @author System Partners
 */
public class BillingReportIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    com.afrisoftech.lib.DBObject dbObject;
    int rows, j;
    String invoiceString = null, header = "";
    String query = null;
    com.afrisoftech.lib.PeriodicDates periodicDates = null;
    com.afrisoftech.timeseries.AgeingSeries ageingSeries = null;
    com.afrisoftech.timeseries.DailyAgeing dailySeries = null;
    java.util.Date ageingDates[][] = null;
    int iterations = 0;

    /**
     * Creates new form BillingReportIntfr
     */
    public BillingReportIntfr(java.sql.Connection connDb) {

        connectDB = connDb;
        rows = 0;
        dbObject = new com.afrisoftech.lib.DBObject();
        initComponents();

        //jTabbedPane1.removeTabAt(4);
        //jTabbedPane1.removeTabAt(4);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        openReportBtn = new javax.swing.JButton();
        beginDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        revenueSummaryTbl = new com.afrisoftech.dbadmin.JXTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDetailTbl = new com.afrisoftech.dbadmin.JXTable();

        jLabel4.setText("jLabel4");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Billing Report");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Begin Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        openReportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/CD Cases/Cases without pen/DVDR 3.png"))); // NOI18N
        openReportBtn.setMnemonic('o');
        openReportBtn.setText("Open Report ...");
        openReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(openReportBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(beginDatePicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(endDatePicker, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Cash", "NHIF", "Other Schemes" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel1.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        revenueSummaryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        revenueSummaryTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                revenueSummaryTblMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(revenueSummaryTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jScrollPane6, gridBagConstraints);

        jTabbedPane1.addTab("Summary", jPanel7);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        listDetailTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        listDetailTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDetailTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listDetailTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jTabbedPane1.addTab("Detailed List", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void loadTable(javax.swing.JTable jTable, int tableSize, String[] COLUMNS) {

        System.out.println(java.util.Arrays.toString(COLUMNS));
        DefaultTableModel model = new DefaultTableModel(COLUMNS, 0);
        jTable.setModel(model);

        for (int k = 0; k <= tableSize; k++) {
            model.addRow(new Object[]{null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null});
        }
        jTable.setModel(model);
    }

    public void loadReport() {
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        //String[] COLUMNS = {"Invoice No", "Bed Fees", "Admission Fees", "Nursing Fees", "Pharmacy", "Theatre", "Laboratory", "Doctors Fees", "Supplies", "CCU", "ICU", "HCU", "Nutrition", "NHIF Diff", "Mental Health", "E.N.T", "Orth Tech", "Transport", "Radiology", "physiology fee", "Plaster Technology", "Occupational Theraphy", "Obs", "Caretaker", "Total", "Cash", "Nhif", "Nhif Civil", "Waivers", "Nhif Loss", "MOH", "Individual", "Others Schemes"};
        try {
            int count = 0;
            java.sql.Statement stmtTable1c = connectDB.createStatement();
            java.sql.ResultSet rsetTable1c = stmtTable1c.executeQuery("select count(*)  from pb_activity where  (activity_category ILIKE 'PLID' OR activity_category ILIKE 'I') AND "
                    + "( code IN (SELECT activity_code FROM ac_ledger WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  ) "
                            + " OR code IN (SELECT activity_code FROM (SELECT  pb.activity,ac.activity_code, SUM(ac.debit-ac.credit) as amt from \n"
                                    + "ac_cash_collection ac ,pb_activity pb where ac.date BETWEEN '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' AND '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"'  \n"
                                    + "AND ac.activity_code NOT IN (select code  as main_service from pb_activity where activity_category='PR') AND\n"
                                    + " ac.transaction_type NOT ILIKE 'Banking%' and pb.code = ac.activity_code    GROUP BY pb.activity,ac.activity_code \n"
                                    + "UNION ALL\n"
                                    + "SELECT ac.main_service_,pb.code, SUM(ac.amount_allocated_) AS amt from funsoft_revenue_break_down('"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' , '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"') \n"
                                    + "ac ,pb_activity pb where    UPPER(pb.activity) = UPPER(ac.main_service_)   GROUP BY 1, 2 ) AS foo ) ) ORDER BY 1  ");
                  //  rsetTable1c = stmtTable1c.executeQuery("select count(*)  from pb_activity where  (activity_category ILIKE 'PLID' OR activity_category ILIKE 'I') AND code IN (SELECT activity_code FROM ac_ledger WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  )  ");
            while (rsetTable1c.next()) {
                count = rsetTable1c.getInt(1);
                //count = 2;
            }

            int deptMulttiplier = 3;
            int addedColumns = 6;

            if (!jComboBox1.getSelectedItem().toString().equalsIgnoreCase("All")) {
                deptMulttiplier = 1;
                addedColumns = 4;
            }

            count = count * deptMulttiplier;

            String[] COLUMNS = new String[count + addedColumns];
            COLUMNS[0] = "Date";
            int i = 1;
            System.err.println("select activity from pb_activity where  (activity_category ILIKE 'PLID' OR activity_category ILIKE 'I') AND "
                    + "( code IN (SELECT activity_code FROM ac_ledger WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  ) "
                            + "OR code IN (SELECT activity_code FROM (SELECT  pb.activity,ac.activity_code, SUM(ac.debit-ac.credit) as amt from \n"
                                    + "ac_cash_collection ac ,pb_activity pb where ac.date BETWEEN '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' AND '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"'  \n"
                                    + "AND ac.activity_code NOT IN (select code  as main_service from pb_activity where activity_category='PR') AND\n"
                                    + " ac.transaction_type NOT ILIKE 'Banking%' and pb.code = ac.activity_code    GROUP BY pb.activity,ac.activity_code \n"
                                    + "UNION ALL\n"
                                    + "SELECT ac.main_service_,pb.code, SUM(ac.amount_allocated_) AS amt from funsoft_revenue_break_down('"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' , '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"') \n"
                                    + "ac ,pb_activity pb where    UPPER(pb.activity) = UPPER(ac.main_service_)   GROUP BY 1, 2 ) AS foo ) ) ORDER BY 1 ");
            rsetTable1c = stmtTable1c.executeQuery("select activity from pb_activity where  (activity_category ILIKE 'PLID' OR activity_category ILIKE 'I') AND "
                    + "( code IN (SELECT activity_code FROM ac_ledger WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  ) "
                            + "OR code IN (SELECT activity_code FROM (SELECT  pb.activity,ac.activity_code, SUM(ac.debit-ac.credit) as amt from \n"
                                    + "ac_cash_collection ac ,pb_activity pb where ac.date BETWEEN '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' AND '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"'  \n"
                                    + "AND ac.activity_code NOT IN (select code  as main_service from pb_activity where activity_category='PR') AND\n"
                                    + " ac.transaction_type NOT ILIKE 'Banking%' and pb.code = ac.activity_code    GROUP BY pb.activity,ac.activity_code \n"
                                    + "UNION ALL\n"
                                    + "SELECT ac.main_service_,pb.code, SUM(ac.amount_allocated_) AS amt from funsoft_revenue_break_down('"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' , '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"') \n"
                                    + "ac ,pb_activity pb where    UPPER(pb.activity) = UPPER(ac.main_service_)   GROUP BY 1, 2 ) AS foo ) ) ORDER BY 1  ");
            while (rsetTable1c.next()) {
                System.err.println(">>>>>>>>>>>>>>>>>" + rsetTable1c.getString(1));
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("All")) {
                    COLUMNS[i] = rsetTable1c.getString(1).toUpperCase() + " - Cash";
                    i++;
                    COLUMNS[i] = rsetTable1c.getString(1).toUpperCase() + " - NHIF";
                    i++;
                    COLUMNS[i] = rsetTable1c.getString(1).toUpperCase() + " - Scheme";
                    i++;
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                    COLUMNS[i] = rsetTable1c.getString(1).toUpperCase() + " - Cash";
                    i++;
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("NHIF")) {
                    COLUMNS[i] = rsetTable1c.getString(1).toUpperCase() + " - NHIF";
                    i++;
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Other Schemes")) {
                    COLUMNS[i] = rsetTable1c.getString(1).toUpperCase() + " - Scheme";
                    i++;
                }
            }
            if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("All")) {
                COLUMNS[i] = "Total" + " - Cash";
                i++;
                COLUMNS[i] = "Total" + " - NHIF";
                i++;
                COLUMNS[i] = "Total" + " - Scheme";
                i++;
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                COLUMNS[i] = "Total" + " - Cash";
                i++;
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("NHIF")) {
                COLUMNS[i] = "Total" + " - NHIF";
                i++;
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Other Schemes")) {
                COLUMNS[i] = "Total" + " - Scheme";
                i++;
            }

            COLUMNS[i] = "Exemptions";
            i++;

            COLUMNS[i] = "Waivers";
            i++;

            System.err.println("SELECT DATE_PART('days', AGE('" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "', '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "') )");
            int tableSize = 0;
            rsetTable1c = stmtTable1c.executeQuery("SELECT DATE_PART('days', AGE('" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "', '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "') )  ");
            while (rsetTable1c.next()) {
                tableSize = rsetTable1c.getInt(1);
            }

            loadTable(revenueSummaryTbl, tableSize + 1, COLUMNS);

            iterations = tableSize;//endDatePicker.getDate() - beginDatePicker.getDate();
            ageingSeries = new com.afrisoftech.timeseries.AgeingSeries(1, endDatePicker.getDate());
            dailySeries = new com.afrisoftech.timeseries.DailyAgeing(iterations + 1, endDatePicker.getDate());

            java.lang.Object[][] rangeDates = ageingSeries.getAgeingDateSeries();

            java.lang.Object[][] dailyDates = dailySeries.getAgeingDateSeries();
            double columnTotals[] = new double[rangeDates.length];
            int z = rangeDates.length;

            for (int x = 0; x < rangeDates.length; x++) {
                try {
                    java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
                    com.afrisoftech.lib.DateFormatter dateFormatter = new com.afrisoftech.lib.DateFormatter(dateFormat.parse(rangeDates[x][0].toString().trim()), "MMMM");

                    java.lang.String monthString = dateFormatter.getDateString();

                    com.afrisoftech.lib.DateFormatter dateFormatters = new com.afrisoftech.lib.DateFormatter(dateFormat.parse(rangeDates[x][0].toString().trim()), "yyyy");

                    java.lang.String yearString = dateFormatters.getDateString();
                } catch (java.text.ParseException prs) {
                    prs.printStackTrace();
                }
                j = 0;

                java.lang.Object[] listofAct = this.getListofActivities();
                for (int f = 0; f < listofAct.length; f++) {
                    double dayCash = 0.00;
                    double dayNHIF = 0.00;
                    double dayScheme = 0.00;
                    int pp = 0;
                    System.err.println(">>>>>" + listofAct[f]);
                    revenueSummaryTbl.setValueAt(listofAct[f], f, pp);
                    pp++;
                    //rsetTable1c = stmtTable1c.executeQuery("select activity,code from pb_activity where  (activity_category ILIKE 'PLID' OR activity_category ILIKE 'I') AND code IN (SELECT activity_code FROM ac_ledger WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  )  ORDER BY 1   ");
                    rsetTable1c = stmtTable1c.executeQuery("select activity,code from pb_activity where  (activity_category ILIKE 'PLID' OR activity_category ILIKE 'I') AND "
                    + "( code IN (SELECT activity_code FROM ac_ledger WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  ) "
                            + "OR code IN (SELECT activity_code FROM (SELECT  pb.activity,ac.activity_code, SUM(ac.debit-ac.credit) as amt from \n"
                                    + "ac_cash_collection ac ,pb_activity pb where ac.date BETWEEN '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' AND '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"'  \n"
                                    + "AND ac.activity_code NOT IN (select code  as main_service from pb_activity where activity_category='PR') AND\n"
                                    + " ac.transaction_type NOT ILIKE 'Banking%' and pb.code = ac.activity_code    GROUP BY pb.activity,ac.activity_code \n"
                                    + "UNION ALL\n"
                                    + "SELECT ac.main_service_,pb.code, SUM(ac.amount_allocated_) AS amt from funsoft_revenue_break_down('"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) +"' , '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"') \n"
                                    + "ac ,pb_activity pb where    UPPER(pb.activity) = UPPER(ac.main_service_)   GROUP BY 1, 2 ) AS foo ) ) ORDER BY 1  ");
                    while (rsetTable1c.next()) {
                        double deptDayCash = 0.00;
                        double deptDayNHIF = 0.00;
                        double deptDayScheme = 0.00;

                        java.sql.Statement pstmt2 = connectDB.createStatement();
                        //System.err.println(" select * from funsoft_cash_sales_per_dept('"+listofAct[f]+"'::date,'"+listofAct[f]+"'::date,'"+rsetTable1c.getString(2)+"')");
                        java.sql.ResultSet rs2 = pstmt2.executeQuery("  select * from funsoft_cash_sales_per_dept('" + listofAct[f] + "'::date,'" + listofAct[f] + "'::date,'" + rsetTable1c.getString(2) + "')");

                        while (rs2.next()) {
                            deptDayCash = rs2.getDouble(1);

                        }

                        //funsoft_nhif_credit_sales_per_dept
                        rs2 = pstmt2.executeQuery("  select * from funsoft_nhif_credit_sales_per_dept('" + listofAct[f] + "'::date,'" + listofAct[f] + "'::date,'" + rsetTable1c.getString(1) + "')");
                        while (rs2.next()) {
                            deptDayNHIF = rs2.getDouble(1);

                        }

                        rs2 = pstmt2.executeQuery("  select * from funsoft_not_nhif_credit_sales_per_dept('" + listofAct[f] + "'::date,'" + listofAct[f] + "'::date,'" + rsetTable1c.getString(1) + "')");
                        while (rs2.next()) {
                            deptDayScheme = rs2.getDouble(1);

                        }

                        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("All")) {
                            revenueSummaryTbl.setValueAt(deptDayCash, f, pp);
                            dayCash += deptDayCash;
                            pp++;
                            revenueSummaryTbl.setValueAt(deptDayNHIF, f, pp);
                            dayNHIF += deptDayNHIF;
                            pp++;
                            revenueSummaryTbl.setValueAt(deptDayScheme, f, pp);
                            dayScheme += deptDayScheme;
                            pp++;
                        }else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                            revenueSummaryTbl.setValueAt(deptDayCash, f, pp);
                            dayCash += deptDayCash;
                            pp++;
                        }else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("NHIF")) {
                            revenueSummaryTbl.setValueAt(deptDayNHIF, f, pp);
                            dayNHIF += deptDayNHIF;
                            pp++;
                        }else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Other Schemes")) {
                            revenueSummaryTbl.setValueAt(deptDayScheme, f, pp);
                            dayScheme += deptDayScheme;
                            pp++;
                        }

                    }

                    if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("All")) {
                        revenueSummaryTbl.setValueAt(dayCash, f, pp);
                        pp++;
                        revenueSummaryTbl.setValueAt(dayNHIF, f, pp);
                        pp++;
                        revenueSummaryTbl.setValueAt(dayScheme, f, pp);
                        pp++;
                    }else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                        revenueSummaryTbl.setValueAt(dayCash, f, pp);
                        pp++;
                    }else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("NHIF")) {
                        revenueSummaryTbl.setValueAt(dayNHIF, f, pp);
                        pp++;
                    }else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Other Schemes")) {
                        revenueSummaryTbl.setValueAt(dayScheme, f, pp);
                        pp++;
                    }

                    double waiver = 0.00;
                    double exemption = 0.00;
                    java.sql.PreparedStatement psetwav = connectDB.prepareStatement("select sum(debit-credit) FROM ac_ledger WHERE transaction_time::date = '" + listofAct[f] + "'  AND transaction_type ilike 'waiver%'");
                    java.sql.ResultSet rsetwav = psetwav.executeQuery();

                    while (rsetwav.next()) {
                        waiver = rsetwav.getDouble(1);
                    }

                    java.sql.PreparedStatement psetwn2 = connectDB.prepareStatement("select sum(debit-credit) FROM ac_ledger WHERE transaction_time::date = '" + listofAct[f] + "'  AND transaction_type ilike 'exemption%'");
                    java.sql.ResultSet rsetwn2 = psetwn2.executeQuery();

                    while (rsetwn2.next()) {
                        exemption = rsetwn2.getDouble(1);
                    }

                    revenueSummaryTbl.setValueAt(waiver, f, pp);
                    pp++;
                    revenueSummaryTbl.setValueAt(exemption, f, pp);
                    pp++;

                    j++;
                }
            }

            double total = 0.0;

            revenueSummaryTbl.setValueAt("Total", j, 0);
            for (int h = 1; h < revenueSummaryTbl.getColumnCount(); h++) {
                revenueSummaryTbl.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(revenueSummaryTbl, h), j, h);
            }

        } catch (SQLException ex) {
            Logger.getLogger(BillingReportIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }
    private void openReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openReportBtnActionPerformed

        loadReport();
        // TODO add your handling code here:
    }//GEN-LAST:event_openReportBtnActionPerformed

    private void listDetailTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDetailTblMouseClicked
        // TODO add your handling code here:

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

    }//GEN-LAST:event_listDetailTblMouseClicked

    private void revenueSummaryTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_revenueSummaryTblMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_revenueSummaryTblMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

    }//GEN-LAST:event_jLabel4MouseClicked
    public java.lang.Object[] getListofActivities() {
        int interval = 0;
        java.lang.Object[][] rangeDates = dailySeries.getAgeingDateSeries();
        java.lang.Object[][] monthDates = ageingSeries.getAgeingDateSeries();

        java.lang.Object[] listofActivities = null;

        java.util.Vector listActVector = new java.util.Vector(1, 1);

        //for (int k = 0;  k < monthDates.length; k++){
        for (int k = monthDates.length - 1; k >= 0; k--) {

            for (int t = 0; t < rangeDates.length; t++) {

                listActVector.addElement(rangeDates[t][k]);

            }
        }

        listofActivities = listActVector.toArray();
        System.out.println("Done list of activities ...");
        return listofActivities;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker beginDatePicker;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable listDetailTbl;
    private javax.swing.JButton openReportBtn;
    private javax.swing.JTable revenueSummaryTbl;
    // End of variables declaration//GEN-END:variables
}
