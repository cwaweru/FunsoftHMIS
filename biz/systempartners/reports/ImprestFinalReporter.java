/*
 * ReportIntfr.java
 *
 * Created on July 6, 2008, 4:40 PM
 */

package biz.systempartners.reports;

import java.awt.Cursor;

/**
 *
 * @author  funsoft
 */
public class ImprestFinalReporter extends javax.swing.JInternalFrame {
   
    java.sql.Connection connectDB = null;
    
    
    /** Creates new form ReportIntfr */
    public ImprestFinalReporter(java.sql.Connection connDb) {
        connectDB = connDb;
        initComponents();
        
        //loadReport();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        searchStaffTxt = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTablestaff = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        imprestHolderTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        paymentTypeCmb = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        reloadReportBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        balanceTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        totalAmountSurrendered = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        totalAmountIssued = new javax.swing.JTextField();
        reportTabbedPane = new javax.swing.JTabbedPane();
        reportBodyPanel = new javax.swing.JPanel();
        reportBodyJscrollPane = new javax.swing.JScrollPane();
        reportBodyTable = new com.afrisoftech.dbadmin.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        detailedReportTable = new com.afrisoftech.dbadmin.JTable();
        jPanel2 = new javax.swing.JPanel();
        namelabel = new javax.swing.JLabel();
        voucherLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        endDateLbl = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        endDate = new com.afrisoftech.lib.DatePicker();
        startDate = new com.afrisoftech.lib.DatePicker();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchStaffTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchStaffTxtCaretUpdate(evt);
            }
        });
        searchStaffTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStaffTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(searchStaffTxt, gridBagConstraints);

        jSearchTablestaff.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTablestaff.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTablestaff.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTablestaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTablestaffMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTablestaff);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton41, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Staff Statement");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        headerPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Stafff Number/Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(jLabel1, gridBagConstraints);

        imprestHolderTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                imprestHolderTxtCaretUpdate(evt);
            }
        });
        imprestHolderTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprestHolderTxtMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(imprestHolderTxt, gridBagConstraints);

        jButton1.setText("clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        headerPanel.add(jButton1, gridBagConstraints);

        paymentTypeCmb.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        paymentTypeCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Payment Type", "Temporary Imprest", "Standing Imprest", "Personal Claims", "Salary Advance", "Petty Cash Payments" }));
        paymentTypeCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paymentTypeCmbItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(paymentTypeCmb, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        headerPanel.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        headerPanel.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(headerPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        closeBtn.setMnemonic('l');
        closeBtn.setText("Close Reporter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeBtn, gridBagConstraints);

        reloadReportBtn.setMnemonic('r');
        reloadReportBtn.setText("Reload report");
        reloadReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(reloadReportBtn, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Balance Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jLabel2, gridBagConstraints);

        balanceTxt.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 12.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(balanceTxt, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Total Surrendered");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jLabel3, gridBagConstraints);

        totalAmountSurrendered.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 12.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(totalAmountSurrendered, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Total Amount Issued");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jLabel4, gridBagConstraints);

        totalAmountIssued.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 12.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(totalAmountIssued, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(buttonPanel, gridBagConstraints);

        reportBodyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));
        reportBodyPanel.setLayout(new java.awt.GridBagLayout());

        reportBodyTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        reportBodyTable.setForeground(new java.awt.Color(0, 0, 255));
        reportBodyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        javax.swing.table.TableColumn hyperlinkEditor = reportBodyTable.getColumnModel().getColumn(3);
        com.afrisoftech.lib.HyperLinkCellEditor hyperlinkCellEditor = new  com.afrisoftech.lib.HyperLinkCellEditor(new org.jdesktop.swingx.JXHyperlink(), reportBodyTable);
        hyperlinkEditor.setCellEditor(hyperlinkCellEditor);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer1 = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer1.setHorizontalAlignment(cellRenderer1.TRAILING);
        hyperlinkEditor.setCellRenderer(cellRenderer1);
        reportBodyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportBodyTableMouseClicked(evt);
            }
        });
        reportBodyJscrollPane.setViewportView(reportBodyTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        reportBodyPanel.add(reportBodyJscrollPane, gridBagConstraints);
        reportBodyPanel.add(jTabbedPane1, new java.awt.GridBagConstraints());

        reportTabbedPane.addTab("All imprest Report", reportBodyPanel);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        detailedReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        detailedReportTable.setEnabled(false);
        jScrollPane1.setViewportView(detailedReportTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        reportTabbedPane.addTab("Detailed Individual eport", jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(reportTabbedPane, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        namelabel.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        namelabel.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(namelabel, gridBagConstraints);

        voucherLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        voucherLabel.setForeground(new java.awt.Color(204, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(voucherLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Start Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel5, gridBagConstraints);

        endDateLbl.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(endDateLbl, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Download.png"))); // NOI18N
        jButton2.setText("Load");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel5.add(jButton2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(endDate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(startDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 6.0;
        getContentPane().add(jPanel5, gridBagConstraints);

        setBounds(0, 0, 805, 499);
    }// </editor-fold>//GEN-END:initComponents

    private void reloadReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadReportBtnActionPerformed
       
        loadReportFromMemos();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_reloadReportBtnActionPerformed

    private void reportBodyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportBodyTableMouseClicked
        String selectedVoucher = null;
        selectedVoucher = reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2).toString();
        if(selectedVoucher.contains("T_IMPREST") || selectedVoucher.contains("PETT_REQ") || selectedVoucher.contains("S_IMPREST")){
        totalAmountIssued.setText("0.00");
      totalAmountSurrendered.setText("0.00");
      balanceTxt.setText("0.00");
detailedReportTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(select distinct date , invoice_no as Serial_No, item as particulars, quantity_received::character varying as Qty_Delivered, debit as amount from st_stock_cardex where order_no  = '"+reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)+"') union " +
"(select voucher_date, requisition_no, particular, quantity, debit as amount from ac_unstockable_items where voucher_no = '"+reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)+"' group by voucher_date, requisition_no, particular, quantity, debit having sum(debit-credit) >0) union " +
"(select date, description, payee, voucher_no, credit as amount from ac_petty_cash where activity =  '"+reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)+"' and activity ilike 'S%' group by date, description, payee, voucher_no, credit having sum(credit - debit) >0 order by date)" )); 
          namelabel.setText(reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 0).toString());
          voucherLabel.setText(reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2).toString());
          reportTabbedPane.setSelectedIndex(1); 
          double issuedSingleVoucher = 0; 
          double surrenderedSingleVoucher = 0; 
          double balSingleVoucher = 0;
          String activity = null;   
 
 try{
        java.sql.Statement stmtActivity = connectDB.createStatement();
        java.sql.ResultSet rsetActivity = stmtActivity.executeQuery("select activity FROM ac_petty_cash where voucher_no = '"+reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)+"' and (activity = '"+reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)+"' and activity ilike 'S_IMP%')");
                
            while (rsetActivity.next()){
                activity = rsetActivity.getString(1);
            }
          if(activity == reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)){
          java.sql.Statement stmtStanding = connectDB.createStatement();
        java.sql.ResultSet rsetStanding = stmtStanding.executeQuery("select sum(debit) as issued, sum(credit) FROM ac_petty_cash where activity = '"+reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)+"'");
                
            while (rsetStanding.next()){
                issuedSingleVoucher = rsetStanding.getDouble(1);
                surrenderedSingleVoucher = rsetStanding.getDouble(2);
                balSingleVoucher = issuedSingleVoucher - surrenderedSingleVoucher;
                totalAmountIssued.setText(rsetStanding.getObject(1).toString());
                totalAmountSurrendered.setText(rsetStanding.getObject(2).toString());
                balanceTxt.setText(java.lang.String.valueOf(balSingleVoucher));
                
            }    
          }else{
        java.sql.Statement stmtBalance = connectDB.createStatement();
        java.sql.ResultSet rsetBalance = stmtBalance.executeQuery("select sum(debit) as issued, sum(credit) FROM ac_petty_cash where voucher_no = '"+reportBodyTable.getModel().getValueAt(reportBodyTable.getSelectedRow(), 2)+"'");
                
            while (rsetBalance.next()){
                issuedSingleVoucher = rsetBalance.getDouble(1);
                surrenderedSingleVoucher = rsetBalance.getDouble(2);
                balSingleVoucher = issuedSingleVoucher - surrenderedSingleVoucher;
                totalAmountIssued.setText(rsetBalance.getObject(1).toString());
                totalAmountSurrendered.setText(rsetBalance.getObject(2).toString());
                balanceTxt.setText(java.lang.String.valueOf(balSingleVoucher));
                
            }
          }  

        }
        catch(Exception e){
         e.printStackTrace();
        }
        }
    }//GEN-LAST:event_reportBodyTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      imprestHolderTxt.setText("");
      namelabel.setText("");
     voucherLabel.setText("");
     loadReportFromMemos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        imprestHolderTxt.setText("");
        namelabel.setText("");
        voucherLabel.setText("");
        paymentTypeCmb.setSelectedIndex(0);
        //loadReport();
        loadReportFromMemos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void imprestHolderTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_imprestHolderTxtCaretUpdate
//        namelabel.setText("");
//       voucherLabel.setText("");
//        totalAmountIssued.setText("0.00");
//      totalAmountSurrendered.setText("0.00");
//      balanceTxt.setText("0.00");
//      if(imprestHolderTxt.getText().length()>2){
// if(paymentTypeCmb.getSelectedIndex()==0){
//         reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT dealer ,  transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no as staff_no, sum(debit) as debit, sum(credit) as credit, reconciled " +
//"FROM ac_ledger where (voucher_no ilike '%SAL_ADV%' OR voucher_no ilike '%P_IMPREST_REQ%') and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (dealer ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or patient_no ILIKE '%"+imprestHolderTxt.getText().toString()+"%') group by dealer , transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no, reconciled) UNION" +
//"(SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//" FROM ac_petty_cash where (voucher_no ilike '%t_imprest%' or voucher_no ilike '%s_imprest%' or voucher_no ilike '%pett%' or voucher_no ilike '%pers%') and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (payee ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or staff_veh  ILIKE '%"+imprestHolderTxt.getText().toString()+"%')" +
//"group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC) "));
//        
//        }else if (paymentTypeCmb.getSelectedIndex()==1){
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//        " FROM ac_petty_cash where (voucher_no ilike '%t_imprest%' or voucher_no ilike '%pett%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (payee ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or staff_veh  ILIKE '%"+imprestHolderTxt.getText().toString()+"%')" +
//        " and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC"));    
//        }else if (paymentTypeCmb.getSelectedIndex()==2){
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//        " FROM ac_petty_cash where (voucher_no ilike '%s_imprest%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (payee ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or staff_veh ILIKE '%"+imprestHolderTxt.getText().toString()+"%')" +
//        " and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC"));    
//        }else if (paymentTypeCmb.getSelectedIndex()==3){
//reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT dealer ,  transaction_type, voucher_no, date, shift_no," +
//" service_type, patient_no, sum(debit) as debit, sum(credit) as credit, reconciled " +
//"FROM ac_ledger where voucher_no ilike '%P_IMPREST_REQ%' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (dealer ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or patient_no ILIKE '%"+imprestHolderTxt.getText().toString()+"%') group by dealer , transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no, reconciled " +
//"union SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared " +
//"FROM ac_petty_cash where (voucher_no ilike '%PERS_REQ%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (payee ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or staff_veh ILIKE '%"+imprestHolderTxt.getText().toString()+"%') group by payee, description, voucher_no, date, department, status, staff_veh, checked_surrender"));    
//        }else if (paymentTypeCmb.getSelectedIndex()==4){
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT dealer ,  transaction_type, voucher_no, date, shift_no," +
//" service_type, patient_no, sum(debit) as debit, sum(credit) as credit, reconciled " +
//"FROM ac_ledger where voucher_no ilike '%SAL_ADV%' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (dealer ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or patient_no ILIKE '%"+imprestHolderTxt.getText().toString()+"%') group by dealer , transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no, reconciled " +
//"union SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared " +
//"FROM ac_petty_cash where (voucher_no ilike '%SAL_PETT%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (payee ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or staff_veh ILIKE '%"+imprestHolderTxt.getText().toString()+"%') group by payee, description, voucher_no, date, department, status, staff_veh, checked_surrender"));    
//        }else if (paymentTypeCmb.getSelectedIndex()==5){
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//        " FROM ac_petty_cash where (voucher_no ilike '%pett%' or voucher_no ilike '%pett_adv%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') and  (payee ILIKE '%"+imprestHolderTxt.getText().toString()+"%' or staff_veh ILIKE '%"+imprestHolderTxt.getText().toString()+"%')" +
//        " and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC"));    
//        }
//        namelabel.setText(reportBodyTable.getModel().getValueAt(0, 0).toString());
//        voucherLabel.setText(reportBodyTable.getModel().getValueAt(0, 2).toString());
//        callSumOfFields();
//      }
    }//GEN-LAST:event_imprestHolderTxtCaretUpdate

    private void paymentTypeCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paymentTypeCmbItemStateChanged
      totalAmountIssued.setText("0.00");
      totalAmountSurrendered.setText("0.00");
      balanceTxt.setText("0.00");
      
      if(imprestHolderTxt.getText().length()>0){
if(paymentTypeCmb.getSelectedIndex()==0){

reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric ,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where dealer_code = '"+imprestHolderTxt.getText()+"' and (voucher_no ilike '%IMPREST%' or voucher_no ilike 'SAL_ADV%' OR dealer_code ilike 'Id_no:%') and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount ,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where dealer_code = '"+imprestHolderTxt.getText()+"' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));
            
        }else if (paymentTypeCmb.getSelectedIndex()==1){
 reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric ,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where dealer_code = '"+imprestHolderTxt.getText()+"' and voucher_no ilike 'T_IMPREST%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount ,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where dealer_code = '"+imprestHolderTxt.getText()+"' and requisition_no ilike 'PETT_REQ%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));

        }else if (paymentTypeCmb.getSelectedIndex()==2){
            reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where dealer_code = '"+imprestHolderTxt.getText()+"' and voucher_no ilike 'S_IMPREST%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where dealer_code = '"+imprestHolderTxt.getText()+"' and reason ilike '%Standing Imprest%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));

        }else if (paymentTypeCmb.getSelectedIndex()==3){//personal claim
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no FROM ac_bills where dealer_code = '"+imprestHolderTxt.getText()+"' and voucher_no ilike 'P_IMPREST%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no FROM ac_petty_cash_requisition where dealer_code = '"+imprestHolderTxt.getText()+"' and requisition_no ilike 'PERS_REQ%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));            

        }else if (paymentTypeCmb.getSelectedIndex()==4){//salary advance
            
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no FROM ac_bills where dealer_code = '"+imprestHolderTxt.getText()+"' and voucher_no ilike 'SAL_ADV%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no FROM ac_petty_cash_requisition where dealer_code = '"+imprestHolderTxt.getText()+"' and requisition_no ilike 'SAL_PETT%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));            

        }else if (paymentTypeCmb.getSelectedIndex()==5){
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB," " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
" dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount FROM ac_petty_cash_requisition where dealer_code = '"+imprestHolderTxt.getText()+"' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));            

        }          
      }else{
        if(paymentTypeCmb.getSelectedIndex()==0){
//         reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT dealer ,  transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no, sum(debit) as debit, sum(credit) as credit, reconciled " +
//"FROM ac_ledger where (voucher_no ilike '%SAL_ADV%' OR voucher_no ilike '%P_IMPREST_REQ%') and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by dealer , transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no, reconciled) UNION" +
//"(SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//" FROM ac_petty_cash where (voucher_no ilike '%t_imprest%' or voucher_no ilike '%s_imprest%' or voucher_no ilike '%pett%' or voucher_no ilike '%pers%') and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"')" +
//"group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC)"));
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric ,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where (voucher_no ilike '%IMPREST%' or voucher_no ilike 'SAL_ADV%' OR dealer_code ilike 'Id_no:%') and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount as surrendered_amount,debit-surrendered_amount as Unsurrendered_Bal FROM ac_petty_cash_requisition where (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));
            
        }else if (paymentTypeCmb.getSelectedIndex()==1){
 reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric ,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where voucher_no ilike 'T_IMPREST%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where requisition_no ilike 'PETT_REQ%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//        " FROM ac_petty_cash where (voucher_no ilike '%t_imprest%' or voucher_no ilike '%pett%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') " +
//        " and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC"));    
        }else if (paymentTypeCmb.getSelectedIndex()==2){
            reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric ,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where voucher_no ilike 'S_IMPREST%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where reason ilike '%Standing Imprest%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//        " FROM ac_petty_cash where (voucher_no ilike '%s_imprest%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') " +
//        " and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC"));    
        }else if (paymentTypeCmb.getSelectedIndex()==3){
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric ,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where voucher_no ilike 'P_IMPREST%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where requisition_no ilike 'PERS_REQ%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));            
//reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT dealer ,  transaction_type, voucher_no, date, shift_no," +
//" service_type, patient_no, sum(debit) as debit, sum(credit) as credit, reconciled " +
//"FROM ac_ledger where voucher_no ilike '%P_IMPREST_REQ%' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by dealer , transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no, reconciled " +
//"union SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared " +
//"FROM ac_petty_cash where (voucher_no ilike '%PERS_REQ%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, voucher_no, date, department, status, staff_veh, checked_surrender"));    
        }else if (paymentTypeCmb.getSelectedIndex()==4){
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric  ,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where voucher_no ilike 'SAL_ADV%' and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount ,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where requisition_no ilike 'SAL_PETT%' and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));            
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT dealer ,  transaction_type, voucher_no, date, shift_no," +
//" service_type, patient_no, sum(debit) as debit, sum(credit) as credit, reconciled " +
//"FROM ac_ledger where voucher_no ilike '%SAL_ADV%' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by dealer , transaction_type, voucher_no, date, shift_no," +
//"service_type, patient_no, reconciled " +
//"union SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared " +
//"FROM ac_petty_cash where (voucher_no ilike '%SAL_PETT%' ) and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, voucher_no, date, department, status, staff_veh, checked_surrender"));    
        }else if (paymentTypeCmb.getSelectedIndex()==5){
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB," " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
" dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount ,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));            
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
//        " FROM ac_petty_cash where (voucher_no ilike '%pett%' or voucher_no ilike '%pett_adv%') and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') " +
//        " and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC"));    
        }
//        namelabel.setText(reportBodyTable.getModel().getValueAt(0, 0).toString());
//        voucherLabel.setText(reportBodyTable.getModel().getValueAt(0, 2).toString());
      }
        callSumOfFields();
    }//GEN-LAST:event_paymentTypeCmbItemStateChanged

    private void searchStaffTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchStaffTxtCaretUpdate
        if (this.searchStaffTxt.getCaretPosition() < 1) {
            System.out.print("Nothing");
        } else {
     //(select distinct dealer_code as employee_no, dealer as employee_name from ac_bills where dealer_code ilike '%%' or dealer ilike '%%') union (select distinct dealer_code as employee_no, payee as employee_name from ac_petty_cash_requisition where dealer_code ilike '%%' or payee ilike '%%')        
    jSearchTablestaff.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, 
     "(SELECT distinct employee_no, first_name||' '||last_name as name FROM master_file WHERE first_name||' '||middle_name||' '||last_name ilike  '%"+searchStaffTxt.getText().toUpperCase()+"%' \n" +
"and employee_no in \n" +
"(SELECT dealer_code FROM ac_bills union select dealer_code from ac_petty_cash_requisition ) \n" +
"union \n" +
"SELECT dealer_code,dealer FROM ac_bills WHERE dealer ilike  '%"+searchStaffTxt.getText().toUpperCase()+"%' or dealer_code ilike  '%"+searchStaffTxt.getText().toUpperCase()+"%'\n" +
"union \n" +
"select dealer_code,payee from ac_petty_cash_requisition WHERE payee ilike  '%"+searchStaffTxt.getText().toUpperCase()+"%' or dealer_code ilike  '%"+searchStaffTxt.getText().toUpperCase()+"%') order by 2 "));

    jSearchScrollPane.setViewportView(jSearchTablestaff);
           

        }           // Add your handling code here:
    }//GEN-LAST:event_searchStaffTxtCaretUpdate

    private void searchStaffTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStaffTxtActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_searchStaffTxtActionPerformed

    private void jSearchTablestaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTablestaffMouseClicked

        paymentTypeCmb.setSelectedIndex(0);
        namelabel.setText(jSearchTablestaff.getValueAt(jSearchTablestaff.getSelectedRow(), 1).toString());
        voucherLabel.setText(jSearchTablestaff.getValueAt(jSearchTablestaff.getSelectedRow(), 0).toString());
        imprestHolderTxt.setText(jSearchTablestaff.getValueAt(jSearchTablestaff.getSelectedRow(), 0).toString());
        
        
        
reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,""
        + "(SELECT dealer, description, voucher_no, voucher_date, reason,  dealer_code, credit as raised_Amount, "
        + "debit as paid_amount, approved, document_no,surrender_amount::numeric ,debit-surrender_amount::numeric as Unsurrendered_Bal"
        + " FROM ac_bills where (voucher_no ilike '%IMPREST%' or voucher_no ilike 'SAL_ADV%' OR dealer_code ilike 'Id_no:%') and dealer_code = '"+jSearchTablestaff.getValueAt(jSearchTablestaff.getSelectedRow(), 0).toString()+"' "
        + "and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union "
        + "(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason,   "
        + "dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, "
        + "surrendered_amount::numeric as surrendered_amount,debit-surrendered_amount::numeric as Unsurrendered_Bal "
        + "FROM ac_petty_cash_requisition where dealer_code = '"+jSearchTablestaff.getValueAt(jSearchTablestaff.getSelectedRow(), 0).toString()+"' "
        + "and (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required)"));
        callSumOfFields();
        //  this.populateTable1(jTextField9.getText());
        this.jSearchDialog.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTablestaffMouseClicked
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.imprestHolderTxt.getLocationOnScreen();

        jSearchDialog.setSize(600, 200);

        jSearchDialog.setLocation(point);

        jSearchDialog.setVisible(true);
    }
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void imprestHolderTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprestHolderTxtMouseClicked
        // TODO add your handling code here:
        searchButton2Clicked();
    }//GEN-LAST:event_imprestHolderTxtMouseClicked
    private void callSumOfFields(){
    totalAmountIssued.setText(String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable,7))));
   totalAmountSurrendered.setText(String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable,10))));
   balanceTxt.setText(String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable,11))));
//    double t =    Double.parseDouble(totalAmountIssued.getText().toString().replace(",", ""))-Double.parseDouble(totalAmountSurrendered.getText().toString().replace(",", ""));
//    balanceTxt.setText(String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(t)));
          
    }
    private void loadReportFromMemos(){
    totalAmountIssued.setText("0.00");
     totalAmountSurrendered.setText("0.00");
     reportTabbedPane.setSelectedIndex(0);
     imprestHolderTxt.setText("");
     namelabel.setText("");
     voucherLabel.setText(""); 
     reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer, description, voucher_no, voucher_date, reason, " +
" dealer_code, credit as raised_Amount, debit as paid_amount, approved, document_no,surrender_amount::numeric,debit-surrender_amount::numeric as Unsurrendered_Bal FROM ac_bills where (voucher_no ilike '%IMPREST%' or voucher_no ilike 'SAL_ADV%' OR dealer_code ilike 'Id_no:%') and (voucher_date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by voucher_date) union " +
"(SELECT payee, reason as description, requisition_no, date_required as voucher_date,description as reason, " +
"  dealer_code, credit as raised_amount, debit as paid_amount,approved,document_no, surrendered_amount::numeric as surrendered_amount,debit-surrendered_amount::numeric as Unsurrendered_Bal FROM ac_petty_cash_requisition where (date_required between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') order by date_required) "));
    callSumOfFields();
    }
    private void loadReport() {
        try{
     totalAmountIssued.setText("0.00");
     totalAmountSurrendered.setText("0.00");
     reportTabbedPane.setSelectedIndex(0);
     imprestHolderTxt.setText("");
     namelabel.setText("");
     voucherLabel.setText("");
  reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT dealer,transaction_type, voucher_no, date, shift_no," +
"service_type, patient_no, sum(debit) as debit, sum(credit) as credit, reconciled " +
"FROM ac_ledger where (voucher_no ilike '%SAL_ADV%' OR voucher_no ilike '%P_IMPREST_REQ%') and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"') group by dealer , transaction_type, voucher_no, date, shift_no," +
"service_type, patient_no, reconciled) UNION" +
"(SELECT payee, description, voucher_no, date, department, status, staff_veh, sum(debit) as Issued, sum(credit) as surrendered, checked_surrender as Cleared" +
" FROM ac_petty_cash where (voucher_no ilike '%t_imprest%' or voucher_no ilike '%s_imprest%' or voucher_no ilike '%pett%' or voucher_no ilike '%pers%') and status != 'Payment Done' and (date between '"+startDate.getDate()+"' and '"+endDate.getDate()+"')" +
"group by payee, description, debit , credit , voucher_no, date,  department, status, staff_veh, checked_surrender  order by payee, date ASC, debit DESC) "));
  callSumOfFields();
        }catch(Exception e){
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField balanceTxt;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTable detailedReportTable;
    private com.afrisoftech.lib.DatePicker endDate;
    private javax.swing.JLabel endDateLbl;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JTextField imprestHolderTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton51;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JTable jSearchTablestaff;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel namelabel;
    private javax.swing.JComboBox paymentTypeCmb;
    private javax.swing.JButton reloadReportBtn;
    public static javax.swing.JScrollPane reportBodyJscrollPane;
    public static javax.swing.JPanel reportBodyPanel;
    public static javax.swing.JTable reportBodyTable;
    private javax.swing.JTabbedPane reportTabbedPane;
    private javax.swing.JTextField searchStaffTxt;
    private com.afrisoftech.lib.DatePicker startDate;
    private javax.swing.JTextField totalAmountIssued;
    private javax.swing.JTextField totalAmountSurrendered;
    private javax.swing.JLabel voucherLabel;
    // End of variables declaration//GEN-END:variables
    
}
