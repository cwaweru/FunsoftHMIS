/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.systempartners.reports;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.openide.util.Exceptions;

/**
 *
 * @author System Partners
 */
public class OPBillingReportIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    com.afrisoftech.lib.DBObject dbObject;
    int rows, j;
    String invoiceString = null, header = "";
    String query = null;

    /**
     * Creates new form BillingReportIntfr
     */
    public OPBillingReportIntfr(java.sql.Connection connDb) {

        connectDB = connDb;
        rows = 0;
        dbObject = new com.afrisoftech.lib.DBObject();
        initComponents();

       // jTabbedPane1.removeTabAt(4);
        //jTabbedPane1.removeTabAt(4);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        glsymmary = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        openReportBtn = new javax.swing.JButton();
        beginDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        departmentsymmary = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new com.afrisoftech.dbadmin.JXTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JXTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.afrisoftech.dbadmin.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new com.afrisoftech.dbadmin.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new com.afrisoftech.dbadmin.JTable();
        jLabel4 = new javax.swing.JLabel();
        waitingclinicscmbx = new javax.swing.JComboBox();
        paymentModeLbl1 = new javax.swing.JLabel();
        paymentModeCmbx = new javax.swing.JComboBox<>();

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-All Wards-' UNION select ward_name from hp_wards  UNION select 'Farewell Home' from hp_wards order by 1"));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Wards");

        buttonGroup1.add(glsymmary);
        glsymmary.setText("Summary(GL Code)");
        glsymmary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glsymmaryActionPerformed(evt);
            }
        });

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Billing Report");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Begin Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        openReportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/CD Cases/Cases without pen/DVDR 3.png"))); // NOI18N
        openReportBtn.setMnemonic('o');
        openReportBtn.setText("Open Report ...");
        openReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(openReportBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(beginDatePicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(endDatePicker, gridBagConstraints);

        buttonGroup1.add(departmentsymmary);
        departmentsymmary.setText("Summary (Departmental)");
        departmentsymmary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentsymmaryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(departmentsymmary, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable6MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jScrollPane6, gridBagConstraints);

        jTabbedPane1.addTab("Summary", jPanel7);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Patient Count");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jPanel8, gridBagConstraints);

        jTabbedPane1.addTab("Invoices", jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane2, gridBagConstraints);

        jTabbedPane1.addTab("Services Count", jPanel3);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jScrollPane3, gridBagConstraints);

        jTabbedPane1.addTab("Services", jPanel4);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel5.add(jScrollPane4, gridBagConstraints);

        jLabel4.setText("Choose Clinic");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel4, gridBagConstraints);

        waitingclinicscmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct UPPER(clinics) FROM pb_clinics ORDER BY 1 asc"));
        waitingclinicscmbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                waitingclinicscmbxItemStateChanged(evt);
            }
        });
        waitingclinicscmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitingclinicscmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(waitingclinicscmbx, gridBagConstraints);

        paymentModeLbl1.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(paymentModeLbl1, gridBagConstraints);

        paymentModeCmbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--ALL--", "Cash", "Scheme" }));
        paymentModeCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentModeCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(paymentModeCmbx, gridBagConstraints);

        jTabbedPane1.addTab("Revenue per Clinic", jPanel5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void loadTable(javax.swing.JTable jTable, int tableSize, String[] COLUMNS) {

        DefaultTableModel model = new DefaultTableModel(COLUMNS, 0);
        jTable.setModel(model);

        for (int k = 0; k < tableSize; k++) {
            model.addRow(new Object[]{null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null});
        }
        jTable.setModel(model);
    }

    public void loadReport() {
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        String[] COLUMNS = {"Invoice No", "Bed Fees", "Admission Fees", "Nursing Fees", "Pharmacy", "Theatre", "Laboratory", "Doctors Fees", "Supplies", "CCU", "ICU", "HCU", "Nutrition", "NHIF Diff", "Mental Health", "E.N.T", "Orth Tech", "Transport", "Radiology", "physiology fee", "Plaster Technology", "Occupational Theraphy", "Obs", "Caretaker", "Total", "Cash", "Nhif", "Nhif Civil", "Waivers", "Nhif Loss", "MOH", "Individual", "Others Schemes"};
        try {
            java.sql.Statement stmtTable1c = connectDB.createStatement();
            java.sql.ResultSet rsetTable1c = stmtTable1c.executeQuery("select invoice_no from hp_admission where ward='" + jComboBox1.getSelectedItem().toString() + "' and (discharge_date ::date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "') ");
            j = 0;
            double total = 0.0;
            java.sql.Statement stmtTable1cu = connectDB.createStatement();
            java.sql.ResultSet rsetTable1cu = stmtTable1cu.executeQuery("select count(*)  from hp_admission where ward='" + jComboBox1.getSelectedItem().toString() + "' and (discharge_date ::date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "') ");
            if (rsetTable1cu.next()) {
                loadTable(jTable1, rsetTable1cu.getInt(1) + 1, COLUMNS);

            }

            while (rsetTable1c.next()) {

                jTable1.setValueAt(dbObject.getDBObject(rsetTable1c.getString(1), "-"), j, 0);
                System.out.println(rsetTable1c.getString(1));

                //get bedcharges 
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (service='Bed Fees' or service='DAILY BED CHARGES') ");
                while (rsetTable1.next()) {
                    System.out.println(rsetTable1.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable1.getDouble(1), "0.00"), j, 1);
                    total = total + rsetTable1.getDouble(1);
                }

                //get admission fee 
                java.sql.Statement stmtTable12 = connectDB.createStatement();
                java.sql.ResultSet rsetTable12 = stmtTable12.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and service='Admission Fees' ");
                while (rsetTable12.next()) {
                    System.out.println(rsetTable12.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable12.getDouble(1), "0.00"), j, 2);

                    total = total + rsetTable12.getDouble(1);
                }
                //get nurses fee 
                java.sql.Statement stmtTable120 = connectDB.createStatement();
                java.sql.ResultSet rsetTable120 = stmtTable120.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (service='Nursing Daily Charges' or service='Nursing/Professional Fees')");
                while (rsetTable120.next()) {
                    System.out.println(rsetTable120.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable120.getDouble(1), "0.00"), j, 3);
                    total = total + rsetTable120.getDouble(1);
                }

                //get pharmacy fee 
                java.sql.Statement stmtTable123 = connectDB.createStatement();
                java.sql.ResultSet rsetTable123 = stmtTable123.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and main_service ilike '%Pharmacy%' ");
                while (rsetTable123.next()) {
                    System.out.println(rsetTable123.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable123.getDouble(1), "0.00"), j, 4);
                    total = total + rsetTable123.getDouble(1);
                }
                //get theater fee 
                java.sql.Statement stmtTable1234 = connectDB.createStatement();
                java.sql.ResultSet rsetTable1234 = stmtTable1234.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and ((main_service ilike '%theatre%' or  main_service ilike '%Surgery%') and main_service not ilike '%pharmacy%') ");
                while (rsetTable1234.next()) {
                    System.out.println(rsetTable1234.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable1234.getDouble(1), "0.00"), j, 5);

                    total = total + rsetTable1234.getDouble(1);
                }
                //get laboratory fee 
                java.sql.Statement stmtTable41 = connectDB.createStatement();
                java.sql.ResultSet rsetTable41 = stmtTable41.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service ILIKE '%Laboratory%' or main_service ilike 'Memorial-Laboratory Services') ");
                while (rsetTable41.next()) {
                    System.out.println(rsetTable41.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable41.getDouble(1), "0.00"), j, 6);

                    total = total + rsetTable41.getDouble(1);
                }

                //get doctors fee 
                java.sql.Statement stmtTable410 = connectDB.createStatement();
                java.sql.ResultSet rsetTable410 = stmtTable410.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service ilike '%cons%' or main_service='Consultancy Ledger') ");
                while (rsetTable410.next()) {
                    System.out.println(rsetTable410.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable410.getDouble(1), "0.00"), j, 7);

                    total = total + rsetTable410.getDouble(1);
                }
                //get SUPPLIES fee 
                java.sql.Statement stmtTable4613 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4613 = stmtTable4613.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service ilike '%supplies%' or main_service ilike '%store%') and main_service not ilike '%drug%' ");
                while (rsetTable4613.next()) {
                    System.out.println(rsetTable4613.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4613.getDouble(1), "0.00"), j, 8);
                    total = total + rsetTable4613.getDouble(1);
                }

                //get CCU fee 
                java.sql.Statement stmtTable4610 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4610 = stmtTable4610.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Ccu Ward' or main_service='CCU WARD') ");
                while (rsetTable4610.next()) {
                    System.out.println(rsetTable4610.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4610.getDouble(1), "0.00"), j, 9);
                    total = total + rsetTable4610.getDouble(1);
                }

                //get ICU fee 
                java.sql.Statement stmtTable4690 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4690 = stmtTable4690.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Icu Ward' or main_service='ICU WARD' or main_service='Memorial-Icu') ");
                while (rsetTable4690.next()) {
                    System.out.println(rsetTable4690.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4690.getDouble(1), "0.00"), j, 10);
                    total = total + rsetTable4690.getDouble(1);
                }

                //get HCU fee 
                java.sql.Statement stmtTable4590 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4590 = stmtTable4590.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Hdu Ward' or main_service='HDU WARD') ");
                while (rsetTable4590.next()) {
                    System.out.println(rsetTable4590.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4590.getDouble(1), "0.00"), j, 11);
                    total = total + rsetTable4590.getDouble(1);
                }

                //get Nutrition fee 
                java.sql.Statement stmtTable4591 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4591 = stmtTable4591.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Nutrition' or main_service='NUTRITION' or main_service ilike 'Memorial-Nutritional Services') ");
                while (rsetTable4591.next()) {
                    System.out.println(rsetTable4591.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4591.getDouble(1), "0.00"), j, 12);
                    total = total + rsetTable4591.getDouble(1);
                }

                //get NHIF diff fee 
                java.sql.Statement stmtTable4592 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4592 = stmtTable4592.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and main_service='NHIF DIFF ' ");
                while (rsetTable4592.next()) {
                    System.out.println(rsetTable4592.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4592.getDouble(1), "0.00"), j, 13);
                    total = total + rsetTable4592.getDouble(1);
                }

                //get Mental Health fee 
                java.sql.Statement stmtTable4593 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4593 = stmtTable4593.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Mental Health' or main_service='MENTAL HEALTH' ) ");
                while (rsetTable4593.next()) {
                    System.out.println(rsetTable4593.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4593.getDouble(1), "0.00"), j, 14);
                    total = total + rsetTable4593.getDouble(1);
                }

                //get E.N.T fee 
                java.sql.Statement stmtTable4594 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4594 = stmtTable4594.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and main_service='E.N.T' ");
                while (rsetTable4594.next()) {
                    System.out.println(rsetTable4594.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4594.getDouble(1), "0.00"), j, 15);
                    total = total + rsetTable4594.getDouble(1);
                }

                //get ORTHOPAEDIC TECHNOLOGY fee 
                java.sql.Statement stmtTable4595 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4595 = stmtTable4595.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and main_service='ORTHOPAEDIC TECHNOLOGY' ");
                while (rsetTable4595.next()) {
                    System.out.println(rsetTable4595.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4595.getDouble(1), "0.00"), j, 16);
                    total = total + rsetTable4595.getDouble(1);
                }

                //get  Transport Services fee 
                java.sql.Statement stmtTable4596 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4596 = stmtTable4596.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Transport Services' or main_service='TRANSPORT SERVICES') ");
                while (rsetTable4596.next()) {
                    System.out.println(rsetTable4596.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4596.getDouble(1), "0.00"), j, 17);
                    total = total + rsetTable4596.getDouble(1);
                }

                //get Radiology and Imaging fee 
                java.sql.Statement stmtTable4597 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4597 = stmtTable4597.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Radiology and Imaging' or main_service='RADIOLOGY AND IMAGING') ");
                while (rsetTable4597.next()) {
                    System.out.println(rsetTable4597.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4597.getDouble(1), "0.00"), j, 18);
                    total = total + rsetTable4597.getDouble(1);
                }

                //get Physiotherapy fee 
                java.sql.Statement stmtTable4598 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4598 = stmtTable4598.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Physiotherapy' or main_service='PHYSIOTHERAPY') ");
                while (rsetTable4598.next()) {
                    System.out.println(rsetTable4598.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4598.getDouble(1), "0.00"), j, 19);
                    total = total + rsetTable4598.getDouble(1);
                }

                //get Plaster Technology fee 
                java.sql.Statement stmtTable4599 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4599 = stmtTable4599.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Plaster Technology' or main_service='PLASTER TECHNOLOGY') ");
                while (rsetTable4599.next()) {
                    System.out.println(rsetTable4599.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4599.getDouble(1), "0.00"), j, 20);
                    total = total + rsetTable4599.getDouble(1);
                }

                //get Memorial-Occupational Theraphy fee 
                java.sql.Statement stmtTable4511 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4511 = stmtTable4511.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and (main_service='Memorial-Occupational Theraphy' or main_service='OCCUPATIONAL THERAPY' or main_service='Occupational Therapy') ");
                while (rsetTable4511.next()) {
                    System.out.println(rsetTable4511.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4511.getDouble(1), "0.00"), j, 21);
                    total = total + rsetTable4511.getDouble(1);
                }

                //get obs fee 
                java.sql.Statement stmtTable4513 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4513 = stmtTable4513.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and main_service='Obstetrics And Gynaecology'");
                while (rsetTable4513.next()) {
                    System.out.println(rsetTable4513.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4513.getDouble(1), "0.00"), j, 22);
                    total = total + rsetTable4513.getDouble(1);
                }
                //get caretakers fee 
                java.sql.Statement stmtTable4913 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4913 = stmtTable4913.executeQuery("select sum(debit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and service='Caretakers Fees per DAY'");
                while (rsetTable4913.next()) {
                    System.out.println(rsetTable4913.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4913.getDouble(1), "0.00"), j, 23);
                    total = total + rsetTable4913.getDouble(1);
                }

                jTable1.setValueAt(total, j, 24);

                //cash 
                java.sql.Statement stmtTable451 = connectDB.createStatement();
                java.sql.ResultSet rsetTable451 = stmtTable451.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and service='Receipt' ");
                while (rsetTable451.next()) {
                    System.out.println(rsetTable451.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable451.getDouble(1), "0.00"), j, 25);

                }
                // NHIF scheme
                java.sql.Statement stmtTable4051 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4051 = stmtTable4051.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and scheme='N.H.I.F' and service not ilike 'NHIF DIFF ' and main_service!='WAIVERS' ");
                while (rsetTable4051.next()) {
                    System.out.println(rsetTable4051.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4051.getDouble(1), "0.00"), j, 26);

                }

                //NHIF CIVIL SERVICE
                java.sql.Statement stmtTable4059 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4059 = stmtTable4059.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and scheme='NHIF-CIVIL SERVICE SCHEME' AND credit>0 AND main_service!='WAIVERS' ");
                while (rsetTable4059.next()) {
                    System.out.println(rsetTable4059.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4059.getDouble(1), "0.00"), j, 27);

                }

//                                 //WAIVERS
//                        java.sql.Statement stmtTable4089 = connectDB.createStatement();
//                        java.sql.ResultSet rsetTable4089 = stmtTable4089.executeQuery("select sum(credit) from hp_patient_card where invoice_no='"+rsetTable1c.getString(1)+"' and main_service='WAIVERS' ");
//                        while (rsetTable4089.next()) {
//                               System.out.println(rsetTable4089.getString(1));
//                               jTable1.setValueAt(dbObject.getDBObject(rsetTable4089.getDouble(1), "0.00"),j,26);
//                               
//                            } 
                //                                 //WAIVERS
                java.sql.Statement stmtTable4089 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4089 = stmtTable4089.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and scheme='WAIVERS BY MANAGEMENT' ");
                while (rsetTable4089.next()) {
                    System.out.println(rsetTable4089.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4089.getDouble(1), "0.00"), j, 28);

                }
                //                                 //NHIF
                java.sql.Statement stmtTable409 = connectDB.createStatement();
                java.sql.ResultSet rsetTable409 = stmtTable409.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and main_service='NHIF DIFF'");
                while (rsetTable409.next()) {
                    System.out.println(rsetTable409.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable409.getDouble(1), "0.00"), j, 29);

                }
                //                                 //MOH
                java.sql.Statement stmtTable4019 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4019 = stmtTable4019.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and scheme='MOH-HOSPITAL MANAGEMENT SERVICE DIFF FUND' ");
                while (rsetTable4019.next()) {
                    System.out.println(rsetTable4019.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable4019.getDouble(1), "0.00"), j, 30);

                }

                //Creditors
                java.sql.Statement stmtTable419 = connectDB.createStatement();
                java.sql.ResultSet rsetTable419 = stmtTable419.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and isurer='INDIVINDUALS'   ");
                while (rsetTable419.next()) {
                    System.out.println(rsetTable419.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable419.getDouble(1), "0.00"), j, 31);

                }
                //Other Creditors
                java.sql.Statement stmtTable19 = connectDB.createStatement();
                java.sql.ResultSet rsetTable19 = stmtTable19.executeQuery("select sum(credit) from hp_patient_card where invoice_no='" + rsetTable1c.getString(1) + "' and "
                        + "isurer!='INDIVINDUALS' and "
                        + "scheme!='MOH-HOSPITAL MANAGEMENT SERVICE DIFF FUND' and"
                        + " main_service!='NHIF DIFF' and scheme!='WAIVERS BY MANAGEMENT' and"
                        + " not (scheme='NHIF-CIVIL SERVICE SCHEME' AND credit>0 AND main_service!='WAIVERS') and "
                        + "not (scheme='N.H.I.F' and service not ilike 'NHIF DIFF ' and main_service!='WAIVERS') and "
                        + "service!='Receipt'");
                while (rsetTable19.next()) {
                    System.out.println(rsetTable19.getString(1));
                    jTable1.setValueAt(dbObject.getDBObject(rsetTable19.getDouble(1), "0.00"), j, 32);

                }

                j++;
                total = 0.0;
            }
            jTable1.setValueAt("Total", j, 0);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 1), j, 1);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 2), j, 2);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3), j, 3);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 4), j, 4);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5), j, 5);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 6), j, 6);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 7), j, 7);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 8), j, 8);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 9), j, 9);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 10), j, 10);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 11), j, 11);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 12), j, 12);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 13), j, 13);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 14), j, 14);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 15), j, 15);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 16), j, 16);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 17), j, 17);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 18), j, 18);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 19), j, 19);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 20), j, 20);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 21), j, 21);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 22), j, 22);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 23), j, 23);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 24), j, 24);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 25), j, 25);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 26), j, 26);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 27), j, 27);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 28), j, 28);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 29), j, 29);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 30), j, 30);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 31), j, 31);
            jTable1.setValueAt(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 32), j, 32);

        } catch (SQLException ex) {
            Logger.getLogger(OPBillingReportIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }
    private void openReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openReportBtnActionPerformed

        loadReport();
        // TODO add your handling code here:
    }//GEN-LAST:event_openReportBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
//        if (jTable1.getSelectedRow() == j && jTable1.getSelectedColumn() != 0) {
//            for (int l = 0; l < jTable4.getRowCount(); l++) {
//                for (int r = 0; r < jTable4.getColumnCount(); r++) {
//                    jTable4.getModel().setValueAt(null, l, r);
//                }
//            }
//            int selectedColumn = jTable1.getSelectedColumn();
//
//            String[] COLUMNS = {"", ""};
//            invoiceString = "(";
//            for (int r = 0; r < jTable1.getRowCount() - 1; r++) {
//                if (r == jTable1.getRowCount() - 2) {
//                    invoiceString = invoiceString + "invoice_no='" + "" + jTable1.getValueAt(r, 0) + "') ";
//                } else {
//                    invoiceString = invoiceString + "invoice_no='" + "" + jTable1.getValueAt(r, 0) + "' or ";
//                }
//
//            }
//
//            
//
//            try {
//                java.sql.Statement stmtTable1cu = connectDB.createStatement();
//                java.sql.ResultSet rsetTable1cu = stmtTable1cu.executeQuery("select count(*) from  (select main_service,sum(debit) from hp_patient_card where " + query + " group by 1) s");
//                if (rsetTable1cu.next()) {
//                    loadTable(jTable4, rsetTable1cu.getInt(1) + 4, COLUMNS);
//                }
//
//                jTable4.setValueAt(header.toUpperCase(), 0, 0);
//                jTable4.setValueAt("View Detailed", 0, 1);
//                jTable4.setValueAt("Name".toUpperCase(), 2, 0);
//                jTable4.setValueAt("Amount".toUpperCase(), 2, 1);
//                //get pharmacy fee 
//                java.sql.Statement stmtTable123 = connectDB.createStatement();
//                java.sql.ResultSet rsetTable123 = stmtTable123.executeQuery("select main_service,sum(debit) from hp_patient_card where " + query + " group by 1");
//                int t = 3;
//                double totals = 0.0;
//                while (rsetTable123.next()) {
//                    System.out.println(rsetTable123.getString(1));
//                    jTable4.setValueAt(rsetTable123.getString(1), t, 0);
//                    jTable4.setValueAt(dbObject.getDBObject(rsetTable123.getDouble(2), "0.00"), t, 1);
//                    totals = totals + rsetTable123.getDouble(2);
//                    t++;
//                }
//                jTable4.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totals), t, 1);
//            } catch (Exception t) {
//                t.printStackTrace();
//            }
//            jTabbedPane1.setSelectedIndex(3);
//        } else
        if (jTable1.getSelectedColumn() == 0) {

            for (int l = 0; l < jTable2.getRowCount(); l++) {
                for (int r = 0; r < jTable2.getColumnCount(); r++) {
                    jTable2.getModel().setValueAt(null, l, r);
                }
            }
            String[] COLUMNS = {"", "", "", ""};

            try {
                java.sql.Statement stmtTable1cu = connectDB.createStatement();
                java.sql.ResultSet rsetTable1cu = stmtTable1cu.executeQuery("select count(*) from  (select sum(debit),sum(credit),main_service from hp_patient_card where invoice_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "' group by 3 order by 3 asc) s");
                if (rsetTable1cu.next()) {
                    loadTable(jTable2, rsetTable1cu.getInt(1) + 8, COLUMNS);
                    rows = rsetTable1cu.getInt(1) + 8;
                }

                java.sql.Statement stmtTable4597 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4597 = stmtTable4597.executeQuery("select patient_no,patient_name,discharge_date,invoice_no,ward from hp_admission where invoice_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "'");
                if (rsetTable4597.next()) {

                    System.out.println(rsetTable4597.getString(1));
                    jTable2.setValueAt("Patient No:", 0, 0);
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable4597.getString(1), "-"), 0, 1);
                    jTable2.setValueAt("View Breakdown", 0, 3);

                    jTable2.setValueAt("Patient Name:", 1, 0);
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable4597.getString(2), "-"), 1, 1);

                    jTable2.setValueAt("Discharge Date:", 2, 0);
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable4597.getString(3), "-"), 2, 1);

                    jTable2.setValueAt("Invoice No:", 3, 0);
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable4597.getString(4), "-"), 3, 1);

                    jTable2.setValueAt("Ward:", 4, 0);
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable4597.getString(5), "-"), 4, 1);

                    jTable2.setValueAt("Description", 6, 0);
                    jTable2.setValueAt("Debit", 6, 1);
                    jTable2.setValueAt("Credit", 6, 2);
                    jTable2.setValueAt("Running Balance", 6, 3);

                }

                java.sql.Statement stmtTable459 = connectDB.createStatement();
                java.sql.ResultSet rsetTable459 = stmtTable459.executeQuery("select sum(debit),sum(credit),main_service from hp_patient_card where invoice_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "' group by 3 order by 3 asc");
                int j = 7;
                double balance = 0.0, debit = 0.0, credit = 0.0;
                while (rsetTable459.next()) {
                    System.out.println(rsetTable459.getString(1));
                    debit = debit + rsetTable459.getDouble(1);
                    credit = credit + rsetTable459.getDouble(2);
                    balance = balance + (rsetTable459.getDouble(1) - rsetTable459.getDouble(2));
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable459.getString(3), "-"), j, 0);
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable459.getDouble(1), "-"), j, 1);
                    jTable2.setValueAt(dbObject.getDBObject(rsetTable459.getDouble(2), "-"), j, 2);
                    jTable2.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(balance), j, 3);
                    j++;
                }
                jTable2.setValueAt(debit, j, 1);
                jTable2.setValueAt(credit, j, 2);
                jTable2.setValueAt(credit - debit, j, 3);

            } catch (SQLException ex) {
                Logger.getLogger(OPBillingReportIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTabbedPane1.setSelectedIndex(2);

        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        if (jTable2.getSelectedColumn() == 3 && jTable2.getSelectedRow() == 0) {
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
            for (int l = 0; l < jTable3.getRowCount(); l++) {
                for (int r = 0; r < jTable3.getColumnCount(); r++) {
                    jTable3.getModel().setValueAt(null, l, r);
                }
            }
            String[] COLUMNS = {"", "", "", "", "", ""};

            try {
                java.sql.Statement stmtTable1cu = connectDB.createStatement();
                java.sql.ResultSet rsetTable1cu = stmtTable1cu.executeQuery("select count(*) from (select debit,credit,service,date::date,user_name from hp_patient_card where invoice_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "'  order by 3 asc) t");
                if (rsetTable1cu.next()) {
                    loadTable(jTable3, rsetTable1cu.getInt(1) + rows, COLUMNS);

                }
                java.sql.Statement stmtTable4597 = connectDB.createStatement();
                java.sql.ResultSet rsetTable4597 = stmtTable4597.executeQuery("select patient_no,patient_name,discharge_date,invoice_no,ward from hp_admission where invoice_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "'");
                if (rsetTable4597.next()) {

                    System.out.println(rsetTable4597.getString(1));
                    jTable3.setValueAt("Patient No:", 0, 0);
                    jTable3.setValueAt(dbObject.getDBObject(rsetTable4597.getString(1), "-"), 0, 1);
                    // jTable3.setValueAt("View Breakdown",0,3);

                    jTable3.setValueAt("Patient Name:", 1, 0);
                    jTable3.setValueAt(dbObject.getDBObject(rsetTable4597.getString(2), "-"), 1, 1);

                    jTable3.setValueAt("Discharge Date:", 2, 0);
                    jTable3.setValueAt(dbObject.getDBObject(rsetTable4597.getString(3), "-"), 2, 1);

                    jTable3.setValueAt("Invoice No:", 3, 0);
                    jTable3.setValueAt(dbObject.getDBObject(rsetTable4597.getString(4), "-"), 3, 1);

                    jTable3.setValueAt("Ward:", 4, 0);
                    jTable3.setValueAt(dbObject.getDBObject(rsetTable4597.getString(5), "-"), 4, 1);

                    jTable3.setValueAt("Date", 6, 0);
                    jTable3.setValueAt("Description", 6, 1);
                    jTable3.setValueAt("Debit", 6, 2);
                    jTable3.setValueAt("Credit", 6, 3);
                    jTable3.setValueAt("Running Balance", 6, 4);
                    jTable3.setValueAt("User", 6, 5);

                }
                double debit = 0.0, credit = 0.0;
                int j = 7;
                java.sql.Statement pst2 = connectDB.createStatement();
                java.sql.ResultSet rsv = pst2.executeQuery("select distinct  main_service from  hp_patient_card where invoice_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "'  order by 1 asc");
                while (rsv.next()) {

                    jTable3.setValueAt(rsv.getObject(1).toString().toUpperCase(), j, 0);
                    java.sql.Statement stmtTable459 = connectDB.createStatement();
                    java.sql.ResultSet rsetTable459 = stmtTable459.executeQuery("select debit,credit,service,date::date,user_name from hp_patient_card where invoice_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "' and main_service='" + rsv.getObject(1).toString() + "' order by 3 asc");
                    j = j + 1;
                    String user = null;
                    double balance = 0.0;
                    while (rsetTable459.next()) {
                        java.sql.Statement pst2v3 = connectDB.createStatement();
                        java.sql.ResultSet rsv3 = pst2v3.executeQuery("select distinct concat(f_name,' ',l_name) as name from secure_menu_access where login_name='" + rsetTable459.getString(5) + "'");
                        if (rsv3.next()) {
                            user = rsv3.getObject(1).toString();

                        }

                        debit = debit + rsetTable459.getDouble(1);
                        credit = credit + rsetTable459.getDouble(2);
                        System.out.println(rsetTable459.getString(1));
                        balance = balance + (rsetTable459.getDouble(1) - rsetTable459.getDouble(2));

                        jTable3.setValueAt(dbObject.getDBObject(rsetTable459.getString(4), "-"), j, 0);
                        jTable3.setValueAt(dbObject.getDBObject(rsetTable459.getString(3), "-"), j, 1);
                        jTable3.setValueAt(dbObject.getDBObject(rsetTable459.getDouble(1), "-"), j, 2);
                        jTable3.setValueAt(dbObject.getDBObject(rsetTable459.getDouble(2), "-"), j, 3);
                        jTable3.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(balance), j, 4);
                        jTable3.setValueAt(user, j, 5);
                        j++;
                    }
                }
                jTable3.setValueAt(debit, j, 2);
                jTable3.setValueAt(credit, j, 3);
                jTable3.setValueAt(credit - debit, j, 4);
            } catch (SQLException ex) {
                Logger.getLogger(OPBillingReportIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTabbedPane1.setSelectedIndex(3);
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void glsymmaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glsymmaryActionPerformed
        // TODO add your handling code here:
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        for (int l = 0; l < jTable6.getRowCount(); l++) {
            for (int r = 0; r < jTable6.getColumnCount(); r++) {
                jTable6.getModel().setValueAt(null, l, r);
            }
        }
        //HERE
        try {
            // String[] COLUMNS = {"Ward", "Bed Fees", "Admission Fees", "Nursing Fees", "Pharmacy", "Theatre", "Laboratory", "Doctors Fees", "Supplies", "CCU", "ICU", "HCU", "Nutrition", "NHIF Diff", "Mental Health", "E.N.T", "Orth Tech", "Transport", "Radiology", "physiology fee", "Plaster Technology", "Occupational Theraphy","Obs","Caretaker","Total","Cash","Nhif","Nhif Civil","Waivers","Nhif Loss","MOH","Individual","Others Schemes"};

            int deptCount = 0;
            int count = 1;
            java.sql.Statement stmtTable1cux = connectDB.createStatement();
            java.sql.ResultSet rsetTable1cux = stmtTable1cux.executeQuery(" SELECT COUNT(DISTINCT main_service) from hp_patient_card WHERE invoice_no IN (SELECT invoice_no FROM hp_admission WHERE discharge_date::date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' ) AND main_service IN (SELECT activity FROM pb_activity WHERE activity_category ilike 'I' or activity_category ilike 'PLID' OR category_class ilike 'Bl' )");
            if (!jComboBox1.getSelectedItem().toString().equalsIgnoreCase("-All Wards-")) {
                rsetTable1cux = stmtTable1cux.executeQuery(" SELECT COUNT(DISTINCT main_service) from hp_patient_card WHERE invoice_no IN (SELECT invoice_no FROM hp_admission WHERE upper(ward) = upper('" + jComboBox1.getSelectedItem().toString() + "') AND  discharge_date::date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' ) AND main_service IN (SELECT activity FROM pb_activity WHERE activity_category ilike 'I' or activity_category ilike 'PLID' OR category_class ilike 'Bl' )");

            }
            if (rsetTable1cux.next()) {
                deptCount = rsetTable1cux.getInt(1);

            }
            String[] COLUMNS = new String[deptCount + 13];
            COLUMNS[0] = "Ward";

            stmtTable1cux = connectDB.createStatement();
            rsetTable1cux = stmtTable1cux.executeQuery(" SELECT DISTINCT main_service from hp_patient_card WHERE invoice_no IN (SELECT invoice_no FROM hp_admission WHERE discharge_date::date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' ) AND  main_service IN (SELECT activity FROM pb_activity WHERE activity_category ilike 'I' or activity_category ilike 'PLID' OR category_class ilike 'Bl')");
            if (!jComboBox1.getSelectedItem().toString().equalsIgnoreCase("-All Wards-")) {
                rsetTable1cux = stmtTable1cux.executeQuery(" SELECT DISTINCT main_service from hp_patient_card WHERE invoice_no IN (SELECT invoice_no FROM hp_admission WHERE upper(ward) = upper('" + jComboBox1.getSelectedItem().toString() + "') AND  discharge_date::date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' ) AND  main_service IN (SELECT activity FROM pb_activity WHERE activity_category ilike 'I' or activity_category ilike 'PLID' OR category_class ilike 'Bl' )");

            }
            while (rsetTable1cux.next()) {
                COLUMNS[count] = rsetTable1cux.getString(1);
                System.err.println("GL code  here " + rsetTable1cux.getString(1));
                count++;

            }

            COLUMNS[count] = "Total";

            COLUMNS[count + 1] = "";
            COLUMNS[count + 2] = "CASH RECIEPTS";
            COLUMNS[count + 3] = "NHIF REBATES";
            COLUMNS[count + 4] = "NHIF LOSS";
            COLUMNS[count + 5] = "NHIF GAIN";
            COLUMNS[count + 6] = "STAFF GUARANTORS";
            COLUMNS[count + 7] = "INDIVIDUAL CREDITS";
            COLUMNS[count + 8] = "CORPORATES CREDITS";
            COLUMNS[count + 9] = "WAIVERS GRANTED";
            COLUMNS[count + 10] = "EXEMPTED  PATIENTS";
            COLUMNS[count + 11] = "GRAND TOTAL";

            java.sql.Statement stmtTable1cu = connectDB.createStatement();
            java.sql.ResultSet rsetTable1cu = stmtTable1cu.executeQuery(" select count(*) from hp_wards");
            if (!jComboBox1.getSelectedItem().toString().equalsIgnoreCase("-All Wards-")) {
                System.err.println("Searching for Single Ward " + jComboBox1.getSelectedItem().toString());
                rsetTable1cu = stmtTable1cu.executeQuery(" select count(*) from hp_wards WHERE ward_name ilike '" + jComboBox1.getSelectedItem().toString() + "' ");
            }
            if (rsetTable1cu.next()) {
                loadTable(jTable6, rsetTable1cu.getInt(1) + 10, COLUMNS);

            }

            java.sql.Statement stmtTable1329 = connectDB.createStatement();
            java.sql.ResultSet rsetTable1329 = stmtTable1329.executeQuery("select ward_name from hp_wards   order by ward_name");

            if (!jComboBox1.getSelectedItem().toString().equalsIgnoreCase("-All Wards-")) {
                rsetTable1329 = stmtTable1329.executeQuery("select ward_name from hp_wards WHERE ward_name ilike '" + jComboBox1.getSelectedItem().toString() + "' order by ward_name");

            }
            int z = 0;
            while (rsetTable1329.next()) {

                //start
                try {

//
//                    }
                    System.err.println("Working for ward " + rsetTable1329.getString(1));

                    jTable6.setValueAt(rsetTable1329.getString(1), z, 0);
                    double total = 0.0;
                    int totalCoulumn = 0;
                    java.sql.Statement stmtTable1c = connectDB.createStatement();

                    for (int p = 1; p <= deptCount; p++) {
                        java.sql.ResultSet rsetTable1c = stmtTable1c.executeQuery("select sum(debit-credit) from hp_patient_card where invoice_no IN \n"
                                + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                                + " and upper(main_service) = upper('" + jTable6.getColumnName(p) + "') and service != 'Receipt' ");
                        System.err.println("select sum(debit-credit) from hp_patient_card where invoice_no IN \n"
                                + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                                + " and upper(main_service) = upper('" + jTable6.getColumnName(p) + "') ");

//                                    
                        while (rsetTable1c.next()) {
//                            jTable6.setValueAt(rsetTable1c.getString(1), z, p);
                            jTable6.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rsetTable1c.getDouble(1)), z, p);

                            total = total + rsetTable1c.getDouble(1);
                        }

                        totalCoulumn = p;
                    }

                    jTable6.setValueAt(total, z, totalCoulumn + 1);

                    jTable6.setValueAt(null, z, totalCoulumn + 2);
                    total = 0.00;

                    //Cash Cases
                    java.sql.ResultSet rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and (upper(service) = upper('Receipt') OR upper(service) ilike upper('Deposit on Admission%')) and main_service not ilike '%Invoice%' ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 3);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //NHIF Cases
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(service) = upper('N.H.I.F')  ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 4);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //NHIF LOSS
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(service) = upper('NHIF DIFF ') AND credit>0 ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 5);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //NHIF GAIN
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(service) = upper('NHIF DIFF ') AND debit>0 ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 6);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //Staff Guarantors
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(scheme) IN (SELECT upper(scheme_name) FROM ac_schemes WHERE payer_name = 'STAFF GUARANTORS') and credit>0  ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 7);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //Individual creditors
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(scheme) IN (SELECT upper(scheme_name) FROM ac_schemes WHERE payer_name = 'INDIVINDUALS') and transaction_type ='Receipts' ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 8);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //Coporate Creditors
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(scheme) != upper('WAIVERS BY MANAGEMENT') and upper(scheme) IN (SELECT upper(scheme_name) FROM ac_schemes WHERE payer_name != 'INDIVINDUALS' AND payer_name != 'STAFF GUARANTORS') and transaction_type ='Receipts' ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 9);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //Waived Patients
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(scheme) = upper('WAIVERS BY MANAGEMENT')  ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 10);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    //Exempetd Patients
                    rsetTable1c = stmtTable1c.executeQuery("select sum(credit-debit) from hp_patient_card where invoice_no IN \n"
                            + "(SELECT invoice_no FROM hp_admission WHERE ward = '" + rsetTable1329.getString(1) + "' and discharge_date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' )\n"
                            + " and upper(main_service) = upper('Exemption')  ");

                    while (rsetTable1c.next()) {
                        jTable6.setValueAt(rsetTable1c.getString(1), z, totalCoulumn + 11);
                        total = total + rsetTable1c.getDouble(1);
                    }

                    jTable6.setValueAt(total, z, totalCoulumn + 12);

                } catch (SQLException ex) {
                    Logger.getLogger(OPBillingReportIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
                z++;

                //end            
            }
            jTable6.setValueAt("Total", z, 0);
            for (int p = 1; p < jTable6.getColumnCount(); p++) {
                System.out.println("Columm total " + p);
                jTable6.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable6, p)), z, p);
            }

        } catch (Exception y) {
            y.printStackTrace();
        }
        //THERE

        // jTabbedPane1.setSelectedIndex(5);
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_glsymmaryActionPerformed

    private void jTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MouseClicked

        if (jTable6.getSelectedColumn() != 0) {
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
            for (int l = 0; l < jTable1.getRowCount(); l++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, l, r);
                }
            }
            //HERE

            try {
                String unit = jTable6.getColumnName(jTable6.getSelectedColumn());
                System.err.println("    " + unit);
                unit = unit.replace(" - Cash", "").replace(" - Credit", "");
                //unit = unit.trim();
                java.sql.ResultSet rsetTable1c = null;

                if (jTable6.getColumnName(jTable6.getSelectedColumn()).contains("Cash")) {
                    jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT ac.date,ac.patient_no,ac.dealer,ac.receipt_no,ac.description,ac.debit-ac.credit AS amount,pc.clinics,hv.name FROM ac_cash_collection ac, hp_patient_visit hv, pb_clinics pc, pb_activity pa WHERE  ac.activity_code = \n"
                            + "pa.code AND UPPER(pa.section_name) = UPPER('"+jTable6.getValueAt(jTable6.getSelectedRow(), 0)+"') AND   ac.date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'    AND\n"
                           + "ac.patient_no = hv.patient_no AND ac.description NOT ILIKE '%ward' AND ac.date = hv.date AND hv.clinic = pc.clinics  AND UPPER(pc.opd_unit) = UPPER('"+unit+"')"));
                
                    jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT ac.description,SUM(ac.quantity) as quantity,SUM(ac.debit-ac.credit) AS amount FROM ac_cash_collection ac, hp_patient_visit hv, pb_clinics pc, pb_activity pa WHERE  ac.activity_code = \n"
                            + "pa.code AND UPPER(pa.section_name) = UPPER('"+jTable6.getValueAt(jTable6.getSelectedRow(), 0)+"') AND   ac.date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'    AND\n"
                           + "ac.patient_no = hv.patient_no AND ac.description NOT ILIKE '%ward' AND ac.date = hv.date AND hv.clinic = pc.clinics  AND UPPER(pc.opd_unit) = UPPER('"+unit+"') group by 1 "));
                
               
                    java.sql.Statement stmtTable1cux = connectDB.createStatement();
                    java.sql.ResultSet rsetTable1cux = stmtTable1cux.executeQuery("SELECT COUNT(distinct ac.patient_no ) FROM ac_cash_collection ac, hp_patient_visit hv, pb_clinics pc, pb_activity pa WHERE  ac.activity_code = \n"
                            + "pa.code AND UPPER(pa.section_name) = UPPER('"+jTable6.getValueAt(jTable6.getSelectedRow(), 0)+"') AND   ac.date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'    AND\n"
                           + "ac.patient_no = hv.patient_no AND ac.description NOT ILIKE '%ward' AND ac.date = hv.date AND hv.clinic = pc.clinics  AND UPPER(pc.opd_unit) = UPPER('"+unit+"')");

                    if (rsetTable1cux.next()) {
                        jLabel5.setText("Patient Count : "+ String.valueOf(rsetTable1cux.getDouble(1))); 

                    }
                    
                }else{
                    jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date,patient_no,service,scheme,main_service,date::date,invoice_no, (debit - credit) AS amount,(SELECT first_name || ' ' || second_name || ' ' || last_name  from hp_patient_register WHERE hp_patient_register.patient_no=hp_patient_card.patient_no LIMIT 1) AS name FROM hp_patient_card WHERE invoice_no ilike 'O%' and transaction_type = 'Billing' and main_service IN \n" +
                    "(SELECT activity FROM pb_activity WHERE upper(section_name) = upper('"+jTable6.getValueAt(jTable6.getSelectedRow(), 0)+"' )) AND date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' \n" +
                    "AND patient_no IN (SELECT patient_no FROM hp_patient_visit WHERE \n" +
                    " date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND clinic IN (SELECT clinics FROM pb_clinics WHERE UPPER(opd_unit) = UPPER('"+unit+"') ))"));
                 
                    jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT service,sum(dosage) as quantity, sum(debit - credit) AS amount FROM hp_patient_card WHERE invoice_no ilike 'O%' and transaction_type = 'Billing' and main_service IN \n" +
                    "(SELECT activity FROM pb_activity WHERE upper(section_name) = upper('"+jTable6.getValueAt(jTable6.getSelectedRow(), 0)+"' )) AND date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' \n" +
                    "AND patient_no IN (SELECT patient_no FROM hp_patient_visit WHERE \n" +
                    " date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND clinic IN (SELECT clinics FROM pb_clinics WHERE UPPER(opd_unit) = UPPER('"+unit+"') )) group by 1 "));
                  
                    
                    java.sql.Statement stmtTable1cux = connectDB.createStatement();
                    java.sql.ResultSet rsetTable1cux = stmtTable1cux.executeQuery("SELECT COUNT (DISTINCT patient_no) FROM hp_patient_card WHERE invoice_no ilike 'O%' and transaction_type = 'Billing' and main_service IN \n" +
                    "(SELECT activity FROM pb_activity WHERE upper(section_name) = upper('"+jTable6.getValueAt(jTable6.getSelectedRow(), 0)+"' )) AND date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' \n" +
                    "AND patient_no IN (SELECT patient_no FROM hp_patient_visit WHERE \n" +
                    " date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND clinic IN (SELECT clinics FROM pb_clinics WHERE UPPER(opd_unit) = UPPER('"+unit+"') ))");

                    if (rsetTable1cux.next()) {
                        jLabel5.setText("Patient Count : "+String.valueOf(rsetTable1cux.getDouble(1))); 

                    }
                    

                }

//                rsetTable1c = stmtTable1c.executeQuery("SELECT SUM(ac.debit-ac.credit) FROM ac_cash_collection ac, hp_patient_visit hv, pb_clinics pc, pb_activity pa WHERE  ac.activity_code = \n" +
//                "pa.code AND UPPER(pa.section_name) = UPPER('"+jTable6.getValueAt(z, 0)+"') AND   ac.date between '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate())+"' AND '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate())+"'   AND \n" +
//                "ac.patient_no = hv.patient_no AND ac.date = hv.date AND hv.clinic = pc.clinics  AND UPPER(pc.opd_unit) = UPPER('"+unit+"')");
            } catch (Exception y) {
                y.printStackTrace();
            }
            //THERE

            jTabbedPane1.setSelectedIndex(1);
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable6MouseClicked

    private void departmentsymmaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentsymmaryActionPerformed
        // TODO add your handling code here:
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        for (int l = 0; l < jTable6.getRowCount(); l++) {
            for (int r = 0; r < jTable6.getColumnCount(); r++) {
                jTable6.getModel().setValueAt(null, l, r);
            }
        }
        //HERE
        try {
            // String[] COLUMNS = {"Ward", "Bed Fees", "Admission Fees", "Nursing Fees", "Pharmacy", "Theatre", "Laboratory", "Doctors Fees", "Supplies", "CCU", "ICU", "HCU", "Nutrition", "NHIF Diff", "Mental Health", "E.N.T", "Orth Tech", "Transport", "Radiology", "physiology fee", "Plaster Technology", "Occupational Theraphy","Obs","Caretaker","Total","Cash","Nhif","Nhif Civil","Waivers","Nhif Loss","MOH","Individual","Others Schemes"};

            int deptCount = 0;
            int count = 1;
            java.sql.Statement stmtTable1cux = connectDB.createStatement();
            java.sql.ResultSet rsetTable1cux = stmtTable1cux.executeQuery(" SELECT COUNT(DISTINCT opd_unit) FROM pb_clinics WHERE opd_unit IS NOT NULL ");

            if (rsetTable1cux.next()) {
                deptCount = rsetTable1cux.getInt(1);

            }

            deptCount = deptCount * 2;
            System.err.println("Dept Count " + deptCount);
            String[] COLUMNS = new String[deptCount + 3];
            COLUMNS[0] = "Revenue Department";

            stmtTable1cux = connectDB.createStatement();
            rsetTable1cux = stmtTable1cux.executeQuery(" SELECT DISTINCT opd_unit FROM pb_clinics WHERE opd_unit IS NOT NULL order by 1  ");

            while (rsetTable1cux.next()) {
                COLUMNS[count] = rsetTable1cux.getString(1) + " - Cash";
                count++;
                COLUMNS[count] = rsetTable1cux.getString(1) + " - Credit";
                System.err.println("GL code  here " + rsetTable1cux.getString(1));
                count++;

            }

            COLUMNS[count] = "Total -Cash";

            COLUMNS[count + 1] = "Total -Credit";
            System.err.println("SELECT count(DISTINCT section_name)+1 FROM  pb_activity WHERE (code IN\n"
                    + " (SELECT activity_code   FROM public.ac_cash_collection where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' ) OR \n"
                    + " activity IN (SELECT main_service   FROM public.hp_patient_card where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' and ip_no = 'OP' AND invoice_no ilike 'O%' )\n"
                    + "  ) AND section_name IS NOT NULL");
            java.sql.Statement stmtTable1cu = connectDB.createStatement();
            java.sql.ResultSet rsetTable1cu = stmtTable1cu.executeQuery(" SELECT count(DISTINCT section_name)+1 FROM  pb_activity WHERE (code IN\n"
                    + " (SELECT activity_code   FROM public.ac_cash_collection where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND patient_no IN (SELECT patient_no FROM hp_patient_visit where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' ) ) OR \n"
                    + " activity IN (SELECT main_service   FROM public.hp_patient_card where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' and ip_no = 'OP' AND invoice_no ilike 'O%' )\n"
                    + " ) AND section_name IS NOT NULL ");

            if (rsetTable1cu.next()) {
                int cc = rsetTable1cu.getInt(1);
                loadTable(jTable6, cc + 10, COLUMNS);

            }

            java.sql.Statement stmtTable1329 = connectDB.createStatement();
            java.sql.ResultSet rsetTable1329 = stmtTable1329.executeQuery("SELECT DISTINCT section_name FROM  pb_activity WHERE (code IN\n"
                    + " (SELECT activity_code   FROM public.ac_cash_collection where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND patient_no IN (SELECT patient_no FROM hp_patient_visit where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' ) ) OR\n"
                    + " activity IN (SELECT main_service   FROM public.hp_patient_card where date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' and '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' and ip_no = 'OP' AND invoice_no ilike 'O%' )\n"
                    + " ) AND section_name IS NOT NULL order by 1");

            int z = 0;
            while (rsetTable1329.next()) {
                System.err.println("Working for code " + rsetTable1329.getString(1) + "\n");
//
                jTable6.setValueAt(rsetTable1329.getString(1), z, 0);
                double total = 0.0;
                int totalCoulumn = 0;
                java.sql.Statement stmtTable1c = connectDB.createStatement();
                String unit = "";
                double totalCash = 0.00;
                Double totalCredit = 0.00;

//
                for (int p = 1; p <= deptCount; p++) {

                    unit = jTable6.getColumnName(p);
                    System.err.println("    " + unit);
                    unit = unit.replace(" - Cash", "").replace(" - Credit", "");
                    //unit = unit.trim();
                    java.sql.ResultSet rsetTable1c = null;

                    if (jTable6.getColumnName(p).contains("Cash")) {

//                            rsetTable1c = stmtTable1c.executeQuery("SELECT SUM(debit-credit) FROM ac_cash_collection WHERE activity_code IN (SELECT code FROM pb_activity WHERE upper(section_name) = upper('"+jTable6.getValueAt(z, 0)+"' )) AND date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND patient_no IN (SELECT patient_no FROM hp_patient_visit WHERE \n" +
//                                    "date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND clinic IN (SELECT clinics FROM pb_clinics WHERE opd_unit = '"+unit+"' ))");
//                            
//                            rsetTable1c = stmtTable1c.executeQuery("SELECT SUM(ac.debit-ac.credit) FROM ac_cash_collection ac, hp_patient_visit hv, pb_clinics pc, pb_activity pa WHERE  ac.activity_code = \n" +
//                            "pa.code AND UPPER(pa.section_name) = UPPER('"+jTable6.getValueAt(z, 0)+"') AND   ac.date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) +"'   AND\n" +
//                            "ac.patient_no = hv.patient_no AND ac.date = hv.date AND hv.clinic = pc.clinics  AND UPPER(pc.opd_unit) = UPPER('"+unit+"') ");
                        rsetTable1c = stmtTable1c.executeQuery("SELECT SUM(ac.debit-ac.credit) FROM ac_cash_collection ac, hp_patient_visit hv, pb_clinics pc, pb_activity pa WHERE  ac.activity_code = \n"
                                + "pa.code AND UPPER(pa.section_name) = UPPER('" + jTable6.getValueAt(z, 0) + "') AND   ac.date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'   AND \n"
                                + "ac.patient_no = hv.patient_no AND ac.description NOT ILIKE '%ward' AND ac.date = hv.date AND hv.clinic = pc.clinics  AND UPPER(pc.opd_unit) = UPPER('" + unit + "')");

                        System.err.println("                   Cash ---> SELECT SUM(debit-credit) FROM ac_cash_collection  WHERE activity_code IN (SELECT code FROM pb_activity WHERE upper(section_name) = upper('\"+jTable6.getValueAt(z, 0)+\"' )) AND  patient_no IN (SELECT patient_no FROM hp_patient_visit WHERE \\n\" +\n"
                                + "                                    \"date between '\" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + \"' AND '\" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + \"' AND clinic IN (SELECT clinics FROM pb_clinics WHERE opd_unit = '\"+unit+\"' )) \n");

                        while (rsetTable1c.next()) {
                            jTable6.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rsetTable1c.getDouble(1)), z, p);
                            totalCash = totalCash + rsetTable1c.getDouble(1);
                        }
                    } else {

                        System.err.println("                   Credit ------> SELECT SUM(debit-credit) FROM hp_patient_card WHERE invoice_no ilike 'O%' and transaction_type = 'Billing' and main_service IN (SELECT activity FROM pb_activity WHERE upper(section_name) = upper('" + jTable6.getValueAt(z, 0) + "' )) AND date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND patient_no IN (SELECT patient_no FROM hp_patient_visit WHERE \n"
                                + "date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND clinic IN (SELECT clinics FROM pb_clinics WHERE opd_unit = '" + unit + "' ))");

                        rsetTable1c = stmtTable1c.executeQuery("SELECT SUM(debit-credit) FROM hp_patient_card WHERE invoice_no ilike 'O%' and transaction_type = 'Billing' and main_service IN (SELECT activity FROM pb_activity WHERE upper(section_name) = upper('" + jTable6.getValueAt(z, 0) + "' )) AND date::date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND patient_no IN (SELECT patient_no FROM hp_patient_visit WHERE \n"
                                + "date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "' AND clinic IN (SELECT clinics FROM pb_clinics WHERE opd_unit = '" + unit + "' ))");

                        while (rsetTable1c.next()) {
                            jTable6.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rsetTable1c.getDouble(1)), z, p);
                            totalCredit = totalCredit + rsetTable1c.getDouble(1);
                        }
                    }
//                                    
                    totalCoulumn = p;

                }
                System.err.println("   Populating Totals------------------------------------");

                jTable6.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalCash), z, totalCoulumn + 1);
                jTable6.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalCredit), z, totalCoulumn + 2);
//
//                } catch (SQLException ex) {
//                    Logger.getLogger(OPBillingReportIntfr.class.getName()).log(Level.SEVERE, null, ex);
//                }
                z++;
                System.err.println("-----------END--------------END--------------------END-------------");

                //end            
            }
            jTable6.setValueAt("Total", z, 0);
            for (int p = 1; p < jTable6.getColumnCount(); p++) {
                System.out.println("Columm total " + p);
                jTable6.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable6, p)), z, p);
            }

        } catch (Exception y) {
            y.printStackTrace();
        }
        //THERE

        // jTabbedPane1.setSelectedIndex(5);
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));        // TODO add your handling code here:
    }//GEN-LAST:event_departmentsymmaryActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
//        if (jTable4.getSelectedColumn() == 1 && jTable4.getSelectedRow() == 0) {
//        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jTable4MouseClicked

    private void waitingclinicscmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_waitingclinicscmbxItemStateChanged
       
    }//GEN-LAST:event_waitingclinicscmbxItemStateChanged

    private void waitingclinicscmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitingclinicscmbxActionPerformed
       
        generateRev();
        // Add your handling code here:
    }//GEN-LAST:event_waitingclinicscmbxActionPerformed

    private void paymentModeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentModeCmbxActionPerformed
       generateRev(); // TODO add your handling code here:
    }//GEN-LAST:event_paymentModeCmbxActionPerformed
private void generateRev(){
    if(paymentModeCmbx.getSelectedItem().toString().equalsIgnoreCase("Cash")){
          System.err.println("SELECT  patient_no, dealer,cash_point,  receipt_no, date, transaction_no ,  user_name , SUM(debit-credit) AS amount FROM public.ac_cash_collection \n" +
            "WHERE patient_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6 ,7 order by 4");
        
          jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  patient_no, dealer,cash_point,  receipt_no, date, transaction_no ,  user_name , SUM(debit-credit) AS amount FROM public.ac_cash_collection \n" +
            "WHERE patient_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6 ,7 order by 4 "));
                
               
    }else if(paymentModeCmbx.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
         System.err.println("SELECT  admission_no, item, payee, invoice_no, date, reference_no ,  user_name , SUM(debit-credit) AS amount FROM public.ac_debtors \n" +
            "WHERE admission_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6 ,7 order by 4");
       
         jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  admission_no, item, payee, invoice_no, date, reference_no ,  user_name , SUM(debit-credit) AS amount FROM public.ac_debtors \n" +
            "WHERE admission_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6 ,7 order by 4"));
         
    }else{
        System.err.println("SELECT  admission_no, item, payee, invoice_no, date, reference_no  , user_name , SUM(debit-credit) AS amount FROM public.ac_debtors \n" +
            "WHERE admission_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6 ,7 UNION "
                + "SELECT  patient_no, dealer,cash_point,  receipt_no, date, transaction_no ,  user_name , SUM(debit-credit) AS amount FROM public.ac_cash_collection \n" +
            "WHERE patient_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6  order by 4");
    
        jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  admission_no, item, payee, invoice_no, date, reference_no ,  user_name , SUM(debit-credit) AS amount FROM public.ac_debtors \n" +
            "WHERE admission_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6 ,7 UNION "
                + "SELECT  patient_no, dealer,cash_point,  receipt_no, date, transaction_no ,  user_name , SUM(debit-credit) AS amount FROM public.ac_cash_collection \n" +
            "WHERE patient_no IN (SELECT patient_no  FROM hp_patient_visit WHERE date BETWEEN '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  AND clinic = '"+waitingclinicscmbx.getSelectedItem().toString()+"') "
        + "and date between '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "' AND '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()) + "'  group by 1,2,3,4,5,6,7  order by 4"));
        
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker beginDatePicker;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox departmentsymmary;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JCheckBox glsymmary;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable6;
    private javax.swing.JButton openReportBtn;
    private javax.swing.JComboBox<String> paymentModeCmbx;
    private javax.swing.JLabel paymentModeLbl1;
    private javax.swing.JComboBox waitingclinicscmbx;
    // End of variables declaration//GEN-END:variables
}
