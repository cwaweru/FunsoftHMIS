/*
 * ReportIntfr.java
 *
 * Created on July 6, 2008, 4:40 PM
 */
package biz.systempartners.reports;

import java.sql.SQLException;

/**
 *
 * @author funsoft
 */
public class WaiversExemptionsRefundssReportIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;

    /**
     * Creates new form ReportIntfr
     */
    public WaiversExemptionsRefundssReportIntfr(java.sql.Connection connDb) {
        connectDB = connDb;
        initComponents();
        //  loadReport();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headerPanel = new javax.swing.JPanel();
        beginDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        beginDateLbl = new javax.swing.JLabel();
        endDateLbl = new javax.swing.JLabel();
        openReportBtn = new javax.swing.JButton();
        typeCbx = new javax.swing.JComboBox();
        patientTypeCmbx = new javax.swing.JComboBox();
        exeType = new javax.swing.JComboBox();
        reportBodyPanel = new javax.swing.JPanel();
        reportBodyJscrollPane = new javax.swing.JScrollPane();
        reportBodyTable = new com.afrisoftech.dbadmin.JTable();
        buttonPanel = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        reloadReportBtn = new javax.swing.JButton();
        spaceLable = new javax.swing.JLabel();
        totalsPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        totalCreditSalesTxt = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Funsoft Reporting Module - Exemptions, Waivers and Refunds ");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        headerPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(beginDatePicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(endDatePicker, gridBagConstraints);

        beginDateLbl.setText("Begin Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(beginDateLbl, gridBagConstraints);

        endDateLbl.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(endDateLbl, gridBagConstraints);

        openReportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Desktop.png"))); // NOI18N
        openReportBtn.setMnemonic('o');
        openReportBtn.setText("Open Report ...");
        openReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(openReportBtn, gridBagConstraints);

        typeCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Exemptions", "Waivers", "Refunds" }));
        typeCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(typeCbx, gridBagConstraints);

        patientTypeCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--ALL--", "OUT Patient", "IN Patient" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(patientTypeCmbx, gridBagConstraints);

        exeType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Exemptions", "Exemptions Detailed", "Exemptions Departmental" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(exeType, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(headerPanel, gridBagConstraints);

        reportBodyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));
        reportBodyPanel.setLayout(new java.awt.GridBagLayout());

        reportBodyTable.setForeground(new java.awt.Color(0, 0, 255));
        reportBodyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service_GL_Code", "Service Department", "Services", "Amount", "Operator"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reportBodyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportBodyTableMouseClicked(evt);
            }
        });
        reportBodyJscrollPane.setViewportView(reportBodyTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        reportBodyPanel.add(reportBodyJscrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        getContentPane().add(reportBodyPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        closeBtn.setMnemonic('l');
        closeBtn.setText("Close Reporter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeBtn, gridBagConstraints);

        reloadReportBtn.setMnemonic('r');
        reloadReportBtn.setText("Reload report");
        reloadReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(reloadReportBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spaceLable, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        totalsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        totalsPanel.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Total Exemptions/Waivers or Refunds");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        totalsPanel.add(jLabel3, gridBagConstraints);

        totalCreditSalesTxt.setEditable(false);
        totalCreditSalesTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        totalsPanel.add(totalCreditSalesTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(totalsPanel, gridBagConstraints);

        setBounds(0, 0, 960, 379);
    }// </editor-fold>//GEN-END:initComponents

    private void openReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openReportBtnActionPerformed

        loadReport();
        // TODO add your handling code here:
    }//GEN-LAST:event_openReportBtnActionPerformed

    private void reloadReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadReportBtnActionPerformed

        loadReport();

        // TODO add your handling code here:
    }//GEN-LAST:event_reloadReportBtnActionPerformed

    private void typeCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeCbxActionPerformed
        // TODO add your handling code here:
        if (!typeCbx.getSelectedItem().toString().contains("Exemptions")) {
            exeType.setVisible(false);
        } else {
            exeType.setVisible(true);
        }
    }//GEN-LAST:event_typeCbxActionPerformed

    private void reportBodyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportBodyTableMouseClicked
        // TODO add your handling code here:
        if (typeCbx.getSelectedItem().toString().contains("Exemptions")) {
            if (!exeType.getSelectedItem().toString().toLowerCase().contains("Detailedd")) {
                com.afrisoftech.reports.PatientCardPdf policyReport = new com.afrisoftech.reports.PatientCardPdf();//connectDB, transdatePicker.getDate(), transdatePicker.getDate(),nameNoTxt.getText());
//
            policyReport.PatientCardPdf(connectDB, beginDatePicker.getDate(), endDatePicker.getDate(), reportBodyTable.getValueAt(reportBodyTable.getSelectedRow(), 1).toString(),false);
            }
        }
    }//GEN-LAST:event_reportBodyTableMouseClicked

    private void loadReport() {

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

        if (typeCbx.getSelectedItem().toString().contains("Exemptions")) {
            if (!exeType.getSelectedItem().toString().equalsIgnoreCase("Exemptions")) {
                if (exeType.getSelectedItem().toString().equalsIgnoreCase("Exemptions Detailed")) {
                     reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, description, sum(credit-debit) as exempted_amount, user_name as operator,journal_no as Exemp_no FROM ac_cash_collection WHERE transaction_type ilike 'Exemption%' AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,4,6,7 "));

                }else{
                     reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT (SELECT activity FROM pb_activity WHERE code = (select activity_code from  ac_cash_collection ac where ac.receipt_no = \n" +
" ac1.receipt_no and ac.description ilike ac1.description and debit >0 LIMIT 1) )\n" +
"as department ,  sum(credit-debit) as exempted_amount\n" +
" FROM ac_cash_collection ac1 WHERE transaction_type ilike 'Exemption%' AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by  1 "));

                }

            } else {

                if (patientTypeCmbx.getSelectedItem().toString().contains("--ALL--")) {

                    reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as exempted_amount, user_name as operator,journal_no as Exemp_no, AGE(date,(select year_of_birth::date from hp_patient_register where patient_no = ac.patient_no)) AS age FROM ac_cash_collection ac WHERE transaction_type ilike 'Exemption%' AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6 UNION SELECT date::date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as exempted_amount, user_name as operator,requisition_no,AGE(date,(select year_of_birth::date from hp_patient_register where patient_no = ac.patient_no)) AS age FROM hp_patient_card ac WHERE (main_service ilike 'Exemption%' OR transaction_type ilike 'Exemption%') AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6,7 order by 1,2"));

                    this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

                } else if (patientTypeCmbx.getSelectedItem().toString().contains("OUT")) {

                    reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as exempted_amount, user_name as operator, journal_no as Exemp_no, AGE(date,(select year_of_birth::date from hp_patient_register where patient_no = ac.patient_no)) AS age FROM ac_cash_collection ac WHERE transaction_type ilike 'Exemption%' AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6 order by 1,2"));

                    this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

                } else {
                    reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date::date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as exempted_amount, user_name as operator,requisition_no, AGE(date,(select year_of_birth::date from hp_patient_register where patient_no = ac.patient_no UNION select year_of_birth::date from hp_inpatient_register where patient_no = ac.patient_no LIMIT 1 )) AS age FROM hp_patient_card ac WHERE (main_service ilike 'Exemption%' OR transaction_type ilike 'Exemption%') AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6,7 order by 1,2"));

                    this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                }
                try {
                    for (int i = 0; i < reportBodyTable.getRowCount(); i++) {
                        java.sql.Statement stmt = connectDB.createStatement();

                        //                java.sql.ResultSet rset = stmt.executeQuery("SELECT count(service) FROM hp_patient_card WHERE patient_no = '" + patient_no + "' AND visit_id = '"+visitIDTxt.getText()+"'");
                        java.sql.ResultSet rset = stmt.executeQuery("SELECT DISTINCT user_name FROM hp_patient_billing WHERE patient_no = '" + reportBodyTable.getValueAt(i, 1).toString() + "' AND visit_id = '" + reportBodyTable.getValueAt(i, 5) + "'");

                        while (rset.next()) {
                            if (rset.getString(1) != null && !rset.getString(1).equalsIgnoreCase("")) {
                                reportBodyTable.setValueAt(rset.getString(1), i, 4);
                            }
                        }
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }

        } else if (typeCbx.getSelectedItem().toString().contains("Waivers")) {

            if (patientTypeCmbx.getSelectedItem().toString().contains("--ALL--")) {

                reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as waived_amount, user_name as operator,journal_no as Exemp_no FROM ac_cash_collection WHERE transaction_type ilike 'Waiver%' AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6 UNION SELECT date::date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as waived_amount, user_name as operator,requisition_no FROM hp_patient_card WHERE (main_service ilike 'Waiver%' OR transaction_type ilike 'Waiver%') AND date::date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6 order by 1,2"));

                this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            } else if (patientTypeCmbx.getSelectedItem().toString().contains("OUT")) {

                reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as waived_amount, user_name as operator,journal_no as Exemp_no FROM ac_cash_collection WHERE transaction_type ilike 'Waiver%' AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6 order by 1,2"));

                this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            } else {
                reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date::date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as waived_amount, user_name as operator,requisition_no FROM hp_patient_card WHERE (main_service ilike 'Waiver%' OR transaction_type ilike 'Waiver%') AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5,6 order by 1,2"));

                this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            }

            try {
                for (int i = 0; i < reportBodyTable.getRowCount(); i++) {
                    java.sql.Statement stmt = connectDB.createStatement();

                    //                java.sql.ResultSet rset = stmt.executeQuery("SELECT count(service) FROM hp_patient_card WHERE patient_no = '" + patient_no + "' AND visit_id = '"+visitIDTxt.getText()+"'");
                    java.sql.ResultSet rset = stmt.executeQuery("SELECT DISTINCT user_name FROM hp_patient_billing WHERE patient_no = '" + reportBodyTable.getValueAt(i, 1).toString() + "' AND visit_id = '" + reportBodyTable.getValueAt(i, 5) + "'");

                    while (rset.next()) {
                        if (rset.getString(1) != null && !rset.getString(1).equalsIgnoreCase("")) {
                            reportBodyTable.setValueAt(rset.getString(1), i, 4);
                        }
                    }
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

        } else if (typeCbx.getSelectedItem().toString().contains("Refunds")) {

            if (patientTypeCmbx.getSelectedItem().toString().contains("--ALL--")) {

                reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as refund_amount, user_name as operator FROM ac_cash_collection WHERE transaction_type ilike '%cancel%' AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5 order by 1,2"));

                this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            } else if (patientTypeCmbx.getSelectedItem().toString().contains("OUT")) {

                reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date, patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as refund_amount, user_name as operator FROM ac_cash_collection WHERE transaction_type ilike '%cancel%' AND receipt_no NOT IN (SELECT DISTINCT requisition_no FROM hp_patient_card) AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5 order by 1,2"));

                this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            } else {

                reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date::date,  patient_no, funsoft_get_patient_name(patient_no) as patient_name, sum(credit-debit) as refund_amount, user_name as operator FROM hp_patient_card WHERE transaction_type ilike '%cancel%'  AND date between '" + beginDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' group by 1,2,3,5 order by 1,2"));

                this.totalCreditSalesTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(reportBodyTable, 3)));

                this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            }

        }
        // biz.systempartners.reports.TrialBalanceRpt trialBalanceReport = new biz.systempartners.reports.TrialBalanceRpt(connectDB, this.beginDatePicker.getDate(), this.endDatePicker.getDate());

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel beginDateLbl;
    private com.afrisoftech.lib.DatePicker beginDatePicker;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel endDateLbl;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JComboBox exeType;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton openReportBtn;
    private javax.swing.JComboBox patientTypeCmbx;
    private javax.swing.JButton reloadReportBtn;
    public static javax.swing.JScrollPane reportBodyJscrollPane;
    public static javax.swing.JPanel reportBodyPanel;
    public static javax.swing.JTable reportBodyTable;
    private javax.swing.JLabel spaceLable;
    private javax.swing.JTextField totalCreditSalesTxt;
    private javax.swing.JPanel totalsPanel;
    private javax.swing.JComboBox typeCbx;
    // End of variables declaration//GEN-END:variables

}
