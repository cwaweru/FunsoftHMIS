/*
 * ReportIntfr.java
 *
 * Created on July 6, 2008, 4:40 PM
 */
package biz.systempartners.reports;

import com.afrisoftech.hospinventory.ShowIssuedItemsDialog;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.ComboBoxModel;
import com.afrisoftech.lib.GetItemInfo;
import com.afrisoftech.lib.SQLDateFormat;
import com.afrisoftech.lib.UserName;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author funsoft
 */
public class TransactionTracker extends javax.swing.JInternalFrame {
    
    java.sql.Connection connectDB = null;
    JComboBox cmbox51 = new JComboBox();
    private String price;
    private Double unit_price;
    private Object timestamp;
    private String activity;

    /**
     * Creates new form ReportIntfr
     */
    public TransactionTracker(java.sql.Connection connDb) {
        connectDB = connDb;
        initComponents();

        //  loadReport();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        StoreDialog = new javax.swing.JDialog();
        jSearchPanel4 = new javax.swing.JPanel();
        storeSearchTxt = new javax.swing.JTextField();
        jSearchScrollPane4 = new javax.swing.JScrollPane();
        storeSearchTbl = new com.afrisoftech.dbadmin.JTable();
        jButton93 = new javax.swing.JButton();
        itemsDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        itemTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTbl = new javax.swing.JTable();
        disposeBtn = new javax.swing.JButton();
        GRN = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        grntxt = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        grntbl = new javax.swing.JTable();
        disposeBtn1 = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        spaceLable = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel59 = new javax.swing.JPanel();
        itemdescTxt = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        categoryCmbx = new javax.swing.JComboBox();
        storeCmbx = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel60 = new javax.swing.JPanel();
        itemcodetxt = new javax.swing.JTextField();
        endDpcker = new com.afrisoftech.lib.DatePicker();
        startDpcker = new com.afrisoftech.lib.DatePicker();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        unitstxt = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        reportBodyPanel = new javax.swing.JPanel();
        reportBodyJscrollPane = new javax.swing.JScrollPane();
        reportBodyTable = new com.afrisoftech.dbadmin.JTable();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        stCounttbl = new com.afrisoftech.dbadmin.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        dnoteTxt = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();

        StoreDialog.setModal(true);
        StoreDialog.setUndecorated(true);
        StoreDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel4.setLayout(new java.awt.GridBagLayout());

        storeSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                storeSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        jSearchPanel4.add(storeSearchTxt, gridBagConstraints);

        storeSearchTbl.setShowHorizontalLines(false);
        storeSearchTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                storeSearchTblMouseClicked(evt);
            }
        });
        jSearchScrollPane4.setViewportView(storeSearchTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel4.add(jSearchScrollPane4, gridBagConstraints);

        jButton93.setText("Dispose");
        jButton93.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton93ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jSearchPanel4.add(jButton93, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        StoreDialog.getContentPane().add(jSearchPanel4, gridBagConstraints);

        itemsDialog.setModal(true);
        itemsDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        itemTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(itemTxt, gridBagConstraints);

        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(itemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        disposeBtn.setText("Dispose");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel1.add(disposeBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        itemsDialog.getContentPane().add(jPanel1, gridBagConstraints);

        GRN.setModal(true);
        GRN.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        grntxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                grntxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(grntxt, gridBagConstraints);

        grntbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(grntbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane4, gridBagConstraints);

        disposeBtn1.setText("Dispose");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel5.add(disposeBtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        GRN.getContentPane().add(jPanel5, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Correct Stock Counting errors");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        closeBtn.setMnemonic('l');
        closeBtn.setText("Close Reporter");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spaceLable, gridBagConstraints);

        jButton1.setText("Update Entry");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        buttonPanel.add(jButton1, new java.awt.GridBagConstraints());

        jButton2.setText("Clear Screen");
        buttonPanel.add(jButton2, new java.awt.GridBagConstraints());

        jButton3.setText("Stock Ledger");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        buttonPanel.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        headerPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Store Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(jLabel1, gridBagConstraints);

        jPanel59.setLayout(new java.awt.GridBagLayout());

        itemdescTxt.setEditable(false);
        itemdescTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        itemdescTxt.setForeground(new java.awt.Color(102, 102, 102));
        itemdescTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemdescTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel59.add(itemdescTxt, gridBagConstraints);

        jButton23.setEnabled(false);
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel59.add(jButton23, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(jPanel59, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Item Category");
        jLabel4.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(jLabel4, gridBagConstraints);

        categoryCmbx.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        categoryCmbx.setForeground(new java.awt.Color(0, 0, 204));
        categoryCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        categoryCmbx.setBorder(new javax.swing.border.MatteBorder(null));
        categoryCmbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoryCmbxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        headerPanel.add(categoryCmbx, gridBagConstraints);

        storeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT initcap(store_name) FROM st_main_stores  order by 1"));
        storeCmbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                storeCmbxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        headerPanel.add(storeCmbx, gridBagConstraints);

        jLabel5.setText("Selected Item Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Item Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(jLabel6, gridBagConstraints);

        jPanel60.setLayout(new java.awt.GridBagLayout());

        itemcodetxt.setEditable(false);
        itemcodetxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        itemcodetxt.setForeground(new java.awt.Color(102, 102, 102));
        itemcodetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemcodetxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel60.add(itemcodetxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 500);
        headerPanel.add(jPanel60, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        headerPanel.add(endDpcker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        headerPanel.add(startDpcker, gridBagConstraints);

        jLabel2.setText("Begin date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        headerPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setText("End date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        headerPanel.add(jLabel3, gridBagConstraints);

        jLabel7.setText("Units");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        headerPanel.add(jLabel7, gridBagConstraints);

        unitstxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 500);
        headerPanel.add(unitstxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        getContentPane().add(headerPanel, gridBagConstraints);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        reportBodyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));
        reportBodyPanel.setLayout(new java.awt.GridBagLayout());

        reportBodyTable.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        reportBodyTable.setForeground(new java.awt.Color(0, 0, 255));
        reportBodyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        javax.swing.table.TableColumn column = null;
        //for (int i = 0; i < 5; i++) {
            //column = reportBodyTable.getColumnModel().getColumn(i);

            //if (i == 1) {
                //     column.setPreferredWidth(200);

                //   }

            // }

        //cmbox51.addActionListener(new java.awt.event.ActionListener() {

            //      public void actionPerformed(java.awt.event.ActionEvent evt) {

                //         cmbox51ActionPerformed(evt);
                //   }
            // });

    //javax.swing.table.TableColumn teditor2 = this.reportBodyTable.getColumn("NEW CATEGORY");
    //teditor2.setCellEditor(new javax.swing.DefaultCellEditor(cmbox51));
    //reportBodyTable.addMouseListener(new java.awt.event.MouseAdapter() {
        //  public void mouseClicked(java.awt.event.MouseEvent evt) {
            //    reportBodyTableMouseClicked(evt);
            // }
        //});
reportBodyTable.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        reportBodyTableMouseClicked(evt);
    }
    });
    reportBodyJscrollPane.setViewportView(reportBodyTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    reportBodyPanel.add(reportBodyJscrollPane, gridBagConstraints);

    jTextField1.setText("Type to Search...");
    jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField1CaretUpdate(evt);
        }
    });
    jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTextField1MouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 500);
    reportBodyPanel.add(jTextField1, gridBagConstraints);

    jTabbedPane1.addTab("Stock Items", reportBodyPanel);

    jPanel2.setLayout(new java.awt.GridBagLayout());

    stCounttbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {

        }
    ));
    jScrollPane2.setViewportView(stCounttbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jScrollPane2, gridBagConstraints);

    jCheckBox1.setText("View Stock Difference Transactions");
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox1ActionPerformed(evt);
        }
    });
    jPanel2.add(jCheckBox1, new java.awt.GridBagConstraints());

    jTabbedPane1.addTab("Stock Count Transactions", jPanel2);

    jPanel3.setLayout(new java.awt.GridBagLayout());

    jLabel8.setText("Dnote Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel3.add(jLabel8, gridBagConstraints);

    jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("DRN Reversals"));

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {},
            {},
            {},
            {}
        },
        new String [] {

        }
    ));
    jScrollPane3.setViewportView(jTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel3.add(jScrollPane3, gridBagConstraints);

    jPanel4.setLayout(new java.awt.GridBagLayout());

    dnoteTxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel4.add(dnoteTxt, gridBagConstraints);

    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    jPanel4.add(jButton4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
    jPanel3.add(jPanel4, gridBagConstraints);

    jButton5.setText("Update GRN Reversal");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    jPanel3.add(jButton5, gridBagConstraints);

    jLabel9.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    jPanel3.add(jLabel9, gridBagConstraints);

    jTextField3.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 500);
    jPanel3.add(jTextField3, gridBagConstraints);

    jLabel10.setText("Order Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    jPanel3.add(jLabel10, gridBagConstraints);

    jLabel11.setText("GRN No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    jPanel3.add(jLabel11, gridBagConstraints);

    jTextField4.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 500);
    jPanel3.add(jTextField4, gridBagConstraints);

    jTextField5.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 500);
    jPanel3.add(jTextField5, gridBagConstraints);

    jTabbedPane1.addTab("GRN REVERSAL Transactions", jPanel3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jTabbedPane1, gridBagConstraints);

    setBounds(0, 0, 1112, 481);
    }// </editor-fold>//GEN-END:initComponents

    private void itemdescTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemdescTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemdescTxtActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        System.out.println("Showing dialog");
        java.awt.Point point = itemdescTxt.getLocationOnScreen();
        StoreDialog.setSize(400, 200);
        StoreDialog.setLocation(point);
        StoreDialog.setVisible(true);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void storeSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_storeSearchTxtCaretUpdate
        // TODO add your handling code here:
        if (storeSearchTxt.getCaretPosition() > 3) {

            //            System.out.println("Nothing");
            //        } else {
            storeSearchTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct department_name,income_account from pb_departments where department_name ilike '" + storeSearchTxt.getText() + "%' order by 1"));
            
            jSearchScrollPane4.setViewportView(storeSearchTbl);
            
        }
    }//GEN-LAST:event_storeSearchTxtCaretUpdate

    private void storeSearchTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_storeSearchTblMouseClicked
        // TODO add your handling code here:
        itemdescTxt.setText(storeSearchTbl.getValueAt(storeSearchTbl.getSelectedRow(), 0).toString());
//        storeGLtxt.setText(storeSearchTbl.getValueAt(storeSearchTbl.getSelectedRow(), 1).toString());
        //refreshRecords();
        categoryCmbx.setModel(ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT sub_cat_code FROM st_stock_item WHERE department='" + itemdescTxt.getText() + "'  UNION SELECT DISTINCT category FROM st_stock_prices WHERE department ilike '" + itemdescTxt.getText() + "' ORDER BY 1"));
        StoreDialog.dispose();

    }//GEN-LAST:event_storeSearchTblMouseClicked

    private void jButton93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton93ActionPerformed
        // TODO add your handling code here:
        StoreDialog.dispose();
    }//GEN-LAST:event_jButton93ActionPerformed
    
    private void cmbox51ActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//       // supplierCodetxt.setText(getsupplierCode(supplierCmbx.getSelectedItem().toString()));
//    if(CheckDoubleAward(tenderNumbertxt.getText(), cmbox51.getSelectedItem().toString(), awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 1).toString())>0){
//      JOptionPane.showMessageDialog(this, "The item has already been awarded to M/s"+supplierCmbx.getSelectedItem().toString()+"\n Please contact Your team leader", "Error-check", JOptionPane.ERROR_MESSAGE);
//       ClearTable.removeSelectedRows(awardItemstbl);

        //}
    }
    private void reportBodyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportBodyTableMouseClicked
        // TODO add your handling code here:

        jTabbedPane1.setSelectedIndex(1);
        if (reportBodyTable.getSelectedColumn() == 0) {
            
            String item = reportBodyTable.getValueAt(reportBodyTable.getSelectedRow(), 0).toString();
            String item_desc = reportBodyTable.getValueAt(reportBodyTable.getSelectedRow(), 1).toString();
            String units = reportBodyTable.getValueAt(reportBodyTable.getSelectedRow(), 2).toString();
            
            unit_price = Double.valueOf(reportBodyTable.getValueAt(reportBodyTable.getSelectedRow(), 4).toString());
            
            itemcodetxt.setText(item);
            
            itemdescTxt.setText(item_desc);
            
            unitstxt.setText(units);

            // stCounttbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trans_date,receiving counted, '' stock_bal , '' stock_difference ,'' correct_count,price,total ,user_name from st_sub_stores where item_code ilike '" + item + "' and transaction_no ilike 'Stock Count%' and store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date::date BETWEEN '" + SQLDateFormat.getSQLDate(startDpcker.getDate()) + "' AND '" + SQLDateFormat.getSQLDate(endDpcker.getDate()) + "'  order by 1"));
            stCounttbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trans_date,receiving IN_, ''  OUT_, price,total ,user_name, false UPDATE_ from st_sub_stores where item_code ilike '" + item + "' and transaction_no ilike '%Stock%Count%' and store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date::date BETWEEN '" + SQLDateFormat.getSQLDate(startDpcker.getDate()) + "' AND '" + SQLDateFormat.getSQLDate(endDpcker.getDate()) + "'  order by 1"));
            
            System.out.println("select trans_date,receiving IN_, ''  OUT_, price,total ,user_name, false UPDATE_ from st_sub_stores where item_code ilike '" + item + "' and transaction_no ilike 'Stock Count%' and store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date::date BETWEEN '" + SQLDateFormat.getSQLDate(startDpcker.getDate()) + "' AND '" + SQLDateFormat.getSQLDate(endDpcker.getDate()) + "'  order by 1");
            
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
            
            Double bal = 0.0;
            Double counted = 0.0;
            Double diff = 0.0;
            for (int i = 0; i < stCounttbl.getRowCount(); i++) {
                
                String timestamp = stCounttbl.getValueAt(i, 0).toString();
                System.err.println(timestamp);
                
                try {
                    PreparedStatement pst = connectDB.prepareStatement("SELECT sum(qty) from stock_balance_qty WHERE item_code ILIKE '" + item + "' AND department ilike '" + storeCmbx.getSelectedItem() + "' AND dates < '" + timestamp + "'  ");
                    ResultSet rst = pst.executeQuery();
                    
                    while (rst.next()) {
                        
                        bal = rst.getDouble(1);
                        
                    }
                    counted = Double.valueOf(stCounttbl.getValueAt(i, 1).toString());
                    
                    stCounttbl.setValueAt(bal, i, 2);
                    
                    diff = counted - bal;
                    
                    stCounttbl.setValueAt(unit_price, i, 3);
                    System.out.println("Stock Balance before count:=[" + bal + "]  Physical count:= [" + counted + "]  Stock difference:=[" + diff + "]");
                    
                } catch (SQLException ex) {
                    Logger.getLogger(TransactionTracker.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            
        }
    }//GEN-LAST:event_reportBodyTableMouseClicked

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_closeBtnActionPerformed

    private void itemTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemTxtCaretUpdate
        // TODO add your handling code here:
        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct item_code, description, units , buying_price from st_stock_item where department ilike '" + itemdescTxt.getText() + "' AND (item_code ILIKE '%" + itemTxt.getText() + "%' OR description ILIKE '%" + itemTxt.getText() + "%')"));
    }//GEN-LAST:event_itemTxtCaretUpdate

    private void itemcodetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemcodetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemcodetxtActionPerformed

    private void storeCmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_storeCmbxItemStateChanged
        // TODO add your handling code here:
        categoryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' union select distinct initcap(sub_cat_code) from st_stock_item WHERE department ilike '" + storeCmbx.getSelectedItem().toString() + "' UNION select distinct category from st_stock_prices where department ilike '" + storeCmbx.getSelectedItem().toString() + "' order by 1"));
    }//GEN-LAST:event_storeCmbxItemStateChanged

    private void categoryCmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoryCmbxItemStateChanged
        // TODO add your handling code here:
        refreshRecords();
    }//GEN-LAST:event_categoryCmbxItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure To proceed", "CONFIRMATION", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            Double totalCount = 0.0, totalCredit = 0.0;
            if (jCheckBox1.isSelected()) {
                for (int i = 0; i < stCounttbl.getRowCount(); i++) {
                    if (stCounttbl.getValueAt(i, 6) == Boolean.TRUE) {
                        totalCount = Double.valueOf(stCounttbl.getValueAt(i, 1).toString()) * Double.valueOf(stCounttbl.getValueAt(i, 3).toString());
                        totalCredit = Double.valueOf(stCounttbl.getValueAt(i, 2).toString()) * Double.valueOf(stCounttbl.getValueAt(i, 3).toString());
                        timestamp = stCounttbl.getValueAt(i, 0);
                        try {
                            //CHECKING WHETHER THE STOCK_COUNT ENTRY IS IN THE SYSTEM
                            java.sql.PreparedStatement pstQ = connectDB.prepareStatement("SELECT * from st_sub_stores where item_code ilike '" + itemcodetxt.getText() + "' and ( transaction_no NOT like '%Stock%Count%')  and store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date='" + stCounttbl.getValueAt(i, 0) + "'  order by 1");
                            ResultSet rsQ = pstQ.executeQuery();
                            
                            while (rsQ.next()) {
                                System.out.println(rsQ.getObject(8));
                                
                                java.sql.PreparedStatement pstmt11c = connectDB.prepareStatement("insert into st_sub_stores values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                pstmt11c.setString(1, storeCmbx.getSelectedItem().toString());
                                pstmt11c.setObject(2, itemdescTxt.getText());
                                
                                pstmt11c.setDouble(3, Double.valueOf(stCounttbl.getValueAt(i, 1).toString()));
                                pstmt11c.setDouble(4, 0.00);
                                pstmt11c.setDouble(5, Double.valueOf(stCounttbl.getValueAt(i, 3).toString()));
                                pstmt11c.setDouble(6, (totalCount));
                                pstmt11c.setDouble(7, 0.00);
                                pstmt11c.setObject(8, "Stock Count");
                                pstmt11c.setObject(9, null);
                                pstmt11c.setObject(10, Timestamp.valueOf(stCounttbl.getValueAt(i, 0).toString()));
                                pstmt11c.setString(11, UserName.getLoginName(connectDB).toLowerCase());
                                pstmt11c.setObject(12, unitstxt.getText());
                                pstmt11c.setString(13, storeCmbx.getSelectedItem().toString());
                                pstmt11c.setObject(14, "Stock Count");
                                pstmt11c.setDouble(15, Double.valueOf(stCounttbl.getValueAt(i, 3).toString()));
                                pstmt11c.setObject(16, itemcodetxt.getText());
                                pstmt11c.setObject(17, "-");
                                pstmt11c.executeUpdate();
                                
                                PreparedStatement pst = connectDB.prepareStatement("UPDATE st_sub_stores set  issuing= '" + Double.valueOf(stCounttbl.getValueAt(i, 2).toString()) + "', receiving=0.0, total='" + totalCredit + "' WHERE item_code ILIKE '" + itemcodetxt.getText() + "' AND store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date= '" + timestamp + "' and transaction_no ilike '%Stock%Difference%'");
                                
                                pst.executeUpdate();
                            }
                            
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                            try {
                                connectDB.rollback();
                            } catch (SQLException ex1) {
                                Logger.getLogger(TransactionTracker.class.getName()).log(Level.SEVERE, null, ex1);
                            }
                            
                        }
                        
                    }
                }
                JOptionPane.showMessageDialog(this, "Transaction Balanced Succesfully");
            } else {
                
                for (int i = 0; i < stCounttbl.getRowCount(); i++) {
                    if (stCounttbl.getValueAt(i, 6) == Boolean.TRUE) {
                        
                        timestamp = stCounttbl.getValueAt(i, 0);
                        totalCount = Double.valueOf(stCounttbl.getValueAt(i, 1).toString()) * Double.valueOf(stCounttbl.getValueAt(i, 3).toString());
                        totalCredit = Double.valueOf(stCounttbl.getValueAt(i, 2).toString()) * Double.valueOf(stCounttbl.getValueAt(i, 3).toString());
                        
                        System.out.println("Code " + itemcodetxt.getText() + " Timestamp" + timestamp + " Selected row " + i);
                        try {
                            PreparedStatement pst = connectDB.prepareStatement("UPDATE st_sub_stores set receiving= '" + Double.valueOf(stCounttbl.getValueAt(i, 1).toString()) + "',issuing=0.00,total='" + totalCount + "' WHERE item_code ILIKE '" + itemcodetxt.getText() + "' AND store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date= '" + timestamp + "' and transaction_no ilike '%Stock%Count%'");
                            
                            pst.executeUpdate();
                            
                            pst = connectDB.prepareStatement("UPDATE st_sub_stores set  issuing= '" + Double.valueOf(stCounttbl.getValueAt(i, 2).toString()) + "', receiving=0.0, total='" + totalCredit + "' WHERE item_code ILIKE '" + itemcodetxt.getText() + "' AND store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date= '" + timestamp + "' and transaction_no ilike '%Stock%Difference%'");
                            
                            pst.executeUpdate();
                            
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(TransactionTracker.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                    }
                }
                
                JOptionPane.showMessageDialog(this, "Transaction completed");
            }
            activity="Stock count update for {"+itemdescTxt.getText()+"} {"+itemcodetxt.getText()+"}; Value:"+totalCount;
            GetItemInfo.updateTrail(activity, connectDB);
        }
        jCheckBox1.setSelected(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        // TODO add your handling code here:
        if (!categoryCmbx.getSelectedItem().toString().equalsIgnoreCase("-")) {
            
            reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct item_code,description,units,strength,buying_price,packaging from st_stock_item WHERE sub_cat_code ILIKE '" + categoryCmbx.getSelectedItem().toString() + "%' AND department ilike '" + storeCmbx.getSelectedItem().toString() + "%' and (item_code ilike '%" + jTextField1.getText() + "%' OR description ilike '%" + jTextField1.getText() + "%')  order by 1"));
            
        }
    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
        if (jTextField1.getText().equalsIgnoreCase("Type to Search...")) {
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        stCounttbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trans_date,issuing IN_, ''  OUT_, price,total ,user_name, false UPDATE_ from st_sub_stores where item_code ilike '" + itemcodetxt.getText() + "' and transaction_no ilike '%Stock%Difference%' and store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date::date BETWEEN '" + SQLDateFormat.getSQLDate(startDpcker.getDate()) + "' AND '" + SQLDateFormat.getSQLDate(endDpcker.getDate()) + "'  order by 1"));
        
        System.out.println("select trans_date,issuing IN_, ''  OUT_, price,total ,user_name, false UPDATE_ from st_sub_stores where item_code ilike '" + itemcodetxt.getText() + "' and transaction_no ilike '%Stock%Difference%' and store_name ilike '" + storeCmbx.getSelectedItem() + "' AND trans_date::date BETWEEN '" + SQLDateFormat.getSQLDate(startDpcker.getDate()) + "' AND '" + SQLDateFormat.getSQLDate(endDpcker.getDate()) + "'  order by 1");
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        
        Double bal = 0.0;
        Double counted = 0.0;
        Double diff = 0.0;
        for (int i = 0; i < stCounttbl.getRowCount(); i++) {
            
            String timestamp = stCounttbl.getValueAt(i, 0).toString();
            System.err.println(timestamp);
            
            try {
                PreparedStatement pst = connectDB.prepareStatement("SELECT sum(qty) from stock_balance_qty WHERE item_code ILIKE '" + itemcodetxt.getText() + "' AND department ilike '" + storeCmbx.getSelectedItem() + "' AND dates < '" + timestamp + "'  ");
                ResultSet rst = pst.executeQuery();
                
                while (rst.next()) {
                    
                    bal = rst.getDouble(1);
                    
                }
                counted = Double.valueOf(stCounttbl.getValueAt(i, 1).toString());
                
                stCounttbl.setValueAt(bal, i, 2);
                
                diff = counted - bal;
                
                stCounttbl.setValueAt(unit_price, i, 3);
                System.out.println("Stock Balance before count:=[" + bal + "]  Physical count:= [" + counted + "]  Stock difference:=[" + diff + "]");
                
            } catch (SQLException ex) {
                Logger.getLogger(TransactionTracker.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.hospinventory.StockLedgerStockControlCardNew policy = new com.afrisoftech.hospinventory.StockLedgerStockControlCardNew();
        
        policy.StockLedgerStockControlCardNew(connectDB, this.startDpcker.getDate(), this.endDpcker.getDate(), itemcodetxt.getText(), this.storeCmbx.getSelectedItem().toString(), itemTxt.getText());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        if (jTabbedPane1.getSelectedIndex() == 2) {
            jButton1.setEnabled(false);
        } else {
            jButton1.setEnabled(true);
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = dnoteTxt.getLocationOnScreen();
        GRN.setLocation(p);
        GRN.setSize(dnoteTxt.getWidth(), 200);
        GRN.setVisible(true);
        grntxt.setText(null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void grntxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_grntxtCaretUpdate
        // TODO add your handling code here:
        grntbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                    + "select distinct  invoice_no as DNOTE_NO,supplier,date,sum(debit-quantity_ordered) as amt,order_no as LPO_NO,grn_no as S13_NO from st_stock_cardex"
                    + " where invoice_no ILIKE '%" + grntxt.getText() + "%'  and transaction_type ILIKE '%Receiving%' and store ilike '"+storeCmbx.getSelectedItem()+"%' "
                    + "GROUP BY grn_no,invoice_no,supplier,date,order_no having sum(debit-quantity_ordered)>=0 ORDER BY invoice_no"));
        
    }//GEN-LAST:event_grntxtCaretUpdate
    
    private void refreshRecords() {
        
        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct item_code,description,units,strength,buying_price,packaging from st_stock_item WHERE sub_cat_code ILIKE '" + categoryCmbx.getSelectedItem().toString() + "%' AND department ilike '" + storeCmbx.getSelectedItem().toString() + "%' order by 1"));
        
    }
    //;    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog GRN;
    private javax.swing.JDialog StoreDialog;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JComboBox categoryCmbx;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton disposeBtn;
    private javax.swing.JButton disposeBtn1;
    private javax.swing.JTextField dnoteTxt;
    private com.afrisoftech.lib.DatePicker endDpcker;
    private javax.swing.JTable grntbl;
    private javax.swing.JTextField grntxt;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JTextField itemTxt;
    private javax.swing.JTextField itemcodetxt;
    private javax.swing.JTextField itemdescTxt;
    private javax.swing.JDialog itemsDialog;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton93;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel jSearchPanel4;
    private javax.swing.JScrollPane jSearchScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    public static javax.swing.JScrollPane reportBodyJscrollPane;
    public static javax.swing.JPanel reportBodyPanel;
    public static javax.swing.JTable reportBodyTable;
    private javax.swing.JLabel spaceLable;
    private javax.swing.JTable stCounttbl;
    private com.afrisoftech.lib.DatePicker startDpcker;
    private javax.swing.JComboBox storeCmbx;
    private javax.swing.JTable storeSearchTbl;
    private javax.swing.JTextField storeSearchTxt;
    private javax.swing.JTextField unitstxt;
    // End of variables declaration//GEN-END:variables

}
