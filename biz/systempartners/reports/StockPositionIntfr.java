/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.systempartners.reports;

import com.afrisoftech.lib.SQLDateFormat;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.openide.util.Exceptions;

/**
 *
 * @author saleem
 */
public class StockPositionIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form StockPositionIntfr
     */
    java.sql.Connection connectDB = null;
    com.afrisoftech.lib.DBObject dbObject = null;
    private String store;
    private String code;
    Double bal = 0.0;

    public StockPositionIntfr(java.sql.Connection connDb) {
        connectDB = connDb;
        dbObject = new com.afrisoftech.lib.DBObject();
        initComponents();

        com.afrisoftech.dbadmin.TableModel.TableGroupedBooleanColumn(storesTbl, 2);

        jLabel2.setText("NO OF STOCK OUTLETS: " + storesTbl.getRowCount());

    }

    private Double populateBalances(String store) {

        Double balance = 0.00;
        try {
            PreparedStatement pst = connectDB.prepareStatement("select sum((receiving-issuing)*price) from st_sub_stores where store_name ilike  '" + store + "' and trans_date::date  <= '" + SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "'");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {
                balance = rset.getDouble(1);
            }
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }

        return balance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        storesTbl = new com.afrisoftech.dbadmin.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        beginDatePicker = new com.afrisoftech.lib.DatePicker();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        storesTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT upper(store_name) AS STORE, '' STOCK_VALUE, FALSE AS DRILL_DOWN from st_main_stores UNION SELECT DISTINCT upper(store_name) AS STORE, '' STOCK_VALUE, FALSE AS DRILL_DOWN  FROM st_stores WHERE status ILIKE 'pharmacy' ORDER BY 1")
        );
        storesTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                storesTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(storesTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(StockPositionIntfr.class, "StockPositionIntfr.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel2, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(StockPositionIntfr.class, "StockPositionIntfr.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel3, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(StockPositionIntfr.class, "StockPositionIntfr.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new java.awt.GridBagConstraints());

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(StockPositionIntfr.class, "StockPositionIntfr.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.setLayout(new java.awt.GridBagLayout());

        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(itemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane2, gridBagConstraints);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(StockPositionIntfr.class, "StockPositionIntfr.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(StockPositionIntfr.class, "StockPositionIntfr.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTabbedPane1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(StockPositionIntfr.class, "StockPositionIntfr.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(beginDatePicker, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        for (int i = 0; i < storesTbl.getRowCount(); i++) {
            store = storesTbl.getValueAt(i, 0).toString();
            populateBalances(store);

            System.err.println(store);

            storesTbl.setValueAt(populateBalances(store), i, 1);

        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

//        jLabel3.setText("TOTAL STOCK VALUE: " + com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(storesTbl, 1));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void storesTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_storesTblMouseClicked
        // TODO add your handling code here:

        jTabbedPane1.setSelectedIndex(1);

        store = storesTbl.getValueAt(storesTbl.getSelectedRow(), 0).toString();

        itemsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT product_id,initcap(product) AS DESC,transfer_price cost_of_sale,''AS  STOCK_BALANCE, '' AS STOCK_VALUE FROM st_stock_prices WHERE department ILIKE '" + store + "'"
                + "UNION SELECT DISTINCT ITEM_CODE,initcap(DESCRIPTION) AS DESC, BUYING_PRICE as cost_of_sale,'' AS STOCK_BALANCE,'' AS STOCK_VALUE FROM ST_STOCK_ITEM WHERE department ILIKE '" + store + "'"));

        jTabbedPane1.setSelectedIndex(1);

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {
            code = itemsTbl.getValueAt(i, 0).toString();
            populateitemBalances(code);

            System.err.println(code + "==> value=" );

           itemsTbl.setValueAt(populateitemBalances(code), i, 3);
          
           Double st_balance= Double.valueOf(itemsTbl.getValueAt(i,3).toString());
           Double price= Double.valueOf(itemsTbl.getValueAt(i,2).toString());;
           Double value= st_balance * price;
           //value = Double.valueOf(itemsTbl.getValueAt(i,3)*itemsTbl.getValueAt(i,2));
           itemsTbl.setValueAt(value, i, 4);
           
           
           
        }


    }//GEN-LAST:event_storesTblMouseClicked
    private Double populateitemBalances(String code) {

        try {
            PreparedStatement pst = connectDB.prepareStatement("SELECT sum(qty)::NUMERIC(15,0) AS BALANCE FROM stock_balance_qty where department ilike  '" + store + "' AND item_code ilike '" + code + "%'   and dates::date  <= '" + SQLDateFormat.getSQLDate(beginDatePicker.getDate()) + "'");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {
                bal = rset.getDouble(1);
            }
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }

        return bal;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker beginDatePicker;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable storesTbl;
    // End of variables declaration//GEN-END:variables
}
