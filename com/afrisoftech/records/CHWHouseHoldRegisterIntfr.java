/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */
package com.afrisoftech.records;

/**
 *
 * @author Charles Waweru <cwaweru@systempartners.biz>
 */
public class CHWHouseHoldRegisterIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public CHWHouseHoldRegisterIntfr(java.sql.Connection connDb) {

        connectDB = connDb;

        //  pConnDB = pconnDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        householdSearchDialog = new javax.swing.JDialog();
        ancSearchPanel = new javax.swing.JPanel();
        searchHouseHoldFileTxt = new javax.swing.JTextField();
        householdSearchScrollPane = new javax.swing.JScrollPane();
        householdSearchTable = new com.afrisoftech.dbadmin.JTable();
        dispose = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        houseHoldInfoPanel = new javax.swing.JPanel();
        motherLbl = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameLbl = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JTextField();
        middleNameLbl = new javax.swing.JLabel();
        middleNameTxt = new javax.swing.JTextField();
        occupationLbl = new javax.swing.JLabel();
        occupationCmbx = new javax.swing.JComboBox();
        educationLevelLbl = new javax.swing.JLabel();
        educationLevelCmbx = new javax.swing.JComboBox();
        reasonForVisitLbl = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        expectedNoofPregLbl = new javax.swing.JLabel();
        telephoneTxt = new javax.swing.JTextField();
        ancNumberLbl = new javax.swing.JLabel();
        householdNumberTxt = new javax.swing.JTextField();
        dobPanel = new javax.swing.JPanel();
        dobLbl = new javax.swing.JLabel();
        datePickerYOB = new com.afrisoftech.lib.DatePicker();
        ageTxt = new javax.swing.JTextField();
        ageLbl = new javax.swing.JLabel();
        villageTxt = new javax.swing.JLabel();
        residenceTxt = new javax.swing.JTextField();
        educationLevelLbl1 = new javax.swing.JLabel();
        genderCmbx = new javax.swing.JComboBox();
        cardOpeningOptionsPanel = new javax.swing.JPanel();
        createNewCardRdbtn = new javax.swing.JRadioButton();
        revisitRdbtn = new javax.swing.JRadioButton();
        createExistingCardRdbtn = new javax.swing.JRadioButton();
        ancCardSearchField = new javax.swing.JButton();
        ancVisitDateLbl = new javax.swing.JLabel();
        hhVisitDatePicker = new com.afrisoftech.lib.DatePicker();
        referralsPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentsTxt = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        patientNumberTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        indivindualNoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        usingFPCmbx = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        disabilityCmbx = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        chronicIllnessCmbx = new javax.swing.JComboBox();
        householdIndicatorsPanel = new javax.swing.JPanel();
        householdScrollPane = new javax.swing.JScrollPane();
        householdIndicatorsTable = new com.afrisoftech.dbadmin.JTable();
        buttonPanel = new javax.swing.JPanel();
        saveMotherInfoBtn = new javax.swing.JButton();
        regEditdataBtn = new javax.swing.JButton();
        regClearFormBtn = new javax.swing.JButton();
        regCloseFormBtn = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();

        householdSearchDialog.setUndecorated(true);
        householdSearchDialog.setResizable(false);
        householdSearchDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                householdSearchDialogComponentHidden(evt);
            }
        });
        householdSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        ancSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ancSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchHouseHoldFileTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchHouseHoldFileTxtCaretUpdate(evt);
            }
        });
        searchHouseHoldFileTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchHouseHoldFileTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        ancSearchPanel.add(searchHouseHoldFileTxt, gridBagConstraints);

        householdSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        householdSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                householdSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = householdSearchTable.getModel();

                householdSearchScrollPane.setViewportView(householdSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = householdSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            householdSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    householdSearchTableMouseClicked(evt);
                }
            });
            householdSearchScrollPane.setViewportView(householdSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            ancSearchPanel.add(householdSearchScrollPane, gridBagConstraints);

            dispose.setText("Dispose");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            householdSearchDialog.getContentPane().add(ancSearchPanel, gridBagConstraints);

            setClosable(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Community Health Extension Worker - Household Register - MOH:513");
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());

            houseHoldInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Client Information"));
            houseHoldInfoPanel.setLayout(new java.awt.GridBagLayout());

            motherLbl.setText("First Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(motherLbl, gridBagConstraints);

            firstNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            firstNameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(firstNameTxt, gridBagConstraints);

            lastNameLbl.setText("Last/SurName");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(lastNameLbl, gridBagConstraints);

            lastNameTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            lastNameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(lastNameTxt, gridBagConstraints);

            middleNameLbl.setText("Middle Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(middleNameLbl, gridBagConstraints);

            middleNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            middleNameTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(middleNameTxt, gridBagConstraints);

            occupationLbl.setText("Occupation Information");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(occupationLbl, gridBagConstraints);

            occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT occupations FROM pb_occupation ORDER BY occupations"));
            occupationCmbx.setMinimumSize(new java.awt.Dimension(100, 18));
            occupationCmbx.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(occupationCmbx, gridBagConstraints);

            educationLevelLbl.setText("Education Level");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(educationLevelLbl, gridBagConstraints);

            educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT edu_name FROM pb_education ORDER BY edu_name"));
            educationLevelCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(educationLevelCmbx, gridBagConstraints);

            reasonForVisitLbl.setText("Address");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(reasonForVisitLbl, gridBagConstraints);

            addressTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            addressTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(addressTxt, gridBagConstraints);

            expectedNoofPregLbl.setText("Telephone\\Mobile No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(expectedNoofPregLbl, gridBagConstraints);

            telephoneTxt.setMinimumSize(new java.awt.Dimension(40, 19));
            telephoneTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(telephoneTxt, gridBagConstraints);

            ancNumberLbl.setText("Household No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(ancNumberLbl, gridBagConstraints);

            householdNumberTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            householdNumberTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    householdNumberTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            houseHoldInfoPanel.add(householdNumberTxt, gridBagConstraints);

            dobPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter date of birth or Household Member Age here ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 51, 153))); // NOI18N
            dobPanel.setLayout(new java.awt.GridBagLayout());

            dobLbl.setText("Member Date of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            dobPanel.add(dobLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            dobPanel.add(datePickerYOB, gridBagConstraints);

            ageTxt.setToolTipText("Enter age of patient here");
            ageTxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            ageTxt.setMinimumSize(new java.awt.Dimension(50, 18));
            ageTxt.setPreferredSize(new java.awt.Dimension(50, 18));
            ageTxt.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    ageTxtCaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            dobPanel.add(ageTxt, gridBagConstraints);

            ageLbl.setText("Age(Years)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            dobPanel.add(ageLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            houseHoldInfoPanel.add(dobPanel, gridBagConstraints);

            villageTxt.setForeground(new java.awt.Color(255, 51, 153));
            villageTxt.setText("Village/Estate");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(villageTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.8;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(residenceTxt, gridBagConstraints);

            educationLevelLbl1.setText("Gender");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(educationLevelLbl1, gridBagConstraints);

            genderCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Female", "Male" }));
            genderCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(genderCmbx, gridBagConstraints);

            cardOpeningOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tick where appropriate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
            cardOpeningOptionsPanel.setLayout(new java.awt.GridBagLayout());

            createNewCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createNewCardRdbtn);
            createNewCardRdbtn.setSelected(true);
            createNewCardRdbtn.setText("Create New Card");
            createNewCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createNewCardRdbtn.setIconTextGap(1);
            createNewCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createNewCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createNewCardRdbtn, gridBagConstraints);

            revisitRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(revisitRdbtn);
            revisitRdbtn.setText("Revisit");
            revisitRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            revisitRdbtn.setIconTextGap(0);
            revisitRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    revisitRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(revisitRdbtn, gridBagConstraints);

            createExistingCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createExistingCardRdbtn);
            createExistingCardRdbtn.setForeground(new java.awt.Color(51, 51, 255));
            createExistingCardRdbtn.setText("Create Existing Card");
            createExistingCardRdbtn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            createExistingCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createExistingCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createExistingCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createExistingCardRdbtn, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            houseHoldInfoPanel.add(cardOpeningOptionsPanel, gridBagConstraints);

            ancCardSearchField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            ancCardSearchField.setToolTipText("Search");
            ancCardSearchField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            ancCardSearchField.setMaximumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setMinimumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setPreferredSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            ancCardSearchField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ancCardSearchFieldActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            houseHoldInfoPanel.add(ancCardSearchField, gridBagConstraints);

            ancVisitDateLbl.setText("Visit Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(ancVisitDateLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            houseHoldInfoPanel.add(hhVisitDatePicker, gridBagConstraints);

            referralsPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Comments and Other Information"));
            referralsPanel1.setLayout(new java.awt.GridBagLayout());

            commentsTxt.setColumns(20);
            commentsTxt.setRows(5);
            jScrollPane1.setViewportView(commentsTxt);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            referralsPanel1.add(jScrollPane1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 50.0;
            houseHoldInfoPanel.add(referralsPanel1, gridBagConstraints);

            jLabel8.setText("Patient Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(jLabel8, gridBagConstraints);

            patientNumberTxt.setMinimumSize(new java.awt.Dimension(200, 20));
            patientNumberTxt.setPreferredSize(new java.awt.Dimension(200, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(patientNumberTxt, gridBagConstraints);

            jLabel1.setText("Indivindual No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(jLabel1, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(indivindualNoTxt, gridBagConstraints);

            jLabel2.setText("Relationship to House Head");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(jLabel2, gridBagConstraints);

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1 - HHH", "2 - Spouse", "3 - Child (B)", "4 - Child (R)", "5 - Grandchild", "6 - Brother/Sister", "7 - Others" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(jComboBox1, gridBagConstraints);

            jLabel3.setText("Using Family Planning methods");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(jLabel3, gridBagConstraints);

            usingFPCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1 - Modern", "2 - Traditional/Natural", "3 - None", " " }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(usingFPCmbx, gridBagConstraints);

            jLabel4.setText("Known Disability");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(jLabel4, gridBagConstraints);

            disabilityCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1 - Visual", "2 - Hearing", "3 - Speech", "4 - Physical", "5 - Mental", "6 - Other" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(disabilityCmbx, gridBagConstraints);

            jLabel5.setText("Known Chronic Illness");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            houseHoldInfoPanel.add(jLabel5, gridBagConstraints);

            chronicIllnessCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1 - Diabetes", "2 - Cancer", "3 - Mental Illness", "4 - Hypertension", "5 - Chronic Respiratory Diseases" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            houseHoldInfoPanel.add(chronicIllnessCmbx, gridBagConstraints);

            jTabbedPane1.addTab("Household Register - Page 1", houseHoldInfoPanel);

            householdIndicatorsPanel.setLayout(new java.awt.GridBagLayout());

            householdScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tick as appropriate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

            householdIndicatorsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT indicator_code, indicator_description, indicator_comments, false as noted_visit FROM che.community_health_indicators_setup ORDER BY 2")
            );
            householdScrollPane.setViewportView(householdIndicatorsTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.gridheight = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 200.0;
            householdIndicatorsPanel.add(householdScrollPane, gridBagConstraints);

            jTabbedPane1.addTab("Household Register Indicators - Page 2", householdIndicatorsPanel);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            buttonPanel.setPreferredSize(new java.awt.Dimension(224, 20));
            buttonPanel.setLayout(new java.awt.GridBagLayout());

            saveMotherInfoBtn.setText("Save data for household visit");
            saveMotherInfoBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveMotherInfoBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(saveMotherInfoBtn, gridBagConstraints);

            regEditdataBtn.setText("Edit file data");
            regEditdataBtn.setEnabled(false);
            regEditdataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regEditdataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regEditdataBtn, gridBagConstraints);

            regClearFormBtn.setText("Clear form");
            regClearFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regClearFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regClearFormBtn, gridBagConstraints);

            regCloseFormBtn.setText("Close form");
            regCloseFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regCloseFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regCloseFormBtn, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(spacerLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(buttonPanel, gridBagConstraints);

            setBounds(0, 0, 817, 497);
        }// </editor-fold>//GEN-END:initComponents

    private void regEditdataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEditdataBtnActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_regEditdataBtnActionPerformed

    private void saveMotherInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMotherInfoBtnActionPerformed
        if (householdNumberTxt.getText().isEmpty() || ageTxt.getText().isEmpty() || patientNumberTxt.getText().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Client member number, member age and household number cannot be empty");
        } else {
            try {
                connectDB.setAutoCommit(false);
                for (int i = 0; i < householdIndicatorsTable.getRowCount(); i++) {
                    if (Boolean.parseBoolean(householdIndicatorsTable.getValueAt(i, 3).toString())) {
                        java.sql.PreparedStatement pstmtImmunisationInfo = connectDB.prepareStatement("INSERT INTO che.chw_house_hold_register("
                                + "            date_of_visit, member_code, house_hold_number, "
                                + "            member_name, village, age, telephone_no, "
                                + "            service_indicator, using_modern_fp, "
                                + "            known_disability, known_chronic_illness, gender, date_of_birth, education_level, occupation, comments)"
                                + "    VALUES (?, ?, ?, ?, ?, "
                                + "            ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmtImmunisationInfo.setDate(1, com.afrisoftech.lib.SQLDateFormat.getSQLDate(hhVisitDatePicker.getDate()));
                        pstmtImmunisationInfo.setString(2, indivindualNoTxt.getText());
                        pstmtImmunisationInfo.setString(3, householdNumberTxt.getText());
                        pstmtImmunisationInfo.setString(4, firstNameTxt.getText() + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
                        pstmtImmunisationInfo.setString(5, residenceTxt.getText());
                        pstmtImmunisationInfo.setInt(6, java.lang.Integer.valueOf(ageTxt.getText()));
                        pstmtImmunisationInfo.setString(7, telephoneTxt.getText());
                        pstmtImmunisationInfo.setObject(8, householdIndicatorsTable.getValueAt(i, 0));
                        pstmtImmunisationInfo.setObject(9, usingFPCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(10, disabilityCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(11, chronicIllnessCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(12, genderCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(13, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePickerYOB.getDate()));
                        pstmtImmunisationInfo.setObject(14, educationLevelCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(15, occupationCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(16, commentsTxt.getText());
                        pstmtImmunisationInfo.execute();

                    }
                }
                results();
                javax.swing.JOptionPane.showMessageDialog(this, "Household data regsitered successfully");
                connectDB.commit();
                connectDB.setAutoCommit(true);
            } catch (java.sql.SQLException sqlEx) {
                sqlEx.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getLocalizedMessage());
            }

        }
        //}
        // TODO add your handling code here:
}//GEN-LAST:event_saveMotherInfoBtnActionPerformed
    public void results() {
        this.getContentPane().removeAll();
        this.initComponents();
        this.setSize(com.afrisoftech.hospital.HospitalMain.saccopn.getSize());
        // javax.swing.JOptionPane.showMessageDialog(this, "Data posted to database successfully. Click OK button or press ENTER key to continue");

    }
    private void searchHouseHoldFileTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchHouseHoldFileTxtCaretUpdate
        //        if(jCheckBox7.isSelected()){
        if (searchHouseHoldFileTxt.getCaretPosition() < 6) {

            System.out.println("Nothing");
        } else {
            householdSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT "
                    + "house_hold_no, house_hold_head_name FROM"
                    + " che.chw_house_hold_register WHERE (patient_no ILIKE '%" + searchHouseHoldFileTxt.getText() + "%' "
                    + "OR first_name||' '||second_name||' '||last_name ILIKE '%" + searchHouseHoldFileTxt.getText() + "%') "
                    + " ORDER BY 1"));
            householdSearchTable.setShowHorizontalLines(false);
            householdSearchScrollPane.setViewportView(householdSearchTable);

        }
// Add your handling code here:
}//GEN-LAST:event_searchHouseHoldFileTxtCaretUpdate

    private void searchHouseHoldFileTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchHouseHoldFileTxtFocusLost
        //      jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_searchHouseHoldFileTxtFocusLost

    private void householdSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_householdSearchTableMouseClicked
        this.householdNumberTxt.setText(householdSearchTable.getValueAt(householdSearchTable.getSelectedRow(), 0).toString());
        this.patientNumberTxt.setText(householdSearchTable.getValueAt(householdSearchTable.getSelectedRow(), 0).toString());
        this.lastNameTxt.setText(householdSearchTable.getValueAt(householdSearchTable.getSelectedRow(), 1).toString());
        middleNameTxt.setText(householdSearchTable.getValueAt(householdSearchTable.getSelectedRow(), 2).toString());
        firstNameTxt.setText(householdSearchTable.getValueAt(householdSearchTable.getSelectedRow(), 3).toString());
//        ageTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 4).toString());

        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT file_no,surname,other_names,pat_age,nok,relationship,residence,date_admitted FROM hp_patient_register WHERE file_no ='" + householdNumberTxt.getText() + "' ORDER By date_admitted DESC LIMIT 1");
            while (rset1.next()) {

                //otherConditionDetailsTxt.setText(rset1.getObject(1).toString());
                //  placeofDeliveryTxt.setText(rset1.getObject(2).toString());
                //   jTextField25.setText(rset1.getObject(3).toString());
                ageTxt.setText(rset1.getObject(4).toString());
                //jTextField8.setText(rset1.getObject(5).toString());
                // this.nokRelationShipCmbx.setSelectedItem(rset1.getObject(6).toString());
                residenceTxt.setText(rset1.getObject(7).toString());
            }

            java.sql.Statement stmt12 = connectDB.createStatement();
            java.sql.ResultSet rset12 = stmt12.executeQuery("SELECT address,pat_district,pat_location,chief_name,sub_chief FROM hp_admission WHERE patient_no ='" + householdNumberTxt.getText() + "'  ");
            while (rset12.next()) {

                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                sdf.applyPattern("yyyy-MM-dd");
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqe.getMessage());
            //  System.out.println("Insert not successful");
        }
        householdSearchDialog.dispose();

        // Add your handling code here:
}//GEN-LAST:event_householdSearchTableMouseClicked

    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        householdSearchDialog.dispose();
        // Add your handling code here:
}//GEN-LAST:event_disposeActionPerformed

    private void householdSearchDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_householdSearchDialogComponentHidden
        //        jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_householdSearchDialogComponentHidden

    private void regClearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regClearFormBtnActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_regClearFormBtnActionPerformed

    private void regCloseFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regCloseFormBtnActionPerformed
        this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_regCloseFormBtnActionPerformed

    private void ancCardSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancCardSearchFieldActionPerformed

        searchButtonClicked();

        householdIndicatorsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT indicator_code, indicator_description, indicator_comments, false as noted_this_visit FROM che.chw_house_hold_register ORDER BY 2"));

        // Add your handling code here:
    }//GEN-LAST:event_ancCardSearchFieldActionPerformed

    private void createExistingCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createExistingCardRdbtnActionPerformed
        createNewCardRdbtnActionPerformed(evt);
        householdNumberTxt.setEditable(true);
        //        jTextField18.setText("0");

        // TODO add your handling code here:
    }//GEN-LAST:event_createExistingCardRdbtnActionPerformed

    private void revisitRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revisitRdbtnActionPerformed

        // Add your handling code here:
    }//GEN-LAST:event_revisitRdbtnActionPerformed

    private void createNewCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewCardRdbtnActionPerformed
        educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
//        genderCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Single", "Married", "Divorced", "Window", "Other"}));
//        religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY religion_name"));
        occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
        residenceTxt.setText("");
        householdNumberTxt.setText("");
        firstNameTxt.setText("");
        searchHouseHoldFileTxt.setText("");
        middleNameTxt.setText("");
        lastNameTxt.setText("");
        addressTxt.setText("");
        telephoneTxt.setText("");
        //    nameofFatherTxt.setText("");
        ageTxt.setText("0");
        middleNameTxt.setEditable(true);
        lastNameTxt.setEditable(true);
        addressTxt.setEditable(true);
        telephoneTxt.setEditable(true);
        //   nameofFatherTxt.setEditable(true);
        ageTxt.setEditable(true);
        residenceTxt.setEditable(true);
        householdNumberTxt.setEditable(true);
        ancCardSearchField.setEnabled(true);
        firstNameTxt.setEditable(true);
        String useonenumber = null;
        try {
            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select ip_numbering,use_one_number from pb_patient_names");
            while (rsetx.next()) {
                //  autonumber = rsetx.getBoolean(1);
                useonenumber = rsetx.getString(2);
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rss1 = pss1.executeQuery("select file_no from hp_maternity_register ORDER BY OID desc LIMIT 1");
                while (rss1.next()) {

                }
            }
            rsetx.close();
            stmtx.close();

        } catch (java.sql.SQLException sqe) {
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqe.getMessage());
            sqe.printStackTrace();
            System.out.println("selection not successful");
        }
        // Add your handling code here:
    }//GEN-LAST:event_createNewCardRdbtnActionPerformed

    private void ageTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_ageTxtCaretUpdate
        if (ageTxt.getText().equalsIgnoreCase("")) {
        } else {
            float ages = java.lang.Float.valueOf(ageTxt.getText());
            int ageYrs = java.lang.Math.round(ages);
            try {
                java.sql.Statement stmnza = connectDB.createStatement();
                java.sql.ResultSet rsnza = stmnza.executeQuery("select (CURRENT_DATE::DATE - ('" + ageYrs + "'*365))");
                while (rsnza.next()) {
                    java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                    java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                    sdf.applyPattern("yyyy-MM-dd");
                    try {
                        this.datePickerYOB.setDate(sdf.parse(rsnza.getString(1)));

                    } catch (java.text.ParseException pe) {
                        javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                    }
                }
            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTxtCaretUpdate

    private void householdNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_householdNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_householdNumberTxtActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.householdNumberTxt.getLocationOnScreen();

        householdSearchDialog.setSize(700, 200);

        householdSearchDialog.setLocation(point);

        householdSearchDialog.setVisible(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JButton ancCardSearchField;
    private javax.swing.JLabel ancNumberLbl;
    private javax.swing.JPanel ancSearchPanel;
    private javax.swing.JLabel ancVisitDateLbl;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel cardOpeningOptionsPanel;
    private javax.swing.JComboBox chronicIllnessCmbx;
    private javax.swing.JTextArea commentsTxt;
    public javax.swing.JRadioButton createExistingCardRdbtn;
    private javax.swing.JRadioButton createNewCardRdbtn;
    private com.afrisoftech.lib.DatePicker datePickerYOB;
    private javax.swing.JComboBox disabilityCmbx;
    private javax.swing.JButton dispose;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JPanel dobPanel;
    private javax.swing.JComboBox educationLevelCmbx;
    private javax.swing.JLabel educationLevelLbl;
    private javax.swing.JLabel educationLevelLbl1;
    private javax.swing.JLabel expectedNoofPregLbl;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JComboBox genderCmbx;
    private com.afrisoftech.lib.DatePicker hhVisitDatePicker;
    private javax.swing.JPanel houseHoldInfoPanel;
    private javax.swing.JPanel householdIndicatorsPanel;
    private javax.swing.JTable householdIndicatorsTable;
    private javax.swing.JTextField householdNumberTxt;
    private javax.swing.JScrollPane householdScrollPane;
    private javax.swing.JDialog householdSearchDialog;
    private javax.swing.JScrollPane householdSearchScrollPane;
    private javax.swing.JTable householdSearchTable;
    private javax.swing.JTextField indivindualNoTxt;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lastNameLbl;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JLabel middleNameLbl;
    private javax.swing.JTextField middleNameTxt;
    private javax.swing.JLabel motherLbl;
    private javax.swing.JComboBox occupationCmbx;
    private javax.swing.JLabel occupationLbl;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JLabel reasonForVisitLbl;
    private javax.swing.JPanel referralsPanel1;
    private javax.swing.JButton regClearFormBtn;
    private javax.swing.JButton regCloseFormBtn;
    private javax.swing.JButton regEditdataBtn;
    private javax.swing.JTextField residenceTxt;
    private javax.swing.JRadioButton revisitRdbtn;
    private javax.swing.JButton saveMotherInfoBtn;
    private javax.swing.JTextField searchHouseHoldFileTxt;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JTextField telephoneTxt;
    private javax.swing.JComboBox usingFPCmbx;
    private javax.swing.JLabel villageTxt;
    // End of variables declaration//GEN-END:variables
}
