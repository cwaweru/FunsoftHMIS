/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */
package com.afrisoftech.records;

import java.sql.SQLException;
//import org.openide.util.Exceptions;

/**
 *
 * @author Cheles Waweru <cwaweru@systempartners.biz>
 */
public class ImmunisationRecordsIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public ImmunisationRecordsIntfr(java.sql.Connection connDb) {

        connectDB = connDb;

        //  pConnDB = pconnDB;
        initComponents();
        occupationCmbx.setSelectedItem("Baby");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        ancSearchDialog = new javax.swing.JDialog();
        ancSearchPanel = new javax.swing.JPanel();
        searchANCFileTxt = new javax.swing.JTextField();
        ancSearchScrollPane = new javax.swing.JScrollPane();
        ancSearchTable = new com.afrisoftech.dbadmin.JTable();
        dispose = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        immunisationClientInfoPanel = new javax.swing.JPanel();
        religionLbl = new javax.swing.JLabel();
        motherLbl = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameLbl = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JTextField();
        middleNameLbl = new javax.swing.JLabel();
        middleNameTxt = new javax.swing.JTextField();
        occupationLbl = new javax.swing.JLabel();
        occupationCmbx = new javax.swing.JComboBox();
        educationLevelLbl = new javax.swing.JLabel();
        educationLevelCmbx = new javax.swing.JComboBox();
        reasonForVisitLbl = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        howclientKnewcentreLbl = new javax.swing.JLabel();
        expectedNoofPregLbl = new javax.swing.JLabel();
        telephoneTxt = new javax.swing.JTextField();
        nameofFatherTxt = new javax.swing.JTextField();
        ancNumberLbl = new javax.swing.JLabel();
        ancNumberTxt = new javax.swing.JTextField();
        dobPanel = new javax.swing.JPanel();
        dobLbl = new javax.swing.JLabel();
        datePickerYOB = new com.afrisoftech.lib.DatePicker();
        ageTxt = new javax.swing.JTextField();
        ageLbl = new javax.swing.JLabel();
        villageTxt = new javax.swing.JLabel();
        residenceTxt = new javax.swing.JTextField();
        educationLevelLbl1 = new javax.swing.JLabel();
        genderCmbx = new javax.swing.JComboBox();
        cardOpeningOptionsPanel = new javax.swing.JPanel();
        createNewCardRdbtn = new javax.swing.JRadioButton();
        revisitRdbtn = new javax.swing.JRadioButton();
        createExistingCardRdbtn = new javax.swing.JRadioButton();
        ancCardSearchField = new javax.swing.JButton();
        referralsPanel = new javax.swing.JPanel();
        referralINCmbx = new javax.swing.JComboBox();
        referralOUTCmbx = new javax.swing.JComboBox();
        ancVisitDateLbl = new javax.swing.JLabel();
        ancVisitDatePicker = new com.afrisoftech.lib.DatePicker();
        ancVisitDateLbl1 = new javax.swing.JLabel();
        deliveryDatePicker = new com.afrisoftech.lib.DatePicker();
        referralsPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentsTxt = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        patientNumberTxt = new javax.swing.JTextField();
        nameofMotherTxt = new javax.swing.JTextField();
        immunisationProceduresPanel = new javax.swing.JPanel();
        immunisationScrollPane = new javax.swing.JScrollPane();
        immunisationProceduresTable = new com.afrisoftech.dbadmin.JTable();
        buttonPanel = new javax.swing.JPanel();
        saveMotherInfoBtn = new javax.swing.JButton();
        regEditdataBtn = new javax.swing.JButton();
        regClearFormBtn = new javax.swing.JButton();
        regCloseFormBtn = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();

        ancSearchDialog.setUndecorated(true);
        ancSearchDialog.setResizable(false);
        ancSearchDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                ancSearchDialogComponentHidden(evt);
            }
        });
        ancSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        ancSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ancSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchANCFileTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchANCFileTxtCaretUpdate(evt);
            }
        });
        searchANCFileTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchANCFileTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        ancSearchPanel.add(searchANCFileTxt, gridBagConstraints);

        ancSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        ancSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                ancSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = ancSearchTable.getModel();

                ancSearchScrollPane.setViewportView(ancSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = ancSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            ancSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ancSearchTableMouseClicked(evt);
                }
            });
            ancSearchScrollPane.setViewportView(ancSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            ancSearchPanel.add(ancSearchScrollPane, gridBagConstraints);

            dispose.setText("Dispose");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancSearchDialog.getContentPane().add(ancSearchPanel, gridBagConstraints);

            setClosable(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Immunisation and Vaccination Register - MOH:510");
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());

            immunisationClientInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Client Information"));
            immunisationClientInfoPanel.setLayout(new java.awt.GridBagLayout());

            religionLbl.setText("Name of Mother");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(religionLbl, gridBagConstraints);

            motherLbl.setText("First Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(motherLbl, gridBagConstraints);

            firstNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            firstNameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(firstNameTxt, gridBagConstraints);

            lastNameLbl.setText("Last/SurName");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(lastNameLbl, gridBagConstraints);

            lastNameTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            lastNameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(lastNameTxt, gridBagConstraints);

            middleNameLbl.setText("Middle Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(middleNameLbl, gridBagConstraints);

            middleNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            middleNameTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(middleNameTxt, gridBagConstraints);

            occupationLbl.setText("Occupation Information");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(occupationLbl, gridBagConstraints);

            occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT '-' as occupations UNION SELECT occupations FROM pb_occupation ORDER BY 1"));
            occupationCmbx.setMinimumSize(new java.awt.Dimension(100, 18));
            occupationCmbx.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(occupationCmbx, gridBagConstraints);

            educationLevelLbl.setText("Education Level");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(educationLevelLbl, gridBagConstraints);

            educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT edu_name FROM pb_education ORDER BY edu_name"));
            educationLevelCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(educationLevelCmbx, gridBagConstraints);

            reasonForVisitLbl.setText("Address");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(reasonForVisitLbl, gridBagConstraints);

            addressTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            addressTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(addressTxt, gridBagConstraints);

            howclientKnewcentreLbl.setText("Name of Father");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(howclientKnewcentreLbl, gridBagConstraints);

            expectedNoofPregLbl.setText("Telephone\\Mobile No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(expectedNoofPregLbl, gridBagConstraints);

            telephoneTxt.setMinimumSize(new java.awt.Dimension(40, 19));
            telephoneTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(telephoneTxt, gridBagConstraints);

            nameofFatherTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(nameofFatherTxt, gridBagConstraints);

            ancNumberLbl.setText("Clinic No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(ancNumberLbl, gridBagConstraints);

            ancNumberTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            ancNumberTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ancNumberTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            immunisationClientInfoPanel.add(ancNumberTxt, gridBagConstraints);

            dobPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter date of birth or patient Age here ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 51, 153))); // NOI18N
            dobPanel.setLayout(new java.awt.GridBagLayout());

            dobLbl.setText("Date of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            dobPanel.add(dobLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            dobPanel.add(datePickerYOB, gridBagConstraints);

            ageTxt.setToolTipText("Enter age of patient here");
            ageTxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            ageTxt.setMinimumSize(new java.awt.Dimension(50, 18));
            ageTxt.setPreferredSize(new java.awt.Dimension(50, 18));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            dobPanel.add(ageTxt, gridBagConstraints);

            ageLbl.setText("Age(Months)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            dobPanel.add(ageLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            immunisationClientInfoPanel.add(dobPanel, gridBagConstraints);

            villageTxt.setForeground(new java.awt.Color(255, 51, 153));
            villageTxt.setText("Village/Estate");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(villageTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.8;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(residenceTxt, gridBagConstraints);

            educationLevelLbl1.setText("Gender");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(educationLevelLbl1, gridBagConstraints);

            genderCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Female", "Male" }));
            genderCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(genderCmbx, gridBagConstraints);

            cardOpeningOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tick where appropriate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
            cardOpeningOptionsPanel.setLayout(new java.awt.GridBagLayout());

            createNewCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createNewCardRdbtn);
            createNewCardRdbtn.setSelected(true);
            createNewCardRdbtn.setText("Create New Card");
            createNewCardRdbtn.setEnabled(false);
            createNewCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createNewCardRdbtn.setIconTextGap(1);
            createNewCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createNewCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createNewCardRdbtn, gridBagConstraints);

            revisitRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(revisitRdbtn);
            revisitRdbtn.setText("Revisit");
            revisitRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            revisitRdbtn.setIconTextGap(0);
            revisitRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    revisitRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(revisitRdbtn, gridBagConstraints);

            createExistingCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createExistingCardRdbtn);
            createExistingCardRdbtn.setForeground(new java.awt.Color(51, 51, 255));
            createExistingCardRdbtn.setText("Create Existing Card");
            createExistingCardRdbtn.setEnabled(false);
            createExistingCardRdbtn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            createExistingCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createExistingCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createExistingCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createExistingCardRdbtn, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            immunisationClientInfoPanel.add(cardOpeningOptionsPanel, gridBagConstraints);

            ancCardSearchField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            ancCardSearchField.setToolTipText("Search");
            ancCardSearchField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            ancCardSearchField.setMaximumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setMinimumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setPreferredSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            ancCardSearchField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ancCardSearchFieldActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            immunisationClientInfoPanel.add(ancCardSearchField, gridBagConstraints);

            referralsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Referrals Information"));
            referralsPanel.setLayout(new java.awt.GridBagLayout());

            referralINCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1-From Other Health Facility", "2-From Internal Care Unit" }));
            referralINCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Referral IN"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            referralsPanel.add(referralINCmbx, gridBagConstraints);

            referralOUTCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "3-To Other Health Facility", "4-To Internal Care Unit" }));
            referralOUTCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Referral OUT"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            referralsPanel.add(referralOUTCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(referralsPanel, gridBagConstraints);

            ancVisitDateLbl.setText("Visit Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(ancVisitDateLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            immunisationClientInfoPanel.add(ancVisitDatePicker, gridBagConstraints);

            ancVisitDateLbl1.setText("Date Vaccination Started");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(ancVisitDateLbl1, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(deliveryDatePicker, gridBagConstraints);

            referralsPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Comments and Other Information"));
            referralsPanel1.setLayout(new java.awt.GridBagLayout());

            commentsTxt.setColumns(20);
            commentsTxt.setRows(5);
            jScrollPane1.setViewportView(commentsTxt);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            referralsPanel1.add(jScrollPane1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 50.0;
            immunisationClientInfoPanel.add(referralsPanel1, gridBagConstraints);

            jLabel8.setText("Patient Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            immunisationClientInfoPanel.add(jLabel8, gridBagConstraints);

            patientNumberTxt.setMinimumSize(new java.awt.Dimension(200, 20));
            patientNumberTxt.setPreferredSize(new java.awt.Dimension(200, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(patientNumberTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            immunisationClientInfoPanel.add(nameofMotherTxt, gridBagConstraints);

            jTabbedPane1.addTab("Immunisation Register - Page 1", immunisationClientInfoPanel);

            immunisationProceduresPanel.setLayout(new java.awt.GridBagLayout());

            immunisationScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tick as appropriate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

            immunisationProceduresTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT procedure_code, procedure_description, comments, false as given_this_visit FROM rh.immunisation_procedures ORDER BY 2")
            );
            immunisationScrollPane.setViewportView(immunisationProceduresTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.gridheight = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 200.0;
            immunisationProceduresPanel.add(immunisationScrollPane, gridBagConstraints);

            jTabbedPane1.addTab("Immunisation Procedures Given During This Visit - Page 2", immunisationProceduresPanel);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            buttonPanel.setPreferredSize(new java.awt.Dimension(224, 20));
            buttonPanel.setLayout(new java.awt.GridBagLayout());

            saveMotherInfoBtn.setText("Save data for Immunisation visit");
            saveMotherInfoBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveMotherInfoBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(saveMotherInfoBtn, gridBagConstraints);

            regEditdataBtn.setText("Edit file data");
            regEditdataBtn.setEnabled(false);
            regEditdataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regEditdataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regEditdataBtn, gridBagConstraints);

            regClearFormBtn.setText("Clear form");
            regClearFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regClearFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regClearFormBtn, gridBagConstraints);

            regCloseFormBtn.setText("Close form");
            regCloseFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regCloseFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regCloseFormBtn, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(spacerLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(buttonPanel, gridBagConstraints);

            setBounds(0, 0, 817, 497);
        }// </editor-fold>//GEN-END:initComponents

    private void regEditdataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEditdataBtnActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_regEditdataBtnActionPerformed

    private void saveMotherInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMotherInfoBtnActionPerformed

        String cwcNumber = null;
        try {
            java.sql.PreparedStatement pstmtCWC = connectDB.prepareStatement("SELECT lpad(nextval('imz_no_seq')::text,8,0::text)");
            java.sql.ResultSet rsetCWC = pstmtCWC.executeQuery();
            while (rsetCWC.next()) {
                cwcNumber = rsetCWC.getString(1);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
        }
        if (ancNumberTxt.getText().isEmpty()) {
            ancNumberTxt.setText(cwcNumber);
        }
        if (ancNumberTxt.getText().isEmpty() || ageTxt.getText().isEmpty() || patientNumberTxt.getText().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Client Identification number, client age and clinic number cannot be empty");
        } else {
            try {
                connectDB.setAutoCommit(false);
                for (int i = 0; i < immunisationProceduresTable.getRowCount(); i++) {
                    if (Boolean.parseBoolean(immunisationProceduresTable.getValueAt(i, 3).toString())) {
                        java.sql.PreparedStatement pstmtImmunisationInfo = connectDB.prepareStatement("INSERT INTO rh.immunisation_register("
                                + "            date_of_visit, patient_no, clinic_number, "
                                + "            patient_names, village, age, telephone_no, "
                                + "            immunisation_procedure, referral_in, "
                                + "            referral_out, mother_name, father_name, gender, date_of_birth, comments, real_age)"
                                + "    VALUES (?, ?, ?, ?, ?, "
                                + "            ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmtImmunisationInfo.setDate(1, com.afrisoftech.lib.SQLDateFormat.getSQLDate(ancVisitDatePicker.getDate()));
                        pstmtImmunisationInfo.setString(2, patientNumberTxt.getText());
                        pstmtImmunisationInfo.setString(3, ancNumberTxt.getText());
                        pstmtImmunisationInfo.setString(4, firstNameTxt.getText() + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
                        pstmtImmunisationInfo.setString(5, residenceTxt.getText());
                        pstmtImmunisationInfo.setInt(6, java.lang.Integer.valueOf(ageTxt.getText()));
                        pstmtImmunisationInfo.setString(7, telephoneTxt.getText());
                        pstmtImmunisationInfo.setObject(8, immunisationProceduresTable.getValueAt(i, 0));
                        pstmtImmunisationInfo.setObject(9, referralINCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(10, referralOUTCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setString(11, nameofMotherTxt.getText());
                        pstmtImmunisationInfo.setString(12, nameofFatherTxt.getText());
                        pstmtImmunisationInfo.setObject(13, genderCmbx.getSelectedItem());
                        pstmtImmunisationInfo.setObject(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePickerYOB.getDate()));
                        pstmtImmunisationInfo.setObject(15, commentsTxt.getText());
                        pstmtImmunisationInfo.setObject(16, ageTxt.getText());
                        pstmtImmunisationInfo.execute();

                    }
                }
                results();
                javax.swing.JOptionPane.showMessageDialog(this, "Immunisation procedure(s) registered successfully");
                connectDB.commit();
                connectDB.setAutoCommit(true);
            } catch (java.sql.SQLException sqlEx) {
                sqlEx.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getLocalizedMessage());
            }

        }
        //}
        // TODO add your handling code here:
}//GEN-LAST:event_saveMotherInfoBtnActionPerformed
    public void results() {
        this.getContentPane().removeAll();
        this.initComponents();
        this.setSize(com.afrisoftech.hospital.HospitalMain.saccopn.getSize());
        // javax.swing.JOptionPane.showMessageDialog(this, "Data posted to database successfully. Click OK button or press ENTER key to continue");

    }
    private void searchANCFileTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchANCFileTxtCaretUpdate
        //        if(jCheckBox7.isSelected()){
        //        if(jCheckBox7.isSelected()){
        if (searchANCFileTxt.getCaretPosition() < 6) {

            System.out.println("Nothing");
        } else {
            ancSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT "
                    + "child_serial_no, full_names FROM"
                    + " rh.child_health_follow_up WHERE (child_serial_no ILIKE '%" + searchANCFileTxt.getText() + "%' "
                    + "OR full_names ILIKE '%" + searchANCFileTxt.getText() + "%') ORDER BY 2 "
            ));
            ancSearchTable.setShowHorizontalLines(false);
            ancSearchScrollPane.setViewportView(ancSearchTable);

        }
// Add your handling code here:
}//GEN-LAST:event_searchANCFileTxtCaretUpdate

    private void searchANCFileTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchANCFileTxtFocusLost
        //      jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_searchANCFileTxtFocusLost

    private void ancSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ancSearchTableMouseClicked
        java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 1).toString());

        this.ancNumberTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 0).toString());
        this.patientNumberTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 0).toString());
        
        this.firstNameTxt.setText(null);
        this.middleNameTxt.setText(null);
        this.lastNameTxt.setText(null);
        
        if (tokenizer.hasMoreTokens()) {
            lastNameTxt.setText(tokenizer.nextToken());
        }
        if (tokenizer.hasMoreTokens()) {
            middleNameTxt.setText(tokenizer.nextToken());
        }
        if (tokenizer.hasMoreTokens()) {
            firstNameTxt.setText(tokenizer.nextToken());
        }

        ancSearchDialog.dispose();

        // Add your handling code here:
}//GEN-LAST:event_ancSearchTableMouseClicked

    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        ancSearchDialog.dispose();
        // Add your handling code here:
}//GEN-LAST:event_disposeActionPerformed

    private void ancSearchDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ancSearchDialogComponentHidden
        //        jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_ancSearchDialogComponentHidden

    private void regClearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regClearFormBtnActionPerformed
        this.getContentPane().removeAll();

        this.initComponents();

        this.setSize(this.getParent().getSize());

        // TODO add your handling code here:
    }//GEN-LAST:event_regClearFormBtnActionPerformed

    private void regCloseFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regCloseFormBtnActionPerformed
        this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_regCloseFormBtnActionPerformed

    private void ancCardSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancCardSearchFieldActionPerformed

        searchButtonClicked();

//        immunisationProceduresTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT procedure_code, procedure_description, comments, false as given_this_visit FROM rh.immunisation_procedures WHERE procedure_code in (SELECT distinct procedure_code FROM rh.immunisation_procedures EXCEPT SELECT DISTINCT immunisation_procedure FROM rh.immunisation_register) ORDER BY 2"));

        // Add your handling code here:
    }//GEN-LAST:event_ancCardSearchFieldActionPerformed

    private void createExistingCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createExistingCardRdbtnActionPerformed
        createNewCardRdbtnActionPerformed(evt);
        ancNumberTxt.setEditable(true);
        //        jTextField18.setText("0");

        // TODO add your handling code here:
    }//GEN-LAST:event_createExistingCardRdbtnActionPerformed

    private void revisitRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revisitRdbtnActionPerformed

  //      this.regClearFormBtn.doClick();
        // Add your handling code here:
    }//GEN-LAST:event_revisitRdbtnActionPerformed

    private void createNewCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewCardRdbtnActionPerformed
        this.regClearFormBtn.doClick();
        // Add your handling code here:
    }//GEN-LAST:event_createNewCardRdbtnActionPerformed

    private void ancNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ancNumberTxtActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.ancNumberTxt.getLocationOnScreen();

        ancSearchDialog.setSize(700, 200);

        ancSearchDialog.setLocation(point);

        ancSearchDialog.setVisible(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JButton ancCardSearchField;
    private javax.swing.JLabel ancNumberLbl;
    private javax.swing.JTextField ancNumberTxt;
    private javax.swing.JDialog ancSearchDialog;
    private javax.swing.JPanel ancSearchPanel;
    private javax.swing.JScrollPane ancSearchScrollPane;
    private javax.swing.JTable ancSearchTable;
    private javax.swing.JLabel ancVisitDateLbl;
    private javax.swing.JLabel ancVisitDateLbl1;
    private com.afrisoftech.lib.DatePicker ancVisitDatePicker;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel cardOpeningOptionsPanel;
    private javax.swing.JTextArea commentsTxt;
    public javax.swing.JRadioButton createExistingCardRdbtn;
    private javax.swing.JRadioButton createNewCardRdbtn;
    private com.afrisoftech.lib.DatePicker datePickerYOB;
    private com.afrisoftech.lib.DatePicker deliveryDatePicker;
    private javax.swing.JButton dispose;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JPanel dobPanel;
    private javax.swing.JComboBox educationLevelCmbx;
    private javax.swing.JLabel educationLevelLbl;
    private javax.swing.JLabel educationLevelLbl1;
    private javax.swing.JLabel expectedNoofPregLbl;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JComboBox genderCmbx;
    private javax.swing.JLabel howclientKnewcentreLbl;
    private javax.swing.JPanel immunisationClientInfoPanel;
    private javax.swing.JPanel immunisationProceduresPanel;
    private javax.swing.JTable immunisationProceduresTable;
    private javax.swing.JScrollPane immunisationScrollPane;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lastNameLbl;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JLabel middleNameLbl;
    private javax.swing.JTextField middleNameTxt;
    private javax.swing.JLabel motherLbl;
    private javax.swing.JTextField nameofFatherTxt;
    private javax.swing.JTextField nameofMotherTxt;
    private javax.swing.JComboBox occupationCmbx;
    private javax.swing.JLabel occupationLbl;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JLabel reasonForVisitLbl;
    private javax.swing.JComboBox referralINCmbx;
    private javax.swing.JComboBox referralOUTCmbx;
    private javax.swing.JPanel referralsPanel;
    private javax.swing.JPanel referralsPanel1;
    private javax.swing.JButton regClearFormBtn;
    private javax.swing.JButton regCloseFormBtn;
    private javax.swing.JButton regEditdataBtn;
    private javax.swing.JLabel religionLbl;
    private javax.swing.JTextField residenceTxt;
    private javax.swing.JRadioButton revisitRdbtn;
    private javax.swing.JButton saveMotherInfoBtn;
    private javax.swing.JTextField searchANCFileTxt;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JTextField telephoneTxt;
    private javax.swing.JLabel villageTxt;
    // End of variables declaration//GEN-END:variables
}
