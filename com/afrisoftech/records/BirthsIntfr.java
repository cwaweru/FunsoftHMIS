/*
 * FPServicesIntfr.java
 *
 * Created on June 29, 2006, 3:35 PM
 */
package com.afrisoftech.records;

import java.beans.PropertyChangeEvent;
import java.sql.SQLException;
//import org.openide.util.Exceptions;

/**
 *
 * @author Charles Waweru <cwaweru@systempartners.biz>
 * @author Francis K. Waweru <fkwaweru@gmail.com>
 */
public class BirthsIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    private boolean autonumber;
    private String bedRate;
    private boolean nhifStatus;

    /**
     * Creates new form FPServicesIntfr
     */
    public BirthsIntfr(java.sql.Connection connDb) {

        connectDB = connDb;

        initComponents();

        this.setSize(com.afrisoftech.hospital.HospitalMain.saccopn.getSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnButtonGroup = new javax.swing.ButtonGroup();
        pnTypeofVisit = new javax.swing.ButtonGroup();
        ntBreastFeedingbuttonGroup = new javax.swing.ButtonGroup();
        ccGrowthIndicatorsPanel = new javax.swing.ButtonGroup();
        patientSearchDialog = new javax.swing.JDialog();
        patientSearchPanel = new javax.swing.JPanel();
        searchPatientTxt = new javax.swing.JTextField();
        patientSearchScrollPane = new javax.swing.JScrollPane();
        patientSearchTable = new com.afrisoftech.dbadmin.JTable();
        dispose = new javax.swing.JButton();
        treatmentPlanBtngrp = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        ageTxt = new javax.swing.JTextField();
        familyCareTabbedPane = new javax.swing.JTabbedPane();
        maternityRegister = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel17 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        locationCmbx = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        nationalityCmbx = new javax.swing.JComboBox();
        educationLevelCmbx = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        admissionWardCmbx = new javax.swing.JComboBox();
        jLabel141 = new javax.swing.JLabel();
        bedCategoryCmbx = new javax.swing.JComboBox();
        jTextField42 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        oldFileNumberTxt = new javax.swing.JTextField();
        currentResidenceTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        telephoneTxt = new javax.swing.JTextField();
        addressTxt = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        specialtyClinicCmbx = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        datePickerYOB = new com.afrisoftech.lib.DatePicker();
        jLabel36 = new javax.swing.JLabel();
        agelabel = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        ageYrsTxt = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField12 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        surNameTxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        jPanel4113 = new javax.swing.JPanel();
        jPanel101 = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        pnButtonsPanel1 = new javax.swing.JPanel();
        pnSaveDataBtn1 = new javax.swing.JButton();
        pnEditDataBtn1 = new javax.swing.JButton();
        pnCloseFormBtn1 = new javax.swing.JButton();
        pnClearEntriesBtn1 = new javax.swing.JButton();
        pnButtonSpacerLbl1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        bioDataPanel = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        religionCmbx = new javax.swing.JComboBox();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jTextField26 = new javax.swing.JTextField();
        jTextField27 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jTextField28 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        occupationCmbx = new javax.swing.JComboBox();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        countyofBirthCmbx = new javax.swing.JComboBox();
        countyofResidenceCmbx = new javax.swing.JComboBox();
        jLabel65 = new javax.swing.JLabel();
        employerTxt = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        employerTelTxt = new javax.swing.JTextField();
        maritalNOKStatusTab = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        nhifNumberTxt = new javax.swing.JTextField();
        nokRelationShipCmbx = new javax.swing.JComboBox();
        nokNameTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        nhifChbx = new javax.swing.JCheckBox();
        jLabel29 = new javax.swing.JLabel();
        maritalStatusPanel = new javax.swing.JPanel();
        jCheckBox1113 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox2113 = new javax.swing.JCheckBox();
        jLabel27 = new javax.swing.JLabel();
        idPassportTxt = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        nokResidenceTxt = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        nokTelephoneTxt = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        referredFromTxt = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        cSheetNoTxt = new javax.swing.JTextField();
        previousHistoryPanel = new javax.swing.JPanel();
        previousPregHistPanel = new javax.swing.JPanel();
        pregHistoryTableJscl = new javax.swing.JScrollPane();
        previousPregHistTbl = new javax.swing.JTable();
        fileBloodGroupLbl = new javax.swing.JLabel();
        fileBloodGroupCmbx = new javax.swing.JComboBox();
        fileRhesusFactorsLbl = new javax.swing.JLabel();
        fileRhesusfactorCmbx = new javax.swing.JComboBox();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jTextField10 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        commandpanel = new javax.swing.JPanel();
        spacerLbl = new javax.swing.JLabel();
        histSaveDataBtn = new javax.swing.JButton();
        histEditDataBtn = new javax.swing.JButton();
        histClearEntriesBtn = new javax.swing.JButton();
        histCloseFormBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jTextField33 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jTextField37 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jTextField38 = new javax.swing.JTextField();
        pnButtonsPanel2 = new javax.swing.JPanel();
        pnSaveDataBtn2 = new javax.swing.JButton();
        pnEditDataBtn2 = new javax.swing.JButton();
        pnCloseFormBtn2 = new javax.swing.JButton();
        pnClearEntriesBtn2 = new javax.swing.JButton();
        pnButtonSpacerLbl2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel53 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jComboBox8 = new javax.swing.JComboBox();
        jComboBox9 = new javax.swing.JComboBox();
        jComboBox10 = new javax.swing.JComboBox();
        jComboBox11 = new javax.swing.JComboBox();
        jComboBox12 = new javax.swing.JComboBox();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        descentofHeadTxt = new javax.swing.JTextField();
        contractionsTxt = new javax.swing.JTextField();
        liquorTxt = new javax.swing.JTextField();
        cervicalDilationTxt = new javax.swing.JTextField();
        mouldingTxt = new javax.swing.JTextField();
        counselledHIVCmbx = new javax.swing.JComboBox();
        hivStatusCmbx = new javax.swing.JComboBox();
        testedHIVCmbx = new javax.swing.JComboBox();
        ctxGivenCmbx = new javax.swing.JComboBox();
        partnerTestedHIVCmbx = new javax.swing.JComboBox();
        partnerHIVStatusCmbx = new javax.swing.JComboBox();
        regimenDrugCmbx = new javax.swing.JComboBox();
        regimenDrugCodeTxt = new javax.swing.JTextField();
        vitaminStatusCmbx = new javax.swing.JComboBox();
        breastfeedingStatusCmbx = new javax.swing.JComboBox();
        vdrlRPRResultsTxt = new javax.swing.JTextField();
        postNatalCare = new javax.swing.JPanel();
        pnDeliveryInfoPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pnPlaceofDeliveryLbl = new javax.swing.JLabel();
        placeofLastDeliveryTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel13 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jTextField39 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jTextField40 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jTextField43 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        pnTypeofDeliveryLbl = new javax.swing.JLabel();
        pnTypeofDeliveryCmbx = new javax.swing.JComboBox();
        pnStateofInfantLbl = new javax.swing.JLabel();
        pnStateofInfantCmbx = new javax.swing.JComboBox();
        pnWithMidWifeChbx = new javax.swing.JCheckBox();
        pnWithPhycisianChbx = new javax.swing.JCheckBox();
        pnWithTBAChbx = new javax.swing.JCheckBox();
        pnOtherChbx = new javax.swing.JCheckBox();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pnOtherAssSpecifyTxt = new javax.swing.JTextField();
        pnOtherAssSpecifyLbl = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        placentaStatusCmbx = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jLabel109 = new javax.swing.JLabel();
        midWifeTxt = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        apgarScoreTxt = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        pnSexofBabyLbl = new javax.swing.JLabel();
        pnWeightofBabyLbl = new javax.swing.JLabel();
        pnSexofBabyCmbx = new javax.swing.JComboBox();
        pnWeightofBabyTxt = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        pnPathologyChkbx = new javax.swing.JCheckBox();
        pnPatholgyDetailsLbl = new javax.swing.JLabel();
        pnPatholgyDetailsTxt = new javax.swing.JTextField();
        pnSpecifyComplicationsLbl = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jTextField44 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jTextField45 = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jTextField46 = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jTextField47 = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jTextField48 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jTextField49 = new javax.swing.JTextField();
        pregHistoryTableJscl1 = new javax.swing.JScrollPane();
        previousPregHistTbl1 = new javax.swing.JTable();
        initiatedBreastFeedingChkbx = new javax.swing.JCheckBox();
        givenTetracyclineChkbx = new javax.swing.JCheckBox();
        jTextField7 = new javax.swing.JTextField();
        deliveryComplicationsCmbx = new javax.swing.JComboBox();
        birthDeformitiesCmbx = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        admissionOutcomeCmbx = new javax.swing.JComboBox();
        pnButtonsPanel = new javax.swing.JPanel();
        pnSaveDataBtn = new javax.swing.JButton();
        pnEditDataBtn = new javax.swing.JButton();
        pnCloseFormBtn = new javax.swing.JButton();
        pnClearEntriesBtn = new javax.swing.JButton();
        pnButtonSpacerLbl = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        saveNursingDataBtn = new javax.swing.JButton();
        editPatientDataBtn = new javax.swing.JButton();
        clearForm = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        jLabel73 = new javax.swing.JLabel();
        infantMaturityCmbx = new javax.swing.JComboBox();
        jLabel74 = new javax.swing.JLabel();
        birthTimeTxt = new javax.swing.JFormattedTextField();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        birthWeightTxt = new javax.swing.JTextField();
        birthLengthTxt = new javax.swing.JTextField();
        bloodGroupTxt = new javax.swing.JTextField();
        urineTxt = new javax.swing.JTextField();
        drugsTxt = new javax.swing.JTextField();
        anomaliesTxt = new javax.swing.JTextField();
        dismissalWeightTxt = new javax.swing.JTextField();
        apgarFiveMinsTxt = new javax.swing.JTextField();
        mucousExtractionTxt = new javax.swing.JTextField();
        givenDurationTxt = new javax.swing.JTextField();
        incubationDurationTxt = new javax.swing.JTextField();
        respirationTxt = new javax.swing.JTextField();
        resucitationTxt = new javax.swing.JTextField();
        nurseryAdmissionTimeTxt = new javax.swing.JTextField();
        incubationDurationsTxt = new javax.swing.JTextField();
        apgarOneMinsTxt = new javax.swing.JTextField();
        eyeDropsTxt = new javax.swing.JTextField();
        vitKTxt = new javax.swing.JTextField();
        drugsDuringResuscitationCmbx = new javax.swing.JComboBox();
        drugsJcrl = new javax.swing.JScrollPane();
        drugsDuringResuscitationTxtArea = new javax.swing.JTextArea();
        jLabel103 = new javax.swing.JLabel();
        headCircumfrenceTxt = new javax.swing.JTextField();
        jLabel110 = new javax.swing.JLabel();
        birthNotificationNoTxt = new javax.swing.JTextField();
        rhCreateFilePanel = new javax.swing.JPanel();
        rhVisitdatePanel = new javax.swing.JLabel();
        rhVisitDatePicker = new com.afrisoftech.lib.DatePicker();
        patientFilePanel = new javax.swing.JPanel();
        searchField = new javax.swing.JButton();
        retrievedNoTxt = new javax.swing.JTextField();
        rhClientName = new javax.swing.JLabel();
        rhClientCardNoTxt = new javax.swing.JTextField();
        rhClientCardNoLbl = new javax.swing.JLabel();
        visitIDTxt = new javax.swing.JTextField();

        patientSearchDialog.setUndecorated(true);
        patientSearchDialog.setResizable(false);
        patientSearchDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                patientSearchDialogComponentHidden(evt);
            }
        });
        patientSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        patientSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        patientSearchPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                patientSearchPanelComponentShown(evt);
            }
        });
        patientSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchPatientTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchPatientTxtCaretUpdate(evt);
            }
        });
        searchPatientTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchPatientTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        patientSearchPanel.add(searchPatientTxt, gridBagConstraints);

        patientSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        patientSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                patientSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = patientSearchTable.getModel();

                patientSearchScrollPane.setViewportView(patientSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = patientSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            patientSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    patientSearchTableMouseClicked(evt);
                }
            });
            patientSearchScrollPane.setViewportView(patientSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            patientSearchPanel.add(patientSearchScrollPane, gridBagConstraints);

            dispose.setText("Close");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            patientSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            patientSearchDialog.getContentPane().add(patientSearchPanel, gridBagConstraints);

            ageTxt.setToolTipText("Enter age of patient here");
            ageTxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            ageTxt.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    ageTxtCaretUpdate(evt);
                }
            });

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Maternity, Labour and Birth Records (Partograph chart)");
            setDoubleBuffered(true);
            setPreferredSize(new java.awt.Dimension(705, 700));
            try {
                setSelected(true);
            } catch (java.beans.PropertyVetoException e1) {
                e1.printStackTrace();
            }
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());

            maternityRegister.setLayout(new java.awt.GridBagLayout());

            jPanel12.setLayout(new java.awt.GridBagLayout());

            jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Provisional Diagnosis", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10), new java.awt.Color(255, 51, 153))); // NOI18N

            jTextPane1.setText("N/A");
            jScrollPane2.setViewportView(jTextPane1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
            jPanel12.add(jScrollPane2, gridBagConstraints);

            jPanel17.setBackground(new java.awt.Color(204, 255, 204));
            jPanel17.setLayout(new java.awt.GridBagLayout());

            jLabel19.setText("Location");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel19, gridBagConstraints);

            locationCmbx.setEditable(true);
            locationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT 'N/A' AS district_name UNION ALL SELECT DISTINCT district_name FROM pb_district ORDER BY district_name"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(locationCmbx, gridBagConstraints);

            jLabel17.setText("Nationality");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel17, gridBagConstraints);

            nationalityCmbx.setEditable(true);
            nationalityCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT 'KENYA' as country_name UNION ALL SELECT DISTINCT country_name FROM pb_country"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(nationalityCmbx, gridBagConstraints);

            educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
            educationLevelCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    educationLevelCmbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(educationLevelCmbx, gridBagConstraints);

            jLabel22.setText("Education Level");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel22, gridBagConstraints);

            jLabel51.setForeground(new java.awt.Color(255, 51, 153));
            jLabel51.setText("Ward");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
            jPanel17.add(jLabel51, gridBagConstraints);

            admissionWardCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select ward_name from hp_wards WHERE ward_type ILIKE '%mat%' order by ward_name"));
            admissionWardCmbx.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    admissionWardCmbxMouseClicked(evt);
                }
            });
            admissionWardCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    admissionWardCmbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(admissionWardCmbx, gridBagConstraints);

            jLabel141.setForeground(new java.awt.Color(255, 51, 153));
            jLabel141.setText("Bed Category");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
            jPanel17.add(jLabel141, gridBagConstraints);

            bedCategoryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select category from hp_bed_category order by category"));
            bedCategoryCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bedCategoryCmbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(bedCategoryCmbx, gridBagConstraints);

            jTextField42.setEditable(false);
            jTextField42.setBackground(new java.awt.Color(204, 204, 204));
            jTextField42.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
            jTextField42.setForeground(new java.awt.Color(204, 0, 204));
            jTextField42.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
            jTextField42.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 10);
            jPanel17.add(jTextField42, gridBagConstraints);

            jLabel18.setText("Unit Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel18, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(oldFileNumberTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.8;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(currentResidenceTxt, gridBagConstraints);

            jLabel14.setForeground(new java.awt.Color(255, 51, 153));
            jLabel14.setText("Residence/Village");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel14, gridBagConstraints);

            jLabel62.setForeground(new java.awt.Color(255, 0, 51));
            jLabel62.setText("Tel/Mobile");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel62, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(telephoneTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(addressTxt, gridBagConstraints);

            jLabel30.setForeground(new java.awt.Color(255, 0, 51));
            jLabel30.setText("Address");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel30, gridBagConstraints);

            jLabel70.setText("Specialty Clinic");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel17.add(jLabel70, gridBagConstraints);

            specialtyClinicCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT clinics FROM pb_clinics ORDER BY clinics"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel17.add(specialtyClinicCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel12.add(jPanel17, gridBagConstraints);

            jPanel18.setBackground(new java.awt.Color(204, 255, 204));
            jPanel18.setLayout(new java.awt.GridBagLayout());

            jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter date of birth or patient Age here ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 51, 153))); // NOI18N
            jPanel15.setLayout(new java.awt.GridBagLayout());

            jLabel66.setText("Date of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel15.add(jLabel66, gridBagConstraints);

            this.datePickerYOB.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {

                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    changeDate();
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel15.add(datePickerYOB, gridBagConstraints);

            jLabel36.setText("Age(Years)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            jPanel15.add(jLabel36, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel15.add(agelabel, gridBagConstraints);

            jLabel112.setText("Patient Age (Years)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel15.add(jLabel112, gridBagConstraints);

            ageYrsTxt.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    ageYrsTxtCaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel15.add(ageYrsTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel18.add(jPanel15, gridBagConstraints);

            jLabel34.setText("Last IP No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
            jPanel18.add(jLabel34, gridBagConstraints);

            jTextField24.setEditable(false);
            try {
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select distinct patient_no,oid from hp_inpatient_register where date is not null ORDER BY oid DESC LIMIT 1");
                while (rset.next()){
                    jTextField24.setText(rset.getObject(1).toString());
                }
                rset.close();
                stmt.close();

            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("selection not successful");
            }
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel18.add(jTextField24, gridBagConstraints);

            jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel4.setPreferredSize(new java.awt.Dimension(48, 24));
            jPanel4.setLayout(new java.awt.GridBagLayout());

            jTextField12.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jTextField12, gridBagConstraints);

            searchButton.setToolTipText("Search");
            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton.setMaximumSize(new java.awt.Dimension(40, 25));
            searchButton.setMinimumSize(new java.awt.Dimension(40, 25));
            searchButton.setPreferredSize(new java.awt.Dimension(30, 22));
            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButtonActionPerformed(evt);
                }
            });
            jPanel4.add(searchButton, new java.awt.GridBagConstraints());

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipadx = 10;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel18.add(jPanel4, gridBagConstraints);

            jLabel15.setForeground(new java.awt.Color(255, 51, 153));
            jLabel15.setText("Patient Hospital No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
            jPanel18.add(jLabel15, gridBagConstraints);

            jLabel4.setForeground(new java.awt.Color(255, 51, 153));
            jLabel4.setText("Surname Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
            jPanel18.add(jLabel4, gridBagConstraints);

            surNameTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel18.add(surNameTxt, gridBagConstraints);

            jLabel21.setForeground(new java.awt.Color(255, 51, 153));
            jLabel21.setText("Other Name(s)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
            jPanel18.add(jLabel21, gridBagConstraints);

            firstNameTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel18.add(firstNameTxt, gridBagConstraints);

            jPanel4113.setLayout(new java.awt.GridBagLayout());
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel18.add(jPanel4113, gridBagConstraints);

            jPanel101.setBackground(new java.awt.Color(255, 239, 255));
            jPanel101.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tick where appropriate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
            jPanel101.setLayout(new java.awt.GridBagLayout());

            jRadioButton3.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup2.add(jRadioButton3);
            jRadioButton3.setSelected(true);
            jRadioButton3.setText("New File");
            jRadioButton3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jRadioButton3.setIconTextGap(1);
            jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton3ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel101.add(jRadioButton3, gridBagConstraints);

            jRadioButton4.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup2.add(jRadioButton4);
            jRadioButton4.setText("Re-Admission?");
            jRadioButton4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jRadioButton4.setIconTextGap(0);
            jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton4ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel101.add(jRadioButton4, gridBagConstraints);

            jRadioButton5.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup2.add(jRadioButton5);
            jRadioButton5.setForeground(new java.awt.Color(51, 51, 255));
            jRadioButton5.setText("Create Old File");
            jRadioButton5.setEnabled(false);
            jRadioButton5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jRadioButton5.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton5ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel101.add(jRadioButton5, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel18.add(jPanel101, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            jPanel12.add(jPanel18, gridBagConstraints);

            jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jPanel5.setLayout(new java.awt.GridBagLayout());

            jLabel3.setText("Para");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jLabel3, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel5.add(jTextField5, gridBagConstraints);

            jLabel5.setText("Gravida");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jLabel5, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel5.add(jTextField6, gridBagConstraints);

            jLabel6.setText("Clinic");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jLabel6, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel5.add(jTextField9, gridBagConstraints);

            jLabel8.setText("L.M.P");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jLabel8, gridBagConstraints);

            jLabel9.setText("E.D.D");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jLabel9, gridBagConstraints);

            jLabel10.setText("Period of Gestation (Weeks)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel5.add(jLabel10, gridBagConstraints);

            jTextField15.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField15.setText("38");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel5.add(jTextField15, gridBagConstraints);

            datePicker1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    datePicker1MouseClicked(evt);
                }
            });
            datePicker1.addInputMethodListener(new java.awt.event.InputMethodListener() {
                public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                    datePicker1InputMethodTextChanged(evt);
                }
                public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                    datePicker1CaretPositionChanged(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel5.add(datePicker1, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel5.add(datePicker4, gridBagConstraints);

            jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Blood Transfusion"));
            jPanel10.setLayout(new java.awt.GridBagLayout());

            buttonGroup5.add(jCheckBox1);
            jCheckBox1.setText("YES");
            jPanel10.add(jCheckBox1, new java.awt.GridBagConstraints());

            buttonGroup5.add(jCheckBox2);
            jCheckBox2.setText("NO");
            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox2ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            jPanel10.add(jCheckBox2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jPanel10, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel12.add(jPanel5, gridBagConstraints);

            pnButtonsPanel1.setLayout(new java.awt.GridBagLayout());

            pnSaveDataBtn1.setText("Save Maternity Register Data");
            pnSaveDataBtn1.setPreferredSize(new java.awt.Dimension(175, 30));
            pnSaveDataBtn1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnSaveDataBtn1ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel1.add(pnSaveDataBtn1, gridBagConstraints);

            pnEditDataBtn1.setText("Edit data");
            pnEditDataBtn1.setPreferredSize(new java.awt.Dimension(75, 30));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel1.add(pnEditDataBtn1, gridBagConstraints);

            pnCloseFormBtn1.setText("Close form");
            pnCloseFormBtn1.setPreferredSize(new java.awt.Dimension(83, 30));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel1.add(pnCloseFormBtn1, gridBagConstraints);

            pnClearEntriesBtn1.setText("Clear entries");
            pnClearEntriesBtn1.setPreferredSize(new java.awt.Dimension(93, 30));
            pnClearEntriesBtn1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnClearEntriesBtn1ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel1.add(pnClearEntriesBtn1, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel1.add(pnButtonSpacerLbl1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 2.0;
            jPanel12.add(pnButtonsPanel1, gridBagConstraints);

            jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Medical History"));
            jScrollPane4.setViewportView(jTextPane2);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel12.add(jScrollPane4, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            maternityRegister.add(jPanel12, gridBagConstraints);

            familyCareTabbedPane.addTab("Maternity Register - BIO-DATA", maternityRegister);

            bioDataPanel.setLayout(new java.awt.GridBagLayout());

            jPanel16.setLayout(new java.awt.GridBagLayout());

            religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY oid"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(religionCmbx, gridBagConstraints);

            jLabel38.setText("Religion");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel38, gridBagConstraints);

            jLabel39.setText("Sub Location (Village)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel39, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(jTextField26, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(jTextField27, gridBagConstraints);

            jLabel40.setText("Name of Chief");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel40, gridBagConstraints);

            jLabel42.setText("Name of Sub Chief/Ass. Chief");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel42, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(jTextField28, gridBagConstraints);

            jLabel35.setText("Occupation");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel35, gridBagConstraints);

            occupationCmbx.setEditable(true);
            occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(occupationCmbx, gridBagConstraints);

            jLabel63.setText("County of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel63, gridBagConstraints);

            jLabel64.setText("County of Residence");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel64, gridBagConstraints);

            countyofBirthCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT county_name FROM pb_county ORDER BY county_name"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(countyofBirthCmbx, gridBagConstraints);

            countyofResidenceCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT county_name FROM pb_county ORDER BY county_name"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(countyofResidenceCmbx, gridBagConstraints);

            jLabel65.setText("Employer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel65, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(employerTxt, gridBagConstraints);

            jLabel67.setText("Employer Telephone");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            jPanel16.add(jLabel67, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel16.add(employerTelTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            bioDataPanel.add(jPanel16, gridBagConstraints);

            maritalNOKStatusTab.setLayout(new java.awt.GridBagLayout());

            jLabel7.setForeground(new java.awt.Color(255, 51, 153));
            jLabel7.setText("Next of Kin Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            maritalNOKStatusTab.add(jLabel7, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(nhifNumberTxt, gridBagConstraints);

            nokRelationShipCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT DISTINCT relation_description FROM nok_relationship"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(nokRelationShipCmbx, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(nokNameTxt, gridBagConstraints);

            jLabel16.setText("NHIF Claim Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            maritalNOKStatusTab.add(jLabel16, gridBagConstraints);

            nhifChbx.setText("NHIF Registered");
            nhifChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            maritalNOKStatusTab.add(nhifChbx, gridBagConstraints);

            jLabel29.setBackground(new java.awt.Color(255, 204, 255));
            jLabel29.setForeground(new java.awt.Color(255, 51, 51));
            jLabel29.setText("Relationship");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            maritalNOKStatusTab.add(jLabel29, gridBagConstraints);

            maritalStatusPanel.setLayout(new java.awt.GridBagLayout());

            buttonGroup3.add(jCheckBox1113);
            jCheckBox1113.setText("Single");
            jCheckBox1113.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
            jCheckBox1113.setMargin(new java.awt.Insets(10, 0, 0, 0));
            jCheckBox1113.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
            jCheckBox1113.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox1113ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            maritalStatusPanel.add(jCheckBox1113, gridBagConstraints);

            buttonGroup3.add(jCheckBox9);
            jCheckBox9.setText("Divorced");
            jCheckBox9.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jCheckBox9.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
            jCheckBox9.setMargin(new java.awt.Insets(0, 0, 0, 0));
            jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox9ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            maritalStatusPanel.add(jCheckBox9, gridBagConstraints);

            buttonGroup3.add(jCheckBox12);
            jCheckBox12.setText("Widowed");
            jCheckBox12.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jCheckBox12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jCheckBox12.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jCheckBox12.setIconTextGap(7);
            jCheckBox12.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            maritalStatusPanel.add(jCheckBox12, gridBagConstraints);

            buttonGroup3.add(jCheckBox2113);
            jCheckBox2113.setSelected(true);
            jCheckBox2113.setText("Married");
            jCheckBox2113.setAlignmentY(0.0F);
            jCheckBox2113.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jCheckBox2113.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jCheckBox2113.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            maritalStatusPanel.add(jCheckBox2113, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 2.0;
            maritalNOKStatusTab.add(maritalStatusPanel, gridBagConstraints);

            jLabel27.setText("ID/Passport Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            maritalNOKStatusTab.add(jLabel27, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(idPassportTxt, gridBagConstraints);

            jLabel68.setText("NOK Residence/Village");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            maritalNOKStatusTab.add(jLabel68, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(nokResidenceTxt, gridBagConstraints);

            jLabel69.setText("NOK Telephone/Mobile");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            maritalNOKStatusTab.add(jLabel69, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(nokTelephoneTxt, gridBagConstraints);

            jLabel71.setText("Refer Source");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            maritalNOKStatusTab.add(jLabel71, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(referredFromTxt, gridBagConstraints);

            jLabel72.setText("C-Sheet Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            maritalNOKStatusTab.add(jLabel72, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            maritalNOKStatusTab.add(cSheetNoTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            bioDataPanel.add(maritalNOKStatusTab, gridBagConstraints);

            familyCareTabbedPane.addTab("Demographic Information", bioDataPanel);

            previousHistoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("History of previous pregnancies"));
            previousHistoryPanel.setLayout(new java.awt.GridBagLayout());

            previousPregHistPanel.setLayout(new java.awt.GridBagLayout());

            previousPregHistTbl.setAutoCreateRowSorter(true);
            previousPregHistTbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
            previousPregHistTbl.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null}
                },
                new String [] {
                    "Date of Birth", "Place", "Duration Of Labour", "Delivery", "Weight", "Sex", "Alive/Dead", "Feeding", "Puerperium"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            previousPregHistTbl.setRowHeight(25);
            //javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
            javax.swing.table.TableColumn genderColumn = previousPregHistTbl.getColumnModel().getColumn(5);
            genderColumn.setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT gender_desc from gender ORDER BY gender_desc"))));

            javax.swing.table.TableColumn deliveryStatusColumn = previousPregHistTbl.getColumnModel().getColumn(6);
            deliveryStatusColumn.setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT birth_state_desc FROM rh.birth_state ORDER BY birth_state_desc ASC"))));

            javax.swing.table.TableColumn dateEditor = previousPregHistTbl.getColumnModel().getColumn(0);
            com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), previousPregHistTbl);
            dateEditor.setCellEditor(dateCellEditor);
            //jTable1.setRowHeight(30);
            javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer();
            cellRenderer.setHorizontalAlignment(cellRenderer.TRAILING);
            dateEditor.setCellRenderer(cellRenderer);
            pregHistoryTableJscl.setViewportView(previousPregHistTbl);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 10.0;
            previousPregHistPanel.add(pregHistoryTableJscl, gridBagConstraints);

            fileBloodGroupLbl.setText("Blood group");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            previousPregHistPanel.add(fileBloodGroupLbl, gridBagConstraints);

            fileBloodGroupCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT blood_group FROM blood_group ORDER BY blood_group"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            previousPregHistPanel.add(fileBloodGroupCmbx, gridBagConstraints);

            fileRhesusFactorsLbl.setText("Rhesus Factors");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            previousPregHistPanel.add(fileRhesusFactorsLbl, gridBagConstraints);

            fileRhesusfactorCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT rhesus_factor FROM rhesus_factor ORDER BY rhesus_factor"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            previousPregHistPanel.add(fileRhesusfactorCmbx, gridBagConstraints);

            buttonGroup4.add(jRadioButton6);
            jRadioButton6.setText("First Delivery");
            jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton6ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            previousPregHistPanel.add(jRadioButton6, gridBagConstraints);

            buttonGroup4.add(jRadioButton7);
            jRadioButton7.setText("Other Delivery");
            jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton7ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            previousPregHistPanel.add(jRadioButton7, gridBagConstraints);

            jTextField10.setVisible(false); jLabel52.setVisible(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            previousPregHistPanel.add(jTextField10, gridBagConstraints);

            jLabel52.setText("If first born enter details here");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            previousPregHistPanel.add(jLabel52, gridBagConstraints);

            jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Kahn"));
            jPanel11.setLayout(new java.awt.GridBagLayout());

            buttonGroup7.add(jRadioButton8);
            jRadioButton8.setText("Positive");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jRadioButton8, gridBagConstraints);

            buttonGroup7.add(jRadioButton9);
            jRadioButton9.setText("Negative");
            jRadioButton9.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton9ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.weightx = 1.0;
            jPanel11.add(jRadioButton9, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weighty = 1.0;
            previousPregHistPanel.add(jPanel11, gridBagConstraints);

            jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("PMTCT"));
            jPanel13.setLayout(new java.awt.GridBagLayout());

            buttonGroup6.add(jCheckBox3);
            jCheckBox3.setText("Reactive");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jCheckBox3, gridBagConstraints);

            buttonGroup6.add(jCheckBox4);
            jCheckBox4.setText("Non-Reactive");
            jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox4ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jCheckBox4, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            previousPregHistPanel.add(jPanel13, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 20.0;
            previousHistoryPanel.add(previousPregHistPanel, gridBagConstraints);

            commandpanel.setLayout(new java.awt.GridBagLayout());
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 100.0;
            gridBagConstraints.weighty = 1.0;
            commandpanel.add(spacerLbl, gridBagConstraints);

            histSaveDataBtn.setText("Save data");
            histSaveDataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    histSaveDataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            commandpanel.add(histSaveDataBtn, gridBagConstraints);

            histEditDataBtn.setText("Edit data");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            commandpanel.add(histEditDataBtn, gridBagConstraints);

            histClearEntriesBtn.setText("Clear entries");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            commandpanel.add(histClearEntriesBtn, gridBagConstraints);

            histCloseFormBtn.setText("Close form");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            commandpanel.add(histCloseFormBtn, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            previousHistoryPanel.add(commandpanel, gridBagConstraints);

            familyCareTabbedPane.addTab("Obstetric History", previousHistoryPanel);

            jPanel6.setLayout(new java.awt.GridBagLayout());

            jLabel20.setText("Height of Fundus (WEEKS)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel6.add(jLabel20, gridBagConstraints);

            jLabel23.setText("Presentation");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel6.add(jLabel23, gridBagConstraints);

            jLabel24.setText("Engagement");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel6.add(jLabel24, gridBagConstraints);

            jLabel25.setText("Position");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel6.add(jLabel25, gridBagConstraints);

            jLabel26.setText("Heights (CM)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
            jPanel6.add(jLabel26, gridBagConstraints);

            jTextField23.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField23.setText("0");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField23, gridBagConstraints);

            jLabel28.setText("Urine");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel28, gridBagConstraints);

            jLabel31.setText("Ext. Genitals");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel31, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField29, gridBagConstraints);

            jLabel32.setText("HB%");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel32, gridBagConstraints);

            jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField31, gridBagConstraints);

            jLabel33.setText("BP MmHg");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel33, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField32, gridBagConstraints);

            jLabel37.setText("Foetal Heart/Min");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel37, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField33, gridBagConstraints);

            jLabel41.setText("Vaginal Discharge");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel41, gridBagConstraints);

            jLabel43.setText("Weight (Kgs)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel43, gridBagConstraints);

            jTextField35.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField35, gridBagConstraints);

            jLabel44.setText("Spleen");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel44, gridBagConstraints);

            jLabel45.setText("Abnormalities");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel45, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField37, gridBagConstraints);

            jLabel46.setText("Temp *C");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jLabel46, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField38, gridBagConstraints);

            pnButtonsPanel2.setLayout(new java.awt.GridBagLayout());

            pnSaveDataBtn2.setText("Save Examination data");
            pnSaveDataBtn2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnSaveDataBtn2ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel2.add(pnSaveDataBtn2, gridBagConstraints);

            pnEditDataBtn2.setText("Edit data");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel2.add(pnEditDataBtn2, gridBagConstraints);

            pnCloseFormBtn2.setText("Close form");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel2.add(pnCloseFormBtn2, gridBagConstraints);

            pnClearEntriesBtn2.setText("Clear entries");
            pnClearEntriesBtn2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnClearEntriesBtn2ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel2.add(pnClearEntriesBtn2, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel2.add(pnButtonSpacerLbl2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(pnButtonsPanel2, gridBagConstraints);

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1/5", "2/5", "3/5", "4/5", "5/5" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jComboBox1, gridBagConstraints);

            jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ROA", "LOA", "RSA", "LSA" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jComboBox3, gridBagConstraints);

            jLabel53.setText("Pulse per Min.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel6.add(jLabel53, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField13, gridBagConstraints);

            jLabel54.setText("Respiratory per Min");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            jPanel6.add(jLabel54, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jTextField20, gridBagConstraints);

            jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Palpable", "Non-Palpable" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jComboBox8, gridBagConstraints);

            jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "42", "40", "38", "37", "36", "34", "32", "30", "28", "26" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            jPanel6.add(jComboBox9, gridBagConstraints);

            jComboBox10.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT presentation FROM rh.baby_presentation ORDER BY 1"));
            jComboBox10.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jComboBox10MouseClicked(evt);
                }
            });
            jComboBox10.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox10ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jComboBox10, gridBagConstraints);

            jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT genital_type FROM rh.ext_genitalia ORDER BY 1"));
            jComboBox11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jComboBox11MouseClicked(evt);
                }
            });
            jComboBox11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox11ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jComboBox11, gridBagConstraints);

            jComboBox12.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT discharge_type FROM rh.vaginal_discharge ORDER BY 1"));
            jComboBox12.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jComboBox12MouseClicked(evt);
                }
            });
            jComboBox12.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox12ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(jComboBox12, gridBagConstraints);

            jLabel104.setText("Liquor(I/C/M/A)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel6.add(jLabel104, gridBagConstraints);

            jLabel105.setText("Moulding");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel6.add(jLabel105, gridBagConstraints);

            jLabel106.setText("Contractions (/Min)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jLabel106, gridBagConstraints);

            jLabel107.setText("Cervical Dilation[X]");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jLabel107, gridBagConstraints);

            jLabel108.setText("Descent of Head[O]");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jLabel108, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(descentofHeadTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(contractionsTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(liquorTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(cervicalDilationTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel6.add(mouldingTxt, gridBagConstraints);

            counselledHIVCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NO", "YES" }));
            counselledHIVCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Counselled on HIV"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(counselledHIVCmbx, gridBagConstraints);

            hivStatusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Known Positive", "Positive", "Negative", "Unknown" }));
            hivStatusCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("HIV Status"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(hivStatusCmbx, gridBagConstraints);

            testedHIVCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NO", "YES" }));
            testedHIVCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Tested for HIV"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(testedHIVCmbx, gridBagConstraints);

            ctxGivenCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NO", "YES" }));
            ctxGivenCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("CTX given to Mother"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(ctxGivenCmbx, gridBagConstraints);

            partnerTestedHIVCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NO", "YES" }));
            partnerTestedHIVCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Partner Tested"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(partnerTestedHIVCmbx, gridBagConstraints);

            partnerHIVStatusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Known Positive", "Positive", "Negative", "Unknown" }));
            partnerHIVStatusCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Partner HIV Status"));
            partnerHIVStatusCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    partnerHIVStatusCmbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(partnerHIVStatusCmbx, gridBagConstraints);

            regimenDrugCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "sdNVP", "AZT", "T", "P" }));
            regimenDrugCmbx.setToolTipText("CODES:\n  sdNVP   = (if dispensed with only sdNVP during ANC)\n  AZT = (if started on AZT at 14 weeks or thereafter)\n  T   =  For women on HAART for their treatment\n  P = For women started on HAART for PMTCT purpose only"); // NOI18N
            regimenDrugCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("ARV Prophylaxis Regimen given"));
            regimenDrugCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regimenDrugCmbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(regimenDrugCmbx, gridBagConstraints);

            regimenDrugCodeTxt.setEditable(false);
            regimenDrugCodeTxt.setBorder(javax.swing.BorderFactory.createTitledBorder("ARV code"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(regimenDrugCodeTxt, gridBagConstraints);

            vitaminStatusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NO", "YES" }));
            vitaminStatusCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Vit. A Suppliment given"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(vitaminStatusCmbx, gridBagConstraints);

            breastfeedingStatusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Exclusive Breast Feeding", "MNP's Supplimentation" }));
            breastfeedingStatusCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Breast feeding status"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(breastfeedingStatusCmbx, gridBagConstraints);

            vdrlRPRResultsTxt.setBorder(javax.swing.BorderFactory.createTitledBorder("VDRL/RPR Results"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(vdrlRPRResultsTxt, gridBagConstraints);

            familyCareTabbedPane.addTab("Examination on Admission", jPanel6);

            postNatalCare.setLayout(new java.awt.GridBagLayout());

            pnDeliveryInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Delivery Information", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
            pnDeliveryInfoPanel.setLayout(new java.awt.GridBagLayout());

            jPanel2.setLayout(new java.awt.GridBagLayout());

            pnPlaceofDeliveryLbl.setText("Place of delivery/Ward");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnPlaceofDeliveryLbl, gridBagConstraints);

            placeofLastDeliveryTxt.setEditable(false);
            placeofLastDeliveryTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            placeofLastDeliveryTxt.setPreferredSize(new java.awt.Dimension(100, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(placeofLastDeliveryTxt, gridBagConstraints);

            jLabel12.setText("Date Admitted");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel12, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel2.add(datePicker2, gridBagConstraints);

            jLabel13.setForeground(new java.awt.Color(255, 0, 0));
            jLabel13.setText("Discharge Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel13, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel2.add(datePicker3, gridBagConstraints);

            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jPanel1.setLayout(new java.awt.GridBagLayout());

            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Duration of Labour"));
            jPanel8.setLayout(new java.awt.GridBagLayout());

            jLabel47.setText("1st Stage (Hrs)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(jLabel47, gridBagConstraints);

            jLabel48.setText("2nd Stage (Min)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            jPanel8.add(jLabel48, gridBagConstraints);

            jTextField39.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField39.setText("0");
            jTextField39.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField39CaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jTextField39, gridBagConstraints);

            jLabel49.setText("3rd Stage (Min)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            jPanel8.add(jLabel49, gridBagConstraints);

            jTextField40.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField40.setText("0");
            jTextField40.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField40CaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jTextField40, gridBagConstraints);

            jLabel50.setText("Total Time");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            jPanel8.add(jLabel50, gridBagConstraints);

            jTextField41.setEditable(false);
            jTextField41.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField41.setText("0");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jTextField41, gridBagConstraints);

            jTextField43.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField43.setText("0");
            jTextField43.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField43CaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jTextField43, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jPanel8, gridBagConstraints);

            jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Type of Delivery"));
            jPanel9.setLayout(new java.awt.GridBagLayout());

            pnTypeofDeliveryLbl.setText("Type of delivery");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(pnTypeofDeliveryLbl, gridBagConstraints);

            pnTypeofDeliveryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT delivery_type_desc FROM rh.delivery_type ORDER BY delivery_type_desc"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel9.add(pnTypeofDeliveryCmbx, gridBagConstraints);

            pnStateofInfantLbl.setText("Type of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(pnStateofInfantLbl, gridBagConstraints);

            pnStateofInfantCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT birth_state_desc FROM rh.birth_state ORDER BY 1"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel9.add(pnStateofInfantCmbx, gridBagConstraints);

            pnButtonGroup.add(pnWithMidWifeChbx);
            pnWithMidWifeChbx.setText("With Midwife");
            pnWithMidWifeChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnWithMidWifeChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnWithMidWifeChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(pnWithMidWifeChbx, gridBagConstraints);

            pnButtonGroup.add(pnWithPhycisianChbx);
            pnWithPhycisianChbx.setText("With Physician");
            pnWithPhycisianChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnWithPhycisianChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnWithPhycisianChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            pnWithPhycisianChbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnWithPhycisianChbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(pnWithPhycisianChbx, gridBagConstraints);

            pnButtonGroup.add(pnWithTBAChbx);
            pnWithTBAChbx.setText("With TBA");
            pnWithTBAChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnWithTBAChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnWithTBAChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel9.add(pnWithTBAChbx, gridBagConstraints);

            pnButtonGroup.add(pnOtherChbx);
            pnOtherChbx.setText("Other assitance");
            pnOtherChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnOtherChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnOtherChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel9.add(pnOtherChbx, gridBagConstraints);

            jTextField2.setMinimumSize(new java.awt.Dimension(40, 20));
            jTextField2.setPreferredSize(new java.awt.Dimension(40, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel9.add(jTextField2, gridBagConstraints);

            jLabel2.setText("Parity");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel2, gridBagConstraints);

            pnOtherAssSpecifyTxt.setMinimumSize(new java.awt.Dimension(150, 19));
            pnOtherAssSpecifyTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel9.add(pnOtherAssSpecifyTxt, gridBagConstraints);

            pnOtherAssSpecifyLbl.setText("Other (Specify)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(pnOtherAssSpecifyLbl, gridBagConstraints);

            jLabel94.setText("Blood Pressure");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel94, gridBagConstraints);

            jLabel95.setText("Induction Labour");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel95, gridBagConstraints);

            jLabel96.setText("Placenta Wt");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel96, gridBagConstraints);

            jLabel97.setText("Oxytocin(Units)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel97, gridBagConstraints);

            jLabel98.setText("Oxytocin(DPM)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel98, gridBagConstraints);

            jLabel99.setText("AMTSL");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel99, gridBagConstraints);

            jLabel100.setText("Blood Loss(ml)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel100, gridBagConstraints);

            jLabel101.setText("Placenta Complete");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel101, gridBagConstraints);

            jLabel102.setText("Utetronic");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel102, gridBagConstraints);

            placentaStatusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Complete", "Incomplete" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(placentaStatusCmbx, gridBagConstraints);

            jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Oxytocin", "Other" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jComboBox5, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jTextField3, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jTextField4, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jTextField8, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jTextField14, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jTextField16, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jTextField17, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jTextField18, gridBagConstraints);

            jLabel109.setText("Name of Midwife");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel109, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(midWifeTxt, gridBagConstraints);

            jLabel111.setText("Baby APGAR score");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel9.add(jLabel111, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(apgarScoreTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(jPanel9, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
            jPanel2.add(jPanel1, gridBagConstraints);

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("After Delivery"));
            jPanel7.setLayout(new java.awt.GridBagLayout());

            pnSexofBabyLbl.setText("Sex of baby");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(pnSexofBabyLbl, gridBagConstraints);

            pnWeightofBabyLbl.setText("Weight of baby (KG)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(pnWeightofBabyLbl, gridBagConstraints);

            pnSexofBabyCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT gender_desc  FROM gender ORDER BY gender_desc"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel7.add(pnSexofBabyCmbx, gridBagConstraints);

            pnWeightofBabyTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            pnWeightofBabyTxt.setMinimumSize(new java.awt.Dimension(40, 19));
            pnWeightofBabyTxt.setPreferredSize(new java.awt.Dimension(40, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel7.add(pnWeightofBabyTxt, gridBagConstraints);

            jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField1.setMinimumSize(new java.awt.Dimension(40, 20));
            jTextField1.setPreferredSize(new java.awt.Dimension(40, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel7.add(jTextField1, gridBagConstraints);

            jLabel1.setText("Duration of Pregnancy(WEEKS)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel1, gridBagConstraints);

            jPanel3.setLayout(new java.awt.GridBagLayout());

            buttonGroup1.add(jRadioButton1);
            jRadioButton1.setText("Baby Alive");
            jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jRadioButton1, gridBagConstraints);

            buttonGroup1.add(jRadioButton2);
            jRadioButton2.setText("Baby Died");
            jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jRadioButton2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            jPanel7.add(jPanel3, gridBagConstraints);

            pnPathologyChkbx.setText("Pathology");
            pnPathologyChkbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnPathologyChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnPathologyChkbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(pnPathologyChkbx, gridBagConstraints);

            pnPatholgyDetailsLbl.setText("Pathology details");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(pnPatholgyDetailsLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(pnPatholgyDetailsTxt, gridBagConstraints);

            pnSpecifyComplicationsLbl.setText("Specify Delivery Complications");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(pnSpecifyComplicationsLbl, gridBagConstraints);

            jLabel55.setText("Condition of Mother");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel55, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField21, gridBagConstraints);

            jLabel56.setText("Loss of P.V (Mls)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel56, gridBagConstraints);

            jTextField44.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField44, gridBagConstraints);

            jLabel57.setText("BP (MgHg)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel57, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField45, gridBagConstraints);

            jLabel58.setText("Temperature *C");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel58, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField46, gridBagConstraints);

            jLabel59.setText("Fundus");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel59, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField47, gridBagConstraints);

            jLabel60.setText("Pulse per Min");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel60, gridBagConstraints);

            jTextField48.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField48, gridBagConstraints);

            jLabel61.setText("Respiratory per Min");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel61, gridBagConstraints);

            jTextField49.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField49, gridBagConstraints);

            pregHistoryTableJscl1.setBorder(javax.swing.BorderFactory.createTitledBorder("Baby Score"));

            previousPregHistTbl1.setAutoCreateRowSorter(true);
            previousPregHistTbl1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
            previousPregHistTbl1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null}
                },
                new String [] {
                    "1 Min", "5 Mins", "10 Mins"
                }
            ));
            previousPregHistTbl1.setRowHeight(25);
            java.lang.Object[] strCmb = {"1/10","2/10","3/10","4/10","5/10","6/10","7/10","8/10","9/10","10/10"};

            javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

            javax.swing.table.TableColumn teditor = this.previousPregHistTbl1.getColumn("1 Min");

            teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));

            java.lang.Object[] strCmb5 = {"1/10","2/10","3/10","4/10","5/10","6/10","7/10","8/10","9/10","10/10"};

            javax.swing.JComboBox cmBox5 = new javax.swing.JComboBox(strCmb5);

            javax.swing.table.TableColumn teditor5 = this.previousPregHistTbl1.getColumn("5 Mins");

            teditor5.setCellEditor(new javax.swing.DefaultCellEditor(cmBox5));

            java.lang.Object[] strCmb10 = {"1/10","2/10","3/10","4/10","5/10","6/10","7/10","8/10","9/10","10/10"};

            javax.swing.JComboBox cmBox10 = new javax.swing.JComboBox(strCmb10);

            javax.swing.table.TableColumn teditor10 = this.previousPregHistTbl1.getColumn("10 Mins");

            teditor10.setCellEditor(new javax.swing.DefaultCellEditor(cmBox10));
            pregHistoryTableJscl1.setViewportView(previousPregHistTbl1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(pregHistoryTableJscl1, gridBagConstraints);

            initiatedBreastFeedingChkbx.setText("Initiation of breast  feeding within 1 hr");
            initiatedBreastFeedingChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            initiatedBreastFeedingChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(initiatedBreastFeedingChkbx, gridBagConstraints);

            givenTetracyclineChkbx.setText("Tetracycline given to mother");
            givenTetracyclineChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            givenTetracyclineChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(givenTetracyclineChkbx, gridBagConstraints);

            jTextField7.setBorder(javax.swing.BorderFactory.createTitledBorder("Time of delivery/birth"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jTextField7, gridBagConstraints);

            deliveryComplicationsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Ante Partum Haemorrhage", "Post Partum Haemorrhage", "Eclampsia", "Raptured Uterus", "Obstructed Labour", "Sepsis", " " }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(deliveryComplicationsCmbx, gridBagConstraints);

            birthDeformitiesCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            birthDeformitiesCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Birth deformities"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(birthDeformitiesCmbx, gridBagConstraints);

            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Live", "Dead" }));
            jComboBox2.setBorder(javax.swing.BorderFactory.createTitledBorder("Neonatal status at discharge"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
            jPanel2.add(jPanel7, gridBagConstraints);

            jLabel11.setText("Admission Outcome");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel11, gridBagConstraints);

            admissionOutcomeCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Discharge", "Transferred", "Abscond", "Died" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 7;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel2.add(admissionOutcomeCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 6.0;
            pnDeliveryInfoPanel.add(jPanel2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 10.0;
            postNatalCare.add(pnDeliveryInfoPanel, gridBagConstraints);

            pnButtonsPanel.setLayout(new java.awt.GridBagLayout());

            pnSaveDataBtn.setText("Save delivery partograph data");
            pnSaveDataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnSaveDataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnSaveDataBtn, gridBagConstraints);

            pnEditDataBtn.setText("Edit data");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnEditDataBtn, gridBagConstraints);

            pnCloseFormBtn.setText("Close form");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnCloseFormBtn, gridBagConstraints);

            pnClearEntriesBtn.setText("Clear entries");
            pnClearEntriesBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnClearEntriesBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnClearEntriesBtn, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnButtonSpacerLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            postNatalCare.add(pnButtonsPanel, gridBagConstraints);

            familyCareTabbedPane.addTab("Partograph documentation", postNatalCare);

            jPanel14.setLayout(new java.awt.GridBagLayout());

            saveNursingDataBtn.setText("Save Nursing Data");
            saveNursingDataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveNursingDataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(saveNursingDataBtn, gridBagConstraints);

            editPatientDataBtn.setText("Edit Patient Information");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(editPatientDataBtn, gridBagConstraints);

            clearForm.setText("Clear form");
            clearForm.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    clearFormActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(clearForm, gridBagConstraints);

            closeFormBtn.setText("Close form");
            closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    closeFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(closeFormBtn, gridBagConstraints);

            jLabel73.setText("Infant Maturity");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel73, gridBagConstraints);

            infantMaturityCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Premature", "Small" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(infantMaturityCmbx, gridBagConstraints);

            jLabel74.setText("Birth Time");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel74, gridBagConstraints);

            birthTimeTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(birthTimeTxt, gridBagConstraints);

            jLabel75.setText("Resuscitation");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel75, gridBagConstraints);

            jLabel76.setText("Mucous Extraction");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel76, gridBagConstraints);

            jLabel77.setText("0 - Given Duration");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel77, gridBagConstraints);

            jLabel78.setText("Incubation Duration");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel78, gridBagConstraints);

            jLabel79.setText("Spontaneous Respiration");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel79, gridBagConstraints);

            jLabel80.setText("Drugs During Resuscitation");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel80, gridBagConstraints);

            jLabel81.setText("Birth Weight");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel81, gridBagConstraints);

            jLabel82.setText("Birth Length");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel82, gridBagConstraints);

            jLabel83.setText("Blood Group");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel83, gridBagConstraints);

            jLabel84.setText("Urine");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel84, gridBagConstraints);

            jLabel85.setText("Drugs");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel85, gridBagConstraints);

            jLabel86.setText("Eye Drops");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel86, gridBagConstraints);

            jLabel87.setText("Vit K");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel87, gridBagConstraints);

            jLabel88.setText("Admitted to Nursery");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel88, gridBagConstraints);

            jLabel89.setText("Dismissal Weight");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel89, gridBagConstraints);

            jLabel90.setText("Anomalies");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel90, gridBagConstraints);

            jLabel91.setText("APGAR Score at 1 Minute");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel91, gridBagConstraints);

            jLabel92.setText("APGAR Score at 5 Minutes");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel92, gridBagConstraints);

            jLabel93.setText("Incubation Duration");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel93, gridBagConstraints);

            birthWeightTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    birthWeightTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(birthWeightTxt, gridBagConstraints);

            birthLengthTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    birthLengthTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(birthLengthTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(bloodGroupTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(urineTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(drugsTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(anomaliesTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(dismissalWeightTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(apgarFiveMinsTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(mucousExtractionTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(givenDurationTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(incubationDurationTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(respirationTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(resucitationTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(nurseryAdmissionTimeTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(incubationDurationsTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(apgarOneMinsTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(eyeDropsTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(vitKTxt, gridBagConstraints);

            drugsDuringResuscitationCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(drugsDuringResuscitationCmbx, gridBagConstraints);

            drugsJcrl.setBorder(javax.swing.BorderFactory.createTitledBorder("Drugs during resuscitation"));

            drugsDuringResuscitationTxtArea.setColumns(20);
            drugsDuringResuscitationTxtArea.setRows(5);
            drugsJcrl.setViewportView(drugsDuringResuscitationTxtArea);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 2.0;
            jPanel14.add(drugsJcrl, gridBagConstraints);

            jLabel103.setText("Head Circumfrence");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel103, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(headCircumfrenceTxt, gridBagConstraints);

            jLabel110.setText("Birth Notification Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(jLabel110, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel14.add(birthNotificationNoTxt, gridBagConstraints);

            familyCareTabbedPane.addTab("Infant Record", jPanel14);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(familyCareTabbedPane, gridBagConstraints);
            familyCareTabbedPane.getAccessibleContext().setAccessibleName("File Registration for Mother");

            rhCreateFilePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            rhCreateFilePanel.setLayout(new java.awt.GridBagLayout());

            rhVisitdatePanel.setText("Date of visit");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 7;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhVisitdatePanel, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 8;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhVisitDatePicker, gridBagConstraints);

            patientFilePanel.setLayout(new java.awt.GridBagLayout());

            searchField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Find 1.png"))); // NOI18N
            searchField.setToolTipText("Click here to search patient file");
            searchField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchField.setMaximumSize(new java.awt.Dimension(40, 20));
            searchField.setMinimumSize(new java.awt.Dimension(40, 20));
            searchField.setPreferredSize(new java.awt.Dimension(40, 20));
            searchField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchFieldActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            patientFilePanel.add(searchField, gridBagConstraints);

            retrievedNoTxt.setEditable(false);
            retrievedNoTxt.setBackground(new java.awt.Color(204, 255, 204));
            retrievedNoTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            retrievedNoTxt.setPreferredSize(new java.awt.Dimension(100, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 100.0;
            gridBagConstraints.weighty = 1.0;
            patientFilePanel.add(retrievedNoTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(patientFilePanel, gridBagConstraints);

            rhClientName.setText("Name of client");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhClientName, gridBagConstraints);

            rhClientCardNoTxt.setEditable(false);
            rhClientCardNoTxt.setBackground(new java.awt.Color(204, 255, 204));
            rhClientCardNoTxt.setMinimumSize(new java.awt.Dimension(70, 19));
            rhClientCardNoTxt.setPreferredSize(new java.awt.Dimension(70, 19));
            rhClientCardNoTxt.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    rhClientCardNoTxtFocusLost(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhClientCardNoTxt, gridBagConstraints);

            rhClientCardNoLbl.setText("Card No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhClientCardNoLbl, gridBagConstraints);

            visitIDTxt.setEditable(false);
            visitIDTxt.setBackground(new java.awt.Color(204, 255, 204));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(visitIDTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            getContentPane().add(rhCreateFilePanel, gridBagConstraints);

            setBounds(0, 0, 905, 542);
        }// </editor-fold>//GEN-END:initComponents

    private void pnWithPhycisianChbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnWithPhycisianChbxActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_pnWithPhycisianChbxActionPerformed

    private void changeDate() {
        agelabel.setText(com.afrisoftech.lib.PatientAge.getPatientActualAge(connectDB, this.datePickerYOB.getDate()));
        ageTxt.setText(String.valueOf(com.afrisoftech.lib.PatientAge.getPatientAge(connectDB, this.datePickerYOB.getDate())));

    }

    private void pnSaveDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnSaveDataBtnActionPerformed
        /*    if(jComboBox6.getSelectedItem() == null){
         javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without choosing the file location".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);

         }else{
         int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to save and have you selected the correct file location ?", "Caution before saving".toUpperCase(), javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

         if (openShift == javax.swing.JOptionPane.YES_OPTION) {*/
        String birthHelp = null;
        if (pnWithMidWifeChbx.isSelected()) {
            birthHelp = pnWithMidWifeChbx.getText();
        } else {
            if (pnWithPhycisianChbx.isSelected()) {
                birthHelp = pnWithPhycisianChbx.getText();
            } else {
                if (pnWithTBAChbx.isSelected()) {
                    birthHelp = pnWithTBAChbx.getText();
                } else {
                    birthHelp = pnOtherChbx.getText();
                }
            }
        }
        try {
            String bedNo = null;
            String Ward = null;

            java.sql.Statement stm12 = connectDB.createStatement();

            java.sql.ResultSet rse12 = stm12.executeQuery("SELECT bed_no,ward FROM hp_admission WHERE visit_id = '" + visitIDTxt.getText() + "'");
            while (rse12.next()) {
                bedNo = rse12.getObject(1).toString();
                Ward = rse12.getObject(2).toString();
            }
            java.sql.PreparedStatement pstmtPostNatal = connectDB.prepareStatement(
                    "INSERT INTO rh.post_natal_services (mother_serial_no,"
                    + "place_of_delivery,type_of_mid_wife,delivery_method,"
                    + "type_of_hospital,state_of_infant_at_birth,other_assitance_spec,"
                    + "birth_complications,baby_weight,baby_gender,follow_up_normal_delivery,"
                    + "patholgy,pathology_details,referral,reason_for_referral,"
                    + "service_date,type_of_birth,duration_of_preg,parity,neo_natal_status,"
                    + "admission_outcome,first_stage,second_stage,third_stage,total_time,"
                    + "visit_id, mother_condition, temperature, purlse, respiratory, fundus, pv_loss, bp,"
                    + "score_one, score_two, score_three, placenta_status, initiated_breast_feeding,"
                    + " given_antibiotic, mid_wife, apgar_score_one, birth_deformities)"
                    + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            pstmtPostNatal.setObject(1, rhClientCardNoTxt.getText());
            pstmtPostNatal.setObject(2, placeofLastDeliveryTxt.getText());
            pstmtPostNatal.setString(3, birthHelp);
            pstmtPostNatal.setObject(4, pnTypeofDeliveryCmbx.getSelectedItem());
            pstmtPostNatal.setObject(5, "Refferal");
            pstmtPostNatal.setObject(6, pnStateofInfantCmbx.getSelectedItem());
            pstmtPostNatal.setObject(7, pnOtherAssSpecifyTxt.getText());
            pstmtPostNatal.setObject(8, deliveryComplicationsCmbx.getSelectedItem());
            pstmtPostNatal.setDouble(9, java.lang.Double.valueOf(pnWeightofBabyTxt.getText()));
            pstmtPostNatal.setObject(10, pnSexofBabyCmbx.getSelectedItem());
            pstmtPostNatal.setBoolean(11, false);
            pstmtPostNatal.setObject(12, pnPathologyChkbx.isSelected());
            pstmtPostNatal.setObject(13, pnPatholgyDetailsTxt.getText());
            pstmtPostNatal.setObject(14, "");
            pstmtPostNatal.setObject(15, "");
            pstmtPostNatal.setDate(16, com.afrisoftech.lib.SQLDateFormat.getSQLDate(rhVisitDatePicker.getDate()));
            pstmtPostNatal.setObject(17, pnStateofInfantCmbx.getSelectedItem());
            pstmtPostNatal.setDouble(18, java.lang.Double.valueOf(jTextField1.getText()));
            pstmtPostNatal.setObject(19, jTextField2.getText());
            if (jRadioButton1.isSelected()) {
                pstmtPostNatal.setObject(20, "Alive");
            } else {
                pstmtPostNatal.setObject(20, "Dead");
            }
            pstmtPostNatal.setObject(21, admissionOutcomeCmbx.getSelectedItem().toString());
            pstmtPostNatal.setDouble(22, java.lang.Double.valueOf(jTextField43.getText()));
            pstmtPostNatal.setDouble(23, java.lang.Double.valueOf(jTextField39.getText()));
            pstmtPostNatal.setDouble(24, java.lang.Double.valueOf(jTextField40.getText()));
            pstmtPostNatal.setDouble(25, java.lang.Double.valueOf(jTextField41.getText()));
            pstmtPostNatal.setObject(26, visitIDTxt.getText());
            pstmtPostNatal.setObject(27, jTextField21.getText());
            pstmtPostNatal.setDouble(28, java.lang.Double.valueOf(jTextField44.getText()));
            pstmtPostNatal.setDouble(29, java.lang.Double.valueOf(jTextField48.getText()));
            pstmtPostNatal.setDouble(30, java.lang.Double.valueOf(jTextField49.getText()));
            pstmtPostNatal.setObject(31, jTextField46.getText());
            pstmtPostNatal.setObject(32, jTextField47.getText());
            pstmtPostNatal.setObject(33, jTextField45.getText());
            pstmtPostNatal.setObject(34, previousPregHistTbl1.getValueAt(0, 0));
            pstmtPostNatal.setObject(35, previousPregHistTbl1.getValueAt(0, 1));
            pstmtPostNatal.setObject(36, previousPregHistTbl1.getValueAt(0, 2));
            pstmtPostNatal.setObject(37, placentaStatusCmbx.getSelectedItem());
            pstmtPostNatal.setBoolean(38, initiatedBreastFeedingChkbx.isSelected());
            pstmtPostNatal.setBoolean(39, givenTetracyclineChkbx.isSelected());
            pstmtPostNatal.setObject(40, midWifeTxt.getText());
            pstmtPostNatal.setInt(41, Integer.parseInt(apgarScoreTxt.getText()));
            pstmtPostNatal.setObject(42, birthDeformitiesCmbx.getSelectedItem());

            pstmtPostNatal.execute();

            String categ = "-";
            
            java.sql.Statement stm12X = connectDB.createStatement();

            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("UPDATE hp_admission SET diagnosed = true, diagnosis1 = '" + pnTypeofDeliveryCmbx.getSelectedItem() + "',diagnosis2 = '" + deliveryComplicationsCmbx.getSelectedItem() + "',diagnosis3 = '" + pnPatholgyDetailsTxt.getText() + "' WHERE patient_no ilike '" + rhClientCardNoTxt.getText() + "' AND visit_id ilike '" + visitIDTxt.getText() + "'");

            pstmt21.executeUpdate();

            java.sql.PreparedStatement pstmt23 = connectDB.prepareStatement("UPDATE hp_inpatient_register SET discharge_date = '" + datePicker3.getDate().toString() + "' WHERE patient_no ilike '" + rhClientCardNoTxt.getText() + "'");

            results();
        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getLocalizedMessage());
        }


// TODO add your handling code here:
    }//GEN-LAST:event_pnSaveDataBtnActionPerformed

    private void rhClientCardNoTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rhClientCardNoTxtFocusLost
        //serialNoTxt.setText(rhClientCardNoTxt.getText());
// TODO add your handling code here:
    }//GEN-LAST:event_rhClientCardNoTxtFocusLost

    private void patientSearchDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_patientSearchDialogComponentHidden
//        jSearchDialog.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_patientSearchDialogComponentHidden

    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        patientSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_disposeActionPerformed

    private void patientSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientSearchTableMouseClicked

        // this.serialNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        this.rhClientCardNoTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 0).toString());
        //retrievedNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString()+" "+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        retrievedNoTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 1).toString());
        visitIDTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 2).toString());

        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT file_no,surname,other_names,pat_age,nok,relationship,residence,date_admitted FROM hp_maternity_register WHERE file_no ='" + rhClientCardNoTxt.getText() + "' ORDER By date_admitted DESC LIMIT 1");
            while (rset1.next()) {

                jTextField12.setText(rset1.getObject(1).toString());
                surNameTxt.setText(rset1.getObject(2).toString());
                firstNameTxt.setText(rset1.getObject(3).toString());
                ageTxt.setText(rset1.getObject(4).toString());
                nokNameTxt.setText(rset1.getObject(5).toString());
                this.nokRelationShipCmbx.setSelectedItem(rset1.getObject(6).toString());
                currentResidenceTxt.setText(rset1.getObject(7).toString());
            }

            java.sql.Statement stmt12 = connectDB.createStatement();
            java.sql.ResultSet rset12 = stmt12.executeQuery("SELECT address,pat_district,pat_location,chief_name,sub_chief FROM hp_admission WHERE patient_no ='" + rhClientCardNoTxt.getText() + "'  and  visit_id = '" + visitIDTxt.getText() + "'");
            while (rset12.next()) {

                addressTxt.setText(rset12.getObject(1).toString());
                jTextField26.setText(rset12.getObject(2).toString());
                jTextField27.setText(rset12.getObject(3).toString());
                jTextField28.setText(rset12.getObject(4).toString());
                nokNameTxt.setText(rset12.getObject(5).toString());

                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                sdf.applyPattern("yyyy-MM-dd");
                /* try {
                 datePicker2.setDate(sdf.parse(rset1.getString(4)));
                 datePicker3.setDate(sdf.parse(rset1.getString(5)));

                 } catch (java.text.ParseException pe) {
                 javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                 }*/
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        patientSearchDialog.dispose();

        // Add your handling code here:
    }//GEN-LAST:event_patientSearchTableMouseClicked

    private void searchPatientTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchPatientTxtCaretUpdate
//        if(jCheckBox7.isSelected()){
        if (searchPatientTxt.getCaretPosition() < 2) {

            System.out.println("Nothing");
        } else {
            patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, patient_name,visit_id, sub_chief as unit_number, ward as ward_name, date_admitted as admission_date FROM hp_admission WHERE (patient_name ILIKE '%" + searchPatientTxt.getText() + "%' or patient_no ILIKE '%" + searchPatientTxt.getText() + "%' or sub_chief ILIKE '%" + searchPatientTxt.getText() + "%') AND check_out = true AND gender ilike 'female' AND ward IN (SELECT ward FROM hp_wards WHERE ward_type ilike 'maternity') ORDER BY patient_name"));
            patientSearchTable.setShowHorizontalLines(false);
            patientSearchScrollPane.setViewportView(patientSearchTable);

        }
/// Add your handling code here:
    }//GEN-LAST:event_searchPatientTxtCaretUpdate

    private void searchPatientTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchPatientTxtFocusLost
//      jSearchDialog.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_searchPatientTxtFocusLost

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed

        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed

        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed

    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed

        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed

        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void ageTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_ageTxtCaretUpdate
//        if (ageTxt.getText().equalsIgnoreCase("")) {
//        } else {
//            float ages = java.lang.Float.valueOf(ageTxt.getText());
//            int ageYrs = java.lang.Math.round(ages);
//            try {
//                java.sql.Statement stmnza = connectDB.createStatement();
//                java.sql.ResultSet rsnza = stmnza.executeQuery("select (CURRENT_DATE::DATE - ('" + ageYrs + "'*365))");
//                while (rsnza.next()) {
//                    java.text.DateFormat df = java.text.DateFormat.getDateInstance();
//                    java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;
//
//                    sdf.applyPattern("yyyy-MM-dd");
//                    try {
//                        this.datePickerYOB.setDate(sdf.parse(rsnza.getString(1)));
//
//                    } catch (java.text.ParseException pe) {
//                        javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
//                    }
//                }
//            } catch (java.sql.SQLException sq) {
//
//
//                System.out.println(sq.getMessage());
//                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
//
//            }
//        }
        // TODO add your handling code here:
}//GEN-LAST:event_ageTxtCaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();
        // Add your handling code here:
}//GEN-LAST:event_searchButtonActionPerformed

    private void jCheckBox1113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1113ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jCheckBox1113ActionPerformed

    private void pnSaveDataBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnSaveDataBtn1ActionPerformed

        String yrs = null;
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        java.sql.Savepoint registerSavePoint = null;
        String dateOfBirth = null;
        String selectedStatus = null;
        try {
            connectDB.setAutoCommit(false);
            registerSavePoint = connectDB.setSavepoint("registration");
        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
        }

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from hp_bed_category where category ='" + bedCategoryCmbx.getSelectedItem() + "'");
            while (rset.next()) {
                //   jTextField5.setText(rset.getObject(1).toString());
                bedRate = rset.getObject(1).toString();
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }

        try {

            // Date parser
            java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yy");
            com.afrisoftech.lib.DateFormatter dateFormatter = new com.afrisoftech.lib.DateFormatter(dateFormat.parse(rhVisitDatePicker.getDate().toString().trim()), "yy");

            java.lang.String monthString = dateFormatter.getDateString();

            yrs = monthString;

            // Catch java.text.parse exception.
        } catch (java.text.ParseException prs) {
            prs.printStackTrace();
        }
        try {

            try {

                java.sql.Statement stmtf = connectDB.createStatement();
                java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + rhVisitDatePicker.getDate() + "' BETWEEN period_from AND period_to");
                while (rsetf.next()) {
                    periodFrom = rsetf.getDate(1);
                    periodTo = rsetf.getDate(2);
                }
                java.sql.Statement stmtfs = connectDB.createStatement();
                java.sql.ResultSet rsetfs = stmtfs.executeQuery("SELECT '" + datePickerYOB.getDate() + "'::DATE ");
                while (rsetfs.next()) {
                    dateOfBirth = rsetfs.getString(1);

                }

                if (rhVisitDatePicker.getDate().before(periodFrom) || rhVisitDatePicker.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {

                    String name = null;
                    String activity = null;
                    String actNo = null;
                    String billNo = null;
                    String rate = null;
                    String transNo = null;
                    String patientAcc = null;
                    String insAcc = null;
                    String cardAcc = null;
                    String AccDesc = null;
                    String cardName = null;
                    String insName = null;
                    String user = null;
                    String adcode = null;
                    double adrate = 0.00;
                    double nursing = 0.00;
                    String Type = null;
                    String Main = null;
                    double Limit = 0.0;
                    String Categ = null;
                    String visitid = null;
                    String patientNo = null;
                    String selectedchkbx = null;
                    //    String selectedStatus = null;
                    boolean manualNo = false;
                    String preFix = null;
                    int digitNo = 0;
                    String yrEnd = null;
                    boolean incYr = false;
                    String patientsNo = null;
                    String patientsNo2 = com.afrisoftech.lib.DateLables.getDateLabel();
                    String useoneNumber = null;
                    double ageYrs = 0.00;

                    java.sql.Statement stmtD = connectDB.createStatement();
                    java.sql.ResultSet rsetD = stmtD.executeQuery("select rate,gl_account,service_type,main_service from pb_operating_parameters where category ='AF'");
                    while (rsetD.next()) {

                        // adrate = rsetD.getDouble(1);
                        //   adcode = rsetD.getObject(2).toString();
                        Type = rsetD.getObject(3).toString();
                        //   Main = rsetD.getObject(4).toString();
                    }

                    java.sql.Statement stmnzz = connectDB.createStatement();
                    java.sql.ResultSet rsnzz = stmnzz.executeQuery("select ip_numbering,use_one_number from pb_patient_names");
                    while (rsnzz.next()) {
                        manualNo = rsnzz.getBoolean(1);
                        useoneNumber = rsnzz.getString(2);
                    }
                    if (jRadioButton3.isSelected() && manualNo == true) {
                        manualNo = true;
                    } else {
                        if (jRadioButton5.isSelected() && manualNo == true) {
                            manualNo = false;
                        } else {
                            manualNo = manualNo;
                        }
                    }
                    /*  if(useoneNumber.equalsIgnoreCase("USEONENUMBER") && jTextField361.getText().equalsIgnoreCase("")){
                     manualNo = true;
                     }else{
                     manualNo = false;
                     }
                     */

                    selectedchkbx = "Female";

                    if (this.jCheckBox2113.isSelected()) {
                        selectedStatus = jCheckBox2113.getText();
                    } else {
                        if (this.jCheckBox1113.isSelected()) {
                            selectedStatus = jCheckBox1113.getText();
                        } else {
                            if (this.jCheckBox9.isSelected()) {
                                selectedStatus = jCheckBox9.getText();
                            } else {
                                if (this.jCheckBox12.isSelected()) {
                                    selectedStatus = jCheckBox12.getText();
                                }
                            }
                        }
                    }
                    java.sql.Statement stmnza = connectDB.createStatement();
                    java.sql.ResultSet rsnza = stmnza.executeQuery("select (CURRENT_DATE::DATE - '" + datePickerYOB.getDate() + "'::DATE)/365");
                    while (rsnza.next()) {
                        ageYrs = rsnza.getDouble(1);
                    }

                    java.sql.Statement stmtDq = connectDB.createStatement();
                    java.sql.ResultSet rsetDq = stmtDq.executeQuery("select revdesc,revcode from hp_wards where ward_name = '" + admissionWardCmbx.getSelectedItem() + "'");
                    while (rsetDq.next()) {

                        //   adrate = rsetD.getDouble(1);
                        adcode = rsetDq.getObject(2).toString();
                        //    Type = rsetD.getObject(3).toString();
                        Main = rsetDq.getObject(1).toString();
                    }

                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select code,activity,user from pb_activity where activity_category ='PR'");
                    while (rse1.next()) {

                        patientAcc = rse1.getObject(1).toString();
                        AccDesc = rse1.getObject(2).toString();
                    }

                    java.sql.Statement stm1d = connectDB.createStatement();
                    java.sql.ResultSet rse1d = stm1d.executeQuery("select current_user");
                    while (rse1d.next()) {

                        user = rse1d.getObject(1).toString();
                    }

                    java.sql.Statement stm1l = connectDB.createStatement();
                    java.sql.ResultSet rse1l = stm1l.executeQuery("select amount from pb_iplimit");
                    while (rse1l.next()) {

                        Limit = rse1l.getDouble(1);

                    }
                    java.sql.Statement stm1lx = connectDB.createStatement();
                    java.sql.ResultSet rse1lx = stm1lx.executeQuery("select nursing,adm_rate from hp_bed_category WHERE category = '" + bedCategoryCmbx.getSelectedItem() + "'");
                    while (rse1lx.next()) {

                        adrate = rse1lx.getDouble(2);
                        nursing = rse1lx.getDouble(1);
                    }
                    java.sql.Statement stm2 = connectDB.createStatement();
                    java.sql.ResultSet rse2 = stm2.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rse2.next()) {

                        insAcc = rse2.getObject(1).toString();
                        insName = rse2.getObject(2).toString();
                    }
                    // if(jCheckBox1.isSelected()||jCheckBox2.isSelected()){

                    java.sql.Statement stmt1 = connectDB.createStatement();
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select nextval('billing_no_seq')");
                    while (rset1.next()) {
                        billNo = rset1.getObject(1).toString();
                    }
                    java.sql.Statement stmt3 = connectDB.createStatement();
                    java.sql.ResultSet rset3 = stmt3.executeQuery("select nextval('transaction_no_seq')");
                    while (rset3.next()) {
                        transNo = rset3.getObject(1).toString();
                    }
                    java.sql.Statement stmtq = connectDB.createStatement();
                    java.sql.ResultSet rsetq = stmtq.executeQuery("select nextval('ipvisit_id')");
                    while (rsetq.next()) {
                        visitid = rsetq.getObject(1).toString();
                    }
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("SELECT patient_no FROM hp_inpatient_register WHERE patient_no ='" + this.jTextField12.getText() + "'");
                    while (rset.next()) {
                        patientNo = rset.getObject(1).toString();
                    }

                    java.sql.Statement stmt11 = connectDB.createStatement();

                    java.sql.ResultSet rset11 = stmt11.executeQuery("SELECT patient_no,check_out FROM hp_admission WHERE patient_no ='" + jTextField12.getText() + "' and check_out = false");
                    while (rset11.next()) {
                        // jComboBox1.setSelectedItem(rset11.getObject(1).toString());
                        name = rset11.getObject(1).toString();
                        /* if (rset11.getBoolean(2) == false) {
                         jCheckBox7.setSelected(true);
                         } else {
                         jCheckBox7.setSelected(false);
                         }*/
                    }

                    if (jRadioButton3.isSelected() || jRadioButton5.isSelected()) {

                        if (this.jTextField12.getText().equalsIgnoreCase(patientNo)) {
                            jLabel33.setForeground(java.awt.Color.red);
                            jLabel33.setText("PATIENT No. Already On File");

                            // javax.swing.JOptionPane.showMessageDialog(this,"PATIENT No. Already Exists", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else if (jTextField12.getText().equalsIgnoreCase(name)) {
                            javax.swing.JOptionPane.showMessageDialog(this, " Patient with patient no '" + name + "' already admitted ", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                        } else {

                            if (manualNo) {

                                patientsNo2 = patientsNo2;

                            } else {

                                patientsNo = jTextField12.getText();
                                patientsNo2 = patientsNo;
                            }
                            java.sql.PreparedStatement pstmtB = connectDB.prepareStatement("INSERT INTO hp_inpatient_register VALUES(?, UPPER(?), UPPER(?), ?, ?, ?, ?, ?, ?, ?)");
                            pstmtB.setString(1, patientsNo2);
                            if (surNameTxt.getText().equals("")) {
                                javax.swing.JOptionPane.showMessageDialog(this, "You must enter First Name and Second Name", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                            } else {
                                pstmtB.setString(2, surNameTxt.getText().toUpperCase());
                            }
                            pstmtB.setString(3, firstNameTxt.getText());
                            pstmtB.setString(4, "");
                            pstmtB.setString(5, nokNameTxt.getText());
                            pstmtB.setString(8, dateOfBirth);
                            pstmtB.setString(7, addressTxt.getText());
                            if (currentResidenceTxt.getText().equals("")) {
                                javax.swing.JOptionPane.showMessageDialog(this, "You must enter residence", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                            } else {
                                pstmtB.setString(6, currentResidenceTxt.getText());
                            }

                            pstmtB.setString(9, nokNameTxt.getText());
                            if (selectedchkbx == null) {
                                javax.swing.JOptionPane.showMessageDialog(this, "You must tick patient sex", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                            } else {
                                pstmtB.setObject(10, selectedchkbx);
                            }

                            pstmtB.executeUpdate();
                        }
                    }

                    if (jRadioButton3.isSelected()) {

                        String patNos = null;

                        java.sql.Statement pss1x = connectDB.createStatement();
                        java.sql.ResultSet rss1x = pss1x.executeQuery("select nextval('mat_no_seq')");
                        while (rss1x.next()) {
                            patNos = rss1x.getObject(1).toString();
                        }
                        java.sql.Statement stmnz1 = connectDB.createStatement();
                        java.sql.ResultSet rsnz1 = stmnz1.executeQuery("select ip_prefix,ip_digit,ip_yr from pb_patient_names");
                        while (rsnz1.next()) {
                            preFix = rsnz1.getString(1);
                            digitNo = rsnz1.getInt(2);
                            incYr = rsnz1.getBoolean(3);
                        }

                        java.sql.Statement pss1 = connectDB.createStatement();
                        java.sql.ResultSet rss1 = pss1.executeQuery("select '" + "OBS" + "'||lpad('" + patNos + "'," + digitNo + ",'0')||'/'||'" + yrs + "'");
                        while (rss1.next()) {
                            patientsNo = rss1.getObject(1).toString();
                            jTextField12.setText(rss1.getObject(1).toString());
                        }

                        java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE hp_inpatient_register SET patient_no = '" + jTextField12.getText() + "'  WHERE patient_no = '" + patientsNo2 + "'");
                        pstmt11.executeUpdate();

                    }

                    if (jTextField12.getText().equalsIgnoreCase(name)) {
                        javax.swing.JOptionPane.showMessageDialog(this, " Patient with patient no '" + name + "' already admitted ", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                    } else {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO hp_admission("
                                + "patient_no, patient_name, admission_reason, ward_code, ward,"
                                + "bed_no, doctor, wing, nok, tel, address, id_no, mode_of_payment, "
                                + "companion, deposit, reffered_from, nationality, discharge, residence,"
                                + "transfered_to, nhif, date_admitted, admission_no, user_name, "
                                + "discharge_date, invoice_no, visit_id, balance, discharged_by, "
                                + "nursing, check_out, diagnosis1, diagnosis2, diagnosis3, comments,"
                                + "pat_age, gender, marital_status, transaction_type, adm_type, "
                                + "speciality, occupation, diagnosed, pat_religion, pat_district, "
                                + "pat_location, chief_name, sub_chief, nok_residence, nok_relationship,"
                                + "security_release, release_officer, nhif_status, home_county,"
                                + "residence_county, education_level, c_sheet_no)"
                                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                + "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                + "?, ?, ?, ?, ?, ?, ?)");
                        pstmt.setString(1, jTextField12.getText());
                        pstmt.setString(2, firstNameTxt.getText().toUpperCase() + " " + surNameTxt.getText().toUpperCase());
                        pstmt.setString(3, jTextPane1.getText());
                        pstmt.setString(5, admissionWardCmbx.getSelectedItem().toString());

                        // if (jComboBox11.getSelectedItem().toString().equalsIgnoreCase("Scheme")) {
                        //     pstmt.setString(4, jTextField3611.getText());
                        // } else {
                        pstmt.setString(4, "Self");
                        // }
                        pstmt.setString(6, "-");
                        pstmt.setString(7, "");
                        pstmt.setString(8, bedCategoryCmbx.getSelectedItem().toString());
                        pstmt.setString(9, nokNameTxt.getText());
                        pstmt.setString(10, telephoneTxt.getText());
                        pstmt.setString(11, addressTxt.getText());
                        pstmt.setString(12, "");
                        pstmt.setString(13, "Cash");
                        pstmt.setString(14, Categ);
                        pstmt.setDouble(15, java.lang.Double.parseDouble(bedRate));
                        pstmt.setString(16, "");
                        pstmt.setString(17, nationalityCmbx.getSelectedItem().toString());
                        pstmt.setBoolean(18, false);
                        pstmt.setString(19, currentResidenceTxt.getText());
                        pstmt.setString(20, "");
                        pstmt.setString(21, "NHIF");
                        pstmt.setDate(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(this.rhVisitDatePicker.getDate()));
                        pstmt.setString(23, jTextField12.getText());
                        pstmt.setString(24, user);
                        pstmt.setString(25, null);
                        pstmt.setString(26, null);
                        pstmt.setString(27, visitid);
                        pstmt.setDouble(28, 0.00);
                        pstmt.setString(29, "");
                        pstmt.setDouble(30, nursing);
                        pstmt.setBoolean(31, false);
                        pstmt.setString(32, "");
                        pstmt.setString(33, "");
                        pstmt.setString(34, "");
                        pstmt.setString(35, "");
                        pstmt.setDouble(36, ageYrs);
                        pstmt.setObject(37, selectedchkbx);
                        pstmt.setObject(38, selectedStatus);
                        pstmt.setString(39, "Admitted");
                        if (jRadioButton1.isSelected()) {
                            pstmt.setString(40, "First Admission ");
                        } else {
                            pstmt.setString(40, "Re Admission ");
                        }
                        pstmt.setObject(41, specialtyClinicCmbx.getSelectedItem().toString());
                        pstmt.setObject(42, occupationCmbx.getSelectedItem());
                        pstmt.setBoolean(43, false);
                        pstmt.setObject(44, religionCmbx.getSelectedItem());
                        pstmt.setObject(46, this.locationCmbx.getSelectedItem());
                        pstmt.setObject(45, this.jTextField26.getText());
                        pstmt.setObject(47, this.jTextField27.getText());
                        pstmt.setObject(48, this.jTextField28.getText());
                        pstmt.setObject(49, currentResidenceTxt.getText());
                        pstmt.setObject(50, this.nokRelationShipCmbx.getSelectedItem());
                        pstmt.setBoolean(51, false);
                        pstmt.setString(52, null);
                        if (nhifChbx.isSelected()) {
                            nhifStatus = true;
                        } else {
                            nhifStatus = false;
                        }
                        pstmt.setBoolean(53, nhifStatus);
                        pstmt.setString(54, countyofBirthCmbx.getSelectedItem().toString());
                        pstmt.setString(55, countyofResidenceCmbx.getSelectedItem().toString());
                        pstmt.setString(56, educationLevelCmbx.getSelectedItem().toString());
                        pstmt.setString(57, cSheetNoTxt.getText());
                        pstmt.executeUpdate();

                        java.sql.PreparedStatement pstmtf = connectDB.prepareStatement("INSERT INTO hp_maternity_register("
                                + "file_no, surname, other_names, pat_age, marital_status, nok, "
                                + "relationship, residence, para, gravida, gestation_period, clinic,"
                                + "lmp, edd, visit_id, date_admitted,diagnosis,medical_history,blood_transfusion)"
                                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmtf.setString(1, jTextField12.getText());
                        pstmtf.setString(2, surNameTxt.getText().toUpperCase());
                        pstmtf.setString(3, firstNameTxt.getText().toUpperCase());
                        pstmtf.setDouble(4, java.lang.Double.valueOf(ageTxt.getText()));
                        pstmtf.setString(5, selectedStatus);
                        pstmtf.setString(6, nokNameTxt.getText());
                        pstmtf.setObject(7, this.nokRelationShipCmbx.getSelectedItem());
                        pstmtf.setString(8, currentResidenceTxt.getText());
                        pstmtf.setString(9, jTextField5.getText());
                        pstmtf.setString(10, jTextField6.getText());
                        pstmtf.setDouble(11, java.lang.Double.valueOf(jTextField15.getText()));
                        pstmtf.setString(12, jTextField9.getText());
                        pstmtf.setDate(13, com.afrisoftech.lib.SQLDateFormat.getSQLDate(this.datePicker1.getDate()));
                        pstmtf.setDate(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(this.datePicker4.getDate()));
                        pstmtf.setString(15, visitid);
                        pstmtf.setDate(16, com.afrisoftech.lib.SQLDateFormat.getSQLDate(this.rhVisitDatePicker.getDate()));
                        pstmtf.setString(17, jTextPane1.getText());
                        pstmtf.setString(18, jTextPane2.getText());
                        if (jCheckBox1.isSelected()) {
                            pstmtf.setBoolean(19, true);
                        } else {
                            pstmtf.setBoolean(19, false);
                        }
                        pstmtf.executeUpdate();

                        java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE hp_inpatient_register set pay_mode = 'Cash',category = 'General',adm_date = '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(this.rhVisitDatePicker.getDate()) + "',payer = '" + nokNameTxt.getText() + "'  WHERE patient_no = '" + jTextField12.getText() + "'");
                        pstmt11.executeUpdate();

                        java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE hp_inpatient_register SET iplimit = " + Limit + "  WHERE patient_no = '" + jTextField12.getText() + "'");
                        pstmt31.executeUpdate();

                        rhClientCardNoTxt.setText(jTextField12.getText());
                        retrievedNoTxt.setText(firstNameTxt.getText().toUpperCase() + " " + surNameTxt.getText().toUpperCase());
                        visitIDTxt.setText(visitid);
                    }

                    //   javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                connectDB.commit();
                connectDB.setAutoCommit(true);

            } catch (java.lang.Exception sq) {

                try {
                    connectDB.rollback(registerSavePoint);
                } catch (java.sql.SQLException sql) {
                    sql.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                sq.printStackTrace();
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }

            String nhifStatusTxt = null;

            if (nhifChbx.isSelected()) {
                nhifStatusTxt = "YES";
            } else {
                nhifStatusTxt = "NO";
            }

            String interviewer = null;
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT current_user");
            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                interviewer = rset.getString(1);
            }
            javax.swing.JOptionPane.showMessageDialog(this, "Admission record successful, Patient Number : [" + jTextField12.getText() + "] with Name : [" + firstNameTxt.getText() + " " + surNameTxt.getText() + "]", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            com.afrisoftech.reports.PatientRegFormPdf.connectDB = connectDB;
            com.afrisoftech.reports.PatientRegFormPdf regForm = new com.afrisoftech.reports.PatientRegFormPdf();
//            regForm.generatePdf(firstNameTxt.getText().toUpperCase() + " " + surNameTxt.getText().toUpperCase(),
//                    ageTxt.getText(), selectedStatus, nationalityCmbx.getSelectedItem().toString(),
//                    idPassportTxt.getText(), locationCmbx.getSelectedItem().toString(), occupationCmbx.getSelectedItem().toString(), selectedStatus,
//                    religionCmbx.getSelectedItem().toString(), telephoneTxt.getText(), " ", currentResidenceTxt.getText(), locationCmbx.getSelectedItem().toString(), countyofBirthCmbx.getSelectedItem().toString(),
//                    countyofResidenceCmbx.getSelectedItem().toString(), nokNameTxt.getText(), nokRelationShipCmbx.getSelectedItem().toString(), nokTelephoneTxt.getText(), referredFromTxt.getText(), " ", specialtyClinicCmbx.getSelectedItem().toString(), nhifStatusTxt, nhifNumberTxt.getText(),
//                    educationLevelCmbx.getSelectedItem().toString(), employerTelTxt.getText(), employerTxt.getText(), " ", " ", cSheetNoTxt.getText(), " ",
//                    interviewer, com.afrisoftech.lib.ServerTime.serverTimeStamp(connectDB), specialtyClinicCmbx.getSelectedItem().toString(), oldFileNumberTxt.getText(),
//                    jTextField12.getText(), admissionWardCmbx.getSelectedItem().toString(), com.afrisoftech.lib.ServerTime.serverTimeStamp(connectDB),
//                    bedCategoryCmbx.getSelectedItem().toString(), nhifNumberTxt.getText());

            // this.jButton1.setVisible(true);
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries. \n DETAILS : " + ex.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnSaveDataBtn1ActionPerformed

    private void histSaveDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_histSaveDataBtnActionPerformed
        String kanh = null;
        String pmtct = null;
        if (jRadioButton8.isSelected()) {
            kanh = jRadioButton8.getText();
        } else {
            kanh = jRadioButton9.getText();
        }

        if (jCheckBox3.isSelected()) {
            pmtct = jCheckBox3.getText();
        } else {
            pmtct = jCheckBox3.getText();
        }
        try {
            if (jRadioButton7.isSelected()) {
                java.sql.PreparedStatement pstmtPregHist = connectDB.prepareStatement("INSERT INTO hp_obstetric_history("
                        + "file_no, mother_name, visit_no, blood_group, rhesus_factor, kahn, "
                        + "pmtct, date_recorded, birth_date, place, duration_of_labour, "
                        + "delivery, weight, sex, alive_dead, feeding, puerperium,"
                        + "other_details) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                for (int j = 0; j < previousPregHistTbl.getRowCount(); j++) {
                    if (previousPregHistTbl.getValueAt(j, 0) != null) {
                        pstmtPregHist.setString(1, rhClientCardNoTxt.getText());
                        pstmtPregHist.setString(2, this.retrievedNoTxt.getText());
                        pstmtPregHist.setString(3, visitIDTxt.getText());
                        pstmtPregHist.setString(4, this.fileBloodGroupCmbx.getSelectedItem().toString());
                        pstmtPregHist.setString(5, this.fileRhesusfactorCmbx.getSelectedItem().toString());
                        pstmtPregHist.setString(6, kanh);
                        pstmtPregHist.setString(7, pmtct);
                        pstmtPregHist.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(rhVisitDatePicker.getDate()));
                        pstmtPregHist.setObject(9, previousPregHistTbl.getValueAt(j, 0).toString());
                        pstmtPregHist.setString(10, previousPregHistTbl.getValueAt(j, 1).toString());
                        pstmtPregHist.setDouble(11, java.lang.Double.parseDouble(previousPregHistTbl.getValueAt(j, 2).toString()));
                        pstmtPregHist.setString(12, previousPregHistTbl.getValueAt(j, 3).toString());
                        pstmtPregHist.setDouble(13, java.lang.Double.parseDouble(previousPregHistTbl.getValueAt(j, 4).toString()));
                        pstmtPregHist.setObject(14, previousPregHistTbl.getValueAt(j, 5).toString());
                        pstmtPregHist.setObject(15, previousPregHistTbl.getValueAt(j, 6).toString());
                        pstmtPregHist.setObject(16, previousPregHistTbl.getValueAt(j, 7).toString());
                        pstmtPregHist.setObject(17, previousPregHistTbl.getValueAt(j, 8).toString());
                        // pstmtPregHist.setObject(18, rhVisitDatePicker.getDate());
                        pstmtPregHist.setString(18, jTextField10.getText());
                        pstmtPregHist.execute();
                        results();
                    }

                }
            } else {
                java.sql.PreparedStatement pstmtPregHist = connectDB.prepareStatement("INSERT INTO hp_obstetric_history("
                        + "file_no, mother_name, visit_no, blood_group, rhesus_factor, kahn, "
                        + "pmtct, date_recorded, birth_date, place, duration_of_labour, "
                        + "delivery, weight, sex, alive_dead, feeding, puerperium,"
                        + "other_details) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                pstmtPregHist.setString(1, rhClientCardNoTxt.getText());
                pstmtPregHist.setString(2, this.retrievedNoTxt.getText());
                pstmtPregHist.setString(3, visitIDTxt.getText());
                pstmtPregHist.setString(4, this.fileBloodGroupCmbx.getSelectedItem().toString());
                pstmtPregHist.setString(5, this.fileRhesusfactorCmbx.getSelectedItem().toString());
                pstmtPregHist.setString(6, kanh);
                pstmtPregHist.setString(7, pmtct);
                pstmtPregHist.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(rhVisitDatePicker.getDate()));
                pstmtPregHist.setObject(9, null);
                pstmtPregHist.setString(10, "");
                pstmtPregHist.setDouble(11, 0.00);
                pstmtPregHist.setString(12, "");
                pstmtPregHist.setDouble(13, 0.00);
                pstmtPregHist.setObject(14, "");
                pstmtPregHist.setObject(15, "");
                pstmtPregHist.setObject(16, "");
                pstmtPregHist.setObject(17, "");
                // pstmtPregHist.setObject(18, rhVisitDatePicker.getDate());
                pstmtPregHist.setString(18, jTextField10.getText());
                pstmtPregHist.execute();
                results();
            }

        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getLocalizedMessage());
        }

        /**
         * try { java.sql.PreparedStatement pstmtDisMother =
         * connectDB.prepareStatement( "INSERT INTO rh.mother_prev_ailments
         * (serial_no_mother,disease,specific_info," + "remarks,service_date)
         * VALUES(?,?,?,?,?)");
         *
         * /*** for(int j = 0; j < previousPregOtherInfoTable.getRowCount();
         * j++){ if(previousPregOtherInfoTable.getValueAt(j,0) != null){
         * pstmtDisMother.setString(1,rhClientCardNoTxt.getText());
         * pstmtDisMother.setString(2,previousPregOtherInfoTable.getValueAt(j,0).toString());
         * pstmtDisMother.setString(3,previousPregOtherInfoTable.getValueAt(j,1).toString());
         * pstmtDisMother.setString(4,previousPregOtherInfoTable.getValueAt(j,2).toString());
         * pstmtDisMother.setObject(5,rhVisitDatePicker.getDate());
         * pstmtDisMother.execute(); results(); }
         *
         * }
         *
         * } catch (java.sql.SQLException sqlEx) { sqlEx.printStackTrace();
         * javax.swing.JOptionPane.showMessageDialog(this,
         * sqlEx.getLocalizedMessage()); }*
         */
        // TODO add your handling code here:
}//GEN-LAST:event_histSaveDataBtnActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        this.pnSaveDataBtn1.setVisible(true);
        this.pnSaveDataBtn1.setText("Save Maternity Register Data");
        jTextField1.setText("");
        jTextField9.setText("");
        nokNameTxt.setText("");
        visitIDTxt.setText("");
        firstNameTxt.setText("");
        jTextField5.setText("");
        jTextField2.setText("");
        //jTextField6.setText("");
        jTextField12.setText("");
        currentResidenceTxt.setText("");
        surNameTxt.setText("");
        jTextField23.setText("");
//        jTextField36.setText("");
        searchButton.setEnabled(true);
        jTextField1.setEditable(true);
        jTextField9.setEditable(true);
        nokNameTxt.setEditable(true);
        visitIDTxt.setEditable(true);
        firstNameTxt.setEditable(true);
        jTextField2.setEditable(true);
        //jTextField6.setEditable(true);
        jTextField12.setEditable(true);
        currentResidenceTxt.setEditable(true);
        surNameTxt.setEditable(true);
        jTextField23.setEditable(true);
//        jTextField36.setEditable(true);
        //       jTextField18.setText("0");
        jTextField29.setText("");
//        jTextField34.setText("");
        //      jTextField19.setText("");
        jTextField29.setText("");
        jTextField35.setText("0");
//        jTextField20.setText("");
        jTextField31.setText("0");
        //     jTextField36.setText("");
        // jTextField21.setText("");
        jTextField32.setText("");
        jTextField37.setText("");
        jTextField23.setText("0");
        jTextField33.setText("");
        jTextField38.setText("");
        String useonenumber = null;
        try {
            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select ip_numbering,use_one_number from pb_patient_names");
            while (rsetx.next()) {
                autonumber = rsetx.getBoolean(1);
                useonenumber = rsetx.getString(2);
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rss1 = pss1.executeQuery("select file_no from hp_maternity_register ORDER BY OID desc LIMIT 1");
                while (rss1.next()) {
                    // patientsNo = rss1.getObject(1).toString();
                    jTextField24.setText(rss1.getObject(1).toString());
                }
            }
            rsetx.close();
            stmtx.close();
            if (autonumber) {
                jTextField12.setEditable(false);

            } else {
                jTextField12.setEditable(true);
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("selection not successful");
        }
        // Add your handling code here:
}//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        this.pnSaveDataBtn1.setText("Save Maternity Register Data");
        this.pnSaveDataBtn1.setVisible(true);
        // jTextField1.setEditable(false);
        jTextField9.setEditable(false);
        nokNameTxt.setEditable(false);
        visitIDTxt.setEditable(false);
        firstNameTxt.setEditable(false);
        //jTextField2.setEditable(false);
        //jTextField6.setEditable(false);
        jTextField12.setEditable(false);
        currentResidenceTxt.setEditable(false);
        surNameTxt.setText("");
        jTextField23.setEditable(false);
        //jTextField36.setEditable(false);
        searchButton.setEnabled(true);
//        jTextField18.setText("0");
        jTextField29.setText("");
//        jTextField34.setText("");
        //      jTextField19.setText("");
        jTextField29.setText("");
        jTextField35.setText("0");
//        jTextField20.setText("");
        jTextField31.setText("0");
//        jTextField36.setText("");
        //     jTextField21.setText("");
        jTextField32.setText("");
        jTextField37.setText("");
        jTextField23.setText("0");
        jTextField33.setText("");
        jTextField38.setText("");
        // Add your handling code here:
}//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        jRadioButton3ActionPerformed(evt);
        jTextField12.setEditable(true);
//        jTextField18.setText("0");
        jTextField29.setText("");
//        jTextField34.setText("");
        //      jTextField19.setText("");
        jTextField29.setText("");
        jTextField35.setText("0");
//        jTextField20.setText("");
        jTextField31.setText("0");
//        jTextField36.setText("");
//        jTextField21.setText("");
        jTextField32.setText("");
        jTextField37.setText("");
        jTextField23.setText("0");
        jTextField33.setText("");
        jTextField38.setText("");
        // TODO add your handling code here:
}//GEN-LAST:event_jRadioButton5ActionPerformed

    private void admissionWardCmbxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admissionWardCmbxMouseClicked
}//GEN-LAST:event_admissionWardCmbxMouseClicked

    private void admissionWardCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admissionWardCmbxActionPerformed
        this.pnSaveDataBtn.setVisible(true);
        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select ward_code from hp_wards where ward_name ='" + admissionWardCmbx.getSelectedItem() + "'");
            while (rset.next()) {
                //    jTextField5.setText(rset.getObject(1).toString());
                // jTextField11.setText(rset.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }

        // crset4.setCommand("select bed_no from hp_bed_setup where ward ='"+jComboBox2.getSelectedItem()+"' and occupied = 'f' and available = 'Available' order by bed_no asc");
        // try {
        // crset4.execute();
        if (this.pnSaveDataBtn.getText().equalsIgnoreCase("Update")) {
            admissionOutcomeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '" + jTextField42.getText() + "' as bed_no UNION ALL select bed_no from hp_bed_setup where ward ='" + admissionWardCmbx.getSelectedItem() + "' and occupied = false and available = 'Available' order by bed_no asc"));

        } else {
            admissionOutcomeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' as bed_no UNION ALL select bed_no from hp_bed_setup where ward ='" + admissionWardCmbx.getSelectedItem() + "' and occupied = false and available = 'Available' order by bed_no asc"));
            // jComboBox4.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset4, "bed_no", null, null, null));
            //}catch (java.sql.SQLException sql){}
        }
        // Add your handling code here:
}//GEN-LAST:event_admissionWardCmbxActionPerformed

    private void bedCategoryCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedCategoryCmbxActionPerformed
        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate from hp_bed_category where category ='" + bedCategoryCmbx.getSelectedItem() + "'");
            while (rset.next()) {
                //   jTextField5.setText(rset.getObject(1).toString());
                bedRate = rset.getObject(1).toString();
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }          // Add your handling code here:
}//GEN-LAST:event_bedCategoryCmbxActionPerformed

    private void pnSaveDataBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnSaveDataBtn2ActionPerformed

        java.sql.Savepoint registerSavePoint = null;
        String dateOfBirth = null;
        try {
            connectDB.setAutoCommit(false);
            registerSavePoint = connectDB.setSavepoint("registration");
        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
        }
        try {
            try {

                java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE hp_maternity_register SET fundus_height = ?,"
                        + " urine = ?, vaginal_discharge = ?, presentation = ?,"
                        + "ext_genitals = ?, pat_weight = ?, engagement = ?, hb_percent = ?, spleen = ?,"
                        + "pat_position = ?, bp = ?, abnormalities = ?, height = ?, foetal_heart = ?,"
                        + "tpr = ?, pulse=?, respiratory=?, vdrl_rpr_results = ? WHERE visit_id = ?");
                pstmt31.setDouble(1, java.lang.Double.valueOf(jComboBox9.getSelectedItem().toString()));
                pstmt31.setString(2, jTextField29.getText());
                pstmt31.setString(3, jComboBox12.getSelectedItem().toString());
                pstmt31.setString(4, jComboBox10.getSelectedItem().toString());
                pstmt31.setString(5, jComboBox11.getSelectedItem().toString());
                pstmt31.setDouble(6, java.lang.Double.valueOf(jTextField35.getText()));
                pstmt31.setObject(7, jComboBox1.getSelectedItem());
                pstmt31.setDouble(8, java.lang.Double.valueOf(jTextField31.getText()));
                pstmt31.setString(9, jComboBox8.getSelectedItem().toString());
                pstmt31.setObject(10, jComboBox3.getSelectedItem());
                pstmt31.setString(11, jTextField32.getText());
                pstmt31.setString(12, jTextField37.getText());
                pstmt31.setDouble(13, java.lang.Double.valueOf(jTextField23.getText()));
                pstmt31.setString(14, jTextField33.getText());
                pstmt31.setString(15, jTextField38.getText());

                pstmt31.setString(16, jTextField13.getText());
                pstmt31.setString(17, jTextField20.getText());
                pstmt31.setString(18, visitIDTxt.getText());
                pstmt31.setString(19, vdrlRPRResultsTxt.getText());
                pstmt31.executeUpdate();

                java.sql.PreparedStatement pstmtHIV = connectDB.prepareStatement("INSERT"
                        + "   INTO key_health_indicators("
                        + "   patient_no, hiv_tested, hiv_status, nutrition_status, requires_follow_up, "
                        + "   suppliments_given, hiv_counselled, "
                        + "   visit_id, partner_counselled, partner_tested, partner_hiv_status, "
                        + "   arv_prophylaxis, prophylaxis_regimen, visit_date, nutrition_suppliment)"
                        + "   VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pstmtHIV.setString(1, rhClientCardNoTxt.getText());
                if (testedHIVCmbx.getSelectedItem().toString().equalsIgnoreCase("yes")) {
                    pstmtHIV.setBoolean(2, true);
                } else {
                    pstmtHIV.setBoolean(2, true);
                }

                pstmtHIV.setObject(3, hivStatusCmbx.getSelectedItem());
                pstmtHIV.setObject(4, vitaminStatusCmbx.getSelectedItem());
                pstmtHIV.setBoolean(5, false);
                pstmtHIV.setObject(6, vitaminStatusCmbx.getSelectedItem());
                if (counselledHIVCmbx.getSelectedItem().toString().equalsIgnoreCase("yes")) {
                    pstmtHIV.setBoolean(7, true);
                } else {
                    pstmtHIV.setBoolean(7, false);
                }
                pstmtHIV.setString(8, visitIDTxt.getText());
                pstmtHIV.setBoolean(9, false);
                if (partnerTestedHIVCmbx.getSelectedItem().toString().equalsIgnoreCase("yes")) {
                    pstmtHIV.setObject(10, true);
                } else {
                    pstmtHIV.setObject(10, false);
                }
                pstmtHIV.setObject(11, partnerHIVStatusCmbx.getSelectedItem());
                if (ctxGivenCmbx.getSelectedItem().toString().equalsIgnoreCase("yes")) {
                    pstmtHIV.setObject(12, true);
                } else {
                    pstmtHIV.setObject(12, false);
                }
                pstmtHIV.setObject(13, regimenDrugCmbx.getSelectedItem());
                pstmtHIV.setDate(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(rhVisitDatePicker.getDate()));
                pstmtHIV.setObject(15, breastfeedingStatusCmbx.getSelectedItem());

                pstmtHIV.execute();

                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                connectDB.commit();
                connectDB.setAutoCommit(true);

            } catch (java.lang.Exception sq) {

                try {
                    connectDB.rollback(registerSavePoint);
                } catch (java.sql.SQLException sql) {
                    sql.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                sq.printStackTrace();
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }

        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries. \n DETAILS : " + ex.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pnSaveDataBtn2ActionPerformed

    private void pnClearEntriesBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnClearEntriesBtn1ActionPerformed
        jTextField1.setText("");
        jTextField9.setText("");
        nokNameTxt.setText("");
        visitIDTxt.setText("");
        firstNameTxt.setText("");
        jTextField5.setText("");
        jTextField2.setText("");
        //jTextField6.setText("");
        jTextField12.setText("");
        currentResidenceTxt.setText("");
        surNameTxt.setText("");
        jTextField23.setText("");
//        jTextField36.setText("");

        jTextField5.setText("");
        jTextField9.setText("");
        jTextField6.setText("");
//        jTextField10.setText("");
        //      jTextField13.setText("");
        jTextField15.setText("38");
        searchButton.setEnabled(true);
        jTextField1.setEditable(true);
        jTextField9.setEditable(true);
        nokNameTxt.setEditable(true);
        visitIDTxt.setEditable(true);
        firstNameTxt.setEditable(true);
        jTextField2.setEditable(true);
        //jTextField6.setEditable(true);
        jTextField12.setEditable(true);
        currentResidenceTxt.setEditable(true);
        surNameTxt.setEditable(true);
        jTextField23.setEditable(true);
//        jTextField36.setEditable(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_pnClearEntriesBtn1ActionPerformed

    private void pnClearEntriesBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnClearEntriesBtn2ActionPerformed
        // jTextField18.setText("0");
        jTextField29.setText("");
//        jTextField34.setText("");
        //       jTextField19.setText("");
        jTextField29.setText("");
        jTextField35.setText("0");
//        jTextField20.setText("");
        jTextField31.setText("0");
//        jTextField36.setText("");
        //     jTextField21.setText("");
        jTextField32.setText("");
        jTextField37.setText("");
        jTextField23.setText("0");
        jTextField33.setText("");
        jTextField38.setText("");

        // TODO add your handling code here:
    }//GEN-LAST:event_pnClearEntriesBtn2ActionPerformed

    private void jTextField43CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField43CaretUpdate
        if (jTextField43.getCaretPosition() >= 1) {
            double first = java.lang.Double.parseDouble(jTextField43.getText());
            double sec = java.lang.Double.parseDouble(jTextField39.getText());
            double thrd = java.lang.Double.parseDouble(jTextField40.getText());
            //  double diff = java.lang.Double.parseDouble(jTextField12.getText());
            if ((sec / 100 + thrd / 100) > 0.60) {
                double mints = (sec / 100 + thrd / 100) - 0.60;
                jTextField41.setText(java.lang.String.valueOf(first + mints + 1));
            } else {
                jTextField41.setText(java.lang.String.valueOf(first + sec / 100 + thrd / 100));
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField43CaretUpdate

    private void jTextField39CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField39CaretUpdate
        if (jTextField39.getCaretPosition() >= 1) {
            double first = java.lang.Double.parseDouble(jTextField43.getText());
            double sec = java.lang.Double.parseDouble(jTextField39.getText());
            double thrd = java.lang.Double.parseDouble(jTextField40.getText());
            //  double diff = java.lang.Double.parseDouble(jTextField12.getText());
            if ((sec / 100 + thrd / 100) > 0.60) {
                double mints = (sec / 100 + thrd / 100) - 0.60;
                jTextField41.setText(java.lang.String.valueOf(first + mints + 1));
            } else {
                jTextField41.setText(java.lang.String.valueOf(first + sec / 100 + thrd / 100));
            }
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jTextField39CaretUpdate

    private void jTextField40CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField40CaretUpdate
        if (jTextField40.getCaretPosition() >= 1) {
            double first = java.lang.Double.parseDouble(jTextField43.getText());
            double sec = java.lang.Double.parseDouble(jTextField39.getText());
            double thrd = java.lang.Double.parseDouble(jTextField40.getText());
            //  double diff = java.lang.Double.parseDouble(jTextField12.getText());
            if ((sec / 100 + thrd / 100) > 0.60) {
                double mints = (sec / 100 + thrd / 100) - 0.60;
                jTextField41.setText(java.lang.String.valueOf(first + mints + 1));
            } else {
                jTextField41.setText(java.lang.String.valueOf(first + sec / 100 + thrd / 100));
            }
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jTextField40CaretUpdate

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        this.pregHistoryTableJscl.setVisible(true);
        jTextField10.setVisible(false);
        jLabel52.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        this.pregHistoryTableJscl.setVisible(false);
        jTextField10.setVisible(true);
        jLabel52.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void pnClearEntriesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnClearEntriesBtnActionPerformed
        jTextField21.setText("0");
        jTextField44.setText("");
        jTextField48.setText("");
        jTextField49.setText("");
        jTextField46.setText("");
        jTextField47.setText("0");
        jTextField45.setText("");
        jTextField43.setText("0");
        jTextField39.setText("0");
        jTextField21.setText("");
        jTextField40.setText("0");
        jTextField41.setText("0");
        jTextField2.setText("");
        jTextField1.setText("0");
        this.pnWeightofBabyTxt.setText("0");
        this.placeofLastDeliveryTxt.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_pnClearEntriesBtnActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jRadioButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton9ActionPerformed

    private void jComboBox10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox10MouseClicked

    private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox10ActionPerformed

    private void jComboBox11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox11MouseClicked

    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jComboBox12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox12MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox12MouseClicked

    private void jComboBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox12ActionPerformed

    private void datePicker1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_datePicker1CaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_datePicker1CaretPositionChanged

    private void datePicker1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_datePicker1InputMethodTextChanged
        int days = 0;
        try {
            java.sql.Statement stmtfs = connectDB.createStatement();
            java.sql.ResultSet rsetfs = stmtfs.executeQuery("SELECT '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()) + "'::DATE + 270 ");
            while (rsetfs.next()) {
                this.datePicker4.setDate(rsetfs.getDate(1));
            }
            /*if (days > 0) {
             java.util.Calendar calendar = java.util.Calendar.getInstance();
             for (int i = 0; i < days; i++) {
             calendar.roll(java.util.Calendar.YEAR, false);
             }
             this.datePicker4.setDate(calendar.getTime());
             }*/
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }         // TODO add your handling code here:
    }//GEN-LAST:event_datePicker1InputMethodTextChanged

    private void datePicker1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datePicker1MouseClicked
        int days = 0;
        try {
            java.sql.Statement stmtfs = connectDB.createStatement();
            java.sql.ResultSet rsetfs = stmtfs.executeQuery("SELECT '" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()) + "'::DATE + 270 ");
            while (rsetfs.next()) {
                this.datePicker4.setDate(rsetfs.getDate(1));
            }
            /*if (days > 0) {
             java.util.Calendar calendar = java.util.Calendar.getInstance();
             for (int i = 0; i < days; i++) {
             calendar.roll(java.util.Calendar.YEAR, false);
             }
             this.datePicker4.setDate(calendar.getTime());
             }*/
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }         // TODO add your handling code here:
    }//GEN-LAST:event_datePicker1MouseClicked

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void educationLevelCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_educationLevelCmbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_educationLevelCmbxActionPerformed

    private void saveNursingDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNursingDataBtnActionPerformed
    }//GEN-LAST:event_saveNursingDataBtnActionPerformed

    private void clearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearFormActionPerformed

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void birthWeightTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthWeightTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthWeightTxtActionPerformed

    private void birthLengthTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthLengthTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthLengthTxtActionPerformed

    private void partnerHIVStatusCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partnerHIVStatusCmbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_partnerHIVStatusCmbxActionPerformed

    private void regimenDrugCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regimenDrugCmbxActionPerformed
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT DISTINCT item_code FROM st_stock_item WHERE description = ?");
            pstmt.setString(1, regimenDrugCmbx.getSelectedItem().toString());
            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                regimenDrugCodeTxt.setText(rset.getString(1));
            }
        } catch (SQLException ex) {
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_regimenDrugCmbxActionPerformed

    private void patientSearchPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_patientSearchPanelComponentShown

        searchPatientTxt.grabFocus();

        // TODO add your handling code here:
    }//GEN-LAST:event_patientSearchPanelComponentShown

    private void ageYrsTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_ageYrsTxtCaretUpdate

        if (ageYrsTxt.getText().length() > 0) {
            try {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT current_date - round(? * 365.25)::int");
                pstmt.setInt(1, Integer.parseInt(ageYrsTxt.getText()));
                java.sql.ResultSet rset = pstmt.executeQuery();
                while (rset.next()) {
                    datePickerYOB.setDate(rset.getDate(1));
                }

            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage());

            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ageYrsTxtCaretUpdate
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.retrievedNoTxt.getLocationOnScreen();

        patientSearchDialog.setSize(700, 200);

        patientSearchDialog.setLocation(point);

        patientSearchDialog.setVisible(true);

    }

    public void results() {
        javax.swing.JOptionPane.showMessageDialog(this, "Data posted to database successfully. Click OK button or press ENTER key to continue");
        //java.awt.Dimension origSize = this.getSize();
        //this.removeAll();
        //this.initComponents();
        //  this.setSize(origSize);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JComboBox admissionOutcomeCmbx;
    private javax.swing.JComboBox admissionWardCmbx;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JTextField ageYrsTxt;
    private javax.swing.JLabel agelabel;
    private javax.swing.JTextField anomaliesTxt;
    private javax.swing.JTextField apgarFiveMinsTxt;
    private javax.swing.JTextField apgarOneMinsTxt;
    private javax.swing.JTextField apgarScoreTxt;
    private javax.swing.JComboBox bedCategoryCmbx;
    private javax.swing.JPanel bioDataPanel;
    private javax.swing.JComboBox birthDeformitiesCmbx;
    private javax.swing.JTextField birthLengthTxt;
    private javax.swing.JTextField birthNotificationNoTxt;
    private javax.swing.JFormattedTextField birthTimeTxt;
    private javax.swing.JTextField birthWeightTxt;
    private javax.swing.JTextField bloodGroupTxt;
    private javax.swing.JComboBox breastfeedingStatusCmbx;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.JTextField cSheetNoTxt;
    private javax.swing.ButtonGroup ccGrowthIndicatorsPanel;
    private javax.swing.JTextField cervicalDilationTxt;
    private javax.swing.JButton clearForm;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JPanel commandpanel;
    private javax.swing.JTextField contractionsTxt;
    private javax.swing.JComboBox counselledHIVCmbx;
    private javax.swing.JComboBox countyofBirthCmbx;
    private javax.swing.JComboBox countyofResidenceCmbx;
    private javax.swing.JComboBox ctxGivenCmbx;
    private javax.swing.JTextField currentResidenceTxt;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private com.afrisoftech.lib.DatePicker datePickerYOB;
    private javax.swing.JComboBox deliveryComplicationsCmbx;
    private javax.swing.JTextField descentofHeadTxt;
    private javax.swing.JTextField dismissalWeightTxt;
    private javax.swing.JButton dispose;
    private javax.swing.JComboBox drugsDuringResuscitationCmbx;
    private javax.swing.JTextArea drugsDuringResuscitationTxtArea;
    private javax.swing.JScrollPane drugsJcrl;
    private javax.swing.JTextField drugsTxt;
    private javax.swing.JButton editPatientDataBtn;
    private javax.swing.JComboBox educationLevelCmbx;
    private javax.swing.JTextField employerTelTxt;
    private javax.swing.JTextField employerTxt;
    private javax.swing.JTextField eyeDropsTxt;
    private javax.swing.JTabbedPane familyCareTabbedPane;
    private javax.swing.JComboBox fileBloodGroupCmbx;
    private javax.swing.JLabel fileBloodGroupLbl;
    private javax.swing.JLabel fileRhesusFactorsLbl;
    private javax.swing.JComboBox fileRhesusfactorCmbx;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JTextField givenDurationTxt;
    private javax.swing.JCheckBox givenTetracyclineChkbx;
    private javax.swing.JTextField headCircumfrenceTxt;
    private javax.swing.JButton histClearEntriesBtn;
    private javax.swing.JButton histCloseFormBtn;
    private javax.swing.JButton histEditDataBtn;
    private javax.swing.JButton histSaveDataBtn;
    private javax.swing.JComboBox hivStatusCmbx;
    private javax.swing.JTextField idPassportTxt;
    private javax.swing.JTextField incubationDurationTxt;
    private javax.swing.JTextField incubationDurationsTxt;
    private javax.swing.JComboBox infantMaturityCmbx;
    private javax.swing.JCheckBox initiatedBreastFeedingChkbx;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox1113;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox2113;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel101;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel4113;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    public javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField44;
    private javax.swing.JTextField jTextField45;
    private javax.swing.JTextField jTextField46;
    private javax.swing.JTextField jTextField47;
    private javax.swing.JTextField jTextField48;
    private javax.swing.JTextField jTextField49;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextField liquorTxt;
    private javax.swing.JComboBox locationCmbx;
    private javax.swing.JPanel maritalNOKStatusTab;
    private javax.swing.JPanel maritalStatusPanel;
    private javax.swing.JPanel maternityRegister;
    private javax.swing.JTextField midWifeTxt;
    private javax.swing.JTextField mouldingTxt;
    private javax.swing.JTextField mucousExtractionTxt;
    private javax.swing.JComboBox nationalityCmbx;
    private javax.swing.JCheckBox nhifChbx;
    private javax.swing.JTextField nhifNumberTxt;
    private javax.swing.JTextField nokNameTxt;
    private javax.swing.JComboBox nokRelationShipCmbx;
    private javax.swing.JTextField nokResidenceTxt;
    private javax.swing.JTextField nokTelephoneTxt;
    private javax.swing.ButtonGroup ntBreastFeedingbuttonGroup;
    private javax.swing.JTextField nurseryAdmissionTimeTxt;
    private javax.swing.JComboBox occupationCmbx;
    private javax.swing.JTextField oldFileNumberTxt;
    private javax.swing.JComboBox partnerHIVStatusCmbx;
    private javax.swing.JComboBox partnerTestedHIVCmbx;
    private javax.swing.JPanel patientFilePanel;
    private javax.swing.JDialog patientSearchDialog;
    private javax.swing.JPanel patientSearchPanel;
    private javax.swing.JScrollPane patientSearchScrollPane;
    private javax.swing.JTable patientSearchTable;
    private javax.swing.JComboBox placentaStatusCmbx;
    private javax.swing.JTextField placeofLastDeliveryTxt;
    private javax.swing.ButtonGroup pnButtonGroup;
    private javax.swing.JLabel pnButtonSpacerLbl;
    private javax.swing.JLabel pnButtonSpacerLbl1;
    private javax.swing.JLabel pnButtonSpacerLbl2;
    private javax.swing.JPanel pnButtonsPanel;
    private javax.swing.JPanel pnButtonsPanel1;
    private javax.swing.JPanel pnButtonsPanel2;
    private javax.swing.JButton pnClearEntriesBtn;
    private javax.swing.JButton pnClearEntriesBtn1;
    private javax.swing.JButton pnClearEntriesBtn2;
    private javax.swing.JButton pnCloseFormBtn;
    private javax.swing.JButton pnCloseFormBtn1;
    private javax.swing.JButton pnCloseFormBtn2;
    private javax.swing.JPanel pnDeliveryInfoPanel;
    private javax.swing.JButton pnEditDataBtn;
    private javax.swing.JButton pnEditDataBtn1;
    private javax.swing.JButton pnEditDataBtn2;
    private javax.swing.JLabel pnOtherAssSpecifyLbl;
    private javax.swing.JTextField pnOtherAssSpecifyTxt;
    private javax.swing.JCheckBox pnOtherChbx;
    private javax.swing.JLabel pnPatholgyDetailsLbl;
    private javax.swing.JTextField pnPatholgyDetailsTxt;
    private javax.swing.JCheckBox pnPathologyChkbx;
    private javax.swing.JLabel pnPlaceofDeliveryLbl;
    private javax.swing.JButton pnSaveDataBtn;
    private javax.swing.JButton pnSaveDataBtn1;
    private javax.swing.JButton pnSaveDataBtn2;
    private javax.swing.JComboBox pnSexofBabyCmbx;
    private javax.swing.JLabel pnSexofBabyLbl;
    private javax.swing.JLabel pnSpecifyComplicationsLbl;
    private javax.swing.JComboBox pnStateofInfantCmbx;
    private javax.swing.JLabel pnStateofInfantLbl;
    private javax.swing.JComboBox pnTypeofDeliveryCmbx;
    private javax.swing.JLabel pnTypeofDeliveryLbl;
    private javax.swing.ButtonGroup pnTypeofVisit;
    private javax.swing.JLabel pnWeightofBabyLbl;
    private javax.swing.JTextField pnWeightofBabyTxt;
    private javax.swing.JCheckBox pnWithMidWifeChbx;
    private javax.swing.JCheckBox pnWithPhycisianChbx;
    private javax.swing.JCheckBox pnWithTBAChbx;
    private javax.swing.JPanel postNatalCare;
    private javax.swing.JScrollPane pregHistoryTableJscl;
    private javax.swing.JScrollPane pregHistoryTableJscl1;
    private javax.swing.JPanel previousHistoryPanel;
    private javax.swing.JPanel previousPregHistPanel;
    private javax.swing.JTable previousPregHistTbl;
    private javax.swing.JTable previousPregHistTbl1;
    private javax.swing.JTextField referredFromTxt;
    private javax.swing.JComboBox regimenDrugCmbx;
    private javax.swing.JTextField regimenDrugCodeTxt;
    private javax.swing.JComboBox religionCmbx;
    private javax.swing.JTextField respirationTxt;
    private javax.swing.JTextField resucitationTxt;
    private javax.swing.JTextField retrievedNoTxt;
    private javax.swing.JLabel rhClientCardNoLbl;
    private javax.swing.JTextField rhClientCardNoTxt;
    private javax.swing.JLabel rhClientName;
    private javax.swing.JPanel rhCreateFilePanel;
    private com.afrisoftech.lib.DatePicker rhVisitDatePicker;
    private javax.swing.JLabel rhVisitdatePanel;
    private javax.swing.JButton saveNursingDataBtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchField;
    private javax.swing.JTextField searchPatientTxt;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JComboBox specialtyClinicCmbx;
    private javax.swing.JTextField surNameTxt;
    private javax.swing.JTextField telephoneTxt;
    private javax.swing.JComboBox testedHIVCmbx;
    private javax.swing.ButtonGroup treatmentPlanBtngrp;
    private javax.swing.JTextField urineTxt;
    private javax.swing.JTextField vdrlRPRResultsTxt;
    private javax.swing.JTextField visitIDTxt;
    private javax.swing.JTextField vitKTxt;
    private javax.swing.JComboBox vitaminStatusCmbx;
    // End of variables declaration//GEN-END:variables
}
