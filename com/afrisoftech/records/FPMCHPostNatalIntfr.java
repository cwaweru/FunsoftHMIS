/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */
package com.afrisoftech.records;

/**
 *
 * @author fwaweru
 */
public class FPMCHPostNatalIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public FPMCHPostNatalIntfr(java.sql.Connection connDb) {

        connectDB = connDb;

        //  pConnDB = pconnDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        ancSearchDialog = new javax.swing.JDialog();
        ancSearchPanel = new javax.swing.JPanel();
        searchANCFileTxt = new javax.swing.JTextField();
        ancSearchScrollPane = new javax.swing.JScrollPane();
        ancSearchTable = new com.afrisoftech.dbadmin.JTable();
        dispose = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        ancMotherInfoPanel = new javax.swing.JPanel();
        religionLbl = new javax.swing.JLabel();
        religionCmbx = new javax.swing.JComboBox();
        motherLbl = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameLbl = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JTextField();
        middleNameLbl = new javax.swing.JLabel();
        middleNameTxt = new javax.swing.JTextField();
        occupationLbl = new javax.swing.JLabel();
        occupationCmbx = new javax.swing.JComboBox();
        educationLevelLbl = new javax.swing.JLabel();
        educationLevelCmbx = new javax.swing.JComboBox();
        reasonForVisitLbl = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        howclientKnewcentreLbl = new javax.swing.JLabel();
        expectedNoofPregLbl = new javax.swing.JLabel();
        telephoneTxt = new javax.swing.JTextField();
        bloodPressureTxt = new javax.swing.JTextField();
        gestationperiodLbl = new javax.swing.JLabel();
        nextTxt = new javax.swing.JTextField();
        ancNumberLbl = new javax.swing.JLabel();
        ancNumberTxt = new javax.swing.JTextField();
        dobPanel = new javax.swing.JPanel();
        dobLbl = new javax.swing.JLabel();
        datePickerYOB = new com.afrisoftech.lib.DatePicker();
        ageTxt = new javax.swing.JTextField();
        ageLbl = new javax.swing.JLabel();
        villageTxt = new javax.swing.JLabel();
        residenceTxt = new javax.swing.JTextField();
        educationLevelLbl1 = new javax.swing.JLabel();
        educationLevelCmbx1 = new javax.swing.JComboBox();
        weightLbl = new javax.swing.JLabel();
        bloodPressureLbl = new javax.swing.JLabel();
        counsellingLbl = new javax.swing.JLabel();
        counsellingCmbx = new javax.swing.JComboBox();
        hbLbl = new javax.swing.JLabel();
        bloodGroupLbl = new javax.swing.JLabel();
        rhesusFactorLbl = new javax.swing.JLabel();
        pulseRateTxt = new javax.swing.JTextField();
        cardOpeningOptionsPanel = new javax.swing.JPanel();
        createNewCardRdbtn = new javax.swing.JRadioButton();
        revisitRdbtn = new javax.swing.JRadioButton();
        createExistingCardRdbtn = new javax.swing.JRadioButton();
        temperatureTxt = new javax.swing.JTextField();
        ancCardSearchField = new javax.swing.JButton();
        referralsPanel = new javax.swing.JPanel();
        referralINCmbx = new javax.swing.JComboBox();
        referralOUTCmbx = new javax.swing.JComboBox();
        ancVisitDateLbl = new javax.swing.JLabel();
        ancVisitDatePicker = new com.afrisoftech.lib.DatePicker();
        ancVisitDateLbl1 = new javax.swing.JLabel();
        deliveryDatePicker = new com.afrisoftech.lib.DatePicker();
        jLabel44 = new javax.swing.JLabel();
        deliveryModeCmbx = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        statusAPGARScoreTxt = new javax.swing.JTextField();
        referralsPanel1 = new javax.swing.JPanel();
        multiVitaminCmbx = new javax.swing.JComboBox();
        haematinicsCmbx = new javax.swing.JComboBox();
        vitaminaSupplimentationCmbx = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        pncExerciseCmbx = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        patientNumberTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        modernFPMethodCmbx = new javax.swing.JComboBox();
        bloodGoupCmbx = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        placeofDeliveryCmbx = new javax.swing.JComboBox();
        ancCardDetailsPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        priorHIVStatusCmbx = new javax.swing.JComboBox();
        hivPNCWithin72HrsCmbx = new javax.swing.JComboBox();
        hivPNCOver72HrsCmbx = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        ctxMotherCmbx = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        ctxBabyCmbx = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        nvpBabyCmbx = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        cancerScreeningResultCmbx = new javax.swing.JComboBox();
        cancerScreeningMethodCmbx = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        otherConditionsCmbx = new javax.swing.JComboBox();
        otherConditionDetailsTxt = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        pallorCmbx = new javax.swing.JComboBox();
        breastCmbx = new javax.swing.JComboBox();
        uterusCmbx = new javax.swing.JComboBox();
        pphCmbx = new javax.swing.JComboBox();
        cSectionCmbx = new javax.swing.JComboBox();
        episiotomyCmbx = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        fistulaCmbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        ppcBaby6daysCmbx = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        ppcMother2daysCmbx = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        ppcMother6daysCmbx = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        ppcBaby2daysCmbx = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        lochiaCmbx = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        coupleCounselledCmbx = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        partnerHIVResultsCmbx = new javax.swing.JComboBox();
        jLabel43 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentsTextPaneTxt = new javax.swing.JTextPane();
        partnerHIVTestedCmbx = new javax.swing.JComboBox();
        buttonPanel = new javax.swing.JPanel();
        saveMotherInfoBtn = new javax.swing.JButton();
        regEditdataBtn = new javax.swing.JButton();
        regClearFormBtn = new javax.swing.JButton();
        regCloseFormBtn = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();

        ancSearchDialog.setUndecorated(true);
        ancSearchDialog.setResizable(false);
        ancSearchDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                ancSearchDialogComponentHidden(evt);
            }
        });
        ancSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        ancSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ancSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchANCFileTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchANCFileTxtCaretUpdate(evt);
            }
        });
        searchANCFileTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchANCFileTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        ancSearchPanel.add(searchANCFileTxt, gridBagConstraints);

        ancSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        ancSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                ancSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = ancSearchTable.getModel();

                ancSearchScrollPane.setViewportView(ancSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = ancSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            ancSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ancSearchTableMouseClicked(evt);
                }
            });
            ancSearchScrollPane.setViewportView(ancSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            ancSearchPanel.add(ancSearchScrollPane, gridBagConstraints);

            dispose.setText("Dispose");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancSearchDialog.getContentPane().add(ancSearchPanel, gridBagConstraints);

            setClosable(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Reproductive Health Services - MCH -  Post Natal Care (PNC) Register - MOH:406");
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());

            ancMotherInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mother Information"));
            ancMotherInfoPanel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
            ancMotherInfoPanel.setLayout(new java.awt.GridBagLayout());

            religionLbl.setText("Religion");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(religionLbl, gridBagConstraints);

            religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT religion_name FROM pb_religion ORDER BY religion_name"));
            religionCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(religionCmbx, gridBagConstraints);

            motherLbl.setText("First Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(motherLbl, gridBagConstraints);

            firstNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            firstNameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(firstNameTxt, gridBagConstraints);

            lastNameLbl.setText("Last/SurName");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(lastNameLbl, gridBagConstraints);

            lastNameTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            lastNameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(lastNameTxt, gridBagConstraints);

            middleNameLbl.setText("Middle Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(middleNameLbl, gridBagConstraints);

            middleNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            middleNameTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(middleNameTxt, gridBagConstraints);

            occupationLbl.setText("Occupation");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(occupationLbl, gridBagConstraints);

            occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT occupations FROM pb_occupation ORDER BY occupations"));
            occupationCmbx.setMinimumSize(new java.awt.Dimension(100, 18));
            occupationCmbx.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(occupationCmbx, gridBagConstraints);

            educationLevelLbl.setText("Education Level");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(educationLevelLbl, gridBagConstraints);

            educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT edu_name FROM pb_education ORDER BY edu_name"));
            educationLevelCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(educationLevelCmbx, gridBagConstraints);

            reasonForVisitLbl.setText("Address");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(reasonForVisitLbl, gridBagConstraints);

            addressTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            addressTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(addressTxt, gridBagConstraints);

            howclientKnewcentreLbl.setText("Next of Kin");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(howclientKnewcentreLbl, gridBagConstraints);

            expectedNoofPregLbl.setText("Telephone\\Mobile No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(expectedNoofPregLbl, gridBagConstraints);

            telephoneTxt.setMinimumSize(new java.awt.Dimension(40, 19));
            telephoneTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(telephoneTxt, gridBagConstraints);

            bloodPressureTxt.setMinimumSize(new java.awt.Dimension(40, 30));
            bloodPressureTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipadx = 1;
            gridBagConstraints.ipady = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(bloodPressureTxt, gridBagConstraints);

            gestationperiodLbl.setText("Place of delivery");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(gestationperiodLbl, gridBagConstraints);

            nextTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(nextTxt, gridBagConstraints);

            ancNumberLbl.setText("PNC No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(ancNumberLbl, gridBagConstraints);

            ancNumberTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            ancNumberTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ancNumberTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(ancNumberTxt, gridBagConstraints);

            dobPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter date of birth or patient Age here ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 51, 153))); // NOI18N
            dobPanel.setLayout(new java.awt.GridBagLayout());

            dobLbl.setText("Date of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            dobPanel.add(dobLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            dobPanel.add(datePickerYOB, gridBagConstraints);

            ageTxt.setToolTipText("Enter age of patient here");
            ageTxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            ageTxt.setMinimumSize(new java.awt.Dimension(50, 18));
            ageTxt.setPreferredSize(new java.awt.Dimension(50, 18));
            ageTxt.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    ageTxtCaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            dobPanel.add(ageTxt, gridBagConstraints);

            ageLbl.setText("Age(Years)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            dobPanel.add(ageLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            ancMotherInfoPanel.add(dobPanel, gridBagConstraints);

            villageTxt.setForeground(new java.awt.Color(255, 51, 153));
            villageTxt.setText("Village/Estate");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(villageTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.8;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(residenceTxt, gridBagConstraints);

            educationLevelLbl1.setText("Marital Status");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(educationLevelLbl1, gridBagConstraints);

            educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single", "Married", "Divorced", "Window", "Co-Habating", "Other" }));
            educationLevelCmbx1.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(educationLevelCmbx1, gridBagConstraints);

            weightLbl.setText("Temperature");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(weightLbl, gridBagConstraints);

            bloodPressureLbl.setText("Blood Pressure (BP)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(bloodPressureLbl, gridBagConstraints);

            counsellingLbl.setText("Counselled on");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(counsellingLbl, gridBagConstraints);

            counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(counsellingCmbx, gridBagConstraints);

            hbLbl.setText("Pulse");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(hbLbl, gridBagConstraints);

            bloodGroupLbl.setText("Blood Group");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(bloodGroupLbl, gridBagConstraints);

            rhesusFactorLbl.setText("Rhesus");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(rhesusFactorLbl, gridBagConstraints);

            pulseRateTxt.setMinimumSize(new java.awt.Dimension(50, 20));
            pulseRateTxt.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(pulseRateTxt, gridBagConstraints);

            cardOpeningOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tick where appropriate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
            cardOpeningOptionsPanel.setLayout(new java.awt.GridBagLayout());

            createNewCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createNewCardRdbtn);
            createNewCardRdbtn.setSelected(true);
            createNewCardRdbtn.setText("Create New Card");
            createNewCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createNewCardRdbtn.setIconTextGap(1);
            createNewCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createNewCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createNewCardRdbtn, gridBagConstraints);

            revisitRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(revisitRdbtn);
            revisitRdbtn.setText("Revisit");
            revisitRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            revisitRdbtn.setIconTextGap(0);
            revisitRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    revisitRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(revisitRdbtn, gridBagConstraints);

            createExistingCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createExistingCardRdbtn);
            createExistingCardRdbtn.setForeground(new java.awt.Color(51, 51, 255));
            createExistingCardRdbtn.setText("Create Existing Card");
            createExistingCardRdbtn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            createExistingCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createExistingCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createExistingCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createExistingCardRdbtn, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(cardOpeningOptionsPanel, gridBagConstraints);

            temperatureTxt.setMinimumSize(new java.awt.Dimension(50, 20));
            temperatureTxt.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(temperatureTxt, gridBagConstraints);

            ancCardSearchField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            ancCardSearchField.setToolTipText("Search");
            ancCardSearchField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            ancCardSearchField.setMaximumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setMinimumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setPreferredSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            ancCardSearchField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ancCardSearchFieldActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(ancCardSearchField, gridBagConstraints);

            referralsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Referrals Information"));
            referralsPanel.setLayout(new java.awt.GridBagLayout());

            referralINCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1-From Other Health Facility", "2-From Internal Care Unit" }));
            referralINCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Referral IN"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            referralsPanel.add(referralINCmbx, gridBagConstraints);

            referralOUTCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "3-To Other Health Facility", "4-To Internal Care Unit" }));
            referralOUTCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Referral OUT"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            referralsPanel.add(referralOUTCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 14;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(referralsPanel, gridBagConstraints);

            ancVisitDateLbl.setText("Visit Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(ancVisitDateLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(ancVisitDatePicker, gridBagConstraints);

            ancVisitDateLbl1.setText("Delivery date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(ancVisitDateLbl1, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(deliveryDatePicker, gridBagConstraints);

            jLabel44.setText("Mode of delivery");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(jLabel44, gridBagConstraints);

            deliveryModeCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal", "SVD", "C/S" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(deliveryModeCmbx, gridBagConstraints);

            jLabel1.setText("Status of baby (APGAR score)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(jLabel1, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(statusAPGARScoreTxt, gridBagConstraints);

            referralsPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Treatment Information"));
            referralsPanel1.setLayout(new java.awt.GridBagLayout());

            multiVitaminCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N", "Y" }));
            multiVitaminCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Multi-Vitamin"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            referralsPanel1.add(multiVitaminCmbx, gridBagConstraints);

            haematinicsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N", "Y" }));
            haematinicsCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Haematinics"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            referralsPanel1.add(haematinicsCmbx, gridBagConstraints);

            vitaminaSupplimentationCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            vitaminaSupplimentationCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Vitamin A Supplimentation"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            referralsPanel1.add(vitaminaSupplimentationCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 14;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(referralsPanel1, gridBagConstraints);

            jLabel7.setText("PNC Exercise given");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(jLabel7, gridBagConstraints);

            pncExerciseCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(pncExerciseCmbx, gridBagConstraints);

            jLabel8.setText("Patient Number");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(jLabel8, gridBagConstraints);

            patientNumberTxt.setMinimumSize(new java.awt.Dimension(200, 20));
            patientNumberTxt.setPreferredSize(new java.awt.Dimension(200, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(patientNumberTxt, gridBagConstraints);

            jLabel9.setText("Modern FP Method");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(jLabel9, gridBagConstraints);

            modernFPMethodCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "C - Condoms", "ECP - Emergency Contraceptive Pills", "OC - Oral Contraceptive Pills", "INJ - Injectables", "IMP - Implant", "IUD - Intra-Uterine Device", "LAM - Lactational Amenorrhea Method", "D = Diaphragm/Cervical Cap", "FA = Fertility Awareness Method/Periodic Abstinence", "TL = Tubal Ligation/Female Sterilization", "V = Vasectomy (Partner’s)" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(modernFPMethodCmbx, gridBagConstraints);

            bloodGoupCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "A", "B", "AB", "O" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(bloodGoupCmbx, gridBagConstraints);

            jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Negative", "Positive" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(jComboBox3, gridBagConstraints);

            placeofDeliveryCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Clinic", "Hospital", "On The Road", "Home", "Traditional Attendant Clinic", "Other" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(placeofDeliveryCmbx, gridBagConstraints);

            jTabbedPane1.addTab("Post Natal Care Register : Page 1", ancMotherInfoPanel);

            ancCardDetailsPanel.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("ART Eligibility"));
            jPanel3.setLayout(new java.awt.GridBagLayout());

            jLabel20.setText("HIV Prior Status");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel3.add(jLabel20, gridBagConstraints);

            jLabel21.setText("HIV Tested in PNC (<=72 HRS)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel3.add(jLabel21, gridBagConstraints);

            jLabel22.setText("HIV Tested in PNC (>72 HIRS)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel3.add(jLabel22, gridBagConstraints);

            priorHIVStatusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "P-Positive", "N-Negative", "U-Unknown" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(priorHIVStatusCmbx, gridBagConstraints);

            hivPNCWithin72HrsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N-Negative", "P-Positive", "ND-Not Done", "NA-Not Applicable" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(hivPNCWithin72HrsCmbx, gridBagConstraints);

            hivPNCOver72HrsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N-Negative", "P-Positive", "ND-Not Done", "NA-Not Applicable" }));
            hivPNCOver72HrsCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    hivPNCOver72HrsCmbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(hivPNCOver72HrsCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel3, gridBagConstraints);

            jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Prophylaxis"));
            jPanel4.setLayout(new java.awt.GridBagLayout());

            jLabel23.setText("CTX to Mother");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel23, gridBagConstraints);

            ctxMotherCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(ctxMotherCmbx, gridBagConstraints);

            jLabel24.setText("CTX to Baby");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel24, gridBagConstraints);

            ctxBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(ctxBabyCmbx, gridBagConstraints);

            jLabel28.setText("NVP for Baby");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel28, gridBagConstraints);

            nvpBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(nvpBabyCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel4, gridBagConstraints);

            jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Cervical Cancer Screening"));
            jPanel5.setLayout(new java.awt.GridBagLayout());

            jLabel29.setText("Cancer Screening Method");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel5.add(jLabel29, gridBagConstraints);

            jLabel30.setText("Cervical Cancer Result");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel5.add(jLabel30, gridBagConstraints);

            cancerScreeningResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "P" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(cancerScreeningResultCmbx, gridBagConstraints);

            cancerScreeningMethodCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pap Smear", "VIA" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(cancerScreeningMethodCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel5, gridBagConstraints);

            jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Other Conditions"));
            jPanel6.setLayout(new java.awt.GridBagLayout());

            jLabel31.setText("Other Conditions");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel6.add(jLabel31, gridBagConstraints);

            otherConditionsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(otherConditionsCmbx, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel6.add(otherConditionDetailsTxt, gridBagConstraints);

            jLabel32.setText("Specify Other Conditions");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel6.add(jLabel32, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel6, gridBagConstraints);

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Post Natal Examinations"));
            jPanel7.setLayout(new java.awt.GridBagLayout());

            jLabel33.setText("Episiotomy");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel33, gridBagConstraints);

            jLabel34.setText("C-Section Site");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel34, gridBagConstraints);

            jLabel35.setText("PPH");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel35, gridBagConstraints);

            jLabel37.setText("Uterus");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel37, gridBagConstraints);

            jLabel38.setText("Breast");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel38, gridBagConstraints);

            jLabel39.setText("Pallor");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel39, gridBagConstraints);

            pallorCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1-Moderate", "2-Mild", "3-Severe" }));
            pallorCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pallorCmbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(pallorCmbx, gridBagConstraints);

            breastCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1-Normal", "2-Crapped Nipple", "3-Engorged", "4-Mastatis" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(breastCmbx, gridBagConstraints);

            uterusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Boggy", "Well Contracted" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(uterusCmbx, gridBagConstraints);

            pphCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(pphCmbx, gridBagConstraints);

            cSectionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1-Bleeding", "2-Normal", "3-Infected" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(cSectionCmbx, gridBagConstraints);

            episiotomyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1-Repaired", "2-Gaping", "3-Infected", "4-Healed" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(episiotomyCmbx, gridBagConstraints);

            jLabel40.setText("Fistula");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel40, gridBagConstraints);

            fistulaCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "VVF", "RVF", "VVR", " " }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(fistulaCmbx, gridBagConstraints);

            jLabel2.setText("PPC Baby 4-6 days");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel2, gridBagConstraints);

            ppcBaby6daysCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(ppcBaby6daysCmbx, gridBagConstraints);

            jLabel3.setText("PPC Mother 2-3 days");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel3, gridBagConstraints);

            ppcMother2daysCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(ppcMother2daysCmbx, gridBagConstraints);

            jLabel4.setText("PPC Mother 4-6 days");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel4, gridBagConstraints);

            ppcMother6daysCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(ppcMother6daysCmbx, gridBagConstraints);

            jLabel5.setText("PPC Baby 2-3 days");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel5, gridBagConstraints);

            ppcBaby2daysCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(ppcBaby2daysCmbx, gridBagConstraints);

            jLabel6.setText("Lochia");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel6, gridBagConstraints);

            lochiaCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1-Normal", "2-Foul Smelling", "3-Excessive" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(lochiaCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel7, gridBagConstraints);

            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Partner HIV C&T"));
            jPanel8.setLayout(new java.awt.GridBagLayout());

            jLabel41.setText("Couple Counselled");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel8.add(jLabel41, gridBagConstraints);

            coupleCounselledCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel8.add(coupleCounselledCmbx, gridBagConstraints);

            jLabel42.setText("Partners Results");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel8.add(jLabel42, gridBagConstraints);

            partnerHIVResultsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "P", "N", "U", "KP" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel8.add(partnerHIVResultsCmbx, gridBagConstraints);

            jLabel43.setText("Patner Tested for HIV in PNC");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel8.add(jLabel43, gridBagConstraints);

            commentsTextPaneTxt.setBorder(javax.swing.BorderFactory.createTitledBorder("Remarks"));
            jScrollPane1.setViewportView(commentsTextPaneTxt);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 2.0;
            jPanel8.add(jScrollPane1, gridBagConstraints);

            partnerHIVTestedCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Y", "N", "NA" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel8.add(partnerHIVTestedCmbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel8, gridBagConstraints);

            jTabbedPane1.addTab("Post Natal Care Register : Page 2", ancCardDetailsPanel);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            buttonPanel.setPreferredSize(new java.awt.Dimension(224, 20));
            buttonPanel.setLayout(new java.awt.GridBagLayout());

            saveMotherInfoBtn.setText("Save data for Post Natal visit");
            saveMotherInfoBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveMotherInfoBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(saveMotherInfoBtn, gridBagConstraints);

            regEditdataBtn.setText("Edit file data");
            regEditdataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regEditdataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regEditdataBtn, gridBagConstraints);

            regClearFormBtn.setText("Clear form");
            regClearFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regClearFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regClearFormBtn, gridBagConstraints);

            regCloseFormBtn.setText("Close form");
            regCloseFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regCloseFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regCloseFormBtn, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(spacerLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(buttonPanel, gridBagConstraints);

            setBounds(0, 0, 798, 455);
        }// </editor-fold>//GEN-END:initComponents

    private void regEditdataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEditdataBtnActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_regEditdataBtnActionPerformed

    private void saveMotherInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMotherInfoBtnActionPerformed
        /*if (rhClientCardNoTxt.getText().isEmpty()) {
         emptyNo();
         } else {*/
        try {
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmtMotherInfo = connectDB.prepareStatement("INSERT INTO rh.post_natal_follow_up_register("
                    + "            service_date, patient_no, "
                    + "            pnc_no, full_name, village, age, telephone, date_of_delivery, "
                    + "            place_of_delivery, mode_of_delivery, state_of_baby, temperature, "
                    + "            pulse, blood_pressure, pallor, breast, uterus, pph, c_section_site, "
                    + "            lochia, episiotomy, fistula, ppc_mother_1, ppc_mother_2, ppc_baby_1, "
                    + "            ppc_baby_2, hiv_prior_status, hiv_tested_pnc, hiv_tested_pnc_2, "
                    + "            nvp_to_baby, ctx_to_baby, ctx_to_mother, partner_hiv_counselled, "
                    + "            partner_hiv_tested, partner_hiv_results, cancer_screening_method, "
                    + "            cancer_screening_results, pnc_exercise_given, vitamina_supplimentation, "
                    + "            modern_fp_method, multi_vitamin, haemantics, diagnosis, referred_from, "
                    + "            referred_to, remarks)"
                    + "    VALUES (?, ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, "
                    + "            ?, ?, ?, "
                    + "            ?, ?, ?, "
                    + "            ?, ?, ?, ?)");
            pstmtMotherInfo.setDate(1, com.afrisoftech.lib.SQLDateFormat.getSQLDate(ancVisitDatePicker.getDate()));
            pstmtMotherInfo.setString(2, patientNumberTxt.getText());
            pstmtMotherInfo.setString(3, ancNumberTxt.getText());
            pstmtMotherInfo.setString(4, firstNameTxt + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
            pstmtMotherInfo.setString(5, residenceTxt.getText());
            pstmtMotherInfo.setDouble(6, java.lang.Double.valueOf(ageTxt.getText()));
            pstmtMotherInfo.setString(7, telephoneTxt.getText());
            pstmtMotherInfo.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(deliveryDatePicker.getDate()));
            pstmtMotherInfo.setObject(9, placeofDeliveryCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(10, deliveryModeCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(11, statusAPGARScoreTxt.getText());
            pstmtMotherInfo.setDouble(12, java.lang.Double.valueOf(temperatureTxt.getText()));
            pstmtMotherInfo.setDouble(13, java.lang.Double.valueOf(pulseRateTxt.getText()));
            pstmtMotherInfo.setObject(14, bloodPressureTxt.getText());
            pstmtMotherInfo.setObject(15, pallorCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(16, breastCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(17, uterusCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(18, pphCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(19, cSectionCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(20, lochiaCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(21, episiotomyCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(22, fistulaCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(23, ppcMother2daysCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(24, ppcMother6daysCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(25, ppcBaby2daysCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(26, ppcBaby6daysCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(27, priorHIVStatusCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(28, hivPNCWithin72HrsCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(29, hivPNCOver72HrsCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(30, nvpBabyCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(31, ctxBabyCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(32, ctxMotherCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(33, coupleCounselledCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(34, partnerHIVTestedCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(35, partnerHIVResultsCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(36, cancerScreeningMethodCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(37, cancerScreeningResultCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(38, pncExerciseCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(39, vitaminaSupplimentationCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(40, modernFPMethodCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(41, multiVitaminCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(42, haematinicsCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(43, otherConditionsCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(44, referralINCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(45, referralOUTCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(46, commentsTextPaneTxt.getText());
            pstmtMotherInfo.execute();
            this.initComponents();
            this.setSize(com.afrisoftech.hospital.HospitalMain.saccopn.getSize());
            results();

            this.connectDB.commit();
            connectDB.setAutoCommit(true);
        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getLocalizedMessage());
        }
        //}
        // TODO add your handling code here:
}//GEN-LAST:event_saveMotherInfoBtnActionPerformed
    public void results() {
        javax.swing.JOptionPane.showMessageDialog(this, "Data posted to database successfully. Click OK button or press ENTER key to continue");

    }
    private void searchANCFileTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchANCFileTxtCaretUpdate
        //        if(jCheckBox7.isSelected()){
        if (searchANCFileTxt.getCaretPosition() < 6) {

            System.out.println("Nothing");
        } else {
            ancSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT "
                    + "patient_no,first_name,second_name,last_name FROM"
                    + " hp_patient_register WHERE (patient_no ILIKE '%" + searchANCFileTxt.getText() + "%' "
                    + "OR first_name||' '||second_name||' '||last_name ILIKE '%" + searchANCFileTxt.getText() + "%')"
                    + "UNION "
                    + "SELECT DISTINCT patient_no,first_name,second_name,last_name FROM"
                    + " hp_inpatient_register WHERE (patient_no ILIKE '%" + searchANCFileTxt.getText() + "%' "
                    + "OR first_name||' '||second_name||' '||last_name ILIKE '%" + searchANCFileTxt.getText() + "%')"
                    + " ORDER BY 1"));
            ancSearchTable.setShowHorizontalLines(false);
            ancSearchScrollPane.setViewportView(ancSearchTable);

        }

        /*        }else  if(jCheckBox8.isSelected()){
         if(jTextField11.getCaretPosition() < 3){
        
         System.out.println("Nothing");
         }else{
        
         jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, upper(second_name) as other_names, upper(first_name) as surname, year_of_birth, residence from hp_patient_register where patient_no ILIKE '%"+jTextField11.getText()+"%' order by patient_no"));
        
         /*   searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField11.getText()+"%' order by patient_no");
         jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
         new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
         new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
        
         new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
         new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
         }));
         *//*
         jSearchTable.setShowHorizontalLines(false);
         jSearchScrollPane.setViewportView(jSearchTable);
        
        
         }
        
         }*/// Add your handling code here:
}//GEN-LAST:event_searchANCFileTxtCaretUpdate

    private void searchANCFileTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchANCFileTxtFocusLost
        //      jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_searchANCFileTxtFocusLost

    private void ancSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ancSearchTableMouseClicked

        this.ancNumberTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 0).toString());
        this.lastNameTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 1).toString());
        middleNameTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 2).toString());
        firstNameTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 3).toString());
//        ageTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 4).toString());

        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT file_no,surname,other_names,pat_age,nok,relationship,residence,date_admitted FROM hp_maternity_register WHERE file_no ='" + ancNumberTxt.getText() + "' ORDER By date_admitted DESC LIMIT 1");
            while (rset1.next()) {

                otherConditionDetailsTxt.setText(rset1.getObject(1).toString());
              //  placeofDeliveryTxt.setText(rset1.getObject(2).toString());
                //   jTextField25.setText(rset1.getObject(3).toString());
                ageTxt.setText(rset1.getObject(4).toString());
                //jTextField8.setText(rset1.getObject(5).toString());
                // this.nokRelationShipCmbx.setSelectedItem(rset1.getObject(6).toString());
                residenceTxt.setText(rset1.getObject(7).toString());
            }

            java.sql.Statement stmt12 = connectDB.createStatement();
            java.sql.ResultSet rset12 = stmt12.executeQuery("SELECT address,pat_district,pat_location,chief_name,sub_chief FROM hp_admission WHERE patient_no ='" + ancNumberTxt.getText() + "'  ");
            while (rset12.next()) {

                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                sdf.applyPattern("yyyy-MM-dd");
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqe.getMessage());
            //  System.out.println("Insert not successful");
        }
        ancSearchDialog.dispose();

        // Add your handling code here:
}//GEN-LAST:event_ancSearchTableMouseClicked

    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        ancSearchDialog.dispose();
        // Add your handling code here:
}//GEN-LAST:event_disposeActionPerformed

    private void ancSearchDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ancSearchDialogComponentHidden
        //        jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_ancSearchDialogComponentHidden

    private void regClearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regClearFormBtnActionPerformed
        counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN"}));
        referralOUTCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Y", "N"}));
        //   serologyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Non Reactive", "Reactive"}));
        referralINCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "KP", "U"}));
        //  hivResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "NA"}));
        ctxMotherCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
        educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Single", "Married", "Divorced", "Window", "Other"}));
        religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY religion_name"));
        occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
        ctxBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        //  jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        //  jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        //  jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        nvpBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        cancerScreeningResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "PAP", "VIA"}));
        otherConditionsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify"}));
        pallorCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        breastCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "NA"}));
        uterusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "4", "5"}));
        pphCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        cSectionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        episiotomyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        fistulaCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnacy", "STIs/RTI", "Others", " "}));
        coupleCounselledCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        partnerHIVResultsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "U", "KP"}));
        // - //jComboBox23.removeAllItems();
        //jTextField9.setText("");

        // jTextField8.setText("");
        temperatureTxt.setText("0");
//        placeofDeliveryTxt.setText("");
//        rhesusFactorTxt.setText("");
        otherConditionDetailsTxt.setText("");
        residenceTxt.setText("");
//        placeofDeliveryTxt.setText("");
        ancNumberTxt.setText("");
        firstNameTxt.setText("");
        pulseRateTxt.setText("");
        searchANCFileTxt.setText("");
//        bloodGroupTxt.setText("");
        middleNameTxt.setText("");
        lastNameTxt.setText("");
        addressTxt.setText("");
        telephoneTxt.setText("");
        nextTxt.setText("");
        bloodPressureTxt.setText("");
        //  jTextField8.setText("");
        //  jTextField9.setText("");
        //  jTextField10.setText("");
        otherConditionDetailsTxt.setText("");
        //  jTextField13.setText("");
        ageTxt.setText("0");
       // bloodGroupTxt.setEditable(true);
        middleNameTxt.setEditable(true);
        lastNameTxt.setEditable(true);
        addressTxt.setEditable(true);
        telephoneTxt.setEditable(true);
        nextTxt.setEditable(true);
        ageTxt.setEditable(true);
       // rhesusFactorTxt.setEditable(true);
        residenceTxt.setEditable(true);
        ancNumberTxt.setEditable(true);
        ancCardSearchField.setEnabled(true);
        firstNameTxt.setEditable(true);
        pulseRateTxt.setEditable(true);        // TODO add your handling code here:
    }//GEN-LAST:event_regClearFormBtnActionPerformed

    private void regCloseFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regCloseFormBtnActionPerformed
        this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_regCloseFormBtnActionPerformed

    private void ancCardSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancCardSearchFieldActionPerformed

        searchButtonClicked();

        // Add your handling code here:
    }//GEN-LAST:event_ancCardSearchFieldActionPerformed

    private void createExistingCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createExistingCardRdbtnActionPerformed
        createNewCardRdbtnActionPerformed(evt);
        ancNumberTxt.setEditable(true);
        //        jTextField18.setText("0");

        // TODO add your handling code here:
    }//GEN-LAST:event_createExistingCardRdbtnActionPerformed

    private void revisitRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revisitRdbtnActionPerformed
        counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN"}));
//        referralOUTCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Y", "N"}));
//        referralINCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "KP", "U"}));
//        hivResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "NA"}));
        ctxMotherCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
        educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Single", "Married", "Divorced", "Window", "Other"}));
        religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY religion_name"));
        occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
        ctxBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
//        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
//        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
//        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        nvpBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        cancerScreeningResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "PAP", "VIA"}));
        otherConditionsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify"}));
        pallorCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        breastCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "NA"}));
        uterusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "4", "5"}));
        pphCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        cSectionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        episiotomyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        fistulaCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnacy", "STIs/RTI", "Others", " "}));
        coupleCounselledCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        partnerHIVResultsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "U", "KP"}));

//        jTextField9.setText("");
//
//        jTextField8.setText("");
        temperatureTxt.setText("0");

//        placeofDeliveryTxt.setText("");

//        rhesusFactorTxt.setText("");
        //jTextField6.setEditable(false);

        otherConditionDetailsTxt.setText("");

        residenceTxt.setText("");
//        placeofDeliveryTxt.setText("");

        ancNumberTxt.setText("");

        firstNameTxt.setText("");

        pulseRateTxt.setText("");

        searchANCFileTxt.setText("");
//        bloodGroupTxt.setText("");
        middleNameTxt.setText("");
        lastNameTxt.setText("");
        addressTxt.setText("");
        telephoneTxt.setText("");
        nextTxt.setText("");
        bloodPressureTxt.setText("");
//        jTextField8.setText("");
//        jTextField9.setText("");
//        jTextField10.setText("");
        otherConditionDetailsTxt.setText("");
//        jTextField13.setText("");
        ageTxt.setText("0");
//        bloodGroupTxt.setEditable(false);
        middleNameTxt.setEditable(false);
        lastNameTxt.setEditable(false);
        addressTxt.setEditable(false);
        telephoneTxt.setEditable(false);
        nextTxt.setEditable(false);
        ageTxt.setEditable(false);
//        rhesusFactorTxt.setEditable(false);
        residenceTxt.setEditable(false);
        ancNumberTxt.setEditable(false);
        ancCardSearchField.setEnabled(true);
        firstNameTxt.setEditable(false);
        pulseRateTxt.setEditable(false);
        // Add your handling code here:
    }//GEN-LAST:event_revisitRdbtnActionPerformed

    private void createNewCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewCardRdbtnActionPerformed
        counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN"}));
        referralOUTCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Y", "N"}));
        //  serologyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Non Reactive", "Reactive"}));
        referralINCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "KP", "U"}));
//        hivResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "NA"}));
        ctxMotherCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
        educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Single", "Married", "Divorced", "Window", "Other"}));
        religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY religion_name"));
        occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
        ctxBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
//        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
//        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
//        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        nvpBabyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        cancerScreeningResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "PAP", "VIA"}));
        otherConditionsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify"}));
        pallorCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        breastCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "NA"}));
        uterusCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "4", "5"}));
        pphCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        cSectionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        episiotomyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        fistulaCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnacy", "STIs/RTI", "Others", " "}));
        coupleCounselledCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        partnerHIVResultsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "U", "KP"}));
        // - //jComboBox23.removeAllItems();
//        jTextField9.setText("");
//        jTextField8.setText("");
        temperatureTxt.setText("0");
//        placeofDeliveryTxt.setText("");
//        rhesusFactorTxt.setText("");
        otherConditionDetailsTxt.setText("");
        residenceTxt.setText("");
//        placeofDeliveryTxt.setText("");
        ancNumberTxt.setText("");
        firstNameTxt.setText("");
        pulseRateTxt.setText("");
        searchANCFileTxt.setText("");
//        bloodGroupTxt.setText("");
        middleNameTxt.setText("");
        lastNameTxt.setText("");
        addressTxt.setText("");
        telephoneTxt.setText("");
        nextTxt.setText("");
        // parityTxt.setText("");
        //  gravidaTxt.setText("");
        bloodPressureTxt.setText("");
//        jTextField8.setText("");
//        jTextField9.setText("");
//        jTextField10.setText("");
        otherConditionDetailsTxt.setText("");
//        jTextField13.setText("");
        ageTxt.setText("0");
//        bloodGroupTxt.setEditable(true);
        middleNameTxt.setEditable(true);
        lastNameTxt.setEditable(true);
        addressTxt.setEditable(true);
        telephoneTxt.setEditable(true);
        nextTxt.setEditable(true);
        // parityTxt.setEditable(true);
        //  gravidaTxt.setEditable(true);
        ageTxt.setEditable(true);
//        rhesusFactorTxt.setEditable(true);
        residenceTxt.setEditable(true);
        ancNumberTxt.setEditable(true);
        ancCardSearchField.setEnabled(true);
        firstNameTxt.setEditable(true);
        pulseRateTxt.setEditable(true);
        String useonenumber = null;
        try {
            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select ip_numbering,use_one_number from pb_patient_names");
            while (rsetx.next()) {
                //  autonumber = rsetx.getBoolean(1);
                useonenumber = rsetx.getString(2);
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rss1 = pss1.executeQuery("select file_no from hp_maternity_register ORDER BY OID desc LIMIT 1");
                while (rss1.next()) {
                    // patientsNo = rss1.getObject(1).toString();
                    //   jTextField24.setText(rss1.getObject(1).toString());
                }
            }
            rsetx.close();
            stmtx.close();
            // if (autonumber) {
            otherConditionDetailsTxt.setEditable(false);

            // } else {
            otherConditionDetailsTxt.setEditable(true);
            // }

        } catch (java.sql.SQLException sqe) {
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqe.getMessage());
            sqe.printStackTrace();
            System.out.println("selection not successful");
        }
        // Add your handling code here:
    }//GEN-LAST:event_createNewCardRdbtnActionPerformed

    private void ageTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_ageTxtCaretUpdate
        if (ageTxt.getText().equalsIgnoreCase("")) {
        } else {
            float ages = java.lang.Float.valueOf(ageTxt.getText());
            int ageYrs = java.lang.Math.round(ages);
            try {
                java.sql.Statement stmnza = connectDB.createStatement();
                java.sql.ResultSet rsnza = stmnza.executeQuery("select (CURRENT_DATE::DATE - ('" + ageYrs + "'*365))");
                while (rsnza.next()) {
                    java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                    java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                    sdf.applyPattern("yyyy-MM-dd");
                    try {
                        this.datePickerYOB.setDate(sdf.parse(rsnza.getString(1)));

                    } catch (java.text.ParseException pe) {
                        javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                    }
                }
            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTxtCaretUpdate

    private void ancNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ancNumberTxtActionPerformed

    private void pallorCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pallorCmbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pallorCmbxActionPerformed

    private void hivPNCOver72HrsCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hivPNCOver72HrsCmbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hivPNCOver72HrsCmbxActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.ancNumberTxt.getLocationOnScreen();

        ancSearchDialog.setSize(700, 200);

        ancSearchDialog.setLocation(point);

        ancSearchDialog.setVisible(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JPanel ancCardDetailsPanel;
    private javax.swing.JButton ancCardSearchField;
    private javax.swing.JPanel ancMotherInfoPanel;
    private javax.swing.JLabel ancNumberLbl;
    private javax.swing.JTextField ancNumberTxt;
    private javax.swing.JDialog ancSearchDialog;
    private javax.swing.JPanel ancSearchPanel;
    private javax.swing.JScrollPane ancSearchScrollPane;
    private javax.swing.JTable ancSearchTable;
    private javax.swing.JLabel ancVisitDateLbl;
    private javax.swing.JLabel ancVisitDateLbl1;
    private com.afrisoftech.lib.DatePicker ancVisitDatePicker;
    private javax.swing.JComboBox bloodGoupCmbx;
    private javax.swing.JLabel bloodGroupLbl;
    private javax.swing.JLabel bloodPressureLbl;
    private javax.swing.JTextField bloodPressureTxt;
    private javax.swing.JComboBox breastCmbx;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JComboBox cSectionCmbx;
    private javax.swing.JComboBox cancerScreeningMethodCmbx;
    private javax.swing.JComboBox cancerScreeningResultCmbx;
    private javax.swing.JPanel cardOpeningOptionsPanel;
    private javax.swing.JTextPane commentsTextPaneTxt;
    private javax.swing.JComboBox counsellingCmbx;
    private javax.swing.JLabel counsellingLbl;
    private javax.swing.JComboBox coupleCounselledCmbx;
    public javax.swing.JRadioButton createExistingCardRdbtn;
    private javax.swing.JRadioButton createNewCardRdbtn;
    private javax.swing.JComboBox ctxBabyCmbx;
    private javax.swing.JComboBox ctxMotherCmbx;
    private com.afrisoftech.lib.DatePicker datePickerYOB;
    private com.afrisoftech.lib.DatePicker deliveryDatePicker;
    private javax.swing.JComboBox deliveryModeCmbx;
    private javax.swing.JButton dispose;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JPanel dobPanel;
    private javax.swing.JComboBox educationLevelCmbx;
    private javax.swing.JComboBox educationLevelCmbx1;
    private javax.swing.JLabel educationLevelLbl;
    private javax.swing.JLabel educationLevelLbl1;
    private javax.swing.JComboBox episiotomyCmbx;
    private javax.swing.JLabel expectedNoofPregLbl;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JComboBox fistulaCmbx;
    private javax.swing.JLabel gestationperiodLbl;
    private javax.swing.JComboBox haematinicsCmbx;
    private javax.swing.JLabel hbLbl;
    private javax.swing.JComboBox hivPNCOver72HrsCmbx;
    private javax.swing.JComboBox hivPNCWithin72HrsCmbx;
    private javax.swing.JLabel howclientKnewcentreLbl;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lastNameLbl;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JComboBox lochiaCmbx;
    private javax.swing.JLabel middleNameLbl;
    private javax.swing.JTextField middleNameTxt;
    private javax.swing.JComboBox modernFPMethodCmbx;
    private javax.swing.JLabel motherLbl;
    private javax.swing.JComboBox multiVitaminCmbx;
    private javax.swing.JTextField nextTxt;
    private javax.swing.JComboBox nvpBabyCmbx;
    private javax.swing.JComboBox occupationCmbx;
    private javax.swing.JLabel occupationLbl;
    private javax.swing.JTextField otherConditionDetailsTxt;
    private javax.swing.JComboBox otherConditionsCmbx;
    private javax.swing.JComboBox pallorCmbx;
    private javax.swing.JComboBox partnerHIVResultsCmbx;
    private javax.swing.JComboBox partnerHIVTestedCmbx;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JComboBox placeofDeliveryCmbx;
    private javax.swing.JComboBox pncExerciseCmbx;
    private javax.swing.JComboBox ppcBaby2daysCmbx;
    private javax.swing.JComboBox ppcBaby6daysCmbx;
    private javax.swing.JComboBox ppcMother2daysCmbx;
    private javax.swing.JComboBox ppcMother6daysCmbx;
    private javax.swing.JComboBox pphCmbx;
    private javax.swing.JComboBox priorHIVStatusCmbx;
    private javax.swing.JTextField pulseRateTxt;
    private javax.swing.JLabel reasonForVisitLbl;
    private javax.swing.JComboBox referralINCmbx;
    private javax.swing.JComboBox referralOUTCmbx;
    private javax.swing.JPanel referralsPanel;
    private javax.swing.JPanel referralsPanel1;
    private javax.swing.JButton regClearFormBtn;
    private javax.swing.JButton regCloseFormBtn;
    private javax.swing.JButton regEditdataBtn;
    private javax.swing.JComboBox religionCmbx;
    private javax.swing.JLabel religionLbl;
    private javax.swing.JTextField residenceTxt;
    private javax.swing.JRadioButton revisitRdbtn;
    private javax.swing.JLabel rhesusFactorLbl;
    private javax.swing.JButton saveMotherInfoBtn;
    private javax.swing.JTextField searchANCFileTxt;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JTextField statusAPGARScoreTxt;
    private javax.swing.JTextField telephoneTxt;
    private javax.swing.JTextField temperatureTxt;
    private javax.swing.JComboBox uterusCmbx;
    private javax.swing.JLabel villageTxt;
    private javax.swing.JComboBox vitaminaSupplimentationCmbx;
    private javax.swing.JLabel weightLbl;
    // End of variables declaration//GEN-END:variables
}
