/*
 * FPServicesIntfr.java
 *
 * Created on June 29, 2006, 3:35 PM
 */

package com.afrisoftech.records;

import java.sql.Date;

/**
 *
 * @author  Charles W. Waweru <cwaweru@systempartners.biz>
 */
public class BirthsIntfr1 extends javax.swing.JInternalFrame {
    
    java.sql.Connection connectDB = null;
    
    /**
     * Creates new form FPServicesIntfr
     */
    public BirthsIntfr1(java.sql.Connection connDb) {
        
        connectDB = connDb;
        
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnButtonGroup = new javax.swing.ButtonGroup();
        pnTypeofVisit = new javax.swing.ButtonGroup();
        ntBreastFeedingbuttonGroup = new javax.swing.ButtonGroup();
        ccGrowthIndicatorsPanel = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        dispose = new javax.swing.JButton();
        treatmentPlanBtngrp = new javax.swing.ButtonGroup();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        buttonGroup1 = new javax.swing.ButtonGroup();
        familyCareTabbedPane = new javax.swing.JTabbedPane();
        postNatalCare = new javax.swing.JPanel();
        pnDeliveryInfoPanel = new javax.swing.JPanel();
        pnPatholgyDetailsLbl = new javax.swing.JLabel();
        pnPatholgyDetailsTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        pnWeightofBabyLbl = new javax.swing.JLabel();
        pnWeightofBabyTxt = new javax.swing.JTextField();
        pnSexofBabyLbl = new javax.swing.JLabel();
        pnSexofBabyCmbx = new javax.swing.JComboBox();
        pnStateofInfantLbl = new javax.swing.JLabel();
        pnStateofInfantCmbx = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        pnTypeofDeliveryLbl = new javax.swing.JLabel();
        pnTypeofDeliveryCmbx = new javax.swing.JComboBox();
        pnPlaceofDeliveryLbl = new javax.swing.JLabel();
        placeofLastDeliveryTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel13 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        pnSpecifyComplicationsLbl = new javax.swing.JLabel();
        pnSpecifyComplicationsTxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        pnWithMidWifeChbx = new javax.swing.JCheckBox();
        pnWithPhycisianChbx = new javax.swing.JCheckBox();
        pnWithTBAChbx = new javax.swing.JCheckBox();
        pnOtherChbx = new javax.swing.JCheckBox();
        pnOtherAssSpecifyLbl = new javax.swing.JLabel();
        pnOtherAssSpecifyTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        pnStateofInfantLbl1 = new javax.swing.JLabel();
        pnStateofInfantCmbx1 = new javax.swing.JComboBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pnFollowupOfNormaldeliveryChkbx = new javax.swing.JCheckBox();
        pnPathologyChkbx = new javax.swing.JCheckBox();
        pnMotherExamPanel = new javax.swing.JPanel();
        pnReferralLbl = new javax.swing.JLabel();
        pnReferralTxt = new javax.swing.JTextField();
        pnReferralReasonLbl = new javax.swing.JLabel();
        pnReferralReasonTxt = new javax.swing.JTextField();
        pnFollowupJscrl = new javax.swing.JScrollPane();
        pnFollowUpTable = new javax.swing.JTable();
        pnButtonsPanel = new javax.swing.JPanel();
        pnSaveDataBtn = new javax.swing.JButton();
        pnEditDataBtn = new javax.swing.JButton();
        pnCloseFormBtn = new javax.swing.JButton();
        pnClearEntriesBtn = new javax.swing.JButton();
        pnButtonSpacerLbl = new javax.swing.JLabel();
        rhCreateFilePanel = new javax.swing.JPanel();
        rhVisitdatePanel = new javax.swing.JLabel();
        rhVisitDatePicker = new com.afrisoftech.lib.DatePicker();
        rhClientName = new javax.swing.JLabel();
        rhClientCardNoLbl = new javax.swing.JLabel();
        rhClientCardNoTxt = new javax.swing.JTextField();
        patientFilePanel = new javax.swing.JPanel();
        searchField = new javax.swing.JButton();
        retrievedNoTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();

        jSearchDialog.setResizable(false);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jSearchDialogComponentHidden(evt);
            }
        });
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });
        jTextField11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField11FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTableMouseClicked(evt);
                }
            });
            jSearchScrollPane.setViewportView(jSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

            dispose.setText("Cancel");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Reproductive Health Centre - Ante-Natal, Post Natal and Family Planning Services");
            setDoubleBuffered(true);
            setPreferredSize(new java.awt.Dimension(705, 700));
            try {
                setSelected(true);
            } catch (java.beans.PropertyVetoException e1) {
                e1.printStackTrace();
            }
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());

            postNatalCare.setLayout(new java.awt.GridBagLayout());

            pnDeliveryInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Delivery Information", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
            pnDeliveryInfoPanel.setLayout(new java.awt.GridBagLayout());

            pnPatholgyDetailsLbl.setText("Pathology details");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnDeliveryInfoPanel.add(pnPatholgyDetailsLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            pnDeliveryInfoPanel.add(pnPatholgyDetailsTxt, gridBagConstraints);

            jPanel2.setLayout(new java.awt.GridBagLayout());

            pnWeightofBabyLbl.setText("Weight of baby (KG)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnWeightofBabyLbl, gridBagConstraints);

            pnWeightofBabyTxt.setMinimumSize(new java.awt.Dimension(40, 19));
            pnWeightofBabyTxt.setPreferredSize(new java.awt.Dimension(40, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel2.add(pnWeightofBabyTxt, gridBagConstraints);

            pnSexofBabyLbl.setText("Sex of baby");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnSexofBabyLbl, gridBagConstraints);

            pnSexofBabyCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT gender_desc  FROM gender ORDER BY gender_desc"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel2.add(pnSexofBabyCmbx, gridBagConstraints);

            pnStateofInfantLbl.setText("Type of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnStateofInfantLbl, gridBagConstraints);

            pnStateofInfantCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT delivery_status_desc FROM rh.delivery_status ORDER BY delivery_status_desc"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel2.add(pnStateofInfantCmbx, gridBagConstraints);

            jLabel11.setText("Admission Outcome");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel11, gridBagConstraints);

            jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Discharge", "Transferred", "Abscond", "Died" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel2.add(jComboBox4, gridBagConstraints);

            pnTypeofDeliveryLbl.setText("Type of delivery");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnTypeofDeliveryLbl, gridBagConstraints);

            pnTypeofDeliveryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT delivery_type_desc FROM rh.delivery_type ORDER BY delivery_type_desc"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel2.add(pnTypeofDeliveryCmbx, gridBagConstraints);

            pnPlaceofDeliveryLbl.setText("Place of delivery");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnPlaceofDeliveryLbl, gridBagConstraints);

            placeofLastDeliveryTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            placeofLastDeliveryTxt.setPreferredSize(new java.awt.Dimension(100, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(placeofLastDeliveryTxt, gridBagConstraints);

            jLabel12.setText("Date Admitted");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel12, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel2.add(datePicker2, gridBagConstraints);

            jLabel13.setForeground(new java.awt.Color(255, 0, 0));
            jLabel13.setText("Discharge Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel13, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel2.add(datePicker3, gridBagConstraints);

            pnSpecifyComplicationsLbl.setText("Specify Delivery Complications");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnSpecifyComplicationsLbl, gridBagConstraints);

            pnSpecifyComplicationsTxt.setMinimumSize(new java.awt.Dimension(150, 19));
            pnSpecifyComplicationsTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(pnSpecifyComplicationsTxt, gridBagConstraints);

            jPanel1.setLayout(new java.awt.GridBagLayout());

            pnButtonGroup.add(pnWithMidWifeChbx);
            pnWithMidWifeChbx.setText("With Midwife");
            pnWithMidWifeChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnWithMidWifeChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnWithMidWifeChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(pnWithMidWifeChbx, gridBagConstraints);

            pnButtonGroup.add(pnWithPhycisianChbx);
            pnWithPhycisianChbx.setText("With Physician");
            pnWithPhycisianChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnWithPhycisianChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnWithPhycisianChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            pnWithPhycisianChbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnWithPhycisianChbxActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(pnWithPhycisianChbx, gridBagConstraints);

            pnButtonGroup.add(pnWithTBAChbx);
            pnWithTBAChbx.setText("With TBA");
            pnWithTBAChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnWithTBAChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnWithTBAChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(pnWithTBAChbx, gridBagConstraints);

            pnButtonGroup.add(pnOtherChbx);
            pnOtherChbx.setText("Other assitance");
            pnOtherChbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnOtherChbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnOtherChbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(pnOtherChbx, gridBagConstraints);

            pnOtherAssSpecifyLbl.setText("Other (Specify)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel1.add(pnOtherAssSpecifyLbl, gridBagConstraints);

            pnOtherAssSpecifyTxt.setMinimumSize(new java.awt.Dimension(150, 19));
            pnOtherAssSpecifyTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel1.add(pnOtherAssSpecifyTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jPanel1, gridBagConstraints);

            jLabel1.setText("Duration of Pregnancy(WEEKS)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel1, gridBagConstraints);

            jTextField1.setMinimumSize(new java.awt.Dimension(40, 20));
            jTextField1.setPreferredSize(new java.awt.Dimension(40, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel2.add(jTextField1, gridBagConstraints);

            jLabel2.setText("Parity");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(jLabel2, gridBagConstraints);

            jTextField2.setMinimumSize(new java.awt.Dimension(40, 20));
            jTextField2.setPreferredSize(new java.awt.Dimension(40, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
            jPanel2.add(jTextField2, gridBagConstraints);

            jPanel3.setLayout(new java.awt.GridBagLayout());

            pnStateofInfantLbl1.setText("Outcome of delivery");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel3.add(pnStateofInfantLbl1, gridBagConstraints);

            pnStateofInfantCmbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT birth_state_desc FROM rh.birth_state ORDER BY birth_state_desc ASC"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 1);
            jPanel3.add(pnStateofInfantCmbx1, gridBagConstraints);

            buttonGroup1.add(jRadioButton1);
            jRadioButton1.setText("Baby Alive");
            jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jRadioButton1, gridBagConstraints);

            buttonGroup1.add(jRadioButton2);
            jRadioButton2.setText("Baby Died");
            jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jRadioButton2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel2.add(jPanel3, gridBagConstraints);

            jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conditions found in the newborn if any"));

            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null}
                },
                new String [] {
                    "Condition"
                }
            ));
            javax.swing.table.TableColumn pnConditionsColumnBorn = jTable1.getColumnModel().getColumn(0);
            pnConditionsColumnBorn.setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT condition_name FROM rh.condition_in_newborn ORDER BY condition_name"))));
            jScrollPane1.setViewportView(jTable1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            jPanel2.add(jScrollPane1, gridBagConstraints);

            pnFollowupOfNormaldeliveryChkbx.setText("Follow-up of normal delivery");
            pnFollowupOfNormaldeliveryChkbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnFollowupOfNormaldeliveryChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnFollowupOfNormaldeliveryChkbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel2.add(pnFollowupOfNormaldeliveryChkbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 6.0;
            pnDeliveryInfoPanel.add(jPanel2, gridBagConstraints);

            pnPathologyChkbx.setText("Pathology");
            pnPathologyChkbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            pnPathologyChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            pnPathologyChkbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnDeliveryInfoPanel.add(pnPathologyChkbx, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 10.0;
            postNatalCare.add(pnDeliveryInfoPanel, gridBagConstraints);

            pnMotherExamPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Post Natal Visit - Examination of Mother"));
            pnMotherExamPanel.setLayout(new java.awt.GridBagLayout());

            pnReferralLbl.setText("Referral (Name of facility referred to)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnMotherExamPanel.add(pnReferralLbl, gridBagConstraints);

            pnReferralTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            pnReferralTxt.setPreferredSize(new java.awt.Dimension(100, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnMotherExamPanel.add(pnReferralTxt, gridBagConstraints);

            pnReferralReasonLbl.setText("Reason for referral");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnMotherExamPanel.add(pnReferralReasonLbl, gridBagConstraints);

            pnReferralReasonTxt.setMinimumSize(new java.awt.Dimension(300, 19));
            pnReferralReasonTxt.setPreferredSize(new java.awt.Dimension(300, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnMotherExamPanel.add(pnReferralReasonTxt, gridBagConstraints);

            pnFollowUpTable.setAutoCreateRowSorter(true);
            pnFollowUpTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Examination", "Specify", "Result", "Remarks"
                }
            ));
            javax.swing.table.TableColumn pnConditionsColumn = pnFollowUpTable.getColumnModel().getColumn(0);
            pnConditionsColumn.setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT test_desc from rh.ante_routine_tests ORDER BY test_desc"))));
            pnFollowupJscrl.setViewportView(pnFollowUpTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 10.0;
            pnMotherExamPanel.add(pnFollowupJscrl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 10.0;
            postNatalCare.add(pnMotherExamPanel, gridBagConstraints);

            pnButtonsPanel.setLayout(new java.awt.GridBagLayout());

            pnSaveDataBtn.setText("Save Post Natal visit data");
            pnSaveDataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pnSaveDataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnSaveDataBtn, gridBagConstraints);

            pnEditDataBtn.setText("Edit data");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnEditDataBtn, gridBagConstraints);

            pnCloseFormBtn.setText("Close form");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnCloseFormBtn, gridBagConstraints);

            pnClearEntriesBtn.setText("Clear entries");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnClearEntriesBtn, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            pnButtonsPanel.add(pnButtonSpacerLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            postNatalCare.add(pnButtonsPanel, gridBagConstraints);

            familyCareTabbedPane.addTab("Post Natal Services", postNatalCare);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(familyCareTabbedPane, gridBagConstraints);
            familyCareTabbedPane.getAccessibleContext().setAccessibleName("File Registration for Mother");

            rhCreateFilePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            rhCreateFilePanel.setLayout(new java.awt.GridBagLayout());

            rhVisitdatePanel.setText("Date of visit");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 7;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhVisitdatePanel, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 8;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhVisitDatePicker, gridBagConstraints);

            rhClientName.setText("Name of client");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhClientName, gridBagConstraints);

            rhClientCardNoLbl.setText("Card No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhClientCardNoLbl, gridBagConstraints);

            rhClientCardNoTxt.setMinimumSize(new java.awt.Dimension(70, 19));
            rhClientCardNoTxt.setPreferredSize(new java.awt.Dimension(70, 19));
            rhClientCardNoTxt.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    rhClientCardNoTxtFocusLost(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(rhClientCardNoTxt, gridBagConstraints);

            patientFilePanel.setLayout(new java.awt.GridBagLayout());

            searchField.setToolTipText("Search");
            searchField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchField.setMaximumSize(new java.awt.Dimension(40, 20));
            searchField.setMinimumSize(new java.awt.Dimension(40, 20));
            searchField.setPreferredSize(new java.awt.Dimension(40, 20));
            searchField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchFieldActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            patientFilePanel.add(searchField, gridBagConstraints);

            retrievedNoTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            retrievedNoTxt.setPreferredSize(new java.awt.Dimension(100, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 100.0;
            gridBagConstraints.weighty = 1.0;
            patientFilePanel.add(retrievedNoTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(patientFilePanel, gridBagConstraints);

            jButton1.setText("New File");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(jButton1, gridBagConstraints);

            jTextField7.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            rhCreateFilePanel.add(jTextField7, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            getContentPane().add(rhCreateFilePanel, gridBagConstraints);

            java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
            setBounds((screenSize.width-782)/2, (screenSize.height-542)/2, 782, 542);
        }// </editor-fold>//GEN-END:initComponents
    
    private void pnWithPhycisianChbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnWithPhycisianChbxActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_pnWithPhycisianChbxActionPerformed
    
    private void pnSaveDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnSaveDataBtnActionPerformed
    /*    if(jComboBox6.getSelectedItem() == null){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without choosing the file location".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
     
        }else{
            int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to save and have you selected the correct file location ?", "Caution before saving".toUpperCase(), javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);
     
            if (openShift == javax.swing.JOptionPane.YES_OPTION) {*/
        String birthHelp = null;
        if(pnWithMidWifeChbx.isSelected()){
            birthHelp = pnWithMidWifeChbx.getText();
        }else{
            if(pnWithPhycisianChbx.isSelected()){
                birthHelp = pnWithPhycisianChbx.getText();
            }else{
                if(pnWithTBAChbx.isSelected()){
                    birthHelp = pnWithTBAChbx.getText();
                }else{
                    birthHelp = pnOtherChbx.getText();
                }
            }
        }
        try{
            String bedNo = null;
            String Ward = null;
            
            java.sql.Statement stm12 = connectDB.createStatement();
            
            java.sql.ResultSet rse12 = stm12.executeQuery("SELECT bed_no,ward FROM hp_admission WHERE visit_id = '"+jTextField7.getText()+"'");
            while (rse12.next()){
                bedNo = rse12.getObject(1).toString();
                Ward = rse12.getObject(2).toString();
            }
            java.sql.PreparedStatement pstmtPostNatal = connectDB.prepareStatement(
                    "INSERT INTO rh.post_natal_services (mother_serial_no," +
                    "place_of_delivery,type_of_mid_wife,delivery_method," +
                    "type_of_hospital,state_of_infant_at_birth,other_assitance_spec," +
                    "birth_complications,baby_weight,baby_gender,follow_up_normal_delivery," +
                    "patholgy,pathology_details,referral,reason_for_referral," +
                    "service_date,type_of_birth,duration_of_preg,parity,neo_natal_status,admission_outcome ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            pstmtPostNatal.setObject(1,rhClientCardNoTxt.getText());
            pstmtPostNatal.setObject(2,placeofLastDeliveryTxt.getText());
                   /* if(pnButtonGroup.getSelection().getActionCommand() == null){
                        javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without choosing the birth attendant".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }else{*/
            pstmtPostNatal.setString(3,birthHelp);
            //}
            pstmtPostNatal.setObject(4,pnTypeofDeliveryCmbx.getSelectedItem());
            pstmtPostNatal.setObject(5,"Refferal");
            pstmtPostNatal.setObject(6,pnStateofInfantCmbx1.getSelectedItem());
            pstmtPostNatal.setObject(7,pnOtherAssSpecifyTxt.getText());
            pstmtPostNatal.setObject(8,pnSpecifyComplicationsTxt.getText());
            pstmtPostNatal.setDouble(9,java.lang.Double.valueOf(pnWeightofBabyTxt.getText()));
            pstmtPostNatal.setObject(10,pnSexofBabyCmbx.getSelectedItem());
            pstmtPostNatal.setObject(11,pnFollowupOfNormaldeliveryChkbx.isSelected());
            pstmtPostNatal.setObject(12,pnPathologyChkbx.isSelected());
            pstmtPostNatal.setObject(13,pnPatholgyDetailsTxt.getText());
            pstmtPostNatal.setObject(14,pnReferralTxt.getText());
            pstmtPostNatal.setObject(15,pnReferralReasonTxt.getText());
            pstmtPostNatal.setDate(16,com.afrisoftech.lib.SQLDateFormat.getSQLDate(rhVisitDatePicker.getDate()));
            pstmtPostNatal.setObject(17,pnStateofInfantCmbx.getSelectedItem());
            pstmtPostNatal.setDouble(18,java.lang.Double.valueOf(jTextField1.getText()));
            pstmtPostNatal.setObject(19,jTextField2.getText());
            if(jRadioButton1.isSelected()){
                pstmtPostNatal.setObject(20,"Alive");
            }else{
                pstmtPostNatal.setObject(20,"Died");
            }
            pstmtPostNatal.setObject(21,jComboBox4.getSelectedItem().toString());
            
            pstmtPostNatal.execute();
            for(int j = 0; j < jTable1.getRowCount(); j++){
                if(jTable1.getValueAt(j,0) != null){
                    String categ = "-";
                    java.sql.Statement stm12X = connectDB.createStatement();
                    
                    java.sql.ResultSet rse12X = stm12X.executeQuery("SELECT condition_category FROM rh.condition_in_newborn WHERE condition_name = '"+jTable1.getValueAt(j,0)+"'");
                    while (rse12X.next()){
                        categ = rse12X.getObject(1).toString();
                    }
                    
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement(
                            "INSERT INTO rh.newborn_conditions_registered(" +
                            "condition_found, condition_category, mother_no, date_registered) VALUES(?, ?, ?, ?)");
                    pstmt.setObject(1,jTable1.getValueAt(j,0));
                    pstmt.setObject(2, categ);
                    pstmt.setObject(3,rhClientCardNoTxt.getText());
                    pstmt.setDate(4,com.afrisoftech.lib.SQLDateFormat.getSQLDate(rhVisitDatePicker.getDate()));
                    pstmt.execute();
                }
            }
            
            java.sql.PreparedStatement pstmt1xg = connectDB.prepareStatement("UPDATE hp_bed_setup SET occupied = ? where bed_no ilike '"+bedNo+"' and ward ilike '"+Ward+"'");
            pstmt1xg.setBoolean(1, false);
            pstmt1xg.executeUpdate();
            
            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("UPDATE hp_admission SET discharge = true,diagnosed = true,discharge_date = '"+datePicker3.getDate().toString()+"',discharged_by = current_user,transaction_type = '"+jComboBox4.getSelectedItem()+"', diagnosis1 = '"+pnTypeofDeliveryCmbx.getSelectedItem()+"',diagnosis2 = '"+pnSpecifyComplicationsTxt.getText()+"',diagnosis3 = '"+pnPatholgyDetailsTxt.getText()+"' WHERE patient_no ilike '"+rhClientCardNoTxt.getText()+"' AND visit_id ilike '"+jTextField7.getText()+"'");
            
            pstmt21.executeUpdate();
            // if(jComboBox6.getSelectedItem() == null){
            java.sql.PreparedStatement pstmt23 = connectDB.prepareStatement("UPDATE hp_inpatient_register SET discharge_date = '"+datePicker3.getDate().toString()+"' WHERE patient_no ilike '"+rhClientCardNoTxt.getText()+"'");
            
            pstmt23.executeUpdate();
            // } else {
            //     java.sql.PreparedStatement pstmt23 = connectDB.prepareStatement("UPDATE hp_inpatient_register set discharge_date = '"+datePicker3.getDate().toString()+"',file_location = '"+jComboBox6.getSelectedItem()+"' WHERE patient_no ilike '"+rhClientCardNoTxt.getText()+"'");
            
            //      pstmt23.executeUpdate();
            
            //     java.sql.PreparedStatement pstmt211x = connectDB.prepareStatement("UPDATE rh.hp_records_archive SET stored_files = stored_files+1 WHERE shelve_code = '"+jComboBox6.getSelectedItem()+"' AND department_name = '"+jComboBox5.getSelectedItem()+"'");
            
            //     pstmt211x.executeUpdate();
            // }
            java.sql.PreparedStatement pstmtPostNatalFollowup = connectDB.prepareStatement("INSERT INTO rh.post_natal_exams("+
                    "mother_serial_no, service_date, examination, result, remarks)"+
                    "VALUES (?, ?, ?, ?, ?)");
            
            for(int j = 0; j < pnFollowUpTable.getRowCount(); j++){
                if(pnFollowUpTable.getValueAt(j,0) != null){
                    pstmtPostNatalFollowup.setObject(1,rhClientCardNoTxt.getText());
                    pstmtPostNatalFollowup.setDate(2,com.afrisoftech.lib.SQLDateFormat.getSQLDate(rhVisitDatePicker.getDate()));
                    pstmtPostNatalFollowup.setObject(3,pnFollowUpTable.getValueAt(j,0));
                    pstmtPostNatalFollowup.setObject(4,pnFollowUpTable.getValueAt(j,2));
                    pstmtPostNatalFollowup.setObject(5,pnFollowUpTable.getValueAt(j,3));
                    pstmtPostNatalFollowup.execute();
                    // pstmtPostNatalFollowup.setObject(6,);
                    
                }
            }
            results();
        } catch(java.sql.SQLException sqlEx){
            sqlEx.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,sqlEx.getLocalizedMessage());
        }
        //  }
        //}
        
// TODO add your handling code here:
    }//GEN-LAST:event_pnSaveDataBtnActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        com.afrisoftech.hospital.HospitalMain.patientregstmnit.doClick();
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void rhClientCardNoTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rhClientCardNoTxtFocusLost
        
        //serialNoTxt.setText(rhClientCardNoTxt.getText());
        
// TODO add your handling code here:
    }//GEN-LAST:event_rhClientCardNoTxtFocusLost
    
    private void jSearchDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSearchDialogComponentHidden
//        jSearchDialog.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jSearchDialogComponentHidden
    
    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        jSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_disposeActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        
        // this.serialNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        
        this.rhClientCardNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        //retrievedNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString()+" "+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        retrievedNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jTextField7.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        
        try{
        java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select pat_age,gender,ward,date_admitted,CASE WHEN (discharge_date != '') THEN discharge_date::date ELSE CURRENT_DATE END AS date_discharged,marital_status from hp_admission WHERE patient_no ='"+rhClientCardNoTxt.getText()+"' AND diagnosed = false");
                while (rset1.next()){
                       java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                    java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
                    
                    sdf.applyPattern("yyyy-MM-dd");
                    try{
                        datePicker2.setDate(sdf.parse(rset1.getString(4)));
                        datePicker3.setDate(sdf.parse(rset1.getString(5)));
                        
                    } catch (java.text.ParseException pe) {
                        javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                    }
                }
                
                } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jSearchDialog.dispose();
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
//        if(jCheckBox7.isSelected()){
        if(jTextField11.getCaretPosition() < 2){
            
            System.out.println("Nothing");
        }else{
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, patient_name,visit_id FROM hp_admission WHERE patient_name ILIKE '%"+jTextField11.getText()+"%' AND diagnosed = false AND gender ilike 'female' ORDER BY patient_name"));
            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);
            
        }
        
/*        }else  if(jCheckBox8.isSelected()){
            if(jTextField11.getCaretPosition() < 3){
 
                System.out.println("Nothing");
            }else{
 
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, upper(second_name) as other_names, upper(first_name) as surname, year_of_birth, residence from hp_patient_register where patient_no ILIKE '%"+jTextField11.getText()+"%' order by patient_no"));
 
                 /*   searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField11.getText()+"%' order by patient_no");
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
 
                        new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
 *//*
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
    
    
            }
    
        }*/// Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void jTextField11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField11FocusLost
//      jSearchDialog.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField11FocusLost
    
    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        
        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed
    
    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        
        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed
    
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        
        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        
        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        
        searchButtonClicked();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        java.awt.Point point = this.retrievedNoTxt.getLocationOnScreen();
        
        jSearchDialog.setSize(400,200);
        
        jSearchDialog.setLocation(point);
        
        jSearchDialog.setVisible(true);
        
    }
    
    public void results(){
        javax.swing.JOptionPane.showMessageDialog(this,"Data posted to database successfully. Click OK button or press ENTER key to continue");
        //java.awt.Dimension origSize = this.getSize();
        //this.removeAll();
        //this.initComponents();
        //  this.setSize(origSize);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup ccGrowthIndicatorsPanel;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JButton dispose;
    private javax.swing.JTabbedPane familyCareTabbedPane;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField7;
    private javax.swing.ButtonGroup ntBreastFeedingbuttonGroup;
    private javax.swing.JPanel patientFilePanel;
    private javax.swing.JTextField placeofLastDeliveryTxt;
    private javax.swing.ButtonGroup pnButtonGroup;
    private javax.swing.JLabel pnButtonSpacerLbl;
    private javax.swing.JPanel pnButtonsPanel;
    private javax.swing.JButton pnClearEntriesBtn;
    private javax.swing.JButton pnCloseFormBtn;
    private javax.swing.JPanel pnDeliveryInfoPanel;
    private javax.swing.JButton pnEditDataBtn;
    private javax.swing.JTable pnFollowUpTable;
    private javax.swing.JScrollPane pnFollowupJscrl;
    private javax.swing.JCheckBox pnFollowupOfNormaldeliveryChkbx;
    private javax.swing.JPanel pnMotherExamPanel;
    private javax.swing.JLabel pnOtherAssSpecifyLbl;
    private javax.swing.JTextField pnOtherAssSpecifyTxt;
    private javax.swing.JCheckBox pnOtherChbx;
    private javax.swing.JLabel pnPatholgyDetailsLbl;
    private javax.swing.JTextField pnPatholgyDetailsTxt;
    private javax.swing.JCheckBox pnPathologyChkbx;
    private javax.swing.JLabel pnPlaceofDeliveryLbl;
    private javax.swing.JLabel pnReferralLbl;
    private javax.swing.JLabel pnReferralReasonLbl;
    private javax.swing.JTextField pnReferralReasonTxt;
    private javax.swing.JTextField pnReferralTxt;
    private javax.swing.JButton pnSaveDataBtn;
    private javax.swing.JComboBox pnSexofBabyCmbx;
    private javax.swing.JLabel pnSexofBabyLbl;
    private javax.swing.JLabel pnSpecifyComplicationsLbl;
    private javax.swing.JTextField pnSpecifyComplicationsTxt;
    private javax.swing.JComboBox pnStateofInfantCmbx;
    private javax.swing.JComboBox pnStateofInfantCmbx1;
    private javax.swing.JLabel pnStateofInfantLbl;
    private javax.swing.JLabel pnStateofInfantLbl1;
    private javax.swing.JComboBox pnTypeofDeliveryCmbx;
    private javax.swing.JLabel pnTypeofDeliveryLbl;
    private javax.swing.ButtonGroup pnTypeofVisit;
    private javax.swing.JLabel pnWeightofBabyLbl;
    private javax.swing.JTextField pnWeightofBabyTxt;
    private javax.swing.JCheckBox pnWithMidWifeChbx;
    private javax.swing.JCheckBox pnWithPhycisianChbx;
    private javax.swing.JCheckBox pnWithTBAChbx;
    private javax.swing.JPanel postNatalCare;
    private javax.swing.JTextField retrievedNoTxt;
    private javax.swing.JLabel rhClientCardNoLbl;
    private javax.swing.JTextField rhClientCardNoTxt;
    private javax.swing.JLabel rhClientName;
    private javax.swing.JPanel rhCreateFilePanel;
    private com.afrisoftech.lib.DatePicker rhVisitDatePicker;
    private javax.swing.JLabel rhVisitdatePanel;
    private javax.swing.JButton searchField;
    private javax.swing.ButtonGroup treatmentPlanBtngrp;
    // End of variables declaration//GEN-END:variables
    
}