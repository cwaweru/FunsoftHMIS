/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */
package com.afrisoftech.records;

/**
 *
 * @author  fwaweru
 */
public class FPMCHIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public FPMCHIntfr(java.sql.Connection connDb) {

        connectDB = connDb;

        //  pConnDB = pconnDB;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        ancSearchDialog = new javax.swing.JDialog();
        ancSearchPanel = new javax.swing.JPanel();
        searchANCFileTxt = new javax.swing.JTextField();
        ancSearchScrollPane = new javax.swing.JScrollPane();
        ancSearchTable = new com.afrisoftech.dbadmin.JTable();
        dispose = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        ancMotherInfoPanel = new javax.swing.JPanel();
        religionLbl = new javax.swing.JLabel();
        religionCmbx = new javax.swing.JComboBox();
        motherLbl = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameLbl = new javax.swing.JLabel();
        lastnameTxt = new javax.swing.JTextField();
        middleNameLbl = new javax.swing.JLabel();
        middleNameTxt = new javax.swing.JTextField();
        occupationLbl = new javax.swing.JLabel();
        occupationCmbx = new javax.swing.JComboBox();
        educationLevelLbl = new javax.swing.JLabel();
        educationLevelCmbx = new javax.swing.JComboBox();
        edddatePicker = new com.afrisoftech.lib.DatePicker();
        reasonForVisitLbl = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        howclientKnewcentreLbl = new javax.swing.JLabel();
        expectedNoofPregLbl = new javax.swing.JLabel();
        telephoneTxt = new javax.swing.JTextField();
        lmpLbl = new javax.swing.JLabel();
        heightTxt = new javax.swing.JTextField();
        gestationperiodLbl = new javax.swing.JLabel();
        gravidaLbl = new javax.swing.JLabel();
        gravidaTxt = new javax.swing.JTextField();
        parityTxt = new javax.swing.JTextField();
        parityLbl = new javax.swing.JLabel();
        nextTxt = new javax.swing.JTextField();
        lmpDatePicker = new com.afrisoftech.lib.DatePicker();
        ancNumberLbl = new javax.swing.JLabel();
        ancNumberTxt = new javax.swing.JTextField();
        eddLbl = new javax.swing.JLabel();
        dobPanel = new javax.swing.JPanel();
        dobLbl = new javax.swing.JLabel();
        datePickerYOB = new com.afrisoftech.lib.DatePicker();
        ageTxt = new javax.swing.JTextField();
        ageLbl = new javax.swing.JLabel();
        villageTxt = new javax.swing.JLabel();
        residenceTxt = new javax.swing.JTextField();
        educationLevelLbl1 = new javax.swing.JLabel();
        educationLevelCmbx1 = new javax.swing.JComboBox();
        weightLbl = new javax.swing.JLabel();
        bloodGroupTxt = new javax.swing.JTextField();
        bloodPressureLbl = new javax.swing.JLabel();
        rhesusFactorTxt = new javax.swing.JTextField();
        counsellingLbl = new javax.swing.JLabel();
        counsellingCmbx = new javax.swing.JComboBox();
        hbLbl = new javax.swing.JLabel();
        bloodGroupLbl = new javax.swing.JLabel();
        rhesusFactorLbl = new javax.swing.JLabel();
        gestationPeriodTxt = new javax.swing.JTextField();
        hbTxt = new javax.swing.JTextField();
        numberofVisitlbl = new javax.swing.JLabel();
        numberofVisitTxt = new javax.swing.JTextField();
        cardOpeningOptionsPanel = new javax.swing.JPanel();
        createNewCardRdbtn = new javax.swing.JRadioButton();
        revisitRdbtn = new javax.swing.JRadioButton();
        createExistingCardRdbtn = new javax.swing.JRadioButton();
        weightTxt = new javax.swing.JTextField();
        ancCardSearchField = new javax.swing.JButton();
        serologyLbl = new javax.swing.JLabel();
        serologyCmbx = new javax.swing.JComboBox();
        hivStatusPanel = new javax.swing.JPanel();
        hivInitialLbl = new javax.swing.JLabel();
        hivInitialCmbx = new javax.swing.JComboBox();
        hivRetestLbl = new javax.swing.JLabel();
        hivRetestCmbx = new javax.swing.JComboBox();
        hivResultCmbx = new javax.swing.JComboBox();
        hivResultLbl = new javax.swing.JLabel();
        ancVisitDateLbl = new javax.swing.JLabel();
        ancVisitdatePicker = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        ancExerciseCmbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        breastExamCmbx = new javax.swing.JComboBox();
        ancCardDetailsPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jPanel4 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jComboBox13 = new javax.swing.JComboBox();
        jTextField12 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jComboBox14 = new javax.swing.JComboBox();
        jComboBox15 = new javax.swing.JComboBox();
        jComboBox16 = new javax.swing.JComboBox();
        jComboBox17 = new javax.swing.JComboBox();
        jComboBox18 = new javax.swing.JComboBox();
        jComboBox19 = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        jComboBox20 = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jComboBox21 = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        jComboBox22 = new javax.swing.JComboBox();
        jLabel43 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        buttonPanel = new javax.swing.JPanel();
        saveMotherInfoBtn = new javax.swing.JButton();
        regEditdataBtn = new javax.swing.JButton();
        regClearFormBtn = new javax.swing.JButton();
        regCloseFormBtn = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();

        ancSearchDialog.setUndecorated(true);
        ancSearchDialog.setResizable(false);
        ancSearchDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                ancSearchDialogComponentHidden(evt);
            }
        });
        ancSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        ancSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ancSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchANCFileTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchANCFileTxtCaretUpdate(evt);
            }
        });
        searchANCFileTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchANCFileTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        ancSearchPanel.add(searchANCFileTxt, gridBagConstraints);

        ancSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        ancSearchTable.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                ancSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = ancSearchTable.getModel();

                ancSearchScrollPane.setViewportView(ancSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = ancSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            ancSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ancSearchTableMouseClicked(evt);
                }
            });
            ancSearchScrollPane.setViewportView(ancSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            ancSearchPanel.add(ancSearchScrollPane, gridBagConstraints);

            dispose.setText("Dispose");
            dispose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    disposeActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancSearchPanel.add(dispose, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancSearchDialog.getContentPane().add(ancSearchPanel, gridBagConstraints);

            setClosable(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Reproductive Health Services - MCH -  Ante Natal Care (ANC) Register");
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());

            ancMotherInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mother Information"));
            ancMotherInfoPanel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
            ancMotherInfoPanel.setLayout(new java.awt.GridBagLayout());

            religionLbl.setText("Religion");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(religionLbl, gridBagConstraints);

            religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT religion_name FROM pb_religion ORDER BY religion_name"));
            religionCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(religionCmbx, gridBagConstraints);

            motherLbl.setText("First Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(motherLbl, gridBagConstraints);

            firstNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            firstNameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(firstNameTxt, gridBagConstraints);

            lastNameLbl.setText("Last/Sur Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(lastNameLbl, gridBagConstraints);

            lastnameTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            lastnameTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(lastnameTxt, gridBagConstraints);

            middleNameLbl.setText("Middle Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(middleNameLbl, gridBagConstraints);

            middleNameTxt.setMinimumSize(new java.awt.Dimension(100, 20));
            middleNameTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(middleNameTxt, gridBagConstraints);

            occupationLbl.setText("Occupation");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(occupationLbl, gridBagConstraints);

            occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT occupations FROM pb_occupation ORDER BY occupations"));
            occupationCmbx.setMinimumSize(new java.awt.Dimension(100, 18));
            occupationCmbx.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(occupationCmbx, gridBagConstraints);

            educationLevelLbl.setText("Education Level");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(educationLevelLbl, gridBagConstraints);

            educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT edu_name FROM pb_education ORDER BY edu_name"));
            educationLevelCmbx.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(educationLevelCmbx, gridBagConstraints);

            edddatePicker.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(edddatePicker, gridBagConstraints);

            reasonForVisitLbl.setText("Address");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(reasonForVisitLbl, gridBagConstraints);

            addressTxt.setMinimumSize(new java.awt.Dimension(100, 19));
            addressTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(addressTxt, gridBagConstraints);

            howclientKnewcentreLbl.setText("Next of Kin");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(howclientKnewcentreLbl, gridBagConstraints);

            expectedNoofPregLbl.setText("Telephone\\Mobile No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(expectedNoofPregLbl, gridBagConstraints);

            telephoneTxt.setMinimumSize(new java.awt.Dimension(40, 19));
            telephoneTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(telephoneTxt, gridBagConstraints);

            lmpLbl.setText("L.M.P");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(lmpLbl, gridBagConstraints);

            heightTxt.setMinimumSize(new java.awt.Dimension(40, 30));
            heightTxt.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipadx = 1;
            gridBagConstraints.ipady = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(heightTxt, gridBagConstraints);

            gestationperiodLbl.setText("Gestation In Weeks");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(gestationperiodLbl, gridBagConstraints);

            gravidaLbl.setText("Gravida");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(gravidaLbl, gridBagConstraints);

            gravidaTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gravidaTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    gravidaTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(gravidaTxt, gridBagConstraints);

            parityTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(parityTxt, gridBagConstraints);

            parityLbl.setText("Parity");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(parityLbl, gridBagConstraints);

            nextTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(nextTxt, gridBagConstraints);

            lmpDatePicker.setPreferredSize(new java.awt.Dimension(150, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(lmpDatePicker, gridBagConstraints);

            ancNumberLbl.setText("ANC No:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(ancNumberLbl, gridBagConstraints);

            ancNumberTxt.setPreferredSize(new java.awt.Dimension(150, 20));
            ancNumberTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ancNumberTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(ancNumberTxt, gridBagConstraints);

            eddLbl.setText("Expected Date Of Delivery(EDD)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(eddLbl, gridBagConstraints);

            dobPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter date of birth or patient Age here ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 51, 153)));
            dobPanel.setLayout(new java.awt.GridBagLayout());

            dobLbl.setText("Date of Birth");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
            dobPanel.add(dobLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            dobPanel.add(datePickerYOB, gridBagConstraints);

            ageTxt.setToolTipText("Enter age of patient here");
            ageTxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            ageTxt.setMinimumSize(new java.awt.Dimension(50, 18));
            ageTxt.setPreferredSize(new java.awt.Dimension(50, 18));
            ageTxt.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    ageTxtCaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            dobPanel.add(ageTxt, gridBagConstraints);

            ageLbl.setText("Age(Years)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            dobPanel.add(ageLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 5.0;
            ancMotherInfoPanel.add(dobPanel, gridBagConstraints);

            villageTxt.setForeground(new java.awt.Color(255, 51, 153));
            villageTxt.setText("Village/Estate");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(villageTxt, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.8;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(residenceTxt, gridBagConstraints);

            educationLevelLbl1.setText("Marital Status");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(educationLevelLbl1, gridBagConstraints);

            educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single", "Married", "Divorced", "Window", "Co-Habating", "Other" }));
            educationLevelCmbx1.setPreferredSize(new java.awt.Dimension(150, 19));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(educationLevelCmbx1, gridBagConstraints);

            weightLbl.setText("Weight in (Kg)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(weightLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(bloodGroupTxt, gridBagConstraints);

            bloodPressureLbl.setText("Blood Pressure (BP)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(bloodPressureLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(rhesusFactorTxt, gridBagConstraints);

            counsellingLbl.setText("Counselled on");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(counsellingLbl, gridBagConstraints);

            counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(counsellingCmbx, gridBagConstraints);

            hbLbl.setText("HB");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(hbLbl, gridBagConstraints);

            bloodGroupLbl.setText("Blood Group");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(bloodGroupLbl, gridBagConstraints);

            rhesusFactorLbl.setText("Rhesus");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(rhesusFactorLbl, gridBagConstraints);

            gestationPeriodTxt.setMinimumSize(new java.awt.Dimension(50, 20));
            gestationPeriodTxt.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(gestationPeriodTxt, gridBagConstraints);

            hbTxt.setMinimumSize(new java.awt.Dimension(50, 20));
            hbTxt.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 10;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(hbTxt, gridBagConstraints);

            numberofVisitlbl.setText("Number of Visits");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(numberofVisitlbl, gridBagConstraints);

            numberofVisitTxt.setMinimumSize(new java.awt.Dimension(50, 20));
            numberofVisitTxt.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(numberofVisitTxt, gridBagConstraints);

            cardOpeningOptionsPanel.setBackground(new java.awt.Color(255, 239, 255));
            cardOpeningOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tick where appropriate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
            cardOpeningOptionsPanel.setLayout(new java.awt.GridBagLayout());

            createNewCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createNewCardRdbtn);
            createNewCardRdbtn.setSelected(true);
            createNewCardRdbtn.setText("Create New Card");
            createNewCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createNewCardRdbtn.setIconTextGap(1);
            createNewCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createNewCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createNewCardRdbtn, gridBagConstraints);

            revisitRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(revisitRdbtn);
            revisitRdbtn.setText("Revisit");
            revisitRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            revisitRdbtn.setIconTextGap(0);
            revisitRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    revisitRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(revisitRdbtn, gridBagConstraints);

            createExistingCardRdbtn.setBackground(new java.awt.Color(255, 239, 255));
            buttonGroup1.add(createExistingCardRdbtn);
            createExistingCardRdbtn.setForeground(new java.awt.Color(51, 51, 255));
            createExistingCardRdbtn.setText("Create Existing Card");
            createExistingCardRdbtn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            createExistingCardRdbtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            createExistingCardRdbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createExistingCardRdbtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            cardOpeningOptionsPanel.add(createExistingCardRdbtn, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(cardOpeningOptionsPanel, gridBagConstraints);

            weightTxt.setMinimumSize(new java.awt.Dimension(50, 20));
            weightTxt.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(weightTxt, gridBagConstraints);

            ancCardSearchField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            ancCardSearchField.setToolTipText("Search");
            ancCardSearchField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            ancCardSearchField.setMaximumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setMinimumSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setPreferredSize(new java.awt.Dimension(40, 20));
            ancCardSearchField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            ancCardSearchField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ancCardSearchFieldActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(ancCardSearchField, gridBagConstraints);

            serologyLbl.setText("Serology(VDRL/RPR)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(serologyLbl, gridBagConstraints);

            serologyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Non Reactive", "Reactive" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(serologyCmbx, gridBagConstraints);

            hivStatusPanel.setLayout(new java.awt.GridBagLayout());

            hivInitialLbl.setText("HIV Initial");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            hivStatusPanel.add(hivInitialLbl, gridBagConstraints);

            hivInitialCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "P", "N", "KP", "U" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            hivStatusPanel.add(hivInitialCmbx, gridBagConstraints);

            hivRetestLbl.setText("Retest");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            hivStatusPanel.add(hivRetestLbl, gridBagConstraints);

            hivRetestCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Y", "N" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            hivStatusPanel.add(hivRetestCmbx, gridBagConstraints);

            hivResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "P", "N", "NA" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            hivStatusPanel.add(hivResultCmbx, gridBagConstraints);

            hivResultLbl.setText("Result");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            hivStatusPanel.add(hivResultLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 14;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(hivStatusPanel, gridBagConstraints);

            ancVisitDateLbl.setText("Visit Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(ancVisitDateLbl, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            ancMotherInfoPanel.add(ancVisitdatePicker, gridBagConstraints);

            jLabel1.setText("ANC Exercise done");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 15;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(jLabel1, gridBagConstraints);

            ancExerciseCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 15;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(ancExerciseCmbx, gridBagConstraints);

            jLabel2.setText("Breast examination done");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 14;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            ancMotherInfoPanel.add(jLabel2, gridBagConstraints);

            breastExamCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Y", "N" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 14;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancMotherInfoPanel.add(breastExamCmbx, gridBagConstraints);

            jTabbedPane1.addTab("Antenatal Care Register : Page 1", ancMotherInfoPanel);

            ancCardDetailsPanel.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("ART Eligibility"));
            jPanel3.setLayout(new java.awt.GridBagLayout());

            jLabel20.setText("WHO Stage");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel3.add(jLabel20, gridBagConstraints);

            jTextField8.setMinimumSize(new java.awt.Dimension(50, 20));
            jTextField8.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jTextField8, gridBagConstraints);

            jLabel21.setText("CD4 Count");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel3.add(jLabel21, gridBagConstraints);

            jTextField9.setMinimumSize(new java.awt.Dimension(50, 20));
            jTextField9.setPreferredSize(new java.awt.Dimension(50, 20));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jTextField9, gridBagConstraints);

            jLabel22.setText("Start on ART in ANC");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel3.add(jLabel22, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(datePicker1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel3, gridBagConstraints);

            jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Prophylaxis"));
            jPanel4.setLayout(new java.awt.GridBagLayout());

            jLabel23.setText("CTX");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel23, gridBagConstraints);

            jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jComboBox6, gridBagConstraints);

            jLabel24.setText("sdNVP");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel24, gridBagConstraints);

            jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jComboBox7, gridBagConstraints);

            jLabel25.setText("AZT");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel25, gridBagConstraints);

            jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jComboBox8, gridBagConstraints);

            jLabel26.setText("3 ARVs");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel26, gridBagConstraints);

            jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jComboBox9, gridBagConstraints);

            jLabel27.setText("HAART");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel27, gridBagConstraints);

            jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jComboBox10, gridBagConstraints);

            jLabel28.setText("NVP for Baby");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel4.add(jLabel28, gridBagConstraints);

            jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(jComboBox11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel4, gridBagConstraints);

            jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Screen For?"));
            jPanel5.setLayout(new java.awt.GridBagLayout());

            jLabel29.setText("TB (Status)");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel5.add(jLabel29, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jTextField10, gridBagConstraints);

            jLabel30.setText("Cervical Cancer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel5.add(jLabel30, gridBagConstraints);

            jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "PAP", "VIA" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jComboBox12, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel5, gridBagConstraints);

            jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Other Conditions"));
            jPanel6.setLayout(new java.awt.GridBagLayout());

            jLabel31.setText("Other Conditions");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel6.add(jLabel31, gridBagConstraints);

            jComboBox13.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jComboBox13, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel6.add(jTextField12, gridBagConstraints);

            jLabel32.setText("Specify Other Conditions");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel6.add(jLabel32, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel6, gridBagConstraints);

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Treatment"));
            jPanel7.setLayout(new java.awt.GridBagLayout());

            jLabel33.setText("Received ITN");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel33, gridBagConstraints);

            jLabel34.setText("Folic Acid");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel34, gridBagConstraints);

            jLabel35.setText("Iron");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel35, gridBagConstraints);

            jLabel37.setText("TT Dose");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel37, gridBagConstraints);

            jLabel38.setText("IPT 1-3 ");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel38, gridBagConstraints);

            jLabel39.setText("Deworming");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel39, gridBagConstraints);

            jComboBox14.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox14, gridBagConstraints);

            jComboBox15.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1", "2", "3", "NA" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox15, gridBagConstraints);

            jComboBox16.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1", "2", "3", "4", "5" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox16, gridBagConstraints);

            jComboBox17.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox17, gridBagConstraints);

            jComboBox18.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox18, gridBagConstraints);

            jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox19, gridBagConstraints);

            jLabel40.setText("Additional Treatment");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel7.add(jLabel40, gridBagConstraints);

            jComboBox20.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnacy", "STIs/RTI", "Others", " " }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel7.add(jComboBox20, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel7, gridBagConstraints);

            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Partner HIV C&T"));
            jPanel8.setLayout(new java.awt.GridBagLayout());

            jLabel41.setText("Couple Counselled");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel8.add(jLabel41, gridBagConstraints);

            jComboBox21.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "N", "Y" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel8.add(jComboBox21, gridBagConstraints);

            jLabel42.setText("Partners Results");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel8.add(jLabel42, gridBagConstraints);

            jComboBox22.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "P", "N", "U", "KP" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel8.add(jComboBox22, gridBagConstraints);

            jLabel43.setText("Reffered for");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            jPanel8.add(jLabel43, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jPanel8.add(jTextField13, gridBagConstraints);

            jTextPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Remarks"));
            jScrollPane1.setViewportView(jTextPane1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 2.0;
            jPanel8.add(jScrollPane1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            ancCardDetailsPanel.add(jPanel8, gridBagConstraints);

            jTabbedPane1.addTab("Antenatal Care Register :  Page 2", ancCardDetailsPanel);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            buttonPanel.setPreferredSize(new java.awt.Dimension(224, 20));
            buttonPanel.setLayout(new java.awt.GridBagLayout());

            saveMotherInfoBtn.setText("Save ANTE-NATAL data");
            saveMotherInfoBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveMotherInfoBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(saveMotherInfoBtn, gridBagConstraints);

            regEditdataBtn.setText("Edit file data");
            regEditdataBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regEditdataBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regEditdataBtn, gridBagConstraints);

            regClearFormBtn.setText("Clear entries");
            regClearFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regClearFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regClearFormBtn, gridBagConstraints);

            regCloseFormBtn.setText("Close form");
            regCloseFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    regCloseFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(regCloseFormBtn, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 200.0;
            gridBagConstraints.weighty = 1.0;
            buttonPanel.add(spacerLbl, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(buttonPanel, gridBagConstraints);

            setBounds(0, 0, 759, 476);
        }// </editor-fold>//GEN-END:initComponents

    private void gravidaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravidaTxtActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_gravidaTxtActionPerformed

    private void ancNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancNumberTxtActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_ancNumberTxtActionPerformed

    private void regEditdataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEditdataBtnActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_regEditdataBtnActionPerformed

    private void saveMotherInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMotherInfoBtnActionPerformed
        /* if (rhClientCardNoTxt.getText().isEmpty()) {
        emptyNo();
        } else {*/
        try {
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmtMotherInfo = connectDB.prepareStatement("INSERT INTO rh.mother_details("
                    + "anc, middle_name, last_name, educationalcmbx, address, "
                    + "religion, telephone, lmp, first_name, occupation, age, next_of_kin, "
                    + "gravida, parity, edd, first_visit, "
                    + "no_visits, village, marital_status, gestation, weight, bp, counselled, "
                    + "hb, vdrl, hiv_initial, hiv_retest, who_stage, cd_four, art_start,"
                    + "ctx, sdnvp, azt, arvs, haart, nvp, tb_status, cervical_cancer, "
                    + "other_con, deworm, ipt, tt_dose, iron, folic, r_itn, add_treatment,"
                    + "couple_canc, patner_tested, reffered, remarks,"
                    + "visit_date, blood_group, rhesus, anc_exercise, breast_exam)"
                    + "VALUES (?, ?, ?, ?, ?,"
                    + "?, ?, ?, ?, ?, ?, "
                    + "?, ?, ?, ?, ?, ?, "
                    + "?, ?, ?, ?, ?, ?, ?, "
                    + "?, ?, ?, ?, ?, ?, ?,"
                    + "?, ?, ?, ?, ?, ?, ?,"
                    + "?, ?, ?, ?, ?, ?, ?, ?,"
                    + "?, ?, ?, ?, ?, ?, ?, ?, ?)");
            pstmtMotherInfo.setString(1, ancNumberTxt.getText());
            pstmtMotherInfo.setString(2, middleNameTxt.getText());
            pstmtMotherInfo.setString(3, this.firstNameTxt.getText());
            pstmtMotherInfo.setObject(4, educationLevelCmbx.getSelectedItem());
            pstmtMotherInfo.setString(5, addressTxt.getText());
            pstmtMotherInfo.setObject(6, religionCmbx.getSelectedItem());
            pstmtMotherInfo.setString(7, telephoneTxt.getText());
            pstmtMotherInfo.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(lmpDatePicker.getDate()));
            pstmtMotherInfo.setString(9, lastnameTxt.getText());
            pstmtMotherInfo.setObject(10, occupationCmbx.getSelectedItem());
            pstmtMotherInfo.setDouble(11, java.lang.Double.valueOf(ageTxt.getText()));
            pstmtMotherInfo.setString(12, nextTxt.getText());
            pstmtMotherInfo.setString(13, gravidaTxt.getText());
            //   pstmtMotherInfo.setInt(15, java.lang.Integer.parseInt(gravidaTxt.getText()));
            pstmtMotherInfo.setString(14, parityTxt.getText());
            // pstmtMotherInfo.setDouble(17, java.lang.Double.parseDouble(heightTxt.getText()));
            pstmtMotherInfo.setDate(15, com.afrisoftech.lib.SQLDateFormat.getSQLDate(edddatePicker.getDate()));
            if (createNewCardRdbtn.isSelected()) {
                pstmtMotherInfo.setString(16, "Y");
            } else {
                pstmtMotherInfo.setString(16, "");
            }
            pstmtMotherInfo.setInt(17, java.lang.Integer.valueOf(numberofVisitTxt.getText()));
            pstmtMotherInfo.setString(18, residenceTxt.getText());
            pstmtMotherInfo.setObject(19, educationLevelCmbx1.getSelectedItem());
            pstmtMotherInfo.setInt(20, java.lang.Integer.valueOf(gestationPeriodTxt.getText()));
            pstmtMotherInfo.setDouble(21, java.lang.Double.valueOf(weightTxt.getText()));
            pstmtMotherInfo.setString(22, heightTxt.getText());
            pstmtMotherInfo.setObject(23, counsellingCmbx.getSelectedItem());
            pstmtMotherInfo.setString(24, hbTxt.getText());
            pstmtMotherInfo.setObject(25, serologyCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(26, hivInitialCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(27, hivResultCmbx.getSelectedItem());
            pstmtMotherInfo.setString(28, jTextField8.getText());
            pstmtMotherInfo.setString(29, jTextField9.getText());
            pstmtMotherInfo.setDate(30, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
            pstmtMotherInfo.setObject(31, jComboBox6.getSelectedItem());
            pstmtMotherInfo.setObject(32, jComboBox7.getSelectedItem());
            pstmtMotherInfo.setObject(33, jComboBox8.getSelectedItem());
            pstmtMotherInfo.setObject(34, jComboBox9.getSelectedItem());
            pstmtMotherInfo.setObject(35, jComboBox10.getSelectedItem());
            pstmtMotherInfo.setObject(36, jComboBox11.getSelectedItem());
            pstmtMotherInfo.setString(37, jTextField10.getText());
            pstmtMotherInfo.setObject(38, jComboBox12.getSelectedItem());
            pstmtMotherInfo.setObject(39, jComboBox13.getSelectedItem());
            pstmtMotherInfo.setObject(40, jComboBox14.getSelectedItem());
            pstmtMotherInfo.setObject(41, jComboBox15.getSelectedItem());
            pstmtMotherInfo.setObject(42, jComboBox16.getSelectedItem());
            pstmtMotherInfo.setObject(43, jComboBox17.getSelectedItem());
            pstmtMotherInfo.setObject(44, jComboBox18.getSelectedItem());
            pstmtMotherInfo.setObject(45, jComboBox19.getSelectedItem());
            pstmtMotherInfo.setObject(46, jComboBox20.getSelectedItem());
            pstmtMotherInfo.setObject(47, jComboBox21.getSelectedItem());
            pstmtMotherInfo.setObject(48, jComboBox22.getSelectedItem());
            pstmtMotherInfo.setString(49, jTextField13.getText());
            pstmtMotherInfo.setString(50, jTextPane1.getText());
            pstmtMotherInfo.setDate(51, com.afrisoftech.lib.SQLDateFormat.getSQLDate(ancVisitdatePicker.getDate()));
            pstmtMotherInfo.setString(52, bloodGroupTxt.getText());
            pstmtMotherInfo.setString(53, rhesusFactorTxt.getText());
            pstmtMotherInfo.setObject(54, ancExerciseCmbx.getSelectedItem());
            pstmtMotherInfo.setObject(55, breastExamCmbx.getSelectedItem());
            pstmtMotherInfo.execute();
            results();

            this.connectDB.commit();
            connectDB.setAutoCommit(true);
        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getLocalizedMessage());
        }
        //}
        // TODO add your handling code here:
}//GEN-LAST:event_saveMotherInfoBtnActionPerformed
    public void results() {
        javax.swing.JOptionPane.showMessageDialog(this, "Data posted to database successfully. Click OK button or press ENTER key to continue");
        //java.awt.Dimension origSize = this.getSize();
        //this.removeAll();
        //this.initComponents();
        //  this.setSize(origSize);
    }
    private void ageTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_ageTxtCaretUpdate
        if (ageTxt.getText().equalsIgnoreCase("")) {
        } else {
            float ages = java.lang.Float.valueOf(ageTxt.getText());
            int ageYrs = java.lang.Math.round(ages);
            try {
                java.sql.Statement stmnza = connectDB.createStatement();
                java.sql.ResultSet rsnza = stmnza.executeQuery("select (CURRENT_DATE::DATE - ('" + ageYrs + "'*365))");
                while (rsnza.next()) {
                    java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                    java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                    sdf.applyPattern("yyyy-MM-dd");
                    try {
                        this.datePickerYOB.setDate(sdf.parse(rsnza.getString(1)));

                    } catch (java.text.ParseException pe) {
                        javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                    }
                }
            } catch (java.sql.SQLException sq) {


                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
        }
        // TODO add your handling code here:
}//GEN-LAST:event_ageTxtCaretUpdate

    private void createNewCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewCardRdbtnActionPerformed
        counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN"}));
        hivRetestCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Y", "N"}));
        serologyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Non Reactive", "Reactive"}));
        hivInitialCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "KP", "U"}));
        hivResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "NA"}));
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
        educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Single", "Married", "Divorced", "Window", "Other"}));
        religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY religion_name"));
        occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "PAP", "VIA"}));
        jComboBox13.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify"}));
        jComboBox14.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox15.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "NA"}));
        jComboBox16.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "4", "5"}));
        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox18.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox20.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnacy", "STIs/RTI", "Others", " "}));
        jComboBox21.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox22.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "U", "KP"}));
        // - //jComboBox23.removeAllItems();
        jTextField9.setText("");
        jTextField8.setText("");
        weightTxt.setText("0");
        gestationPeriodTxt.setText("");
        rhesusFactorTxt.setText("");
        jTextField12.setText("");
        residenceTxt.setText("");
        gestationPeriodTxt.setText("");
        ancNumberTxt.setText("");
        firstNameTxt.setText("");
        hbTxt.setText("");
        searchANCFileTxt.setText("");
        bloodGroupTxt.setText("");
        middleNameTxt.setText("");
        lastnameTxt.setText("");
        addressTxt.setText("");
        telephoneTxt.setText("");
        nextTxt.setText("");
        parityTxt.setText("");
        gravidaTxt.setText("");
        heightTxt.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField12.setText("");
        jTextField13.setText("");
        ageTxt.setText("0");
        bloodGroupTxt.setEditable(true);
        middleNameTxt.setEditable(true);
        lastnameTxt.setEditable(true);
        addressTxt.setEditable(true);
        telephoneTxt.setEditable(true);
        nextTxt.setEditable(true);
        parityTxt.setEditable(true);
        gravidaTxt.setEditable(true);
        ageTxt.setEditable(true);
        rhesusFactorTxt.setEditable(true);
        residenceTxt.setEditable(true);
        ancNumberTxt.setEditable(true);
        ancCardSearchField.setEnabled(true);
        firstNameTxt.setEditable(true);
        hbTxt.setEditable(true);
        String useonenumber = null;
        try {
            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select ip_numbering,use_one_number from pb_patient_names");
            while (rsetx.next()) {
                //  autonumber = rsetx.getBoolean(1);
                useonenumber = rsetx.getString(2);
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rss1 = pss1.executeQuery("select file_no from hp_maternity_register ORDER BY OID desc LIMIT 1");
                while (rss1.next()) {
                    // patientsNo = rss1.getObject(1).toString();
                    //   jTextField24.setText(rss1.getObject(1).toString());
                }
            }
            rsetx.close();
            stmtx.close();
            // if (autonumber) {
            jTextField12.setEditable(false);

            // } else {
            jTextField12.setEditable(true);
            // }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("selection not successful");
        }
        // Add your handling code here:
}//GEN-LAST:event_createNewCardRdbtnActionPerformed

    private void revisitRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revisitRdbtnActionPerformed
        counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN"}));
        hivRetestCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Y", "N"}));
        serologyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Non Reactive", "Reactive"}));
        hivInitialCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "KP", "U"}));
        hivResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "NA"}));
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
        educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Single", "Married", "Divorced", "Window", "Other"}));
        religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY religion_name"));
        occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "PAP", "VIA"}));
        jComboBox13.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify"}));
        jComboBox14.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox15.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "NA"}));
        jComboBox16.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "4", "5"}));
        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox18.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox20.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnacy", "STIs/RTI", "Others", " "}));
        jComboBox21.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox22.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "U", "KP"}));

        jTextField9.setText("");

        jTextField8.setText("");

        weightTxt.setText("0");

        gestationPeriodTxt.setText("");

        rhesusFactorTxt.setText("");
        //jTextField6.setEditable(false);

        jTextField12.setText("");

        residenceTxt.setText("");
        gestationPeriodTxt.setText("");

        ancNumberTxt.setText("");

        firstNameTxt.setText("");

        hbTxt.setText("");


        searchANCFileTxt.setText("");
        bloodGroupTxt.setText("");
        middleNameTxt.setText("");
        lastnameTxt.setText("");
        addressTxt.setText("");
        telephoneTxt.setText("");
        nextTxt.setText("");
        parityTxt.setText("");
        gravidaTxt.setText("");
        heightTxt.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField12.setText("");
        jTextField13.setText("");
        ageTxt.setText("0");
        bloodGroupTxt.setEditable(false);
        middleNameTxt.setEditable(false);
        lastnameTxt.setEditable(false);
        addressTxt.setEditable(false);
        telephoneTxt.setEditable(false);
        nextTxt.setEditable(false);
        parityTxt.setEditable(false);
        gravidaTxt.setEditable(false);
        // heightTxt.setEditable(false);
        // jTextField9.setEditable(false);
        // jTextField8.setEditable(false);
        ageTxt.setEditable(false);
        //  jTextField4.setEditable(false);
        rhesusFactorTxt.setEditable(false);
        //  jTextField12.setEditable(false);
        residenceTxt.setEditable(false);
        ancNumberTxt.setEditable(false);
        ancCardSearchField.setEnabled(true);
        firstNameTxt.setEditable(false);
        hbTxt.setEditable(false);
        // Add your handling code here:
}//GEN-LAST:event_revisitRdbtnActionPerformed

    private void createExistingCardRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createExistingCardRdbtnActionPerformed
        createNewCardRdbtnActionPerformed(evt);
        ancNumberTxt.setEditable(true);
        //        jTextField18.setText("0");

        // TODO add your handling code here:
}//GEN-LAST:event_createExistingCardRdbtnActionPerformed

    private void ancCardSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancCardSearchFieldActionPerformed

        searchButtonClicked();

        // Add your handling code here:
}//GEN-LAST:event_ancCardSearchFieldActionPerformed

    private void searchANCFileTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchANCFileTxtCaretUpdate
        //        if(jCheckBox7.isSelected()){
        if (searchANCFileTxt.getCaretPosition() < 4) {

            System.out.println("Nothing");
        } else {
            ancSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT "
                    + "anc,first_name,middle_name,last_name,age FROM"
                    + " rh.mother_details WHERE (anc ILIKE '%" + searchANCFileTxt.getText() + "%' "
                    + "OR first_name||' '||middle_name||' '||last_name ILIKE '%" + searchANCFileTxt.getText() + "%') ORDER BY 1"));
            ancSearchTable.setShowHorizontalLines(false);
            ancSearchScrollPane.setViewportView(ancSearchTable);

        }

        /*        }else  if(jCheckBox8.isSelected()){
        if(jTextField11.getCaretPosition() < 3){
        
        System.out.println("Nothing");
        }else{
        
        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, upper(second_name) as other_names, upper(first_name) as surname, year_of_birth, residence from hp_patient_register where patient_no ILIKE '%"+jTextField11.getText()+"%' order by patient_no"));
        
        /*   searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField11.getText()+"%' order by patient_no");
        jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
        
        new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
        new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
        }));
         *//*
        jSearchTable.setShowHorizontalLines(false);
        jSearchScrollPane.setViewportView(jSearchTable);
        
        
        }
        
        }*/// Add your handling code here:
}//GEN-LAST:event_searchANCFileTxtCaretUpdate

    private void searchANCFileTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchANCFileTxtFocusLost
        //      jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_searchANCFileTxtFocusLost

    private void ancSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ancSearchTableMouseClicked

        this.ancNumberTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 0).toString());
        this.lastnameTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 1).toString());
        middleNameTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 2).toString());
        firstNameTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 3).toString());
        ageTxt.setText(ancSearchTable.getValueAt(ancSearchTable.getSelectedRow(), 4).toString());

        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT file_no,surname,other_names,pat_age,nok,relationship,residence,date_admitted FROM hp_maternity_register WHERE file_no ='" + ancNumberTxt.getText() + "' ORDER By date_admitted DESC LIMIT 1");
            while (rset1.next()) {

                jTextField12.setText(rset1.getObject(1).toString());
                gestationPeriodTxt.setText(rset1.getObject(2).toString());
                //   jTextField25.setText(rset1.getObject(3).toString());
                ageTxt.setText(rset1.getObject(4).toString());
                jTextField8.setText(rset1.getObject(5).toString());
                // this.nokRelationShipCmbx.setSelectedItem(rset1.getObject(6).toString());
                residenceTxt.setText(rset1.getObject(7).toString());
            }

            java.sql.Statement stmt12 = connectDB.createStatement();
            java.sql.ResultSet rset12 = stmt12.executeQuery("SELECT address,pat_district,pat_location,chief_name,sub_chief FROM hp_admission WHERE patient_no ='" + ancNumberTxt.getText() + "'  ");
            while (rset12.next()) {

                /*  jTextField14.setText(rset12.getObject(1).toString());
                jTextField26.setText(rset12.getObject(2).toString());
                jTextField27.setText(rset12.getObject(3).toString());
                jTextField28.setText(rset12.getObject(4).toString());*/
                jTextField8.setText(rset12.getObject(5).toString());

                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                sdf.applyPattern("yyyy-MM-dd");
                /* try {
                datePicker2.setDate(sdf.parse(rset1.getString(4)));
                datePicker3.setDate(sdf.parse(rset1.getString(5)));
                
                } catch (java.text.ParseException pe) {
                javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                }*/
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqe.getMessage());
            //  System.out.println("Insert not successful");
        }
        ancSearchDialog.dispose();

        // Add your handling code here:
}//GEN-LAST:event_ancSearchTableMouseClicked

    private void disposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeActionPerformed
        ancSearchDialog.dispose();
        // Add your handling code here:
}//GEN-LAST:event_disposeActionPerformed

    private void ancSearchDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ancSearchDialogComponentHidden
        //        jSearchDialog.dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_ancSearchDialogComponentHidden

    private void regClearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regClearFormBtnActionPerformed
        counsellingCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Birth Plan", "Danger Signs", "FP", "HIV", "Supplemental Feeding", "Breast Care", "Infant Feeding", "ITN"}));
        hivRetestCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Y", "N"}));
        serologyCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Non Reactive", "Reactive"}));
        hivInitialCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "KP", "U"}));
        hivResultCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "NA"}));
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        educationLevelCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT edu_name FROM pb_education ORDER BY edu_name"));
        educationLevelCmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Single", "Married", "Divorced", "Window", "Other"}));
        religionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT religion_name FROM pb_religion ORDER BY religion_name"));
        occupationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT occupations FROM pb_occupation ORDER BY occupations"));
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "PAP", "VIA"}));
        jComboBox13.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnancy", "STIs/RTI", "Others Specify"}));
        jComboBox14.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox15.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "NA"}));
        jComboBox16.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1", "2", "3", "4", "5"}));
        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox18.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox20.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "Hypertension", "Diabetes", "Epilepsy", "Malaria in Pregnacy", "STIs/RTI", "Others", " "}));
        jComboBox21.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "N", "Y"}));
        jComboBox22.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "P", "N", "U", "KP"}));
        // - //jComboBox23.removeAllItems();
        jTextField9.setText("");


        jTextField8.setText("");
        weightTxt.setText("0");
        gestationPeriodTxt.setText("");
        rhesusFactorTxt.setText("");
        jTextField12.setText("");
        residenceTxt.setText("");
        gestationPeriodTxt.setText("");
        ancNumberTxt.setText("");
        firstNameTxt.setText("");
        hbTxt.setText("");
        searchANCFileTxt.setText("");
        bloodGroupTxt.setText("");
        middleNameTxt.setText("");
        lastnameTxt.setText("");
        addressTxt.setText("");
        telephoneTxt.setText("");
        nextTxt.setText("");
        parityTxt.setText("");
        gravidaTxt.setText("");
        heightTxt.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField12.setText("");
        jTextField13.setText("");
        ageTxt.setText("0");
        bloodGroupTxt.setEditable(true);
        middleNameTxt.setEditable(true);
        lastnameTxt.setEditable(true);
        addressTxt.setEditable(true);
        telephoneTxt.setEditable(true);
        nextTxt.setEditable(true);
        parityTxt.setEditable(true);
        gravidaTxt.setEditable(true);
        ageTxt.setEditable(true);
        rhesusFactorTxt.setEditable(true);
        residenceTxt.setEditable(true);
        ancNumberTxt.setEditable(true);
        ancCardSearchField.setEnabled(true);
        firstNameTxt.setEditable(true);
        hbTxt.setEditable(true);        // TODO add your handling code here:
    }//GEN-LAST:event_regClearFormBtnActionPerformed

    private void regCloseFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regCloseFormBtnActionPerformed
        this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_regCloseFormBtnActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.ancNumberTxt.getLocationOnScreen();

        ancSearchDialog.setSize(700, 200);

        ancSearchDialog.setLocation(point);

        ancSearchDialog.setVisible(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JPanel ancCardDetailsPanel;
    private javax.swing.JButton ancCardSearchField;
    private javax.swing.JComboBox ancExerciseCmbx;
    private javax.swing.JPanel ancMotherInfoPanel;
    private javax.swing.JLabel ancNumberLbl;
    private javax.swing.JTextField ancNumberTxt;
    private javax.swing.JDialog ancSearchDialog;
    private javax.swing.JPanel ancSearchPanel;
    private javax.swing.JScrollPane ancSearchScrollPane;
    private javax.swing.JTable ancSearchTable;
    private javax.swing.JLabel ancVisitDateLbl;
    private com.afrisoftech.lib.DatePicker ancVisitdatePicker;
    private javax.swing.JLabel bloodGroupLbl;
    private javax.swing.JTextField bloodGroupTxt;
    private javax.swing.JLabel bloodPressureLbl;
    private javax.swing.JComboBox breastExamCmbx;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel cardOpeningOptionsPanel;
    private javax.swing.JComboBox counsellingCmbx;
    private javax.swing.JLabel counsellingLbl;
    public javax.swing.JRadioButton createExistingCardRdbtn;
    private javax.swing.JRadioButton createNewCardRdbtn;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePickerYOB;
    private javax.swing.JButton dispose;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JPanel dobPanel;
    private javax.swing.JLabel eddLbl;
    private com.afrisoftech.lib.DatePicker edddatePicker;
    private javax.swing.JComboBox educationLevelCmbx;
    private javax.swing.JComboBox educationLevelCmbx1;
    private javax.swing.JLabel educationLevelLbl;
    private javax.swing.JLabel educationLevelLbl1;
    private javax.swing.JLabel expectedNoofPregLbl;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JTextField gestationPeriodTxt;
    private javax.swing.JLabel gestationperiodLbl;
    private javax.swing.JLabel gravidaLbl;
    private javax.swing.JTextField gravidaTxt;
    private javax.swing.JLabel hbLbl;
    private javax.swing.JTextField hbTxt;
    private javax.swing.JTextField heightTxt;
    private javax.swing.JComboBox hivInitialCmbx;
    private javax.swing.JLabel hivInitialLbl;
    private javax.swing.JComboBox hivResultCmbx;
    private javax.swing.JLabel hivResultLbl;
    private javax.swing.JComboBox hivRetestCmbx;
    private javax.swing.JLabel hivRetestLbl;
    private javax.swing.JPanel hivStatusPanel;
    private javax.swing.JLabel howclientKnewcentreLbl;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox13;
    private javax.swing.JComboBox jComboBox14;
    private javax.swing.JComboBox jComboBox15;
    private javax.swing.JComboBox jComboBox16;
    private javax.swing.JComboBox jComboBox17;
    private javax.swing.JComboBox jComboBox18;
    private javax.swing.JComboBox jComboBox19;
    private javax.swing.JComboBox jComboBox20;
    private javax.swing.JComboBox jComboBox21;
    private javax.swing.JComboBox jComboBox22;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lastNameLbl;
    private javax.swing.JTextField lastnameTxt;
    private com.afrisoftech.lib.DatePicker lmpDatePicker;
    private javax.swing.JLabel lmpLbl;
    private javax.swing.JLabel middleNameLbl;
    private javax.swing.JTextField middleNameTxt;
    private javax.swing.JLabel motherLbl;
    private javax.swing.JTextField nextTxt;
    private javax.swing.JTextField numberofVisitTxt;
    private javax.swing.JLabel numberofVisitlbl;
    private javax.swing.JComboBox occupationCmbx;
    private javax.swing.JLabel occupationLbl;
    private javax.swing.JLabel parityLbl;
    private javax.swing.JTextField parityTxt;
    private javax.swing.JLabel reasonForVisitLbl;
    private javax.swing.JButton regClearFormBtn;
    private javax.swing.JButton regCloseFormBtn;
    private javax.swing.JButton regEditdataBtn;
    private javax.swing.JComboBox religionCmbx;
    private javax.swing.JLabel religionLbl;
    private javax.swing.JTextField residenceTxt;
    private javax.swing.JRadioButton revisitRdbtn;
    private javax.swing.JLabel rhesusFactorLbl;
    private javax.swing.JTextField rhesusFactorTxt;
    private javax.swing.JButton saveMotherInfoBtn;
    private javax.swing.JTextField searchANCFileTxt;
    private javax.swing.JComboBox serologyCmbx;
    private javax.swing.JLabel serologyLbl;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JTextField telephoneTxt;
    private javax.swing.JLabel villageTxt;
    private javax.swing.JLabel weightLbl;
    private javax.swing.JTextField weightTxt;
    // End of variables declaration//GEN-END:variables
}
