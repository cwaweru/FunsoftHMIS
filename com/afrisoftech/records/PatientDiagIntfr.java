/*
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.records;

import java.beans.PropertyChangeEvent;

/**
 *
 * @author root
 */
public class PatientDiagIntfr extends javax.swing.JInternalFrame {

    private javax.swing.JComboBox cmbox;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public PatientDiagIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new com.afrisoftech.dbadmin.JTable();
        jButton921 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel31 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        jCheckBox5 = new javax.swing.JCheckBox();
        codingTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        codingTable = new com.afrisoftech.dbadmin.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel13 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jLabel14 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        departmentcmbx = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        unitNumberTxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        indexingPanel = new javax.swing.JPanel();
        indexingScrollPane = new javax.swing.JScrollPane();
        indexingTable = new com.afrisoftech.dbadmin.JXTable();
        startDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        notIndexedPanel = new javax.swing.JPanel();
        indexingScrollPane1 = new javax.swing.JScrollPane();
        nonindexedTable = new com.afrisoftech.dbadmin.JXTable();
        startDatePicker1 = new com.afrisoftech.lib.DatePicker();
        endDatePicker1 = new com.afrisoftech.lib.DatePicker();
        jButton2 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel2.add(jTextField1112, gridBagConstraints);

        jSearchTable2.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton92.setText("Dispose");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1121CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel31.add(jTextField1121, gridBagConstraints);

        jSearchTable31.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable31MouseClicked(evt);
            }
        });
        jSearchScrollPane31.setViewportView(jSearchTable31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

        jButton921.setText("Close");
        jButton921.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton921ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel31.add(jButton921, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Health Information/Medical Records - Coding + Indexing form");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('O');
        jButton1.setText("Save Coding Information");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear form");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close form");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton5, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jButton6, gridBagConstraints);

        jPanel31.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Out Patient");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setSelected(true);
        jCheckBox2.setText("In Patients");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox2, gridBagConstraints);

        buttonGroup1.add(jCheckBox3);
        jCheckBox3.setText("Other Patients");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox3, gridBagConstraints);

        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setText("Search By name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox4, gridBagConstraints);

        buttonGroup2.add(jCheckBox31);
        jCheckBox31.setSelected(true);
        jCheckBox31.setText("Search No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jCheckBox31, gridBagConstraints);

        jLabel6.setText(" Diagnosis Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 3);
        jPanel31.add(datePicker11, gridBagConstraints);

        jCheckBox5.setText("Click For Diagnosis history");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 3);
        jPanel31.add(jCheckBox5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel31, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter diagnosis here"));

        codingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                " Disease Code", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        javax.swing.table.TableColumn column3 = null;
        for (int i = 0; i < 2; i++) {
            column3 = codingTable.getColumnModel().getColumn(i);
            if (i == 1) {

                column3.setPreferredWidth(600); //sport column is bigger
            } else {

                column3.setPreferredWidth(50);
            }
        }
        codingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codingTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(codingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient condition"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jPanel5, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Clinical Analysis/notes"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setViewportView(jTextArea2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 2.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Doctor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(datePicker1, gridBagConstraints);

        jLabel5.setText("Review Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField36, gridBagConstraints);

        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel6.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        jLabel1.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField1, gridBagConstraints);

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel42.setLayout(new java.awt.GridBagLayout());

        jTextField92.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField92, gridBagConstraints);

        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel42.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jPanel42, gridBagConstraints);

        buttonGroup3.add(jRadioButton1);
        jRadioButton1.setText("Search By Code");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel2.add(jRadioButton1, gridBagConstraints);

        buttonGroup3.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Search By Name");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        jPanel2.add(jRadioButton2, gridBagConstraints);

        jLabel4.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel8.setText("Gender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel10.setText("Ward/Clinic");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        jLabel11.setText("Inpatient Days");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel11, gridBagConstraints);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Discharge", "Died", " " }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jComboBox4, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(jTextField2, gridBagConstraints);

        jTextField3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(jTextField3, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jTextField4, gridBagConstraints);

        jLabel12.setText("Date Admitted");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel12, gridBagConstraints);

        this.datePicker2.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                calculateIPdays();
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(datePicker2, gridBagConstraints);

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("Discharge Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel13, gridBagConstraints);

        this.datePicker3.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                calculateIPdays();
            }
        });
        datePicker3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                datePicker3MouseMoved(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(datePicker3, gridBagConstraints);

        jLabel14.setText("Marital Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel14, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(jTextField5, gridBagConstraints);

        jLabel3.setText("Visit Id");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField7.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(jTextField7, gridBagConstraints);

        jLabel15.setText("Bed No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel15, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jTextField8, gridBagConstraints);

        jLabel16.setText("Department Keeping File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel16, gridBagConstraints);

        departmentcmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT 'Health Information' as depart_name ORDER BY 1"));
        //departmentcmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT depart_name FROM pb_main_department ORDER BY 1"));
        departmentcmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentcmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(departmentcmbx, gridBagConstraints);

        jLabel21.setText("Occupation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel21, gridBagConstraints);

        jComboBox6.setEditable(true);
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Housewife", "Artisan", "Trader/Businessman", "Professional/Accountant/Lawyer/Doctor", "Government Employee", "Servant/Houseboy/Maid", "Casual Labourer", "Farmer", "Student", "Unemployed" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(jComboBox6, gridBagConstraints);

        jLabel17.setText("Unit Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel17, gridBagConstraints);

        unitNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(unitNumberTxt, gridBagConstraints);

        jLabel18.setText("Admission Outcome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel18, gridBagConstraints);

        jTextField9.setEditable(false);
        jTextField9.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        codingTabbedPane.addTab("Coding form", jPanel1);

        indexingPanel.setLayout(new java.awt.GridBagLayout());

        indexingTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date_recorded as coding_date, user_name, patient_no, main_service as code, disease as code_description, doctor_surgeon, scrub_nurse as classification, ward_name as unit_name, pat_category as patient_category, pat_age as patient_age, gender from hp_patient_diagnosis WHERE date_recorded = now()::date order by 1"));
        indexingScrollPane.setViewportView(indexingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        indexingPanel.add(indexingScrollPane, gridBagConstraints);

        startDatePicker.setBorder(javax.swing.BorderFactory.createTitledBorder("Start Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        indexingPanel.add(startDatePicker, gridBagConstraints);

        endDatePicker.setBorder(javax.swing.BorderFactory.createTitledBorder("End Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        indexingPanel.add(endDatePicker, gridBagConstraints);

        codingTabbedPane.addTab("Indexing form", indexingPanel);

        notIndexedPanel.setLayout(new java.awt.GridBagLayout());

        nonindexedTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date_recorded as coding_date, user_name, patient_no, main_service as code, disease as code_description, doctor_surgeon, scrub_nurse as classification, ward_name as unit_name, pat_category as patient_category, pat_age as patient_age, gender from hp_patient_diagnosis WHERE date_recorded = now()::date order by 1"));
        indexingScrollPane1.setViewportView(nonindexedTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        notIndexedPanel.add(indexingScrollPane1, gridBagConstraints);

        startDatePicker1.setBorder(javax.swing.BorderFactory.createTitledBorder("Start Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        notIndexedPanel.add(startDatePicker1, gridBagConstraints);

        endDatePicker1.setBorder(javax.swing.BorderFactory.createTitledBorder("End Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        notIndexedPanel.add(endDatePicker1, gridBagConstraints);

        codingTabbedPane.addTab("Non Indexed OUT Patients", notIndexedPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        getContentPane().add(codingTabbedPane, gridBagConstraints);

        jButton2.setText("View Indexing Records");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel19, gridBagConstraints);

        setBounds(0, 0, 950, 596);
    }// </editor-fold>//GEN-END:initComponents

    private void departmentcmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentcmbxActionPerformed
        jComboBox6.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT shelve_code, number_of_files  FROM rh.hp_records_archive WHERE department_name = '" + departmentcmbx.getSelectedItem() + "' AND number_of_files > stored_files ORDER BY shelve_code ASC LIMIT 1"));
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentcmbxActionPerformed

    private void jButton921ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton921ActionPerformed
        this.jSearchDialog31.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton921ActionPerformed

    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTextField92.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
        //  jTextField8.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable31MouseClicked

    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
        if (jTextField1121.getCaretPosition() < 3) {

            System.out.println("Nothing");
        } else {
            jSearchTable31.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%" + jTextField1121.getText() + "%' order by first_name"));

            /* try {
            
             searchRowSet31.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name");
             jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet31, new org.netbeans.lib.sql.models.TableModel.Column[] {
             new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
             new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
             new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
            
             }));
             */
            //                jSearchTable31.setShowHorizontalLines(false);
            jSearchScrollPane31.setViewportView(jSearchTable31);


        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButtonClickedw();

        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButtonClickedw() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();

        jSearchDialog31.setSize(400, 200);

        jSearchDialog31.setLocation(point);

        jSearchDialog31.setVisible(true);



    }
    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed

        com.afrisoftech.reports.DetailedDiagPerPatPdf policy = new com.afrisoftech.reports.DetailedDiagPerPatPdf();
        policy.DetailedDiagPerPatPdf(connectDB, jTextField36.getText(), jTextField1.getText());
        /*   javax.swing.JInternalFrame other = new PatientDiagHistIntfr(connectDB, pConnDB);
         this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
         try {
         other.setSelected(true);
         } catch(java.beans.PropertyVetoException pvt){}
         other.setVisible(true);
         */
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        jSearchDialog2.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked

        codingTable.setValueAt(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0), codingTable.getSelectedRow(), 1);
        codingTable.setValueAt(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1), codingTable.getSelectedRow(), 0);
        jSearchDialog2.dispose();
        jTextField1112.setText("");
        /* int CountNo = 1;

         jTable1.setValueAt(""+CountNo,jTable1.getSelectedRow(), 1);
         */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate


        if (jRadioButton2.isSelected()) {
            if (jTextField1112.getCaretPosition() > 2) {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT (upper(disease_name)) as name,code from hp_diseases where disease_name ILIKE '%" + jTextField1112.getText() + "%'  UNION ALL \n"
                        + "SELECT (upper(procedure_description)), procedure_code FROM hp_procedure_codes where procedure_description ILIKE '%" + jTextField1112.getText() + "%' ORDER BY 1"));

                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
            }
        } else {
            if (jTextField1112.getCaretPosition() > 2) {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT (upper(disease_name)) as name,code from hp_diseases where code ILIKE '" + jTextField1112.getText() + "%' UNION ALL \n"
                        + "SELECT (upper(procedure_description)), procedure_code FROM hp_procedure_codes where procedure_code ILIKE '%" + jTextField1112.getText() + "%' ORDER BY 2"));

                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        String CountNo = "1";
        codingTable.setValueAt(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0), codingTable.getSelectedRow(), 1);
        codingTable.setValueAt(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1), codingTable.getSelectedRow(), 0);
        jSearchDialog1.dispose();
        //  jTable1.setValueAt(CountNo,jTable1.getSelectedRow(), 1);
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT (upper(disease_name)) as name,code from hp_diseases where disease_name ILIKE '" + jTextField1111.getText() + "%' order by disease_name"));

        jSearchTable2.setShowHorizontalLines(false);
        jSearchScrollPane2.setViewportView(jSearchTable2);


        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void cmbox1MouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog2.setSize(700, 200);
        jSearchDialog2.setLocation(point);
        jSearchDialog2.setVisible(true);
    }
    private void codingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codingTableMouseClicked

        if (codingTable.getSelectedColumn() == 0) {

            this.cmbox1MouseClicked();
        }

        // Add your handling code here:
    }//GEN-LAST:event_codingTableMouseClicked

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        jTextField1.setEditable(true);   // Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTextField1.setText("");
        jTextField36.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField5.setText("");
        jTextArea1.setText("");
        jTextArea2.setText("");
        for (int k = 0; k < codingTable.getRowCount(); k++) {
            for (int r = 0; r < codingTable.getColumnCount(); r++) {
                codingTable.getModel().setValueAt(null, k, r);
            }
        }
        //jTextField4.setText("");
        this.jButton1.setVisible(true);
        jLabel7.setText("");
        this.jSearchDialog.dispose();
        jTextField36.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        jTextField1.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jTextField7.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        jTextField8.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3).toString());
        unitNumberTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4).toString());
        try {
            if (jCheckBox2.isSelected()) {
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select pat_age,gender,ward,date_admitted,CASE WHEN (discharge_date != '') THEN discharge_date::date ELSE CURRENT_DATE END AS date_discharged,marital_status from hp_admission WHERE patient_no ='" + jTextField36.getText() + "' AND diagnosed = false AND visit_id = '" + jTextField7.getText() + "'");
                while (rset1.next()) {
                    jTextField2.setText(rset1.getObject(1).toString());
                    jTextField3.setText(rset1.getObject(2).toString());
                    jTextField4.setText(rset1.getObject(3).toString());
                    jTextField5.setText(rset1.getObject(6).toString());
                    java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                    java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                    sdf.applyPattern("yyyy-MM-dd");
                    try {
                        datePicker2.setDate(sdf.parse(rset1.getString(4)));
                        datePicker3.setDate(sdf.parse(rset1.getString(5)));

                    } catch (java.text.ParseException pe) {
                        javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                    }
                }
            } else {
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select age,gender,services,date,CURRENT_DATE AS date_discharged,marital_status FROM hp_patient_visit WHERE patient_no ='" + jTextField36.getText() + "' AND status = false");
                while (rset1.next()) {
                    jTextField2.setText(rset1.getObject(1).toString());
                    jTextField3.setText(rset1.getObject(2).toString());
                    jTextField4.setText(rset1.getObject(3).toString());
                    jTextField5.setText(rset1.getObject(6).toString());
                    java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                    java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

                    sdf.applyPattern("yyyy-MM-dd");
                    try {
                        datePicker2.setDate(sdf.parse(rset1.getString(4)));
                        datePicker3.setDate(sdf.parse(rset1.getString(5)));

                    } catch (java.text.ParseException pe) {
                        javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                    }
                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }


        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate

        if (this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()) {

            if (jTextField111.getCaretPosition() < 4) {
                System.out.println("Nothing");
            } else {
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT patient_no,  name, '' as bed, '' as visit_id, (SELECT patient_race FROM hp_patient_register WHERE hp_patient_register.patient_no = hp_patient_visit.patient_no  ORDER BY 1 DESC LIMIT 1) as unit_number  FROM hp_patient_visit WHERE patient_no ILIKE '" + jTextField111.getText() + "%' AND status = false ORDER BY patient_no"));

                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);

            }
        } else {
            if (this.jCheckBox1.isSelected() && this.jCheckBox4.isSelected()) {
                if (jTextField111.getCaretPosition() < 4) {
                    System.out.println("Nothing");
                } else {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT patient_no,  name,'' AS bed, '' AS visit_id, (SELECT patient_race FROM hp_patient_register WHERE hp_patient_register.patient_no = hp_patient_visit.patient_no  ORDER BY 1 DESC LIMIT 1) as unit_number FROM hp_patient_visit WHERE name ILIKE '%" + jTextField111.getText() + "%' AND status = false ORDER BY name"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);

                }
            }
        }
        // }else{
        if (this.jCheckBox2.isSelected() && this.jCheckBox31.isSelected()) {

            // if(this.jCheckBox21.isSelected()){
            //   if( jTextField113.getCaretPosition() > 3){

            if (jTextField111.getCaretPosition() < 4) {
                System.out.println("Nothing");
            } else {
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT patient_no, patient_name as name,visit_id,bed_no,sub_chief as unit_number FROM hp_admission WHERE (patient_no ILIKE '" + jTextField111.getText() + "%' or  sub_chief ILIKE '" + jTextField111.getText() + "%') AND diagnosed = false order by patient_no"));

                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);


            }
        } else {
            if (this.jCheckBox2.isSelected() && this.jCheckBox4.isSelected()) {
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT patient_no, patient_name as name,visit_id,bed_no,sub_chief as unit_number FROM hp_admission WHERE patient_name ILIKE '%" + jTextField111.getText() + "%' AND diagnosed = false ORDER BY patient_name"));

                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);


            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();               // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");
        if (jCheckBox1.isSelected()) {
            // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
            java.awt.Point point = this.jTextField36.getLocationOnScreen();

            jSearchDialog.setSize(700, 200);

            jSearchDialog.setLocation(point);
            jSearchDialog.setVisible(true);
        } else if (jCheckBox2.isSelected()) {
            jSearchDialog.dispose();
            java.awt.Point point = this.jTextField36.getLocationOnScreen();

            jSearchDialog.setSize(700, 200);

            jSearchDialog.setLocation(point);
            jSearchDialog.setVisible(true);
        }

    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
//jTable1.getModel().setValueAt(null,jTable1.getSelectedRow(),jTable1.getSelectedColumn());
        int rows2Delete = codingTable.getSelectedRowCount();

        int[] selectedRows = codingTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) codingTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) codingTable.getModel();

                defTableModel.removeRow(codingTable.getSelectedRow());
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        /*  int i = jTable1.getSelectedRow();

         if (selectedGuaran != null) {

         try {
         //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
         while (rs.next()){
         //jTextField4.setText(rs.getObject(1).toString());
         jTable1.setValueAt(rs.getObject(1),i,3);
         jTable1.setValueAt(rs.getObject(2),i,5);
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
         }
         }

         */
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField36.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField5.setText("");
        jTextArea1.setText("");
        jTextArea2.setText("");
        for (int k = 0; k < codingTable.getRowCount(); k++) {
            for (int r = 0; r < codingTable.getColumnCount(); r++) {
                codingTable.getModel().setValueAt(null, k, r);
            }
        }
        //jTextField4.setText("");
        this.jButton1.setVisible(true);
        jLabel7.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (codingTable.isEditing()) {
            codingTable.getCellEditor().stopCellEditing();
        }
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());

        String Categ = null;

        int incDays = 0;

        if (this.jCheckBox2.isSelected()) {
            Categ = "IP";
        } else {
            Categ = "OP";
        }
        java.sql.Savepoint registerSavePoint = null;
        /* if(jComboBox6.getSelectedItem() == null){
         javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without choosing the file location".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        
         }else{
         int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to save and have you selected the correct file location ?", "Caution before saving".toUpperCase(), javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);
        
         if (openShift == javax.swing.JOptionPane.YES_OPTION) {
         */
        try {
            connectDB.setAutoCommit(false);
            registerSavePoint = connectDB.setSavepoint("registration");
            if (jTextField1.getText().equalsIgnoreCase("") || jTextField1.getText().equalsIgnoreCase(" ")) {
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot save diagnosis without patient name", "Caution Message!", javax.swing.JOptionPane.WARNING_MESSAGE);

            } else {
                String fileLoc = null;
                float fileNo = 0;
                float fileCapacity = 0;
                float fileDiff = 0;
                float diagnosed = 0;

                java.sql.Statement stm121 = connectDB.createStatement();
                java.sql.Statement stm12X = connectDB.createStatement();
                java.sql.Statement stm12Y = connectDB.createStatement();
                String user = null;

                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select current_user");
                while (rsts1.next()) {
                    user = rsts1.getObject(1).toString();
                }
                /*java.sql.ResultSet rset2 = stm12X.executeQuery("SELECT sum(qty),file_location FROM file_location WHERE file_location IS NOT NULL GROUP BY file_location");
                 while (rset2.next()) {
                 fileLoc = rset2.getString(2);
                 fileNo = rset2.getFloat(1);
                 }

                 java.sql.ResultSet rset21 = stm12Y.executeQuery("SELECT shelve_code, number_of_files  FROM rh.hp_records_archive WHERE department_name = '" + jComboBox5.getSelectedItem() + "' AND number_of_files > stored_files ORDER BY shelve_code ASC LIMIT 1");
                 while (rset21.next()) {
                 // fileNo = rset21.getFloat(1);
                 fileLoc = rset21.getString(1);
                 // jTextField28.setText(rset21.getString(1));
                 }*/
                for (int i = 0; i < codingTable.getRowCount(); i++) {
                    if (codingTable.getModel().getValueAt(i, 1) != null) {
                        java.sql.ResultSet rset24 = stm121.executeQuery("SELECT COUNT(main_service) FROM hp_patient_diagnosis WHERE patient_no = '" + jTextField36.getText() + "' AND main_service = '" + codingTable.getValueAt(i, 0).toString() + "' AND date_recorded = '" + datePicker11.getDate() + "'");
                        while (rset24.next()) {
                            diagnosed = rset24.getFloat(1);
                        }
                        if (diagnosed > 0) {
                        } else {
                            String categ = "";
                            java.sql.Statement st = connectDB.createStatement();
                            java.sql.ResultSet rs = st.executeQuery("SELECT ('" + datePicker3.getDate() + "')::date-('" + datePicker2.getDate() + "')::date");
                            while (rs.next()) {
                                incDays = rs.getInt(1);
                            }

                            java.sql.Statement sts = connectDB.createStatement();
                            java.sql.ResultSet rss = sts.executeQuery("SELECT drug_time_limit FROM hp_diseases WHERE code = '" + codingTable.getValueAt(i, 0) + "'");
                            while (rss.next()) {
                                categ = rss.getString(1);
                            }
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO hp_patient_diagnosis("
                                    + "patient_no, patient_name, main_service, disease, quantity, doctor_surgeon,"
                                    + "time_commenced, diagnosis, review_date, date_recorded, admission_outcome, "
                                    + "anaesthetist, scrub_nurse, residence, ward_name, comments, pat_category, "
                                    + "pat_age, gender, marital_status, date_admitted, date_discharged, "
                                    + "date_of_entry, user_name, length_of_stay,occupation,unit_no)"
                                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                            pstmt.setString(1, jTextField36.getText());
                            pstmt.setString(2, jTextField1.getText());
                            pstmt.setObject(3, codingTable.getValueAt(i, 0).toString());
                            pstmt.setObject(4, codingTable.getModel().getValueAt(i, 1).toString());
                            pstmt.setInt(5, 1);
                            pstmt.setString(6, jTextField92.getText());
                            pstmt.setDouble(7, 0.00);
                            pstmt.setString(8, jTextArea1.getText());
                            pstmt.setDate(9, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                            pstmt.setString(11, jComboBox4.getSelectedItem().toString());
                            pstmt.setString(12, jTextField8.getText());
                            pstmt.setString(13, categ);
                            pstmt.setString(14, "");
                            pstmt.setString(15, jTextField4.getText());
                            pstmt.setString(16, jTextArea2.getText());
                            pstmt.setString(17, Categ);
                            pstmt.setDouble(18, java.lang.Double.valueOf(jTextField2.getText()));
                            pstmt.setString(19, jTextField3.getText());
                            pstmt.setString(20, jTextField5.getText());
                            pstmt.setDate(21, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                            pstmt.setDate(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                            pstmt.setTimestamp(23, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt.setString(24, user);
                            pstmt.setInt(25, incDays);
                            pstmt.setString(26, jComboBox6.getSelectedItem().toString());
                            pstmt.setString(27, unitNumberTxt.getText());
                            pstmt.executeUpdate();

                        }
                    }
                }
                if (jCheckBox2.isSelected()) {
                    java.sql.PreparedStatement pstmt1xg = connectDB.prepareStatement("UPDATE hp_bed_setup set occupied = ? WHERE bed_no ilike '" + jTextField8.getText() + "' and ward ilike '" + jTextField4.getText() + "'");
                    pstmt1xg.setBoolean(1, false);
                    pstmt1xg.executeUpdate();

                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("UPDATE hp_admission SET discharge = true,diagnosed = true,discharge_date = '" + datePicker3.getDate().toString() + "',discharged_by = current_user,transaction_type = '" + jComboBox4.getSelectedItem() + "', diagnosis1 = ?,diagnosis2 = ? ,diagnosis3 = ? WHERE patient_no ilike '" + jTextField36.getText() + "' AND visit_id ilike '" + jTextField7.getText() + "'");
                    pstmt21.setObject(1, codingTable.getValueAt(0, 1));
                    pstmt21.setObject(2, codingTable.getValueAt(1, 1));//codingTable.getValueAt(1, 1) 
                    pstmt21.setObject(3, codingTable.getValueAt(2, 1));
                    pstmt21.executeUpdate();
                    if (jComboBox6.getSelectedItem() == null) {
                        java.sql.PreparedStatement pstmt23 = connectDB.prepareStatement("UPDATE hp_inpatient_register SET discharge_date = '" + datePicker3.getDate().toString() + "' WHERE patient_no ilike '" + jTextField36.getText() + "'");

                        pstmt23.executeUpdate();
                    } else {
                        java.sql.PreparedStatement pstmt23 = connectDB.prepareStatement("UPDATE hp_inpatient_register SET discharge_date = '" + datePicker3.getDate().toString() + "',file_location = '" + jComboBox6.getSelectedItem() + "' WHERE patient_no ilike '" + jTextField36.getText() + "'");

                        pstmt23.executeUpdate();
                    }
                } else {
                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("UPDATE hp_patient_visit SET status = true WHERE patient_no ilike '" + jTextField36.getText() + "' AND date = '" + datePicker11.getDate() + "'");

                    pstmt21.executeUpdate();
                    if (jComboBox6.getSelectedItem() == null) {
                    } else {
                        //  java.sql.PreparedStatement pstmt211 = connectDB.prepareStatement("UPDATE hp_patient_register SET file_location = '" + jComboBox6.getSelectedItem().toString() + "' WHERE patient_no ilike '" + jTextField36.getText() + "'");
                        //  pstmt211.executeUpdate();
                    }
                }

                //java.sql.PreparedStatement pstmt211x = connectDB.prepareStatement("UPDATE rh.hp_records_archive SET stored_files = stored_files + 1 WHERE shelve_code = '" + jComboBox6.getSelectedItem().toString() + "' AND department_name = '" + jComboBox5.getSelectedItem().toString() + "'");

                //pstmt211x.executeUpdate();

                java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("INSERT INTO doctors_notes VALUES(?,?,?,?,?, ?)");

                pstmtx.setString(1, jTextField36.getText());
                pstmtx.setString(2, jTextField1.getText());
                pstmtx.setString(3, jTextArea1.getText());
                pstmtx.setString(4, jTextArea2.getText());
                pstmtx.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                pstmtx.setString(6, jTextField92.getText());
                pstmtx.executeUpdate();

                connectDB.commit();
                connectDB.setAutoCommit(true);
                this.jButton1.setEnabled(false);
                javax.swing.JOptionPane.showMessageDialog(this, "Data Saved Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                this.jButton1.setEnabled(true);
                jTextField36.setText("");

                jTextField1.setText("");
                for (int k = 0; k < codingTable.getRowCount(); k++) {
                    for (int r = 0; r < codingTable.getColumnCount(); r++) {
                        codingTable.getModel().setValueAt(null, k, r);
                    }
                }
            }
            //  jComboBox2.setSelectedItem(null);
        } catch (java.sql.SQLException sq) {

            try {
                connectDB.rollback(registerSavePoint);
            } catch (java.sql.SQLException sql) {
                sql.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        //   }
        //}

// Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void datePicker3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datePicker3MouseMoved
// TODO add your handling code here:
    }//GEN-LAST:event_datePicker3MouseMoved

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        indexingTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date_recorded as coding_date, user_name, patient_no, main_service as code, disease as code_description, doctor_surgeon, scrub_nurse as classification, ward_name as unit_name, pat_category as patient_category, pat_age as patient_age, gender from hp_patient_diagnosis WHERE date_recorded BETWEEN '" + startDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' ORDER BY 1"));

        codingTabbedPane.setSelectedIndex(1);
         nonindexedTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, name, ip_no,  date as visit_date,  user_name as registrar, clinic, \n" +
                "(SELECT user_name FROM hp_clinical_results WHERE hp_clinical_results.patient_no = hp_patient_visit.patient_no\n" +
                "AND hp_patient_visit.date = hp_clinical_results.date LIMIT 1 ) AS SEEN_BY\n" +
                "FROM hp_patient_visit WHERE date  BETWEEN '" + startDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' and patient_no not in (SELECT patient_no FROM    hp_patient_diagnosis WHERE date_recorded BETWEEN '" + startDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' )"));



        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    public void calculateIPdays() {
        try {

            int inpatientdays = 0;
            java.sql.Statement st = connectDB.createStatement();
            java.sql.ResultSet rs = st.executeQuery("SELECT ('" + datePicker3.getDate() + "')::date-('" + datePicker2.getDate() + "')::date");
            while (rs.next()) {
                inpatientdays = rs.getInt(1);
            }
            jTextField9.setText(String.valueOf(inpatientdays));
            System.out.println("The no of days..........." + inpatientdays);
        } catch (java.sql.SQLException sql) {
            sql.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTabbedPane codingTabbedPane;
    private javax.swing.JTable codingTable;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker11;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JComboBox departmentcmbx;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private com.afrisoftech.lib.DatePicker endDatePicker1;
    private javax.swing.JPanel indexingPanel;
    private javax.swing.JScrollPane indexingScrollPane;
    private javax.swing.JScrollPane indexingScrollPane1;
    private javax.swing.JTable indexingTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton92;
    private javax.swing.JButton jButton921;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JTable nonindexedTable;
    private javax.swing.JPanel notIndexedPanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton2;
    private com.afrisoftech.lib.DatePicker startDatePicker;
    private com.afrisoftech.lib.DatePicker startDatePicker1;
    private javax.swing.JTextField unitNumberTxt;
    // End of variables declaration//GEN-END:variables
}
