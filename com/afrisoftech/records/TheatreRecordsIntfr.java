/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.records;

////import com.sun.star.lib.uno.environments.java.java_environment;

/**
 *
 * @author  root
 */
public class TheatreRecordsIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    com.afrisoftech.lib.DBObject dbObject;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    //  private TheatreBillingIntfr.SearchThread searchThread = null;
    //  private TheatreBillingIntfr.SearchServicesThread searchServicesThread = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public TheatreRecordsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        //searchThread = new TheatreBillingIntfr.SearchThread();
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton911 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jTextField14 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchScrollPane2.setDoubleBuffered(true);
        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setDoubleBuffered(true);
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Cancel");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });

        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton911.setText("Close");
        jButton911.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton911ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton911, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Theatre Procedures");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jSeparator1, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('s');
        jButton1.setText("Save");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient Here"));
        jLabel9.setForeground(new java.awt.Color(255, 51, 102));
        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 51, 102));
        jLabel1.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel3.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField2, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setPreferredSize(new java.awt.Dimension(33, 20));
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(25, 53));
        searchButton.setPreferredSize(new java.awt.Dimension(10, 19));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jLabel4.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextField7.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField10, gridBagConstraints);

        jLabel6.setForeground(new java.awt.Color(255, 0, 102));
        jLabel6.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jLabel11.setForeground(new java.awt.Color(255, 51, 102));
        jLabel11.setText("Sex");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel11, gridBagConstraints);

        jTextField12.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField12, gridBagConstraints);

        jLabel12.setText("Ward");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jPanel2, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.setForeground(new java.awt.Color(255, 0, 102));
        jLabel8.setText("Surgeon's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel8, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setPreferredSize(new java.awt.Dimension(33, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jTextField14, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(25, 53));
        searchButton1.setPreferredSize(new java.awt.Dimension(10, 19));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel7.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel7, gridBagConstraints);

        jLabel16.setText("Procedure1 ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel16, gridBagConstraints);

        jComboBox3.setEditable(true);
        jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-----' as name UNION select service_type as name from pb_operating_parameters WHERE main_service ilike '%thea%' order by name"));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jComboBox3, gridBagConstraints);

        jLabel20.setText("Procedure2 ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel20, gridBagConstraints);

        jComboBox5.setEditable(true);
        jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-----' as name UNION select service_type as name from pb_operating_parameters WHERE main_service ilike '%thea%' order by name"));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jComboBox5, gridBagConstraints);

        jLabel19.setText("Procedure3 ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel19, gridBagConstraints);

        jComboBox4.setEditable(true);
        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-----' as name UNION select service_type as name from pb_operating_parameters WHERE main_service ilike '%thea%' order by name"));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jComboBox4, gridBagConstraints);

        jLabel17.setForeground(new java.awt.Color(255, 0, 204));
        jLabel17.setText("Time(Min)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel17, gridBagConstraints);

        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField6.setText("0");
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jTextField6, gridBagConstraints);

        jLabel15.setText("Procedure Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel15, gridBagConstraints);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minor", "Major" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jComboBox2, gridBagConstraints);

        jLabel18.setText("Operation Theatre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jLabel18, gridBagConstraints);

        jComboBox6.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT theatre_desc FROM rh.theatres ORDER BY 1"));
        jComboBox2.setSelectedItem(null);
        // javax.swing.JComboBox strCmb;
        java.lang.Object[] strCmb1 = {"Minor","Major"};

        javax.swing.DefaultComboBoxModel comboModel1 = new javax.swing.DefaultComboBoxModel(strCmb1);

        jComboBox2.setModel(comboModel1);

        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jComboBox6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel1.add(jPanel10, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        jPanel31.setMinimumSize(new java.awt.Dimension(258, 35));
        jPanel31.setPreferredSize(new java.awt.Dimension(258, 35));
        buttonGroup1.add(jCheckBox11);
        jCheckBox11.setForeground(new java.awt.Color(51, 51, 255));
        jCheckBox11.setMnemonic('o');
        jCheckBox11.setText("Out Patients");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jCheckBox11, gridBagConstraints);

        buttonGroup1.add(jCheckBox21);
        jCheckBox21.setForeground(new java.awt.Color(153, 102, 255));
        jCheckBox21.setMnemonic('i');
        jCheckBox21.setText("InPatients");
        jCheckBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox21ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jCheckBox21, gridBagConstraints);

        buttonGroup1.add(jCheckBox6);
        jCheckBox6.setForeground(new java.awt.Color(153, 0, 153));
        jCheckBox6.setText("Others");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jPanel31.add(jCheckBox6, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel31, gridBagConstraints);

        jLabel5.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel9.add(datePicker1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        buttonGroup2.add(jCheckBox3);
        jCheckBox3.setText("Search By  No.");
        jPanel3.add(jCheckBox3);

        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setText("Search By Name");
        jPanel3.add(jCheckBox4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = -10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        setBounds(0, 0, 725, 577);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed
    
    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6KeyReleased
    
    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed
    
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed
    
    private void jCheckBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox21ActionPerformed
        this.jTextField1.setEditable(false);
        this.jTextField7.setEditable(false);
        this.jTextField9.setEditable(false);// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox21ActionPerformed
    
    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        this.jTextField1.setEditable(false);
        this.jTextField7.setEditable(false);
        this.jTextField9.setEditable(false);// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed
    
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        cmbox2MouseClicked();// TODO add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
        javax.swing.JOptionPane.showMessageDialog(this, "Key Pressed");
// TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        
        
        this.jTextField1.setEditable(true);
        this.jTextField7.setEditable(true);
        this.jTextField9.setEditable(true);
        this.jTextField7.setText("Cash");
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    
    private void jButton911ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton911ActionPerformed
        jSearchDialog11.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton911ActionPerformed
    private void cmbox2MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = this.jTextField14.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);
    }
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        String status = null;
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select status from pb_doctors_list where staff_no  ='"+this.jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0)+"'");
            while (rset1.next()){
                status = rset1.getObject(1).toString();
                //jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        if(status.equalsIgnoreCase("Suspended")||status.equalsIgnoreCase("Closed")){
            javax.swing.JOptionPane.showMessageDialog(this,"Account Closed","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }else{
            
            jTextField14.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
            
            //  jTable11.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable11.getSelectedRow(), 5);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        }
        
        jTextField1111.setText("");
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name"));
            
            
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
   /*     for (int i = 0; i < jTable11.getRowCount(); i++) {
    
            if (jTable11.getValueAt(i, 0) != null) {
    
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
    
                jTextField31.setText(java.lang.String.valueOf(resFloat));
    
            } else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
    
                jTextField31.setText(java.lang.String.valueOf(resFloat));
    
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
    
        //        double resFloat = 0.00;
        double resFloat = 0.00;
    
        for (int i = 0; i < jTable11.getRowCount(); i++) {
    
            if (jTable11.getValueAt(i, 0) != null) {
    
                //   if (jTable11.getSelectedColumn() == 1) {
    
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString ));
    
                //   }
    
                jTextField31.setText(java.lang.String.valueOf(resFloat));
    
            }else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
    
                //   }
    
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
    
        }
    */
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }            private void cmbox1MouseClicked() {
        /*
        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
         */
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        
        jButton1.setEnabled(true);
        
        //        this.jComboBox131.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jSearchDialog2.dispose();
        String adm = null;
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        
        
        if(this.jCheckBox11.isSelected()){
            try {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,year_of_birth,sex from hp_patient_register where patient_no  ='"+jTextField9.getText()+"'");
                while (rset1.next()){
                    jTextField2.setText(rset1.getObject(1).toString());
                    jTextField7.setText(rset1.getObject(2).toString());
                    
                    jTextField5.setText(rset1.getObject(4).toString());
                }
                
                java.sql.Statement stmt1s = connectDB.createStatement();
                java.sql.ResultSet rset1s = stmt1s.executeQuery("SELECT age from hp_patient_visit WHERE patient_no  ='"+jTextField9.getText()+"' ORDER BY patient_no DESC LIMIT 1");
                while (rset1s.next()){
                    jTextField10.setText(rset1s.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }else{
            if(this.jCheckBox21.isSelected()){
                
                this.jButton1.setEnabled(true);
                try {
                    java.sql.Statement stmt1 = connectDB.createStatement();
                    
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,year_of_birth,sex from hp_inpatient_register where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset1.next()){
                        jTextField2.setText(rset1.getObject(1).toString());
                        jTextField7.setText(rset1.getObject(2).toString());
                        jTextField10.setText(rset1.getObject(3).toString());
                        jTextField5.setText(rset1.getObject(4).toString());
                    }
                    
                    
                    java.sql.Statement stmt1b = connectDB.createStatement();
                    
                    java.sql.ResultSet rset1b = stmt1b.executeQuery("SELECT pat_age,DATE_ADMITTED FROM hp_admission WHERE patient_no  ='"+jTextField9.getText()+"' ORDER BY 2 DESC LIMIT 1");
                    while (rset1b.next()){
                        jTextField10.setText(rset1b.getObject(1).toString());
                    }
                    java.sql.Statement stmt16 = connectDB.createStatement();
                    
                    java.sql.ResultSet rset16 = stmt16.executeQuery("select ward from hp_admission where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset16.next()){
                        jTextField12.setText(rset16.getObject(1).toString());
                        
                    }
                    
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }
            }
        }
        
        //        this.populateTable1(this.jTextField9.getText());
        jTextField113.setText("");
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jCheckBox11.isSelected() && this.jCheckBox3.isSelected()){
            
            if(jTextField113.getCaretPosition() < 1){
                System.out.println("Nothing");
            }else{
                
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select where patient_no ILIKE '%"+jTextField113.getText()+"%' order by patient_no"));
                
              /*  try {
               
                    // searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");
                    searchRowSet2.execute("SELECT patient_no, name, year_of_birth, residence from patient_select where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no");
               
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
               */
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
            }
        }else{
            if(this.jCheckBox11.isSelected() && this.jCheckBox4.isSelected()){
                if(jTextField113.getCaretPosition() < 1){
                    System.out.println("Nothing");
                }else{
                    
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select where name ILIKE '%"+jTextField113.getText()+"%' order by name"));
                    
                 /*   try {
                  
                        // searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");
                        searchRowSet2.execute("SELECT patient_no, name, year_of_birth, residence from patient_select where name ILIKE '"+jTextField113.getText()+"%' order by name");
                  
                        jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                  */
                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    
                }
            }
        }
        
        
        
        if(this.jCheckBox21.isSelected() && this.jCheckBox3.isSelected()){
            
            if(jTextField113.getCaretPosition() < 1){
                System.out.println("Nothing");
            }else{
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where patient_no ILIKE '%"+jTextField113.getText()+"%' order by patient_no"));
                
                /*    // searchRowSet2.execute("SELECT patient_no, upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField113.getText()+"%' order by second_name");
                    searchRowSet2.execute("SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no");
                 
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                    }));
                 */
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
            }
        }else{
            if(this.jCheckBox21.isSelected() && this.jCheckBox4.isSelected()){
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where name ILIKE '%"+jTextField113.getText()+"%' order by name"));
                
                
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
                
            }
        }
        
        //searchRowSet2.c
        
        //   searchThread = new GeneralBillingIntfr.SearchThread();
        
        //  searchThread.start();
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();
        //   jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        //   jButton2.setEnabled(false);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked2() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.setVisible(true);
        
        
        
    }
    
  /*
   */
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField10.setText("");
        jTextField9.setText("");
        jTextField5.setText("");
        jTextField12.setText("");
        
        
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField6.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+datePicker1.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            //        tableModelTableChanged();
            if(jTextField1.getText().equalsIgnoreCase("")){
                javax.swing.JOptionPane.showMessageDialog(this,"You cannot save without the name","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }else{
                java.util.Calendar calendar = java.util.Calendar.getInstance();
                
                long dateNow = calendar.getTimeInMillis();
                
                java.sql.Date datenowSql1= new java.sql.Date(dateNow);
                
                System.out.println(datenowSql1.toString());
                
                java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
                
                System.out.println(datenowSql.toString());
                //   try{
                String billNo = null;
                String transNo = null;
                String payMode = null;
                String patientAcc = null;
                String cardNo = null;
                String AccDesc = null;
                String scheme = null;
                String cardName = null;
                String isurer = null;
                java.sql.Date expDate = null;
                String staffNo = null;
                String glAcc = null;
                String user = null;
                String accDesc1 = null;
                String glAcc1 = null;
                String chbox = null;
                String units = null;
                String gacc = null;
                String item = null;
                String thDesc = null;
                String thAcc = null;
                
                int itemInt = 0;
                double price = 0.00;
                String Store = null;
                double qty = 0.00;
                String glCode = null;
                String actCode = null;
                double amount = 0.00;
                double sellPrice = 0.00;
                java.util.Date admDate=null;
                int visitid = 0;
                if (jCheckBox11.isSelected()){
                    chbox = "OP";
                }else{
                    if (jCheckBox21.isSelected()){
                        chbox = "WI";
                    }else{
                        if (jCheckBox6.isSelected()){
                            chbox = "IP";
                        }
                    }
                }
                try {
                    connectDB.setAutoCommit(false);
                    
                    java.sql.Statement stm12 = connectDB.createStatement();
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.Statement stm1211 = connectDB.createStatement();
                    java.sql.Statement stm122 = connectDB.createStatement();
                    java.sql.Statement stm122x = connectDB.createStatement();
                    java.sql.Statement stm1 = connectDB.createStatement();
                    
                    java.sql.Statement pst = connectDB.createStatement();
                    java.sql.ResultSet rstt = pst.executeQuery("select code,activity from pb_activity where activity_category ='I' AND ACTIVITY ILIKE '%THEAT%'");
                    
                    while (rstt.next()){
                        
                        thAcc = rstt.getObject(1).toString();
                        thDesc = rstt.getObject(2).toString();
                    }
                    
                    java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                    
                    while (rse12.next()){
                        
                        patientAcc = rse12.getObject(1).toString();
                        AccDesc = rse12.getObject(2).toString();
                    }
                    while (rst.next()){
                        rst.getObject(1).toString();
                        
                        transNo = rst.getObject(1).toString();
                    }
                    java.sql.Statement ps11 = connectDB.createStatement();
                    java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq')");
                    while (rst11.next()){
                        rst11.getObject(1).toString();
                        
                        billNo = rst11.getObject(1).toString();
                    }
                    
                    java.sql.Statement ps11v = connectDB.createStatement();
                    java.sql.ResultSet rst11v = ps11v.executeQuery("select current_user");
                    while (rst11v.next()){
                        user = rst11v.getObject(1).toString();
                    }
                    System.out.println("Let see what is happening here [ "+user+" ]");
                    if(this.jCheckBox11.isSelected()){
                        java.sql.Statement stm1q = connectDB.createStatement();
                        java.sql.ResultSet rse1 = stm1q.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
                        
                        while (rse1.next()){
                            
                            payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                            cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                            scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                            cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                            isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                            expDate = rse1.getDate(6);
                            staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                        }
                    }
                    System.out.println("What about here [ "+user+" ]");
                    // }else{
                    // if(this.jCheckBox11.isSelected()){
                        
                        java.sql.PreparedStatement pstmt2at1 = connectDB.prepareStatement("INSERT INTO hp_theatre_procedures VALUES(?,?,?,?,?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?, ?,?,?,?,?,?)");
                        pstmt2at1.setObject(1,jTextField9.getText());
                        pstmt2at1.setObject(2,jTextField1.getText());
                        pstmt2at1.setString(3,jTextField5.getText());
                        pstmt2at1.setString(4,jTextField10.getText());
                        pstmt2at1.setString(5,"Theatre");
                        pstmt2at1.setString(6,"Theatre Time Per Minute");
                        pstmt2at1.setDouble(7,java.lang.Double.valueOf(jTextField6.getText()));
                        pstmt2at1.setDouble(8,0);
                        pstmt2at1.setString(9,jTextField14.getText());
                        pstmt2at1.setDouble(10,java.lang.Double.valueOf(jTextField6.getText()));
                        pstmt2at1.setString(11,"");
                        pstmt2at1.setString(12,jTextField7.getText());
                        pstmt2at1.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                        pstmt2at1.setString(14,"");
                        pstmt2at1.setString(15,"");
                        pstmt2at1.setObject(16,"");
                        pstmt2at1.setObject(17,jComboBox2.getSelectedItem());
                        if(jCheckBox11.isSelected()){
                            pstmt2at1.setString(18,"Day Case");
                        }else{
                            pstmt2at1.setString(18,jTextField12.getText());
                        }
                        pstmt2at1.setObject(19,jComboBox3.getSelectedItem());
                        pstmt2at1.setString(20,chbox);
                        pstmt2at1.setString(21,"");
                        // pstmt2at.setBoolean(22,false);
                        pstmt2at1.setString(22,user);
                        pstmt2at1.setObject(23,"");
                        pstmt2at1.setObject(24,"");
                        pstmt2at1.setObject(25,"");
                        pstmt2at1.setObject(26,jComboBox4.getSelectedItem());
                        pstmt2at1.setObject(27,jComboBox5.getSelectedItem());
                        pstmt2at1.setString(28,"");
                        pstmt2at1.setObject(29,jComboBox6.getSelectedItem());
                        pstmt2at1.executeUpdate();
                        
                        
                        jButton1.setEnabled(false);
                        javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+transNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        jButton3ActionPerformed(evt);
                        
                        //jButton12.setEnabled(true);
                        jButton1.setEnabled(true);
                        
                        
                        
                        jButton1.setEnabled(false);
                        javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+transNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        jButton3ActionPerformed(evt);
                        
                    
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    
                    
                }catch(java.sql.SQLException sq){
                    
                    try {
                        connectDB.rollback();
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    
                }
            }
        }
    /*    } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
     
     
        }
     */
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private class SearchThread extends java.lang.Thread {
        
        public void SearchThread(){}
        
        public void run(){
            
            searchNames();
            
        }
        
    }
    private class SearchServicesThread extends java.lang.Thread {
        
        public void SearchServicesThread(){}
        
        public void run(){
            
            searchServices();
            
        }
        
    }
    
    public void searchNames(){
        int j = 0;
        int i = 0;
        
      /* if(jTextField113.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
        try {
            System.out.println("Starting select clause");
          /*  java.sql.Statement stmtTable11 = connectDB.createStatement();
       
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT count(patient_name)  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
       
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {*/
           /*     java.sql.Statement stmtTable1 = connectDB.createStatement();
            
                // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");// AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                 java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' order by second_name");
                while (rsetTable1.next()) {
            
                    System.out.println("Working at table row "+i);
                    jSearchTable2.setValueAt(rsetTable1.getObject(1), i, 0);
                    jSearchTable2.setValueAt(rsetTable1.getObject(2), i, 1);
                   // jTable111.setValueAt(rsetTable1.getObject(3), i, 2);
                   // jTable111.setValueAt(rsetTable1.getObject(4), i, 3);
                   // jTable111.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
            
                    i++;
            
                }
            
            
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
            }
            */
    }
    
    public void searchServices(){
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton911;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    // End of variables declaration//GEN-END:variables
    
}
