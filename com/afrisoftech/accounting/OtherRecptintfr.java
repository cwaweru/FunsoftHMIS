/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author root
 */
public class OtherRecptintfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form loanpymntintfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    String cashPoint = null;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;
    String staffID = null;
    double unsurrenderedAmount = 0.0;
    String glActvtyCode = null;
    String actvtyDesc = null;
    String receiptActivity = null;
    String payeeName = null;
    private String checkoutRequestID;

    public OtherRecptintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        //  System.out.println("Cashpoint : " + System.getProperty("cashpoint"));
        paymentModeCmbx.setSelectedItem("Cash");
        cashPointTxt.setText(getCashPoint());
        shiftNoTxt.setText(getShiftNumber());
        // jTextField14.setText(com.afrisoftech.hospital.HospitalMain.);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        searchGLCodesTxt = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        glCodeSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton5111 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField11112 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton512 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        detailsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        receivedFromTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        glCodeTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        paymentModeCmbx = new javax.swing.JComboBox();
        jPanel211 = new javax.swing.JPanel();
        otherReceiptTxt = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel61 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        receiptDetailsPanel = new javax.swing.JPanel();
        receiptDetailTxt = new javax.swing.JTextField();
        searchButton21 = new javax.swing.JButton();
        jLabel532 = new javax.swing.JLabel();
        receiptNoTxt = new javax.swing.JTextField();
        jPanel2112 = new javax.swing.JPanel();
        jTextField3612 = new javax.swing.JTextField();
        searchButton22 = new javax.swing.JButton();
        jPanel212 = new javax.swing.JPanel();
        searchTxt = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        payerMobileTelephoneNumberTxt = new javax.swing.JFormattedTextField();
        payBillNumberTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        chequeDrawerNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chequeNumberTxt = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        drawerBankTxt = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        amountPaidTxt = new javax.swing.JTextField();
        cashPointTxt = new javax.swing.JTextField();
        shiftNoTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        buttonPanel = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        saveReceiptBtn = new javax.swing.JButton();
        reprintReceiptBtn = new javax.swing.JButton();
        clearFormBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        payViaMobilePayBtn = new javax.swing.JButton();
        optionsPanel = new javax.swing.JPanel();
        loanStockChk = new javax.swing.JCheckBox();
        creditorChk = new javax.swing.JCheckBox();
        surrenderChk = new javax.swing.JCheckBox();
        consutantChk = new javax.swing.JCheckBox();

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField11111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton511.setMnemonic('C');
        jButton511.setText("Close");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        searchGLCodesTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchGLCodesTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(searchGLCodesTxt, gridBagConstraints);

        glCodeSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        glCodeSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        glCodeSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                glCodeSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(glCodeSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton5111.setMnemonic('C');
        jButton5111.setText("Close");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField11112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11112CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField11112, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton512.setMnemonic('C');
        jButton512.setText("Close");
        jButton512.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton512ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton512, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Other Receipts/Miscellaneous Income");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jTextField8.setEditable(false);
        jTextField8.setEnabled(false);
        jTextField8.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField8.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(jTextField8, gridBagConstraints);

        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter payer details"));
        detailsPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Received From(Name)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        detailsPanel.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(receivedFromTxt, gridBagConstraints);

        jLabel6.setText("Receipt Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        detailsPanel.add(jLabel6, gridBagConstraints);

        jLabel2.setText("Other Receipt Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        detailsPanel.add(jLabel2, gridBagConstraints);

        jLabel531.setText("Receipt No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        detailsPanel.add(jLabel531, gridBagConstraints);

        glCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        detailsPanel.add(glCodeTxt, gridBagConstraints);

        jLabel8.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        detailsPanel.add(jLabel8, gridBagConstraints);

        paymentModeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT initcap(payment_mode) as payment_mode from pb_paymentmodes order by payment_mode"));
        paymentModeCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentModeCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        detailsPanel.add(paymentModeCmbx, gridBagConstraints);

        jPanel211.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel211.setLayout(new java.awt.GridBagLayout());

        otherReceiptTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherReceiptTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(otherReceiptTxt, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        jPanel211.add(searchButton2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        detailsPanel.add(jPanel211, gridBagConstraints);

        jLabel61.setText("Organisation Name/Imprest No:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        detailsPanel.add(jLabel61, gridBagConstraints);

        jTextField5.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField5.setPreferredSize(new java.awt.Dimension(0, 0));
        detailsPanel.add(jTextField5, new java.awt.GridBagConstraints());

        receiptDetailsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        receiptDetailsPanel.setLayout(new java.awt.GridBagLayout());

        receiptDetailTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        receiptDetailsPanel.add(receiptDetailTxt, gridBagConstraints);

        searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton21.setToolTipText("Search");
        searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton21ActionPerformed(evt);
            }
        });
        receiptDetailsPanel.add(searchButton21, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(receiptDetailsPanel, gridBagConstraints);

        jLabel532.setText("Gl Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        detailsPanel.add(jLabel532, gridBagConstraints);

        receiptNoTxt.setEditable(false);
        receiptNoTxt.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        detailsPanel.add(receiptNoTxt, gridBagConstraints);

        jPanel2112.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2112.setLayout(new java.awt.GridBagLayout());

        jTextField3612.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2112.add(jTextField3612, gridBagConstraints);

        searchButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton22.setToolTipText("Search");
        searchButton22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton22.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton22.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton22.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton22ActionPerformed(evt);
            }
        });
        jPanel2112.add(searchButton22, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(jPanel2112, gridBagConstraints);

        jPanel212.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel212.setLayout(new java.awt.GridBagLayout());

        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(searchTxt, gridBagConstraints);

        searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton3.setToolTipText("Search");
        searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton3ActionPerformed(evt);
            }
        });
        jPanel212.add(searchButton3, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(jPanel212, gridBagConstraints);

        payerMobileTelephoneNumberTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bill Payer Telephone No.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 51))); // NOI18N
        payerMobileTelephoneNumberTxt.setForeground(new java.awt.Color(0, 0, 255));
        try {
            payerMobileTelephoneNumberTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("254-7##-######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        payerMobileTelephoneNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerMobileTelephoneNumberTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(payerMobileTelephoneNumberTxt, gridBagConstraints);

        payBillNumberTxt.setEditable(false);
        payBillNumberTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        payBillNumberTxt.setText(com.afrisoftech.lib.CashShiftNumberFactory.getPayBillNumber(connectDB)
        );
        payBillNumberTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PayBill Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 51))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(payBillNumberTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(detailsPanel, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Other details"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Drawer's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(chequeDrawerNameTxt, gridBagConstraints);

        jLabel4.setText("Cheque Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel3.add(chequeNumberTxt, gridBagConstraints);

        jLabel54.setText("Drawer's Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel54, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(drawerBankTxt, gridBagConstraints);

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 51, 51));
        jLabel53.setText("Amount Paid");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel53, gridBagConstraints);

        amountPaidTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        amountPaidTxt.setForeground(new java.awt.Color(204, 0, 0));
        amountPaidTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        amountPaidTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel3.add(amountPaidTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        getContentPane().add(jPanel2, gridBagConstraints);

        cashPointTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(cashPointTxt, gridBagConstraints);

        shiftNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(shiftNoTxt, gridBagConstraints);

        jLabel10.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel10, gridBagConstraints);

        jLabel11.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel11, gridBagConstraints);

        jLabel12.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(datePicker1, gridBagConstraints);

        buttonPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        buttonPanel.setLayout(new java.awt.GridBagLayout());

        saveReceiptBtn.setMnemonic('p');
        saveReceiptBtn.setText("Save Receipt and Print");
        saveReceiptBtn.setToolTipText("Click here to enter data");
        saveReceiptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveReceiptBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(saveReceiptBtn, gridBagConstraints);

        reprintReceiptBtn.setText("RePrint");
        reprintReceiptBtn.setEnabled(false);
        reprintReceiptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reprintReceiptBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(reprintReceiptBtn, gridBagConstraints);

        clearFormBtn.setMnemonic('l');
        clearFormBtn.setText("Clear form");
        clearFormBtn.setToolTipText("Click here to clear textfields");
        clearFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(clearFormBtn, gridBagConstraints);

        closeFormBtn.setMnemonic('C');
        closeFormBtn.setText("Close form");
        closeFormBtn.setToolTipText("Click here to close window");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeFormBtn, gridBagConstraints);

        jButton11.setMnemonic('O');
        jButton11.setText("Save Receipt");
        jButton11.setToolTipText("Click here to enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jButton11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 500.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jLabel5, gridBagConstraints);

        payViaMobilePayBtn.setText("Push to mobile for payment");
        payViaMobilePayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payViaMobilePayBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(payViaMobilePayBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        optionsPanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(loanStockChk);
        loanStockChk.setText("Loan Stock");
        loanStockChk.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        optionsPanel.add(loanStockChk, gridBagConstraints);

        buttonGroup1.add(creditorChk);
        creditorChk.setText("Creditor");
        creditorChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        optionsPanel.add(creditorChk, gridBagConstraints);

        buttonGroup1.add(surrenderChk);
        surrenderChk.setText("Imprest Surrender");
        surrenderChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surrenderChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        optionsPanel.add(surrenderChk, gridBagConstraints);

        buttonGroup1.add(consutantChk);
        consutantChk.setText("Consultant");
        consutantChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consutantChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        optionsPanel.add(consutantChk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(optionsPanel, gridBagConstraints);

        setBounds(0, 0, 1126, 539);
    }// </editor-fold>//GEN-END:initComponents

    private void glCodeSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_glCodeSearchTableMouseClicked
        receiptDetailTxt.setText(glCodeSearchTable.getValueAt(glCodeSearchTable.getSelectedRow(), 0).toString());
        glCodeTxt.setText(glCodeSearchTable.getValueAt(glCodeSearchTable.getSelectedRow(), 1).toString());
        jSearchDialog11.dispose();
        saveReceiptBtn.setEnabled(true);
        saveReceiptBtn.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_glCodeSearchTableMouseClicked

    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
        jSearchDialog11.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton5111ActionPerformed

    private void searchGLCodesTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchGLCodesTxtCaretUpdate

        glCodeSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select activity as scheme,code from pb_activity where activity ILIKE '" + searchGLCodesTxt.getText().toString() + "%' AND category_class ilike 'plid' AND activity not ilike '%exemption%' AND activity not ilike '%abscond%'  AND  activity not ilike '%waiver%' order by activity"));

        glCodeSearchTable.setShowHorizontalLines(false);
        jSearchScrollPane11.setViewportView(glCodeSearchTable);

        // Add your handling code here:
    }//GEN-LAST:event_searchGLCodesTxtCaretUpdate

    private void searchButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton21ActionPerformed
        searchButton11Clicked();    // Add your handling code here:
    }//GEN-LAST:event_searchButton21ActionPerformed

    private void creditorChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorChkActionPerformed
        saveReceiptBtn.setEnabled(true);
        jButton11.setEnabled(true);
        for (int k = 0; k < jSearchTable1.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable1.getColumnCount(); r++) {
                jSearchTable1.getModel().setValueAt(null, k, r);
            }
        }
        for (int k = 0; k < jSearchTable2.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable2.getColumnCount(); r++) {
                jSearchTable2.getModel().setValueAt(null, k, r);
            }
        }
        amountPaidTxt.setText("0.00");
        receiptDetailTxt.setText("");
        searchTxt.setText("");
        receivedFromTxt.setText("");
        this.otherReceiptTxt.setText("");
        this.glCodeTxt.setText("");
        jTextField11111.setText("");
        try {
            // if(this.jCheckBox1.isSelected()){
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select gl_code from st_suppliers where supplier_name  ilike '" + otherReceiptTxt.getText().toString() + "'");
            while (rset1.next()) {
                glCodeTxt.setText(rset1.getObject(1).toString());
                //  jTextField4.setText(rset1.getObject(2).toString());
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        // Add your handling code here:
    }//GEN-LAST:event_creditorChkActionPerformed

    private void consutantChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consutantChkActionPerformed
        saveReceiptBtn.setEnabled(true);
        jButton11.setEnabled(true);
        for (int k = 0; k < jSearchTable1.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable1.getColumnCount(); r++) {
                jSearchTable1.getModel().setValueAt(null, k, r);
            }
        }
        this.otherReceiptTxt.setText("");
        this.glCodeTxt.setText("");
        receiptDetailTxt.setText("");
        searchTxt.setText("");
        receivedFromTxt.setText("");
        jTextField11111.setText("");
        amountPaidTxt.setText("0.00");
        try {
            // if(this.jCheckBox1.isSelected()){
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category ilike 'CC'");
            while (rset1.next()) {
                glCodeTxt.setText(rset1.getObject(1).toString());
                //  jTextField4.setText(rset1.getObject(2).toString());
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        // Add your handling code here:
    }//GEN-LAST:event_consutantChkActionPerformed

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog1.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        if (receiptDetailTxt.getText().equalsIgnoreCase("Tender Documents Income")) {
            otherReceiptTxt.setText("Tender Number: " + jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        } else {
            otherReceiptTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
            jTextField5.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        }

        jSearchDialog1.dispose();
        if (this.creditorChk.isSelected()) {
            try {
                // if(this.jCheckBox1.isSelected()){
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select gl_code from st_suppliers where supplier_name  ilike '" + otherReceiptTxt.getText() + "'");
                while (rset1.next()) {
                    glCodeTxt.setText(rset1.getObject(1).toString());
                    //  jTextField4.setText(rset1.getObject(2).toString());
                }

            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        } else {
            if (this.consutantChk.isSelected()) {
                try {
                    // if(this.jCheckBox1.isSelected()){
                    java.sql.Statement stmt1 = connectDB.createStatement();
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category ilike 'CC'");
                    while (rset1.next()) {
                        glCodeTxt.setText(rset1.getObject(1).toString());
                        //  jTextField4.setText(rset1.getObject(2).toString());
                    }

                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }
            }
        }
        try {
            // if(this.jCheckBox1.isSelected()){
            java.sql.Statement stmt11 = connectDB.createStatement();
            java.sql.ResultSet rset11 = stmt11.executeQuery("select activity from pb_activity where code ilike '" + glCodeTxt.getText().toString() + "'");
            while (rset11.next()) {
                // this.jComboBox131.setSelectedItem(rset11.getObject(1).toString());
                receiptDetailTxt.setText(rset11.getObject(1).toString());
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jSearchDialog1.dispose();// Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if (this.consutantChk.isSelected()) {
            if (jTextField11111.getCaretPosition() > 1) {

                System.out.println("Nothing");
            } else {

                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  (upper(first_name||' '||middle_name)) as name,staff_no from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%" + jTextField11111.getText() + "%'"));

                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
            }

        } else if (this.surrenderChk.isSelected()) {
            if (jTextField11111.getCaretPosition() > 1) {

                System.out.println("Nothing");
            } else {
                //select distinct voucher_no from ac_petty_cash where (voucher_no !='' and voucher_no = ILIKE '%" + jTextField11111.getText() + "%' and voucher_no ilike 'T_IMPREST%' or voucher_no ilike 'PETT%') and status != 'Payment Done'  GROUP BY voucher_no having sum(debit-credit)> 0 ORDER BY 1                                                                                     
                try {
                    //jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct voucher_no, payee from ac_petty_cash where  voucher_no = ILIKE '%" + jTextField11111.getText() + "%'  GROUP BY voucher_no, payee having sum(debit-credit)> 0 ORDER BY 1"));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
            }

        } else {
            if (this.creditorChk.isSelected()) {

                if (jTextField11111.getCaretPosition() < 3) {

                    System.out.println("Nothing");
                } else {
                    jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select (supplier_name) as scheme,code from st_suppliers where supplier_name ILIKE '" + jTextField11111.getText().toString() + "%'"));

                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);

                }
            } else {
                if (this.loanStockChk.isSelected()) {

                    if (jTextField11111.getCaretPosition() < 3) {

                        System.out.println("Nothing");
                    } else {

                        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select (lender_name) as scheme,loan_no from pb_loan where lender_name ILIKE '" + jTextField11111.getText().toString() + "%'"));

                        jSearchTable1.setShowHorizontalLines(false);
                        jSearchScrollPane1.setViewportView(jSearchTable1);

                    }
                } else {
                    if (receiptDetailTxt.getText().equalsIgnoreCase("Tender Documents Income")) {
                        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct tender_no FROM st_item_to_quote"));

                        jSearchTable1.setShowHorizontalLines(false);
                        jSearchScrollPane1.setViewportView(jSearchTable1);

                    }

                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    private void searchButton1Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.otherReceiptTxt.getLocationOnScreen();

        jSearchDialog1.setSize(400, 200);

        jSearchDialog1.setLocation(point);

        jSearchDialog1.setVisible(true);
    }
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton1Clicked();   // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.receiptDetailTxt.getLocationOnScreen();

        jSearchDialog11.setSize(400, 200);

        jSearchDialog11.setLocation(point);

        jSearchDialog11.setVisible(true);
    }
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);

        System.out.println(datenowSql.toString());

        java.sql.Connection con;
        //  try{
        String glCode = null;
        String bankAcc = null;
        String User1 = null;
        String transNo = null;
        String rcode = null;
        String rname = null;
        String receiptNo = null;
        String receiptNo2 = null;
        java.sql.Savepoint registerSavePoint = null;
        String accountCode = null;
        String glType = null;
        String imprestPrincipalHolder = null;
        String department = null;

        try {
            connectDB.setAutoCommit(false);
            registerSavePoint = connectDB.setSavepoint("registration");
//        } catch (java.sql.SQLException ex) {
//            ex.printStackTrace();
//        }
//
//
//        try {
            java.util.Date periodFrom = null;
            java.util.Date periodTo = null;

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

            if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } else {
                java.sql.Statement stm121xx = connectDB.createStatement();
                java.sql.ResultSet rse121xx = stm121xx.executeQuery("select shift_no from ac_shifts WHERE user_name = current_user and status = 'Running' AND cash_point = '" + cashPointTxt.getText() + "'");
                while (rse121xx.next()) {

                    shiftNoTxt.setText(rse121xx.getString(1));

                }
                java.sql.Statement stm1211 = connectDB.createStatement();
                java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                while (rse1211.next()) {
                    rname = rse1211.getObject(1).toString();
                    rcode = rse1211.getObject(2).toString();
                }
                java.sql.Statement stm3 = connectDB.createStatement();
                java.sql.ResultSet rse3 = stm3.executeQuery("select activity,code from pb_activity where activity_category ='DA'");
                while (rse3.next()) {
                    glCode = rse3.getObject(1).toString();
                    bankAcc = rse3.getObject(2).toString();
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select user,nextval('transaction_no_seq')");
                while (rst.next()) {
                    transNo = rst.getObject(2).toString();
                    User1 = rst.getObject(1).toString();
                }

                java.sql.Statement pst1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pst1.executeQuery("select activity_code,description,requisitioner, department from ac_petty_cash where voucher_no = '" + searchTxt.getText().toString() + "'");
                while (rs1.next()) {
                    accountCode = rs1.getString(1);
                    glType = rs1.getString(2);
                    imprestPrincipalHolder = rs1.getString(3);
                    department = rs1.getString(4);
                }
                if (surrenderChk.isSelected()) {
                    java.sql.PreparedStatement pstSurrender = connectDB.prepareStatement("INSERT INTO ac_petty_cash("
                            + "            activity_code, activity, payee, description, debit, credit, date_payable, "
                            + "            user_name, paid, voucher_no, date, approved, department, requisitioner, " +//8
                            "            status, document, transaction_no, cash_point, shift_no, request_no, " +//15
                            "            code, requisition_no, donor, proj, branch, staff_veh, approved_surrender, " +//21
                            "            checked_surrender)"
                            + "    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)");

                    pstSurrender.setObject(1, glActvtyCode);
                    pstSurrender.setString(2, receiptActivity);
                    pstSurrender.setObject(3, payeeName);
                    pstSurrender.setString(4, actvtyDesc);
                    pstSurrender.setDouble(5, 0.00);//debit or issues 
                    pstSurrender.setDouble(6, java.lang.Double.valueOf(amountPaidTxt.getText().toString()));
                    pstSurrender.setDate(7, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstSurrender.setString(8, User1);
                    pstSurrender.setBoolean(9, true);
                    pstSurrender.setObject(10, searchTxt.getText());
                    pstSurrender.setDate(11, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstSurrender.setBoolean(12, true);
                    pstSurrender.setString(13, department);
                    pstSurrender.setString(14, "");
                    pstSurrender.setString(15, "Receipt");
                    pstSurrender.setString(16, "");
                    pstSurrender.setString(17, transNo);
                    pstSurrender.setString(18, cashPointTxt.getText().toString());
                    pstSurrender.setString(19, shiftNoTxt.getText().toString());
                    pstSurrender.setString(20, "");
                    pstSurrender.setString(21, "");
                    pstSurrender.setString(22, "");
                    pstSurrender.setString(23, "");
                    pstSurrender.setString(24, "");
                    pstSurrender.setString(25, "");
                    pstSurrender.setString(26, staffID);
                    pstSurrender.setBoolean(27, true);
                    pstSurrender.setBoolean(28, true);
                    pstSurrender.executeUpdate();

                    if (java.lang.Double.valueOf(amountPaidTxt.getText().toString()) >= unsurrenderedAmount) {
                        System.out.println("Amount in the field" + java.lang.Double.valueOf(amountPaidTxt.getText().toString()));
                        System.out.println("Amount in the DB" + java.lang.Double.valueOf(unsurrenderedAmount));
                        java.sql.PreparedStatement pstmtCompletePettyCash = connectDB.prepareStatement("update ac_petty_cash set approved_surrender = true and checked_surrender = true where voucher_no = ?");
                        pstmtCompletePettyCash.setObject(1, searchTxt.getText().toString());
                        pstmtCompletePettyCash.executeUpdate();
                    }

                }
                if (glCodeTxt.getText().equalsIgnoreCase("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You Must Select GL Code", "Caution Message!", javax.swing.JOptionPane.WARNING_MESSAGE);

                } else {
                    receiptNo = com.afrisoftech.lib.DateLables.getDateLabel();

                    if (creditorChk.isSelected()) {

                        java.sql.Statement pssc = connectDB.createStatement();
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");

                        pstmt.setString(1, glCodeTxt.getText());
                        pstmt.setString(2, receivedFromTxt.getText());
                        pstmt.setString(4, "");
                        pstmt.setString(3, paymentModeCmbx.getSelectedItem().toString());
                        pstmt.setString(5, receivedFromTxt.getText());
                        pstmt.setString(7, jTextField8.getText());
                        pstmt.setString(6, otherReceiptTxt.getText());
                        pstmt.setString(8, receiptNo);
                        pstmt.setString(9, glCodeTxt.getText());
                        pstmt.setString(10, chequeNumberTxt.getText());
                        pstmt.setString(11, transNo);
                        pstmt.setString(12, "Receipt");
                        pstmt.setDouble(13, 0.00);
                        pstmt.setDouble(14, java.lang.Double.valueOf(amountPaidTxt.getText()));
                        pstmt.setString(16, receiptNo);
                        pstmt.setDate(15, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                        pstmt.setObject(17, receiptDetailTxt.getText());
                        pstmt.setBoolean(18, true);
                        pstmt.setBoolean(19, false);
                        pstmt.setString(20, User1);
                        pstmt.setString(21, "");
                        pstmt.setDate(22, null);
                        pstmt.setDate(23, null);
                        pstmt.setDouble(24, 0.00);
                        pstmt.setDouble(25, java.lang.Double.valueOf(amountPaidTxt.getText()));
                        pstmt.executeUpdate();

                    } else {
                        if (loanStockChk.isSelected()) {

                            java.sql.Statement pssc = connectDB.createStatement();
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_loans_ledger values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                            pstmt.setString(1, glCodeTxt.getText());
                            pstmt.setString(2, otherReceiptTxt.getText());
                            pstmt.setString(4, "");
                            pstmt.setString(3, paymentModeCmbx.getSelectedItem().toString());
                            pstmt.setString(5, receivedFromTxt.getText());
                            pstmt.setString(7, jTextField8.getText());
                            pstmt.setString(6, otherReceiptTxt.getText());
                            pstmt.setString(8, receiptNo);
                            pstmt.setString(9, glCodeTxt.getText());
                            pstmt.setString(10, chequeNumberTxt.getText());
                            pstmt.setString(11, transNo);
                            pstmt.setString(12, "Receipt");
                            pstmt.setDouble(13, 0.00);
                            pstmt.setDouble(14, java.lang.Double.valueOf(amountPaidTxt.getText()));
                            pstmt.setString(16, receiptNo);
                            pstmt.setDate(15, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                            pstmt.setObject(17, receiptDetailTxt.getText());
                            pstmt.setBoolean(18, true);
                            pstmt.setBoolean(19, false);
                            pstmt.setString(20, User1);
                            pstmt.setString(21, "");
                            pstmt.setDate(22, null);
                            pstmt.setDate(23, null);
                            pstmt.setDouble(24, 0.00);
                            pstmt.setDouble(25, java.lang.Double.valueOf(amountPaidTxt.getText()));
                            pstmt.executeUpdate();
                        } else {
                            if (consutantChk.isSelected()) {
                                java.sql.Statement pssc = connectDB.createStatement();

                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                                pstmt.setString(1, jTextField5.getText());
                                pstmt.setString(2, "DOCTORS FEES");
                                pstmt.setString(3, otherReceiptTxt.getText());
                                pstmt.setString(4, transNo);
                                pstmt.setString(5, glCodeTxt.getText());
                                pstmt.setString(6, "RECEIPT");
                                pstmt.setDouble(7, 0.00);
                                pstmt.setDouble(8, java.lang.Double.valueOf(amountPaidTxt.getText()));
                                pstmt.setString(9, receiptNo);
                                pstmt.setString(10, "");
                                pstmt.setString(11, paymentModeCmbx.getSelectedItem().toString());
                                pstmt.setBoolean(12, true);
                                pstmt.setString(13, User1);
                                pstmt.setDate(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                                pstmt.setString(15, "");
                                pstmt.setString(16, receivedFromTxt.getText());
                                pstmt.setDouble(17, 0.00);
                                pstmt.setDouble(18, java.lang.Double.valueOf(amountPaidTxt.getText()));
                                pstmt.executeUpdate();

                            } else {

                                //INSERT INTO st_td_collection(supplier, receipt_no, collected)  VALUES (?, ?, ?);
                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,initcap(?),?,?, ?, initcap(?), initcap(?), ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                                pstmt2.setObject(1, glCodeTxt.getText());
                                pstmt2.setObject(5, otherReceiptTxt.getText());
                                pstmt2.setString(2, receiptDetailTxt.getText());
                                pstmt2.setString(3, "");
                                if (otherReceiptTxt.getText() == null) {
                                    pstmt2.setString(4, receivedFromTxt.getText());
                                } else {
                                    pstmt2.setString(4, otherReceiptTxt.getText());
                                }
                                pstmt2.setString(6, "");
                                pstmt2.setString(8, chequeDrawerNameTxt.getText());
                                pstmt2.setString(9, drawerBankTxt.getText());
                                pstmt2.setString(10, "");
                                pstmt2.setString(11, chequeNumberTxt.getText());
                                pstmt2.setString(12, receiptNo);

                                if (otherReceiptTxt.getText() == null) {
                                    javax.swing.JOptionPane.showMessageDialog(this, "Received From Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                                } else {
                                    pstmt2.setString(7, receivedFromTxt.getText());
                                }
                                pstmt2.setString(13, "");
                                pstmt2.setString(14, receiptDetailTxt.getText());
                                pstmt2.setObject(15, "Receipts");
                                pstmt2.setDouble(17, java.lang.Double.valueOf(amountPaidTxt.getText()));
                                pstmt2.setDouble(16, 0.00);
                                pstmt2.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                                pstmt2.setString(19, transNo);
                                pstmt2.setBoolean(22, false);
                                pstmt2.setBoolean(20, false);
                                pstmt2.setBoolean(21, false);
                                pstmt2.setString(23, User1);
                                pstmt2.setString(24, cashPointTxt.getText());
                                pstmt2.setString(25, shiftNoTxt.getText());
                                pstmt2.executeUpdate();

                            }
                        }
                    }
                    java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,initcap(?),?,?, ?, initcap(?), initcap(?), ?, ?, ?, initcap(?), ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                    pstmt2a.setObject(1, glCodeTxt.getText());
                    pstmt2a.setObject(5, paymentModeCmbx.getSelectedItem().toString());
                    pstmt2a.setString(2, otherReceiptTxt.getText());
                    pstmt2a.setString(3, otherReceiptTxt.getText());
                    pstmt2a.setString(4, receivedFromTxt.getText());
                    pstmt2a.setString(6, "");
                    pstmt2a.setString(7, receivedFromTxt.getText());
                    pstmt2a.setString(8, chequeDrawerNameTxt.getText());
                    pstmt2a.setString(9, drawerBankTxt.getText());
                    pstmt2a.setString(10, rcode);
                    pstmt2a.setString(12, receiptNo);
                    pstmt2a.setString(11, chequeNumberTxt.getText());
                    pstmt2a.setString(13, "");
                    pstmt2a.setString(14, otherReceiptTxt.getText());
                    pstmt2a.setObject(15, "Receipts");
                    pstmt2a.setDouble(16, java.lang.Double.valueOf(amountPaidTxt.getText()));
                    pstmt2a.setDouble(17, 00);
                    pstmt2a.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstmt2a.setString(19, transNo);
                    pstmt2a.setBoolean(20, false);
                    pstmt2a.setBoolean(21, false);
                    pstmt2a.setBoolean(22, false);
                    pstmt2a.setString(23, User1);
                    pstmt2a.setString(24, cashPointTxt.getText());
                    pstmt2a.setString(25, shiftNoTxt.getText());
                    pstmt2a.setObject(26, null);
                    pstmt2a.setDouble(27, 1);
                    pstmt2a.executeUpdate();

                    java.sql.Statement ps1 = connectDB.createStatement();

                    java.sql.PreparedStatement psr = connectDB.prepareStatement("INSERT INTO ac_receipts_no("
                            + "account_no, account_name, date, amount, shift_no, "
                            + "cash_point, reference, user_name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
                    psr.setString(1, jTextField8.getText());
                    psr.setString(2, otherReceiptTxt.getText());
                    psr.setDate(3, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    psr.setDouble(4, java.lang.Double.valueOf(amountPaidTxt.getText()));
                    psr.setInt(5, java.lang.Integer.valueOf(shiftNoTxt.getText()));
                    psr.setString(6, cashPointTxt.getText());
                    psr.setString(7, receiptNo);
                    psr.setString(8, User1);
                    psr.executeUpdate();

                    java.sql.Statement ps1q = connectDB.createStatement();
                    java.sql.ResultSet rst1q = ps1q.executeQuery("SELECT LPAD(receipt_no::TEXT,8,'0'::TEXT) FROM ac_receipts_no WHERE reference = '" + receiptNo + "'");
                    while (rst1q.next()) {
                        receiptNo2 = rst1q.getObject(1).toString();
                    }

                    if (receiptDetailTxt.getText().equalsIgnoreCase("Tender Documents Income")) {
                        //INSERT INTO st_td_collection(supplier, receipt_no, collected)  VALUES (?, ?, ?);
                        java.sql.PreparedStatement td = connectDB.prepareStatement("INSERT INTO st_td_collection(supplier, receipt_no,date_collected,tender_no)  VALUES (?, ?, ?, ?);");

                        td.setObject(1, searchTxt.getText().toString());
                        td.setObject(2, receiptNo2);
                        td.setDate(3, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                        td.setObject(4, otherReceiptTxt.getText().toString());
                        td.executeUpdate();
                    } else {
                        System.out.println("it's fine ,these are other things in the list");
                    }

                    java.sql.PreparedStatement pstmt112 = connectDB.prepareStatement("UPDATE ac_cash_collection SET receipt_no = '" + receiptNo2 + "' WHERE receipt_no = '" + receiptNo + "'");
                    pstmt112.executeUpdate();

                    java.sql.PreparedStatement pstmtac_ledger = connectDB.prepareStatement("UPDATE ac_ledger SET receipt_no = '" + receiptNo2 + "' WHERE receipt_no = '" + receiptNo + "'");
                    pstmtac_ledger.executeUpdate();

                    receiptNoTxt.setText(receiptNo2);
                    javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    saveReceiptBtn.setEnabled(false);
                    jButton11.setEnabled(false);

                }
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback(registerSavePoint);
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            jLabel7.setForeground(java.awt.Color.red);
            jLabel7.setText("Sorry. Please Check The Fields");
        }

    }//GEN-LAST:event_jButton11ActionPerformed

    private void reprintReceiptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reprintReceiptBtnActionPerformed

        String receiptNo = null;
        try {
            connectDB.setAutoCommit(false);

            receiptNo = receiptNoTxt.getText();

            String nodetails = null;
            String rct = null;
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nodetails from receipt_pref");
            while (rst11.next()) {
                nodetails = rst11.getObject(1).toString();
            }

            java.sql.Statement ps112 = connectDB.createStatement();
            java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
            while (rst112.next()) {
                rct = rst112.getObject(1).toString();
            }
            if (nodetails.equalsIgnoreCase("NoDetails")) {

                com.afrisoftech.txtreports.NoDetReceiptsTxt policy = new com.afrisoftech.txtreports.NoDetReceiptsTxt(connectDB, "-", receivedFromTxt.getText(), amountPaidTxt.getText(), receiptNo, this.paymentModeCmbx.getSelectedItem().toString());
            } else {
                if (nodetails.equalsIgnoreCase("Codes")) {
                    com.afrisoftech.txtreports.CodeReceiptsTxt policy = new com.afrisoftech.txtreports.CodeReceiptsTxt(connectDB, "-", receivedFromTxt.getText(), amountPaidTxt.getText(), receiptNo, this.paymentModeCmbx.getSelectedItem().toString());

                } else {
                    if (nodetails.equalsIgnoreCase("dept")) {
                        com.afrisoftech.txtreports.ReceiptsPerDeptTxt policy = new com.afrisoftech.txtreports.ReceiptsPerDeptTxt(connectDB, "-", receivedFromTxt.getText(), amountPaidTxt.getText(), receiptNo, this.paymentModeCmbx.getSelectedItem().toString());

                    } else {
                        if (nodetails.equalsIgnoreCase("Prints") && rct.equalsIgnoreCase("Pdf")) {
                            com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
                            policy.ReceiptsPdf(connectDB, receiptNo);
                        } else {
                            com.afrisoftech.txtreports.ReceiptsTxt policy = new com.afrisoftech.txtreports.ReceiptsTxt(connectDB, "-", receivedFromTxt.getText(), amountPaidTxt.getText(), receiptNo, this.paymentModeCmbx.getSelectedItem().toString());
                        }
                    }
                }
            }

        } catch (java.sql.SQLException sq) {

            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // Add your handling code here:
    }//GEN-LAST:event_reprintReceiptBtnActionPerformed

    private void paymentModeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentModeCmbxActionPerformed
        /*       try {
         java.sql.Statement stmt = connectDB.createStatement();
         java.sql.ResultSet rset = stmt.executeQuery("select gl_account,description from ac_cash_points where payment_code ='"+jComboBox11.getSelectedItem()+"'");
         while (rset.next()){
         jTextField31.setText(rset.getObject(1).toString());
         jTextField12.setText(rset.getObject(2).toString());
         //  jTextField7.setText(rset.getObject(3).toString());

         }

         java.sql.Statement stmt1 = connectDB.createStatement();
         java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_name,bank_account_no,bank_name from ac_banks_setup where gl_code ='"+jTextField31.getText()+"'");
         while (rset1.next()){
         jTextField7.setText(rset1.getObject(1).toString());
         jTextField10.setText(rset1.getObject(2).toString());
         jTextField5.setText(rset1.getObject(3).toString());

         }
         } catch (java.sql.SQLException sqe) {
         sqe.printStackTrace();
         //  System.out.println("Insert not successful");
         if (paymentModeCmbx.getSelectedItem().toString().contains("Pesa")) {
         javax.swing.JOptionPane.showMessageDialog(this, "You must enter a valid client Mpesa telephone number in the format : 254-7xx-xxxxxx on the Bill Payer Telephone No field");
         }
         }  */
        if (paymentModeCmbx.getSelectedItem().toString().contains("Pesa")) {
            javax.swing.JOptionPane.showMessageDialog(this, "You must enter a valid client Mpesa telephone number in the format : 254-7xx-xxxxxx on the Bill Payer Telephone No field");
        }
// Add your handling code here:
    }//GEN-LAST:event_paymentModeCmbxActionPerformed

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
        this.setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void clearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBtnActionPerformed
        otherReceiptTxt.setEditable(true);
        searchButton2.setEnabled(true);
        searchTxt.setEditable(true);
        searchTxt.setText("");
        //  jTextField7.setText("");
        //      jTextField10.setText("");
        drawerBankTxt.setText("");
        //        jTextField5.setText("");
        //        jTextField12.setText("");
        receivedFromTxt.setText("");
        otherReceiptTxt.setText("");
        glCodeTxt.setText("");
        //        jTextField5.setText("");
        amountPaidTxt.setText("");
        chequeDrawerNameTxt.setText("");
        chequeNumberTxt.setText("");
        receiptDetailTxt.setText("");
        paymentModeCmbx.setSelectedItem(null);
        // Add your handling code here:
    }//GEN-LAST:event_clearFormBtnActionPerformed

    private void saveReceiptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveReceiptBtnActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);

        System.out.println(datenowSql.toString());

        java.sql.Connection con;
        String glCode = null;
        String bankAcc = null;
        String receiptNo = null;
        String transNo = null;
        String rcode = null;
        String rname = null;
        String User1 = null;
        String nodetails = null;
        String rct = null;
        jButton11ActionPerformed(evt);
        // jButton5ActionPerformed(evt);

        try {

            connectDB.setAutoCommit(false);

            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
            while (rse1211.next()) {
                rname = rse1211.getObject(1).toString();
                rcode = rse1211.getObject(2).toString();
            }
            java.sql.Statement stm3 = connectDB.createStatement();
            java.sql.ResultSet rse3 = stm3.executeQuery("select activity,code from pb_activity where activity_category ='DA'");
            while (rse3.next()) {
                glCode = rse3.getObject(1).toString();
                bankAcc = rse3.getObject(2).toString();
            }
//                java.sql.Statement ps = connectDB.createStatement();
//                java.sql.ResultSet rst = ps.executeQuery("select user,nextval('transaction_no_seq')");
//                while (rst.next()) {
//                    transNo = rst.getObject(2).toString();
//                    User1 = rst.getObject(1).toString();
//                }
//
//                java.sql.Statement pss = connectDB.createStatement();
//                java.sql.ResultSet rsts = pss.executeQuery(" select nextval('receipt_no_seq')");
//                while (rsts.next()) {
//                    //rsts.getObject(1).toString();
//                    receiptNo = rsts.getObject(1).toString();
//                }
            receiptNo = receiptNoTxt.getText();
            if (receiptNo != null) {
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nodetails from receipt_pref");
                while (rst11.next()) {
                    nodetails = rst11.getObject(1).toString();
                }

                java.sql.Statement ps112 = connectDB.createStatement();
                java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
                while (rst112.next()) {
                    rct = rst112.getObject(1).toString();
                }

                if (nodetails.equalsIgnoreCase("NoDetails")) {

                    com.afrisoftech.txtreports.IPDebtorsReceiptsTxt policy = new com.afrisoftech.txtreports.IPDebtorsReceiptsTxt(connectDB, receiptDetailTxt.getText(), receivedFromTxt.getText(), searchTxt.getText(), amountPaidTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), chequeNumberTxt.getText());
                } else {
                    if (nodetails.equalsIgnoreCase("Prints") && rct.equalsIgnoreCase("Pdf")) {
                        com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
                        policy.ReceiptsPdf(connectDB, receiptNo);
                        com.afrisoftech.reports.OtherReceiptsBPdf policy1 = new com.afrisoftech.reports.OtherReceiptsBPdf();
                        policy1.OtherReceiptsBPdf(connectDB, receiptDetailTxt.getText(), receivedFromTxt.getText(), amountPaidTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), chequeNumberTxt.getText());
                    } else {
                        //    com.afrisoftech.txtreports.InpatientReceiptsTxt policy = new com.afrisoftech.txtreports.InpatientReceiptsTxt(connectDB, jTextField9.getText(), jTextField2.getText(), jTextField1.getText(), receiptNo, paymodCmbx.getSelectedItem().toString(), otherReceiptTxt.getText(), jTextField1.getText());
                        com.afrisoftech.txtreports.DebtorsReceiptsTxt policy1 = new com.afrisoftech.txtreports.DebtorsReceiptsTxt(connectDB, receiptDetailTxt.getText() + ":" + otherReceiptTxt.getText(), receivedFromTxt.getText(), searchTxt.getText(), amountPaidTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), chequeNumberTxt.getText());
                    }
                }

//
//                com.afrisoftech.reports.OtherReceiptsBPdf policy = new com.afrisoftech.reports.OtherReceiptsBPdf();
//                policy.OtherReceiptsBPdf(connectDB, receiptDetailTxt.getText(), receivedFromTxt.getText(), amountTxt.getText(), receiptNo, paymodCmbx.getSelectedItem().toString(), jTextField2.getText());
                drawerBankTxt.setText("");
                receivedFromTxt.setText("");
                otherReceiptTxt.setText("");
                glCodeTxt.setText("");
                jTextField5.setText("");
                amountPaidTxt.setText("");
                chequeDrawerNameTxt.setText("");
                chequeNumberTxt.setText("");

                paymentModeCmbx.setSelectedItem(null);
                saveReceiptBtn.setEnabled(false);
                jButton11.setEnabled(false);

                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                sql.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            jLabel7.setForeground(java.awt.Color.red);
            jLabel7.setText("Sorry. Please Check The Fields");
        }

//       
//        ReceiptThread receiptThread = new ReceiptThread();
//
//        receiptThread.start();
//        
//        jButton1.setEnabled(false);
//        
//        jButton1.setEnabled(false);
        // Add your handling code here:
    }//GEN-LAST:event_saveReceiptBtnActionPerformed

    private void searchButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton22ActionPerformed
    private void searchsupplier() {
        java.awt.Point point = this.searchTxt.getLocationOnScreen();
        jSearchDialog2.setSize(400, 200);
        jSearchDialog2.setLocation(point);
        jSearchDialog2.setVisible(true);

    }
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        // TODO add your handling code here:
        searchTxt.setEditable(false);
        searchsupplier();

    }//GEN-LAST:event_searchButton3ActionPerformed

    private void otherReceiptTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherReceiptTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherReceiptTxtActionPerformed

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTxtActionPerformed

    private void jTextField11112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11112CaretUpdate
        // TODO add your handling code here:
        if (jTextField11112.getCaretPosition() > 1) {

            if (surrenderChk.isSelected()) {//11112
                //jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct voucher_no, payee from ac_petty_cash where  (voucher_no ILIKE '%" + jTextField11112.getText() + "%' and voucher_no !='')  and status != 'Payment Done' GROUP BY voucher_no, payee having sum(debit-credit)> 0 ORDER BY 1"));
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and (payee ILIKE '%" + jTextField11112.getText() + "%' or staff_veh ILIKE '%" + jTextField11112.getText() + "%') and status != 'Payment Done' GROUP BY staff_veh, payee,voucher_no having sum(debit-credit)> 0 ORDER BY 1"));
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
            } else {

                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct supplier_name, code from st_suppliers where supplier_name ILIKE '" + jTextField11112.getText().toString() + "%'"));

                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
            }
        }
    }//GEN-LAST:event_jTextField11112CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked

        otherReceiptTxt.setEditable(false);
        if (this.surrenderChk.isSelected()) {
            searchTxt.setText(jSearchTable2.getModel().getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
            searchTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
            try {
                // if(this.jCheckBox1.isSelected()){
                java.sql.Statement stmtBalance = connectDB.createStatement();
                java.sql.ResultSet rsetBalance = stmtBalance.executeQuery("select sum(debit-credit) as bal, sum(debit) as total, payee FROM ac_petty_cash where voucher_no = '" + searchTxt.getText().toString() + "' and status != 'Payment Done' group by payee,voucher_no order by voucher_no");

                while (rsetBalance.next()) {
                    amountPaidTxt.setText(rsetBalance.getObject(1).toString());
                    receivedFromTxt.setText(rsetBalance.getObject(3).toString());
                    payeeName = rsetBalance.getObject(3).toString();

                }

                java.sql.Statement stmtUnsurrenderedBalance = connectDB.createStatement();
                java.sql.ResultSet rsetUnsurrenderedBalance = stmtUnsurrenderedBalance.executeQuery("select sum(debit-credit) as bal, sum(debit) as total, payee, voucher_no FROM ac_petty_cash where voucher_no = '" + searchTxt.getText().toString() + "' and status != 'Payment Done' group by payee,voucher_no order by voucher_no");

                while (rsetUnsurrenderedBalance.next()) {
                    unsurrenderedAmount = rsetUnsurrenderedBalance.getDouble(1);
                }

                java.sql.Statement stmtCode = connectDB.createStatement();
                java.sql.ResultSet rsetCode = stmtCode.executeQuery("select activity_code, description, activity, staff_veh FROM ac_petty_cash where voucher_no = '" + searchTxt.getText().toString() + "'");

                while (rsetCode.next()) {
                    //glCodeTxt.setText(rsetCode.getObject(1).toString());
                    glActvtyCode = rsetCode.getObject(1).toString();
                    actvtyDesc = rsetCode.getObject(2).toString();
                    otherReceiptTxt.setText(rsetCode.getObject(2).toString());
                    receiptActivity = rsetCode.getObject(3).toString();
                    staffID = rsetCode.getObject(4).toString();
                }

            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        } else {
            searchTxt.setText(jSearchTable2.getModel().getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
            searchTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        }

        //searchButton2.setEnabled(false);
        jSearchDialog2.dispose();
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton512ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton512ActionPerformed

        this.jSearchDialog2.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton512ActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentAdded

    private void surrenderChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surrenderChkActionPerformed
        // TODO add your handling code here:
        saveReceiptBtn.setEnabled(true);
        jButton11.setEnabled(true);
        receivedFromTxt.setText("");
        for (int k = 0; k < jSearchTable2.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable2.getColumnCount(); r++) {
                jSearchTable2.getModel().setValueAt(null, k, r);

            }

            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and status != 'Payment Done' and approved_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) > 0 ORDER BY 1"));

        }
        amountPaidTxt.setText("0.00");
        receiptDetailTxt.setText("");
        searchTxt.setText("");
        receivedFromTxt.setText("");
        this.otherReceiptTxt.setText("");
        this.glCodeTxt.setText("");
        jTextField11112.setText("");
//        try {
//            // if(this.surrenderChk.isSelected()){
//            java.sql.Statement stmt1 = connectDB.createStatement();
//            java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category ilike 'CC'");
//            while (rset1.next()) {
//                jTextField31.setText(rset1.getObject(1).toString());
//                //  jTextField4.setText(rset1.getObject(2).toString());
//            }
//
//        } catch (java.sql.SQLException sqe) {
//            sqe.printStackTrace();
//            //  System.out.println("Insert not successful");
//        }

    }//GEN-LAST:event_surrenderChkActionPerformed

    private void payerMobileTelephoneNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerMobileTelephoneNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payerMobileTelephoneNumberTxtActionPerformed

    private void payViaMobilePayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payViaMobilePayBtnActionPerformed
        String payerTelephoneNumber = null;
        System.out.println("Payer Mobile Telephone Number : [" + payerMobileTelephoneNumberTxt.getText().replace("-", "").length() + "]");

        String transactionNo = null;

        try {
            java.sql.PreparedStatement pstmtTransNo = connectDB.prepareStatement("select nextval('transaction_no_seq')");

            java.sql.ResultSet rsetTransNo = pstmtTransNo.executeQuery();

            while (rsetTransNo.next()) {

                transactionNo = rsetTransNo.getObject(1).toString();

            }

            java.sql.PreparedStatement pstmtOther = connectDB.prepareStatement("INSERT INTO public.hp_patient_billing("
                    + "            patient_no, patient_name, payment_mode, patient_category, service, "
                    + "            quantity, amount, gl_code, trans_date, inpatient_no, user_name, "
                    + "            paid, revenue_code, visit_id, doctor, collected, checkout_request_id)"
                    + "    VALUES (?, ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, ?, ?, "
                    + "            ?, ?, ?, ?, ?, ?)");
            pstmtOther.setString(1, transactionNo);
            pstmtOther.setString(2, receivedFromTxt.getText());
            pstmtOther.setString(3, paymentModeCmbx.getSelectedItem().toString());
            pstmtOther.setString(4, "Other Receipts");
            pstmtOther.setString(5, otherReceiptTxt.getText());
            pstmtOther.setInt(6, 1);
            pstmtOther.setDouble(7, Double.parseDouble(amountPaidTxt.getText()));
            pstmtOther.setString(8, glCodeTxt.getText());
            pstmtOther.setDate(9, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
            pstmtOther.setString(10, transactionNo);
            pstmtOther.setString(11, com.afrisoftech.lib.UserName.getUserName(connectDB));
            pstmtOther.setBoolean(12, false);
            pstmtOther.setString(13, receiptDetailTxt.getText());
            pstmtOther.setString(14, transactionNo);
            pstmtOther.setObject(15, null);
            pstmtOther.setBoolean(16, false);
            pstmtOther.setObject(17, null);
            pstmtOther.execute();

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        if (paymentModeCmbx.getSelectedItem().toString().contains("Pesa") && payerMobileTelephoneNumberTxt.getText().replace("-", "").length() == 12) {
            payerTelephoneNumber = payerMobileTelephoneNumberTxt.getText().replace("-", "");

            if (paymentModeCmbx.getSelectedItem().toString().contains("Pesa") && payerMobileTelephoneNumberTxt.getText().replace("-", "").length() == 12) {
                //STK Push for mobile payment
                javax.swing.JOptionPane.showMessageDialog(this, "Request successful.Bill number. " + transactionNo + "", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                if (paymentModeCmbx.getSelectedItem().toString().contains("Pesa") && payerMobileTelephoneNumberTxt.getText().replace("-", "").length() == 12) {
                    boolean checkoutReturn = com.afrisoftech.funsoft.mobilepay.MobilePayAPI.sendProcessRequest(com.afrisoftech.funsoft.mobilepay.Base64Encoding.encodetoBase64String("Si1Y0dik7IoBEFC9buVTGBBdM0A9mQLw:DlPLOhUtuwdAjzDB"), transactionNo, payerTelephoneNumber, amountPaidTxt.getText(), com.afrisoftech.hospital.HospitalMain.payBillNumber);
                    if (checkoutReturn) {
                        try {
                            System.out.println("Processing transaction request data : [" + checkoutRequestID + "]");
                            java.sql.PreparedStatement pstmtCheckout = connectDB.prepareStatement("UPDATE hp_patient_billing SET checkout_request_id = ? WHERE inpatient_no = ?");
                            pstmtCheckout.setString(1, checkoutRequestID);
                            pstmtCheckout.setString(2, transactionNo);
                            pstmtCheckout.executeUpdate();
                            pstmtCheckout.close();
                        } catch (SQLException ex) {
                            ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                        }
                    }
                }
                //   com.afrisoftech.funsoft.mobilepay.MobilePayAPI.sendProcessRequest(com.afrisoftech.funsoft.mobilepay.Base64Encoding.encodetoBase64String("Si1Y0dik7IoBEFC9buVTGBBdM0A9mQLw:DlPLOhUtuwdAjzDB"), visitIDTxt.getText(), payerTelephoneNumber, amountPaidTxt.getText());
            }
        } else if (paymentModeCmbx.getSelectedItem().toString().contains("Pesa") && payerMobileTelephoneNumberTxt.getText().replace("-", "").length() != 12) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please check telephone number! It should be formatted as follows : 2547xxxxxx");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_payViaMobilePayBtnActionPerformed
    public java.lang.String getShiftNumber() {

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()) {
                cashPoint = rsetf.getObject(1).toString();
            }
            rsetf.close();
            stmtf.close();
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }

        try {

            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '" + getCashPoint() + "' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            //java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE user_name = current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset.next()) {

                shift_no = rset.getString(1);

            }
            stmt.close();
            rset.close();
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        return shift_no;

    }

    public java.lang.String getCashPoint() {

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()) {
                cashPoint = rsetf.getObject(1).toString();
            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }

        return cashPoint;

    }

    class ReceiptThread extends java.lang.Thread {

        public void run() {
            java.util.Calendar calendar = java.util.Calendar.getInstance();

            long dateNow = calendar.getTimeInMillis();

            java.sql.Date datenowSql = new java.sql.Date(dateNow);

            System.out.println(datenowSql.toString());

            java.sql.Connection con;
            String glCode = null;
            String bankAcc = null;
            String receiptNo = null;
            String transNo = null;
            String rcode = null;
            String rname = null;
            String User1 = null;
            String nodetails = null;
            String rct = null;
            jButton11.doClick(); //ActionPerformed(evt);
            reprintReceiptBtn.doClick(); //ActionPerformed(evt);

            try {

                connectDB.setAutoCommit(false);

                java.sql.Statement stm1211 = connectDB.createStatement();
                java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                while (rse1211.next()) {
                    rname = rse1211.getObject(1).toString();
                    rcode = rse1211.getObject(2).toString();
                }
                java.sql.Statement stm3 = connectDB.createStatement();
                java.sql.ResultSet rse3 = stm3.executeQuery("select activity,code from pb_activity where activity_category ='DA'");
                while (rse3.next()) {
                    glCode = rse3.getObject(1).toString();
                    bankAcc = rse3.getObject(2).toString();
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select user,nextval('transaction_no_seq')");
                while (rst.next()) {
                    transNo = rst.getObject(2).toString();
                    User1 = rst.getObject(1).toString();
                }

                java.sql.Statement pss = connectDB.createStatement();
                java.sql.ResultSet rsts = pss.executeQuery(" select nextval('receipt_no_seq')");
                while (rsts.next()) {
                    //rsts.getObject(1).toString();
                    receiptNo = rsts.getObject(1).toString();
                }

                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nodetails from receipt_pref");
                while (rst11.next()) {
                    nodetails = rst11.getObject(1).toString();
                }

                java.sql.Statement ps112 = connectDB.createStatement();
                java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
                while (rst112.next()) {
                    rct = rst112.getObject(1).toString();
                }

                if (nodetails.equalsIgnoreCase("NoDetails")) {

                    com.afrisoftech.txtreports.IPDebtorsReceiptsTxt policy = new com.afrisoftech.txtreports.IPDebtorsReceiptsTxt(connectDB, receiptDetailTxt.getText(), receivedFromTxt.getText(), searchTxt.getText(), amountPaidTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), chequeNumberTxt.getText());
                } else {
                    if (nodetails.equalsIgnoreCase("Prints") && rct.equalsIgnoreCase("Pdf")) {
                        com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
                        policy.ReceiptsPdf(connectDB, receiptNo);
                        com.afrisoftech.reports.OtherReceiptsBPdf policy1 = new com.afrisoftech.reports.OtherReceiptsBPdf();
                        policy1.OtherReceiptsBPdf(connectDB, receiptDetailTxt.getText(), receivedFromTxt.getText(), amountPaidTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), chequeNumberTxt.getText());
                    } else {
                        com.afrisoftech.txtreports.InpatientReceiptsTxt policy = new com.afrisoftech.txtreports.InpatientReceiptsTxt(connectDB, drawerBankTxt.getText(), chequeNumberTxt.getText(), chequeDrawerNameTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), otherReceiptTxt.getText(), chequeDrawerNameTxt.getText());
                        com.afrisoftech.txtreports.DebtorsReceiptsTxt policy1 = new com.afrisoftech.txtreports.DebtorsReceiptsTxt(connectDB, receiptDetailTxt.getText(), receivedFromTxt.getText(), searchTxt.getText(), amountPaidTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), chequeNumberTxt.getText());
                    }
                }

                com.afrisoftech.reports.OtherReceiptsBPdf policy = new com.afrisoftech.reports.OtherReceiptsBPdf();
                policy.OtherReceiptsBPdf(connectDB, receiptDetailTxt.getText(), receivedFromTxt.getText(), amountPaidTxt.getText(), receiptNo, paymentModeCmbx.getSelectedItem().toString(), chequeNumberTxt.getText());

                drawerBankTxt.setText("");
                receivedFromTxt.setText("");
                otherReceiptTxt.setText("");
                glCodeTxt.setText("");
                jTextField5.setText("");
                amountPaidTxt.setText("");
                chequeDrawerNameTxt.setText("");
                chequeNumberTxt.setText("");

                paymentModeCmbx.setSelectedItem(null);
                saveReceiptBtn.setEnabled(false);
                jButton11.setEnabled(false);

                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    sql.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                jLabel7.setForeground(java.awt.Color.red);
                jLabel7.setText("Sorry. Please Check The Fields");
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountPaidTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTextField cashPointTxt;
    private javax.swing.JTextField chequeDrawerNameTxt;
    private javax.swing.JTextField chequeNumberTxt;
    private javax.swing.JButton clearFormBtn;
    public javax.swing.JButton closeFormBtn;
    private javax.swing.JCheckBox consutantChk;
    private javax.swing.JCheckBox creditorChk;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JTextField drawerBankTxt;
    private javax.swing.JTable glCodeSearchTable;
    private javax.swing.JTextField glCodeTxt;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton512;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel532;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JPanel jPanel2112;
    private javax.swing.JPanel jPanel212;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField11112;
    private javax.swing.JTextField jTextField3612;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JCheckBox loanStockChk;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JTextField otherReceiptTxt;
    private javax.swing.JTextField payBillNumberTxt;
    private javax.swing.JButton payViaMobilePayBtn;
    private javax.swing.JFormattedTextField payerMobileTelephoneNumberTxt;
    private javax.swing.JComboBox paymentModeCmbx;
    private javax.swing.JTextField receiptDetailTxt;
    private javax.swing.JPanel receiptDetailsPanel;
    private javax.swing.JTextField receiptNoTxt;
    private javax.swing.JTextField receivedFromTxt;
    private javax.swing.JButton reprintReceiptBtn;
    private javax.swing.JButton saveReceiptBtn;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton21;
    private javax.swing.JButton searchButton22;
    private javax.swing.JButton searchButton3;
    private javax.swing.JTextField searchGLCodesTxt;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField shiftNoTxt;
    private javax.swing.JCheckBox surrenderChk;
    // End of variables declaration//GEN-END:variables
}
