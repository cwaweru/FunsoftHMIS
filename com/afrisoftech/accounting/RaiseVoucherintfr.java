/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import com.afrisoftech.dbadmin.TableModel;
import static com.afrisoftech.hospital.HospitalMain.saccopn;
import com.afrisoftech.lib.ClearTable;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class RaiseVoucherintfr extends javax.swing.JInternalFrame {

    private javax.swing.JComboBox cmbox1;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox2;
    /**
     * Creates new form loanpymntintfr
     */
    java.sql.Connection connectDB = null;
    javax.swing.JSpinner beginDateSpinner = null;
    javax.swing.JSpinner endDateSpinner = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    double totalSum = 0.00;
    private String withHeldaccountCode;
    private String RetentionaccountCode;
    private String withholdingname;
    private boolean tax;
    private int lastRow;
    private String invoice;

    public RaiseVoucherintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        nextOfKInLabel.setVisible(false);
        nextOfKinTxt.setVisible(false);
        nextOfKInLabel1.setVisible(false);
        nextName.setVisible(false);
        jRadioButton1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton10 = new javax.swing.JButton();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField1113 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton11 = new javax.swing.JButton();
        searchOtherPaymentsDialog = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        searchOtherPaymentTxt = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        searchOtherPaymentTable = new com.afrisoftech.dbadmin.JTable();
        jButton5111 = new javax.swing.JButton();
        searchLSODialog = new javax.swing.JDialog();
        jSearchPanel4 = new javax.swing.JPanel();
        searchLSOtxt = new javax.swing.JTextField();
        jSearchScrollPane4 = new javax.swing.JScrollPane();
        LSOtbl = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog4 = new javax.swing.JDialog();
        jSearchPanel5 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane5 = new javax.swing.JScrollPane();
        jSearchTable4 = new com.afrisoftech.dbadmin.JTable();
        jButton45 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jSearchDialog5 = new javax.swing.JDialog();
        jSearchPanel6 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane6 = new javax.swing.JScrollPane();
        jSearchTable5 = new com.afrisoftech.dbadmin.JTable();
        jButton46 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jSearchDialog6 = new javax.swing.JDialog();
        jSearchPanel7 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane7 = new javax.swing.JScrollPane();
        jSearchTable6 = new com.afrisoftech.dbadmin.JTable();
        jButton47 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        lposearchdialog = new javax.swing.JDialog();
        jSearchPanel8 = new javax.swing.JPanel();
        lpotxt = new javax.swing.JTextField();
        jSearchScrollPane8 = new javax.swing.JScrollPane();
        lpotable = new com.afrisoftech.dbadmin.JTable();
        jButton57 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        billTable = new javax.swing.JTable();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        paymentRequestBtn = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        editPayedRequisitionBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        deptNameCmbx = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel61 = new javax.swing.JPanel();
        dealerNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        dealerCodeTxt = new javax.swing.JLabel();
        imprestHolderCmbx = new javax.swing.JComboBox();
        imprestTypeCmbx = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        nextOfKInLabel1 = new javax.swing.JLabel();
        nextName = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        heldBalTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nextOfKInLabel = new javax.swing.JLabel();
        nextOfKinTxt = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        imprestNumberTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        lpoAmountTxt = new javax.swing.JTextField();
        withHoldChk = new javax.swing.JCheckBox();
        withHoldTaxTxt = new javax.swing.JTextField();
        retentionAmountChk = new javax.swing.JCheckBox();
        retentionAmountTxt = new javax.swing.JTextField();
        taxPercentageTxt = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        retentionPercentageTxt = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        netAmountPayable = new javax.swing.JTextField();
        retentionDateDue = new com.afrisoftech.lib.DatePicker();
        jLabel35 = new javax.swing.JLabel();
        vatchck = new javax.swing.JCheckBox();
        jTextField4 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        taLsoChk = new javax.swing.JCheckBox();
        jPanel62 = new javax.swing.JPanel();
        dealerNameTxt1 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        vatxt = new javax.swing.JTextField();
        dealerNameTxt3 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        imprestBtn = new javax.swing.JRadioButton();
        nextOfKinRdi = new javax.swing.JRadioButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        creditorsBtn = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        otherpaymentsTable = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        removeRowBtn = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        makeOtherPaymentsBtn = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        sittingAllTxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        mileageTxt = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        accomodationTxt = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        grossPayTxt = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        payeTxt = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        otherTxt = new javax.swing.JTextField();
        netPayTxt = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel2111 = new javax.swing.JPanel();
        expenseDescTxt = new javax.swing.JTextField();
        searchButton21 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        glCodeTxt = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        reasonOfPaymentTxt = new javax.swing.JTextField();
        otherPamentsDate = new com.afrisoftech.lib.DatePicker();
        jLabel13 = new javax.swing.JLabel();
        documentNoTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel63 = new javax.swing.JPanel();
        dealerNameTxt2 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jPanel64 = new javax.swing.JPanel();
        dealerNameTxt4 = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        jTextField111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton41, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel2.add(jTextField1112, gridBagConstraints);

        jSearchTable2.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton10.setText("Dispose");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog3.setModal(true);
        jSearchDialog3.setUndecorated(true);
        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField1113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField1113, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });
        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton11.setText("Dispose");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        searchOtherPaymentsDialog.setModal(true);
        searchOtherPaymentsDialog.setUndecorated(true);
        searchOtherPaymentsDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        searchOtherPaymentTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchOtherPaymentTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(searchOtherPaymentTxt, gridBagConstraints);

        searchOtherPaymentTable.setToolTipText("Click on the target row to select the patient from the search.");
        searchOtherPaymentTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchOtherPaymentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchOtherPaymentTableMouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(searchOtherPaymentTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton5111.setMnemonic('C');
        jButton5111.setText("Close");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchOtherPaymentsDialog.getContentPane().add(jSearchPanel11, gridBagConstraints);

        searchLSODialog.setModal(true);
        searchLSODialog.setUndecorated(true);
        searchLSODialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel4.setLayout(new java.awt.GridBagLayout());

        searchLSOtxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchLSOtxtCaretUpdate(evt);
            }
        });
        searchLSOtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchLSOtxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel4.add(searchLSOtxt, gridBagConstraints);

        LSOtbl.setToolTipText("Click on the target row to select the patient from the search.");
        LSOtbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        LSOtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LSOtblMouseClicked(evt);
            }
        });
        jSearchScrollPane4.setViewportView(LSOtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel4.add(jSearchScrollPane4, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchLSODialog.getContentPane().add(jSearchPanel4, gridBagConstraints);

        jSearchDialog4.setModal(true);
        jSearchDialog4.setUndecorated(true);
        jSearchDialog4.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel5.setLayout(new java.awt.GridBagLayout());

        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });
        jTextField112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel5.add(jTextField112, gridBagConstraints);

        jSearchTable4.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable4MouseClicked(evt);
            }
        });
        jSearchScrollPane5.setViewportView(jSearchTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel5.add(jSearchScrollPane5, gridBagConstraints);

        jButton45.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton45, gridBagConstraints);

        jButton54.setText("Dispose");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton54, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog4.getContentPane().add(jSearchPanel5, gridBagConstraints);

        jSearchDialog5.setModal(true);
        jSearchDialog5.setUndecorated(true);
        jSearchDialog5.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        jTextField113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField113ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel6.add(jTextField113, gridBagConstraints);

        jSearchTable5.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable5.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable5MouseClicked(evt);
            }
        });
        jSearchScrollPane6.setViewportView(jSearchTable5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel6.add(jSearchScrollPane6, gridBagConstraints);

        jButton46.setText("Select");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel6.add(jButton46, gridBagConstraints);

        jButton55.setText("Dispose");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel6.add(jButton55, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog5.getContentPane().add(jSearchPanel6, gridBagConstraints);

        jSearchDialog6.setModal(true);
        jSearchDialog6.setUndecorated(true);
        jSearchDialog6.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel7.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        jTextField114.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField114ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel7.add(jTextField114, gridBagConstraints);

        jSearchTable6.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable6.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable6MouseClicked(evt);
            }
        });
        jSearchScrollPane7.setViewportView(jSearchTable6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel7.add(jSearchScrollPane7, gridBagConstraints);

        jButton47.setText("Select");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel7.add(jButton47, gridBagConstraints);

        jButton56.setText("Dispose");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel7.add(jButton56, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog6.getContentPane().add(jSearchPanel7, gridBagConstraints);

        lposearchdialog.setModal(true);
        lposearchdialog.setUndecorated(true);
        lposearchdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel8.setLayout(new java.awt.GridBagLayout());

        lpotxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                lpotxtCaretUpdate(evt);
            }
        });
        lpotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpotxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel8.add(lpotxt, gridBagConstraints);

        jSearchScrollPane8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchScrollPane8MouseClicked(evt);
            }
        });

        lpotable.setToolTipText("Click on the target row to select the patient from the search.");
        lpotable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        lpotable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lpotableMouseClicked(evt);
            }
        });
        jSearchScrollPane8.setViewportView(lpotable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel8.add(jSearchScrollPane8, gridBagConstraints);

        jButton57.setText("Dispose");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel8.add(jButton57, gridBagConstraints);

        jButton5.setText("Ok");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jSearchPanel8.add(jButton5, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 2.0;
        jSearchPanel8.add(jTextField1, gridBagConstraints);

        jLabel22.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 2.0;
        jSearchPanel8.add(jLabel22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        lposearchdialog.getContentPane().add(jSearchPanel8, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Capture Bills, Invoices for accruals, Imprest Requisitions and other payments");
        setPreferredSize(new java.awt.Dimension(851, 538));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane2.setForeground(new java.awt.Color(153, 0, 0));
        jTabbedPane2.setFont(new java.awt.Font("Vani", 1, 12)); // NOI18N

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jLabel7, gridBagConstraints);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Accounts here"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jScrollPane13.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N

        billTable.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        billTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Expense Description", "Activity code", "Invoice/Imprest No", "Invoice/Imprest Date", "Date Due", "Reason for Payment", "Amount", "VAT Amt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        billTable.setShowHorizontalLines(false);
        cmbox = new javax.swing.JComboBox();
        javax.swing.table.TableColumn dateEditor = billTable.getColumnModel().getColumn(4);
        //com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new org.jdesktop.swingx.JXDatePicker(), billTable);
        com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), billTable);
        dateEditor.setCellEditor(dateCellEditor);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer.TRAILING);
        dateEditor.setCellRenderer(cellRenderer);

        javax.swing.table.TableColumn dateEditor1 = billTable.getColumnModel().getColumn(3);
        com.afrisoftech.lib.DateCellEditor dateCellEditor1 = new  com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), billTable);
        dateEditor1.setCellEditor(dateCellEditor1);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer1 = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer1.TRAILING);
        dateEditor.setCellRenderer(cellRenderer1);

        billTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billTableMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(billTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jScrollPane13, gridBagConstraints);

        paymentRequestBtn.setMnemonic('s');
        paymentRequestBtn.setText("Save payment requisitions");
        paymentRequestBtn.setToolTipText("Click here to enter data");
        paymentRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentRequestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(paymentRequestBtn, gridBagConstraints);

        jButton53.setMnemonic('r');
        jButton53.setText("Remove Row");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jButton53, gridBagConstraints);

        closeFormBtn.setMnemonic('l');
        closeFormBtn.setText("Clear form");
        closeFormBtn.setToolTipText("Click here to clear fields");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(closeFormBtn, gridBagConstraints);

        jButton43.setMnemonic('C');
        jButton43.setText("Close");
        jButton43.setToolTipText("Click here to close ");
        jButton43.setSelected(true);
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton43, gridBagConstraints);

        resetbtn.setMnemonic('v');
        resetbtn.setText("View Imprest");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(resetbtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel3, gridBagConstraints);

        editPayedRequisitionBtn.setText("Edit Requisition");
        editPayedRequisitionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPayedRequisitionBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        jPanel6.add(editPayedRequisitionBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        jTabbedPane1.addTab("Credits", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel8.add(jTabbedPane1, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        deptNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT depart_name FROM pb_main_department ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(deptNameCmbx, gridBagConstraints);

        jLabel8.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Supplier/Creditor/Staff Member");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel1, gridBagConstraints);

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(84, 25));
        jPanel61.setPreferredSize(new java.awt.Dimension(59, 25));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        dealerNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(dealerNameTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search patient name");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel61.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel61, gridBagConstraints);

        jLabel4.setText("Imprest Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(dealerCodeTxt, gridBagConstraints);

        imprestHolderCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION   SELECT DISTINCT payee FROM ac_petty_cash WHERE voucher_no ilike 's%' group by payee having sum(debit-credit) > 0 order by 1"));
        imprestHolderCmbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                imprestHolderCmbxItemStateChanged(evt);
            }
        });
        imprestHolderCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestHolderCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(imprestHolderCmbx, gridBagConstraints);

        imprestTypeCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Temporary Imprest", "Standing Imprest", "Personal Claims", "Salary Advance" }));
        imprestTypeCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestTypeCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(imprestTypeCmbx, gridBagConstraints);

        jLabel5.setText("Standing Imprest Holder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel5, gridBagConstraints);

        nextOfKInLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nextOfKInLabel1.setForeground(new java.awt.Color(204, 0, 0));
        nextOfKInLabel1.setText("Name of Next of Kin");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(nextOfKInLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(nextName, gridBagConstraints);

        jRadioButton1.setText("Payment To Institution");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel4.add(jRadioButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        heldBalTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(heldBalTxt, gridBagConstraints);

        jLabel2.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(datePicker1, gridBagConstraints);

        jLabel6.setText("Imprest Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel6, gridBagConstraints);

        jLabel9.setText("Held Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel9, gridBagConstraints);

        nextOfKInLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nextOfKInLabel.setForeground(new java.awt.Color(204, 0, 0));
        nextOfKInLabel.setText("Next Of KIN ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(nextOfKInLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(nextOfKinTxt, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        imprestNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(imprestNumberTxt, gridBagConstraints);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel7, gridBagConstraints);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Tax Pane", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 11), new java.awt.Color(153, 0, 0))); // NOI18N
        jPanel19.setEnabled(false);
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel29.setText("LPO Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jLabel29, gridBagConstraints);

        lpoAmountTxt.setEditable(false);
        lpoAmountTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lpoAmountTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(lpoAmountTxt, gridBagConstraints);

        withHoldChk.setText("Withhold Tax");
        withHoldChk.setEnabled(false);
        withHoldChk.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        withHoldChk.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        withHoldChk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                withHoldChkItemStateChanged(evt);
            }
        });
        withHoldChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withHoldChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 15);
        jPanel19.add(withHoldChk, gridBagConstraints);

        withHoldTaxTxt.setEditable(false);
        withHoldTaxTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        withHoldTaxTxt.setText("0.00");
        withHoldTaxTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                withHoldTaxTxtCaretUpdate(evt);
            }
        });
        withHoldTaxTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                withHoldTaxTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(withHoldTaxTxt, gridBagConstraints);

        retentionAmountChk.setText("Retain Amount");
        retentionAmountChk.setEnabled(false);
        retentionAmountChk.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        retentionAmountChk.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        retentionAmountChk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                retentionAmountChkItemStateChanged(evt);
            }
        });
        retentionAmountChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retentionAmountChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        jPanel19.add(retentionAmountChk, gridBagConstraints);

        retentionAmountTxt.setEditable(false);
        retentionAmountTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        retentionAmountTxt.setText("0.00");
        retentionAmountTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                retentionAmountTxtCaretUpdate(evt);
            }
        });
        retentionAmountTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                retentionAmountTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(retentionAmountTxt, gridBagConstraints);

        taxPercentageTxt.setEditable(false);
        taxPercentageTxt.setText(" 0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(taxPercentageTxt, gridBagConstraints);

        jLabel30.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jLabel30, gridBagConstraints);

        retentionPercentageTxt.setEditable(false);
        retentionPercentageTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(retentionPercentageTxt, gridBagConstraints);

        jLabel31.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jLabel31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 0.1;
        jPanel19.add(jLabel32, gridBagConstraints);

        jLabel34.setText("Net Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jLabel34, gridBagConstraints);

        netAmountPayable.setEditable(false);
        netAmountPayable.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        netAmountPayable.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(netAmountPayable, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(retentionDateDue, gridBagConstraints);

        jLabel35.setText("Retention Due Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        jPanel19.add(jLabel35, gridBagConstraints);

        vatchck.setText("V.A.T Tax");
        vatchck.setEnabled(false);
        vatchck.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        vatchck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                vatchckItemStateChanged(evt);
            }
        });
        vatchck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vatchckActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(vatchck, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jTextField4, gridBagConstraints);

        jLabel36.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel19.add(jLabel36, gridBagConstraints);

        jPanel20.setLayout(new java.awt.GridBagLayout());

        taLsoChk.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        taLsoChk.setForeground(new java.awt.Color(153, 0, 0));
        taLsoChk.setText("TAX LSO");
        taLsoChk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                taLsoChkItemStateChanged(evt);
            }
        });
        taLsoChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taLsoChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel20.add(taLsoChk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel19.add(jPanel20, gridBagConstraints);

        jPanel62.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel62.setMinimumSize(new java.awt.Dimension(84, 25));
        jPanel62.setPreferredSize(new java.awt.Dimension(59, 25));
        jPanel62.setLayout(new java.awt.GridBagLayout());

        dealerNameTxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(dealerNameTxt1, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search patient name");
        searchButton1.setEnabled(false);
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel62.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jPanel62, gridBagConstraints);

        jLabel11.setText("VAT Payee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jLabel11, gridBagConstraints);

        vatxt.setEditable(false);
        vatxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        vatxt.setText("0.00");
        vatxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                vatxtCaretUpdate(evt);
            }
        });
        vatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vatxtActionPerformed(evt);
            }
        });
        vatxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vatxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel19.add(vatxt, gridBagConstraints);

        dealerNameTxt3.setEditable(false);
        dealerNameTxt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dealerNameTxt3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(dealerNameTxt3, gridBagConstraints);

        jLabel18.setText("Withholding Tax Payee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jLabel18, gridBagConstraints);

        jButton3.setText("Compute");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        jPanel19.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel19, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jPanel1, gridBagConstraints);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(imprestBtn);
        imprestBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        imprestBtn.setText("Staff/Imprest Payments");
        imprestBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        imprestBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                imprestBtnItemStateChanged(evt);
            }
        });
        imprestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(imprestBtn, gridBagConstraints);

        buttonGroup2.add(nextOfKinRdi);
        nextOfKinRdi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nextOfKinRdi.setText("Next of kin");
        nextOfKinRdi.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        nextOfKinRdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextOfKinRdiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(nextOfKinRdi, gridBagConstraints);

        jCheckBox1.setText("Click to add a Gl Item");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(jCheckBox1, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(creditorsBtn);
        creditorsBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        creditorsBtn.setText("Supplier/Creditor Invoices");
        creditorsBtn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        creditorsBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        creditorsBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                creditorsBtnItemStateChanged(evt);
            }
        });
        creditorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorsBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel3.add(creditorsBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jPanel18, gridBagConstraints);

        jTabbedPane2.addTab("Payments on Bill, Invoices and Imprest", jPanel8);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jScrollPane14.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N

        otherpaymentsTable.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        otherpaymentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "ID No.", "Sitting Allowance", "Mileage", "Accomodation", "Others", "Gross Pay", "PAYE", "Net Pay"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        otherpaymentsTable.setShowHorizontalLines(false);
        cmbox = new javax.swing.JComboBox();

        //jTable1.setRowHeight(30);
        otherpaymentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                otherpaymentsTableMouseClicked(evt);
            }
        });
        otherpaymentsTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                otherpaymentsTableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                otherpaymentsTableFocusLost(evt);
            }
        });
        otherpaymentsTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                otherpaymentsTableKeyReleased(evt);
            }
        });
        jScrollPane14.setViewportView(otherpaymentsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel10.add(jScrollPane14, gridBagConstraints);

        jPanel12.setBackground(new java.awt.Color(204, 255, 255));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        removeRowBtn.setMnemonic('r');
        removeRowBtn.setText("Remove Row");
        removeRowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel12.add(removeRowBtn, gridBagConstraints);

        jButton44.setMnemonic('C');
        jButton44.setText("Close");
        jButton44.setToolTipText("Click here to close ");
        jButton44.setSelected(true);
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jButton44, gridBagConstraints);

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        jPanel12.add(jButton2, gridBagConstraints);

        makeOtherPaymentsBtn.setText("Make payments");
        makeOtherPaymentsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeOtherPaymentsBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel12.add(makeOtherPaymentsBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.02;
        jPanel10.add(jPanel12, gridBagConstraints);

        jPanel14.setBackground(new java.awt.Color(204, 255, 255));
        jPanel14.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Sitting All.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel14, gridBagConstraints);

        sittingAllTxt.setEditable(false);
        sittingAllTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sittingAllTxt.setForeground(new java.awt.Color(0, 0, 153));
        sittingAllTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sittingAllTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(sittingAllTxt, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Mileage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel20, gridBagConstraints);

        mileageTxt.setEditable(false);
        mileageTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        mileageTxt.setForeground(new java.awt.Color(0, 0, 153));
        mileageTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mileageTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(mileageTxt, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Acc.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel24, gridBagConstraints);

        accomodationTxt.setEditable(false);
        accomodationTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        accomodationTxt.setForeground(new java.awt.Color(0, 0, 153));
        accomodationTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        accomodationTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(accomodationTxt, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Gross Pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel25, gridBagConstraints);

        grossPayTxt.setEditable(false);
        grossPayTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        grossPayTxt.setForeground(new java.awt.Color(0, 0, 153));
        grossPayTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        grossPayTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(grossPayTxt, gridBagConstraints);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("PAYE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel26, gridBagConstraints);

        payeTxt.setEditable(false);
        payeTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        payeTxt.setForeground(new java.awt.Color(0, 0, 153));
        payeTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        payeTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(payeTxt, gridBagConstraints);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Other");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel27, gridBagConstraints);

        otherTxt.setEditable(false);
        otherTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        otherTxt.setForeground(new java.awt.Color(0, 0, 153));
        otherTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        otherTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(otherTxt, gridBagConstraints);

        netPayTxt.setEditable(false);
        netPayTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        netPayTxt.setForeground(new java.awt.Color(0, 0, 153));
        netPayTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        netPayTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(netPayTxt, gridBagConstraints);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Net Pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel28, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jPanel14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel10, gridBagConstraints);

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jPanel2111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2111.setLayout(new java.awt.GridBagLayout());

        expenseDescTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2111.add(expenseDescTxt, gridBagConstraints);

        searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton21.setToolTipText("Search");
        searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton21ActionPerformed(evt);
            }
        });
        jPanel2111.add(searchButton21, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel2111, gridBagConstraints);

        jLabel15.setText("Expense Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel15.add(jLabel15, gridBagConstraints);

        jLabel16.setText("Gl Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jLabel16, gridBagConstraints);

        glCodeTxt.setEditable(false);
        glCodeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glCodeTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(glCodeTxt, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel10, gridBagConstraints);

        jLabel12.setText("Reason of Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(reasonOfPaymentTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel13.add(otherPamentsDate, gridBagConstraints);

        jLabel13.setText("Document No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel13.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(documentNoTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel13, gridBagConstraints);

        jLabel17.setText("PAYE Payee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jLabel17, gridBagConstraints);

        jPanel63.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel63.setMinimumSize(new java.awt.Dimension(84, 25));
        jPanel63.setPreferredSize(new java.awt.Dimension(59, 25));
        jPanel63.setLayout(new java.awt.GridBagLayout());

        dealerNameTxt2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(dealerNameTxt2, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton2.setToolTipText("Search patient name");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel63.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel63, gridBagConstraints);

        jPanel64.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel64.setMinimumSize(new java.awt.Dimension(84, 25));
        jPanel64.setPreferredSize(new java.awt.Dimension(59, 25));
        jPanel64.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel64.add(dealerNameTxt4, gridBagConstraints);

        searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton3.setToolTipText("Search patient name");
        searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel64.add(searchButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel64, gridBagConstraints);

        jLabel19.setText("Payee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jLabel19, gridBagConstraints);

        jLabel21.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jLabel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jPanel15, gridBagConstraints);

        jTabbedPane2.addTab("Board Payments", jPanel9);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane2, gridBagConstraints);

        setBounds(0, 0, 628, 513);
    }// </editor-fold>//GEN-END:initComponents

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        // Add your handling code here:
        biz.systempartners.reports.ImprestReporting comp = new biz.systempartners.reports.ImprestReporting(connectDB);
        //com.afrisoftech.accounting.ImprestReporting comp = new com.afrisoftech.accounting.VoucherApprintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_resetbtnActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog1.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        billTable.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0), billTable.getSelectedRow(), 0);
        billTable.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1), billTable.getSelectedRow(), 1);

        // jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);
        jSearchDialog1.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if (jTabbedPane2.getSelectedIndex() == 0) {

            if (creditorsBtn.isSelected()) {

                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where  activity ILIKE '%" + jTextField1111.getText() + "%' order by activity"));

            // jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where (payment_modes ='Payable' OR payment_modes = 'Both') and activity ILIKE '" + jTextField1111.getText() + "%' order by activity"));
            } else {

                if (imprestTypeCmbx.getSelectedItem().toString().contains("Imprest")) {

                    jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where activity ILIKE '" + imprestTypeCmbx.getSelectedItem().toString() + "%' order by activity"));

                } else {
                    jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where (category_class ilike 'pled' or category_class ilike 'ba') and activity ILIKE '%" + jTextField1111.getText() + "%' order by activity"));

                }
            }

        } else if (jTabbedPane2.getSelectedIndex() == 1) {
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where  activity ILIKE '%" + jTextField1111.getText() + "%' order by activity"));
        }

        // jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void cmboxMouseClicked() {
//jScrollPane14
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane13.getLocationOnScreen();
        jSearchDialog1.setSize(600, 200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
    }

    private void cmboxMouseClickedotherPayment() {
//jScrollPane14
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane14.getLocationOnScreen();
        jSearchDialog3.setSize(600, 200);
        jSearchDialog3.setLocation(point);
        jSearchDialog3.setVisible(true);
    }
    private void billTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billTableMouseClicked
        if (billTable.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();

        } else if ((billTable.getSelectedColumn() == 3) || (billTable.getSelectedColumn() == 4)) {

            kiwi.ui.DateChooser dateChooser = new kiwi.ui.DateChooser();

            dateChooser.setVisible(true);

        }else if (billTable.getSelectedColumn() == 2 && creditorsBtn.isSelected()){
            
            
            java.awt.Point point = this.imprestNumberTxt.getLocationOnScreen();

            lposearchdialog.setSize(400,200);

            lposearchdialog.setLocation(point);

            lposearchdialog.setVisible(true);
        }
// Add your handling code here:
    }//GEN-LAST:event_billTableMouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        javax.swing.JInternalFrame other = new com.afrisoftech.accounting.ActivitiesIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if (this.jTextField111.getCaretPosition() < 1) {
            System.out.print("Nothing");
        } else {
            if (creditorsBtn.isSelected()) {
             
              
                  jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,supplier_name as name from st_suppliers where supplier_name ILIKE '" + jTextField111.getText() + "%' order by supplier_name"));

                    jSearchScrollPane.setViewportView(jSearchTable); 
                
            }else if (jRadioButton1.isSelected()) {
             
              
                  jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,supplier_name as name from st_suppliers where supplier_name ILIKE '" + jTextField111.getText() + "%' order by supplier_name"));

                    jSearchScrollPane.setViewportView(jSearchTable); 
                
            } else {
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select employee_no, middle_name||' '|| last_name ||' '||first_name as name from master_file where employee_no ILIKE '" + jTextField111.getText() + "%' or first_name||' '||middle_name||' '||last_name ilike '" + jTextField111.getText() + "%' order by 2"));
                // jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select employee_no, first_name||' '||last_name as name from master_file where employee_no ILIKE '%" + jTextField111.getText() + "%' or first_name ilike '%" + jTextField111.getText() + "%' or last_name ilike '%" + jTextField111.getText() + "%' and employee_no not in (select dealer_code from ac_bills where surrender_amount=0)"));
                jSearchScrollPane.setViewportView(jSearchTable);
            }
            // System.out.println("Cannot sort out");

        }           // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
       
        
            this.paymentRequestBtn.setEnabled(true);
        dealerNameTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        dealerCodeTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        imprestTypeCmbx.setSelectedIndex(0);
        imprestNumberTxt.setText("");
        clearTaxPanel();
       
         
     
        
        //  this.populateTable1(jTextField9.getText());
        this.jSearchDialog.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    public void clear() {
        for (int k = 0; k < otherpaymentsTable.getRowCount(); k++) {
            for (int r = 0; r < otherpaymentsTable.getColumnCount(); r++) {
                otherpaymentsTable.getModel().setValueAt(null, k, r);
            }
        }
        expenseDescTxt.setText("");
        glCodeTxt.setText("");
        documentNoTxt.setText("");
        reasonOfPaymentTxt.setText("");
        sittingAllTxt.setText("0.00");
        mileageTxt.setText("0.00");
        accomodationTxt.setText("0.00");
        grossPayTxt.setText("0.00");
        payeTxt.setText("0.00");
        otherTxt.setText("0.00");
        netPayTxt.setText("0.00");
    }
    private void jTextField111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField111ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
       
        searchButton2Clicked();
        this.paymentRequestBtn.setEnabled(true);

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt.getLocationOnScreen();

        jSearchDialog.setSize(600, 200);

        jSearchDialog.setLocation(point);

        jSearchDialog.setVisible(true);
    }
     private void searchButton4Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt2.getLocationOnScreen();

        jSearchDialog5.setSize(300, 200);

        jSearchDialog5.setLocation(point);

        jSearchDialog5.setVisible(true);
    }
    private void searchButton3Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt1.getLocationOnScreen();

        jSearchDialog4.setSize(600, 200);

        jSearchDialog4.setLocation(point);

        jSearchDialog4.setVisible(true);
    }
    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton43ActionPerformed

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
        imprestNumberTxt.setText("");
        imprestHolderCmbx.setSelectedIndex(0);
        imprestTypeCmbx.setSelectedIndex(0);
        dealerCodeTxt.setText(null);
        dealerNameTxt.setText(null);
        heldBalTxt.setText("0.00");
        clearTaxPanel();
        for (int k = 0; k < billTable.getRowCount(); k++) {
            for (int r = 0; r < billTable.getColumnCount(); r++) {
                billTable.getModel().setValueAt(null, k, r);
            }
        } // Add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        int rows2Delete = billTable.getSelectedRowCount();

        int[] selectedRows = billTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) billTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) billTable.getModel();

                defTableModel.removeRow(billTable.getSelectedRow());

            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton53ActionPerformed
    private void clearTaxPanel() {
         taLsoChk.setSelected(false);
         retentionAmountChk.setSelected(false);
         withHoldChk.setSelected(false);
         lpoAmountTxt.setText("0.00");
         netAmountPayable.setText("0.00");
//        withHoldTaxTxt.setText("0.00");
//        retentionAmountTxt.setText("0.00");
//        vatxt.setText("0.00");
        
//        
//        retentionPercentageTxt.setText("0.00");
//        taxPercentageTxt.setText("0.00");
    }
    private void paymentRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentRequestBtnActionPerformed
        if (dealerNameTxt.getText().length() > 1) {
            java.util.Date periodFrom = null;
            java.util.Date periodTo = null;
              Boolean errorInvoice = false;
             // Boolean errorLso = false;
            try {
                
                //java.sql.PreparedStatement pstGathorobo = connectDB.prepareStatement("select * from ac_accounts_payable where dealer='"+dealerNameTxt.getText().replace("'", "")+"' and invoice_no='"+billTable.getValueAt(0,2).toString()+"'");
                 
                java.sql.Statement stmtf2 = connectDB.createStatement();
                java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_accounts_payable where dealer='"+dealerNameTxt.getText().replace("'", "")+"' and invoice_no='"+billTable.getValueAt(0,2).toString()+"'");
                while (rsetf2.next()) {
                    errorInvoice=true;
                }

                java.sql.Statement stmtf = connectDB.createStatement();
                java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
                while (rsetf.next()) {
                    periodFrom = rsetf.getDate(1);
                    periodTo = rsetf.getDate(2);
                }

            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());

            }

            if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set  Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } else if (errorInvoice==true) {
             javax.swing.JOptionPane.showMessageDialog(this, "The invoice is already in the system".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } 
            
            else {
                if (billTable.isEditing()) {
                    billTable.getCellEditor().stopCellEditing();
                }
                java.util.Calendar calendar = java.util.Calendar.getInstance();

                long dateNow = calendar.getTimeInMillis();

                java.sql.Date datenowSql = new java.sql.Date(dateNow);
                try {
                    String Stock = null;
                    String voucNo = null;
                    String accountCode = null;
                    String accountCode1 = null;
                    String TransNo = null;
                    String glType = null;
                    Boolean samuel = true;
                  
                    double columnSix = 0.00;
                    // String glType = null;
                    String userName = null;
                    java.sql.Date invDate = null;
                    java.sql.Date dateTo = null;
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    try {
                        //if making requisition for supplier/creditor/accrual invoice payments
                        if (creditorsBtn.isSelected()) {

                            java.sql.Statement pst1 = connectDB.createStatement();
                            java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                            while (rs1.next()) {
                                accountCode = rs1.getObject(1).toString();
                                glType = rs1.getObject(2).toString();
                            }
                            java.sql.Statement ps = connectDB.createStatement();
                            java.sql.ResultSet rs2 = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
                            while (rs2.next()) {
                                TransNo = rs2.getObject(1).toString();
                                userName = rs2.getObject(2).toString();
                            }
                            java.sql.Statement pst2 = connectDB.createStatement();
                            java.sql.ResultSet rs = pst2.executeQuery("select 'PYMT_REQ'||lpad(nextval('invoice_no_seq')::text,7,0::text)");
                            while (rs.next()) {
                                voucNo = rs.getObject(1).toString();
                            }
                            //  if (creditorsBtn.isSelected()) {
                            for (int i = 0; i < billTable.getRowCount(); i++) {
                                if (billTable.getModel().getValueAt(i, 3) != null) {
                                    java.sql.Statement pst22 = connectDB.createStatement();
                                    java.sql.ResultSet rs22 = pst22.executeQuery("select '" + billTable.getValueAt(i, 3).toString() + "'::date,'" + billTable.getValueAt(i, 4).toString() + "'::date");
                                    while (rs22.next()) {
                                        invDate = rs22.getDate(1);
                                        dateTo = rs22.getDate(2);
                                    }
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                    pstmt2.setObject(1, billTable.getValueAt(i, 1).toString());
                                    pstmt2.setObject(2, billTable.getValueAt(i, 0).toString());
                                    pstmt2.setString(3, "");
                                    if (dealerNameTxt.getText() == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "You must Enter Payee!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {
                                        pstmt2.setObject(4, dealerNameTxt.getText().toString());
                                    }
                                    pstmt2.setObject(5, billTable.getValueAt(i, 5).toString());
                                    pstmt2.setObject(6, "");
                                    pstmt2.setObject(7, dealerNameTxt.getText().toString());
                                    pstmt2.setString(8, "");
                                    pstmt2.setString(9, "");
                                    pstmt2.setString(10, "");
                                    pstmt2.setString(11, imprestNumberTxt.getText().toString());
                                    pstmt2.setString(12, "");
                                    pstmt2.setString(13, "");
                                    pstmt2.setString(14, billTable.getValueAt(i, 0).toString());
                                    pstmt2.setString(15, "Raise Invoice");
                                    pstmt2.setDouble(17, 0.00);
                                    if (billTable.getValueAt(i, 6) == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "You must Enter Amount!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {
                                        pstmt2.setDouble(16, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                    }
                                    pstmt2.setDate(18, datenowSql);
                                    pstmt2.setString(19, TransNo);
                                    pstmt2.setBoolean(20, false);
                                    pstmt2.setBoolean(21, false);
                                    pstmt2.setBoolean(22, false);
                                    pstmt2.setString(23, userName);
                                    pstmt2.executeUpdate();

                                    //Taxed amount.........
                                    if (java.lang.Double.valueOf(netAmountPayable.getText().toString().replace(",","" )) > 0) {
                                        if (java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()) > 0) {
                                            java.sql.PreparedStatement pstmtNet = connectDB.prepareStatement("insert into ac_accounts_payable "
                                            + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                                    pstmtNet.setObject(1, accountCode);
                                    pstmtNet.setObject(2, dealerNameTxt.getText().toString());
                                    pstmtNet.setObject(3, billTable.getValueAt(i, 0));
                                    pstmtNet.setString(4, "");
                                    pstmtNet.setObject(5, dealerNameTxt.getText().toString());
                                    pstmtNet.setString(6, "\n Witholding Tax - invoice no: "+billTable.getValueAt(i, 2)+" from "+dealerNameTxt.getText().toString());
                                    //pstmtNet.setString(6, billTable.getValueAt(i, 5).toString().toUpperCase());
                                    pstmtNet.setString(7, "");
                                    pstmtNet.setString(8, "");
                                    pstmtNet.setString(9, "");
                                    pstmtNet.setString(10, "");
                                    pstmtNet.setString(11, TransNo);
                                    pstmtNet.setString(12, "Witholding Tax");
                                    pstmtNet.setDouble(14, 0.00);
                                   
                                        pstmtNet.setDouble(13, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                        pstmtNet.setDouble(25, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                    
                                    pstmtNet.setDate(15,datenowSql);
                                    pstmtNet.setObject(16, billTable.getValueAt(i, 2));
                                    pstmtNet.setString(17, glType);
                                    pstmtNet.setBoolean(18, false);
                                    pstmtNet.setBoolean(19, false);
                                    pstmtNet.setString(20, userName);
                                    pstmtNet.setString(21, "");
                                    if (billTable.getValueAt(i, 4) == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {

                                        pstmtNet.setObject(22, dateTo);
                                    }
                                    pstmtNet.setDate(23, invDate);
                                    pstmtNet.setDouble(24, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));
                                    pstmtNet.setDouble(26, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));

                                    pstmtNet.setObject(27, null);
                                    pstmtNet.setObject(28, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                    pstmtNet.setObject(29, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                    pstmtNet.setObject(30, 0.0);
                                    pstmtNet.setObject(31, 0.0);
                                    if (imprestNumberTxt.getText().length() < 0) {
                                        pstmtNet.setString(32, "Contract_Based");
                                    } else {
                                        pstmtNet.setString(32, imprestNumberTxt.getText().toString());
                                    }
                                    pstmtNet.executeUpdate();
                                    
                                    
                                    //fgfghjh        
                                            java.sql.Statement pstHeld = connectDB.createStatement();
                                            java.sql.ResultSet rsHeld = pstHeld.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                                            while (rsHeld.next()) {
                                                accountCode = rsHeld.getObject(1).toString();
                                                glType = rsHeld.getObject(2).toString();
                                            }
                                           // System.out.println("kuk "+withHeldaccountCode);
                                            java.sql.PreparedStatement pstmtHold = connectDB.prepareStatement("insert into ac_accounts_payable "
                                                    + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                                            pstmtHold.setObject(1, accountCode);
                                            pstmtHold.setObject(2, dealerNameTxt1.getText());
                                            pstmtHold.setObject(3, billTable.getValueAt(i, 0));
                                            pstmtHold.setString(4, "");
                                            pstmtHold.setObject(5, dealerNameTxt.getText().toString());
                                            pstmtHold.setString(6, "\n Witholding Tax - invoice no: "+billTable.getValueAt(i, 2)+" from "+dealerNameTxt.getText().toString());
                                            pstmtHold.setString(7, "");
                                            pstmtHold.setString(8, "");
                                            pstmtHold.setString(9, "");
                                            pstmtHold.setString(10, "");
                                            pstmtHold.setString(11, TransNo);
                                            pstmtHold.setString(12, "Witholding Tax");
                                            pstmtHold.setDouble(14, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                            pstmtHold.setDouble(25, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                            pstmtHold.setDouble(13, 0.00);
                                            pstmtHold.setDate(15,datenowSql);
                                            pstmtHold.setObject(16,"WT:"+ billTable.getValueAt(i, 2));
                                            pstmtHold.setString(17, glType);
                                            pstmtHold.setBoolean(18, false);
                                            pstmtHold.setBoolean(19, false);
                                            pstmtHold.setString(20, userName);
                                            pstmtHold.setString(21, "");
                                            if (billTable.getValueAt(i, 4) == null) {
                                                javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                            } else {
                                                //    pstmtHold.setDate(22,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTable1.getValueAt(i,4).toString())));
                                                pstmtHold.setObject(22, dateTo);
                                            }
                                            pstmtHold.setDate(23, invDate);
                                            pstmtHold.setDouble(24,0.00);
                                            pstmtHold.setDouble(26,0.00);

                                            pstmtHold.setObject(27, null);
                                            pstmtHold.setObject(28, 0.0);
                                            pstmtHold.setObject(29, 0.0);
                                            pstmtHold.setObject(30, 0.0);
                                            pstmtHold.setObject(31, 0.0);
                                            if (imprestNumberTxt.getText().length() < 0) {
                                                pstmtHold.setString(32, "Contract_Based");
                                            } else {
                                                pstmtHold.setString(32, imprestNumberTxt.getText().toString());
                                            }
                                            pstmtHold.executeUpdate();
                                             java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                                pstmt7.setString(1, dealerNameTxt1.getText().toString());
                                                pstmt7.setObject(2, "WT:"+billTable.getValueAt(i, 2));
                                                pstmt7.executeUpdate();
                                            
                                        }
                                        if(vatchck.isSelected()){
                                         java.sql.Statement pstHeld = connectDB.createStatement();
                                            java.sql.ResultSet rsHeld = pstHeld.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                                            while (rsHeld.next()) {
                                                accountCode = rsHeld.getObject(1).toString();
                                                glType = rsHeld.getObject(2).toString();
                                            }
                                            //System.out.println("kuk "+withHeldaccountCode);
                                            java.sql.PreparedStatement pstmtHold = connectDB.prepareStatement("insert into ac_accounts_payable "
                                                    + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                                            pstmtHold.setObject(1, accountCode);
                                            pstmtHold.setObject(2, dealerNameTxt3.getText());
                                            pstmtHold.setObject(3, billTable.getValueAt(i, 0));
                                            pstmtHold.setString(4, "");
                                            pstmtHold.setObject(5, dealerNameTxt.getText().toString());
                                            pstmtHold.setString(6, "\n V.A.T - invoice no: "+billTable.getValueAt(i, 2)+" from "+dealerNameTxt.getText().toString());
                                            pstmtHold.setString(7, "");
                                            pstmtHold.setString(8, "");
                                            pstmtHold.setString(9, "");
                                            pstmtHold.setString(10, "");
                                            pstmtHold.setString(11, TransNo);
                                            pstmtHold.setString(12, "Witholding Tax");
                                            pstmtHold.setDouble(14, java.lang.Double.valueOf(vatxt.getText().toString()));
                                            pstmtHold.setDouble(25, java.lang.Double.valueOf(vatxt.getText().toString()));
                                            pstmtHold.setDouble(13, 0.00);
                                            pstmtHold.setDate(15,datenowSql);
                                            pstmtHold.setObject(16,"VAT:"+ billTable.getValueAt(i, 2));
                                            pstmtHold.setString(17, glType);
                                            pstmtHold.setBoolean(18, false);
                                            pstmtHold.setBoolean(19, false);
                                            pstmtHold.setString(20, userName);
                                            pstmtHold.setString(21, "");
                                            if (billTable.getValueAt(i, 4) == null) {
                                                javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                            } else {
                                                //    pstmtHold.setDate(22,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTable1.getValueAt(i,4).toString())));
                                                pstmtHold.setObject(22, dateTo);
                                            }
                                            pstmtHold.setDate(23, invDate);
                                            pstmtHold.setDouble(24, 0.00);
                                            pstmtHold.setDouble(26, 0.00);

                                            pstmtHold.setObject(27, null);
                                            pstmtHold.setObject(28, 0.0);
                                            pstmtHold.setObject(29, 0.0);
                                            pstmtHold.setObject(30, 0.0);
                                            pstmtHold.setObject(31, 0.0);
                                            if (imprestNumberTxt.getText().length() < 0) {
                                                pstmtHold.setString(32, "Contract_Based");
                                            } else {
                                                pstmtHold.setString(32, imprestNumberTxt.getText().toString());
                                            }
                                            pstmtHold.executeUpdate();
                                            
                                            java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                                pstmt7.setString(1, dealerNameTxt3.getText().toString());
                                                pstmt7.setObject(2, "VAT:"+billTable.getValueAt(i, 2));
                                                pstmt7.executeUpdate();
                                            
                                            java.sql.PreparedStatement pstmtNet1 = connectDB.prepareStatement("insert into ac_accounts_payable "
                                            + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                                    pstmtNet1.setObject(1, accountCode);
                                    pstmtNet1.setObject(2, dealerNameTxt.getText().toString());
                                    pstmtNet1.setObject(3, billTable.getValueAt(i, 0));
                                    pstmtNet1.setString(4, "");
                                    pstmtNet1.setObject(5, dealerNameTxt.getText().toString());
                                    pstmtNet1.setString(6, "\n V.A.T - invoice no: "+billTable.getValueAt(i, 2)+" from "+dealerNameTxt.getText().toString());
                                    //pstmtNet.setString(6, billTable.getValueAt(i, 5).toString().toUpperCase());
                                    pstmtNet1.setString(7, "");
                                    pstmtNet1.setString(8, "");
                                    pstmtNet1.setString(9, "");
                                    pstmtNet1.setString(10, "");
                                    pstmtNet1.setString(11, TransNo);
                                    pstmtNet1.setString(12, "Witholding Tax");
                                    pstmtNet1.setDouble(14, 0.00);
                                   
                                        pstmtNet1.setDouble(13, java.lang.Double.valueOf(vatxt.getText().toString()));
                                        pstmtNet1.setDouble(25, java.lang.Double.valueOf(vatxt.getText().toString()));
                                    
                                    pstmtNet1.setDate(15,datenowSql);
                                    pstmtNet1.setObject(16, billTable.getValueAt(i, 2));
                                    pstmtNet1.setString(17, glType);
                                    pstmtNet1.setBoolean(18, false);
                                    pstmtNet1.setBoolean(19, false);
                                    pstmtNet1.setString(20, userName);
                                    pstmtNet1.setString(21, "");
                                    if (billTable.getValueAt(i, 4) == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {

                                        pstmtNet1.setObject(22, dateTo);
                                    }
                                    pstmtNet1.setDate(23, invDate);
                                    pstmtNet1.setDouble(24, java.lang.Double.valueOf(vatxt.getText().toString()));
                                    pstmtNet1.setDouble(26, java.lang.Double.valueOf(vatxt.getText().toString()));

                                    pstmtNet1.setObject(27, null);
                                    pstmtNet1.setObject(28, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                    pstmtNet1.setObject(29, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                    pstmtNet1.setObject(30,0.00);
                                    pstmtNet1.setObject(31, 0.0);
                                    if (imprestNumberTxt.getText().length() < 0) {
                                        pstmtNet1.setString(32, "Contract_Based");
                                    } else {
                                        pstmtNet1.setString(32, imprestNumberTxt.getText().toString());
                                    }
                                    pstmtNet1.executeUpdate();
                                  }
                                        //if (java.lang.Double.valueOf(retentionAmountTxt.getText().toString()) > 0) {
                                        if (retentionAmountChk.isSelected()){
                                       java.sql.PreparedStatement pstmtNet = connectDB.prepareStatement("insert into ac_accounts_payable "
                                            + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                                    pstmtNet.setObject(1, accountCode);
                                    pstmtNet.setObject(2, dealerNameTxt.getText().toString());
                                    pstmtNet.setObject(3, billTable.getValueAt(i, 0));
                                    pstmtNet.setString(4, "");
                                    pstmtNet.setObject(5, dealerNameTxt.getText().toString());
                                    pstmtNet.setString(6, "\nRetention - invoice no:"+billTable.getValueAt(i, 2));
                                    pstmtNet.setString(7, "");
                                    pstmtNet.setString(8, "");
                                    pstmtNet.setString(9, "");
                                    pstmtNet.setString(10, "");
                                    pstmtNet.setString(11, TransNo);
                                    pstmtNet.setString(12, "Retention");
                                    pstmtNet.setDouble(14, 0.00);
                                   
                                    pstmtNet.setDouble(13, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                    pstmtNet.setDouble(25, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                    
                                    pstmtNet.setDate(15,datenowSql);
                                    pstmtNet.setObject(16, billTable.getValueAt(i, 2));
                                    pstmtNet.setString(17, glType);
                                    pstmtNet.setBoolean(18, false);
                                    pstmtNet.setBoolean(19, false);
                                    pstmtNet.setString(20, userName);
                                    pstmtNet.setString(21, "");
                                    if (billTable.getValueAt(i, 4) == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {

                                        pstmtNet.setObject(22, dateTo);
                                    }
                                    pstmtNet.setDate(23, invDate);
                                   pstmtNet.setDouble(24, java.lang.Double.valueOf(vatxt.getText().toString()));
                                   pstmtNet.setDouble(26, java.lang.Double.valueOf(vatxt.getText().toString()));

                                    pstmtNet.setObject(27, null);
                                    pstmtNet.setObject(28, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                    pstmtNet.setObject(29, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                    pstmtNet.setObject(30, 0.0);
                                    pstmtNet.setObject(31, 0.0);
                                    if (imprestNumberTxt.getText().length() < 0) {
                                        pstmtNet.setString(32, "Contract_Based");
                                    } else {
                                        pstmtNet.setString(32, imprestNumberTxt.getText().toString());
                                    }
                                    pstmtNet.executeUpdate();     
                                            
                               //trhree             
                                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_accounts_payable "
                                                    + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                                            pstmt1.setObject(1, accountCode);
                                            pstmt1.setObject(2, dealerNameTxt.getText().toString());
                                            pstmt1.setObject(3, billTable.getValueAt(i, 0));
                                            pstmt1.setString(4, "");
                                            pstmt1.setObject(5, dealerNameTxt.getText().toString());
                                            pstmt1.setString(6, "Retention for invoice no:"+billTable.getValueAt(i, 2));
                                            pstmt1.setString(7, "");
                                            pstmt1.setString(8, "");
                                            pstmt1.setString(9, "");
                                            pstmt1.setString(10, "");
                                            pstmt1.setString(11, TransNo);
                                            pstmt1.setString(12, "Raise Retention");
                                            pstmt1.setDouble(13, 0.00);
                                            pstmt1.setDouble(25, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                            pstmt1.setDouble(14, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                            pstmt1.setDate(15,datenowSql);
                                            pstmt1.setObject(16, "RT:"+billTable.getValueAt(i, 2));
                                            pstmt1.setString(17, glType);
                                            pstmt1.setBoolean(18, false);
                                            pstmt1.setBoolean(19, false);
                                            pstmt1.setString(20, userName);
                                            pstmt1.setString(21, "");
                                            if (billTable.getValueAt(i, 4) == null) {
                                                javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                            } else {

                                                pstmt1.setObject(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(retentionDateDue.getDate()));
                                            }
                                            pstmt1.setDate(23, invDate);
                                            pstmt1.setDouble(24, 0.00);
                                            pstmt1.setDouble(26, 0.00);

                                            pstmt1.setObject(27, null);
                                            pstmt1.setObject(28, 0.0);
                                            pstmt1.setObject(29, 0.0);
                                            pstmt1.setObject(30, 0.0);
                                            pstmt1.setObject(31, 0.0);
                                            if (imprestNumberTxt.getText().length() < 0) {
                                                pstmt1.setString(32, "Contract_Based");
                                            } else {
                                                pstmt1.setString(32, imprestNumberTxt.getText().toString());
                                            }
                                            pstmt1.executeUpdate();
                                            
                                             java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                                pstmt7.setString(1, dealerNameTxt.getText().toString());
                                                pstmt7.setObject(2, "RT:"+billTable.getValueAt(i, 2));
                                                pstmt7.executeUpdate();
                                        }
                                    }

                                    java.sql.PreparedStatement pstmtNet = connectDB.prepareStatement("insert into ac_accounts_payable "
                                            + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                                    pstmtNet.setObject(1, accountCode);
                                    pstmtNet.setObject(2, dealerNameTxt.getText().toString());
                                    pstmtNet.setObject(3, billTable.getValueAt(i, 0));
                                    pstmtNet.setString(4, "");
                                    pstmtNet.setObject(5, dealerNameTxt.getText().toString());
                                    pstmtNet.setString(6, billTable.getValueAt(i, 5).toString().toUpperCase());
                                    pstmtNet.setString(7, "");
                                    pstmtNet.setString(8, "");
                                    pstmtNet.setString(9, "");
                                    pstmtNet.setString(10, "");
                                    pstmtNet.setString(11, TransNo);
                                    pstmtNet.setString(12, "Raise Invoice");
                                    pstmtNet.setDouble(13, 0.00);
                                  
                                        pstmtNet.setDouble(14, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                        pstmtNet.setDouble(25, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                    
                                    pstmtNet.setDate(15,datenowSql);
                                    pstmtNet.setObject(16, billTable.getValueAt(i, 2));
                                    pstmtNet.setString(17, glType);
                                    pstmtNet.setBoolean(18, false);
                                    pstmtNet.setBoolean(19, false);
                                    pstmtNet.setString(20, userName);
                                    pstmtNet.setString(21, "");
                                    if (billTable.getValueAt(i, 4) == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {

                                        pstmtNet.setObject(22, dateTo);
                                    }
                                    pstmtNet.setDate(23, invDate);
                                    pstmtNet.setDouble(24, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));
                                    pstmtNet.setDouble(26, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));

                                    pstmtNet.setObject(27, null);
                                    pstmtNet.setObject(28, java.lang.Double.valueOf(retentionAmountTxt.getText().toString()));
                                    pstmtNet.setObject(29, java.lang.Double.valueOf(withHoldTaxTxt.getText().toString()));
                                    pstmtNet.setObject(30, 0.0);
                                    pstmtNet.setObject(31, 0.0);
                                    if (imprestNumberTxt.getText().length() < 0) {
                                        pstmtNet.setString(32, "Contract_Based");
                                    } else {
                                        pstmtNet.setString(32, imprestNumberTxt.getText().toString());
                                    }
                                    pstmtNet.executeUpdate();

                                    java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                    pstmt7.setString(1, dealerNameTxt.getText().toString());
                                    pstmt7.setObject(2, billTable.getValueAt(i, 2));
                                    pstmt7.executeUpdate();

                                    PreparedStatement upd = connectDB.prepareStatement("UPDATE st_orders set received=true WHERE order_no='"+imprestNumberTxt.getText()+"' and item='"+billTable.getValueAt(i, 0)+"'");
                                    upd.executeUpdate();
                                }
                                
                            }

                            
                            //  If requesting imprest payments
                        } else if (imprestBtn.isSelected()) {
                            columnSix = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(billTable, 6);
                            java.sql.Statement psy = connectDB.createStatement();
                            java.sql.ResultSet rst = psy.executeQuery("select 'IMP'||nextval('imprest')");
                            while (rst.next()) {
                                rst.getObject(1).toString();
                                voucNo = rst.getObject(1).toString();
                            }

                            java.sql.Statement pst1 = connectDB.createStatement();
                            java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity ilike '" + imprestTypeCmbx.getSelectedItem().toString() + "%'");
                            while (rs1.next()) {
                                accountCode = rs1.getObject(1).toString();
                                glType = rs1.getObject(2).toString();
                            }
//                            java.sql.Statement ps = connectDB.createStatement();
//                            java.sql.ResultSet rs2 = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
//                            while (rs2.next()) {
//                                TransNo = rs2.getObject(1).toString();
//                                userName = rs2.getObject(2).toString();
//                            }

                            for (int i = 0; i < billTable.getRowCount(); i++) {
                                if (billTable.getModel().getValueAt(i, 0) != null) {
                                    java.sql.Statement pst22 = connectDB.createStatement();
                                    java.sql.ResultSet rs22 = pst22.executeQuery("select '" + billTable.getValueAt(i, 3).toString() + "'::date,'" + billTable.getValueAt(i, 4).toString() + "'::date");
                                    while (rs22.next()) {
                                        invDate = rs22.getDate(1);
                                        dateTo = rs22.getDate(2);
                                    }
                                    if (imprestTypeCmbx.getSelectedItem().toString().equalsIgnoreCase("Standing Imprest")) {
                                        java.sql.Statement pst2 = connectDB.createStatement();
                                        java.sql.ResultSet rs = pst2.executeQuery("select 'S_IMPREST_REQ'||lpad(nextval('imprest_requisition_no')::text,7,0::text)");
                                        while (rs.next()) {
                                            voucNo = rs.getObject(1).toString();
                                        }
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");//added
                                        pstmt1.setString(1, dealerNameTxt.getText().toString().toUpperCase());
                                        pstmt1.setObject(2, billTable.getValueAt(i, 0));
                                        pstmt1.setObject(3, billTable.getValueAt(i, 1));
                                        pstmt1.setObject(4, voucNo);
                                        pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                        pstmt1.setObject(6, billTable.getValueAt(i, 5).toString().toUpperCase());
                                        pstmt1.setObject(7, billTable.getValueAt(i, 4));
                                        pstmt1.setDouble(8, 0.00);
                                        pstmt1.setDouble(9, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                        pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt1.setObject(11, "");
                                        pstmt1.setDouble(12, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));
                                        pstmt1.setString(13, dealerCodeTxt.getText());
                                        pstmt1.setBoolean(14, false);
                                        pstmt1.setBoolean(15, false);
                                        pstmt1.setObject(16, billTable.getValueAt(i, 2).toString());
                                        pstmt1.setBoolean(17, false);
                                        pstmt1.setObject(18, null);
                                        pstmt1.setObject(19, null);
                                        pstmt1.setBoolean(20, false);
                                        pstmt1.setString(21, userName);
                                        pstmt1.executeUpdate();

                                        java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                        pstmt7.setString(1, dealerNameTxt.getText().toString());
                                        pstmt7.setObject(2, voucNo);
                                        pstmt7.executeUpdate();

                                    } else if (imprestTypeCmbx.getSelectedItem().toString().equalsIgnoreCase("Temporary Imprest")) {
                                        if (!(java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()) > 5000.00) && imprestHolderCmbx.getSelectedIndex() != 0 && java.lang.Double.valueOf(heldBalTxt.getText().toString()) >= columnSix) {
                                            java.sql.Statement pst222 = connectDB.createStatement();
                                            java.sql.ResultSet rs222 = pst222.executeQuery("select 'PETT_REQ'||lpad(nextval('pet_voucher_no')::text,7,0::text)");
                                            while (rs222.next()) {
                                                voucNo = rs222.getObject(1).toString();
                                            }
                                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_petty_cash_requisition values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                            pstmt1.setString(1, imprestHolderCmbx.getSelectedItem().toString().toUpperCase());
                                            pstmt1.setObject(2, dealerNameTxt.getText().toUpperCase());
                                            pstmt1.setObject(3, deptNameCmbx.getSelectedItem().toString());
                                            pstmt1.setObject(4, imprestNumberTxt.getText());
                                            pstmt1.setDouble(5, 0.00);
                                            pstmt1.setDouble(6, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                            pstmt1.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                            pstmt1.setObject(8, "PENDING");
                                            pstmt1.setString(9, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                                            pstmt1.setBoolean(10, false);
                                            pstmt1.setObject(11, voucNo);
                                            pstmt1.setBoolean(12, false);
                                            pstmt1.setString(13, accountCode);
                                            pstmt1.setObject(14, imprestTypeCmbx.getSelectedItem());
                                            pstmt1.setDouble(15, 1);
                                            pstmt1.setString(16, dealerCodeTxt.getText());
                                            pstmt1.setObject(17, billTable.getValueAt(i, 2).toString());
                                            pstmt1.setObject(18, false);
                                            pstmt1.setObject(19, false);
                                            pstmt1.setObject(20, false);
                                            pstmt1.setObject(21, billTable.getValueAt(i, 5).toString());
                                            pstmt1.setDate(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateTo));
                                            pstmt1.setBoolean(23, false);
                                            pstmt1.executeUpdate();

                                            java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user,?,?,?)");
                                            pstmt7.setString(1, dealerNameTxt.getText().toString());
                                            pstmt7.setObject(2, voucNo);
                                            pstmt7.setObject(3, null);
                                            pstmt7.setObject(4, null);
                                            pstmt7.setObject(5, voucNo);
                                            pstmt7.executeUpdate();

//                                            java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, "
//                                                    + "particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?)");
//                                            //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
//                                            pstmtss.setObject(1, voucNo);
//                                            pstmtss.setObject(2, dealerNameTxt.getText().toUpperCase());
//                                            pstmtss.setObject(3, "-");
////                             if(lpoTxt1.getText().contains("DIR_PUR")){
////                                 pstmtss.setObject(4, "Being Payment to the Above "+SupplierTxt1.getText()+" for "+orderPaymentCommitTable1.getValueAt(0, 4).toString()+" as per GRN,Acceptance form and Invoices Attached");
////                                    pstmtss.setObject(5,"Direct Purchase");
////                             }else{
//                                            pstmtss.setObject(4, "Being payment of the above for " + billTable.getValueAt(0, 5).toString());
//                                            pstmtss.setObject(5, "");
//                                            // }
//                                            pstmtss.setObject(6, billTable.getValueAt(0, 2).toString());
//                                            pstmtss.setDouble(7, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
//                                            pstmtss.setDouble(8, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
//                                            pstmtss.setObject(9, 0);
//                                            pstmtss.setDouble(10, 0);
//                                            pstmtss.setDouble(11, 0);
//                                            pstmtss.setDouble(12, 0);
//                                            pstmtss.setDouble(13, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
//                                            pstmtss.setDouble(14, 0);
//                                            pstmtss.setObject(15, userName);
//
//                                            pstmtss.executeUpdate();
//
//                                            com.afrisoftech.votebook.PettyCashVoucherPdf policy = new com.afrisoftech.votebook.PettyCashVoucherPdf();
//
//                                            policy.PettyCashVoucherPdf(connectDB, voucNo);

                                            System.out.println("supposed to print a voucher");
                                        } else if (!(java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()) < 5000.00) && imprestHolderCmbx.getSelectedIndex() == 0) {

                                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");//added
                                            java.sql.Statement pst2 = connectDB.createStatement();
                                            java.sql.ResultSet rs = pst2.executeQuery("select 'T_IMPREST_REQ'||lpad(nextval('imprest_requisition_no')::text,7,0::text)");
                                            while (rs.next()) {
                                                voucNo = rs.getObject(1).toString();
                                            }
                                            pstmt1.setString(1, dealerNameTxt.getText().toString().toUpperCase());
                                            pstmt1.setObject(2, billTable.getValueAt(i, 0));
                                            pstmt1.setObject(3, billTable.getValueAt(i, 1));
                                            pstmt1.setObject(4, voucNo);
                                            pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                            pstmt1.setObject(6, billTable.getValueAt(i, 5).toString().toUpperCase());
                                            pstmt1.setObject(7, billTable.getValueAt(i, 4));
                                            pstmt1.setDouble(8, 0.00);
                                            pstmt1.setDouble(9, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                            pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                            pstmt1.setObject(11, "");
                                            pstmt1.setDouble(12, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));
                                            pstmt1.setString(13, dealerCodeTxt.getText());
                                            pstmt1.setBoolean(14, false);
                                            pstmt1.setBoolean(15, false);
                                            pstmt1.setObject(16, billTable.getValueAt(i, 2).toString());
                                           pstmt1.setBoolean(17, false);
                                        pstmt1.setObject(18, null);
                                        pstmt1.setObject(19, null);
                                        pstmt1.setBoolean(20, false);
                                        pstmt1.setString(21, userName);
                                            pstmt1.executeUpdate();

                                            java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                            pstmt7.setString(1, dealerNameTxt.getText().toString());
                                            pstmt7.setObject(2, voucNo);
                                            pstmt7.executeUpdate();

                                            samuel = true;

                                        } else {
                                            System.out.println(samuel + " Here 1");
                                            samuel = false;
                                            javax.swing.JOptionPane.showMessageDialog(this, "Amount less than 5000 you must select the standing Imprest Holder\n and diselect when amount is greater than 5000.", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                            System.out.println(samuel + " Here 1");
                                        }
                                        //SALARY ADVANCE AND PERSONAL CLAIMS
                                    } else if (imprestTypeCmbx.getSelectedItem().toString().equalsIgnoreCase("Personal Claims") || imprestTypeCmbx.getSelectedItem().toString().equalsIgnoreCase("Salary Advance")) {
                                        //Capture requisition for personal claims less that 5000

                                        if (!(java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()) > 5000.00) && imprestHolderCmbx.getSelectedIndex() != 0 && java.lang.Double.valueOf(heldBalTxt.getText().toString()) >= columnSix) {
                                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_petty_cash_requisition values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                            java.sql.Statement pst222 = connectDB.createStatement();
                                            if (imprestTypeCmbx.getSelectedItem() == "Personal Claims") {
                                                java.sql.ResultSet rs222 = pst222.executeQuery("select 'PERS_REQ'||lpad(nextval('pet_voucher_no')::text,7,0::text)");
                                                while (rs222.next()) {
                                                    voucNo = rs222.getObject(1).toString();//
                                                    pstmt1.setString(13, billTable.getValueAt(i, 1).toString());
                                                    pstmt1.setObject(19, false);
                                                    pstmt1.setBoolean(25, false);
                                                    pstmt1.setString(26, "");
                                                }
                                            } else if (imprestTypeCmbx.getSelectedItem() == "Salary Advance") {
                                                java.sql.ResultSet rs222 = pst222.executeQuery("select 'PETT_ADV'||lpad(nextval('pet_voucher_no')::text,7,0::text)");
                                                while (rs222.next()) {
                                                    voucNo = rs222.getObject(1).toString();
                                                    pstmt1.setString(13, accountCode);
                                                    pstmt1.setObject(19, true);
                                                    pstmt1.setBoolean(25, true);
                                                    pstmt1.setString(26, voucNo);
                                                }
                                            }

                                            pstmt1.setString(1, imprestHolderCmbx.getSelectedItem().toString().toUpperCase());
                                            pstmt1.setObject(2, dealerNameTxt.getText().toUpperCase());
                                            pstmt1.setObject(3, deptNameCmbx.getSelectedItem().toString());
                                            pstmt1.setObject(4, imprestNumberTxt.getText());
                                            pstmt1.setDouble(5, 0.00);
                                            pstmt1.setDouble(6, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                            pstmt1.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                            pstmt1.setObject(8, "PENDING");
                                            pstmt1.setString(9, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                                            pstmt1.setBoolean(10, false);
                                            pstmt1.setObject(11, voucNo);
                                            pstmt1.setBoolean(12, false);

                                            pstmt1.setObject(14, imprestTypeCmbx.getSelectedItem());
                                            pstmt1.setDouble(15, 1);
                                            pstmt1.setString(16, dealerCodeTxt.getText());
                                            pstmt1.setObject(17, billTable.getValueAt(i, 2).toString());
                                            pstmt1.setObject(18, false);
                                            
                                            pstmt1.setObject(20, false);
                                            pstmt1.setObject(21, billTable.getValueAt(i, 5).toString());
                                            pstmt1.setDate(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateTo));
                                            pstmt1.setBoolean(23, false);
                                            pstmt1.setDouble(24, 0.00);
                                            
                                            
                                            pstmt1.executeUpdate();

                                            java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user,?,?,?)");
                                            pstmt7.setString(1, dealerNameTxt.getText().toString());
                                            pstmt7.setObject(2, voucNo);
                                            pstmt7.setObject(3, null);
                                            pstmt7.setObject(4, null);
                                            pstmt7.setObject(5, voucNo);
                                            pstmt7.executeUpdate();
                                            
                                if (imprestTypeCmbx.getSelectedItem() == "Salary Advance") {
                                java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, "
                            + "particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?)");
                                //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                                pstmtss.setObject(1, voucNo);
                                pstmtss.setObject(2, dealerNameTxt.getText().toUpperCase());
                                pstmtss.setObject(3, "-");
                                pstmtss.setObject(4, billTable.getValueAt(0, 5).toString());
                                pstmtss.setObject(5, "");
                                pstmtss.setObject(6, billTable.getValueAt(0, 2).toString());
                                pstmtss.setDouble(7, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
                                pstmtss.setDouble(8, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
                                pstmtss.setObject(9, "-");
                                pstmtss.setDouble(10, 0);
                                pstmtss.setDouble(11, 0);
                                pstmtss.setDouble(12, 0);
                                pstmtss.setDouble(13, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
                                pstmtss.setDouble(14, 0);
                                pstmtss.setObject(15, userName);
                                pstmtss.executeUpdate();  
                                
                                com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();
                                policy.VoucherMtrhPdf(connectDB, voucNo);
                                            }

//                                            com.afrisoftech.votebook.PettyCashVoucherPdf policy = new com.afrisoftech.votebook.PettyCashVoucherPdf();
//                                            policy.PettyCashVoucherPdf(connectDB, voucNo);

                                        } else if ((java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()) > 5000.00) && imprestHolderCmbx.getSelectedIndex() == 0) {
//                                            // Capture requisition for personal claims greater than 5000

                                            java.sql.Statement pst19 = connectDB.createStatement();
                                            java.sql.ResultSet rs19 = pst19.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                                            while (rs19.next()) {
                                                accountCode = rs19.getObject(1).toString();
                                                glType = rs19.getObject(2).toString();
                                            }
                                            java.sql.Statement ps5 = connectDB.createStatement();
                                            java.sql.ResultSet rs25 = ps5.executeQuery("select current_user");
                                            while (rs25.next()) {
                                               // TransNo = rs25.getObject(1).toString();
                                                userName = rs25.getObject(1).toString();
                                            }
                                            java.sql.Statement pst2 = connectDB.createStatement();
                                            java.sql.ResultSet rs = pst2.executeQuery("select 'PYMT_REQ'||lpad(nextval('invoice_no_seq')::text,7,0::text)");
                                            while (rs.next()) {
                                                voucNo = rs.getObject(1).toString();
                                            }
                                            for (int j = 0; j < billTable.getRowCount(); j++) {
                                                if (billTable.getModel().getValueAt(j, 0) != null) {
                                                    java.sql.Statement pst223 = connectDB.createStatement();
                                                    java.sql.ResultSet rs223 = pst223.executeQuery("select '" + billTable.getValueAt(j, 3).toString() + "'::date,'" + billTable.getValueAt(j, 4).toString() + "'::date");
                                                    while (rs223.next()) {
                                                        invDate = rs223.getDate(1);
                                                        dateTo = rs223.getDate(2);
                                                    }
                                                   
                                                    if (imprestTypeCmbx.getSelectedItem() == "Personal Claims") {
                                                        java.sql.Statement pst2There = connectDB.createStatement();
                                                        java.sql.ResultSet rsThere = pst2There.executeQuery("select 'P_IMPREST_REQ'||lpad(nextval('imprest_requisition_no')::text,7,0::text)");
                                                        while (rsThere.next()) {
                                                            voucNo = rsThere.getObject(1).toString();
                                                        }
                                                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");//added    
                                                                       pstmt1.setString(1, dealerNameTxt.getText().toString().toUpperCase());
                                                                       pstmt1.setObject(2, billTable.getValueAt(i, 0));
                                                                       pstmt1.setObject(3, billTable.getValueAt(i, 1));
                                                                       pstmt1.setObject(4, voucNo);
                                                                       pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                                                       pstmt1.setObject(6, "Being payment of the above for " + billTable.getValueAt(i, 5).toString().toUpperCase());
                                                                       pstmt1.setObject(7, billTable.getValueAt(i, 4));
                                                                       pstmt1.setDouble(8, 0.00);
                                                                       pstmt1.setDouble(9, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                                                       pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                                       pstmt1.setObject(11, "");
                                                                       pstmt1.setDouble(12, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));
                                                                        if(jRadioButton1.isSelected()==true){
                                                                         pstmt1.setString(13, billTable.getValueAt(i, 2).toString());   
                                                                        }else{
                                                                        pstmt1.setString(13, dealerCodeTxt.getText());
                                                                        }
                                                                       pstmt1.setBoolean(14, false);
                                                                       pstmt1.setBoolean(15, false);
                                                                       pstmt1.setObject(16, billTable.getValueAt(i, 2).toString());
                                                                       pstmt1.setBoolean(17, false);
                                                                       pstmt1.setObject(18, null);
                                                                      pstmt1.setObject(19, null);
                                                                      pstmt1.setBoolean(20, false);
                                                                      pstmt1.setString(21, userName);
                                                                       pstmt1.executeUpdate();
                                                                       
                                                                       java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                                                            pstmt7.setString(1, dealerNameTxt.getText().toString());
                                                                            pstmt7.setObject(2, voucNo);
                                                                           
                                                                            pstmt7.executeUpdate();

                                                    } else if (imprestTypeCmbx.getSelectedItem() == "Salary Advance") {
                                                        java.sql.Statement pst2Salary = connectDB.createStatement();
                                                        java.sql.ResultSet rsSalary = pst2Salary.executeQuery("select 'SAL_ADV'||lpad(nextval('salary_advance')::text,7,0::text)");
                                                        while (rsSalary.next()) {
                                                            voucNo = rsSalary.getObject(1).toString();
                                                        }
                                                                               java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");//added    
                                                                       pstmt1.setString(1, dealerNameTxt.getText().toString().toUpperCase());
                                                                       pstmt1.setObject(2, billTable.getValueAt(i, 0));
                                                                       pstmt1.setObject(3, billTable.getValueAt(i, 1));
                                                                       pstmt1.setObject(4, voucNo);
                                                                       pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                                                       pstmt1.setObject(6, "Being payment of the above for " + billTable.getValueAt(i, 5).toString().toUpperCase());
                                                                       pstmt1.setObject(7, billTable.getValueAt(i, 4));
                                                                       pstmt1.setDouble(8, 0.00);
                                                                       pstmt1.setDouble(9, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                                                       pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                                       pstmt1.setObject(11, voucNo);
                                                                       pstmt1.setDouble(12, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));
                                                                       pstmt1.setString(13, dealerCodeTxt.getText());
                                                                       pstmt1.setBoolean(14, false);
                                                                       pstmt1.setBoolean(15, true);
                                                                       pstmt1.setObject(16, billTable.getValueAt(i, 2).toString());
                                                                       pstmt1.setBoolean(17, false);
                                                                       pstmt1.setObject(18, null);
                                                                      pstmt1.setObject(19, null);
                                                                      pstmt1.setBoolean(20, false);
                                                                      pstmt1.setString(21, userName);
                                                                       pstmt1.setObject(22, null);
                                                                      pstmt1.setObject(23, true);
                                                                       pstmt1.setObject(24, null);
                                                                      pstmt1.setObject(25, null);
                                                                       pstmt1.setObject(26, true);
                                                                      pstmt1.setObject(27, null);
                                                                       pstmt1.setObject(28, null);
                                                                      
                                                                       pstmt1.executeUpdate();
                                                    

                                                                            java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, "
                                                                                    + "particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?)");
                                                                            //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                                                                            pstmtss.setObject(1, voucNo);
                                                                            pstmtss.setObject(2, dealerNameTxt.getText().toUpperCase());
                                                                            pstmtss.setObject(3, "-");
                                                                            pstmtss.setObject(4, billTable.getValueAt(0, 5).toString());
                                                                            pstmtss.setObject(5, "");
                                                                            pstmtss.setObject(6, billTable.getValueAt(0, 2).toString());
                                                                            pstmtss.setDouble(7, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
                                                                            pstmtss.setDouble(8, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
                                                                            pstmtss.setObject(9, "-");
                                                                            pstmtss.setDouble(10, 0);
                                                                            pstmtss.setDouble(11, 0);
                                                                            pstmtss.setDouble(12, 0);
                                                                            pstmtss.setDouble(13, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
                                                                            pstmtss.setDouble(14, 0);
                                                                            pstmtss.setObject(15, userName);
                                                                            pstmtss.executeUpdate();

                                                                            java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user,?,?,?)");
                                                                            pstmt7.setString(1, dealerNameTxt.getText().toString());
                                                                            pstmt7.setObject(2, voucNo);
                                                                            pstmt7.setObject(3, null);
                                                                            pstmt7.setObject(4, null);
                                                                            pstmt7.setObject(5, voucNo);
                                                                            pstmt7.executeUpdate();
                                                                            com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();
                                                                            policy.VoucherMtrhPdf(connectDB, voucNo);
                                            
                                                }
                                                    
                                                }

                                            }
                                              
                                        } else {
                                            System.out.println(samuel + " Here 1");
                                            samuel = false;
                                            javax.swing.JOptionPane.showMessageDialog(this, "Amount less than 5000 you must select the standing Imprest Holder\n and diselect when amount is greater than 5000.", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                            System.out.println(samuel + " Here 1");
                                        }
                                    }

                                }
                            }

                        }//next of kin start 
                        else if (nextOfKinRdi.isSelected()) {
                            java.sql.Statement pst1 = connectDB.createStatement();
                            java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity = '" + imprestTypeCmbx.getSelectedItem().toString() + "'");
                            while (rs1.next()) {
                                accountCode1 = rs1.getObject(1).toString();
                                glType = rs1.getObject(2).toString();
                            }
                            for (int i = 0; i < billTable.getRowCount(); i++) {
                                if (billTable.getModel().getValueAt(i, 0) != null) {
                                    java.sql.Statement pst223 = connectDB.createStatement();
                                    java.sql.ResultSet rs223 = pst223.executeQuery("select '" + billTable.getValueAt(i, 3).toString() + "'::date,'" + billTable.getValueAt(i, 4).toString() + "'::date");
                                    while (rs223.next()) {
                                        invDate = rs223.getDate(1);
                                        dateTo = rs223.getDate(2);
                                    }
                                    if (!(java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()) > 5000.00) && imprestHolderCmbx.getSelectedIndex() != 0 && java.lang.Double.valueOf(heldBalTxt.getText().toString()) >= columnSix) {
                                        java.sql.Statement pst2Salary = connectDB.createStatement();
                                        java.sql.ResultSet rsSalary = pst2Salary.executeQuery("select 'PETT_KIN'||lpad(nextval('salary_advance')::text,7,0::text)");
                                        while (rsSalary.next()) {
                                            voucNo = rsSalary.getObject(1).toString();
                                        }
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_petty_cash_requisition values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                        pstmt1.setString(1, imprestHolderCmbx.getSelectedItem().toString().toUpperCase());
                                        pstmt1.setObject(2, nextName.getText().toUpperCase());
                                        pstmt1.setObject(3, deptNameCmbx.getSelectedItem().toString());
                                        pstmt1.setObject(4, imprestNumberTxt.getText());
                                        pstmt1.setDouble(5, 0.00);
//                                        "BEING PAYMENT TO THE ABOVE AS NEXT OF KIN OF\n "+dealerNameTxt.getText()+""
//                                                + "\n STAFF NO:"+dealerCodeTxt.getText()+"\n FOR " + billTable.getValueAt(i, 5).toString().toUpperCase());
                                        pstmt1.setDouble(6, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                        pstmt1.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                        pstmt1.setObject(8, "PENDING");
                                        pstmt1.setString(9, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                                        pstmt1.setBoolean(10, false);
                                        pstmt1.setObject(11, voucNo);
                                        pstmt1.setBoolean(12, false);
                                        pstmt1.setString(13, billTable.getValueAt(i, 1).toString());//
                                        pstmt1.setObject(14, "NEXT OF KIN");
                                        pstmt1.setDouble(15, 1);
                                        pstmt1.setString(16, nextOfKinTxt.getText());
                                        pstmt1.setObject(17, billTable.getValueAt(i, 2).toString());
                                        pstmt1.setObject(18, false);
                                        pstmt1.setObject(19, false);
                                        pstmt1.setObject(20, false);
                                        pstmt1.setObject(21, billTable.getValueAt(i, 5).toString());
                                        pstmt1.setDate(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateTo));
                                        pstmt1.setBoolean(23, false);
                                        pstmt1.executeUpdate();

                                        java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user,?,?,?)");
                                        pstmt7.setString(1, dealerNameTxt.getText().toString());
                                        pstmt7.setObject(2, voucNo);
                                        pstmt7.setObject(3, null);
                                        pstmt7.setObject(4, null);
                                        pstmt7.setObject(5, voucNo);
                                        pstmt7.executeUpdate();

//                                        java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, "
//                                                + "particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?)");
//                                        //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
//                                        pstmtss.setObject(1, voucNo);
//                                        pstmtss.setObject(2, dealerNameTxt.getText().toUpperCase());
//                                        pstmtss.setObject(3, "-");
////                             if(lpoTxt1.getText().contains("DIR_PUR")){
////                                 pstmtss.setObject(4, "Being Payment to the Above "+SupplierTxt1.getText()+" for "+orderPaymentCommitTable1.getValueAt(0, 4).toString()+" as per GRN,Acceptance form and Invoices Attached");
////                                    pstmtss.setObject(5,"Direct Purchase");
////                             }else{
//                                        pstmtss.setObject(4, "Being payment of the above for " + billTable.getValueAt(0, 5).toString());
//                                        pstmtss.setObject(5, "");
//                                        // }
//                                        pstmtss.setObject(6, billTable.getValueAt(0, 2).toString());
//                                        pstmtss.setDouble(7, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
//                                        pstmtss.setDouble(8, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
//                                        pstmtss.setObject(9, 0);
//                                        pstmtss.setDouble(10, 0);
//                                        pstmtss.setDouble(11, 0);
//                                        pstmtss.setDouble(12, 0);
//                                        pstmtss.setDouble(13, Double.parseDouble(billTable.getValueAt(0, 6).toString()));
//                                        pstmtss.setDouble(14, 0);
//                                        pstmtss.setObject(15, userName);
//
//                                        pstmtss.executeUpdate();
//
//                                        com.afrisoftech.votebook.PettyCashVoucherPdf policy = new com.afrisoftech.votebook.PettyCashVoucherPdf();
//
//                                        policy.PettyCashVoucherPdf(connectDB, voucNo);

                                        System.out.println("supposed to print a voucher");
                                    } else if (!(java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()) < 5000.00) && imprestHolderCmbx.getSelectedIndex() == 0) {

                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");//added
                                        java.sql.Statement pst2Salary = connectDB.createStatement();
                                        java.sql.ResultSet rsSalary = pst2Salary.executeQuery("select 'OTHER_PAY'||lpad(nextval('salary_advance')::text,7,0::text)");
                                        while (rsSalary.next()) {
                                            voucNo = rsSalary.getObject(1).toString();
                                        }
                                        
                                        pstmt1.setString(1, nextName.getText().toString().toUpperCase());
                                        pstmt1.setObject(2, billTable.getValueAt(i, 0));
                                        pstmt1.setObject(3, billTable.getValueAt(i, 1));
                                        pstmt1.setObject(4, voucNo);
                                        pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
                                        pstmt1.setObject(6, "BEING PAYMENT TO THE ABOVE AS NEXT OF KIN OF\n "+dealerNameTxt.getText()+""
                                                + "\n STAFF NO:"+dealerCodeTxt.getText()+"\n FOR " + billTable.getValueAt(i, 5).toString().toUpperCase());
                                        pstmt1.setObject(7, billTable.getValueAt(i, 4));
                                        pstmt1.setDouble(8, 0.00);
                                        pstmt1.setDouble(9, java.lang.Double.valueOf(billTable.getValueAt(i, 6).toString()));
                                        pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt1.setObject(11, "");
                                        pstmt1.setDouble(12, java.lang.Double.valueOf(billTable.getValueAt(i, 7).toString()));
                                        pstmt1.setString(13, "Id no:"+nextOfKinTxt.getText());
                                        pstmt1.setBoolean(14, false);
                                        pstmt1.setBoolean(15, false);
                                        pstmt1.setObject(16, billTable.getValueAt(i, 2).toString());
                                        pstmt1.setBoolean(17, false);
                                        pstmt1.setObject(18, null);
                                        pstmt1.setObject(19, null);
                                        pstmt1.setBoolean(20, false);
                                        pstmt1.setString(21, userName);
                                        pstmt1.executeUpdate();

                                        java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                                        pstmt7.setString(1, dealerNameTxt.getText().toString());
                                        pstmt7.setObject(2, voucNo);
                                        pstmt7.executeUpdate();

                                        samuel = true;

                                    } else {
                                        System.out.println(samuel + " Here 1");
                                        samuel = false;
                                        javax.swing.JOptionPane.showMessageDialog(this, "Amount less than 5000 you must select the standing Imprest Holder\n and diselect when amount is greater than 5000.", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                        System.out.println(samuel + " Here 1");
                                    }
                                }

                            }

                        }
                        if (samuel == true) {
                            this.paymentRequestBtn.setEnabled(false);
                            connectDB.commit();
                            connectDB.setAutoCommit(true);
                            javax.swing.JOptionPane.showMessageDialog(this, "Data Saved Successfully", "Comfirmation", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                            closeFormBtn.doClick();
                        }
                        clearTaxPanel();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        System.out.println(sq.getMessage());
                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                    }

                } catch (Exception ex) {
                    ex.printStackTrace();
                    System.out.println("this is your awesome error" + ex.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            }

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : The transaction cannot be completed without the name of the supplier/imprest holder.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // Add your handling code here:
    }//GEN-LAST:event_paymentRequestBtnActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran2 = cmbox2.getSelectedItem();

        /*   int j = jTable11.getSelectedRow();
         if (selectedGuaran2 != null) {
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select member_name,sum(amount_payable - amount_paid) from member_resignation where member_no ='"+selectedGuaran2+"' GROUP BY member_name,member_no");
     
         while (rs.next()){
         jTable11.setValueAt(rs.getObject(1),j,1);
         jTable11.setValueAt(rs.getObject(2),j,3);
         jTable11.setValueAt("Shares Refund",j,2);
     
         }
     
         java.sql.Statement pstmt1 = connectDB.createStatement();
         java.sql.ResultSet rs1 = pstmt1.executeQuery("select code from activity where activity = 'Shares Refund'");
     
         while (rs1.next()){
         jTable11.setValueAt(rs1.getObject(1),j,4);
     
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
         }
         }
         } private void cmbox1ActionPerformed(java.awt.event.ActionEvent evt){
         java.lang.Object selectedGuaran1 = cmbox1.getSelectedItem();
     
         System.out.println("Selected Guarntor : "+selectedGuaran1);
     
         int i = jTable1.getSelectedRow();
         if (selectedGuaran1 != null) {
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select member_name,member_no,loan_purpose,sum(principal)-sum(debit) from loan_transactions where loan_account_no ='"+selectedGuaran1+"' GROUP BY member_name,member_no,loan_purpose");
     
         while (rs.next()){
         jTable1.setValueAt(rs.getObject(1),i,3);
         jTable1.setValueAt(rs.getObject(2),i,2);
         jTable1.setValueAt(rs.getObject(3),i,1);
         jTable1.setValueAt(rs.getObject(4),i,4);
         }
     
         java.sql.Statement pstmt1 = connectDB.createStatement();
         java.sql.ResultSet rs1 = pstmt1.executeQuery("select code from activity where activity = '"+jTable1.getValueAt(i,1).toString()+"'");
     
         while (rs1.next()){
         jTable1.setValueAt(rs1.getObject(1),i,5);
     
         }
     
     
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
         }
         }
     
         */
    }

    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();

        System.out.println("Selected Guarntor : " + selectedGuaran);

        int k = billTable.getSelectedRow();
        if (selectedGuaran != null) {

            try {

                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rst = pstmt.executeQuery("select code from pb_activity where activity = '" + selectedGuaran + "'");
                while (rst.next()) {
                    //jTextField4.setText(rs.getObject(1).toString());
                    billTable.setValueAt(rst.getObject(1), k, 1);
                }

            } catch (java.sql.SQLException sqlex) {
                sqlex.printStackTrace();
                System.out.println(sqlex.getMessage());
            }
        }
    }

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void imprestHolderCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestHolderCmbxActionPerformed
        try {

            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rst = pstmt.executeQuery("select DISTINCT voucher_no,sum(debit-credit) from ac_petty_cash where payee ilike '" + imprestHolderCmbx.getSelectedItem().toString() + "' and  voucher_no ilike 's%' group by voucher_no having sum(debit-credit) > 0");
            while (rst.next()) {
                imprestNumberTxt.setText(rst.getObject(1).toString());

            }

            if (imprestHolderCmbx.getSelectedIndex() != 0) {
                java.sql.Statement psBal = connectDB.createStatement();
                java.sql.ResultSet rstBal = psBal.executeQuery("select sum(debit-credit) from ac_petty_cash where (activity = '" + imprestNumberTxt.getText().toString() + "' or voucher_no = '" + imprestNumberTxt.getText().toString() + "') and status != 'Payment Issued'");
                while (rstBal.next()) {
                    heldBalTxt.setText(rstBal.getObject(1).toString());
                }
            }
        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_imprestHolderCmbxActionPerformed

    private void imprestTypeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestTypeCmbxActionPerformed
        // TODO add your handling code here:
        imprestNumberTxt.setText("");
        if (dealerNameTxt.getText().length() < 0 || "".equals(dealerNameTxt.getText()) || dealerNameTxt.getText() == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Select a supplier/staff first", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            closeFormBtn.doClick();
        }
//        if(imprestTypeCmbx.getSelectedItem().toString().contains("mprest")){
//           
//        
//                  try {
//         java.sql.Statement pstmt = connectDB.createStatement();
//         java.sql.ResultSet rs = pstmt.executeQuery("select dealer_code,final_voucher_no from ac_bills where surrender_amount=0");
//     
//         while (rs.next()){
//             if(dealerCodeTxt.getText().equalsIgnoreCase(rs.getString(1))){
//                 javax.swing.JOptionPane.showMessageDialog(this, "Cannot allow imprest\n Staff has not surrendered Imprest No:"+rs.getString(2), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
//            closeFormBtn.doClick();
//             }
//            
//         }
//        }catch(Exception t){
//            t.printStackTrace();
//        }
//    }
    }//GEN-LAST:event_imprestTypeCmbxActionPerformed

    private void creditorsBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_creditorsBtnItemStateChanged
        if (creditorsBtn.isSelected() == true) {
            jLabel6.setText("Contract No");
            imprestNumberTxt.setEditable(true);
        }
    }//GEN-LAST:event_creditorsBtnItemStateChanged

    private void imprestBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_imprestBtnItemStateChanged
        if (imprestBtn.isSelected() == true) {
            jLabel6.setText("Imprest Number");
            imprestNumberTxt.setEditable(false);
        }
    }//GEN-LAST:event_imprestBtnItemStateChanged

    private void creditorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorsBtnActionPerformed
        // TODO add your handling code here:
        heldBalTxt.setText("0.00");
        imprestNumberTxt.setText("");
        imprestHolderCmbx.setSelectedIndex(0);
        nextName.setVisible(false);
        jRadioButton1.setVisible(false);
        nextOfKInLabel1.setVisible(false);
        imprestTypeCmbx.setEnabled(false);
        imprestHolderCmbx.setEnabled(false);
        paymentRequestBtn.setEnabled(true);
        nextOfKInLabel.setVisible(false);
        dealerNameTxt.setEditable(false);
        nextOfKinTxt.setVisible(false);
        jLabel4.setEnabled(false);
        jLabel5.setEnabled(false);
        clearTaxPanel();

    }//GEN-LAST:event_creditorsBtnActionPerformed

    private void imprestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestBtnActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setVisible(true);
        heldBalTxt.setText("0.00");
        imprestNumberTxt.setText("");
        imprestHolderCmbx.setSelectedIndex(0);
        nextName.setVisible(false);
        nextOfKInLabel1.setVisible(false);
        imprestTypeCmbx.setEnabled(true);
        imprestHolderCmbx.setEnabled(true);
        dealerNameTxt.setEditable(false);
        paymentRequestBtn.setEnabled(true);
        nextOfKInLabel.setVisible(false);
        nextOfKinTxt.setVisible(false);
        jLabel4.setEnabled(true);
        jLabel5.setEnabled(true);
        clearTaxPanel();
    }//GEN-LAST:event_imprestBtnActionPerformed

    private void editPayedRequisitionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPayedRequisitionBtnActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                editPayedRequisition dialog = new editPayedRequisition(new javax.swing.JFrame(), true, connectDB, pConnDB);

                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_editPayedRequisitionBtnActionPerformed
    private void cmboxMouseClickedat2() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane14.getLocationOnScreen();
        jSearchDialog2.setSize(600, 200);
        jSearchDialog2.setLocation(point);
        jSearchDialog2.setVisible(true);
    }
    private void otherpaymentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_otherpaymentsTableMouseClicked
        // TODO add your handling code here:

        if (otherpaymentsTable.getSelectedColumn() == 0) {

            this.cmboxMouseClickedat2();

        }

    }//GEN-LAST:event_otherpaymentsTableMouseClicked

    private void removeRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowBtnActionPerformed
        int rows2Delete = otherpaymentsTable.getSelectedRowCount();

        int[] selectedRows = otherpaymentsTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) otherpaymentsTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) otherpaymentsTable.getModel();

                defTableModel.removeRow(otherpaymentsTable.getSelectedRow());

            }
        }
    }//GEN-LAST:event_removeRowBtnActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        // TODO add your handling code here:

        jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select employee_no as Board_no, first_name||' '||last_name as name from master_file where (employee_no ILIKE '" + jTextField1112.getText() + "%' or first_name||' '||middle_name||' '||last_name ilike '" + jTextField1112.getText() + "%' "
                + ") and official_desgnation = 'BOARD MEMBER' order by 2"));

        // jSearchScrollPane.setViewportView(jSearchTable);
    }//GEN-LAST:event_jTextField1112CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        // TODO add your handling code here:
        otherpaymentsTable.setValueAt(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0), otherpaymentsTable.getSelectedRow(), 1);
        otherpaymentsTable.setValueAt(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1), otherpaymentsTable.getSelectedRow(), 0);
        for (int r = 2; r < otherpaymentsTable.getColumnCount(); r++) {
            otherpaymentsTable.setValueAt(0, otherpaymentsTable.getSelectedRow(), r);
        }

        paymentRequestBtn.setEnabled(true);
        this.jSearchDialog2.dispose();

    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        this.jSearchDialog2.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextField1113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1113CaretUpdate
        // TODO add your handling code here:
        jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where (category_class ilike 'pled' or category_class ilike 'ba') and activity ILIKE '%" + jTextField1113.getText() + "%' order by activity"));
    }//GEN-LAST:event_jTextField1113CaretUpdate

    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        // TODO add your handling code here:
        otherpaymentsTable.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0), otherpaymentsTable.getSelectedRow(), 0);
        otherpaymentsTable.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 1), otherpaymentsTable.getSelectedRow(), 1);

        this.jSearchDialog3.dispose();
    }//GEN-LAST:event_jSearchTable3MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        this.jSearchDialog3.dispose();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void nextOfKinRdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextOfKinRdiActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setVisible(false);
        heldBalTxt.setText("0.00");
        imprestNumberTxt.setText("");
        imprestHolderCmbx.setSelectedIndex(0);
        imprestTypeCmbx.setEnabled(false);
        imprestHolderCmbx.setEnabled(true);
        nextOfKInLabel.setVisible(true);
        paymentRequestBtn.setEnabled(true);
        nextOfKinTxt.setVisible(true);
        nextName.setVisible(true);
        nextOfKInLabel1.setVisible(true);
        dealerNameTxt.setEditable(true);
        jLabel4.setEnabled(true);
        jLabel5.setEnabled(true);

        clearTaxPanel();
    }//GEN-LAST:event_nextOfKinRdiActionPerformed

    private void searchOtherPaymentTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchOtherPaymentTxtCaretUpdate

        searchOtherPaymentTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select activity as scheme,code from pb_activity where activity ILIKE '" + searchOtherPaymentTxt.getText().toString() + "%' order by activity"));

        searchOtherPaymentTable.setShowHorizontalLines(false);
        jSearchScrollPane11.setViewportView(searchOtherPaymentTable);

        // Add your handling code here:
    }//GEN-LAST:event_searchOtherPaymentTxtCaretUpdate

    private void searchOtherPaymentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchOtherPaymentTableMouseClicked
        expenseDescTxt.setText(searchOtherPaymentTable.getValueAt(searchOtherPaymentTable.getSelectedRow(), 0).toString());
        glCodeTxt.setText(searchOtherPaymentTable.getValueAt(searchOtherPaymentTable.getSelectedRow(), 1).toString());
        searchOtherPaymentsDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_searchOtherPaymentTableMouseClicked

    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
        searchOtherPaymentsDialog.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton5111ActionPerformed

    private void searchButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton21ActionPerformed
        searchButton11Clicked();    // Add your handling code here:
    }//GEN-LAST:event_searchButton21ActionPerformed

    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.expenseDescTxt.getLocationOnScreen();

        searchOtherPaymentsDialog.setSize(400, 200);

        searchOtherPaymentsDialog.setLocation(point);

        searchOtherPaymentsDialog.setVisible(true);
    }
    private void glCodeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glCodeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_glCodeTxtActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void taLsoChkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_taLsoChkItemStateChanged
        // TODO add your handling code here:
        if (taLsoChk.isSelected() == false) {
            vatchck.setEnabled(false);
            withHoldChk.setEnabled(false);
            retentionAmountChk.setEnabled(false);
            
//            lpoAmountTxt.setText("0.00");
//             withHoldTaxTxt.setText("0.00");
//            retentionAmountTxt.setText("0.00");
//            netAmountPayable.setText("0.00");
//            vatxt.setText("0.00");
        } else if (taLsoChk.isSelected() == true) {
            totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(billTable, 6);
            if (totalSum > 0 && creditorsBtn.isSelected()) {
                lpoAmountTxt.setText(java.lang.String.valueOf(totalSum));
                retentionAmountChk.setEnabled(true);
                vatchck.setEnabled(true);
                withHoldChk.setEnabled(true);
                netAmountPayable.setText(java.lang.String.valueOf(totalSum));

            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Please enter the LSO details first including the amount");
                taLsoChk.setSelected(false);

            }
        }
    }//GEN-LAST:event_taLsoChkItemStateChanged

    private void taLsoChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taLsoChkActionPerformed
        // TODO add your handling code here:
        //        totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(billTable, 6);
        //        if(totalSum>0){
        //        lpoAmountTxt.setText(java.lang.String.valueOf(totalSum));
        //
        //
        //        }else{
        //        javax.swing.JOptionPane.showMessageDialog(null, "Please enter the LSO details first including the amount");
        //        taLsoChk.setSelected(false);
        //
        //        }
    }//GEN-LAST:event_taLsoChkActionPerformed

    private void otherpaymentsTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_otherpaymentsTableKeyReleased
        double preSit = 0.00;
        double premileage = 0.00;
        double preAcc = 0.00;
        double preGross = 0.00;
        double prePaye = 0.00;
        double preOther = 0.00;
        double preNet = 0.00;
        if (otherpaymentsTable.getModel().getValueAt(otherpaymentsTable.getSelectedRow(), 1) != null) {
            if (otherpaymentsTable.getSelectedColumn() == otherpaymentsTable.getSelectedColumn()) {
                double sittingAll = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 2);
                double mileage = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 3);
                double accomodation = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 4);
                double grossPay = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 6);
                double paye = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 7);
                double others = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 5);
                double netPay = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 8);
//                for (int i = 0; i < otherpaymentsTable.getRowCount(); i++) {
//                   if (otherpaymentsTable.getValueAt(i, 2) != null) {
//                    
//                   } else{
//                       
//                   }
//                }
                preSit = java.lang.Double.parseDouble(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 2).toString());
                premileage = java.lang.Double.parseDouble(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 3).toString());
                preAcc = java.lang.Double.parseDouble(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 4).toString());
                preOther = java.lang.Double.parseDouble(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 5).toString());
                preGross = preSit + premileage + preAcc + preOther;
                otherpaymentsTable.setValueAt(new java.lang.Float(preGross), otherpaymentsTable.getSelectedRow(), 6);
                prePaye = java.lang.Double.parseDouble(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 7).toString());
                preNet = preGross - prePaye;
                otherpaymentsTable.setValueAt(new java.lang.Float(preNet), otherpaymentsTable.getSelectedRow(), 8);

                sittingAllTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(sittingAll));
                mileageTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(mileage));
                accomodationTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(accomodation));
                grossPayTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(grossPay));
                payeTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(paye));
                otherTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(others));
                netPayTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(netPay));

            }

        }
//        double sittingAll = 0.00;
//        double mileage = 0.00;
//        double accomodation = 0.00;
//        double grossPay =0.00;
//        double paye = 0.00;
//        double others = 0.00;
//        double netPay = 0.00;
//        if (otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), otherpaymentsTable.getSelectedColumn()) != null) {
//            if (otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 2) != null) {
//                sittingAll = java.lang.Double.parseDouble(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 2).toString());
//                
//            if (otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 3) != null) {
//               mileage = java.lang.Double.parseDouble(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), 3).toString()); 
//            }    
//            }
//        }
    }//GEN-LAST:event_otherpaymentsTableKeyReleased

    private void otherpaymentsTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_otherpaymentsTableFocusGained
        // TODO add your handling code here:
        //otherpaymentsTable.setValueAt("", otherpaymentsTable.getSelectedRow(), otherpaymentsTable.getSelectedColumn());
    }//GEN-LAST:event_otherpaymentsTableFocusGained

    private void otherpaymentsTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_otherpaymentsTableFocusLost
        // TODO add your handling code here:
//        
//        for (int r = 3; r < otherpaymentsTable.getColumnCount(); r++) {
//            if(otherpaymentsTable.getValueAt(otherpaymentsTable.getSelectedRow(), otherpaymentsTable.getColumnCount()-1) == null){
//           
//                otherpaymentsTable.setValueAt(0, otherpaymentsTable.getSelectedRow(), r-1);
//        }
//          
//            }

    }//GEN-LAST:event_otherpaymentsTableFocusLost

    private void withHoldChkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_withHoldChkItemStateChanged


    }//GEN-LAST:event_withHoldChkItemStateChanged

    private void withHoldChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withHoldChkActionPerformed
          if (withHoldChk.isSelected() == true) {
              withHoldTaxTxt.setEditable(true);
              dealerNameTxt1.setText("COMMISSIONER OF INCOME TAX");
            try {
                String mainService = null;
                String glAccount = null;
                java.sql.PreparedStatement pstmtPrepay = connectDB.prepareStatement("select code,activity from pb_activity where activity_category ILIKE 'CP' ");

                java.sql.ResultSet rsetTax = pstmtPrepay.executeQuery();

                if (rsetTax.next()) {
                    mainService = rsetTax.getString(2);
                    glAccount = rsetTax.getString(1);
                }

                ArrayList taxDetails = new ArrayList();
                taxDetails = com.afrisoftech.lib.CheckTaxStatus.returnTax(connectDB, mainService, glAccount);
                if (taxDetails.isEmpty() == false) {
                //witholding tax
                    //setting withholding tax rate
                    taxPercentageTxt.setText(String.valueOf(taxDetails.get(0)));
withHoldTaxTxt.setEditable(true);
                    ArrayList taxCalc = new ArrayList();
                    taxCalc = com.afrisoftech.lib.CheckTaxStatus.calculateTax(connectDB, Double.valueOf(taxPercentageTxt.getText().trim()), Double.valueOf(lpoAmountTxt.getText().replace(",", "").trim()));
                    
                     withHeldaccountCode = String.valueOf(taxDetails.get(2));
                         java.sql.PreparedStatement pstmtPrepa = connectDB.prepareStatement(""
                    + "SELECT   activity   FROM pb_activity "
                    + " where   code='"+withHeldaccountCode+"'");
            
            java.sql.ResultSet rsetTa = pstmtPrepa.executeQuery();
            if(rsetTa.next()){
                withholdingname=rsetTa.getString(1);
            }
                    
                    if (taxCalc.isEmpty() == false) {
                        withHoldTaxTxt.setText(String.valueOf(taxCalc.get(0)));
                       

                    } else {
                        withHoldTaxTxt.setText("0.00");
                    }

                }

            } catch (SQLException ex) {
           //     Logger.getLogger(DebtorsBillingIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
            withHoldTaxTxt.setText("0.00");
            netAmountPayable.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.valueOf(lpoAmountTxt.getText().replace(",", "").trim()) - Double.valueOf(retentionAmountTxt.getText().replace(",", "").trim()) - Double.valueOf(withHoldTaxTxt.getText().replace(",", "").trim())));
        }else{
            withHoldTaxTxt.setEditable(false);
          withHoldTaxTxt.setText("0.00");
          dealerNameTxt1.setText("");  
          }
         
         

    }//GEN-LAST:event_withHoldChkActionPerformed

    private void retentionAmountChkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_retentionAmountChkItemStateChanged
        // netAmountPayable.setText(String.valueOf(Double.valueOf(lpoAmountTxt.getText().replace(",", "").trim())-Double.valueOf(retentionAmountTxt.getText().replace(",", "").trim())-Double.valueOf(withHoldTaxTxt.getText().replace(",", "").trim())));
    }//GEN-LAST:event_retentionAmountChkItemStateChanged
public void calc(){
  if(taLsoChk.isSelected()){
        double total=0.0,sum=0.0,ret=0.0,vat=0.0,wt=0.0;
       if(retentionAmountTxt.getText()==""){ret=0.0;}else{ret=Double.parseDouble(retentionAmountTxt.getText().replace(",",""));}
       if(vatxt.getText()==""){vat=0.0;}else{vat=Double.parseDouble(vatxt.getText().replace(",",""));} 
       if(withHoldTaxTxt.getText()==""){wt=0.0;}else{wt=Double.parseDouble(withHoldTaxTxt.getText().replace(",",""));} 
       sum=wt+vat+ret;
         total= Double.parseDouble(lpoAmountTxt.getText().replace(",",""))-sum;
         netAmountPayable.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(total)); 
        
   }
}
    private void retentionAmountChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retentionAmountChkActionPerformed
       
        if (retentionAmountChk.isSelected() == true) {
            retentionAmountTxt.setEditable(true);
            try {
                String mainService = null;
                String glAccount = null;
                java.sql.PreparedStatement pstmtPrepay = connectDB.prepareStatement("select code,activity from pb_activity where activity ILIKE 'Retention Fees' AND activity_category ILIKE 'BL'");

                java.sql.ResultSet rsetTax = pstmtPrepay.executeQuery();

                if (rsetTax.next()) {
                    mainService = rsetTax.getString(2);
                    glAccount = rsetTax.getString(1);
                    RetentionaccountCode = rsetTax.getString(1);
                }

                ArrayList taxDetails = new ArrayList();
                taxDetails = com.afrisoftech.lib.CheckTaxStatus.returnTax(connectDB, mainService, RetentionaccountCode);
                if (taxDetails.isEmpty() == false) {
                //witholding tax

                    retentionPercentageTxt.setText(String.valueOf(taxDetails.get(1)));
                    RetentionaccountCode = String.valueOf(taxDetails.get(2));
                    ArrayList taxCalc = new ArrayList();
                    taxCalc = com.afrisoftech.lib.CheckTaxStatus.calculateTax(connectDB, Double.valueOf(retentionPercentageTxt.getText().trim()), Double.valueOf(lpoAmountTxt.getText().replace(",", "").trim()));
                    if (taxCalc.isEmpty() == false) {
                        retentionAmountTxt.setText(String.valueOf(taxCalc.get(0)));

                    } else {
                        retentionAmountTxt.setText("0.00");
                    }

                }

            } catch (SQLException ex) {
//                Logger.getLogger(DebtorsBillingIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            retentionAmountTxt.setEditable(false);
            retentionAmountTxt.setText("0.00");
        }
        
    
    }//GEN-LAST:event_retentionAmountChkActionPerformed

    private void imprestHolderCmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_imprestHolderCmbxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_imprestHolderCmbxItemStateChanged

    private void searchLSOtxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchLSOtxtCaretUpdate
        // TODO add your handling code here:
        if(searchLSOtxt.getCaretPosition()>5){
        
        LSOtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT DISTINCT order_no from st_orders WHERE doc_type ILIKE '%LSO%' AND order_no ILIKE '"+searchLSOtxt.getText()+"%' and supplier ilike '"+dealerNameTxt.getText()+"'"));
        
        }
    }//GEN-LAST:event_searchLSOtxtCaretUpdate

    private void searchLSOtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchLSOtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchLSOtxtActionPerformed

    private void LSOtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSOtblMouseClicked
        // TODO add your handling code here:
        searchLSODialog.dispose();
        imprestNumberTxt.setText(LSOtbl.getValueAt(LSOtbl.getSelectedRow(), 0).toString());
        try {
            PreparedStatement pst = connectDB.prepareStatement("SELECT distinct item,code,net_value FROM st_orders where order_no='"+imprestNumberTxt.getText()+"' AND received=false");
            ResultSet rset = pst.executeQuery();
   int i=0;      
      while(rset.next()){
      //  for(int i=0;i<billTable.getRowCount();i++){
            billTable.setValueAt(rset.getObject(1), i, 0);
            billTable.setValueAt(rset.getObject(2), i, 1);
            billTable.setValueAt(rset.getDouble(3), i, 6);
        i++;
            }
     // lpoAmountTxt.setText(CurrencyFormatter.getFormattedDouble(TableColumnTotal.getTableColumnTotal(billTable, 6)));
            
        if(i==0) {
            JOptionPane.showMessageDialog(this, "LPO items Exhausted", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
        }   
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(RaiseVoucherintfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_LSOtblMouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        // TODO add your handling code here:
        searchLSODialog.dispose();
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("Showing dialog");
        java.awt.Point point = imprestNumberTxt.getLocationOnScreen();
        searchLSODialog.setSize(600, 200);
        searchLSODialog.setLocation(point);
        searchLSODialog.setVisible(true);
        searchLSOtxt.setText(null);
        ClearTable.clearthisTable(LSOtbl);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void retentionAmountTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_retentionAmountTxtCaretUpdate
        // TODO add your handling code here:
        if(retentionAmountTxt.getText().length()>1){
          calc();
        }
    }//GEN-LAST:event_retentionAmountTxtCaretUpdate

    private void withHoldTaxTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_withHoldTaxTxtCaretUpdate
        // TODO add your handling code here:
         if(withHoldTaxTxt.getText().length()>0){
           calc();
         }
    }//GEN-LAST:event_withHoldTaxTxtCaretUpdate

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        // TODO add your handling code here:
        searchButton3Clicked();
       
        
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        // TODO add your handling code here:
       jSearchTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,supplier_name as name from st_suppliers where supplier_name in (select supplier_name from st_suppliers where supplier_name ilike '%tax%') and supplier_name ILIKE '" + jTextField112.getText() + "%' order by supplier_name"));

                    jSearchScrollPane5.setViewportView(jSearchTable4); 
    }//GEN-LAST:event_jTextField112CaretUpdate

    private void jTextField112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField112ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField112ActionPerformed

    private void jSearchTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable4MouseClicked
        // TODO add your handling code here:
         dealerNameTxt1.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 1).toString()); 
         jSearchDialog4.dispose();
    }//GEN-LAST:event_jSearchTable4MouseClicked

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton54ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        // TODO add your handling code here:
        searchButton4Clicked();
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        // TODO add your handling code here:
          jSearchTable5.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,supplier_name as name from st_suppliers where supplier_name in (select supplier_name from st_suppliers where supplier_name ilike '%tax%') and supplier_name ILIKE '" + jTextField113.getText() + "%' order by supplier_name"));

                    jSearchScrollPane6.setViewportView(jSearchTable5);
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jTextField113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField113ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField113ActionPerformed

    private void jSearchTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable5MouseClicked
        // TODO add your handling code here:
         dealerNameTxt2.setText(jSearchTable5.getValueAt(jSearchTable5.getSelectedRow(), 1).toString()); 
         jSearchDialog5.dispose();
    }//GEN-LAST:event_jSearchTable5MouseClicked

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
        // TODO add your handling code here:
        jSearchDialog5.dispose();
    }//GEN-LAST:event_jButton55ActionPerformed

    private void vatchckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vatchckActionPerformed
        // TODO add your handling code here:
        
        if(vatchck.isSelected()==false){
            vatxt.setText("0.00");
            vatxt.setEditable(false);
        dealerNameTxt3.setText("");
        }else{
            vatxt.setEditable(true);
        dealerNameTxt3.setText("COMMISSIONER OF DOMESTIC TAX");
        }
    }//GEN-LAST:event_vatchckActionPerformed

    private void vatchckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_vatchckItemStateChanged
        // TODO add your handling code here
         vatxt.setEditable(true);
    }//GEN-LAST:event_vatchckItemStateChanged

    private void vatxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_vatxtCaretUpdate
        // TODO add your handling code here:
         if(vatxt.getText().length()>1){
             calc();
             billTable.setValueAt(vatxt.getText(), 0, 7);
         }

    }//GEN-LAST:event_vatxtCaretUpdate

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        calc();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void dealerNameTxt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dealerNameTxt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dealerNameTxt3ActionPerformed

    private void retentionAmountTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retentionAmountTxtFocusLost
        // TODO add your handling code here:
        if(retentionAmountTxt.getText().length()<1){
        retentionAmountTxt.setText("0.00");    
        }
        
    }//GEN-LAST:event_retentionAmountTxtFocusLost

    private void vatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vatxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vatxtActionPerformed

    private void vatxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vatxtFocusLost
        // TODO add your handling code here:
        if(vatxt.getText().length()<1){
        vatxt.setText("0.00");    
        }
    }//GEN-LAST:event_vatxtFocusLost

    private void withHoldTaxTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_withHoldTaxTxtFocusLost
        // TODO add your handling code here:
         if(withHoldTaxTxt.getText().length()<1){
        withHoldTaxTxt.setText("0.00");    
        }
    }//GEN-LAST:event_withHoldTaxTxtFocusLost

    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        // TODO add your handling code here:
        searchButton10Clicked();
    }//GEN-LAST:event_searchButton3ActionPerformed
private void searchButton10Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt4.getLocationOnScreen();

        jSearchDialog6.setSize(400, 200);

        jSearchDialog6.setLocation(point);

        jSearchDialog6.setVisible(true);
    }   
    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        // TODO add your handling code here:
          jSearchTable6.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,supplier_name as name from st_suppliers where supplier_name ILIKE '" + jTextField114.getText() + "%' order by supplier_name"));

                    jSearchScrollPane7.setViewportView(jSearchTable6); 
    }//GEN-LAST:event_jTextField114CaretUpdate

    private void jTextField114ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField114ActionPerformed
     
                
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField114ActionPerformed

    private void jSearchTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable6MouseClicked
dealerNameTxt4.setText(jSearchTable6.getValueAt(jSearchTable6.getSelectedRow(), 1).toString());
        jLabel21.setText(jSearchTable6.getValueAt(jSearchTable6.getSelectedRow(), 0).toString());
        jSearchDialog6.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable6MouseClicked

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton56ActionPerformed
        // TODO add your handling code here:
        jSearchDialog6.dispose();
    }//GEN-LAST:event_jButton56ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton47ActionPerformed

    private void makeOtherPaymentsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeOtherPaymentsBtnActionPerformed
        // TODO add your handling code here:
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());

        }

        if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else {
            if (otherpaymentsTable.isEditing()) {
                otherpaymentsTable.getCellEditor().stopCellEditing();
            }
            java.util.Calendar calendar = java.util.Calendar.getInstance();

            long dateNow = calendar.getTimeInMillis();

            java.sql.Date datenowSql = new java.sql.Date(dateNow);
            try {
                String Stock = null;
                String voucNo = null;
                String voucNo1 = null;
                String accountCode = null;
                String TransNo = null;
                String glType = null;
                Boolean samuel = true;
                String accountCodepaye = null;
                String glTypepaye = null;
                // String glType = null;
                String userName = null;
                java.sql.Date invDate = null;
                java.sql.Date dateTo = null;
                java.sql.Savepoint registerSavePoint = null;
                try {
                    connectDB.setAutoCommit(false);
                    registerSavePoint = connectDB.setSavepoint("registration");
                } catch (java.sql.SQLException ex) {
                    ex.printStackTrace();
                }
                java.sql.Statement pst1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                while (rs1.next()) {
                    accountCode = rs1.getObject(1).toString();
                    glType = rs1.getObject(2).toString();
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rs2 = ps.executeQuery("select current_user");
                while (rs2.next()) {
                    TransNo = "";
                    userName = rs2.getObject(1).toString();
                }
                java.sql.Statement pst2 = connectDB.createStatement();
                java.sql.ResultSet rs = pst2.executeQuery("select 'PYMT_REQ'||lpad(nextval('invoice_no_seq')::text,7,0::text)");
                while (rs.next()) {
                    voucNo = rs.getObject(1).toString();
                }
                if (documentNoTxt.getText().length() > 0 && glCodeTxt.getText().length() > 0 && otherpaymentsTable.getValueAt(0, 0) != null && otherpaymentsTable.getValueAt(0, 8) != null) {
                    java.sql.Statement pst2Salary = connectDB.createStatement();
                    java.sql.ResultSet rsSalary = pst2Salary.executeQuery("select 'OTHER_PAY'||lpad(nextval('salary_advance')::text,7,0::text)");
                    while (rsSalary.next()) {
                        voucNo = rsSalary.getObject(1).toString();
                    }

                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");//added

                pstmt1.setString(1, dealerNameTxt4.getText());
                pstmt1.setString(13, documentNoTxt.getText());
                pstmt1.setObject(6, "BEING PAYMENTS TO BOARD MEMBERS FOR "+reasonOfPaymentTxt.getText());

                pstmt1.setObject(2, expenseDescTxt.getText());
                pstmt1.setObject(3, glCodeTxt.getText());
                pstmt1.setObject(4, voucNo);
                pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));

                pstmt1.setObject(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                pstmt1.setDouble(8, 0.00);
                pstmt1.setDouble(9, com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 8));
                pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                pstmt1.setObject(11, "");
                pstmt1.setDouble(12, 0.00);

                pstmt1.setBoolean(14, false);
                pstmt1.setBoolean(15, false);
                pstmt1.setObject(16, documentNoTxt.getText());
                pstmt1.setBoolean(17, false);
                pstmt1.setObject(18, null);
                pstmt1.setObject(19, null);
                pstmt1.setBoolean(20, false);
                pstmt1.setString(21, userName);
                pstmt1.executeUpdate();
                java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                pstmt7.setString(1, dealerNameTxt4.getText());
                pstmt7.setObject(2, voucNo);
                pstmt7.executeUpdate();

                if (com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 7) > 0) {

                    java.sql.Statement psy = connectDB.createStatement();
                    java.sql.ResultSet rs2y = psy.executeQuery("select nextval('transaction_no_seq'),current_user");
                    while (rs2y.next()) {
                        TransNo = rs2y.getObject(1).toString();
                        userName = rs2y.getObject(2).toString();
                    }

                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                    pstmt2.setObject(1, glCodeTxt.getText());
                    pstmt2.setObject(2, expenseDescTxt.getText());
                    pstmt2.setString(3,documentNoTxt.getText());
                    if (dealerNameTxt2.getText() == null) {
                        javax.swing.JOptionPane.showMessageDialog(this, "You must Enter Payee!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    } else {
                        pstmt2.setObject(4, dealerNameTxt2.getText().toString());
                    }
                    pstmt2.setObject(5, reasonOfPaymentTxt.getText());
                    pstmt2.setObject(6, "");
                    pstmt2.setObject(7, dealerNameTxt2.getText().toString());
                    pstmt2.setString(8, "");
                    pstmt2.setString(9, "");
                    pstmt2.setString(10, "");
                    pstmt2.setString(11, documentNoTxt.getText());
                    pstmt2.setString(12, "");
                    pstmt2.setString(13, "");
                    pstmt2.setString(14, expenseDescTxt.getText());
                    pstmt2.setString(15, "BOARD PAYMENTS");
                    pstmt2.setDouble(17, 0.00);
                    pstmt2.setDouble(16, com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 7));
                    pstmt2.setDate(18, datenowSql);
                    pstmt2.setString(19, TransNo);
                    pstmt2.setBoolean(20, false);
                    pstmt2.setBoolean(21, false);
                    pstmt2.setBoolean(22, false);
                    pstmt2.setString(23, userName);
                    pstmt2.executeUpdate();

                    java.sql.PreparedStatement pstmtNet = connectDB.prepareStatement("insert into ac_accounts_payable "
                        + "values(?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?)");
                    pstmtNet.setObject(1, accountCode);
                    pstmtNet.setObject(2, dealerNameTxt2.getText().toString());
                    pstmtNet.setObject(3, expenseDescTxt.getText());
                    pstmtNet.setString(4, "");
                    pstmtNet.setObject(5, dealerNameTxt2.getText().toString());
                    pstmtNet.setString(6,  "Being payment of P.A.Y.E to "+dealerNameTxt2.getText()+" \nfor Board members\n"+reasonOfPaymentTxt.getText());
                    pstmtNet.setString(7, "");
                    pstmtNet.setString(8, "");
                    pstmtNet.setString(9, "");
                    pstmtNet.setString(10, "");
                    pstmtNet.setString(11, TransNo);
                    pstmtNet.setString(12, "Raise Invoice");
                    pstmtNet.setDouble(13, 0.00);
                    pstmtNet.setDouble(14, com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 7));
                    pstmtNet.setDouble(25, com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 7));
                    pstmtNet.setDate(15,datenowSql);
                    pstmtNet.setObject(16, "PAYE_"+documentNoTxt.getText());
                    pstmtNet.setString(17, glType);
                    pstmtNet.setBoolean(18, false);
                    pstmtNet.setBoolean(19, false);
                    pstmtNet.setString(20, userName);
                    pstmtNet.setString(21, "");
                    pstmtNet.setObject(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                    pstmtNet.setDate(23, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                    pstmtNet.setDouble(24, 0.00);
                    pstmtNet.setDouble(26, 0.00);
                    pstmtNet.setObject(27, null);
                    pstmtNet.setObject(28, 0.0);
                    pstmtNet.setObject(29, 0.0);
                    pstmtNet.setObject(30, 0.0);
                    pstmtNet.setObject(31, 0.0);
                    pstmtNet.setString(32, imprestNumberTxt.getText().toString());
                    pstmtNet.executeUpdate();

                    //                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date,"
                        //                                + "                                                                                  ?, ?, ?,?,?,?,?,"
                        //                                + "                                                                                  ?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");//added
                //                        java.sql.Statement pst2Salary1 = connectDB.createStatement();
                //                        java.sql.ResultSet rsSalary1 = pst2Salary1.executeQuery("select 'PAYE_PAY'||lpad(nextval('salary_advance')::text,7,0::text)");
                //                        while (rsSalary1.next()) {
                    //                            voucNo1 = rsSalary1.getObject(1).toString();
                    //                        }
                //
                //                        java.sql.Statement pstPaye = connectDB.createStatement();
                //                        java.sql.ResultSet rsPaye = pstPaye.executeQuery("select code,activity from pb_activity where activity = 'PAYE' and activity_category = 'Bl'");
                //                        while (rsPaye.next()) {
                    //                            accountCodepaye = rsPaye.getObject(1).toString();
                    //                            glTypepaye = rsPaye.getObject(2).toString();
                    //                        }
                //
                //                        pstmt2.setString(1, dealerNameTxt2.getText());
                //                        pstmt2.setString(13, documentNoTxt.getText());
                //                        pstmt2.setObject(2, expenseDescTxt.getText());
                //                        pstmt2.setObject(3, glCodeTxt.getText() );
                //                        pstmt2.setObject(4, voucNo1);
                //                        pstmt2.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                //
                //                        pstmt2.setObject(6, "Being payment of P.A.Y.E to "+dealerNameTxt2.getText()+" \nfor Board members\n"+reasonOfPaymentTxt.getText());
                //
                //                        pstmt2.setObject(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                //                        pstmt2.setDouble(8, 0.00);
                //                        pstmt2.setDouble(9, com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 7));
                //                        pstmt2.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                //                        pstmt2.setObject(11, "");
                //                        pstmt2.setDouble(12, 0.00);
                //
                //                        pstmt2.setBoolean(14, false);
                //                        pstmt2.setBoolean(15, false);
                //                        pstmt2.setObject(16, documentNoTxt.getText());
                ////                        pstmt2.setBoolean(17, billTable.getValueAt(i, 2).toString());
                ////                        pstmt2.setBoolean(18, false);
                ////                        pstmt2.setBoolean(19, false);
                ////                        pstmt2.setBoolean(20, false);
                ////                        pstmt2.setObject(21, null);
                //                       // pstmt2.setObject(22,null);
                ////
                //                        pstmt2.executeUpdate();
                //
                java.sql.PreparedStatement pstmt8 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user)");
                pstmt8.setString(1, dealerNameTxt2.getText());
                pstmt8.setObject(2, "PAYE_"+documentNoTxt.getText());
                pstmt8.executeUpdate();
            }
            for (int i = 0; i < otherpaymentsTable.getRowCount(); i++) {
                if (otherpaymentsTable.getModel().getValueAt(i, 1) != null && otherpaymentsTable.getModel().getValueAt(i, 8) != null) {

                    sittingAllTxt.setText(String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(otherpaymentsTable, 8))));
                    java.sql.PreparedStatement psmtBoard = connectDB.prepareStatement("INSERT INTO ac_other_payments(dealer, dealer_code, description, code, document_no, voucher_no,"
                        + "  transaction_no, transaction_type, voucher_date, reason, sitting_allowance, mileage, accomodation, "
                        + "  gross_pay, paye, others, debit, credit, date, approved, commited, schedule_no, examination, accountant,user_name) "
                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date, ?,?,?,?,?,?)");
                    psmtBoard.setObject(1, otherpaymentsTable.getValueAt(i, 0).toString());
                    psmtBoard.setObject(2, otherpaymentsTable.getValueAt(i, 1).toString());
                    psmtBoard.setObject(3, expenseDescTxt.getText());
                    psmtBoard.setObject(4, glCodeTxt.getText());
                    psmtBoard.setObject(5, documentNoTxt.getText());
                    psmtBoard.setObject(6, voucNo);
                    psmtBoard.setObject(7, TransNo);
                    psmtBoard.setString(8, "BOARD MEMBER");
                    psmtBoard.setObject(9, com.afrisoftech.lib.SQLDateFormat.getSQLDate(otherPamentsDate.getDate()));
                    psmtBoard.setObject(10, "BEING PAYMENTS TO BOARD MEMBERS FOR "+reasonOfPaymentTxt.getText());
                    psmtBoard.setDouble(11, java.lang.Double.valueOf(otherpaymentsTable.getValueAt(i, 2).toString()));//sitting all
                    psmtBoard.setDouble(12, java.lang.Double.valueOf(otherpaymentsTable.getValueAt(i, 3).toString()));//mileage
                    psmtBoard.setDouble(13, java.lang.Double.valueOf(otherpaymentsTable.getValueAt(i, 4).toString()));//accomodation
                    psmtBoard.setDouble(14, java.lang.Double.valueOf(otherpaymentsTable.getValueAt(i, 6).toString()));//Gross pay
                    psmtBoard.setDouble(15, java.lang.Double.valueOf(otherpaymentsTable.getValueAt(i, 7).toString()));//paye
                    psmtBoard.setDouble(16, java.lang.Double.valueOf(otherpaymentsTable.getValueAt(i, 5).toString()));//others
                    psmtBoard.setDouble(17, 0.00);//Net pay
                    psmtBoard.setDouble(18, java.lang.Double.valueOf(otherpaymentsTable.getValueAt(i, 8).toString()));//net pay
                    psmtBoard.setBoolean(19, false);
                    psmtBoard.setBoolean(20, false);//committed
                    psmtBoard.setString(21, "");//schedule
                    psmtBoard.setObject(22, false);
                    psmtBoard.setBoolean(23, false);
                    psmtBoard.setObject(24, userName);
                    psmtBoard.executeUpdate();

                }
            }

            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Data Saved Successfully", "Comfirmation", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            clear();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter the document number, netpay, name of the payee\n and select GL Account", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(e.getMessage());

        }
        }
    }//GEN-LAST:event_makeOtherPaymentsBtnActionPerformed

    private void lpotxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_lpotxtCaretUpdate
        // TODO add your handling code here:
        if(lpotxt.getCaretPosition()>1){

            lpotable.setModel(TableModel.createTableVectorsCaret(connectDB, "SELECT distinct invoice_no,date_received,date_on_invoice,amount,doc_type,false as Tick from ac_creditor_invoice_register where code='"+dealerCodeTxt.getText()+"' and invoice_no ilike '%"+lpotxt.getText()+"%' and status =false order by date_received asc"));

        }
    }//GEN-LAST:event_lpotxtCaretUpdate

    private void lpotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpotxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lpotxtActionPerformed
    private double calculate(){
        double y=0.0;
        lastRow=0;
        invoice="";
          for(int i=0;i<lpotable.getRowCount();i++){
               
                       if(Boolean.valueOf(lpotable.getValueAt(i, 5).toString())==true){
                           if(y==0){
                              invoice=lpotable.getValueAt(i, 0).toString(); 
                           }else{
                                invoice=invoice+"/"+lpotable.getValueAt(i, 0).toString();
                           }
                          System.err.println(y);
                           y=y+Double.parseDouble(lpotable.getValueAt(i, 3).toString());
                          lastRow=i;
                       }
               
            }  
        return y;
    }
    private void lpotableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lpotableMouseClicked
        // TODO add your handling code here:
        System.err.println("here");
        if(lpotable.getSelectedColumn()==-1){
            System.err.println("hre");
            jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(calculate()));
        }
    }//GEN-LAST:event_lpotableMouseClicked

    private void jSearchScrollPane8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchScrollPane8MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jSearchScrollPane8MouseClicked

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
        // TODO add your handling code here:
        this.lposearchdialog.dispose();
    }//GEN-LAST:event_jButton57ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        calculate();

        billTable.setValueAt(invoice, 0, 2);
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();

        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

        sdf.applyPattern("yyyy-MM-dd");

        try {
          
            billTable.setValueAt(sdf.parse(lpotable.getValueAt(lastRow, 2).toString()), 0, 4);
            billTable.setValueAt(sdf.parse(lpotable.getValueAt(lastRow, 1).toString()), 0, 3);
            //billTable.
//            invoiceDate.setDate(sdf.parse(lpotable.getValueAt(lastRow, 2).toString()));
//            invoiceReceivedDatePicker.setDate(sdf.parse(lpotable.getValueAt(lastRow, 1).toString()));

        }catch(Exception r){
            r.printStackTrace();
        }
        lposearchdialog.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed
  
//private void cmboxActionPerformed(javax.swing.
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable LSOtbl;
    private javax.swing.JTextField accomodationTxt;
    private javax.swing.JTable billTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JRadioButton creditorsBtn;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel dealerCodeTxt;
    private javax.swing.JTextField dealerNameTxt;
    private javax.swing.JTextField dealerNameTxt1;
    private javax.swing.JTextField dealerNameTxt2;
    private javax.swing.JTextField dealerNameTxt3;
    private javax.swing.JTextField dealerNameTxt4;
    private javax.swing.JComboBox deptNameCmbx;
    private javax.swing.JTextField documentNoTxt;
    private javax.swing.JButton editPayedRequisitionBtn;
    private javax.swing.JTextField expenseDescTxt;
    private javax.swing.JTextField glCodeTxt;
    private javax.swing.JTextField grossPayTxt;
    private javax.swing.JTextField heldBalTxt;
    private javax.swing.JRadioButton imprestBtn;
    private javax.swing.JComboBox imprestHolderCmbx;
    private javax.swing.JTextField imprestNumberTxt;
    private javax.swing.JComboBox imprestTypeCmbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    public javax.swing.JButton jButton43;
    public javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel2111;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JDialog jSearchDialog4;
    private javax.swing.JDialog jSearchDialog5;
    private javax.swing.JDialog jSearchDialog6;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JPanel jSearchPanel4;
    private javax.swing.JPanel jSearchPanel5;
    private javax.swing.JPanel jSearchPanel6;
    private javax.swing.JPanel jSearchPanel7;
    private javax.swing.JPanel jSearchPanel8;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JScrollPane jSearchScrollPane4;
    private javax.swing.JScrollPane jSearchScrollPane5;
    private javax.swing.JScrollPane jSearchScrollPane6;
    private javax.swing.JScrollPane jSearchScrollPane7;
    private javax.swing.JScrollPane jSearchScrollPane8;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JTable jSearchTable4;
    private javax.swing.JTable jSearchTable5;
    private javax.swing.JTable jSearchTable6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField lpoAmountTxt;
    private javax.swing.JDialog lposearchdialog;
    private javax.swing.JTable lpotable;
    private javax.swing.JTextField lpotxt;
    private javax.swing.JButton makeOtherPaymentsBtn;
    private javax.swing.JTextField mileageTxt;
    private javax.swing.JTextField netAmountPayable;
    private javax.swing.JTextField netPayTxt;
    private javax.swing.JTextField nextName;
    private javax.swing.JLabel nextOfKInLabel;
    private javax.swing.JLabel nextOfKInLabel1;
    private javax.swing.JRadioButton nextOfKinRdi;
    private javax.swing.JTextField nextOfKinTxt;
    private com.afrisoftech.lib.DatePicker otherPamentsDate;
    private javax.swing.JTextField otherTxt;
    private javax.swing.JTable otherpaymentsTable;
    private javax.swing.JTextField payeTxt;
    private javax.swing.JButton paymentRequestBtn;
    private javax.swing.JTextField reasonOfPaymentTxt;
    private javax.swing.JButton removeRowBtn;
    private javax.swing.JButton resetbtn;
    private javax.swing.JCheckBox retentionAmountChk;
    private javax.swing.JTextField retentionAmountTxt;
    private com.afrisoftech.lib.DatePicker retentionDateDue;
    private javax.swing.JTextField retentionPercentageTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton21;
    private javax.swing.JButton searchButton3;
    private javax.swing.JDialog searchLSODialog;
    private javax.swing.JTextField searchLSOtxt;
    private javax.swing.JTable searchOtherPaymentTable;
    private javax.swing.JTextField searchOtherPaymentTxt;
    private javax.swing.JDialog searchOtherPaymentsDialog;
    private javax.swing.JTextField sittingAllTxt;
    private javax.swing.JCheckBox taLsoChk;
    private javax.swing.JTextField taxPercentageTxt;
    private javax.swing.JCheckBox vatchck;
    private javax.swing.JTextField vatxt;
    private javax.swing.JCheckBox withHoldChk;
    private javax.swing.JTextField withHoldTaxTxt;
    // End of variables declaration//GEN-END:variables
}
