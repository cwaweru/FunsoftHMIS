/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

//import com.sun.star.lib.uno.environments.java.java_environment;
import java.awt.Color;
import java.text.FieldPosition;
import java.text.ParsePosition;
import java.util.Date;
import java.util.Vector;
import kiwi.ui.DateChooser;

/**
 *
 * @author  root 
 */
public class ImprestCheckerSurrenderIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    String desc = null;
    String billNo = null;
    String transNo = null;
    String payMode = null;
    String patientAcc = null;
    String cardNo = null;
    String AccDesc = null;
    String scheme = null;
    String cardName = null;
    String isurer = null;
    String expDate = null;
    String staffNo = null;
    String glAcc = null;
    String receiptNo1 = null;
    String actCode1 = null;
    String glCode1 = null;
    String bankAcc1 = null;
    String transNo1 = null;
    String actNames1 = null;
    String patCat1 = null;
    String patientAcc1 = null;
    String user = null;
    String glAcc1 = null;
    String accDesc1 = null;
    String name = null;
    String rname = null;
    String rcode = null;
    java.sql.Connection connectDB = null;
    String cashPoint = null;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;
    javax.swing.table.TableModel tableModel;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox1;
    private javax.swing.JComboBox cmbox2;
    double sumSelected = 0.00;
    Vector vecSum = new Vector();
    //   java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public ImprestCheckerSurrenderIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
         Boolean checker=false;
        
        System.out.println("Cashpoint : "+System.getProperty("cashpoint"));
        
        //        System.out.println("Shift No. : "+getShiftMunber());
        
        // jTextField14.setText(System.getProperty("cashpoint"));
        
        // jTextField81.setText(getShiftNumber());
        //jTextField14.setText(getCashPoint());
        //jTextField81.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField11112 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton411 = new javax.swing.JButton();
        jButton511 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField111111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialogPayee = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        searchImprestTxt = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel13 = new javax.swing.JPanel();
        jTextField11113 = new javax.swing.JTextField();
        jSearchScrollPane13 = new javax.swing.JScrollPane();
        jSearchTable13 = new com.afrisoftech.dbadmin.JTable();
        jButton512 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jTextField6 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        grnTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        ImprestTable = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jPanel10 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel53 = new javax.swing.JLabel();
        totalAmounttxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        surrenderRbtn = new javax.swing.JRadioButton();
        reverseRbtn = new javax.swing.JRadioButton();
        replenishRbtn = new javax.swing.JRadioButton();
        jPanel61 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        approvedAmountTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        departmentCmb = new javax.swing.JComboBox();
        dateSurrender = new com.afrisoftech.lib.DatePicker();
        jPanel63 = new javax.swing.JPanel();
        payeeTxt = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        invoiceNoLbl = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        invoiceNo = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        voucherNoTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        unsurrenderedAmtLbl = new javax.swing.JLabel();
        unsurrenderedAmountTxt = new javax.swing.JTextField();
        totalAmountIssuedTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel65 = new javax.swing.JPanel();
        voucherNoSrchTxt = new javax.swing.JTextField();
        searchButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        savePrintBtn = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        saveOnlyBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        rejectBtn = new javax.swing.JButton();
        jPanel711 = new javax.swing.JPanel();
        jLabel711 = new javax.swing.JLabel();
        jTextField611 = new javax.swing.JTextField();
        jPanel212 = new javax.swing.JPanel();
        jLabel911 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel2122 = new javax.swing.JLabel();
        jLabel3121 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jTextField152 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField3111 = new javax.swing.JTextField();
        jLabel53111 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jPanel1111 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1111 = new javax.swing.JButton();
        jButton3111 = new javax.swing.JButton();
        jButton4111 = new javax.swing.JButton();
        jButton5111 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11111 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jLabel43 = new javax.swing.JLabel();
        jComboBox13 = new javax.swing.JComboBox();
        jPanel62 = new javax.swing.JPanel();
        jTextField362 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTextField81 = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        cashPontTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        skableItemsRdo = new javax.swing.JRadioButton();
        unstockableItemsRdo = new javax.swing.JRadioButton();
        refundRdBtn = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton41, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField11111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        jTextField11112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11112CaretUpdate(evt);
            }
        });
        jTextField11112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel12.add(jTextField11112, gridBagConstraints);

        jSearchTable12.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable12.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });
        jSearchScrollPane12.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton411.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton411, gridBagConstraints);

        jButton511.setText("Dispose");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel12, gridBagConstraints);

        jSearchDialog111.setModal(true);
        jSearchDialog111.setUndecorated(true);
        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jTextField111111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel111.add(jTextField111111, gridBagConstraints);

        jSearchTable111.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });
        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        jSearchDialogPayee.setModal(true);
        jSearchDialogPayee.setUndecorated(true);
        jSearchDialogPayee.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchImprestTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchImprestTxtCaretUpdate(evt);
            }
        });
        searchImprestTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchImprestTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(searchImprestTxt, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialogPayee.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog12.setModal(true);
        jSearchDialog12.setUndecorated(true);
        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel13.setLayout(new java.awt.GridBagLayout());

        jTextField11113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11113CaretUpdate(evt);
            }
        });
        jTextField11113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11113ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel13.add(jTextField11113, gridBagConstraints);

        jSearchTable13.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable13.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable13MouseClicked(evt);
            }
        });
        jSearchScrollPane13.setViewportView(jSearchTable13);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel13.add(jSearchScrollPane13, gridBagConstraints);

        jButton512.setText("Close");
        jButton512.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton512ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel13.add(jButton512, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel13, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Check Imprest Surrendered For Approval");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jTextField8.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField8.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        getContentPane().add(jTextField8, gridBagConstraints);

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jSeparator1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField2.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField2.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel3.add(jTextField2, gridBagConstraints);

        jLabel4.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Supporting Documents"));
        jScrollPane1.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        grnTxt.setEditable(false);
        grnTxt.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(grnTxt, gridBagConstraints);

        jLabel9.setText("Payee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel2.setText("GRN NO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel1.setText("Date of surrender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        voucherNoTxt.setVisible(false);
        jLabel3.setVisible(false);
        jComboBox2.setVisible(false);
        jPanel61.setVisible(false);
        jPanel31.setLayout(new java.awt.GridBagLayout());

        ImprestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "A/C Description", "Purpose/Particulars", "Qty", "Amount", "GL Account", "Checked"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ImprestTable.setShowHorizontalLines(false);
        /*cmbox = new javax.swing.JComboBox();

        cmbox.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_donor ORDER BY code"));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Donor");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });

        cmbox1 = new javax.swing.JComboBox();

        cmbox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_project ORDER BY code"));
        javax.swing.table.TableColumn t = this.jTable1.getColumn("Proj");
        t.setCellEditor(new javax.swing.DefaultCellEditor(cmbox1));
        cmbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbox1ActionPerformed(evt);
            }
        });

        cmbox2 = new javax.swing.JComboBox();

        cmbox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_branch ORDER BY code"));
        javax.swing.table.TableColumn n = this.jTable1.getColumn("Unit");
        n.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));
        cmbox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbox2ActionPerformed(evt);
            }
        });
        */

        javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 5; i++) {

            column = ImprestTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {
                if(i == 0){
                    column.setPreferredWidth(200);
                }else{
                    if( i == 2){
                        column.setPreferredWidth(50);
                    }else{
                        column.setPreferredWidth(100);
                    }
                }
            }

        }
        ImprestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ImprestTableMouseClicked(evt);
            }
        });
        ImprestTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ImprestTableKeyReleased(evt);
            }
        });
        jScrollPane11.setViewportView(ImprestTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel31.add(jScrollPane11, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jCheckBox4);
        jCheckBox4.setSelected(true);
        jCheckBox4.setText("Search By Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox4, gridBagConstraints);

        buttonGroup1.add(jCheckBox5);
        jCheckBox5.setText("Search By Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel31.add(jPanel10, gridBagConstraints);

        jLabel53.setForeground(new java.awt.Color(0, 0, 0));
        jLabel53.setText("Amount Spent:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel31.add(jLabel53, gridBagConstraints);

        totalAmounttxt.setEditable(false);
        totalAmounttxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        totalAmounttxt.setForeground(new java.awt.Color(153, 0, 0));
        totalAmounttxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalAmounttxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
        jPanel31.add(totalAmounttxt, gridBagConstraints);

        buttonGroup2.add(surrenderRbtn);
        surrenderRbtn.setSelected(true);
        surrenderRbtn.setText("Surrender");
        surrenderRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surrenderRbtnActionPerformed(evt);
            }
        });
        jPanel4.add(surrenderRbtn);

        buttonGroup2.add(reverseRbtn);
        reverseRbtn.setText("Reverse");
        reverseRbtn.setEnabled(false);
        reverseRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reverseRbtnActionPerformed(evt);
            }
        });
        jPanel4.add(reverseRbtn);

        buttonGroup2.add(replenishRbtn);
        replenishRbtn.setText("Replenish");
        replenishRbtn.setEnabled(false);
        replenishRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replenishRbtnActionPerformed(evt);
            }
        });
        jPanel4.add(replenishRbtn);

        jPanel31.add(jPanel4, new java.awt.GridBagConstraints());

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setEnabled(false);
        jPanel61.setMinimumSize(new java.awt.Dimension(82, 25));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jTextField361.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField361, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search Patient's Name");
        searchButton1.setEnabled(false);
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel61.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel31.add(jPanel61, gridBagConstraints);

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct bank_account_no from ac_banks_setup"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(jComboBox2, gridBagConstraints);

        jPanel8.setBackground(new java.awt.Color(255, 204, 204));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        approvedAmountTxt.setEditable(false);
        approvedAmountTxt.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        approvedAmountTxt.setForeground(new java.awt.Color(204, 0, 0));
        approvedAmountTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        approvedAmountTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        jPanel8.add(approvedAmountTxt, gridBagConstraints);

        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Approved Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        jPanel8.add(jLabel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(jPanel8, gridBagConstraints);

        jLabel16.setText("jLabel16");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel31.add(jLabel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel3.add(jPanel31, gridBagConstraints);

        departmentCmb.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT UPPER(department_name) as department_name  from pb_departments ORDER BY department_name"));
        departmentCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentCmbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(departmentCmb, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(dateSurrender, gridBagConstraints);

        jPanel63.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel63.setMinimumSize(new java.awt.Dimension(24, 25));
        jPanel63.setLayout(new java.awt.GridBagLayout());

        payeeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(payeeTxt, gridBagConstraints);

        searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton3.setToolTipText("Search patient name");
        searchButton3.setEnabled(false);
        searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(searchButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel3.add(jPanel63, gridBagConstraints);

        invoiceNoLbl.setText("Invoice No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(invoiceNoLbl, gridBagConstraints);

        jPanel64.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel64.setMinimumSize(new java.awt.Dimension(82, 25));
        jPanel64.setLayout(new java.awt.GridBagLayout());

        invoiceNo.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel64.add(invoiceNo, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton4.setToolTipText("Search Patient's Invoice");
        searchButton4.setEnabled(false);
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel64.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanel64, gridBagConstraints);

        jLabel12.setText("Total Imprest Issued:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel12, gridBagConstraints);

        voucherNoTxt.setEditable(false);
        voucherNoTxt.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(voucherNoTxt, gridBagConstraints);

        jLabel14.setText("Imprest No:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel14, gridBagConstraints);

        unsurrenderedAmtLbl.setText("Unsurrendered Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(unsurrenderedAmtLbl, gridBagConstraints);

        unsurrenderedAmountTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(unsurrenderedAmountTxt, gridBagConstraints);

        totalAmountIssuedTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(totalAmountIssuedTxt, gridBagConstraints);

        jLabel11.setText("Voucher No:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel11, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Approved Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel7.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        jPanel65.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel65.setMinimumSize(new java.awt.Dimension(24, 25));
        jPanel65.setLayout(new java.awt.GridBagLayout());

        voucherNoSrchTxt.setEditable(false);
        voucherNoSrchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voucherNoSrchTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel65.add(voucherNoSrchTxt, gridBagConstraints);

        searchButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton5.setToolTipText("Search patient name");
        searchButton5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton5.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton5.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 1.0;
        jPanel65.add(searchButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel3.add(jPanel65, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        savePrintBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        savePrintBtn.setMnemonic('p');
        savePrintBtn.setText("Save & Print");
        savePrintBtn.setToolTipText("Click here enter data");
        savePrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePrintBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(savePrintBtn, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        jButton12.setMnemonic('p');
        jButton12.setText("Reprint");
        jButton12.setToolTipText("Click here enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton12, gridBagConstraints);

        saveOnlyBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        saveOnlyBtn.setMnemonic('s');
        saveOnlyBtn.setText("Save");
        saveOnlyBtn.setToolTipText("Click here enter data");
        saveOnlyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveOnlyBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(saveOnlyBtn, gridBagConstraints);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif"))); // NOI18N
        jButton2.setMnemonic('R');
        jButton2.setText("Remove Row");
        jButton2.setToolTipText("Click here to edit data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton2, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jLabel15, gridBagConstraints);

        rejectBtn.setText("Reject");
        rejectBtn.setEnabled(false);
        rejectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        jPanel5.add(rejectBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel5, gridBagConstraints);

        jTabbedPane1.addTab("Payments", jPanel1);

        jPanel711.setLayout(new java.awt.GridBagLayout());

        jLabel711.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel711.add(jLabel711, gridBagConstraints);

        jTextField611.setEditable(false);
        jTextField611.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField611.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel711.add(jTextField611, gridBagConstraints);

        jPanel212.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient here"));
        jPanel212.setLayout(new java.awt.GridBagLayout());

        jLabel911.setText("Paid To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel911, gridBagConstraints);

        jLabel112.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel112, gridBagConstraints);

        jTextField20.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jTextField20, gridBagConstraints);

        jLabel2122.setText("Visit ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel2122, gridBagConstraints);

        jLabel3121.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel3121, gridBagConstraints);

        jTextField25.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jTextField25, gridBagConstraints);

        jTextField152.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField152.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel212.add(jTextField152, new java.awt.GridBagConstraints());

        jTextField16.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jTextField16, gridBagConstraints);

        jLabel8.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel8, gridBagConstraints);

        jTextField3111.setEditable(false);
        jTextField3111.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jTextField3111, gridBagConstraints);

        jLabel53111.setText("Amt Paid");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel53111, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jTextField17, gridBagConstraints);

        jLabel91.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel91, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jTextField41, gridBagConstraints);

        jPanel1111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1111.setLayout(new java.awt.GridBagLayout());

        jButton1111.setBackground(new java.awt.Color(230, 230, 230));
        jButton1111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        jButton1111.setMnemonic('O');
        jButton1111.setText("Ok");
        jButton1111.setToolTipText("Click here enter data");
        jButton1111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton1111, gridBagConstraints);

        jButton3111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        jButton3111.setMnemonic('l');
        jButton3111.setText("Clear");
        jButton3111.setToolTipText("Click here to clear textfields");
        jButton3111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton3111, gridBagConstraints);

        jButton4111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
        jButton4111.setMnemonic('C');
        jButton4111.setText("Close");
        jButton4111.setToolTipText("Click here to close window");
        jButton4111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton4111, gridBagConstraints);

        jButton5111.setMnemonic('h');
        jButton5111.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton5111, gridBagConstraints);

        jButton11111.setBackground(new java.awt.Color(230, 230, 230));
        jButton11111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        jButton11111.setMnemonic('R');
        jButton11111.setText("Reprint");
        jButton11111.setToolTipText("Click here enter data");
        jButton11111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton11111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel212.add(jPanel1111, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField36, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel212.add(jPanel6, gridBagConstraints);

        jLabel41.setText("Donor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel41, gridBagConstraints);

        jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_donor ORDER BY code"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jComboBox11, gridBagConstraints);

        jLabel42.setText("Project");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel42, gridBagConstraints);

        jComboBox12.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_project ORDER BY code"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jComboBox12, gridBagConstraints);

        jLabel43.setText("Unit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel43, gridBagConstraints);

        jComboBox13.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_branch ORDER BY code"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jComboBox13, gridBagConstraints);

        jPanel62.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel62.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel62.setLayout(new java.awt.GridBagLayout());

        jTextField362.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(jTextField362, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel62.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jPanel62, gridBagConstraints);

        jLabel5.setText("GL Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel5, gridBagConstraints);

        jLabel6.setText("GL A/C");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel6, gridBagConstraints);

        jTextField7.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jTextField7, gridBagConstraints);

        jLabel7.setText("Reason");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jTextField9, gridBagConstraints);

        buttonGroup3.add(jCheckBox1);
        jCheckBox1.setText("IN Patient");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jCheckBox1, gridBagConstraints);

        buttonGroup3.add(jCheckBox2);
        jCheckBox2.setText("Out Patient");
        jCheckBox2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel212.add(jCheckBox2, gridBagConstraints);

        jLabel13.setText("Voucher No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel212.add(jLabel13, gridBagConstraints);

        jTextField10.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel212.add(jTextField10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel711.add(jPanel212, gridBagConstraints);

        jTabbedPane1.addTab("In Patients Refunds", jPanel711);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField81.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField81, gridBagConstraints);

        jLabel131.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel131, gridBagConstraints);

        cashPontTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.5;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(cashPontTxt, gridBagConstraints);

        jLabel10.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        buttonGroup4.add(skableItemsRdo);
        skableItemsRdo.setText("Imprest from Stockable items");
        skableItemsRdo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skableItemsRdoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel9.add(skableItemsRdo, gridBagConstraints);

        buttonGroup4.add(unstockableItemsRdo);
        unstockableItemsRdo.setText("Imprest from unstockable Items");
        unstockableItemsRdo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unstockableItemsRdoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(unstockableItemsRdo, gridBagConstraints);

        buttonGroup4.add(refundRdBtn);
        refundRdBtn.setText("Refunds");
        refundRdBtn.setEnabled(false);
        refundRdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refundRdBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(refundRdBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel9, gridBagConstraints);

        jRadioButton1.setText("jRadioButton1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jRadioButton1, gridBagConstraints);

        setBounds(0, 0, 755, 500);
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void clear(){
        totalAmounttxt.setText("0.00");
        payeeTxt.setText("");
        invoiceNo.setText("");
        grnTxt.setText("-");
        totalAmountIssuedTxt.setText("0.00");
        unsurrenderedAmountTxt.setText("0.00");
        voucherNoTxt.setText("-");
        totalAmounttxt.setText("0.00");
        approvedAmountTxt.setText("0.00");
        
        
        
        for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
          for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
          ImprestTable.getModel().setValueAt(null,k,r);
            }
        }
                    
    }
        private void populateTable12x(java.lang.String requisitioner) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
           /* java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select count(requisition_no) from ac_petty_cash_requisition where requisitioner ='"+requisitioner+"' AND approved = true AND paid = false");
            
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
            */
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select purpose,reason,quantity,sum(credit),code from ac_petty_cash_requisition where requisition_no ='"+requisitioner+"' AND approved = true AND paid = false GROUP By purpose,reason,quantity,code");
            
            while (rsetTable11.next()) {
                
                System.out.println("Working at table row "+i);
                ImprestTable.setValueAt(rsetTable11.getObject(1), i, 0);
                ImprestTable.setValueAt(rsetTable11.getObject(2), i, 1);
                ImprestTable.setValueAt(rsetTable11.getObject(3), i, 2);
                ImprestTable.setValueAt(rsetTable11.getObject(4), i, 3);
                ImprestTable.setValueAt(rsetTable11.getObject(5), i, 4);
                ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                
                i++;
                
                //                i = i + i;
                //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
            }
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        searchButton111Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed
    private void searchButton111Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog12.dispose();
        
        java.awt.Point point = this.invoiceNo.getLocationOnScreen();
        jSearchDialog12.setLocation(point);
        
        jSearchDialog12.setSize(400,200);
        
        jSearchDialog12.setVisible(true);
    }
    private void jButton512ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton512ActionPerformed
        jSearchDialog12.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton512ActionPerformed
    
    private void jSearchTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable13MouseClicked
        invoiceNo.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 0).toString());
        for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
            for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
                ImprestTable.getModel().setValueAt(null,k,r);
            }
        }
        totalAmounttxt.setText("");
        int j = 0;
        int i = 0;
        // for (int i = 0; i < jTable1.getRowCount(); i++ ) {
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, reason,'1',sum(credit-debit),activity_code  FROM ac_ledger WHERE voucher_no = '"+invoiceNo.getText()+"'  and dealer ilike '"+payeeTxt.getText()+"' group by description, reason,activity_code");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                ImprestTable.setValueAt(rsetTable1.getObject(1), i, 0);
                ImprestTable.setValueAt(rsetTable1.getObject(2), i, 1);
                ImprestTable.setValueAt(rsetTable1.getObject(3), i, 2);
                ImprestTable.setValueAt(rsetTable1.getObject(4), i, 3);
                ImprestTable.setValueAt(rsetTable1.getObject(5), i, 4);
                i++;
                java.sql.Statement stmtTable11 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT sum(credit-debit)  FROM ac_ledger WHERE voucher_no = '"+invoiceNo.getText()+"' and dealer ilike '"+payeeTxt.getText()+"' ");
                
                while (rsetTable11.next()) {
                    totalAmounttxt.setText(rsetTable11.getObject(1).toString());
                }
                
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
            // }
        }
        jSearchDialog12.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTable13MouseClicked
    
    private void jTextField11113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11113ActionPerformed
// Add your handling code here:
    }//GEN-LAST:event_jTextField11113ActionPerformed
    
    private void jTextField11113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11113CaretUpdate
        for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
            for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
                ImprestTable.getModel().setValueAt(null,k,r);
            }
        }
        jSearchTable13.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct trim(voucher_no) as invoice_no,sum(credit-debit) as amount from ac_ledger where voucher_no ILIKE '"+jTextField11113.getText().toString()+"%' and dealer = '"+this.payeeTxt.getText()+"' GROUP BY 1  HAVING 2 > 0 ORDER BY invoice_no"));
        jSearchTable13.setShowHorizontalLines(false);
        jSearchScrollPane13.setViewportView(jSearchTable13);
        
    }//GEN-LAST:event_jTextField11113CaretUpdate
    
    private void searchImprestTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchImprestTxtCaretUpdate
        if(this.searchImprestTxt.getCaretPosition() < 1){
            System.out.print("Nothing");
        }else if(skableItemsRdo.isSelected()||unstockableItemsRdo.isSelected()){
            
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and (payee ILIKE '%" + searchImprestTxt.getText().toString() + "%' or staff_veh ILIKE '%" + searchImprestTxt.getText().toString() + "%')  and status != 'Payment Done' and approved_surrender = false and checked_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) >= 0 or sum(credit-debit)>0 ORDER BY 1"));
            System.out.println("select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and (payee ILIKE '%" + searchImprestTxt.getText().toString() + "%' or staff_veh ILIKE '%" + searchImprestTxt.getText().toString() + "%')  and status != 'Payment Done' and approved_surrender = false and checked_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) >= 0 or sum(credit-debit)>0 ORDER BY 1");
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");
          
            
            
        }  else{
        javax.swing.JOptionPane.showMessageDialog(null, "Select Imprest Type");
        } 
    
    }//GEN-LAST:event_searchImprestTxtCaretUpdate
    
    private void searchImprestTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchImprestTxtActionPerformed
// Add your handling code here:
    }//GEN-LAST:event_searchImprestTxtActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        voucherNoSrchTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        payeeTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        
        sumSelected= 0.00;
        for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
            for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
                ImprestTable.getModel().setValueAt(null,k,r);
            }
        }
        clear();
        savePrintBtn.setEnabled(true);
        saveOnlyBtn.setEnabled(true);
        //String invoiceNo = null;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select requisitioner,payee,department,date_required from ac_petty_cash_requisition where requisition_no ='"+voucherNoSrchTxt.getText().toString()+"' AND approved = true AND paid = false");
            
            while (rset.next()){
               
                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
                
                sdf.applyPattern("yyyy-MM-dd");
                
                try {
                    dateSurrender.setDate(sdf.parse(rset.getObject(4).toString()));
                } catch (java.text.ParseException pe) {
                    javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                }
            }
            //populate table with imprest balance    , 
            java.sql.Statement refunddetail = connectDB.createStatement();
            java.sql.ResultSet rsetRefunddetail = refunddetail.executeQuery("select sum(credit-debit) from ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"'");
            
            java.sql.Statement refund = connectDB.createStatement(); //activity,
            java.sql.ResultSet rsetRefund = refund.executeQuery("select  description from ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"' group by description having sum(credit-debit)>0");
            
            java.sql.Statement refundcode = connectDB.createStatement();
            java.sql.ResultSet rsetRefundcode = refundcode.executeQuery("select activity_code from ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"' group by activity_code having sum(credit-debit)>0");
            
            java.sql.Statement stmtBalance = connectDB.createStatement();
            java.sql.ResultSet rsetBalance = stmtBalance.executeQuery("select sum(debit-credit) as bal, sum(debit) as total, payee, voucher_no FROM ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"' and status != 'Payment Done' group by payee,voucher_no order by voucher_no");
                
            while (rsetBalance.next()){
                unsurrenderedAmountTxt.setText(rsetBalance.getObject(1).toString());
                totalAmountIssuedTxt.setText(rsetBalance.getObject(2).toString());
                payeeTxt.setText(rsetBalance.getObject(3).toString());
            }
           if(java.lang.String.valueOf(skableItemsRdo.isSelected()).trim().equalsIgnoreCase("true")){ 
            java.sql.Statement stmntInvoice = connectDB.createStatement();
            java.sql.ResultSet rsetInvoice = stmntInvoice.executeQuery("SELECT invoice_no, grn_no FROM st_stock_cardex where order_no = '"+voucherNoSrchTxt.getText()+"' and surrendered_items = false");
            while(rsetInvoice.next()){
                grnTxt.setText(rsetInvoice.getObject(2).toString());
                invoiceNo.setText(rsetInvoice.getObject(1).toString());
            }
            
            if(java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())<0){
            
              unsurrenderedAmtLbl.setText("Over Surrenderd Amount");
              unsurrenderedAmtLbl.setForeground(Color.red);
              
            
            }else if(java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())>=0){
              unsurrenderedAmtLbl.setText("Unsurrenderd Amount"); 
              unsurrenderedAmtLbl.setForeground(Color.black);
            }
            //SELECT order_no, item, price_per_item, units, quantity_received, supplier,debit, activity_code, FROM st_stock_cardex;
            ImprestTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT item, units, quantity_received, debit as Amount, activity_code, false as Check FROM st_stock_cardex WHERE order_no = '"+voucherNoSrchTxt.getText().toString()+"' and surrendered_items = false"));
               System.out.println("SELECT item, units, quantity_received, debit as Amount, activity_code, false as Approve FROM st_stock_cardex WHERE order_no = '"+voucherNoSrchTxt.getText().toString()+"' and surrendered_items = false"+voucherNoSrchTxt.getText().toString());
           }else 
               if(java.lang.String.valueOf(unstockableItemsRdo.isSelected()).trim().equalsIgnoreCase("true")){
               
           java.sql.Statement stmntInvoice = connectDB.createStatement();
            java.sql.ResultSet rsetInvoice = stmntInvoice.executeQuery("SELECT requisition_no FROM ac_unstockable_items where voucher_no = '"+voucherNoSrchTxt.getText()+"' and approved = false");
            while(rsetInvoice.next()){
                //invoiceNo = rsetInvoice.getObject(1).toString();
                invoiceNo.setText(rsetInvoice.getObject(1).toString());
            }
            
            
            if(java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())<0){
            unsurrenderedAmtLbl.setText("Over Surrenderd Amount");
            unsurrenderedAmtLbl.setForeground(Color.red);
                
            }else{
                
            unsurrenderedAmtLbl.setText("Unsurrenderd Amount"); 
            unsurrenderedAmtLbl.setForeground(Color.black);              
            
            }
            
            //SELECT dealer, description, quantity, activity_code, particular, department,requisition_no, voucher_no, debit FROM ac_unstockable_items;
            ImprestTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT description, particular, quantity, debit as Amount, activity_code, false as Check FROM ac_unstockable_items WHERE voucher_no = '"+voucherNoSrchTxt.getText().toString()+"' and approved = false"));
           }
            double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(ImprestTable, 3);
            totalAmounttxt.setText(java.lang.String.valueOf(totalSum));
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select SUM(credit) from ac_petty_cash_requisition where requisition_no ='"+voucherNoSrchTxt.getText()+"' AND approved = true AND paid = false");
            while (rset.next()){
                
                //jTextField3.setText(rset.getObject(1).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        this.populateTable12x(this.voucherNoSrchTxt.getText().toString());
        this.jSearchDialogPayee.dispose();     
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialogPayee.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButton22Clicked();
        //  this.jButton13.setEnabled(true);
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    private void searchButton22Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.payeeTxt.getLocationOnScreen();
        
        jSearchDialogPayee.setSize(300,200);
        
        jSearchDialogPayee.setLocation(point);
        
        jSearchDialogPayee.setVisible(true);
        
        
    }
    private void jButton11111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11111ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            
            String glAcc = null;
            String Activity = null;
            String userName = null;
            String voucherNo = null;
            String transNo = null;
            String Stock = null;
            String voucNo = null;
            String accountCode = null;
            String TransNo = null;
            String glType = null;
            try{
                connectDB.setAutoCommit(false);
                // jButton11ActionPerformed(evt);
                
                
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(currval('pet_voucher_no')::text,5,0::text)");
                while (rse1.next()){
                    
                    voucherNo = rse1.getObject(1).toString();
                }
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                com.afrisoftech.reports.PettyNgoPayVoucherPdf policy = new com.afrisoftech.reports.PettyNgoPayVoucherPdf();
                policy.PettyNgoPayVoucherPdf(connectDB,voucherNo);
                
            }   catch(java.sql.SQLException sq){
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }           // Add your handling code here:
    }//GEN-LAST:event_jButton11111ActionPerformed
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton2Clicked();          // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField362.getLocationOnScreen();
        
        jSearchDialog111.setSize(300,200);
        
        jSearchDialog111.setLocation(point);
        
        jSearchDialog111.setVisible(true);
        
        
        
    }
    
    
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.jSearchDialog111.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        jTextField362.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),1).toString());
        jTextField7.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),0).toString());
        this.jSearchDialog111.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField111111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111111CaretUpdate
        if(jCheckBox5.isSelected()){
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity WHERE activity ILIKE '%"+jTextField111111.getText()+"%' order by activity"));
            
            jSearchScrollPane111.setViewportView(jSearchTable111);
        }else{
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity where code ILIKE '"+jTextField111111.getText()+"%' order by code"));
            
            jSearchScrollPane111.setViewportView(jSearchTable111);
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField111111CaretUpdate
    
    private void replenishRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replenishRbtnActionPerformed
        jPanel61.setVisible(false);
        jComboBox2.setVisible(true);
        searchButton1.setEnabled(false);
        jLabel3.setVisible(true);
        voucherNoTxt.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_replenishRbtnActionPerformed
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_name,gl_code,bank_name from ac_banks_setup where bank_account_no ='"+jComboBox2.getSelectedItem().toString()+"'");
            while (rset1.next()){
                // jTextField4.setText(rset1.getObject(1).toString());
                approvedAmountTxt.setText(rset1.getObject(2).toString());
                // jTextField5.setText(rset1.getObject(3).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }  // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            
            String glAcc = null;
            String Activity = null;
            String userName = null;
            String voucherNo = null;
            String transNo = null;
            String Stock = null;
            String voucNo = null;
            String accountCode = null;
            String TransNo = null;
            String glType = null;
            try{
                connectDB.setAutoCommit(false);
                // jButton11ActionPerformed(evt);
                
                
                if(voucherNoTxt.getText().equalsIgnoreCase("-")){
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(currval('pet_voucher_no')::text,5,0::text)");
                    while (rse1.next()){
                        
                        voucherNo = rse1.getObject(1).toString();
                        // transNo = rse1.getObject(2).toString();
                    }
                }else{
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select nextval('transaction_no_seq')");
                    while (rse1.next()){
                        
                        voucherNo = voucherNoTxt.getText();
                        // transNo = rse1.getObject(1).toString();
                    }
                    
                }
                connectDB.commit();
                connectDB.setAutoCommit(true);
                com.afrisoftech.reports.PettyNgoPayVoucherPdf policy = new com.afrisoftech.reports.PettyNgoPayVoucherPdf();
                policy.PettyNgoPayVoucherPdf(connectDB,voucherNo);
                
                for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
                    for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
                        ImprestTable.getModel().setValueAt(null,k,r);
                    }
                }
                savePrintBtn.setEnabled(false);
                saveOnlyBtn.setEnabled(false);
                //                crset1.execute();
                
            }   catch(java.sql.SQLException sq){
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }       // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void ImprestTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ImprestTableKeyReleased
//        if (ImprestTable.getModel().getValueAt(ImprestTable.getSelectedRow(), 3) != null) {
//            if (ImprestTable.getSelectedColumn() == ImprestTable.getSelectedColumn()) {
//                float resVal = java.lang.Float.parseFloat(ImprestTable.getValueAt(ImprestTable.getSelectedRow(), 3).toString());
//                
//                java.lang.Float resFloat = new java.lang.Float(resVal);
//                
//                ImprestTable.setValueAt(resFloat, ImprestTable.getSelectedRow(), 3);
//                
//                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
//                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(ImprestTable, 3);
//                totalAmounttxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
//            }
//        }        // Add your handling code here:
    }//GEN-LAST:event_ImprestTableKeyReleased
    
    private void jTextField11112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11112CaretUpdate
        jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT voucher_no,date from ac_petty_cash WHERE voucher_no ILIKE '%"+jTextField11112.getText()+"%' GROUP BY voucher_no,date order by voucher_no"));
        
        jSearchScrollPane12.setViewportView(jSearchTable12);        // Add your handling code here:
    }//GEN-LAST:event_jTextField11112CaretUpdate
    
    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed
    
    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        //   jTextField111.setText(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(), 1).toString());
        jTextField361.setText(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(), 0).toString());
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();
        
        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
        
        sdf.applyPattern("yyyy-MM-dd");
        
        
        try {
            dateSurrender.setDate(sdf.parse(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(), 1).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct payee,requisitioner,department,transaction_no,shift_no from ac_petty_cash where voucher_no ='"+jTextField361.getText()+"'");
            while (rset.next()){
                payeeTxt.setText(rset.getObject(1).toString());
                grnTxt.setText(rset.getObject(2).toString());
                approvedAmountTxt.setText(rset.getObject(4).toString());
                jTextField81.setText(rset.getObject(5).toString());
                departmentCmb.setSelectedItem(rset.getObject(3).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        this.populateTable1(this.jTextField361.getText());
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable12MouseClicked
    private void populateTable1(java.lang.String patient_no) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(voucher_no)  FROM ac_petty_cash WHERE voucher_no = '"+patient_no+"' and date = '"+dateSurrender.getDate()+"'");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description,status,1,credit,code  FROM ac_petty_cash WHERE voucher_no = '"+patient_no+"' and date = '"+dateSurrender.getDate()+"' and credit > 0");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    ImprestTable.setValueAt(rsetTable1.getObject(1), i, 0);
                    ImprestTable.setValueAt(rsetTable1.getObject(2), i, 1);
                    ImprestTable.setValueAt(rsetTable1.getObject(3), i, 2);
                    ImprestTable.setValueAt(rsetTable1.getObject(4), i, 3);
                    ImprestTable.setValueAt(rsetTable1.getObject(5), i, 4);
                 /*   jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                    jTable1.setValueAt(rsetTable1.getObject(7), i, 6);
                    jTable1.setValueAt(rsetTable1.getObject(8), i, 7);
                    jTable1.setValueAt(rsetTable1.getObject(9), i, 8);
                  */
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT sum(credit) FROM ac_petty_cash WHERE voucher_no = '"+patient_no+"' and date = '"+dateSurrender.getDate()+"'");
                while (rset1.next()){
                    totalAmounttxt.setText(rset1.getObject(1).toString());
                }
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void jTextField11112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11112ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11112ActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButtonClicked2();        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButtonClicked2() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField361.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.setVisible(true);
         
    }
    private void surrenderRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surrenderRbtnActionPerformed
        jPanel61.setVisible(false);
        jComboBox2.setVisible(false);
        searchButton1.setEnabled(false);
        jLabel3.setVisible(false);
        voucherNoTxt.setVisible(false);
        jTextField81.setText(getShiftNumber());
        // Add your handling code here:
    }//GEN-LAST:event_surrenderRbtnActionPerformed
    
    private void reverseRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reverseRbtnActionPerformed
        jPanel61.setVisible(true);
        searchButton1.setEnabled(true);
        jComboBox2.setVisible(false);
        jLabel3.setVisible(false);
        voucherNoTxt.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_reverseRbtnActionPerformed
    
    private void saveOnlyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveOnlyBtnActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+dateSurrender.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(dateSurrender.getDate().before(periodFrom) || dateSurrender.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            if(ImprestTable.isEditing()){
                ImprestTable.getCellEditor().stopCellEditing();
            }
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql.toString());
            try{
                
                String glAcc = null;
                String Activity = null;
                String userName = null;
                String voucherNo = null;
                String transNo = null;
                String Stock = null;
                String voucNo = null;
                String accountCode = null;
                String TransNo = null;
                String glType = null;
                String glType1 = null;
                String accountCode1 = null;
                
                try{
                    connectDB.setAutoCommit(false);
                    //int g = ImprestTable.getModel().getRowCount();
                    //for (int g = 0; g < ImprestTable.getRowCount(); g++)
                    //int i = ImprestTable.getSelectedRow()..getRowCount();
                    if(surrenderRbtn.isSelected() && java.lang.Double.valueOf(totalAmounttxt.getText().toString().length())>0.0){
                        java.sql.Statement pst1Cash = connectDB.createStatement();
                    java.sql.ResultSet rs1Cash = pst1Cash.executeQuery("select activity_code,description,requisitioner, department from ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"'");
                    while (rs1Cash.next()) {
                        accountCode1 = rs1Cash.getString(1);
                        glType1 = rs1Cash.getString(2);
                    }
                        
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'PC'");
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            Activity = rse121.getObject(2).toString();
                            userName = rse121.getObject(3).toString();
                        }
                        
                        if(voucherNoTxt.getText().equalsIgnoreCase("-")){
                            java.sql.Statement stm1 = connectDB.createStatement();
                            java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(nextval('pet_voucher_no')::text,5,0::text),nextval('transaction_no_seq')");
                            while (rse1.next()){
                                
                                voucherNo = rse1.getObject(1).toString();
                                transNo = rse1.getObject(2).toString();
                            }
                        }else{
                            java.sql.Statement stm1 = connectDB.createStatement();
                            java.sql.ResultSet rse1 = stm1.executeQuery("select nextval('transaction_no_seq')");
                            while (rse1.next()){
                                
                                voucherNo = voucherNoTxt.getText();
                                transNo = rse1.getObject(1).toString();
                            }
                            
                        }
                     if(skableItemsRdo.isSelected()) {
//                        java.sql.PreparedStatement pstmtStock = connectDB.prepareStatement("update st_stock_cardex set surrendered_items = true where grn_no = ? and order_no = ?");
//                        pstmtStock.setObject(1, grnTxt.getText().toString());
//                        pstmtStock.setObject(2, voucherNoSrchTxt.getText().toString());
//                        pstmtStock.executeUpdate();
                         
                        if(java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())==0){
                            
                        java.sql.PreparedStatement pstmtCompletePettyCash = connectDB.prepareStatement("update ac_petty_cash set checked_surrender = true where voucher_no = ?");
                        pstmtCompletePettyCash.setObject(1, voucherNoSrchTxt.getText().toString());
                        pstmtCompletePettyCash.executeUpdate();
                        }else if(java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())>0 || java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())<0){
                            
                        java.sql.PreparedStatement pstmtPettyCash = connectDB.prepareStatement("update ac_petty_cash set checked_surrender = true where voucher_no = ? and status ilike '%IMPREST_SURRENDER%'");
                        pstmtPettyCash.setObject(1, voucherNoSrchTxt.getText().toString());
                        pstmtPettyCash.executeUpdate();
                        }
                     }
                     else
                     if(unstockableItemsRdo.isSelected()){
                        //selected rejected items should cause a debit to the ac_petty cash a button to be programmed
                        for (int i = 0; i < ImprestTable.getRowCount(); i++){
                            if (ImprestTable.getModel().getValueAt(i,0) != null && ImprestTable.getModel().getValueAt(i,5).equals(true)){

                                java.sql.Statement pst1 = connectDB.createStatement();
                                java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                                while (rs1.next()){
                                    accountCode = rs1.getObject(1).toString();
                                    glType = rs1.getObject(2).toString();
                                }
                                
                                                                   
//                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, initcap(?), ?, initcap(?), ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
//                                pstmt2.setObject(1,ImprestTable.getModel().getValueAt(i,4).toString());
//                                pstmt2.setObject(2,ImprestTable.getModel().getValueAt(i,0).toString());
//                                pstmt2.setString(3,"");
//                                if (payeeTxt.getText().equals("")){
//                                    javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Payee!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
//                                }else{
//                                    pstmt2.setString(4,payeeTxt.getText());
//                                }
//                                pstmt2.setObject(5,ImprestTable.getModel().getValueAt(i,1).toString());
//                                pstmt2.setString(12,voucherNo);
//                                pstmt2.setObject(7,payeeTxt.getText());
//                                pstmt2.setString(8,"");
//                                pstmt2.setString(9,"");
//                                pstmt2.setString(10,"");
//                                pstmt2.setString(11,"");
//                                pstmt2.setString(6,invoiceNo.getText());
//                                pstmt2.setString(13,"");
//                                pstmt2.setObject(14,ImprestTable.getModel().getValueAt(i,1).toString());
//                                pstmt2.setString(15,"Payment");
//                                pstmt2.setDouble(17,0.00);
//                                if (ImprestTable.getModel().getValueAt(i,3).toString().equals("")){
//                                    javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Amount!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
//                                }else{
//                                    
//                                    pstmt2.setDouble(16,java.lang.Double.valueOf(ImprestTable.getModel().getValueAt(i,3).toString()));
//                                }
//                                pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
//                                pstmt2.setString(19,transNo);
//                                pstmt2.setBoolean(20,false);
//                                pstmt2.setBoolean(21,true);
//                                pstmt2.setString(23,userName);
//                                pstmt2.setBoolean(22,false);
//                                pstmt2.executeUpdate();
//                                    
//                                    
//                                    
//                            java.sql.PreparedStatement unstockable = connectDB.prepareStatement("INSERT INTO ac_unstockable_items VALUES (?,? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
//                                //dealer, description,quantity activity_code, particular, department, requisition_no, voucher_no, voucher_date, debit, credit, dealer_code, approved
//                                unstockable.setObject(1, payeeTxt.getText());
//                                unstockable.setObject(2, ImprestTable.getModel().getValueAt(i,0).toString());
//                                unstockable.setObject(3, ImprestTable.getModel().getValueAt(i,2).toString());
//                                unstockable.setObject(4, ImprestTable.getModel().getValueAt(i,4).toString());
//                                unstockable.setObject(5, ImprestTable.getModel().getValueAt(i,1).toString());
//                                unstockable.setObject(6, departmentCmb.getSelectedItem().toString());
//                                unstockable.setObject(7, invoiceNo.getText().toString());
//                                unstockable.setObject(8, voucherNoSrchTxt.getText().toString());
//                                unstockable.setDate(9, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
//                                unstockable.setDouble(11,java.lang.Double.valueOf(ImprestTable.getModel().getValueAt(i,3).toString()));
//                                unstockable.setDouble(10,0.00);
//                                unstockable.setObject(12, "");
//                                unstockable.setBoolean(13, true);
//                                unstockable.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
//                                unstockable.setObject(15, "IMPREST_SURRENDERED");
//                                unstockable.setObject(16, com.afrisoftech.lib.UserName.getLoginName(connectDB));
//                                unstockable.setObject(17,accountCode1);
//                                unstockable.setString(18,glType1);
//                                unstockable.executeUpdate();
                                
                       
                                    
                                }
                                
                            }
                        
//                        java.sql.PreparedStatement pstmtunstock = connectDB.prepareStatement("update ac_unstockable_items set approved = true where voucher_no = ?");
//                        pstmtunstock.setObject(1, voucherNoSrchTxt.getText().toString());
//                        pstmtunstock.executeUpdate();
                        
                        
                        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(ImprestTable, 3);       
                        if(java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())==0){
                            
                        java.sql.PreparedStatement pstmtCompletePettyCash = connectDB.prepareStatement("update ac_petty_cash set checked_surrender = true where voucher_no = ?");
                        pstmtCompletePettyCash.setObject(1, voucherNoSrchTxt.getText().toString());
                        pstmtCompletePettyCash.executeUpdate();
                        }else if(java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())>0 || java.lang.Double.valueOf(unsurrenderedAmountTxt.getText().toString())<0){
                            
                        java.sql.PreparedStatement pstmtPettyCash = connectDB.prepareStatement("update ac_petty_cash set checked_surrender = true where voucher_no = ? and status ilike '%SURRENDER_NON_STOCKABLE%'");
                        pstmtPettyCash.setObject(1, voucherNoSrchTxt.getText().toString());
                        pstmtPettyCash.executeUpdate();
                        }
                        
                        
                        }
                    
                    }else{
                        if(reverseRbtn.isSelected()){
                            java.sql.Statement stm121 = connectDB.createStatement();
                            java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'PC'");
                            while (rse121.next()){
                                
                                glAcc = rse121.getObject(1).toString();
                                Activity = rse121.getObject(2).toString();
                                userName = rse121.getObject(3).toString();
                            }
                            
                            for (int i = 0; i < ImprestTable.getRowCount(); i++){
                                if (ImprestTable.getModel().getValueAt(i,0) != null){
                                    
                                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                    pstmt21.setObject(1,glAcc);
                                    pstmt21.setString(2,Activity);
                                    pstmt21.setString(3,payeeTxt.getText());
                                    pstmt21.setObject(4,ImprestTable.getValueAt(i,0).toString());
                                    pstmt21.setDouble(5,java.lang.Double.valueOf(ImprestTable.getValueAt(i,3).toString()));
                                    pstmt21.setDouble(6,0.0);
                                    pstmt21.setDate(7,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                    pstmt21.setString(8,userName);
                                    pstmt21.setBoolean(9,true);
                                    pstmt21.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
                                    pstmt21.setString(10,jTextField361.getText());
                                    pstmt21.setBoolean(12,true);
                                    pstmt21.setObject(13,departmentCmb.getSelectedItem().toString());
                                    pstmt21.setString(14,cashPontTxt.getText());
                                    pstmt21.setObject(15,ImprestTable.getValueAt(i,1).toString());
                                    pstmt21.setString(16,jTextPane1.getText());
                                    pstmt21.setString(17,approvedAmountTxt.getText());
                                    pstmt21.setString(18,cashPontTxt.getText());
                                    pstmt21.setString(19,jTextField81.getText());
                                    pstmt21.setString(20,TransNo);
                                    pstmt21.setObject(21,ImprestTable.getValueAt(i,4).toString());
                                    pstmt21.setString(22,TransNo);
                                    pstmt21.setObject(23,"-");
                                    pstmt21.setObject(24,"-");
                                    pstmt21.setObject(25,"-");
                                    pstmt21.setObject(26,"-");
                                    pstmt21.executeUpdate();
                                    
                                    
                                    
                                    java.sql.Statement pst1 = connectDB.createStatement();
                                    java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                                    while (rs1.next()){
                                        accountCode = rs1.getObject(1).toString();
                                        glType = rs1.getObject(2).toString();
                                    }
                                    
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, initcap(?), ?, initcap(?), ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                    pstmt2.setObject(1,ImprestTable.getModel().getValueAt(i,4).toString());
                                    pstmt2.setObject(2,ImprestTable.getModel().getValueAt(i,0).toString());
                                    pstmt2.setString(3,"");
                                    if (payeeTxt.getText().equals("")){
                                        javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Payee!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        pstmt2.setString(4,payeeTxt.getText());
                                    }
                                    pstmt2.setObject(5,ImprestTable.getModel().getValueAt(i,1).toString());
                                    pstmt2.setString(6,jTextField361.getText());
                                    pstmt2.setObject(7,payeeTxt.getText());
                                    pstmt2.setString(8,"");
                                    pstmt2.setString(9,"");
                                    pstmt2.setString(10,"");
                                    pstmt2.setString(11,"");
                                    pstmt2.setString(12,"");
                                    pstmt2.setString(13,"");
                                    pstmt2.setObject(14,ImprestTable.getModel().getValueAt(i,1).toString());
                                    pstmt2.setString(15,"Adjustment");
                                    pstmt2.setDouble(16,0.00);
                                    if (ImprestTable.getModel().getValueAt(i,3).toString().equals("")){
                                        javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Amount!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        
                                        pstmt2.setDouble(17,java.lang.Double.valueOf(ImprestTable.getModel().getValueAt(i,3).toString()));
                                    }
                                    pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
                                    pstmt2.setString(19,approvedAmountTxt.getText());
                                    pstmt2.setBoolean(20,false);
                                    pstmt2.setBoolean(21,false);
                                    pstmt2.setString(23,userName);
                                    pstmt2.setBoolean(22,false);
                                    pstmt2.executeUpdate();
                                    
                                }
                            }
                            
                        }
                    }
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    //  com.afrisoftech.reports.PettyPayVoucherPdf policy = new com.afrisoftech.reports.PettyPayVoucherPdf();
                    //  policy.PettyPayVoucherPdf(connectDB,voucherNo);
                    java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_petty_cash_requisition SET paid = 'true' WHERE requisition_no = '"+voucherNoSrchTxt.getText().toString()+"'");// AND document = '"+jTextPane1.getText()+"'");
                    pstmt22.executeUpdate();
                    com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct requisition_no from ac_petty_cash_requisition WHERE paid = false AND approved = true ORDER BY requisition_no ");
                    
                    for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
                        for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
                            ImprestTable.getModel().setValueAt(null,k,r);
                        }
                    }
                    clear();
                    
                    savePrintBtn.setEnabled(false);
                    saveOnlyBtn.setEnabled(false);
                    surrenderRbtn.setSelected(true);
                    //                crset1.execute();
                }   catch(java.sql.SQLException sq){
                    sq.printStackTrace();
                    try {
                        connectDB.rollback();
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());
                    //sql.printStackTrace();
                }
                
            } catch(java.lang.Exception ex) {
                System.out.println(ex.getMessage());
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_saveOnlyBtnActionPerformed
    
    private void departmentCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentCmbActionPerformed
        savePrintBtn.setEnabled(true);
        saveOnlyBtn.setEnabled(true);      // Add your handling code here:
    }//GEN-LAST:event_departmentCmbActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        ImprestTable.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0),ImprestTable.getSelectedRow(), 0);
        ImprestTable.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),ImprestTable.getSelectedRow(), 4);
        this.jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jCheckBox5.isSelected()){
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity WHERE activity ILIKE '%"+jTextField11111.getText()+"%' order by activity"));
            
            jSearchScrollPane11.setViewportView(jSearchTable11);
        }else{
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity where code ILIKE '"+jTextField11111.getText()+"%' order by code"));
            
            jSearchScrollPane11.setViewportView(jSearchTable11);
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void ImprestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImprestTableMouseClicked
        if (ImprestTable.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }
        
//        for(int i = 0; i<ImprestTable.getRowCount(); i++ ){
       
        int i = ImprestTable.getSelectedRow();
        
            
        if(ImprestTable.getModel().getValueAt(i, 5).toString().equalsIgnoreCase("true")){
            sumSelected = sumSelected + java.lang.Double.valueOf(ImprestTable.getModel().getValueAt(i, 3).toString());
            //double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(ImprestTable, 3);
            
            System.out.println("Selected Addition ni "+sumSelected);
            approvedAmountTxt.setText(java.lang.Double.valueOf(sumSelected).toString());     
        }
        
        else {
            sumSelected = sumSelected - java.lang.Double.valueOf(ImprestTable.getModel().getValueAt(i, 3).toString());
            
           // double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(ImprestTable, 3);
           // System.out.println("subtraction ni "+totalSum);
            System.out.println("Selected Addition ni "+sumSelected);
        approvedAmountTxt.setText(java.lang.Double.valueOf(sumSelected).toString());
            //System.out.println("Selected subtraction ni "+sumSelected);
        }
//        }
        // System.out.println("Addition ni "+totalSum);
//         System.out.println("Selected Addition ni "+sumSelected);
//        voucherNoTxt.setText(java.lang.Double.valueOf(sumSelected).toString());
        // Add your handling code here:
    }//GEN-LAST:event_ImprestTableMouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane11.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);
    }
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTextField20.setText("");
        jTextField16.setText("");
        jTextField25.setText("");
        jButton1111.setEnabled(true);
        jTextField17.setText("");
        jTextField3111.setText("");
        jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jTextField16.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        jTextField20.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        if(jCheckBox1.isSelected()){
            try {
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select patient_category,payment_mode from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' order by date desc limit 1");
                while (rset1.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField25.setText(rset1.getObject(1).toString());
                }
                
                java.sql.Statement stmt11 = connectDB.createStatement();
                java.sql.ResultSet rset11 = stmt11.executeQuery("select sum(credit - debit) from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' and visit_id = '"+jTextField16.getText()+"'");
                while (rset11.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField3111.setText(rset11.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }else{
            try {
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select patient_category,payment_mode from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' order by date desc limit 1");
                while (rset1.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField25.setText(rset1.getObject(1).toString());
                }
                
                java.sql.Statement stmt11 = connectDB.createStatement();
                java.sql.ResultSet rset11 = stmt11.executeQuery("select sum(credit - debit) from hp_patient_card where patient_no  ='"+jTextField36.getText()+"'");
                while (rset11.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField3111.setText(rset11.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
            
        }
        this.jSearchDialog1.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jCheckBox1.isSelected()){
            // jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT patient_no as scheme,patient_name as name from hp_admission where patient_no ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = true AND date_admitted > '01-01-2005' ORDER BY patient_name"));
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT patient_no,patient_name as name,visit_id from hp_admission where patient_no ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = true AND date_admitted > '01-01-2005' ORDER BY patient_no"));
            
            jSearchTable1.setShowHorizontalLines(false);
            jSearchScrollPane1.setViewportView(jSearchTable1);
        }else{
            
            if(jCheckBox2.isSelected()){
                // jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT patient_no as scheme,patient_name as name from hp_admission where patient_no ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = true AND date_admitted > '01-01-2005' ORDER BY patient_name"));
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,'' as visit_id from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1111.getText()+"%'  order by second_name"));
                
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        this.jSearchDialog1.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();
        
        jButton1111.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void searchButton11Clicked() {
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField36.getLocationOnScreen();
        
        jSearchDialog1.setSize(400,200);
        
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
    }
    
    private void jButton1111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1111ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open'");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(dateSurrender.getDate().before(periodFrom) || dateSurrender.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            String glAcc = null;
            String receiptNo1 = null;
            String actCode1 = null;
            String glCode1 = null;
            String transNo1 = null;
            String actNames1 = null;
            String patientAcc1 = null;
            String user = null;
            String accDesc1 = null;
            String name = null;
            String rcode = null;
            String rname = null;
            String visitid = null;
            String Activity = null;
            String userName = null;
            String voucherNo = null;
            String transNo = null;
            String Stock = null;
            String voucNo = null;
            String accountCode = null;
            String TransNo = null;
            String glType = null;
            
            try {
                connectDB.setAutoCommit(false);
                
                java.sql.Statement stm121 = connectDB.createStatement();
                java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'PC'");
                while (rse121.next()){
                    
                    glAcc = rse121.getObject(1).toString();
                    Activity = rse121.getObject(2).toString();
                    userName = rse121.getObject(3).toString();
                }
           /* java.sql.Statement stm1 = connectDB.createStatement();
            java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(nextval('pet_voucher_no'),5,0),nextval('transaction_no_seq')");
            while (rse1.next()){
                voucherNo = rse1.getObject(1).toString();
                transNo = rse1.getObject(2).toString();
            }
            */
                if(jTextField10.getText().equalsIgnoreCase("-")){
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(nextval('pet_voucher_no')::text,5,0::text),nextval('transaction_no_seq')");
                    while (rse1.next()){
                        
                        voucherNo = rse1.getObject(1).toString();
                        transNo = rse1.getObject(2).toString();
                    }
                }else{
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select nextval('transaction_no_seq')");
                    while (rse1.next()){
                        
                        voucherNo = jTextField10.getText();
                        transNo = rse1.getObject(1).toString();
                    }
                    
                }
                java.sql.Statement ps11w1 = connectDB.createStatement();
                java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select CASE WHEN (visit_id IS NULL) THEN '-' ELSE visit_id END AS visit_id from hp_admission where patient_no = '"+jTextField36.getText()+"' ORDER BY patient_no DESC LIMIT 1");
                while (rst11w1.next()){
                    
                    visitid = rst11w1.getObject(1).toString();
                }
                java.sql.Statement stm12 = connectDB.createStatement();
                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
                while (rse12.next()){
                    
                    patientAcc = rse12.getObject(1).toString();
                    AccDesc = rse12.getObject(2).toString();
                    user = rse12.getObject(3).toString();
                }
                java.sql.Statement stm1211 = connectDB.createStatement();
                java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                while (rse1211.next()){
                    rname = rse1211.getObject(1).toString();
                    rcode = rse1211.getObject(2).toString();
                }
                
                java.sql.Statement pss = connectDB.createStatement();
                java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                while (rss.next()){
                    transNo1 = rss.getObject(1).toString();
                }
                java.sql.Statement stm122 = connectDB.createStatement();
                java.sql.ResultSet rse122 = stm122.executeQuery("select payment_mode from pb_paymentmodes where gl_account ='"+jTextField8.getText()+"'");
                while (rse122.next()){
                    
                    name = rse122.getObject(1).toString();
                }
                java.sql.Statement pss1 = connectDB.createStatement();
                java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='DA'");
                while (rsts.next()){
                    actCode1 = rsts.getObject(1).toString();
                    actNames1 = rsts.getObject(2).toString();
                    
                }
                
                System.out.println(actNames1);
                java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                pstmtx.setString(1,jTextField36.getText());
                pstmtx.setObject(2,"Refund");
                pstmtx.setString(3,jTextField25.getText());
                pstmtx.setString(4,"Cash");
                pstmtx.setString(5,transNo1);
                pstmtx.setString(7,"");
                pstmtx.setString(6,"");
                pstmtx.setString(8,"");
                pstmtx.setString(9,"");
                pstmtx.setString(10,null);
                pstmtx.setString(11,"");
                pstmtx.setDouble(12,java.lang.Double.valueOf(jTextField17.getText()));
                pstmtx.setDouble(13,0.00);
                pstmtx.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                pstmtx.setObject(15,patientAcc);
                pstmtx.setString(16,"Refund");
                pstmtx.setDouble(17,1);
                pstmtx.setObject(18,"");
                pstmtx.setBoolean(19,false);
                pstmtx.setString(20,"Refund");
                pstmtx.setBoolean(21,false);
                pstmtx.setString(22,AccDesc);
                pstmtx.setString(23,jTextField16.getText());
                pstmtx.setString(24,user);
                pstmtx.setString(25,cashPontTxt.getText());
                pstmtx.setString(26,"IP");
                pstmtx.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                pstmtx.setString(28,jTextField16.getText());
                pstmtx.executeUpdate();
                
                
                
                java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                pstmt21.setObject(1,glAcc);
                pstmt21.setString(2,Activity);
                pstmt21.setString(4,jTextField7.getText());
                pstmt21.setString(3,jTextField41.getText());
                pstmt21.setDouble(6,java.lang.Double.valueOf(jTextField17.getText()));
                pstmt21.setDouble(5,0.00);
                pstmt21.setDate(7,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                pstmt21.setString(8,userName);
                pstmt21.setBoolean(9,true);
                pstmt21.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                pstmt21.setString(10,voucherNo);
                pstmt21.setBoolean(12,true);
                pstmt21.setString(13,"In Patient");
                pstmt21.setString(14,jTextField20.getText());
                pstmt21.setString(15,jTextField9.getText());
                pstmt21.setString(16,"");
                pstmt21.setString(17,transNo);
                pstmt21.setString(18,cashPontTxt.getText());
                pstmt21.setString(19,jTextField81.getText());
                pstmt21.setString(20,"");
                pstmt21.setObject(21,jTextField362.getText());
                pstmt21.setString(22,"");
                pstmt21.setObject(23,jComboBox11.getSelectedItem());
                pstmt21.setObject(24,jComboBox12.getSelectedItem());
                pstmt21.setObject(25,jComboBox13.getSelectedItem());
                pstmt21.setObject(26,"");
                pstmt21.executeUpdate();
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                com.afrisoftech.reports.PettyNgoPayVoucherPdf policy = new com.afrisoftech.reports.PettyNgoPayVoucherPdf();
                policy.PettyNgoPayVoucherPdf(connectDB,voucherNo);
                
                jTextField16.setText("");
                jTextField25.setText("");
                jTextField17.setText("");
                jTextField20.setText("");
                jTextField10.setText("-");
                // jTextField211.setText("");
                jTextField3111.setText("");
                jButton1111.setEnabled(false);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton1111ActionPerformed
    
    private void jButton4111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4111ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4111ActionPerformed
    
    private void jButton3111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3111ActionPerformed
        jTextField20.setText("");
        jTextField16.setText("");
        jTextField25.setText("");
        
        jTextField17.setText("");
        jTextField3111.setText("");  // Add your handling code here:
    }//GEN-LAST:event_jButton3111ActionPerformed
    
    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed
    private void populateTable11(java.lang.String requisitioner) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
           /* java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select count(requisition_no) from ac_petty_cash_requisition where requisitioner ='"+requisitioner+"' AND approved = true AND paid = false");
            
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
            */
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select purpose,reason,quantity,sum(credit),code from ac_petty_cash_requisition where requisition_no ='"+requisitioner+"' AND approved = true AND paid = false GROUP By purpose,reason,quantity,code");
            
            while (rsetTable11.next()) {
                
                System.out.println("Working at table row "+i);
                ImprestTable.setValueAt(rsetTable11.getObject(1), i, 0);
                ImprestTable.setValueAt(rsetTable11.getObject(2), i, 1);
                ImprestTable.setValueAt(rsetTable11.getObject(3), i, 2);
                ImprestTable.setValueAt(rsetTable11.getObject(4), i, 3);
                ImprestTable.setValueAt(rsetTable11.getObject(5), i, 4);
                ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                
                i++;
                
                //                i = i + i;
                //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
            }
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
            for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
                ImprestTable.getModel().setValueAt(null,k,r);
            }
        }
        totalAmounttxt.setText("");
        grnTxt.setText("-");
        savePrintBtn.setEnabled(true);
        //   jTextField31.setText("");
        
        //        this.jComboBox131.setSelectedItem(null);
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int rows2Delete = ImprestTable.getSelectedRowCount();
        
        int[] selectedRows = ImprestTable.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)ImprestTable.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)ImprestTable.getModel();
                
                defTableModel.removeRow(ImprestTable.getSelectedRow());
            }
        }
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(ImprestTable, 3);
        totalAmounttxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        
        //   javax.swing.JFrame other = new OtherPayments(connectDB, pConnDB);
        //   other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void savePrintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePrintBtnActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            
            String glAcc = null;
            String Activity = null;
            String userName = null;
            String voucherNo = null;
            String transNo = null;
            String Stock = null;
            String voucNo = null;
            String accountCode = null;
            String TransNo = null;
            String glType = null;
            try{
                connectDB.setAutoCommit(false);
                //jButton11ActionPerformed(evt);
                
              /*
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(currval('pet_voucher_no'),5,0)");
                while (rse1.next()){
               
                    voucherNo = rse1.getObject(1).toString();
                }*/
                if(voucherNoTxt.getText().equalsIgnoreCase("-")){
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(currval('pet_voucher_no')::text,5,0::text)");
                    while (rse1.next()){
                        
                        voucherNo = rse1.getObject(1).toString();
                        // transNo = rse1.getObject(2).toString();
                    }
                }else{
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select nextval('transaction_no_seq')");
                    while (rse1.next()){
                        
                        voucherNo = voucherNoTxt.getText();
                        // transNo = rse1.getObject(1).toString();
                    }
                    
                }
                connectDB.commit();
                connectDB.setAutoCommit(true);
                com.afrisoftech.reports.PettyNgoPayVoucherPdf policy = new com.afrisoftech.reports.PettyNgoPayVoucherPdf();
                policy.PettyNgoPayVoucherPdf(connectDB,voucherNo);
                
                for (int k = 0; k < ImprestTable.getRowCount(); k++ ) {
                    for (int r = 0; r < ImprestTable.getColumnCount(); r++ ) {
                        ImprestTable.getModel().setValueAt(null,k,r);
                    }
                }
                savePrintBtn.setEnabled(false);
                saveOnlyBtn.setEnabled(false);
                //                crset1.execute();
                
            }   catch(java.sql.SQLException sq){
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_savePrintBtnActionPerformed

    private void skableItemsRdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skableItemsRdoActionPerformed
        // TODO add your handling code here:
        clear();
        try{
        
        if(skableItemsRdo.isSelected()==true){
        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and status != 'Payment Done' and approved_surrender = false and checked_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) >=0 or sum(credit-debit) > 0 ORDER BY 1"));
        invoiceNoLbl.setText("Invoice No:");
        unsurrenderedAmtLbl.setText("Unsurrendered Amount");
        }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_skableItemsRdoActionPerformed

    private void unstockableItemsRdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unstockableItemsRdoActionPerformed
        // TODO add your handling code here:
        clear();
        try{
            
        //java.sql.PreparedStatement loadcmb = connectDB.prepareStatement ("select '-' UNION select distinct voucher_no from ac_unstockable_items where voucher_no !=''  GROUP BY voucher_no having sum(debit-credit) > 0 or sum(debit-credit)= 0  ORDER BY 1");
        if(unstockableItemsRdo.isSelected()==true){

        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and status != 'Payment Done' and approved_surrender = false and checked_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) >=0 or sum(credit-debit) > 0 ORDER BY 1"));
        invoiceNoLbl.setText("Receipt No:");
        unsurrenderedAmtLbl.setText("Unsurrendered Amount");

//imprestNoCmb.setModel(null);
//        java.sql.Statement pstmt = connectDB.createStatement();
//        java.sql.ResultSet rst = pstmt.executeQuery("select '-' UNION select distinct voucher_no from ac_unstockable_items where voucher_no !=''  GROUP BY voucher_no having sum(debit-credit) > 0 or sum(debit-credit)= 0  ORDER BY 1");
//            while (rst.next()) {
//                
//                //imprestNumberTxt.setText(rst.getObject(1).toString());
//            imprestNoCmb.getModel().setSelectedItem(rst.getObject(1).toString());
//            }
        }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_unstockableItemsRdoActionPerformed

    private void rejectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBtnActionPerformed
        // TODO add your handling code here:
        String store=null,
             deliveredBy=null,
             StocktransNo=null,
             activityCode=null,
             invoiceNumber=null,
             description=null,
             transactionNumber=null,
             itemCode =null,
             strength1 = null,
             activityp = null,
             activitycodep = null,
             descriptionp = null,
             departmentp = null,
             HolderP =  null,
             staffId = null,
             deliveryNote = null,
             counsell = "counselled";
        double receivedby= 0.00,pricePerItem= 0.00,quantityRequired = 0.00;
    try{
           if(ImprestTable.getModel().getValueAt(1,3) != null && java.lang.Double.valueOf(totalAmounttxt.getText().toString().length())>0) {   
         java.sql.Statement queryPettyCash = connectDB.createStatement();
                java.sql.ResultSet rsetPettyCash = queryPettyCash.executeQuery("SELECT activity_code, activity, payee, description,"
            + " debit, credit, date_payable,user_name, paid, voucher_no, date, approved, department, requisitioner,status, document,"
            + " transaction_no, cash_point, shift_no, request_no,code, requisition_no, donor, proj, branch, staff_veh, approved_surrender "
                        + " FROM ac_petty_cash;");
                
                while(rsetPettyCash.next()){
               activitycodep = rsetPettyCash.getObject(1).toString();
               activityp = rsetPettyCash.getObject(2).toString();
               descriptionp = rsetPettyCash.getObject(4).toString();
               departmentp = rsetPettyCash.getObject(13).toString();
               HolderP = rsetPettyCash.getObject(14).toString();
               staffId = rsetPettyCash.getObject(26).toString();
                }
     
     java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                    pstmt1.setString(1, activitycodep);
                    pstmt1.setString(2, activityp);
                    pstmt1.setString(3, payeeTxt.getText());
                    pstmt1.setObject(4, descriptionp);
                    pstmt1.setDouble(6, 0.00);
                    pstmt1.setDouble(5, Double.parseDouble(voucherNoTxt.getText()));
                    pstmt1.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
                    pstmt1.setString(8, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                    pstmt1.setBoolean(9, true);
                    pstmt1.setString(10, voucherNoSrchTxt.getText().toString());
                    pstmt1.setDate(11, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
                    pstmt1.setBoolean(12, true);
                    pstmt1.setString(13, departmentp);
                    pstmt1.setString(14, HolderP);
                    pstmt1.setObject(15, "SURRENDER_COUNSELLED");
                    pstmt1.setObject(16, "COUNSELLED");
                    pstmt1.setString(17, "COUNSELLED");
                    pstmt1.setObject(18, "");
                    pstmt1.setString(19, "");
                    pstmt1.setString(20, "COUNSELLED");
                    pstmt1.setObject(21, "");
                    pstmt1.setString(22, "COUNSELLED");
                    pstmt1.setObject(23, "-");
                    pstmt1.setObject(24, "-");
                    pstmt1.setObject(25, "-");
                    pstmt1.setObject(26, staffId);
                    pstmt1.setBoolean(27, false);
                    pstmt1.execute();
        
        
     for (int i = 0; i < ImprestTable.getRowCount(); i++){
     if (ImprestTable.getModel().getValueAt(i,0) != null && ImprestTable.getModel().getValueAt(i,5).equals(true)){
      
           connectDB.setAutoCommit(false);
           String dptmntS = null;
           java.sql.Statement unstockbleQuery = connectDB.createStatement();
           java.sql.ResultSet rsetUnstockable = unstockbleQuery.executeQuery("SELECT dealer, description, quantity, activity_code, particular, department, " +
"       requisition_no, voucher_no, voucher_date, debit, credit, dealer_code,approved, local_date" +
"  FROM ac_unstockable_items;");
           
           while(rsetUnstockable.next()){
               dptmntS = rsetUnstockable.getObject(6).toString();
           }
       if(unstockableItemsRdo.isSelected())    {
           java.sql.PreparedStatement unstockable = connectDB.prepareStatement("INSERT INTO ac_unstockable_items VALUES (?,? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)");
    //dealer, description,quantity activity_code, particular, department, requisition_no, voucher_no, voucher_date, debit, credit, dealer_code, approved
            unstockable.setObject(1, payeeTxt.getText());
            unstockable.setObject(2, ImprestTable.getModel().getValueAt(i,0).toString());
            unstockable.setObject(3, ImprestTable.getModel().getValueAt(i,2).toString());
            unstockable.setObject(4, ImprestTable.getModel().getValueAt(i,4).toString());
            unstockable.setObject(5, ImprestTable.getModel().getValueAt(i,1).toString());
            unstockable.setObject(6, dptmntS);
            unstockable.setObject(7, invoiceNo.getText().toString());
            unstockable.setObject(8, voucherNoSrchTxt.getText().toString());
            unstockable.setDate(9, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
            unstockable.setDouble(11,java.lang.Double.valueOf(ImprestTable.getModel().getValueAt(i,3).toString()));
            unstockable.setDouble(10,0.00);
            unstockable.setObject(12, "");
            unstockable.setBoolean(13, true);
            unstockable.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
            unstockable.setObject(15, "SURRENDER_COUNSELLED");
            unstockable.setObject(16, com.afrisoftech.lib.UserName.getLoginName(connectDB));
            unstockable.executeUpdate();       
         
           
       }else if (skableItemsRdo.isSelected()){
         java.sql.Statement stockStmt = connectDB.createStatement();
         java.sql.ResultSet rsetStock = stockStmt.executeQuery("SELECT order_no, store, item, expiry_date, quantity_ordered, price_per_item,units, received_by, "
       + "delivered_by, requisition_no, quantity_received, sub_store_receiving, quantity_required, issued_to, issued_by, supplier, delivery_note_no, "
       + "date, cost_center, transaction_type, debit, credit, activity_code, invoice_no, description, transaction_no,item_code, strength, grn_no FROM st_stock_cardex");
         
         while(rsetStock.next()){
           store = rsetStock.getObject(2).toString();
           pricePerItem = rsetStock.getDouble(6);
           receivedby = rsetStock.getDouble(8);
           deliveredBy = rsetStock.getObject(9).toString();
           quantityRequired = rsetStock.getDouble(13);
           StocktransNo = rsetStock.getObject(17).toString();
           activityCode = rsetStock.getObject(23).toString();
           invoiceNumber  = rsetStock.getObject(24).toString();
           description  = rsetStock.getObject(25).toString();
           transactionNumber = rsetStock.getObject(26).toString();
           itemCode  = rsetStock.getObject(27).toString();
           deliveryNote = rsetStock.getObject(17).toString();
           strength1 = rsetStock.getObject(33).toString();
           
         }
      
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_stock_cardex values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");

                pstmt.setString(1, voucherNoSrchTxt.getText().toString());
                pstmt.setObject(2, store);
                pstmt.setObject(3, ImprestTable.getValueAt(i, 0));
                pstmt.setDate(4, null);
                pstmt.setDouble(5, 0.00);
                pstmt.setDouble(6, pricePerItem);
                pstmt.setObject(7, ImprestTable.getValueAt(i, 1));
                pstmt.setDouble(8, receivedby);
                pstmt.setObject(9, deliveredBy);
                pstmt.setString(10, "");
                pstmt.setDouble(11, java.lang.Double.valueOf(ImprestTable.getValueAt(i, 2).toString()));
                pstmt.setDouble(12, 0.00);
                pstmt.setDouble(13, quantityRequired);
                pstmt.setString(14, "");
                pstmt.setString(15, "");
                pstmt.setObject(16, payeeTxt.getText());
                pstmt.setObject(17, deliveryNote);
                pstmt.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateSurrender.getDate()));
                pstmt.setString(19, "");
                pstmt.setString(20, "counseled");
                pstmt.setDouble(21, 0.00);
                pstmt.setDouble(22, java.lang.Double.valueOf(ImprestTable.getValueAt(i, 3).toString()));
                pstmt.setObject(23, activityCode);
                pstmt.setObject(24, invoiceNumber);
                pstmt.setObject(25, description);
                pstmt.setObject(26, transactionNumber);
                pstmt.setDouble(27, 0.00);
                pstmt.setObject(28, itemCode);
                pstmt.setBoolean(29, false);
                pstmt.setDouble(30, 0.00);
                pstmt.setObject(31, null);
                pstmt.setObject(32, null);
                pstmt.setObject(33, strength1);
                pstmt.setObject(34, grnTxt.getText().toString());
                pstmt.setObject(35, true);
                pstmt.executeUpdate();    
                
               
            String update = "update st_sub_stores set transaction_no = '"+grnTxt.getText().toString().concat("-").concat(counsell)+"' where transaction_no = '"+grnTxt.getText().toString()+"'";
            java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement(update);
            pstmt11.execute();
      
       }         connectDB.commit();
                connectDB.setAutoCommit(true);
     }
     }//if statement ends
          javax.swing.JOptionPane.showMessageDialog(this, "evesal Successfull", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
          clear();
           }else {
        javax.swing.JOptionPane.showMessageDialog(this, "Check to approve", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);       
           }
       }
       catch(Exception e){
           e.printStackTrace();
       }
    
    }//GEN-LAST:event_rejectBtnActionPerformed

    private void refundRdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refundRdBtnActionPerformed
        // TODO add your handling code here:
        
        clear();
        try{
        
        if(refundRdBtn.isSelected()==true){
//        imprestNoCmb.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' UNION select distinct voucher_no from ac_petty_cash where (voucher_no !='' and voucher_no ilike 'T_IMPREST%' or voucher_no ilike 'PETT%') and status != 'Payment Done' and approved_surrender = false GROUP BY voucher_no having sum(credit-debit)>0 ORDER BY 1"));
        unsurrenderedAmtLbl.setText("Refunding Amount:");
        }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_refundRdBtnActionPerformed

    private void voucherNoSrchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voucherNoSrchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_voucherNoSrchTxtActionPerformed

    private void searchButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton5ActionPerformed
        searchButton22Clicked();
        //  this.jButton13.setEnabled(true);

        // Add your handling code here:
    }//GEN-LAST:event_searchButton5ActionPerformed
    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    
    
    public java.lang.String getCashPoint() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT cash_point FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                cash_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return cash_no;
        
    }
    
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
    }
    private void cmbox1ActionPerformed(java.awt.event.ActionEvent evt){
    }
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
    }
    
    /* public java.lang.String getShiftNumber() {
     
        try {
     
            java.sql.Statement stmt = connectDB.createStatement();
     
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
     
            while (rset.next()) {
     
                shift_no = rset.getString(1);
     
            }
     
        } catch(java.sql.SQLException sqlExec) {
     
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
     
        }
     
        return shift_no;
     
    }
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ImprestTable;
    private javax.swing.JTextField approvedAmountTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JTextField cashPontTxt;
    private com.afrisoftech.lib.DatePicker dateSurrender;
    private javax.swing.JComboBox departmentCmb;
    private javax.swing.JTextField grnTxt;
    private javax.swing.JTextField invoiceNo;
    private javax.swing.JLabel invoiceNoLbl;
    private javax.swing.JButton jButton1111;
    private javax.swing.JButton jButton11111;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton3111;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton411;
    private javax.swing.JButton jButton4111;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton512;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox13;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2122;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel3121;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel53111;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel711;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel911;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel212;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel711;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialogPayee;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel13;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane13;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JTable jSearchTable13;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField111111;
    private javax.swing.JTextField jTextField11112;
    private javax.swing.JTextField jTextField11113;
    private javax.swing.JTextField jTextField152;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField3111;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField361;
    private javax.swing.JTextField jTextField362;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField611;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField payeeTxt;
    private javax.swing.JRadioButton refundRdBtn;
    private javax.swing.JButton rejectBtn;
    private javax.swing.JRadioButton replenishRbtn;
    private javax.swing.JRadioButton reverseRbtn;
    private javax.swing.JButton saveOnlyBtn;
    private javax.swing.JButton savePrintBtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JButton searchButton5;
    private javax.swing.JTextField searchImprestTxt;
    private javax.swing.JRadioButton skableItemsRdo;
    private javax.swing.JRadioButton surrenderRbtn;
    private javax.swing.JTextField totalAmountIssuedTxt;
    private javax.swing.JTextField totalAmounttxt;
    private javax.swing.JRadioButton unstockableItemsRdo;
    private javax.swing.JTextField unsurrenderedAmountTxt;
    private javax.swing.JLabel unsurrenderedAmtLbl;
    private javax.swing.JTextField voucherNoSrchTxt;
    private javax.swing.JTextField voucherNoTxt;
    // End of variables declaration//GEN-END:variables
    
}
