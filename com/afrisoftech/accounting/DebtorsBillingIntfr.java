/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author root
 */
public class DebtorsBillingIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form loanpymntintfr
     */
    com.afrisoftech.lib.DBObject dbObject;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private String mainService;
    private String glAccount;

    public DebtorsBillingIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        dbObject = new com.afrisoftech.lib.DBObject();

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        schemesearchdialog = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton421 = new javax.swing.JButton();
        jButton521 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        taxSearchDialog = new javax.swing.JDialog();
        taxSearchPanel = new javax.swing.JPanel();
        taxSearchTxt = new javax.swing.JTextField();
        taxSearchScrollPane = new javax.swing.JScrollPane();
        taxSearchTable = new com.afrisoftech.dbadmin.JTable();
        taxSelectButton = new javax.swing.JButton();
        taxCloseButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        debtorNameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        schemeNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        payerNameTxt = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        actualDealerNameTxt = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        updateInvoiceBtn = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        saveInvoiceButton = new javax.swing.JButton();
        removeRowButton = new javax.swing.JButton();
        clearFormButton = new javax.swing.JButton();
        closeFormButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        amntFld = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        totalTaxAmountTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        totalInvoiceAmountTxt = new javax.swing.JTextField();

        schemesearchdialog.setModal(true);
        schemesearchdialog.setUndecorated(true);
        schemesearchdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        schemesearchdialog.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });
        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton421.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton421, gridBagConstraints);

        jButton521.setText("Dispose");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        taxSearchDialog.setModal(true);
        taxSearchDialog.setUndecorated(true);
        taxSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        taxSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        taxSearchPanel.setLayout(new java.awt.GridBagLayout());

        taxSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                taxSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        taxSearchPanel.add(taxSearchTxt, gridBagConstraints);

        taxSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        taxSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        taxSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taxSearchTableMouseClicked(evt);
            }
        });
        taxSearchScrollPane.setViewportView(taxSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        taxSearchPanel.add(taxSearchScrollPane, gridBagConstraints);

        taxSelectButton.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        taxSearchPanel.add(taxSelectButton, gridBagConstraints);

        taxCloseButton.setText("Dispose");
        taxCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxCloseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        taxSearchPanel.add(taxCloseButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        taxSearchDialog.getContentPane().add(taxSearchPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Debtors Billing");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Quantity", "Price", "Tax Rate", "Tax Amnt", "Total", "Gl Account", "Tax Account"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 7; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0 || i == 7) {

                column.setPreferredWidth(300);

                //sport column is bigger
            } else {

                //if (i == 2) {
                    column.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1000.0;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient Here"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Scheme Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel9, gridBagConstraints);

        jLabel1.setText("Account Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        debtorNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(debtorNameTxt, gridBagConstraints);

        jLabel2.setText("Revenue Dep.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField4.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField4, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct main_service from pb_operating_parameters  EXCEPT select main_service from pb_operating_parameters WHERE category = 'CA'"));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox1, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        schemeNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(schemeNameTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jLabel4.setText("Payer/Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel4, gridBagConstraints);

        payerNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(payerNameTxt, gridBagConstraints);

        buttonGroup2.add(jCheckBox3);
        jCheckBox3.setText("Search By  No.");
        jPanel2.add(jCheckBox3, new java.awt.GridBagConstraints());

        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setSelected(true);
        jCheckBox4.setText("Search By Name");
        jPanel2.add(jCheckBox4, new java.awt.GridBagConstraints());

        jLabel5.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(datePicker1, gridBagConstraints);

        jLabel3.setText("Manual Invoice No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField2.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(jTextField2, gridBagConstraints);

        jLabel6.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(actualDealerNameTxt, gridBagConstraints);

        buttonGroup3.add(jCheckBox1);
        jCheckBox1.setText("Tax");
        jCheckBox1.setEnabled(false);
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jCheckBox1, gridBagConstraints);

        buttonGroup3.add(jCheckBox2);
        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Un-Tax");
        jCheckBox2.setEnabled(false);
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jCheckBox2, gridBagConstraints);

        updateInvoiceBtn.setForeground(new java.awt.Color(0, 0, 255));
        updateInvoiceBtn.setText("Update Existing Invoice ...");
        updateInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInvoiceBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(updateInvoiceBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        saveInvoiceButton.setMnemonic('O');
        saveInvoiceButton.setText("Generate Debtor Invoice");
        saveInvoiceButton.setToolTipText("Click here enter data");
        saveInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInvoiceButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(saveInvoiceButton, gridBagConstraints);

        removeRowButton.setMnemonic('r');
        removeRowButton.setText("Remove Row");
        removeRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(removeRowButton, gridBagConstraints);

        clearFormButton.setMnemonic('l');
        clearFormButton.setText("Clear form");
        clearFormButton.setToolTipText("Click here to clear textfields");
        clearFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(clearFormButton, gridBagConstraints);

        closeFormButton.setMnemonic('C');
        closeFormButton.setText("Close form");
        closeFormButton.setToolTipText("Click here to close window");
        closeFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(closeFormButton, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton5, gridBagConstraints);

        jLabel53.setText("Amount KShs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel53, gridBagConstraints);

        amntFld.setEditable(false);
        amntFld.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        amntFld.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(amntFld, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2000.0;
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel10.setText("Amnt Tax");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(jLabel10, gridBagConstraints);

        totalTaxAmountTxt.setEditable(false);
        totalTaxAmountTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(totalTaxAmountTxt, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Total Invoice Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel11, gridBagConstraints);

        totalInvoiceAmountTxt.setEditable(false);
        totalInvoiceAmountTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        totalInvoiceAmountTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalInvoiceAmountTxt.setText("0.00");
        totalInvoiceAmountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalInvoiceAmountTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(totalInvoiceAmountTxt, gridBagConstraints);

        jTabbedPane1.addTab("General", jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 1155, 416);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed

    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        jTable1.setValueAt(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1), jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2), jTable1.getSelectedRow(), 6);
        jTable1.setValueAt("0.0", jTable1.getSelectedRow(), 3);
        jTable1.setValueAt("0.0", jTable1.getSelectedRow(), 4);

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jSearchDialog21.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked

    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if (jTextField1131.getCaretPosition() < 3) {
            System.out.println("Nothing");
        } else {
            jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,rate,gl_account from pb_operating_parameters where service_type ilike'" + jTextField1131.getText() + "%' and main_service ILIKE '" + jComboBox1.getSelectedItem().toString() + "%' order by service_type asc"));

            jSearchTable21.setShowHorizontalLines(false);
            jSearchScrollPane21.setViewportView(jSearchTable21);

        }  // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.schemeNameTxt.getLocationOnScreen();

    }

    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //  jSearchDialog211.setVisible(true);
    }

    private void cmbox211MouseClicked() {

        System.out.println("Showing dialog");

        //        jSearchDialog111.setVisible(true);
    }

    private void cmbox111MouseClicked() {

        System.out.println("Showing dialog");

        //        jSearchDialog12.setVisible(true);
    }

    private void searchButton211Clicked() {

        System.out.println("Showing dialog");

        //        jSearchDialog211.setVisible(true);
    }

    private void cmbox2MouseClicked() {

        System.out.println("Showing dialog");

        //        jSearchDialog11.setVisible(true);
    }

    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {

        //        double resFloat = 0.00;
        double resFloat = 0.00;

        /*  for (int i = 0; i < jTable11.getRowCount(); i++) {
       
         if (jTable11.getModel().getValueAt(i, 0) != null) {
       
         //   if (jTable11.getSelectedColumn() == 1) {
       
         resFloat = resFloat + Double.parseDouble(jTable11.getModel().getValueAt(i,5).toString());
       
         //   }
       
         jTextField31.setText(java.lang.String.valueOf(resFloat));
       
         }else{
         resFloat = resFloat + Double.parseDouble(jTable11.getModel().getValueAt(i,5).toString());
       
         //   }
       
         jTextField31.setText(java.lang.String.valueOf(resFloat));
         }
       
         }*/
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    private void cmbox1MouseClicked() {

        System.out.println("Showing dialog");

        //        jSearchDialog1.setVisible(true);
    }

    private void searchButton1Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //        jSearchDialog21.setVisible(true);
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if (jTable1.getSelectedColumn() == 0) {

            this.cmboxMouseClicked11();

        } else if (jTable1.getSelectedColumn() == 7) {

            this.cmboxMouseClicked12();

        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked11() {

        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog21.setSize(600, 200);
        jSearchDialog21.setLocation(point);
        jSearchDialog21.setVisible(true);

    }

    private void cmboxMouseClicked12() {

        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        taxSearchDialog.setSize(600, 200);
        taxSearchDialog.setLocation(point);
        taxSearchDialog.setVisible(true);

    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.schemesearchdialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        //        this.jComboBox131.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());

        debtorNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        schemeNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        payerNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());

        schemesearchdialog.dispose();

        //        this.populateTable1(this.jTextField9.getText());
        schemesearchdialog.dispose();
        actualDealerNameTxt.setText(schemeNameTxt.getText().trim());
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate

        if (this.jCheckBox3.isSelected()) {

            if (jTextField113.getCaretPosition() > 3) {
//                System.out.println("Nothing");
//            } else {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select trim(scheme_name) as scheme ,account_no,payer_name from ac_schemes where account_no ILIKE '%" + jTextField113.getText().toString() + "%' AND closed = false "));

                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);

            }
        } else {
            if (this.jCheckBox4.isSelected()) {
                if (jTextField113.getCaretPosition() > 3) {
//                    System.out.println("Nothing");
//                } else {

                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select trim(scheme_name) as scheme ,account_no,payer_name from ac_schemes where scheme_name ILIKE '%" + jTextField113.getText().toString() + "%' AND closed = false "));

                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);

                }
            }
        }
        // }else{

        // }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked2() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.schemeNameTxt.getLocationOnScreen();

        schemesearchdialog.setSize(600, 200);

        schemesearchdialog.setLocation(point);

        schemesearchdialog.setVisible(true);

    }
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        try {
            java.sql.PreparedStatement pstmtPrepay = connectDB.prepareStatement("SELECT  main_service, gl_account   FROM pb_operating_parameters "
                    + "where main_service ilike '" + jComboBox1.getSelectedItem().toString().trim() + "' ");

            java.sql.ResultSet rsetTax = pstmtPrepay.executeQuery();

            if (rsetTax.next()) {
                mainService = rsetTax.getString(1);
                glAccount = rsetTax.getString(2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DebtorsBillingIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void removeRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowButtonActionPerformed

        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }

        this.calculateTableTotals();

        // Add your handling code here:
    }//GEN-LAST:event_removeRowButtonActionPerformed
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
//        double resFloat = 0.00;
//
//        for (int i = 0; i < jTable1.getRowCount(); i++) {
//
//            if (jTable1.getModel().getValueAt(i, 0) != null) {
//
//                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString().replace(",", ""));
//
//                amntFld.setText(java.lang.String.valueOf(resFloat));
//
//            } else {
//
////                resFloat = resFloat + Double.valueOf(jTable1.getModel().getValueAt(i, 5).toString().replace(",", ""));
//
//                amntFld.setText(java.lang.String.valueOf(resFloat));
//
//            }
//        }

        this.jCheckBox1.setSelected(false);
        this.jCheckBox2.setSelected(true);
        this.jCheckBox2.doClick();

    }

//    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
//        
//        //        double resFloat = 0.00;
//        double resFloat = 0.00;
//        
//        for (int i = 0; i < jTable1.getRowCount(); i++) {
//            
//            if (jTable1.getModel().getValueAt(i, 0) != null) {
//                
//                //   if (jTable11.getSelectedColumn() == 1) {
//                
//                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i,5).toString());
//                
//                //   }
//                
//                jTextField3.setText(java.lang.String.valueOf(resFloat));
//                
//            }else{
//                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i,5).toString());
//                
//                //   }
//                
//                jTextField3.setText(java.lang.String.valueOf(resFloat));
//            }
//            
//        }
//          taxtxtfld.setText( String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 4)));
//        
//        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
//    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(amntFld.getText());

        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {

            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());

            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());

            double taxRate = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()) / 100;

            double taxAmount = 0.00;

            if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 3) != null && jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {

                taxAmount = taxRate * floatCol2 * floatCol3;

            }

            double resVal = (floatCol2 * floatCol3);

            jTable1.setValueAt(new java.lang.Double(taxAmount), jTable1.getSelectedRow(), 4);

            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);

            for (int i = 0; i < jTable1.getRowCount(); i++) {

                if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {

                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 5).toString());

                }

            }
            //   this.tableModelTableChanged();
            //   taxtxtfld.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 4)));

        }
        this.calculateTableTotals();
        this.jCheckBox1.setSelected(false);
        this.jCheckBox2.setSelected(true);


    }//GEN-LAST:event_jTable1KeyReleased
    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox3.getSelectedItem();

    }
    private void closeFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormButtonActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_closeFormButtonActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();

        if (selectedGuaran != null) {

            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type ilike '%" + selectedGuaran + "%'");

                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()) {
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rs.getObject(1), i, 2);
                    jTable1.setValueAt(rs.getObject(2), i, 4);
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        }

    }

    private void clearFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormButtonActionPerformed
        debtorNameTxt.setText("");

        totalTaxAmountTxt.setText("0.00");
        this.jCheckBox1.setSelected(false);
        this.jCheckBox2.setSelected(true);

        amntFld.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        //  this.jComboBox131.setSelectedItem(null);
        amntFld.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_clearFormButtonActionPerformed

    private void saveInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInvoiceButtonActionPerformed


        if (actualDealerNameTxt.getText().equalsIgnoreCase("") || actualDealerNameTxt.getText() == (null)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please Enter the Name of Debtor".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else if (actualDealerNameTxt.getText().isEmpty() == false) {

            if (Double.parseDouble(this.totalInvoiceAmountTxt.getText()) > 0) {

                if (hasTableConsistency()) {
                    java.util.Date periodFrom = null;
                    java.util.Date periodTo = null;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
                        while (rsetf.next()) {
                            periodFrom = rsetf.getDate(1);
                            periodTo = rsetf.getDate(2);
                        }

                    } catch (java.sql.SQLException sq) {
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        System.out.println(sq.getMessage());

                    }

                    if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
                        javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    } else {
                        if (jTable1.isEditing()) {
                            jTable1.getCellEditor().stopCellEditing();
                        }
                        java.util.Calendar calendar = java.util.Calendar.getInstance();

                        long dateNow = calendar.getTimeInMillis();

                        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                        System.out.println(datenowSql1.toString());

                        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                        System.out.println(datenowSql.toString());
                        try {
                            String invoiceNo = null;

                            String transNo = null;
                            String payMode = null;
                            String patientAcc = null;
                            String cardNo = null;
                            String AccDesc = null;
                            String scheme = null;
                            String cardName = null;
                            String isurer = null;
                            String expDate = null;
                            String staffNo = null;
                            String glAcc = null;
                            String user = null;
                            String accDesc1 = null;
                            String glAcc1 = null;
                            String glCode = null;
                            String bankAcc = null;
                            try {
                                connectDB.setAutoCommit(false);

                                java.sql.Statement stm3 = connectDB.createStatement();
                                java.sql.ResultSet rse3 = stm3.executeQuery("select activity,code from pb_activity where activity_category ='DA'");
                                while (rse3.next()) {
                                    glCode = rse3.getObject(1).toString();
                                    bankAcc = rse3.getObject(2).toString();
                                }
                                java.sql.Statement ps = connectDB.createStatement();
                                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                                while (rst.next()) {
                                    rst.getObject(1).toString();
                                    transNo = rst.getObject(1).toString();
                                }
                                if (jTextField2.getText().equalsIgnoreCase("-")) {
                                    java.sql.Statement ps11 = connectDB.createStatement();
                                    java.sql.ResultSet rst11 = ps11.executeQuery("select 'DI'||lpad(nextval('inv_no_seq')::text,7,0::text),current_user");
                                    while (rst11.next()) {
                                        rst11.getObject(1).toString();

                                        invoiceNo = rst11.getObject(1).toString();
                                        user = rst11.getObject(2).toString();
                                    }
                                } else {
                                    invoiceNo = jTextField2.getText();
                                }
                                for (int i = 0; i < jTable1.getRowCount(); i++) {
                                    if (jTable1.getModel().getValueAt(i, 0) != null) {
                                        java.sql.Statement stm121 = connectDB.createStatement();
                                        java.sql.ResultSet rse121 = stm121.executeQuery("select activity,current_user from pb_activity where code ='" + jTable1.getModel().getValueAt(i, 6).toString() + "'");
                                        while (rse121.next()) {
                                            glAcc = rse121.getObject(1).toString();
                                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                            pstmt2.setObject(1, jTable1.getValueAt(i, 6).toString());
                                            pstmt2.setString(2, glAcc);
                                            pstmt2.setString(3, debtorNameTxt.getText());
                                            pstmt2.setString(4, schemeNameTxt.getText());
                                            pstmt2.setString(5, "");
                                            pstmt2.setString(6, invoiceNo);
                                            pstmt2.setString(7, actualDealerNameTxt.getText());
                                            pstmt2.setString(8, "");
                                            pstmt2.setString(9, isurer);
                                            pstmt2.setString(10, "");
                                            pstmt2.setString(11, "");
                                            pstmt2.setString(12, invoiceNo);
                                            pstmt2.setString(13, jTable1.getValueAt(i, 1).toString());
                                            pstmt2.setString(14, jTable1.getValueAt(i, 0).toString());
                                            pstmt2.setString(15, "Revenue");
                                            pstmt2.setDouble(16, 0.00);
                                            pstmt2.setDouble(17, java.lang.Double.valueOf(jTable1.getValueAt(i, 5).toString()));
                                            pstmt2.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                            pstmt2.setString(19, transNo);
                                            pstmt2.setBoolean(20, false);
                                            pstmt2.setBoolean(21, false);
                                            pstmt2.setBoolean(22, false);
                                            pstmt2.setString(23, user);
                                            pstmt2.execute();

                                            //inserting taxation amounts to respective liability accounts
                                            if (jTable1.getValueAt(i, 7) != null && Double.parseDouble(jTable1.getValueAt(i, 4).toString()) > 0.00) {
                                                java.sql.PreparedStatement pstmtTax = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                                pstmtTax.setObject(1, jTable1.getValueAt(i, 7).toString());
                                                pstmtTax.setString(2, com.afrisoftech.lib.GLCodesFactory.getActivityDescription(connectDB, jTable1.getValueAt(i, 7).toString()));
                                                pstmtTax.setString(3, debtorNameTxt.getText());
                                                pstmtTax.setString(4, schemeNameTxt.getText());
                                                pstmtTax.setString(5, "");
                                                pstmtTax.setString(6, invoiceNo);
                                                pstmtTax.setString(7, actualDealerNameTxt.getText());
                                                pstmtTax.setString(8, "");
                                                pstmtTax.setString(9, isurer);
                                                pstmtTax.setString(10, "");
                                                pstmtTax.setString(11, "");
                                                pstmtTax.setString(12, invoiceNo);
                                                pstmtTax.setString(13, jTable1.getValueAt(i, 1).toString());
                                                pstmtTax.setString(14, "Taxation on services @ " + jTable1.getValueAt(i, 3).toString() + "%");
                                                pstmtTax.setString(15, "Revenue");
                                                pstmtTax.setDouble(16, 0.00);
                                                pstmtTax.setDouble(17, java.lang.Double.valueOf(jTable1.getValueAt(i, 4).toString()));
                                                pstmtTax.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                                pstmtTax.setString(19, transNo);
                                                pstmtTax.setBoolean(20, false);
                                                pstmtTax.setBoolean(21, false);
                                                pstmtTax.setBoolean(22, false);
                                                pstmtTax.setString(23, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                                                pstmtTax.execute();
                                            }

                                        }
                                    }
                                }

                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt.setString(1, bankAcc);
                                double totalPayment = Double.valueOf(totalTaxAmountTxt.getText().trim()) + Double.valueOf(amntFld.getText().trim());
                                pstmt.setString(2, payerNameTxt.getText());
                                pstmt.setString(4, debtorNameTxt.getText());
                                pstmt.setString(3, actualDealerNameTxt.getText());
                                pstmt.setString(7, debtorNameTxt.getText());
                                pstmt.setString(5, schemeNameTxt.getText());
                                pstmt.setString(6, actualDealerNameTxt.getText());
                                pstmt.setString(8, invoiceNo);
                                pstmt.setString(9, "");
                                pstmt.setString(10, "");
                                pstmt.setString(11, transNo);
                                pstmt.setString(12, "Invoice");
                                pstmt.setDouble(14, 0.00);
                                pstmt.setDouble(13, Double.parseDouble(totalInvoiceAmountTxt.getText()));
                                pstmt.setString(16, invoiceNo);
                                pstmt.setDate(15, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt.setObject(17, jComboBox1.getSelectedItem().toString());
                                pstmt.setBoolean(18, false);
                                pstmt.setBoolean(19, false);
                                pstmt.setString(20, user);
                                pstmt.setString(21, "");
                                pstmt.setDouble(22, Double.parseDouble(totalInvoiceAmountTxt.getText()));
                                pstmt.setBoolean(23, false);
                                pstmt.setDouble(24, 0.00);

                                pstmt.executeUpdate();
                                connectDB.commit();
                                connectDB.setAutoCommit(true);
                                javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully \n Inv No. is: " + invoiceNo + "", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                                com.afrisoftech.reports.FinalDebtInvoicePdf policy = new com.afrisoftech.reports.FinalDebtInvoicePdf();
                                policy.FinalDebtInvoicePdf(connectDB, invoiceNo);

                                debtorNameTxt.setText("");
                                payerNameTxt.setText("");
                                amntFld.setText("0.00");
                                jTextField2.setText("-");
                                schemeNameTxt.setText("");
                                this.totalInvoiceAmountTxt.setText("0.00");
                                this.totalTaxAmountTxt.setText("0.00");
                                this.actualDealerNameTxt.setText("");
                                for (int k = 0; k < jTable1.getRowCount(); k++) {
                                    for (int r = 0; r < jTable1.getColumnCount(); r++) {
                                        jTable1.getModel().setValueAt(null, k, r);
                                    }
                                }

                                //  this.jComboBox131.setSelectedItem(null);
                                //jTextField31.setText("0.00");
                                //  jComboBox2.setSelectedItem(null);
                            } catch (java.sql.SQLException sq) {
                                sq.printStackTrace();
                                try {
                                    connectDB.rollback();
                                } catch (java.sql.SQLException sql) {
                                    sql.printStackTrace();
                                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                }
                                System.out.println(sq.getMessage());
                                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                            }
                        } catch (java.lang.Exception ex) {
                            System.out.println(ex.getMessage());
                            ex.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                        }
                    }
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Check whether table values as consistent, and whether tax account has correct values where taxation applies");
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Invoice MUST have a valid amount");
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_saveInvoiceButtonActionPerformed
    public void calculateTableTotals() {
        double rowTax = 0.0, rowAmnt = 0.0, TotalTax = 0.0, TotalAmnt = 0.0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            if (jTable1.getModel().getValueAt(i, 0) != null) {
                System.out.println("\n\n\n\t\t\t\t\t\\n\tthe tax amnt is" + jTable1.getModel().getValueAt(i, 4).toString().trim().replace(",", "") + "\n\n\nthe amnt total " + jTable1.getModel().getValueAt(i, 5).toString().trim().replace(",", ""));
                rowTax = Double.valueOf(jTable1.getModel().getValueAt(i, 4).toString().trim().replace(",", ""));
                TotalTax = TotalTax + rowTax;
                rowAmnt = Double.valueOf(jTable1.getModel().getValueAt(i, 5).toString().trim().replace(",", ""));
                TotalAmnt = TotalAmnt + rowAmnt;

            } else {
            }

        }
        this.totalTaxAmountTxt.setText(String.valueOf(TotalTax));
        this.amntFld.setText(String.valueOf(TotalAmnt));
        this.totalInvoiceAmountTxt.setText(String.valueOf(TotalTax + TotalAmnt));

    }
    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        double totalTax = 0.0, totalAmnt = 0.0;
        if (this.jCheckBox1.isSelected() == true) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i, 0) != null) {
                    {
                        ArrayList taxDetails = new ArrayList();
                        taxDetails = com.afrisoftech.lib.CheckTaxStatus.returnTax(connectDB, mainService, glAccount);
                        if (taxDetails.isEmpty() == false) {

                            this.jTable1.setValueAt(taxDetails.get(1), i, 3);
                            this.jTable1.setValueAt(taxDetails.get(2), i, 7);
                        }
                    }
                    {
                        ArrayList taxCalc = new ArrayList();
                        taxCalc = com.afrisoftech.lib.CheckTaxStatus.calculateTax(connectDB, Double.valueOf(this.jTable1.getValueAt(i, 3).toString()), Double.valueOf(this.jTable1.getValueAt(i, 5).toString()));
                        if (taxCalc.isEmpty() == false) {

                            this.jTable1.setValueAt(taxCalc.get(0), i, 4);
                            this.jTable1.setValueAt(taxCalc.get(1), i, 5);
                            totalTax = totalTax + Double.valueOf(String.valueOf(taxCalc.get(0)));
                            totalAmnt = totalAmnt + Double.valueOf(String.valueOf(taxCalc.get(1)));
                            System.out.println("the total tax is " + totalTax + "and the total amount is" + totalAmnt);
                        }
                    }

                }
            }

            totalTaxAmountTxt.setText(String.valueOf(totalTax));
            amntFld.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5)));
        }
        this.calculateTableTotals();
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged

        if (this.jCheckBox2.isSelected() == true) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i, 0) != null) {

                    this.jTable1.setValueAt(0.0, i, 3);
                    this.jTable1.setValueAt(null, i, 7);

                    double Total = Double.valueOf(jTable1.getModel().getValueAt(i, 5).toString().trim()) + Double.valueOf(jTable1.getModel().getValueAt(i, 4).toString().trim());
                    this.jTable1.setValueAt(Total, i, 5);
                    this.jTable1.setValueAt(0.0, i, 4);

                }
            }

        }

        this.calculateTableTotals();
    }//GEN-LAST:event_jCheckBox2ItemStateChanged

    private void totalInvoiceAmountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalInvoiceAmountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalInvoiceAmountTxtActionPerformed

    private void taxSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_taxSearchTxtCaretUpdate

        this.taxSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT code as gl_code, activity gl_account_description FROM pb_activity WHERE activity ilike '%" + taxSearchTxt.getText() + "%' AND activity_category ilike 'bl'"));

        // TODO add your handling code here:
    }//GEN-LAST:event_taxSearchTxtCaretUpdate

    private void taxSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taxSearchTableMouseClicked

        jTable1.setValueAt(this.taxSearchTable.getValueAt(taxSearchTable.getSelectedRow(), 0), jTable1.getSelectedRow(), 7);

        this.taxSearchDialog.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_taxSearchTableMouseClicked

    private boolean hasTableConsistency() {

        boolean checkConsistency = true;

        for (int i = 0; i < jTable1.getRowCount(); i++) {

            if (jTable1.getValueAt(i, 0) != null) {

                if (jTable1.getValueAt(i, 7) == null && Double.parseDouble(jTable1.getValueAt(i, 4).toString()) > 0.00) {

                    checkConsistency = false;

                    break;

                }

            }

        }

        return checkConsistency;
    }

    private void taxCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxCloseButtonActionPerformed

        this.taxSearchDialog.dispose();



        // TODO add your handling code here:
    }//GEN-LAST:event_taxCloseButtonActionPerformed

    private void updateInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInvoiceBtnActionPerformed

        com.afrisoftech.accounting.EditDebtorsInvoiceIntfr prod = new com.afrisoftech.accounting.EditDebtorsInvoiceIntfr(connectDB);
       // com.afrisoftech.accounting.DebtorsBillingIntfr prod = new com.afrisoftech.accounting.DebtorsBillingIntfr(connectDB, pConnDB);
        com.afrisoftech.hospital.HospitalMain.saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
            prod.setSize(com.afrisoftech.hospital.HospitalMain.saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_updateInvoiceBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actualDealerNameTxt;
    private javax.swing.JTextField amntFld;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton clearFormButton;
    private javax.swing.JButton closeFormButton;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JTextField debtorNameTxt;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton421;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton521;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField payerNameTxt;
    private javax.swing.JButton removeRowButton;
    private javax.swing.JButton saveInvoiceButton;
    private javax.swing.JTextField schemeNameTxt;
    private javax.swing.JDialog schemesearchdialog;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton taxCloseButton;
    private javax.swing.JDialog taxSearchDialog;
    private javax.swing.JPanel taxSearchPanel;
    private javax.swing.JScrollPane taxSearchScrollPane;
    private javax.swing.JTable taxSearchTable;
    private javax.swing.JTextField taxSearchTxt;
    private javax.swing.JButton taxSelectButton;
    private javax.swing.JTextField totalInvoiceAmountTxt;
    private javax.swing.JTextField totalTaxAmountTxt;
    private javax.swing.JButton updateInvoiceBtn;
    // End of variables declaration//GEN-END:variables
}
