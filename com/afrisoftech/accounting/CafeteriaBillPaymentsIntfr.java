/*
 * GovBillPaymentsIntfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Charles W. Waweru <cwaweru@systempartners.biz>, Francis K. Waweru
 * <francis@systempartners.biz>, Peter Ndung'u Waweru
 * <pndungu@systempartners.biz>
 */
public class CafeteriaBillPaymentsIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable {

    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox2;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    private javax.swing.JComboBox cmbox21;
    private final javax.swing.JTextField comboTextField = new javax.swing.JTextField();
    DispatchThread dispatchThread;
    javax.swing.ComboBoxModel mainComboBoxModel;
    javax.swing.ComboBoxModel oldComboBox1311Model;
    private boolean threadCheck = false;
    private boolean refreshStatus;
    String Categ = null;
    String desc = null;
    String billNo = null;
    String transNo = null;
    String payMode = null;
    String patientAcc = null;
    String cardNo = null;
    String AccDesc = null;
    String scheme = null;
    String cardName = null;
    String isurer = null;
    String expDate = null;
    String staffNo = null;
    String glAcc = null;
    String receiptNo1 = null;
    public static String receiptNo2 = null;
    String actCode1 = null;
    String glCode1 = null;
    String bankAcc1 = null;
    String transNo1 = null;
    String actNames1 = null;
    String patCat1 = null;
    String patientAcc1 = null;
    String user = null;
    String glAcc1 = null;
    String accDesc1 = null;
    String name = null;
    String rname = null;
    String rcode = null;
    String cashPoint = null;
    String cash_no = null;
    java.sql.Connection connectDB = null;
    private java.lang.String shift_no = null;
    javax.swing.table.TableModel tableModel;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.lang.Thread shiftThread = null;
    java.lang.Boolean processReceipt = false;
    private boolean check4Exemptions = false;
    boolean priceEdit = false;
    boolean rePrints = false;
    private String invoiceNo;

    public CafeteriaBillPaymentsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        refreshStatus = true;

        connectDB = connDb;

        pConnDB = pconnDB;

        shiftThread = new java.lang.Thread(this, "SHIFT_MONITOR");

        shiftThread.start();

        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT edit_prices, re_prints FROM sales_prefs");
            java.sql.ResultSet rsetSales = pstmt.executeQuery();
            while (rsetSales.next()) {
                priceEdit = rsetSales.getBoolean(1);
                rePrints = rsetSales.getBoolean(2);
            }
            rsetSales.close();
            pstmt.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(GovBillPaymentsIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();


        if (System.getProperty("exemptions.mode").equalsIgnoreCase("false")) {

            jCheckBox6.setEnabled(false);
            jTextField1211.setEnabled(false);
            exemptionNumberTxt.setEditable(false);
            check4Exemptions = false;

        } else {

            jCheckBox6.setEnabled(true);
            jTextField1211.setEnabled(true);
            exemptionNumberTxt.setEditable(true);
            check4Exemptions = true;

        }



        cashPointTxt.setText(this.getCashPoint());

        jTextField811.setText(getShiftNumber());

        jButton22.setVisible(rePrints);

        this.setSize(com.afrisoftech.hospital.HospitalMain.saccopn.getSize());
        //        startRunning();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            /*    false, true, priceEdit, false, false, false
        };*/

        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    };
    jButton9 = new javax.swing.JButton();
    jSearchDialog1 = new javax.swing.JDialog();
    jSearchPanel1 = new javax.swing.JPanel();
    jTextField112 = new javax.swing.JTextField();
    jSearchScrollPane1 = new javax.swing.JScrollPane();
    jSearchTable1 = new com.afrisoftech.dbadmin.JTable(){
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };
        /*    false, true, priceEdit, false, false, false
    };*/

    boolean[] canEdit = new boolean [] {
        false, false, false, false, false
    };

    public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
    }

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
    };
    jButton91 = new javax.swing.JButton();
    jSearchDialog2 = new javax.swing.JDialog();
    jSearchPanel2 = new javax.swing.JPanel();
    jTextField113 = new javax.swing.JTextField();
    jSearchScrollPane2 = new javax.swing.JScrollPane();
    jSearchTable2 = new javax.swing.JTable();
    jButton42 = new javax.swing.JButton();
    jButton52 = new javax.swing.JButton();
    jSearchDialog21 = new javax.swing.JDialog();
    jSearchPanel21 = new javax.swing.JPanel();
    jTextField1131 = new javax.swing.JTextField();
    jSearchScrollPane21 = new javax.swing.JScrollPane();
    jSearchTable21 = new javax.swing.JTable();
    jButton421 = new javax.swing.JButton();
    jButton521 = new javax.swing.JButton();
    jDialog31 = new javax.swing.JDialog();
    //jDialog3.setSize(600,400);
    jPanel121 = new javax.swing.JPanel();
    jPanel1111 = new javax.swing.JPanel();
    jLabel66111 = new javax.swing.JLabel();
    jTextField14111 = new javax.swing.JTextField();
    jLabel3111 = new javax.swing.JLabel();
    jTextField4111 = new javax.swing.JTextField();
    jPanel312 = new javax.swing.JPanel();
    jLabel582211 = new javax.swing.JLabel();
    jLabel5821111 = new javax.swing.JLabel();
    jTextField3111 = new javax.swing.JTextField();
    jPanel41 = new javax.swing.JPanel();
    jTextField1611 = new javax.swing.JTextField();
    searchButton13 = new javax.swing.JButton();
    jSeparator1111 = new javax.swing.JSeparator();
    jButton301111 = new javax.swing.JButton();
    jButton252111 = new javax.swing.JButton();
    jButton1111 = new javax.swing.JButton();
    jSearchDialog11 = new javax.swing.JDialog();
    jSearchPanel11 = new javax.swing.JPanel();
    jTextField1111 = new javax.swing.JTextField();
    jSearchScrollPane11 = new javax.swing.JScrollPane();
    jSearchTable11 = new javax.swing.JTable();
    dispose11 = new javax.swing.JButton();
    buttonGroup2 = new javax.swing.ButtonGroup();
    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel8 = new javax.swing.JPanel();
    jPanel71 = new javax.swing.JPanel();
    jLabel71 = new javax.swing.JLabel();
    jTextField61 = new javax.swing.JTextField();
    jPanel111 = new javax.swing.JPanel();
    jPanel211 = new javax.swing.JPanel();
    jLabel111 = new javax.swing.JLabel();
    jComboBox111 = new javax.swing.JComboBox();
    jLabel2121 = new javax.swing.JLabel();
    jTextField151 = new javax.swing.JTextField();
    jPanel61 = new javax.swing.JPanel();
    jTextField91 = new javax.swing.JTextField();
    searchButton1 = new javax.swing.JButton();
    jPanel14 = new javax.swing.JPanel();
    jCheckBox1 = new javax.swing.JCheckBox();
    jCheckBox2 = new javax.swing.JCheckBox();
    jCheckBox3 = new javax.swing.JCheckBox();
    jLabel112 = new javax.swing.JLabel();
    jTextField1112 = new javax.swing.JTextField();
    jLabel113 = new javax.swing.JLabel();
    jTextField1113 = new javax.swing.JTextField();
    exemptionNumberLbl = new javax.swing.JLabel();
    exemptionNumberTxt = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    jLabel16 = new javax.swing.JLabel();
    jTextField7 = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    jTextField1 = new javax.swing.JTextField();
    jSeparator111 = new javax.swing.JSeparator();
    jPanel32 = new javax.swing.JPanel();
    jPanel32.setVisible(false);
    jLabel22 = new javax.swing.JLabel();
    jTextField22 = new javax.swing.JTextField();
    jLabel32 = new javax.swing.JLabel();
    jTextField42 = new javax.swing.JTextField();
    jLabel41 = new javax.swing.JLabel();
    jTextField51 = new javax.swing.JTextField();
    jPanel311 = new javax.swing.JPanel();
    jPanel311.setVisible(false);
    jLabel213 = new javax.swing.JLabel();
    jTextField212 = new javax.swing.JTextField();
    jLabel313 = new javax.swing.JLabel();
    jTextField411 = new javax.swing.JTextField();
    jLabel422 = new javax.swing.JLabel();
    jTextField521 = new javax.swing.JTextField();
    jLabel4112 = new javax.swing.JLabel();
    jTextField5111 = new javax.swing.JTextField();
    jPanel9 = new javax.swing.JPanel();
    jScrollPane211 = new javax.swing.JScrollPane();
    jTable111 = new com.afrisoftech.dbadmin.JTable(){
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Boolean.class
        };
        /*    false, true, priceEdit, false, false, false
    };*/

    boolean[] canEdit = new boolean [] {
        false, true, false, false, false, false
    };

    public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
    }

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
    };
    jPanel13 = new javax.swing.JPanel();
    jLabel1411 = new javax.swing.JLabel();
    jTextField1211 = new javax.swing.JTextField();
    jLabel14 = new javax.swing.JLabel();
    jTextField12 = new javax.swing.JTextField();
    jLabel141 = new javax.swing.JLabel();
    jTextField121 = new javax.swing.JTextField();
    jLabel151 = new javax.swing.JLabel();
    jTextField131 = new javax.swing.JTextField();
    jLabel5311 = new javax.swing.JLabel();
    jTextField311 = new javax.swing.JTextField();
    jCheckBox6 = new javax.swing.JCheckBox();
    jPanel12 = new javax.swing.JPanel();
    jCheckBox4 = new javax.swing.JCheckBox();
    jCheckBox5 = new javax.swing.JCheckBox();
    jRadioButton1 = new javax.swing.JRadioButton();
    jPanel10 = new javax.swing.JPanel();
    try {
        java.lang.Class.forName("org.postgresql.Driver");
    }catch (java.lang.ClassNotFoundException sl){
        System.out.println(sl.getMessage());
    }

    jButton111 = new javax.swing.JButton();
    try {
        java.lang.Class.forName("org.postgresql.Driver");
    }catch (java.lang.ClassNotFoundException sl){
        System.out.println(sl.getMessage());
    }

    jButton1112 = new javax.swing.JButton();
    jButton22 = new javax.swing.JButton();
    jButton611 = new javax.swing.JButton();
    jButton311 = new javax.swing.JButton();
    jButton411 = new javax.swing.JButton();
    jButton511 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jPanel51 = new javax.swing.JPanel();
    jLabel121 = new javax.swing.JLabel();
    jComboBox41 = new javax.swing.JComboBox();
    jLabel132 = new javax.swing.JLabel();
    jTextField82 = new javax.swing.JTextField();
    datePicker1 = new com.afrisoftech.lib.DatePicker();
    jLabel8 = new javax.swing.JLabel();
    jLabel101 = new javax.swing.JLabel();
    cashPointTxt = new javax.swing.JTextField();
    jLabel1311 = new javax.swing.JLabel();
    jTextField811 = new javax.swing.JTextField();
    payerMobileTelephoneNumberTxt = new javax.swing.JFormattedTextField();
    payBillNumberTxt = new javax.swing.JTextField();

    jSearchDialog.setModal(true);
    jSearchDialog.setUndecorated(true);
    jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jSearchPanel.setLayout(new java.awt.GridBagLayout());

    jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField11CaretUpdate(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel.add(jTextField11, gridBagConstraints);

    jSearchScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchScrollPaneMouseClicked(evt);
        }
    });

    jSearchTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Service Descr.", "Rate", "GL Account", "Code", "Main Service"
        }
    ));
    jSearchTable.setShowHorizontalLines(false);
    javax.swing.table.TableColumn column2 = null;
    for (int i = 0; i < 5; i++) {
        column2 = jSearchTable.getColumnModel().getColumn(i);
        if (i == 0) {

            column2.setPreferredWidth(300); //sport column is bigger
        } else {

            //if (i == 2) {
                column2.setPreferredWidth(150);
                // }  else
            //column.setPreferredWidth(50);

        }
    }
    jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTableMouseClicked(evt);
        }
    });
    jSearchScrollPane.setViewportView(jSearchTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

    jButton9.setText("Dispose");
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel.add(jButton9, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

    jSearchDialog1.setModal(true);
    jSearchDialog1.setUndecorated(true);
    jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jSearchPanel1.setLayout(new java.awt.GridBagLayout());

    jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField112CaretUpdate(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel1.add(jTextField112, gridBagConstraints);

    jSearchTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "SERVICE TYPE", "RATE", "GL ACCOUNT", "CODE", "MAIN SERVICE"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jSearchTable1.setShowHorizontalLines(false);
    javax.swing.table.TableColumn column3 = null;
    for (int i = 0; i < 5; i++) {
        column3 = jSearchTable1.getColumnModel().getColumn(i);
        if (i == 0) {

            column3.setPreferredWidth(300); //sport column is bigger
        } else {

            //if (i == 2) {
                column3.setPreferredWidth(150);
                // }  else
            //column.setPreferredWidth(50);

        }
    }
    jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable1MouseClicked(evt);
        }
    });
    jSearchTable1.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jSearchTable1KeyReleased(evt);
        }
    });
    jSearchScrollPane1.setViewportView(jSearchTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

    jButton91.setText("Dispose");
    jButton91.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton91ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel1.add(jButton91, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

    jSearchDialog2.setModal(true);
    jSearchDialog2.setUndecorated(true);
    jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jSearchPanel2.setLayout(new java.awt.GridBagLayout());

    jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField113CaretUpdate(evt);
        }
    });
    jTextField113.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField113ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 300.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jSearchPanel2.add(jTextField113, gridBagConstraints);

    jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
    jSearchTable2.setShowHorizontalLines(false);
    /*javax.swing.table.TableColumn column = null;

    for (int i = 0; i < 4; i++) {

        column = jSearchTable2.getColumnModel().getColumn(i);

        if (i == 1) {

            column.setPreferredWidth(400);
            //sport column is bigger
        } else {

            column.setPreferredWidth(200);

        }
    }
    */
    jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable2MouseClicked(evt);
        }
    });
    jSearchScrollPane2.setViewportView(jSearchTable2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

    jButton42.setText("Select");
    jButton42.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton42ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel2.add(jButton42, gridBagConstraints);

    jButton52.setText("Dispose");
    jButton52.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton52ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel2.add(jButton52, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

    jSearchDialog21.setModal(true);
    jSearchDialog21.setUndecorated(true);
    jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jSearchPanel21.setLayout(new java.awt.GridBagLayout());

    jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField1131CaretUpdate(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 300.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jSearchPanel21.add(jTextField1131, gridBagConstraints);

    jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
    jSearchTable21.setShowHorizontalLines(false);
    /*javax.swing.table.TableColumn column = null;

    for (int i = 0; i < 4; i++) {

        column = jSearchTable2.getColumnModel().getColumn(i);

        if (i == 1) {

            column.setPreferredWidth(400);
            //sport column is bigger
        } else {

            column.setPreferredWidth(200);

        }
    }
    */
    jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable21MouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jSearchTable21MouseEntered(evt);
        }
    });
    jSearchScrollPane21.setViewportView(jSearchTable21);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

    jButton421.setText("Select");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel21.add(jButton421, gridBagConstraints);

    jButton521.setText("Dispose");
    jButton521.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton521ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel21.add(jButton521, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

    jDialog31.setTitle("Enter Doctors Fee");
    jDialog31.setSize(400,200);
    jDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

    jPanel121.setLayout(new java.awt.GridBagLayout());

    jPanel1111.setBackground(new java.awt.Color(130, 232, 255));
    jPanel1111.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Doctor's details here"));
    jPanel1111.setLayout(new java.awt.GridBagLayout());

    jLabel66111.setText("Amount");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel1111.add(jLabel66111, gridBagConstraints);

    jTextField14111.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel1111.add(jTextField14111, gridBagConstraints);

    jLabel3111.setText("Category");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    jPanel1111.add(jLabel3111, gridBagConstraints);

    jTextField4111.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel1111.add(jTextField4111, gridBagConstraints);

    jPanel312.setBackground(new java.awt.Color(204, 204, 255));
    jPanel312.setLayout(new java.awt.GridBagLayout());

    jLabel582211.setText("Doctor's No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel312.add(jLabel582211, gridBagConstraints);

    jLabel5821111.setText("Doc. Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel312.add(jLabel5821111, gridBagConstraints);

    jTextField3111.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel312.add(jTextField3111, gridBagConstraints);

    jPanel41.setLayout(new java.awt.GridBagLayout());

    jTextField1611.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel41.add(jTextField1611, gridBagConstraints);

    searchButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton13.setToolTipText("Search");
    searchButton13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton13.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton13.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel41.add(searchButton13, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel312.add(jPanel41, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1111.add(jPanel312, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    gridBagConstraints.weightx = 5.0;
    gridBagConstraints.weighty = 10.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    jPanel121.add(jPanel1111, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel121.add(jSeparator1111, gridBagConstraints);

    jButton301111.setMnemonic('O');
    jButton301111.setText("Ok");
    jButton301111.setToolTipText("Click here to enter data");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel121.add(jButton301111, gridBagConstraints);

    jButton252111.setMnemonic('c');
    jButton252111.setText("Close");
    jButton252111.setToolTipText("Click here to close window");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel121.add(jButton252111, gridBagConstraints);

    jButton1111.setMnemonic('h');
    jButton1111.setText("Help");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel121.add(jButton1111, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jDialog31.getContentPane().add(jPanel121, gridBagConstraints);

    jSearchDialog11.setModal(true);
    jSearchDialog11.setUndecorated(true);
    jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jSearchPanel11.setLayout(new java.awt.GridBagLayout());

    jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField1111CaretUpdate(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 300.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jSearchPanel11.add(jTextField1111, gridBagConstraints);

    jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
    jSearchTable11.setShowHorizontalLines(false);
    /*int rowsNo = 0;
    //try {

        crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

        crset1.setConnectionSource(pConnDB);

        // try {
            //crset1.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

            }));

            tableModel = jSearchTable.getModel();

            jSearchScrollPane.setViewportView(jSearchTable);

            /*   }catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }*/
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        dispose11.setMnemonic('l');
        dispose11.setText("Close");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(dispose11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CAFETERIA - Cash Sales and Billing module (CASH REGISTER)");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jPanel71.setLayout(new java.awt.GridBagLayout());

        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel71.add(jLabel71, gridBagConstraints);

        jTextField61.setEditable(false);
        jTextField61.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField61.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel71.add(jTextField61, gridBagConstraints);

        jPanel111.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel111.setLayout(new java.awt.GridBagLayout());

        jPanel211.setBackground(new java.awt.Color(204, 255, 204));
        jPanel211.setBorder(javax.swing.BorderFactory.createTitledBorder("Client Cash Sale/Billing Details"));
        jPanel211.setLayout(new java.awt.GridBagLayout());

        jLabel111.setText("Client Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel111, gridBagConstraints);

        jComboBox111.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT department FROM department_allocation WHERE user_name ilike current_user ORDER BY 1"));
        jComboBox111.setSelectedIndex(0);
        jComboBox111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jComboBox111, gridBagConstraints);

        jLabel2121.setText("Revenue Stream Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel2121, gridBagConstraints);

        jTextField151.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField151.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel211.add(jTextField151, gridBagConstraints);

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jTextField91.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField91CaretUpdate(evt);
            }
        });
        jTextField91.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField91FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1000.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField91, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Find 2.png"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setIconTextGap(0);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setPreferredSize(new java.awt.Dimension(33, 23));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jPanel61, gridBagConstraints);

        jCheckBox1.setBackground(new java.awt.Color(153, 255, 255));
        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Search by PF. No.");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel14.add(jCheckBox1);

        jCheckBox2.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Search by client Name");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jPanel14.add(jCheckBox2);

        buttonGroup1.add(jCheckBox3);
        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Walk In");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel14.add(jCheckBox3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel211.add(jPanel14, gridBagConstraints);

        jLabel112.setText("Credit Sales Acc/No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel112, gridBagConstraints);

        jTextField1112.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField1112, gridBagConstraints);

        jLabel113.setText("Receipt/Invoice Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel113, gridBagConstraints);

        jTextField1113.setEditable(false);
        jTextField1113.setForeground(new java.awt.Color(255, 102, 102));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField1113, gridBagConstraints);

        exemptionNumberLbl.setText("Discount Ref. Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(exemptionNumberLbl, gridBagConstraints);

        exemptionNumberTxt.setToolTipText("You MUST get an authorised document bearing the reference number, officer authorising the discount for discount and the discounted amount.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(exemptionNumberTxt, gridBagConstraints);

        jLabel2.setText("Credit sales Account Selection Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel2, gridBagConstraints);

        jLabel16.setText("Revenue Stream A/C Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel16, gridBagConstraints);

        jTextField7.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField7, gridBagConstraints);

        jLabel3.setText("Client A/C Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel211.add(jLabel3, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setText("Cash");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel211.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel111.add(jPanel211, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel111.add(jSeparator111, gridBagConstraints);

        jPanel32.setBackground(new java.awt.Color(204, 255, 204));
        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder("Cheque Details"));
        jPanel32.setLayout(new java.awt.GridBagLayout());

        jLabel22.setText("Cheque No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel32.add(jLabel22, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel32.add(jTextField22, gridBagConstraints);

        jLabel32.setText("Drawer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel32.add(jLabel32, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel32.add(jTextField42, gridBagConstraints);

        jLabel41.setText("Drawer's Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel32.add(jLabel41, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel32.add(jTextField51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel111.add(jPanel32, gridBagConstraints);

        jPanel311.setBorder(javax.swing.BorderFactory.createTitledBorder("Card Details"));
        jPanel311.setLayout(new java.awt.GridBagLayout());

        jLabel213.setText("Card No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(jLabel213, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(jTextField212, gridBagConstraints);

        jLabel313.setText("Card Company");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(jLabel313, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(jTextField411, gridBagConstraints);

        jLabel422.setText("Card Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(jLabel422, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel311.add(jTextField521, gridBagConstraints);

        jLabel4112.setText("Expiry Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(jLabel4112, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel311.add(jTextField5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel111.add(jPanel311, gridBagConstraints);

        jPanel9.setBackground(new java.awt.Color(204, 204, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jScrollPane211.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cash Sale Particulars - Select item/service (by clicking once on the ITEM/SERVICE column) and specify the quantity. Remember to press the TAB key to validate your entries.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 153, 255)));

        jTable111.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable111.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Quantity", "Price", "Total", "Gl Account", "Billed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable111.setRowHeight(22);
        javax.swing.table.TableColumn column1 = null;
        for (int i = 0; i < 6; i++) {
            column1 = jTable111.getColumnModel().getColumn(i);
            if (i == 0) {

                column1.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column1.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable111MouseClicked(evt);
            }
        });
        jTable111.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTable111ComponentShown(evt);
            }
        });
        jTable111.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable111KeyReleased(evt);
            }
        });
        jScrollPane211.setViewportView(jTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 30.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel9.add(jScrollPane211, gridBagConstraints);

        jPanel13.setBackground(new java.awt.Color(204, 255, 204));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel1411.setText("Discount Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jLabel1411, gridBagConstraints);

        jTextField1211.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1211.setText("0.00");
        jTextField1211.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1211CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jTextField1211, gridBagConstraints);

        jLabel14.setText("Billed Amount - Discount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jLabel14, gridBagConstraints);

        jTextField12.setEditable(false);
        jTextField12.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField12.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField12, gridBagConstraints);

        jLabel141.setText("Tendered Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jLabel141, gridBagConstraints);

        jTextField121.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField121.setText("0.00");
        jTextField121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField121CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jTextField121, gridBagConstraints);

        jLabel151.setText("Change");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jLabel151, gridBagConstraints);

        jTextField131.setEditable(false);
        jTextField131.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField131.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jTextField131, gridBagConstraints);

        jLabel5311.setText("Amount Paid");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel5311, gridBagConstraints);

        jTextField311.setEditable(false);
        jTextField311.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField311.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField311, gridBagConstraints);

        jCheckBox6.setBackground(new java.awt.Color(204, 255, 255));
        jCheckBox6.setForeground(new java.awt.Color(0, 51, 255));
        jCheckBox6.setText("Exemption?");
        jCheckBox6.setEnabled(false);
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jCheckBox6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel9.add(jPanel13, gridBagConstraints);

        jPanel12.setBackground(new java.awt.Color(204, 255, 204));
        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jCheckBox4.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setText("Item Code");
        jCheckBox4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jPanel12.add(jCheckBox4, new java.awt.GridBagConstraints());

        jCheckBox5.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup2.add(jCheckBox5);
        jCheckBox5.setSelected(true);
        jCheckBox5.setText("Description");
        jCheckBox5.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jPanel12.add(jCheckBox5, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel9.add(jPanel12, gridBagConstraints);

        jRadioButton1.setText("Waived/Exempted");
        jRadioButton1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jRadioButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel111.add(jPanel9, gridBagConstraints);

        jPanel10.setBackground(new java.awt.Color(204, 255, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jButton111.setBackground(new java.awt.Color(230, 230, 230));
        jButton111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Folders/Folder Blue Documents.png"))); // NOI18N
        jButton111.setMnemonic('O');
        jButton111.setText("Post Receipt data");
        jButton111.setToolTipText("Click here enter data");
        jButton111.setEnabled(false);
        jButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jButton111, gridBagConstraints);

        jButton1112.setBackground(new java.awt.Color(230, 230, 230));
        jButton1112.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Devices & Hardware/Printer 2.png"))); // NOI18N
        jButton1112.setMnemonic('O');
        jButton1112.setText("Print Receipt");
        jButton1112.setToolTipText("Click here enter data");
        jButton1112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jButton1112, gridBagConstraints);

        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Devices & Hardware/Printer 3.png"))); // NOI18N
        jButton22.setMnemonic('p');
        jButton22.setText("Re-Print Receipt");
        jButton22.setToolTipText("Click here to edit data");
        jButton22.setEnabled(false);
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jButton22, gridBagConstraints);

        jButton611.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Folders/Folder Blue Downloads.png"))); // NOI18N
        jButton611.setMnemonic('r');
        jButton611.setText("Remove Row");
        jButton611.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton611ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jButton611, gridBagConstraints);

        jButton311.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Devices & Hardware/Hard Drive Mac 2.png"))); // NOI18N
        jButton311.setMnemonic('l');
        jButton311.setText("Clear data");
        jButton311.setToolTipText("Click here to clear textfields");
        jButton311.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton311ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jButton311, gridBagConstraints);

        jButton411.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Devices & Hardware/Computer 1.png"))); // NOI18N
        jButton411.setMnemonic('C');
        jButton411.setText("Close POS");
        jButton411.setToolTipText("Click here to close window");
        jButton411.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton411ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jButton411, gridBagConstraints);

        jButton511.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Document.png"))); // NOI18N
        jButton511.setMnemonic('h');
        jButton511.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jButton511, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3000.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel111.add(jPanel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 30.0;
        jPanel71.add(jPanel111, gridBagConstraints);

        jPanel51.setBackground(new java.awt.Color(204, 255, 255));
        jPanel51.setBorder(javax.swing.BorderFactory.createTitledBorder("Shift Session Identity"));
        jPanel51.setLayout(new java.awt.GridBagLayout());

        jLabel121.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel51.add(jLabel121, gridBagConstraints);

        jComboBox41.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT initcap(payment_mode) as payment_mode from pb_paymentmodes order by payment_mode"));
        jComboBox41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox41ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel51.add(jComboBox41, gridBagConstraints);

        jLabel132.setText("Gl Acc. No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel51.add(jLabel132, gridBagConstraints);

        jTextField82.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel51.add(jTextField82, gridBagConstraints);

        datePicker1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel51.add(datePicker1, gridBagConstraints);

        jLabel8.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel51.add(jLabel8, gridBagConstraints);

        jLabel101.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel51.add(jLabel101, gridBagConstraints);

        cashPointTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.5;
        gridBagConstraints.weighty = 1.0;
        jPanel51.add(cashPointTxt, gridBagConstraints);

        jLabel1311.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel51.add(jLabel1311, gridBagConstraints);

        jTextField811.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel51.add(jTextField811, gridBagConstraints);

        payerMobileTelephoneNumberTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bill Payer Telephone No.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 51)));
        payerMobileTelephoneNumberTxt.setForeground(new java.awt.Color(0, 0, 255));
        try {
            payerMobileTelephoneNumberTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("254-7##-######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        payerMobileTelephoneNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerMobileTelephoneNumberTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel51.add(payerMobileTelephoneNumberTxt, gridBagConstraints);

        payBillNumberTxt.setEditable(false);
        payBillNumberTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        payBillNumberTxt.setText(com.afrisoftech.lib.CashShiftNumberFactory.getPayBillNumber(connectDB)
        );
        payBillNumberTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PayBill Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 51)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel51.add(payBillNumberTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel71.add(jPanel51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jPanel71, gridBagConstraints);

        jTabbedPane1.addTab("CAFETERIA - WALK-IN and CREDIT SALES form", jPanel8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);
        jTabbedPane1.getAccessibleContext().setAccessibleName("CAFETERIA - Walk-IN and Credit Sales form ");

        setBounds(0, 0, 932, 597);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        if (check4Exemptions) {
            if (exemptionNumberTxt.getText().toCharArray().length > 0) {
                if (jCheckBox6.isSelected()) {
                    jTextField121.setText("0.00");
                    jTextField121.setEditable(false);
                    jTextField1211.setEditable(false);
                } else {
                    jTextField121.setEditable(true);
                    jTextField1211.setEditable(true);
                    jTextField121.setText(jTextField311.getText());
                }
            } else {
                if (jTextField1.getText().startsWith("Cash") || jTextField1.getText().startsWith("Staff")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You MUST provide a reference number for the Exemption!\n"
                            + "Type the Exemption Reference Number and select this checkbox again.", "Exemption Number!", javax.swing.JOptionPane.ERROR_MESSAGE);

                    jCheckBox6.setSelected(false);
                } else {
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jTextField91FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField91FocusGained
        // Add your handling code here:
    }//GEN-LAST:event_jTextField91FocusGained

    private void jTextField91CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField91CaretUpdate
        // Add your handling code here:
    }//GEN-LAST:event_jTextField91CaretUpdate

    private void jTextField1211CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1211CaretUpdate
        //if (check4Exemptions) {
        if (exemptionNumberTxt.getText().toCharArray().length > 0) {
            if (jTextField1211.getCaretPosition() >= 1) {
                double total = java.lang.Double.parseDouble(jTextField311.getText());
                double paid = java.lang.Double.parseDouble(jTextField121.getText());
                double waiver = java.lang.Double.parseDouble(jTextField1211.getText());
                if (total >= waiver) {
                    jTextField12.setText(java.lang.String.valueOf(total - waiver));
                    jTextField121.setText(java.lang.String.valueOf(total - waiver));
                } else {
                    if (waiver > total) {
                        javax.swing.JOptionPane.showMessageDialog(this, "Waiver Cannot be more than Total Bill !", "Caution message", javax.swing.JOptionPane.ERROR_MESSAGE);
                        waiver = 0.00;
                    }
                }
            }

        } else {
            if (jTextField1.getText().startsWith("Cash") || jTextField1.getText().startsWith("Staff") && java.lang.Double.parseDouble(jTextField1211.getText()) > 0) {
                //javax.swing.JOptionPane.showMessageDialog(this, "You MUST provide a reference number for the Waiver!\n"
                //        + "Type the Waiver Reference Number and select this checkbox again.", "Waiver Number!", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else {

                if (jTextField1211.getCaretPosition() >= 1) {
                    double total = java.lang.Double.parseDouble(jTextField311.getText());
                    double paid = java.lang.Double.parseDouble(jTextField121.getText());
                    double waiver = java.lang.Double.parseDouble(jTextField1211.getText());
                    if (total >= waiver) {
                        jTextField12.setText(java.lang.String.valueOf(total - waiver));
                        jTextField121.setText(java.lang.String.valueOf(total - waiver));
                    } else {
                        if (waiver > total) {
                            javax.swing.JOptionPane.showMessageDialog(this, "Waiver Cannot be more than Total Bill !", "Caution message", javax.swing.JOptionPane.ERROR_MESSAGE);
                            waiver = 0.00;
                        }
                    }
                }
            }
        }
        //}
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1211CaretUpdate

    private void jTextField121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField121CaretUpdate
        if (jTextField121.getCaretPosition() >= 1) {
            double total = java.lang.Double.parseDouble(jTextField311.getText());
            double waiver = java.lang.Double.parseDouble(jTextField1211.getText());

            jTextField12.setText(java.lang.String.valueOf(total - waiver));
            double paid = java.lang.Double.parseDouble(jTextField121.getText());
            double diff = java.lang.Double.parseDouble(jTextField12.getText());
            if (paid >= diff) {
                jTextField131.setText(java.lang.String.valueOf(paid - diff));
            }

        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField121CaretUpdate

    private void jButton1112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1112ActionPerformed

        jTextField1113.setText(null);
        System.out.println("Printing the receipt.");
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT count(status) FROM ac_shifts WHERE status ilike 'running' AND user_name = current_user");
            java.sql.ResultSet rset = pstmt.executeQuery();
            int i = 0;
            while (rset.next()) {
                i = rset.getInt(1);
            }
            if (i < 1) {
                com.afrisoftech.hospital.HospitalMain.saccopn.remove(this);
                //  thisgetParent().remove(this);
                javax.swing.JOptionPane.showMessageDialog(this, "You MUST open a new shift in order to continue.\n Please close Front End Operations and open afresh.");
            } else {
                java.util.Calendar calendar = java.util.Calendar.getInstance();

                long dateNow = calendar.getTimeInMillis();

                java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                System.out.println(datenowSql1.toString());

                java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                System.out.println(datenowSql.toString());
                int k = 1;
                String receiptNo1 = null;

                jButton111ActionPerformed(evt);

                System.out.println("PROCESSRECEIPT BOOLEAN [" + processReceipt + "]");

                if (processReceipt) {


                    try {


//try {
                        connectDB.setAutoCommit(false);
                        /*
                         * while (k != 0) { receiptNo2 =
                         * jTextField1113.getText(); System.out.println("Integer
                         * K = ["+k+"]"); if (receiptNo2.toCharArray().length >
                         * 0) { k = 0; }
                         *
                         * }
                         */
                        System.out.println("This is the receipt no " + receiptNo2);

                        //receiptNo1 = jTextField1113.getText();
                        if (jTextField1113.getText().toCharArray().length > 0) {
                            String receiptNo = jTextField1.getText();
                            String rct = null;
                            java.sql.Statement ps112 = connectDB.createStatement();
                            java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
                            while (rst112.next()) {
                                rct = rst112.getObject(1).toString();
                            }
                            if (rct.equalsIgnoreCase("Pdf")) {
                                //   com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
                                //   policy.ReceiptsPdf(connectDB, receiptNo2);
                            } else {
                                if (jComboBox41.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                                    com.afrisoftech.txtreports.GokReceiptsTxt policy = new com.afrisoftech.txtreports.GokReceiptsTxt(connectDB, jTextField91.getText(), jTextField311.getText(), receiptNo2, this.jComboBox41.getSelectedItem().toString(), jTextField121.getText(), jTextField131.getText(), jTextField811.getText(), "-");
                                } else {
                                    com.afrisoftech.txtreports.GokCafteriaInvoiceTxt policy = new com.afrisoftech.txtreports.GokCafteriaInvoiceTxt(connectDB, jTextField91.getText(), jTextField311.getText(), receiptNo2, this.jComboBox41.getSelectedItem().toString(), jTextField121.getText(), jTextField131.getText(), jTextField811.getText());
                                }
                            }
                            // jTextField1211.setText("0.00");
                            jTextField12.setText("0.00");
                            jTextField121.setText("0.00");
                            jTextField131.setText("0.00");
                            jTextField311.setText("0.00");
                            jTextField91.setText(null);
                            jTextField1112.setText(null);
                            exemptionNumberTxt.setText(null);
                            jCheckBox6.setSelected(false);
                            for (int m = 0; m < jTable111.getRowCount(); m++) {
                                for (int j = 0; j < jTable111.getColumnCount(); j++) {
                                    jTable111.setValueAt(null, m, j);
                                }
                            }
                            jTextField12.setText("0.00");
                        } else {
                            javax.swing.JOptionPane.showMessageDialog(this, "Please fill in all the details including the patient name.");
                        }

                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage());
                        try {

                            connectDB.rollback();
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }
                }

                ////}
                rset.close();
                pstmt.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "ERROR: Can't close the cash collection form : Details : " + ex.getMessage());
            //Logger.getLogger(GovBillPaymentsIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Add your handling code here:

        // Add your handling code here:
    }//GEN-LAST:event_jButton1112ActionPerformed
    private void searchButton111Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog2.dispose();
        java.awt.Point point = this.jTextField3111.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);
        jSearchDialog2.setVisible(true);


    }
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jTextField1112.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());

        for (int s = 0; s < jTable111.getRowCount(); s++) {
            for (int r = 0; r < jTable111.getColumnCount(); r++) {
                jTable111.getModel().setValueAt(null, s, r);
            }

        }

        try {

            java.sql.Statement stx1 = connectDB.createStatement();
            java.sql.ResultSet rsx1 = stx1.executeQuery("SELECT DISTINCT payment FROM hp_patient_visit WHERE patient_no ILIKE '" + jTextField1112.getText() + "'");
            while (rsx1.next()) {
                jTextField1.setText(rsx1.getString(1));
            }

            stx1.close();
            rsx1.close();

        } catch (java.sql.SQLException sq) {
        }

        this.populateTable(this.jTextField1112.getText());
        jSearchDialog21.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton212Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton212Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();

        jSearchDialog21.setSize(700, 200);

        jSearchDialog21.setLocation(point);

        jSearchDialog21.setVisible(true);
    }
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        this.jSearchDialog21.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed

    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate

        if (this.jCheckBox1.isSelected()) {
            if (jTextField1131.getCaretPosition() < 3) {

                System.out.println("Nothing");
            } else {

                jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_no ILIKE '" + jTextField1131.getText().toString() + "%' and sheme_name ilike '%mtrh staff%' ORDER BY staff_name"));

                jSearchTable21.setShowHorizontalLines(false);

                jSearchScrollPane21.setViewportView(jSearchTable21);

            }

        } else {

            if (jTextField1131.getCaretPosition() < 3) {

                System.out.println("Nothing");
            } else {
                // try {
                jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_name ILIKE '" + jTextField1131.getText().toString() + "%' and sheme_name ilike '%mtrh staff%' ORDER BY staff_name"));


                jSearchTable21.setShowHorizontalLines(false);
                jSearchScrollPane21.setViewportView(jSearchTable21);


            }

        }      // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate

    public class ComboTextField extends javax.swing.JTextField implements javax.swing.ComboBoxEditor {

        public ComboTextField() {

            initComponents();



        }

        void initComponents() {

            // oldComboBox1311Model = jComboBox1311.getModel();

            // comboTextField = new javax.swing.JTextField();


            comboTextField.addKeyListener(new java.awt.event.KeyAdapter() {

                public void keyTyped(java.awt.event.KeyEvent e) {

                    if (e.getID() == java.awt.event.KeyEvent.VK_BACK_SPACE) {

                        changeComboBoxModel(comboTextField.getText());

                        System.out.println(comboTextField.getText() + " Pressed Key " + e.getKeyText(e.getKeyCode()));
                    }
                }
            });

        }

        public java.awt.Component getEditorComponent() {

            return comboTextField;

        }

        public Object getItem() {

            return comboTextField.getText();

        }

        public void setItem(Object obj) {
            //    comboTextField.setText(jComboBox1311.getSelectedItem().toString());
        }

        public void changeComboBoxModel(java.lang.String typedLetters) {



            javax.swing.DefaultComboBoxModel newComboBox1311Model = new javax.swing.DefaultComboBoxModel();

            System.out.println("ComboBox Item No. " + oldComboBox1311Model.getSize());



            for (int i = 0; i < oldComboBox1311Model.getSize(); i++) {


                if (oldComboBox1311Model.getElementAt(i).toString().startsWith(typedLetters)) {

                    newComboBox1311Model.addElement(oldComboBox1311Model.getElementAt(i));

                    //                    jComboBox1311.setModel(newComboBox1311Model);

                }

            }

        }
        //      }
    }
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0), jTable111.getSelectedRow(), 0);
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1), jTable111.getSelectedRow(), 2);
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2), jTable111.getSelectedRow(), 4);
        jTable111.setValueAt(1, jTable111.getSelectedRow(), 1);

        jTable111.setValueAt(false, jTable111.getSelectedRow(), 5);

        jSearchDialog1.dispose();

        float qty = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
        float price = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
        float total = qty * price;
        jTable111.setValueAt(total, jTable111.getSelectedRow(), 3);
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable111, 3);
        jTextField311.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        jTextField311.setText(java.lang.String.valueOf(totalSum));
        double totals = java.lang.Double.parseDouble(jTextField311.getText());
        ///   double paid = java.lang.Double.parseDouble(jTextField121.getText());
        double waiver = java.lang.Double.parseDouble(jTextField1211.getText());
        jTextField12.setText(java.lang.String.valueOf(totals - waiver));
        jTextField121.setText(java.lang.String.valueOf(totals - waiver));

        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void cmbox221MouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane211.getLocationOnScreen();
        jSearchDialog1.setSize(700, 200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);


    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.jSearchDialog1.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate

        /*
         * if (jTable3.isEditing()) { jTable3.getCellEditor().stopCellEditing();
         * }
         */

        searchButton2122Clicked();
        // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    private void searchButton2122Clicked() {

        if (this.jCheckBox4.isSelected()) {

            if (jTextField112.getCaretPosition() < 1) {

                System.out.println("Nothing");
            } else {
                // try {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct service_type,rate::numeric,gl_account,code,main_service FROM pb_operating_parameters WHERE code ILIKE '%" + jTextField112.getText() + "%' and gl_account = '" + jTextField7.getText() + "'"));// UNION ALL select distinct product,selling_price,gl_code,product_id,department FROM st_stock_prices WHERE product_id ILIKE '" + jTextField112.getText() + "%' and gl_code = '" + jTextField7.getText() + "' ORDER BY 1 LIMIT 30"));

                /*
                 * {
                 * boolean[] canEdit = new boolean[]{ false, false, false,
                 * false, false };
                 *
                 *
                 * boolean isCellEditable(int rowIndex, int columnIndex) {
                 * return canEdit [columnIndex]; } });
                 */
                jSearchScrollPane1.setViewportView(jSearchTable1);
                System.out.println("Cannot sort out");

            }

        } else {
            if (jTextField112.getCaretPosition() < 3) {

                System.out.println("Nothing");
            } else {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,rate::numeric,gl_account,code,main_service FROM pb_operating_parameters WHERE service_type ILIKE '%" + jTextField112.getText() + "%'  and gl_account = '" + jTextField7.getText() + "'"));// UNION ALL select product,selling_price,gl_code,product_id,department  FROM st_stock_prices WHERE product ILIKE '%" + jTextField112.getText() + "%'  order by service_type  LIMIT 30"));

                jSearchScrollPane1.setViewportView(jSearchTable1);
                System.out.println("Cannot sort out");

            }

        }
        int i = jSearchTable1.getRowCount();
        int k = jSearchTable1.getColumnCount();

        jSearchTable1.editCellAt(-1, -1);
        /*
         * if (jSearchTable1.isCellEditable(i, k)) {
         * jSearchTable1.getCellEditor().stopCellEditing(); }
         */

        //jSearchTable1.setEnabled(false);
    }

    private void populateTable(java.lang.String patient_no) {
        int j = 0;
        int i = 0;

        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();

            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_no) FROM patient_bill WHERE patient_no = '" + patient_no + "'");

            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }

            if (j > 0) {
                double waivexe = 0;
                java.sql.Statement stmtTable1c = connectDB.createStatement();

                java.sql.ResultSet rsetTable1c = stmtTable1c.executeQuery("SELECT DISTINCT visit_id,revenue_code,trans_date,sum(amount)*-1 FROM hp_patient_billing WHERE patient_no = '" + patient_no + "' AND amount < 0 and (revenue_code ILIKE 'exe%' OR revenue_code ILIKE 'wai%') GROUP BY visit_id,revenue_code,trans_date ORDER BY trans_date DESC LIMIT 1");

                while (rsetTable1c.next()) {
                    this.exemptionNumberTxt.setText(rsetTable1c.getString(1));
                    if (rsetTable1c.getString(2).startsWith("EXE")) {
                        jCheckBox6.setSelected(true);
                        jRadioButton1.setSelected(true);
                    } else {
                        jTextField1211.setText(rsetTable1c.getString(4));
                        jRadioButton1.setSelected(true);
                    }
                    waivexe = rsetTable1c.getDouble(4);
                }
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,price,amount,gl_code,true  FROM patient_bill WHERE patient_no = '" + patient_no + "'");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable111.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable111.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable111.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable111.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable111.setValueAt(rsetTable1.getObject(5), i, 4);
                    jTable111.setValueAt(true, i, 5);

                    i++;

                }


                java.sql.Statement stmtTable111 = connectDB.createStatement();

                java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(amount)+'" + waivexe + "' FROM patient_bill WHERE patient_no = '" + patient_no + "'");//AND paid = false UNION SELECT sum(amount) FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");

                while (rsetTable111.next()) {
                    jTextField311.setText(rsetTable111.getObject(1).toString());
                }
                rsetTable111.close();
                stmtTable111.close();
                rsetTable1.close();
                stmtTable1.close();
                rsetTable1c.close();
                stmtTable1c.close();

            }
            rsetTable11.close();
            stmtTable11.close();

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

    }
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed

        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());


        try {
            connectDB.setAutoCommit(false);

            /*
             * java.sql.Statement ps1 = connectDB.createStatement();
             * java.sql.ResultSet rst1 = ps1.executeQuery("select
             * currval('receipt_no_seq')"); while (rst1.next()){
             */
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("");

            receiptNo1 = jTextField1113.getText();
            // }
            //            CashReceiptsPdf policy = new CashReceiptsPdf();
            //            policy.CashReceiptsPdf(connectDB, jTextField91.getText().toUpperCase(),jTextField311.getText(),receiptNo1,this.jComboBox41.getSelectedItem().toString(),jTextField121.getText(),jTextField131.getText());

            String clientReceipt = null;

            java.sql.PreparedStatement pstmtReprint = connectDB.prepareStatement("SELECT dealer FROM ac_cash_collection WHERE receipt_no = ?");

            pstmtReprint.setString(1, jTextField1113.getText());
            java.sql.ResultSet rsetReprint = pstmtReprint.executeQuery();


            while (rsetReprint.next()) {
                clientReceipt = rsetReprint.getString(1);
            }
            //String receiptNo = jTextField1.getText();
            String rct = null;
            java.sql.Statement ps112 = connectDB.createStatement();
            java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
            while (rst112.next()) {
                rct = rst112.getObject(1).toString();
            }
            if (rct.equalsIgnoreCase("Pdf")) {
                com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
                policy.ReceiptsPdf(connectDB, receiptNo1);
            } else {
                com.afrisoftech.txtreports.GokReceiptsRTxt policy = new com.afrisoftech.txtreports.GokReceiptsRTxt(connectDB, clientReceipt, jTextField311.getText(), receiptNo1, this.jComboBox41.getSelectedItem().toString(), jTextField121.getText(), jTextField131.getText(), jTextField811.getText());

            }
            rsetReprint.close();
            pstmtReprint.close();

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }          // Add your handling code here:
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable111MouseClicked

        if (jTable111.getSelectedColumn() == 0) {

            this.cmbox221MouseClicked();
        }

        //jButton111.setEnabled(true);
        jButton1112.setEnabled(true);
        jButton22.setEnabled(false);
        jTextField112.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jTable111MouseClicked

    private void jTable111ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable111ComponentShown
        // Add your handling code here:
    }//GEN-LAST:event_jTable111ComponentShown

    private void jButton611ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton611ActionPerformed

        int rows2Delete = jTable111.getSelectedRowCount();

        int[] selectedRows = jTable111.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i
                        < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable111.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable111.getModel();

                defTableModel.removeRow(jTable111.getSelectedRow());
            }

        }

        //float qty = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
        // float price = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
        //float total = qty * price;
        // jTable111.setValueAt(total, jTable111.getSelectedRow(), 3);
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable111, 3);
        jTextField311.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        jTextField311.setText(java.lang.String.valueOf(totalSum));
        double totals = java.lang.Double.parseDouble(jTextField311.getText());
        ///   double paid = java.lang.Double.parseDouble(jTextField121.getText());
        double waiver = java.lang.Double.parseDouble(jTextField1211.getText());
        jTextField12.setText(java.lang.String.valueOf(totals - waiver));
        jTextField121.setText(java.lang.String.valueOf(totals - waiver));

        // Add your handling code here:
    }//GEN-LAST:event_jButton611ActionPerformed

    private void jButton311ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton311ActionPerformed

        jCheckBox6.setSelected(false);
        jTextField91.setText("");
        for (int k = 0; k
                < jTable111.getRowCount(); k++) {
            for (int r = 0; r
                    < jTable111.getColumnCount(); r++) {
                jTable111.getModel().setValueAt(null, k, r);
            }

        }
        jTextField311.setText("0.00");
        ///       jTextField1211.setText("0.00");
        jTextField121.setText("0.00");
        //       jTextField12.setText("0.00");
        jTextField131.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton311ActionPerformed

    private void jButton411ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton411ActionPerformed
        this.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton411ActionPerformed

    private void jTable111KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable111KeyReleased
        if (jTable111.getModel().getValueAt(jTable111.getSelectedRow(), 1) != null) {
            if (jTable111.getSelectedColumn() == jTable111.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 1).toString());
                float price = java.lang.Float.parseFloat(jTable111.getValueAt(jTable111.getSelectedRow(), 2).toString());
                float total = qty * price;
                jTable111.setValueAt(total, jTable111.getSelectedRow(), 3);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable111, 3);
                jTextField311.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                jTextField311.setText(java.lang.String.valueOf(totalSum));
                jTextField121.setText(java.lang.String.valueOf(totalSum));
            }

        }



        /*
         * double resFloat = 0.00; // double totalSum = 0.00; double floatTotal
         * = java.lang.Double.parseDouble(jTextField311.getText());
         *
         * if (jTable111.getValueAt(jTable111.getSelectedRow(),
         * jTable111.getSelectedColumn()) != null) {
         *
         *
         * double floatCol2 =
         * java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(),
         * 1).toString());
         *
         * double floatCol3 =
         * java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(),
         * 2).toString());
         *
         * double resVal = floatCol2 * floatCol3;
         *
         *
         * jTable111.setValueAt(new java.lang.Float(resVal),
         * jTable111.getSelectedRow(), 3);
         *
         * // System.out.println("Value at cell 3 is : "+
         * jTable11.getValueAt(jTable11.getSelectedRow(),3)); // }
         *
         * for (int i = 0; i < jTable111.getRowCount(); i++) {
         *
         * if (jTable111.getModel().getValueAt(i, 0) != null)
         * {//toString().compareToIgnoreCase(null) {
         *
         * resFloat = resFloat + Double.parseDouble(jTable111.getValueAt(i,
         * 3).toString());
         *
         *
         * // totalSum = floatTotal + resFloat;
         *
         * }
         * }
         *
         * this.tableModelTableChanged1(); }
         * //jTextField31.setText(java.lang.String.valueOf(resFloat)); //}
         *
         *
         * /*
         * double resFloat = 0.00; double floatTotal =
         * java.lang.Double.parseDouble(jTextField311.getText());
         *
         * for (int i = 0; i < jTable111.getRowCount(); i++) {
         *
         * if (jTable111.getModel().getValueAt(jTable111.getSelectedRow(), 0) !=
         * null) {
         *
         * if (jTable111.getSelectedColumn() == 1) {
         *
         * double floatCol2 =
         * java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(),
         * 1).toString());
         *
         * double floatCol3 =
         * java.lang.Double.parseDouble(jTable111.getValueAt(jTable111.getSelectedRow(),
         * 2).toString());
         *
         * double resVal = floatCol2 * floatCol3; jTable111.setValueAt(new
         * java.lang.Float(resVal), jTable111.getSelectedRow(), 3); resFloat =
         * resFloat + Double.parseDouble(jTable111.getModel().getValueAt(i,
         * 3).toString());
         *
         * }
         * }
         * jTextField311.setText(java.lang.String.valueOf(resFloat)); }
         */

        // Add your handling code here:
    }//GEN-LAST:event_jTable111KeyReleased
    private void cmbox21ActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox21.getSelectedItem();
        int i = jTable111.getSelectedRow();

        if (selectedGuaran != null) {

            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate::numeric as rate,gl_account from pb_operating_parameters where service_type = '" + selectedGuaran + "' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '" + selectedGuaran + "'");
                while (rs.next()) {
                    jTable111.setValueAt(rs.getObject(1), i, 2);
                    jTable111.setValueAt(rs.getObject(2), i, 4);
                }
                rs.close();
                pstmt.close();

            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }

        }

    }
    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed

        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT count(status) FROM ac_shifts WHERE status ilike 'running' AND user_name = current_user");
            java.sql.ResultSet rset = pstmt.executeQuery();
            int i = 0;
            while (rset.next()) {
                i = rset.getInt(1);
            }
            if (i < 1) {
                com.afrisoftech.hospital.HospitalMain.saccopn.remove(this);
                //  thisgetParent().remove(this);
                javax.swing.JOptionPane.showMessageDialog(this, "You MUST open a new shift in order to continue.\n Please close Front End Operations and open afresh.");
            } else {

                this.saveData();
                //      dispatchThread = new DispatchThread();

                //     dispatchThread.start();

                if (processReceipt) {
                    jButton111.setEnabled(false);

                    jButton1112.setEnabled(false);
                }
            }
            rset.close();
            pstmt.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "ERROR: Can't close the cash collection form : Details : " + ex.getMessage());
            //Logger.getLogger(GovBillPaymentsIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Add your handling code here:
    }//GEN-LAST:event_jButton111ActionPerformed

    private void jComboBox111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox111ActionPerformed
        jButton111.setEnabled(false);
        jButton1112.setEnabled(true);
        jButton22.setEnabled(false);

        try {
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select code,sub_code from pb_activity WHERE activity ilike '" + jComboBox111.getSelectedItem() + "'");
            while (rst11.next()) {

                jTextField7.setText(rst11.getString(1));
                //jTextField22.setText(rst11.getString(2));

            }
            ps11.close();
            ps11.close();
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }


        // Add your handling code here:
    }//GEN-LAST:event_jComboBox111ActionPerformed

    private void jComboBox41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox41ActionPerformed
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select code from pb_activity where activity_category   ILIKE 'RC'");
            while (rset1.next()) {
                jTextField82.setText(rset1.getObject(1).toString());
            }

            stmt1.close();
            rset1.close();
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();

        }

        if (jComboBox41.getSelectedItem().equals("Credit Card")) {
            // jDialog3.setVisible(true);
            // int resOptt =  javax.swing.JOptionPane.showOptionDialog(this, "Select Account Type", "Select Account Type Here", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Credit Card", "Scheme", "Cancel"}, "");


            //  if (resOptt == javax.swing.JOptionPane.YES_OPTION) {
            jPanel32.setVisible(false);
            // jPanel41.setVisible(true);
            jPanel311.setVisible(true);
            jTextField42.setText("");
            jTextField51.setText("");
            jTextField22.setText("");
        } else {
            if (jComboBox41.getSelectedItem().equals("Cheque")) {
                //                jPanel41.setVisible(false);
                jPanel311.setVisible(false);
                jPanel32.setVisible(true);
                jTextField212.setText("");
                jTextField521.setText("");
                jTextField411.setText("");
            } else {

                jPanel311.setVisible(false);
                jPanel32.setVisible(false);
                jTextField212.setText("");
                jTextField521.setText("");
                jTextField411.setText("");
                jTextField42.setText("");
                jTextField51.setText("");
                jTextField22.setText("");
            }

        }

        jButton111.setEnabled(false);
        jButton1112.setEnabled(true);
        jButton22.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox41ActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden

        System.setProperty("billpmnt", "closed");

        System.out.println("Form closed");

        System.out.println(System.getProperty("billpmnt"));// Add your handling code here:
    }//GEN-LAST:event_formComponentHidden

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed

        System.setProperty("billpmnt", "closed");

        System.out.println("Form closed");
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        jComboBox41.setSelectedItem("Cash");
        jTextField91.setEditable(true);
        jTextField91.setText("Cash");
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jComboBox41.setSelectedItem("Scheme");

        jTextField91.setEditable(false);
        jTextField91.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jComboBox41.setSelectedItem("Scheme");
        jTextField91.setEditable(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jSearchTable21MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseEntered

    private void jSearchTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearchTable1KeyReleased
        // for (int i = 0; i  < jTable111.getRowCount(); i++) {

        if (jSearchTable1.editCellAt(jSearchTable1.getSelectedRow(), jSearchTable1.getSelectedColumn())) {
            javax.swing.JOptionPane.showMessageDialog(this, "Be warned  you cannot alter date".toUpperCase(), "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);
            for (int k = 0; k < jSearchTable1.getRowCount(); k++) {
                for (int r = 0; r < jSearchTable1.getColumnCount(); r++) {
                    jSearchTable1.setValueAt(null, k, r);
                }
            }
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable1KeyReleased

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        //     jComboBox1311.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0));
        //      jTextField111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        //     jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jTextField113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField113ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113ActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSearchScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchScrollPaneMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jSearchScrollPaneMouseClicked

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        //      jT.setSelectedItem(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0));
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate

    private void payerMobileTelephoneNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerMobileTelephoneNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payerMobileTelephoneNumberTxtActionPerformed

    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;



        for (int i = 0; i < jTable111.getRowCount(); i++) {

            if (jTable111.getModel().getValueAt(i, 0) != null) {

                if (jTable111.getSelectedColumn() == 1) {

                    resFloat = resFloat + Double.parseDouble(jTable111.getModel().getValueAt(i, 3).toString());

                    jTextField311.setText(java.lang.String.valueOf(resFloat));
                } else {
                    resFloat = resFloat + Double.parseDouble(jTable111.getModel().getValueAt(i, 3).toString());
                }

                jTextField311.setText(java.lang.String.valueOf(resFloat));
            }

        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {

        //        double resFloat = 0.00;
        double resFloat = 0.00;


        for (int i = 0; i
                < jTable111.getRowCount(); i++) {

            if (jTable111.getModel().getValueAt(i, 0) != null) {

                if (jTable111.getSelectedColumn() == 1) {

                    resFloat = resFloat + Double.parseDouble(jTable111.getModel().getValueAt(i, 3).toString());

                    jTextField311.setText(java.lang.String.valueOf(resFloat));
                } else {
                    resFloat = resFloat + Double.parseDouble(jTable111.getModel().getValueAt(i, 3).toString());
                }

                jTextField311.setText(java.lang.String.valueOf(resFloat));

            }

        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public java.lang.String getCashPoint() {
        String cashPoint = null;
        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()) {
                cashPoint = rsetf.getObject(1).toString();
            }
           
            rsetf.close();
           
            stmtf.close();
            
        } catch (java.sql.SQLException sqe) {
           
            sqe.printStackTrace();
           
            System.out.println("select not successful");
            
        }


        return cashPoint;

    }

    public java.lang.String getShiftNumber() {
        
        String shiftNo = null;
       
        try {

            java.sql.Statement stmt = connectDB.createStatement();

             java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+getCashPoint()+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
 
            while (rset.next()) {

                shiftNo = rset.getString(1);

            }
           
            rset.close();
           
            stmt.close();

        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        return shiftNo;

    }

    private class DispatchThread extends java.lang.Thread {

        public synchronized void run() {
            saveData();
            ////  processReceipt = true;
        }
    }

    private void saveData() {

        if ((jCheckBox6.isSelected() || Double.parseDouble(jTextField1211.getText()) > 0.00) && exemptionNumberTxt.getText().toCharArray().length < 1) {

            //System.out.println("Can't process receipt...");
            // processReceipt = false;
            javax.swing.JOptionPane.showMessageDialog(this, "You MUST provide Exemption/Waiver number.\n Please type the reference number for the Exemption/Waiver\n on the [Exemption/Waiver Number] field on the POS form.", "WARNING: EXEMPTION/WAIVER NUMBER!", javax.swing.JOptionPane.WARNING_MESSAGE);
        } else {

            processReceipt = true;

            ///  System.
            if (jTextField91.getText().equalsIgnoreCase("")) {
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot save without the name", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } else {
                if (jTextField811.getText().equalsIgnoreCase("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save without the shift No \n enquire if you are created as a shift operator", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    jTextField1113.setText("");

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println("RECEIPT DATE : [" + datenowSql1.toString() + "]");

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());
                    String desc = null;
                    String billNo = null;
                    String transNo = null;
                    String payMode = null;
                    String patientAcc = null;
                    String cardNo = null;
                    String AccDesc = null;
                    String scheme = null;
                    String cardName = null;
                    String isurer = null;
                    String expDate = null;
                    String staffNo = null;
                    String glAcc = null;
                    String receiptNo1 = null;
                    String actCode1 = null;
                    String glCode1 = null;
                    String bankAcc1 = null;
                    String transNo1 = null;
                    String actNames1 = null;
                    String patCat1 = null;
                    String patientAcc1 = null;
                    String user = null;
                    String glAcc1 = null;
                    String accDesc1 = null;
                    String name = null;
                    String mdepartment = null;
                    java.sql.Date dates = null;
                    receiptNo2 = null;
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint =
                                connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    try {
                        java.sql.Statement stm1211 = connectDB.createStatement();
                        //    java.sql.Statement ps1 = connectDB.createStatement();
                        java.sql.Statement pss = connectDB.createStatement();
                        //   java.sql.Statement stm122 = connectDB.createStatement();
                        java.sql.Statement pss1 = connectDB.createStatement();
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = null;

                        java.sql.Statement stm121w = connectDB.createStatement();
                        java.sql.Statement stm121r = connectDB.createStatement();
                        java.sql.Statement ps1q = connectDB.createStatement();
                        java.sql.PreparedStatement pstmt112F = null;
                        java.sql.PreparedStatement pstmt112 = null;
                        java.sql.ResultSet rst1q = null;
                        java.sql.PreparedStatement psr = null;
                        java.sql.PreparedStatement pstmt25 = null;
                        java.sql.PreparedStatement pstmt212 = null;
                        java.sql.ResultSet rse121w = null;
                        java.sql.ResultSet rse121r = null;
                        java.sql.PreparedStatement pstmt41d = null;
                        java.sql.PreparedStatement pstmt41 = null;
                        java.sql.PreparedStatement pstmt411 = null;
                        java.sql.PreparedStatement pstmt25e = null;
                        java.sql.Statement ps = connectDB.createStatement();
                        java.sql.ResultSet rst = null;
                        java.sql.Statement stm12fx = connectDB.createStatement();
                        java.sql.ResultSet rse12fx = null;
                        java.sql.Statement stm12f = connectDB.createStatement();
                        java.sql.ResultSet rse12f = null;
                        java.sql.Statement stm12 = connectDB.createStatement();
                        java.sql.ResultSet rse12 = null;
                        java.sql.ResultSet rse1211 = null;
                        java.sql.ResultSet rsts = null;
                        java.sql.ResultSet rss = null;
                        double subTotal = 0.00;
                        rss = pss.executeQuery("select nextval('transaction_no_seq')");
                        while (rss.next()) {
                            transNo1 = rss.getObject(1).toString();
                            receiptNo1 = "O" + rss.getObject(1).toString();
                        }

//select current_timestamp
                        rse12fx = stm12fx.executeQuery("select cash_point,start_date::DATE from ac_shifts WHERE shift_no = '" + jTextField811.getText() + "'");
                        while (rse12fx.next()) {
                            cashPointTxt.setText(rse12fx.getString(1));
                            dates = rse12fx.getDate(2);
                        }

                        rse12f = stm12f.executeQuery("select now()");
                        while (rse12f.next()) {
                            datenowSql = rse12f.getTimestamp(1);
                        }

                        rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
                        while (rse12.next()) {

                            patientAcc = rse12.getObject(1).toString();
                            AccDesc = rse12.getObject(2).toString();
                            user = rse12.getObject(3).toString();
                        }


                        rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                        while (rse1211.next()) {
                            rname = rse1211.getObject(1).toString();
                            rcode = rse1211.getObject(2).toString();
                        }


                        /*
                         * java.sql.ResultSet rst1 = ps1.executeQuery("select
                         * nextval('receipt_no_seq')"); while (rst1.next()){
                         * receiptNo1 = rst1.getObject(1).toString(); }
                         */
                        //receiptNo1 = datenowSql.toString();//com.afrisoftech.lib.DateLables.getDateLabel();
                  /*
                         * rss = pss.executeQuery("select
                         * nextval('transaction_no_seq')"); while (rss.next()) {
                         * transNo1 = rss.getObject(1).toString(); receiptNo1 =
                         * "O" + rss.getObject(1).toString(); }
                         */
                        rsts = pss1.executeQuery("select code,activity from pb_activity where activity ilike 'Staff Debtors'");
                        while (rsts.next()) {
                            actCode1 = rsts.getObject(1).toString();
                            actNames1 = rsts.getObject(2).toString();
                        }
                        if (jComboBox41.getSelectedItem().toString().equalsIgnoreCase("Scheme")) {
                            //  String invoiceNo = null;
                            java.sql.Statement pssCaf = connectDB.createStatement();
                            java.sql.ResultSet rss1 = pssCaf.executeQuery("select 'CAF'||(nextval('pinvoice_no_seq'))");
                            while (rss1.next()) {
                                invoiceNo = rss1.getObject(1).toString();
                            }
                        }

                        for (int i = 0; i < jTable111.getRowCount(); i++) {
                            if (jTable111.getModel().getValueAt(i, 0) != null) {
                                subTotal = java.lang.Double.valueOf(jTable111.getValueAt(i, 3).toString());

                                System.out.println("Bill No 2 " + billNo);

                                rse121 = stm121.executeQuery("select activity,code,department from pb_activity where code ='" + jTable111.getModel().getValueAt(i, 4).toString() + "'");
                                while (rse121.next()) {

                                    glAcc = rse121.getObject(1).toString();
                                    mdepartment = rse121.getObject(3).toString();
                                }

// Check if total for RECEIPT item is greater than 0.00, ignore if equal to 0.00
// Insert into database table ac_ledger debit = 0.00 and credit = sub total for the RECEIPT item                              

                                if (subTotal > 0) {


                                    System.out.println("Bill No 4" + billNo);
                                    pstmt212 = connectDB.prepareStatement("INSERT INTO ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt212.setObject(1, jTable111.getValueAt(i, 4).toString());
                                    pstmt212.setString(2, glAcc);
                                    pstmt212.setString(3, jTextField1112.getText());
                                    if (jTextField91.getText().equals("") || jTextField91.getText().equals(null)) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "CLIENT NAME MISSING !!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {
                                        pstmt212.setString(4, jTextField91.getText());
                                    }

                                    pstmt212.setString(5, "");
                                    pstmt212.setString(6, "");
                                    pstmt212.setString(7, "");
                                    pstmt212.setString(8, "OP");
                                    pstmt212.setString(9, jTextField51.getText());
                                    pstmt212.setString(10, jComboBox41.getSelectedItem().toString());
                                    pstmt212.setString(11, jTextField22.getText());
                                    pstmt212.setString(12, "");
                                    pstmt212.setString(13, "");
                                    pstmt212.setString(14, jTable111.getValueAt(i, 0).toString());
                                    pstmt212.setString(15, "Revenue");
                                    pstmt212.setDouble(16, 0.00);
                                    pstmt212.setDouble(17, java.lang.Double.valueOf(jTable111.getValueAt(i, 3).toString()));
                                    pstmt212.setDate(18, dates);//.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt212.setString(19, transNo1);
                                    pstmt212.setBoolean(20, false);
                                    pstmt212.setBoolean(21, false);
                                    pstmt212.setBoolean(22, false);
                                    pstmt212.setString(23, user);
                                    pstmt212.setString(24, cashPointTxt.getText());
                                    pstmt212.setString(25, jTextField811.getText());
                                    pstmt212.executeUpdate();
                                    pstmt212.close();

                                    if (jComboBox41.getSelectedItem().toString().startsWith("Cash")) {
// Insert ordinary RECEIPT data into database table ac_cash_collection -- debit = RECEIPT amount and credit = 0.00

                                        pstmt25 = connectDB.prepareStatement("INSERT INTO ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                        pstmt25.setObject(1, jTable111.getValueAt(i, 4).toString());
                                        pstmt25.setObject(2, jTable111.getValueAt(i, 0).toString());
                                        pstmt25.setString(3, jTextField1112.getText());
                                        pstmt25.setString(4, jTextField91.getText().toUpperCase());
                                        pstmt25.setString(5, jComboBox41.getSelectedItem().toString());
                                        pstmt25.setString(6, jTextField212.getText());
                                        pstmt25.setString(7, jTextField521.getText());
                                        pstmt25.setString(8, jTextField42.getText());
                                        if (jTextField51.getText().equals("")) {
                                            pstmt25.setString(9, jTextField411.getText());
                                        } else {
                                            pstmt25.setString(9, jTextField51.getText());
                                        }

                                        pstmt25.setString(10, rcode);
                                        pstmt25.setString(11, jTextField22.getText());
                                        pstmt25.setString(12, receiptNo1);
                                        pstmt25.setString(13, exemptionNumberTxt.getText());
                                        pstmt25.setString(14, jTextField91.getText().toUpperCase());
                                        pstmt25.setString(15, "Receipts");
                                        pstmt25.setDouble(16, java.lang.Double.valueOf(jTable111.getValueAt(i, 3).toString()));
                                        pstmt25.setDouble(17, 0.00);
                                        pstmt25.setDate(18, dates);//com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        pstmt25.setString(19, "" + transNo1 + "");
                                        pstmt25.setBoolean(20, false);
                                        pstmt25.setBoolean(21, false);
                                        pstmt25.setBoolean(22, false);
                                        pstmt25.setString(23, user);
                                        pstmt25.setString(24, cashPointTxt.getText());
                                        pstmt25.setString(25, jTextField811.getText());
                                        pstmt25.setDate(26, null);
                                        pstmt25.setDouble(27, java.lang.Double.valueOf(jTable111.getValueAt(i, 1).toString()));
                                        pstmt25.setDate(28, null);
                                        pstmt25.setTimestamp(29, datenowSql);
                                        pstmt25.setString(30, mdepartment);
                                        pstmt25.executeUpdate();
                                        pstmt25.close();
                                        rss.close();

                                    }
                                }

                            }

                        }

                        if (jComboBox41.getSelectedItem().toString().equalsIgnoreCase("Scheme")) {
                            // Record as a credit sale in database table  hp_patient_card. This raises a bill against the client account.
                            // And Finalise the bill and print an invoice raised against the account for the member of staff
                            java.sql.PreparedStatement pstmtInv = connectDB.prepareStatement("insert into ac_debtors values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmtInv.setObject(1, actCode1);
                            pstmtInv.setString(2, "MTRH STAFF DEBTORS");
                            pstmtInv.setObject(3, jTextField91.getText());
                            pstmtInv.setString(4, jTextField1112.getText());
                            pstmtInv.setString(5, "MTRH STAFF DEBTORS");
                            pstmtInv.setString(6, "");
                            // if (this.jTextField17.getText().equals(null) || this.jTextField17.getText().equals("-")) {
                            //     javax.swing.JOptionPane.showMessageDialog(this, "Account NO. MISSING !!!", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            // } else {
                            pstmtInv.setString(7, "DB80");
                            // }
                            pstmtInv.setString(8, "");
                            pstmtInv.setString(9, "");
                            pstmtInv.setString(10, "");
                            pstmtInv.setString(11, transNo1);
                            pstmtInv.setString(12, "Raise Invoice");
                            pstmtInv.setDouble(13, java.lang.Double.valueOf(jTextField311.getText()));
                            pstmtInv.setDouble(14, 0.00);
                            pstmtInv.setDate(15, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmtInv.setObject(16, invoiceNo);
                            pstmtInv.setString(17, actNames1);
                            pstmtInv.setBoolean(18, false);
                            pstmtInv.setBoolean(19, false);
                            pstmtInv.setString(20, user);
                            pstmtInv.setString(21, "");
                            pstmtInv.setDouble(22, java.lang.Double.valueOf(jTextField311.getText()));
                            pstmtInv.setBoolean(23, false);
                            pstmtInv.setDouble(24, 0.00);
                            pstmtInv.setObject(25, "");
                            pstmtInv.setObject(26, null);
                            pstmtInv.setBoolean(27, false);
                            pstmtInv.setDouble(28, 0.00);
                            pstmtInv.setObject(29, null);
                            pstmtInv.setString(30, "");
                            pstmtInv.setBoolean(31, false);
                            pstmtInv.setDouble(32, 0.00);
                            pstmtInv.setObject(33, null);
                            pstmtInv.setString(34, "");
                            pstmtInv.setString(35, "");
                            pstmtInv.executeUpdate();
                        }

                        double waiver = 0.00;
                        if (jTextField1211.getText().toCharArray().length > 0) {
                            waiver = java.lang.Double.parseDouble(jTextField1211.getText());
                        }

                        String glAcc1q = null;
                        String glAcc2 = null;
                        String glAcc11 = null;
                        String glAcc21 = null;

                        rse121r = stm121r.executeQuery("select activity,code from pb_activity where activity_category ILIKE 'RC'");
                        while (rse121r.next()) {
                            glAcc21 = rse121r.getObject(2).toString();
                            glAcc11 = rse121r.getObject(1).toString();
                        }
                        rse121w = stm121w.executeQuery("select activity,code,department from pb_activity where activity_category ILIKE 'IEXE'");
                        while (rse121w.next()) {
                            glAcc2 = rse121w.getObject(1).toString();
                            glAcc1q = rse121w.getObject(2).toString();
                            mdepartment = rse121w.getObject(3).toString();
                        }


                        if (jComboBox41.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                            psr = connectDB.prepareStatement("INSERT INTO ac_receipts_no("
                                    + "account_no, account_name, date, amount, shift_no, "
                                    + "cash_point, reference, user_name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
                            psr.setString(1, jTextField1112.getText());
                            psr.setString(2, jTextField91.getText());
                            psr.setDate(3, dates); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            psr.setDouble(4, java.lang.Double.valueOf(jTextField311.getText()));
                            psr.setInt(5, java.lang.Integer.valueOf(jTextField811.getText()));
                            psr.setString(6, cashPointTxt.getText());
                            psr.setString(7, receiptNo1);
                            psr.setString(8, user);
                            psr.executeUpdate();
                            psr.close();
                        } /*
                         * else { psr = connectDB.prepareStatement("INSERT INTO
                         * ac_receipts_no(" + "account_no, account_name, date,
                         * amount, shift_no, " + "cash_point, reference,
                         * user_name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
                         * psr.setString(1, jTextField1112.getText());
                         * psr.setString(2, jTextField91.getText());
                         * psr.setDate(3, dates);
                         * //com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                         * psr.setDouble(4,
                         * java.lang.Double.valueOf(jTextField311.getText()));
                         * psr.setInt(5,
                         * java.lang.Integer.valueOf(jTextField811.getText()));
                         * psr.setString(6, jTextField141.getText());
                         * psr.setString(7, invoiceNo); psr.setString(8, user);
                         * psr.executeUpdate();
                         *
                         * }
                         */
                        if (jComboBox41.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                            rst1q = ps1q.executeQuery("SELECT LPAD(receipt_no::TEXT,8,'0'::TEXT) FROM ac_receipts_no WHERE reference = '" + receiptNo1 + "'");
                            while (rst1q.next()) {
                                receiptNo2 = rst1q.getObject(1).toString();
                            }



                            pstmt112 = connectDB.prepareStatement("UPDATE ac_cash_collection SET receipt_no = '" + receiptNo2 + "' WHERE receipt_no = '" + receiptNo1 + "'");
                            pstmt112.executeUpdate();

                            //  pstmt112F = connectDB.prepareStatement("UPDATE ac_debtors SET receipt_no = '" + receiptNo2 + "' WHERE receipt_no = '" + receiptNo1 + "'");
                            //  pstmt112F.executeUpdate();
                            pstmt112.close();
                            // pstmt112F.close();
                            rst1q.close();
                        } else {
                            receiptNo2 = this.invoiceNo;
                        }

                        connectDB.commit();
                        connectDB.setAutoCommit(true);
                        if (processReceipt) {
                            if (jComboBox41.getSelectedItem().toString().equalsIgnoreCase("Cash")) {
                                jTextField1113.setText(receiptNo2);
                            } else {
                                jTextField1113.setText(invoiceNo);
                            }
                            jButton111.setEnabled(false);
                            jButton1112.setEnabled(false);
                            jButton22.setEnabled(true);
                        }



                        ps1q.close();

                        rsts.close();
                        pss1.close();
                        pss.close();
//                        rss.close();
                        stm1211.close();
                        rse1211.close();
                        stm12.close();
                        rse12.close();
                        stm12f.close();
                        rse12f.close();
                        stm12fx.close();
                        rse12fx.close();
                        stm1211.close();
                        pss.close();
                        pss1.close();
                        stm121.close();

                        pstmt212.close();
                        //      pstmt25.close();
                        stm121w.close();
                        stm121r.close();
                        rse121w.close();
                        rse121r.close();
                        ps.close();
//                        pstmt25.close();
                        pstmt212.close();
                        rse121r.close();
                        stm121w.close();
                        stm121r.close();
                        // rse121w.close();
                        //      pstmt25.close();
                        //          pstmt41d.close();
                        //          pstmt41.close();
                        //          pstmt411.close();
                        rse121.close();
                        stm121.close();
//                        rst.close();
                        //  jTextField91.setEditable(false);
                    } catch (java.sql.SQLException sq) {

                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        sq.printStackTrace();
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }

                }
            }

        }

    }

    public void run() {
        while (true) {
            try {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT count(status) FROM ac_shifts WHERE status ilike 'running' AND user_name = current_user");
                java.sql.ResultSet rset = pstmt.executeQuery();
                int i = 0;
                while (rset.next()) {
                    i = rset.getInt(1);
                }
                if (i < 1) {
                    this.dispose();
                    javax.swing.JOptionPane.showMessageDialog(this, "You MUST open a new shift in order to continue.\n Please close Front End Operations and open afresh.");
                }
                rset.close();
                pstmt.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "ERROR: Can't close the cash collection form : Details : " + ex.getMessage());
                //Logger.getLogger(GovBillPaymentsIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                Thread.sleep(10000);
            } catch (InterruptedException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "ERROR: Can't close the cash collection form : Details : " + ex.getMessage());

                // Logger.getLogger(GovBillPaymentsIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField cashPointTxt;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton dispose11;
    private javax.swing.JLabel exemptionNumberLbl;
    private javax.swing.JTextField exemptionNumberTxt;
    private javax.swing.JButton jButton111;
    private javax.swing.JButton jButton1111;
    private javax.swing.JButton jButton1112;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton252111;
    private javax.swing.JButton jButton301111;
    private javax.swing.JButton jButton311;
    public javax.swing.JButton jButton411;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton421;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton611;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox jComboBox111;
    private javax.swing.JComboBox jComboBox41;
    private javax.swing.JDialog jDialog31;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel1311;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel1411;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2121;
    private javax.swing.JLabel jLabel213;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel3111;
    private javax.swing.JLabel jLabel313;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel4112;
    private javax.swing.JLabel jLabel422;
    private javax.swing.JLabel jLabel5311;
    private javax.swing.JLabel jLabel5821111;
    private javax.swing.JLabel jLabel582211;
    private javax.swing.JLabel jLabel66111;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel121;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JPanel jPanel311;
    private javax.swing.JPanel jPanel312;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane211;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JSeparator jSeparator111;
    private javax.swing.JSeparator jSeparator1111;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable111;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField121;
    private javax.swing.JTextField jTextField1211;
    private javax.swing.JTextField jTextField131;
    private javax.swing.JTextField jTextField14111;
    private javax.swing.JTextField jTextField151;
    private javax.swing.JTextField jTextField1611;
    private javax.swing.JTextField jTextField212;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JTextField jTextField3111;
    private javax.swing.JTextField jTextField411;
    private javax.swing.JTextField jTextField4111;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField5111;
    private javax.swing.JTextField jTextField521;
    private javax.swing.JTextField jTextField61;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField811;
    private javax.swing.JTextField jTextField82;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField payBillNumberTxt;
    private javax.swing.JFormattedTextField payerMobileTelephoneNumberTxt;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton13;
    // End of variables declaration//GEN-END:variables
}
