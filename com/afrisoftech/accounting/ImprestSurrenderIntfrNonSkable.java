/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

import com.sun.star.lib.uno.environments.java.java_environment;
import java.text.FieldPosition;
import java.text.ParsePosition;
import java.util.Date;
import kiwi.ui.DateChooser;

/**
 *
 * @author  root
 */
public class ImprestSurrenderIntfrNonSkable extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    String desc = null;
    String billNo = null;
    String transNo = null;
    String payMode = null;
    String patientAcc = null;
    String cardNo = null;
    String AccDesc = null;
    String scheme = null;
    String cardName = null;
    String isurer = null;
    String expDate = null;
    String staffNo = null;
    String glAcc = null;
    String receiptNo1 = null;
    String actCode1 = null;
    String glCode1 = null;
    String bankAcc1 = null;
    String transNo1 = null;
    String actNames1 = null;
    String patCat1 = null;
    String patientAcc1 = null;
    String user = null;
    String glAcc1 = null;
    String accDesc1 = null;
    String name = null;
    String rname = null;
    String rcode = null;
    java.sql.Connection connectDB = null;
    String cashPoint = null;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;
    javax.swing.table.TableModel tableModel;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox1;
    private javax.swing.JComboBox cmbox2;
    //   java.sql.Connection connectDB = null;
    public String pettyAcctivityCode = null;
    String getUnsurrenderedAmount = null;
    String staffCode = null;
    String pettyAcctivity = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public ImprestSurrenderIntfrNonSkable(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        
        System.out.println("Cashpoint : "+System.getProperty("cashpoint"));
        //jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and status != 'Payment Done' and approved_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) > 0 or sum(credit-debit) > 0 ORDER BY 1"));
        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and status != 'Payment Done' and approved_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) > 0 ORDER BY 1"));
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField11112 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton411 = new javax.swing.JButton();
        jButton511 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField111111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        searchSurrenderTxt = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel13 = new javax.swing.JPanel();
        jTextField11113 = new javax.swing.JTextField();
        jSearchScrollPane13 = new javax.swing.JScrollPane();
        jSearchTable13 = new com.afrisoftech.dbadmin.JTable();
        jButton512 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTextField6 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        dealerCodeTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jPanel10 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel53 = new javax.swing.JLabel();
        surrenderdAmountTxt = new javax.swing.JTextField();
        jPanel61 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField5 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        departmentCmb = new javax.swing.JComboBox();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jPanel63 = new javax.swing.JPanel();
        voucherNoSrchTxt = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        receiptNoTxt = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        activityCodeTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        unsurrenderedAmountTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        surrenderRbtn = new javax.swing.JRadioButton();
        refundsRdBtn = new javax.swing.JRadioButton();
        reverseRbtn = new javax.swing.JRadioButton();
        replenishRbtn = new javax.swing.JRadioButton();
        jPanel65 = new javax.swing.JPanel();
        payeeTxt = new javax.swing.JTextField();
        searchButton6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton41, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField11111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        jTextField11112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11112CaretUpdate(evt);
            }
        });
        jTextField11112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel12.add(jTextField11112, gridBagConstraints);

        jSearchTable12.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable12.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });
        jSearchScrollPane12.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton411.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton411, gridBagConstraints);

        jButton511.setText("Dispose");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel12, gridBagConstraints);

        jSearchDialog111.setModal(true);
        jSearchDialog111.setUndecorated(true);
        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jTextField111111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel111.add(jTextField111111, gridBagConstraints);

        jSearchTable111.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });
        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchSurrenderTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchSurrenderTxtCaretUpdate(evt);
            }
        });
        searchSurrenderTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSurrenderTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(searchSurrenderTxt, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog12.setModal(true);
        jSearchDialog12.setUndecorated(true);
        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel13.setLayout(new java.awt.GridBagLayout());

        jTextField11113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11113CaretUpdate(evt);
            }
        });
        jTextField11113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11113ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel13.add(jTextField11113, gridBagConstraints);

        jSearchTable13.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable13.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable13MouseClicked(evt);
            }
        });
        jSearchScrollPane13.setViewportView(jSearchTable13);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel13.add(jSearchScrollPane13, gridBagConstraints);

        jButton512.setText("Close");
        jButton512.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton512ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel13.add(jButton512, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel13, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cash(voucher) Surrender");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jTextField8.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField8.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        getContentPane().add(jTextField8, gridBagConstraints);

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jSeparator1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField2.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField2.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel3.add(jTextField2, gridBagConstraints);

        jLabel4.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Supporting Documents"));
        jScrollPane1.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        dealerCodeTxt.setEditable(false);
        dealerCodeTxt.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(dealerCodeTxt, gridBagConstraints);

        jLabel9.setText("Payee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel2.setText("Staff ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel1.setText("Date of surrender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTextField5.setVisible(false);
        jLabel3.setVisible(false);
        jComboBox2.setVisible(false);
        jPanel61.setVisible(false);
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "A/C Description", "Purpose/Particulars", "Qty", "Amount", "GL Account"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        /*cmbox = new javax.swing.JComboBox();

        cmbox.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_donor ORDER BY code"));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Donor");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });

        cmbox1 = new javax.swing.JComboBox();

        cmbox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_project ORDER BY code"));
        javax.swing.table.TableColumn t = this.jTable1.getColumn("Proj");
        t.setCellEditor(new javax.swing.DefaultCellEditor(cmbox1));
        cmbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbox1ActionPerformed(evt);
            }
        });

        cmbox2 = new javax.swing.JComboBox();

        cmbox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_branch ORDER BY code"));
        javax.swing.table.TableColumn n = this.jTable1.getColumn("Unit");
        n.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));
        cmbox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbox2ActionPerformed(evt);
            }
        });
        */

        javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 5; i++) {

            column = jTable1.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {
                if(i == 0){
                    column.setPreferredWidth(200);
                }else{
                    if( i == 2){
                        column.setPreferredWidth(50);
                    }else{
                        column.setPreferredWidth(100);
                    }
                }
            }

        }
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane11.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel31.add(jScrollPane11, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jCheckBox4);
        jCheckBox4.setSelected(true);
        jCheckBox4.setText("Search By Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox4, gridBagConstraints);

        buttonGroup1.add(jCheckBox5);
        jCheckBox5.setText("Search By Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel31.add(jPanel10, gridBagConstraints);

        jLabel53.setText("Surrendering Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel31.add(jLabel53, gridBagConstraints);

        surrenderdAmountTxt.setEditable(false);
        surrenderdAmountTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        surrenderdAmountTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
        jPanel31.add(surrenderdAmountTxt, gridBagConstraints);

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setEnabled(false);
        jPanel61.setMinimumSize(new java.awt.Dimension(82, 25));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jTextField361.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField361, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search Patient's Name");
        searchButton1.setEnabled(false);
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel61.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel31.add(jPanel61, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(jTextField1, gridBagConstraints);

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct bank_account_no from ac_banks_setup"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(jComboBox2, gridBagConstraints);

        jTextField5.setEditable(false);
        jTextField5.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(jTextField5, gridBagConstraints);

        jLabel3.setText("Cheque No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel31.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel3.add(jPanel31, gridBagConstraints);

        departmentCmb.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT UPPER(department_name) as department_name  from pb_departments ORDER BY department_name"));
        departmentCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentCmbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(departmentCmb, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(datePicker1, gridBagConstraints);

        jPanel63.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel63.setMinimumSize(new java.awt.Dimension(24, 25));
        jPanel63.setLayout(new java.awt.GridBagLayout());

        voucherNoSrchTxt.setEditable(false);
        voucherNoSrchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voucherNoSrchTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(voucherNoSrchTxt, gridBagConstraints);

        searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton3.setToolTipText("Search patient name");
        searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(searchButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel3.add(jPanel63, gridBagConstraints);

        jLabel11.setText("Receipt No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel11, gridBagConstraints);

        jPanel64.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel64.setMinimumSize(new java.awt.Dimension(82, 25));
        jPanel64.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel64.add(receiptNoTxt, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton4.setToolTipText("Search Patient's Invoice");
        searchButton4.setEnabled(false);
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel64.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanel64, gridBagConstraints);

        jLabel12.setText("Activity Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel12, gridBagConstraints);

        activityCodeTxt.setEditable(false);
        activityCodeTxt.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(activityCodeTxt, gridBagConstraints);

        jLabel14.setText("Imprest No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel14, gridBagConstraints);

        jLabel16.setText("Unsurrendered Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel16, gridBagConstraints);

        unsurrenderedAmountTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(unsurrenderedAmountTxt, gridBagConstraints);

        buttonGroup2.add(surrenderRbtn);
        surrenderRbtn.setSelected(true);
        surrenderRbtn.setText("Surrender");
        surrenderRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surrenderRbtnActionPerformed(evt);
            }
        });
        jPanel4.add(surrenderRbtn);

        buttonGroup2.add(refundsRdBtn);
        refundsRdBtn.setText("Refunds");
        refundsRdBtn.setEnabled(false);
        refundsRdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refundsRdBtnActionPerformed(evt);
            }
        });
        jPanel4.add(refundsRdBtn);

        buttonGroup2.add(reverseRbtn);
        reverseRbtn.setText("Reverse");
        reverseRbtn.setEnabled(false);
        reverseRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reverseRbtnActionPerformed(evt);
            }
        });
        jPanel4.add(reverseRbtn);

        buttonGroup2.add(replenishRbtn);
        replenishRbtn.setText("Replenish");
        replenishRbtn.setEnabled(false);
        replenishRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replenishRbtnActionPerformed(evt);
            }
        });
        jPanel4.add(replenishRbtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel4, gridBagConstraints);

        jPanel65.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel65.setMinimumSize(new java.awt.Dimension(24, 25));
        jPanel65.setLayout(new java.awt.GridBagLayout());

        payeeTxt.setEditable(false);
        payeeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payeeTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel65.add(payeeTxt, gridBagConstraints);

        searchButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton6.setToolTipText("Search patient name");
        searchButton6.setEnabled(false);
        searchButton6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton6.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton6.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 1.0;
        jPanel65.add(searchButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel3.add(jPanel65, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        jButton1.setMnemonic('p');
        jButton1.setText("Save & Print");
        jButton1.setToolTipText("Click here enter data");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton1, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        jButton12.setMnemonic('p');
        jButton12.setText("Reprint");
        jButton12.setToolTipText("Click here enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton12, gridBagConstraints);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        jButton11.setMnemonic('s');
        jButton11.setText("Save");
        jButton11.setToolTipText("Click here enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton11, gridBagConstraints);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif"))); // NOI18N
        jButton2.setMnemonic('R');
        jButton2.setText("Remove Row");
        jButton2.setToolTipText("Click here to edit data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton2, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jLabel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel5, gridBagConstraints);

        jTabbedPane1.addTab("Payments", jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 697, 432);
    }// </editor-fold>//GEN-END:initComponents
        private void populateTable12x(java.lang.String requisitioner) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
           /* java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select count(requisition_no) from ac_petty_cash_requisition where requisitioner ='"+requisitioner+"' AND approved = true AND paid = false");
            
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
            */
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select purpose,reason,quantity,sum(credit),code from ac_petty_cash_requisition where requisition_no ='"+requisitioner+"' AND approved = true AND paid = false GROUP By purpose,reason,quantity,code");
            
            while (rsetTable11.next()) {
                
                System.out.println("Working at table row "+i);
                jTable1.setValueAt(rsetTable11.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable11.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable11.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable11.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable11.getObject(5), i, 4);
                ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                
                i++;
                
                //                i = i + i;
                //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
            }
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        searchButton111Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed
    private void searchButton111Clicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog12.dispose();
        
        java.awt.Point point = this.receiptNoTxt.getLocationOnScreen();
        jSearchDialog12.setLocation(point);
        
        jSearchDialog12.setSize(400,200);
        
        jSearchDialog12.setVisible(true);
    }
    private void jButton512ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton512ActionPerformed
        jSearchDialog12.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton512ActionPerformed
    
    private void jSearchTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable13MouseClicked
        receiptNoTxt.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 0).toString());
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        surrenderdAmountTxt.setText("");
        int j = 0;
        int i = 0;
        // for (int i = 0; i < jTable1.getRowCount(); i++ ) {
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, reason,'1',sum(credit-debit),activity_code  FROM ac_ledger WHERE voucher_no = '"+receiptNoTxt.getText()+"'  and dealer ilike '"+voucherNoSrchTxt.getText()+"' group by description, reason,activity_code");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                i++;
                java.sql.Statement stmtTable11 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT sum(credit-debit)  FROM ac_ledger WHERE voucher_no = '"+receiptNoTxt.getText()+"' and dealer ilike '"+voucherNoSrchTxt.getText()+"' ");
                
                while (rsetTable11.next()) {
                    surrenderdAmountTxt.setText(rsetTable11.getObject(1).toString());
                }
                
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
            // }
        }
        jSearchDialog12.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTable13MouseClicked
    
    private void jTextField11113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11113ActionPerformed
// Add your handling code here:
    }//GEN-LAST:event_jTextField11113ActionPerformed
    
    private void jTextField11113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11113CaretUpdate
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jSearchTable13.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct trim(voucher_no) as invoice_no,sum(credit-debit) as amount from ac_ledger where voucher_no ILIKE '"+jTextField11113.getText().toString()+"%' and dealer = '"+this.voucherNoSrchTxt.getText()+"' GROUP BY 1  HAVING 2 > 0 ORDER BY invoice_no"));
        jSearchTable13.setShowHorizontalLines(false);
        jSearchScrollPane13.setViewportView(jSearchTable13);
            
    }//GEN-LAST:event_jTextField11113CaretUpdate
    
    private void searchSurrenderTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchSurrenderTxtCaretUpdate
        if(this.searchSurrenderTxt.getCaretPosition() < 1){
            System.out.print("Nothing");
        }else{
            
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT_REQ%' or voucher_no ilike '%S_IMPREST%' or voucher_no ilike '%T_IMPREST%')) and (payee ILIKE '%" + searchSurrenderTxt.getText() + "%' or staff_veh ILIKE '%" + searchSurrenderTxt.getText() + "%') and status != 'Payment Done' GROUP BY staff_veh, payee,voucher_no having sum(debit-credit)> 0 ORDER BY 1"));

            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");
            
        }           // Add your handling code here:
    }//GEN-LAST:event_searchSurrenderTxtCaretUpdate
    
    private void searchSurrenderTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSurrenderTxtActionPerformed
      
    }//GEN-LAST:event_searchSurrenderTxtActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        voucherNoSrchTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        staffCode = jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString();
        dealerCodeTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        
        jButton1.setEnabled(true);
        jButton11.setEnabled(true);
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select requisitioner,payee,department,date_required from ac_petty_cash_requisition where requisition_no ='"+voucherNoSrchTxt.getText().toString()+"' AND approved = true AND paid = false");
//            java.sql.Statement stmtBalance = connectDB.createStatement();
//            java.sql.ResultSet rsetBalance = stmtBalance.executeQuery("select sum(debit-credit) FROM ac_petty_cash where voucher_no ='"+jComboBox131.getSelectedItem()+"'");

            ///load combo with ac_petty_cash
            java.sql.Statement stmtBalance = connectDB.createStatement();
            java.sql.ResultSet rsetBalance = stmtBalance.executeQuery("select sum(debit-credit), payee FROM ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"' and status !='Payment Done' group by 2");
            System.out.println("select sum(debit-credit), payee FROM ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"' and status !='Payment Done' group by 2");
            while (rsetBalance.next()){
                unsurrenderedAmountTxt.setText(rsetBalance.getObject(1).toString());
                payeeTxt.setText(rsetBalance.getObject(2).toString());
                getUnsurrenderedAmount = rsetBalance.getObject(1).toString();
                
                
            }
            
            java.sql.Statement getCode = connectDB.createStatement();
            java.sql.ResultSet rsetGetCode = getCode.executeQuery("select staff_veh from ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"'");
                        while (rsetGetCode.next()){
                            //staffCode = rsetGetCode.getObject(1).toString();
                            //dealerCodeTxt.setText(rsetGetCode.getObject(1).toString());
                           System.out.println("ID"+staffCode);
                        }
            
            java.sql.Statement stmtCode = connectDB.createStatement();
            java.sql.ResultSet rsetCode = stmtCode.executeQuery("select activity_code,activity FROM ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"' and status !='Payment Done' group by 1,2");
            
            while(rsetCode.next()){
                pettyAcctivity= rsetCode.getObject(2).toString();
                pettyAcctivityCode= rsetCode.getObject(1).toString();
            }
            
            while (rset.next()){
                
                dealerCodeTxt.setText(rset.getObject(1).toString());
                //payeeTxt.setText(rset.getObject(2).toString());
                java.text.DateFormat df = java.text.DateFormat.getDateInstance();
                
                java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
                
                sdf.applyPattern("yyyy-MM-dd");
                
                try {
                    datePicker1.setDate(sdf.parse(rset.getObject(4).toString()));
                } catch (java.text.ParseException pe) {
                    javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
           
        }
        
        //  this.populateTable1(jTextField9.getText());
        this.jSearchDialog.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButton22Clicked();
        //  this.jButton13.setEnabled(true);
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    private void searchButton22Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.voucherNoSrchTxt.getLocationOnScreen();
        
        jSearchDialog.setSize(300,200);
        
        jSearchDialog.setLocation(point);
        
        jSearchDialog.setVisible(true);
        
        
    }   
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
//        java.awt.Point point = this.jTextField362.getLocationOnScreen();
        
        jSearchDialog111.setSize(300,200);
        
       // jSearchDialog111.setLocation(point);
        
        jSearchDialog111.setVisible(true);
        
        
        
    }
    
    
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.jSearchDialog111.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
//        jTextField362.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),1).toString());
//        jTextField7.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),0).toString());
//        this.jSearchDialog111.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField111111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111111CaretUpdate
        if(jCheckBox5.isSelected()){
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity WHERE activity ILIKE '%"+jTextField111111.getText()+"%' order by activity"));
            
            jSearchScrollPane111.setViewportView(jSearchTable111);
        }else{
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity where code ILIKE '"+jTextField111111.getText()+"%' order by code"));
            
            jSearchScrollPane111.setViewportView(jSearchTable111);
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField111111CaretUpdate
    
    private void replenishRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replenishRbtnActionPerformed
        jPanel61.setVisible(false);
        jComboBox2.setVisible(true);
        searchButton1.setEnabled(false);
        jLabel3.setVisible(true);
        jTextField5.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_replenishRbtnActionPerformed
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_name,gl_code,bank_name from ac_banks_setup where bank_account_no ='"+jComboBox2.getSelectedItem().toString()+"'");
            while (rset1.next()){
                // jTextField4.setText(rset1.getObject(1).toString());
                jTextField1.setText(rset1.getObject(2).toString());
                // jTextField5.setText(rset1.getObject(3).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }  // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            
            String glAcc = null;
            String Activity = null;
            String userName = null;
            String voucherNo = null;
            String transNo = null;
            String Stock = null;
            String voucNo = null;
            String accountCode = null;
            String TransNo = null;
            String glType = null;
            try{
                connectDB.setAutoCommit(false);
                // jButton11ActionPerformed(evt);
                
                
                if(activityCodeTxt.getText().equalsIgnoreCase("-")){
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(currval('pet_voucher_no')::text,5,0::text)");
                    while (rse1.next()){
                        
                        voucherNo = rse1.getObject(1).toString();
                        // transNo = rse1.getObject(2).toString();
                    }
                }else{
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select nextval('transaction_no_seq')");
                    while (rse1.next()){
                        
                        voucherNo = activityCodeTxt.getText();
                        // transNo = rse1.getObject(1).toString();
                    }
                    
                }
                connectDB.commit();
                connectDB.setAutoCommit(true);
                com.afrisoftech.reports.PettyNgoPayVoucherPdf policy = new com.afrisoftech.reports.PettyNgoPayVoucherPdf();
                policy.PettyNgoPayVoucherPdf(connectDB,voucherNo);
                
                for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                        jTable1.getModel().setValueAt(null,k,r);
                    }
                }
                jButton1.setEnabled(false);
                jButton11.setEnabled(false);
                //                crset1.execute();
                
            }   catch(java.sql.SQLException sq){
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }       // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 3) != null) {
            if (jTable1.getSelectedColumn() == jTable1.getSelectedColumn()) {
                float resVal = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                
                java.lang.Float resFloat = new java.lang.Float(resVal);
                
                jTable1.setValueAt(resFloat, jTable1.getSelectedRow(), 3);
                
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
                surrenderdAmountTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jTextField11112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11112CaretUpdate
        jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT voucher_no,date from ac_petty_cash WHERE voucher_no ILIKE '%"+jTextField11112.getText()+"%' GROUP BY voucher_no,date order by voucher_no"));
        
        jSearchScrollPane12.setViewportView(jSearchTable12);        // Add your handling code here:
    }//GEN-LAST:event_jTextField11112CaretUpdate
    
    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed
    
    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        //   jTextField111.setText(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(), 1).toString());
        jTextField361.setText(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(), 0).toString());
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();
        
        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat)df;
        
        sdf.applyPattern("yyyy-MM-dd");
        
        
        try {
            datePicker1.setDate(sdf.parse(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(), 1).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select distinct payee,requisitioner,department,transaction_no,shift_no from ac_petty_cash where voucher_no ='"+jTextField361.getText()+"'");
            while (rset.next()){
                voucherNoSrchTxt.setText(rset.getObject(1).toString());
               // dealerCodeTxt.setText(rset.getObject(2).toString());
                jTextField1.setText(rset.getObject(4).toString());
//                jTextField81.setText(rset.getObject(5).toString());
                departmentCmb.setSelectedItem(rset.getObject(3).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        this.populateTable1(this.jTextField361.getText());
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable12MouseClicked
    private void populateTable1(java.lang.String patient_no) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(voucher_no)  FROM ac_petty_cash WHERE voucher_no = '"+patient_no+"' and date = '"+datePicker1.getDate()+"'");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description,status,1,credit,code  FROM ac_petty_cash WHERE voucher_no = '"+patient_no+"' and date = '"+datePicker1.getDate()+"' and credit > 0");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                 /*   jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                    jTable1.setValueAt(rsetTable1.getObject(7), i, 6);
                    jTable1.setValueAt(rsetTable1.getObject(8), i, 7);
                    jTable1.setValueAt(rsetTable1.getObject(9), i, 8);
                  */
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT sum(credit) FROM ac_petty_cash WHERE voucher_no = '"+patient_no+"' and date = '"+datePicker1.getDate()+"'");
                while (rset1.next()){
                    surrenderdAmountTxt.setText(rset1.getObject(1).toString());
                }
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void jTextField11112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11112ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11112ActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButtonClicked2();        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButtonClicked2() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField361.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.setVisible(true);
         
    }
    private void surrenderRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surrenderRbtnActionPerformed
        jPanel61.setVisible(false);
        jComboBox2.setVisible(false);
        searchButton1.setEnabled(false);
        jLabel3.setVisible(false);
        jTextField5.setVisible(false);
        
        if(surrenderRbtn.isSelected()==true){
        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and status != 'Payment Done' and approved_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) > 0 ORDER BY 1"));
        com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct voucher_no from ac_petty_cash where (voucher_no !='' and voucher_no ilike 'T_IMPREST%' or voucher_no ilike 'PETT%') and status != 'Payment Done' and approved_surrender = false GROUP BY voucher_no having sum(debit-credit) > 0 or sum(credit-debit) > 0 ORDER BY 1"); 
        }
//        jTextField81.setText(getShiftNumber());
        // Add your handling code here:
    }//GEN-LAST:event_surrenderRbtnActionPerformed
    
    private void reverseRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reverseRbtnActionPerformed
        jPanel61.setVisible(true);
        searchButton1.setEnabled(true);
        jComboBox2.setVisible(false);
        jLabel3.setVisible(false);
        jTextField5.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_reverseRbtnActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+datePicker1.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set  Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            if(jTable1.isEditing()){
                jTable1.getCellEditor().stopCellEditing();
            }
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql.toString());
            try{
                
                String glAcc = null;
                String Activity = null;
                String userName = null;
                String voucherNo = null;
                String transNo = null;
                String Stock = null;
                String voucNo = null;
                String accountCode = null;
                String TransNo = null;
                String glType = null;
                String glType1 = null;
                
                String accountCode1 = null;
                
                try{
                    connectDB.setAutoCommit(false);
                    
                    if(surrenderRbtn.isSelected() && receiptNoTxt.getText().toString().length()>0){
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'PC'");
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            Activity = rse121.getObject(2).toString();
                            userName = rse121.getObject(3).toString();
                        }
                        
                        if(activityCodeTxt.getText().equalsIgnoreCase("-")){
                            java.sql.Statement stm1 = connectDB.createStatement();
                            java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(nextval('pet_voucher_no')::text,5,0::text),nextval('transaction_no_seq')");
                            while (rse1.next()){
                                
                                voucherNo = rse1.getObject(1).toString();
                                transNo = rse1.getObject(2).toString();
                            }
                        }else{
                            java.sql.Statement stm1 = connectDB.createStatement();
                            java.sql.ResultSet rse1 = stm1.executeQuery("select nextval('transaction_no_seq')");
                            while (rse1.next()){
                                
                                voucherNo = activityCodeTxt.getText();
                                transNo = rse1.getObject(1).toString();
                            }
                            
                        }
                    java.sql.Statement pst1Cash = connectDB.createStatement();
                    java.sql.ResultSet rs1Cash = pst1Cash.executeQuery("select activity_code,description,requisitioner, department from ac_petty_cash where voucher_no = '"+voucherNoSrchTxt.getText().toString()+"'");
                    while (rs1Cash.next()) {
                        accountCode1 = rs1Cash.getString(1);
                        glType1 = rs1Cash.getString(2);
                    }
                        java.sql.Statement pst1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                        while (rs1.next()){
                            accountCode = rs1.getObject(1).toString();
                            glType = rs1.getObject(2).toString();
                        }
                        

                                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
                        if (jTable1.getModel().getValueAt(0,0) != null){
                            
                                java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt21.setObject(1,accountCode1);
                                pstmt21.setString(2,pettyAcctivity);
                                pstmt21.setString(3,payeeTxt.getText());
                                pstmt21.setObject(4,glType1);
                                pstmt21.setDouble(6,totalSum);//java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()//credit
                                pstmt21.setDouble(5,0.00);//debit
                                pstmt21.setDate(7,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                pstmt21.setString(8,com.afrisoftech.lib.UserName.getLoginName(connectDB));
                                pstmt21.setBoolean(9,true);
                                pstmt21.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt21.setString(10,voucherNoSrchTxt.getText().toString());
                                pstmt21.setBoolean(12,true);
                                pstmt21.setObject(13,departmentCmb.getSelectedItem().toString());
                                pstmt21.setString(14,"");
                                pstmt21.setObject(15,"SURRENDER_NON_STOCKABLE");//jTable1.getValueAt(i,1).toString()
                                // pstmt21.setString(15,jTextField31.getText());
                                pstmt21.setString(16,jTextPane1.getText());
                                pstmt21.setString(17,transNo);
                                pstmt21.setString(18,"");
                                pstmt21.setString(19,"");
                                pstmt21.setString(20,TransNo);
                                pstmt21.setObject(21,accountCode);
                                pstmt21.setString(22,receiptNoTxt.getText());
                                pstmt21.setObject(23,"-");
                                pstmt21.setObject(24,"-");
                                pstmt21.setObject(25,"-");
                                pstmt21.setObject(26,dealerCodeTxt.getText());
                                pstmt21.setBoolean(27,false);
                                pstmt21.setBoolean(28,false);
                                pstmt21.executeUpdate(); 
                                
                                  double surrenderedAmount = 0;
                                  if(voucherNoSrchTxt.getText().contains("PETT")){
                               java.sql.Statement stmtget = connectDB.createStatement();
                               java.sql.ResultSet rsetget = stmtget.executeQuery("SELECT CASE WHEN surrendered_amount::numeric IS NULL THEN (0.00) " +
                        "ELSE (surrendered_amount::numeric) END AS surrendered_amount from ac_petty_cash_requisition where (requisition_no = '"+voucherNoSrchTxt.getText()+"' or final_voucher_no = '"+voucherNoSrchTxt.getText()+"')");
                                    while(rsetget.next()){
                                        System.out.println("rsetget.getString(1) NI "+rsetget.getString(1));
                                      surrenderedAmount = Double.valueOf(rsetget.getString(1)) + Double.valueOf(surrenderdAmountTxt.getText().replace(",", ""));
                                      System.out.println("Then changed to double NI "+surrenderedAmount);
                                    }
                                 surrenderedAmount = surrenderedAmount + Double.valueOf(surrenderdAmountTxt.getText().replace(",", ""));
                                java.sql.PreparedStatement stmtBill = connectDB.prepareStatement("update ac_petty_cash_requisition set surrendered_amount = ? where (final_voucher_no = '"+voucherNoSrchTxt.getText()+"' or requisition_no = '"+voucherNoSrchTxt.getText()+"')");
                                stmtBill.setObject(1, surrenderedAmount);
                                stmtBill.executeUpdate();       
                                  }else{
                                      
                            java.sql.Statement stmtget = connectDB.createStatement();
                            java.sql.ResultSet rsetget = stmtget.executeQuery("SELECT CASE WHEN surrender_amount::numeric IS NULL THEN (0.00)  " +
                            "ELSE (surrender_amount::numeric) END AS surrender_amount from ac_bills where (final_voucher_no = '"+voucherNoSrchTxt.getText()+"' or voucher_no = '"+voucherNoSrchTxt.getText()+"')");
                                    while(rsetget.next()){
                                    surrenderedAmount = Double.valueOf(rsetget.getString(1));
                                    System.out.println("loop amount "+Double.valueOf(rsetget.getString(1)));
                                    
                                    }
                                    System.out.println("surrenderd amount before "+surrenderedAmount);
                                    System.out.println("Text field amount "+Double.valueOf(surrenderdAmountTxt.getText().replace(",", "")));
                                    surrenderedAmount = surrenderedAmount + Double.valueOf(surrenderdAmountTxt.getText().replace(",", ""));
                                    
                        java.sql.PreparedStatement stmtBill = connectDB.prepareStatement("update ac_bills set surrender_amount = ? where (final_voucher_no = '"+voucherNoSrchTxt.getText()+"' or voucher_no = '"+voucherNoSrchTxt.getText()+"')");
                        stmtBill.setObject(1, surrenderedAmount);
                        System.out.println("finally surrendered amount "+surrenderedAmount);
                        stmtBill.executeUpdate();
                                  }  
                        }
                        
                        for (int i = 0; i < jTable1.getRowCount(); i++){
                            if (jTable1.getModel().getValueAt(i,0) != null){
                                java.sql.PreparedStatement unstockable = connectDB.prepareStatement("INSERT INTO ac_unstockable_items VALUES (?,? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                                //dealer, description,quantity activity_code, particular, department, requisition_no, voucher_no, voucher_date, debit, credit, dealer_code, approved
                                unstockable.setObject(1, voucherNoSrchTxt.getText());
                                unstockable.setObject(2, jTable1.getModel().getValueAt(i,0).toString());
                                unstockable.setObject(3, jTable1.getModel().getValueAt(i,2).toString());
                                unstockable.setObject(4, jTable1.getModel().getValueAt(i,4).toString());
                                unstockable.setObject(5, jTable1.getModel().getValueAt(i,1).toString());
                                unstockable.setObject(6, departmentCmb.getSelectedItem().toString());
                                unstockable.setObject(7, receiptNoTxt.getText().toString());
                                unstockable.setObject(8, voucherNoSrchTxt.getText().toString());
                                unstockable.setDate(9, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                unstockable.setDouble(10,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,3).toString()));
                                unstockable.setDouble(11,0.00);
                                unstockable.setObject(12, dealerCodeTxt.getText());
                                unstockable.setBoolean(13, false);
                                unstockable.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                unstockable.setObject(15, "IMPREST_SURRENDERED");
                                unstockable.setObject(16, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                                unstockable.setObject(17,accountCode1);
                                unstockable.setString(18,glType1);
                                unstockable.executeUpdate();
                            
                                
                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, initcap(?), ?, initcap(?), ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmt2.setObject(1,jTable1.getModel().getValueAt(i,4).toString());
                                pstmt2.setObject(2,jTable1.getModel().getValueAt(i,0).toString());
                                pstmt2.setString(3,"");
                                if (voucherNoSrchTxt.getText().equals("")){
                                    javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Payee!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                    pstmt2.setString(4,voucherNoSrchTxt.getText());
                                }
                                pstmt2.setObject(5,jTable1.getModel().getValueAt(i,1).toString());
                                pstmt2.setString(12,voucherNo);
                                pstmt2.setObject(7,payeeTxt.getText());
                                pstmt2.setString(8,"");
                                pstmt2.setString(9,"");
                                pstmt2.setString(10,"");
                                pstmt2.setString(11,"");
                                pstmt2.setString(6,receiptNoTxt.getText());
                                pstmt2.setString(13,"");
                                pstmt2.setObject(14,"IMPREST_SURRENDERED");
                                pstmt2.setString(15,"Payment");
                                pstmt2.setDouble(17,0.00);
                                if (jTable1.getModel().getValueAt(i,3).toString().equals("")){
                                    javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Amount!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                    
                                    pstmt2.setDouble(16,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,3).toString()));
                                }
                                pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt2.setString(19,transNo);
                                pstmt2.setBoolean(20,false);
                                pstmt2.setBoolean(21,true);
                                pstmt2.setString(23,userName);
                                pstmt2.setBoolean(22,false);
                                pstmt2.executeUpdate();
                                
                            }
                        }
                        
                      javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
                               // }//end check
                    }else{
                      javax.swing.JOptionPane.showMessageDialog(this, "Receipt No is MANDATORY!!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);  
                    }
                    
                    
                     
                        if(reverseRbtn.isSelected()){
                            java.sql.Statement stm121 = connectDB.createStatement();
                            java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'PC'");
                            while (rse121.next()){
                                
                                glAcc = rse121.getObject(1).toString();
                                Activity = rse121.getObject(2).toString();
                                userName = rse121.getObject(3).toString();
                            }
                            
                            for (int i = 0; i < jTable1.getRowCount(); i++){
                                if (jTable1.getModel().getValueAt(i,0) != null){
                                    
                                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                    pstmt21.setObject(1,glAcc);
                                    pstmt21.setString(2,Activity);
                                    pstmt21.setString(3,voucherNoSrchTxt.getText());
                                    pstmt21.setObject(4,jTable1.getValueAt(i,0).toString());
                                    pstmt21.setDouble(5,java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                                    pstmt21.setDouble(6,0.0);
                                    pstmt21.setDate(7,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                    pstmt21.setString(8,userName);
                                    pstmt21.setBoolean(9,true);
                                    pstmt21.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt21.setString(10,jTextField361.getText());
                                    pstmt21.setBoolean(12,true);
                                    pstmt21.setObject(13,departmentCmb.getSelectedItem().toString());
                                    pstmt21.setString(14,"");
                                    pstmt21.setObject(15,jTable1.getValueAt(i,1).toString());
                                    pstmt21.setString(16,jTextPane1.getText());
                                    pstmt21.setString(17,jTextField1.getText());
                                    pstmt21.setString(18,"");
                                    pstmt21.setString(19,"");
                                    pstmt21.setString(20,TransNo);
                                    pstmt21.setObject(21,jTable1.getValueAt(i,4).toString());
                                    pstmt21.setString(22,TransNo);
                                    pstmt21.setObject(23,"-");
                                    pstmt21.setObject(24,"-");
                                    pstmt21.setObject(25,"-");
                                    pstmt21.setObject(26,"-");
                                    pstmt21.executeUpdate();
                                    
                                    
                                    
                                    java.sql.Statement pst1 = connectDB.createStatement();
                                    java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                                    while (rs1.next()){
                                        accountCode = rs1.getObject(1).toString();
                                        glType = rs1.getObject(2).toString();
                                    }
                                    
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, initcap(?), ?, initcap(?), ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                    pstmt2.setObject(1,jTable1.getModel().getValueAt(i,4).toString());
                                    pstmt2.setObject(2,jTable1.getModel().getValueAt(i,0).toString());
                                    pstmt2.setString(3,"");
                                    if (voucherNoSrchTxt.getText().equals("")){
                                        javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Payee!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        pstmt2.setString(4,voucherNoSrchTxt.getText());
                                    }
                                    pstmt2.setObject(5,jTable1.getModel().getValueAt(i,1).toString());
                                    pstmt2.setString(6,jTextField361.getText());
                                    pstmt2.setObject(7,voucherNoSrchTxt.getText());
                                    pstmt2.setString(8,"");
                                    pstmt2.setString(9,"");
                                    pstmt2.setString(10,"");
                                    pstmt2.setString(11,"");
                                    pstmt2.setString(12,"");
                                    pstmt2.setString(13,"");
                                    pstmt2.setObject(14,jTable1.getModel().getValueAt(i,1).toString());
                                    pstmt2.setString(15,"Adjustment");
                                    pstmt2.setDouble(16,0.00);
                                    if (jTable1.getModel().getValueAt(i,3).toString().equals("")){
                                        javax.swing.JOptionPane.showMessageDialog(this,"You must Enter Amount!","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        
                                        pstmt2.setDouble(17,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,3).toString()));
                                    }
                                    pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmt2.setString(19,jTextField1.getText());
                                    pstmt2.setBoolean(20,false);
                                    pstmt2.setBoolean(21,false);
                                    pstmt2.setString(23,userName);
                                    pstmt2.setBoolean(22,false);
                                    pstmt2.executeUpdate();
                                    
                                }
                            }
                            
                        }
                   
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    
jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct staff_veh, payee,voucher_no from ac_petty_cash where (voucher_no !='' and (voucher_no ilike '%PETT%') or (voucher_no ilike '%S_IMPREST%' )or (voucher_no ilike '%T_IMPREST%')) and status != 'Payment Done' and approved_surrender = false GROUP BY staff_veh, payee,voucher_no having sum(debit-credit) > 0 ORDER BY 1"));
                    com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct voucher_no from ac_petty_cash where voucher_no !='' and voucher_no ilike 'T_IMPREST%' or (voucher_no ilike 'PETT%' and status = 'Payment Issued') and approved_surrender = false GROUP BY voucher_no having sum(debit-credit) > 0 ORDER BY 1");
                    
                    for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                        for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                            jTable1.getModel().setValueAt(null,k,r);
                        }
                    }
                    unsurrenderedAmountTxt.setText(java.lang.Double.valueOf(getUnsurrenderedAmount).toString());
                    receiptNoTxt.setText("");
                    payeeTxt.setText("");
                    dealerCodeTxt.setText("-");
                    unsurrenderedAmountTxt.setText("0.00");
                    surrenderdAmountTxt.setText("0.00");
                    activityCodeTxt.setText("-");
                    jButton1.setEnabled(false);
                    jButton11.setEnabled(false);
                    surrenderRbtn.setSelected(true);
                    voucherNoSrchTxt.setText("");
                    //                crset1.execute();
                }   catch(java.sql.SQLException sq){
                    sq.printStackTrace();
                    try {
                        connectDB.rollback();
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());
                }
                
            } catch(java.lang.Exception ex) {
                System.out.println(ex.getMessage());
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : /n Receipt No. is mandatory.Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void departmentCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentCmbActionPerformed
        jButton1.setEnabled(true);
        jButton11.setEnabled(true);      // Add your handling code here:
    }//GEN-LAST:event_departmentCmbActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTable1.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable1.getSelectedRow(), 4);
        this.jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jCheckBox5.isSelected()){
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity WHERE activity ILIKE '%"+jTextField11111.getText()+"%' order by activity"));
            
            jSearchScrollPane11.setViewportView(jSearchTable11);
        }else{
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT activity,code from pb_activity where code ILIKE '"+jTextField11111.getText()+"%' order by code"));
            
            jSearchScrollPane11.setViewportView(jSearchTable11);
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane11.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);
    }
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
//        jTextField20.setText("");
//        jTextField16.setText("");
//        jTextField25.setText("");
//        jButton1111.setEnabled(true);
//        jTextField17.setText("");
//        jTextField3111.setText("");
//        jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
//        jTextField16.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
//        jTextField20.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
//        if(jCheckBox1.isSelected()){
//            try {
//                
//                java.sql.Statement stmt1 = connectDB.createStatement();
//                java.sql.ResultSet rset1 = stmt1.executeQuery("select patient_category,payment_mode from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' order by date desc limit 1");
//                while (rset1.next()){
//                    //    jTextField211.setText(rset1.getObject(1).toString());
//                    jTextField25.setText(rset1.getObject(1).toString());
//                }
//                
//                java.sql.Statement stmt11 = connectDB.createStatement();
//                java.sql.ResultSet rset11 = stmt11.executeQuery("select sum(credit - debit) from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' and visit_id = '"+jTextField16.getText()+"'");
//                while (rset11.next()){
//                    //    jTextField211.setText(rset1.getObject(1).toString());
//                    jTextField3111.setText(rset11.getObject(1).toString());
//                }
//            } catch (java.sql.SQLException sqe) {
//                sqe.printStackTrace();
//                //  System.out.println("Insert not successful");
//            }
//        }else{
//            try {
//                
//                java.sql.Statement stmt1 = connectDB.createStatement();
//                java.sql.ResultSet rset1 = stmt1.executeQuery("select patient_category,payment_mode from hp_patient_card where patient_no  ='"+jTextField36.getText()+"' order by date desc limit 1");
//                while (rset1.next()){
//                    //    jTextField211.setText(rset1.getObject(1).toString());
//                    jTextField25.setText(rset1.getObject(1).toString());
//                }
//                
//                java.sql.Statement stmt11 = connectDB.createStatement();
//                java.sql.ResultSet rset11 = stmt11.executeQuery("select sum(credit - debit) from hp_patient_card where patient_no  ='"+jTextField36.getText()+"'");
//                while (rset11.next()){
//                    //    jTextField211.setText(rset1.getObject(1).toString());
//                    jTextField3111.setText(rset11.getObject(1).toString());
//                }
//            } catch (java.sql.SQLException sqe) {
//                sqe.printStackTrace();
//                //  System.out.println("Insert not successful");
//            }
//            
//        }
        this.jSearchDialog1.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
//        if(jCheckBox1.isSelected()){
//            // jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT patient_no as scheme,patient_name as name from hp_admission where patient_no ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = true AND date_admitted > '01-01-2005' ORDER BY patient_name"));
//            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT patient_no,patient_name as name,visit_id from hp_admission where patient_no ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = true AND date_admitted > '01-01-2005' ORDER BY patient_no"));
//            
//            jSearchTable1.setShowHorizontalLines(false);
//            jSearchScrollPane1.setViewportView(jSearchTable1);
//        }else{
//            
//            if(jCheckBox2.isSelected()){
//                // jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select DISTINCT patient_no as scheme,patient_name as name from hp_admission where patient_no ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = true AND date_admitted > '01-01-2005' ORDER BY patient_name"));
//                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,'' as visit_id from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1111.getText()+"%'  order by second_name"));
//                
//                jSearchTable1.setShowHorizontalLines(false);
//                jSearchScrollPane1.setViewportView(jSearchTable1);
//            }
//        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        this.jSearchDialog1.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
        
    private void searchButton11Clicked() {
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
//        java.awt.Point point = this.jTextField36.getLocationOnScreen();
        
        jSearchDialog1.setSize(400,200);
        
      //  jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
    }
                
    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed
    private void populateTable11(java.lang.String requisitioner) {
        int j = 0;
        int i = 0;
        
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
           /* java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select count(requisition_no) from ac_petty_cash_requisition where requisitioner ='"+requisitioner+"' AND approved = true AND paid = false");
            
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
            */
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select purpose,reason,quantity,sum(credit),code from ac_petty_cash_requisition where requisition_no ='"+requisitioner+"' AND approved = true AND paid = false GROUP By purpose,reason,quantity,code");
            
            while (rsetTable11.next()) {
                
                System.out.println("Working at table row "+i);
                jTable1.setValueAt(rsetTable11.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable11.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable11.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable11.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable11.getObject(5), i, 4);
                ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                
                i++;
                
                //                i = i + i;
                //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
            }
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        surrenderdAmountTxt.setText("");
        dealerCodeTxt.setText("");
        jButton1.setEnabled(true);
        //   jTextField31.setText("");
        
        //        this.jComboBox131.setSelectedItem(null);
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3);
        surrenderdAmountTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        
        //   javax.swing.JFrame other = new OtherPayments(connectDB, pConnDB);
        //   other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        try{
            
            String glAcc = null;
            String Activity = null;
            String userName = null;
            String voucherNo = null;
            String transNo = null;
            String Stock = null;
            String voucNo = null;
            String accountCode = null;
            String TransNo = null;
            String glType = null;
            try{
                connectDB.setAutoCommit(false);
                jButton11ActionPerformed(evt);
                
              /*
                java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(currval('pet_voucher_no'),5,0)");
                while (rse1.next()){
               
                    voucherNo = rse1.getObject(1).toString();
                }*/
                if(activityCodeTxt.getText().equalsIgnoreCase("-")){
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select lpad(currval('pet_voucher_no')::text,5,0::text)");
                    while (rse1.next()){
                        
                        voucherNo = rse1.getObject(1).toString();
                        // transNo = rse1.getObject(2).toString();
                    }
                }else{
                    java.sql.Statement stm1 = connectDB.createStatement();
                    java.sql.ResultSet rse1 = stm1.executeQuery("select nextval('transaction_no_seq')");
                    while (rse1.next()){
                        
                        voucherNo = activityCodeTxt.getText();
                        // transNo = rse1.getObject(1).toString();
                    }
                    
                }
                connectDB.commit();
                connectDB.setAutoCommit(true);
                com.afrisoftech.reports.PettyNgoPayVoucherPdf policy = new com.afrisoftech.reports.PettyNgoPayVoucherPdf();
                policy.PettyNgoPayVoucherPdf(connectDB,voucherNo);
                
                for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                        jTable1.getModel().setValueAt(null,k,r);
                    }
                }
                jButton1.setEnabled(false);
                jButton11.setEnabled(false);
                //                crset1.execute();
                
            }   catch(java.sql.SQLException sq){
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
            
        } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void refundsRdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refundsRdBtnActionPerformed
        // TODO add your handling code here:
        
    if(refundsRdBtn.isSelected()==true){
    com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct voucher_no from ac_petty_cash where (voucher_no !='' and voucher_no ilike 'T_IMPREST%' or voucher_no ilike 'PETT%') and status != 'Payment Done' and approved_surrender = false GROUP BY voucher_no having sum(credit-debit) > 0 ORDER BY 1"); 
    }
   
    }//GEN-LAST:event_refundsRdBtnActionPerformed

    private void voucherNoSrchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voucherNoSrchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_voucherNoSrchTxtActionPerformed

    private void payeeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payeeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payeeTxtActionPerformed

    private void searchButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton6ActionPerformed
        // TODO add your handling code here:
//        searchButton6Clicked();
        
    }//GEN-LAST:event_searchButton6ActionPerformed
    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    
    
    public java.lang.String getCashPoint() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT cash_point FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                cash_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return cash_no;
        
    }
    
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
    }
    private void cmbox1ActionPerformed(java.awt.event.ActionEvent evt){
    }
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
    }
    
    /* public java.lang.String getShiftNumber() {
     
        try {
     
            java.sql.Statement stmt = connectDB.createStatement();
     
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
     
            while (rset.next()) {
     
                shift_no = rset.getString(1);
     
            }
     
        } catch(java.sql.SQLException sqlExec) {
     
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
     
        }
     
        return shift_no;
     
    }
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activityCodeTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JTextField dealerCodeTxt;
    private javax.swing.JComboBox departmentCmb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton411;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton512;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel13;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane13;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JTable jSearchTable13;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField111111;
    private javax.swing.JTextField jTextField11112;
    private javax.swing.JTextField jTextField11113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField361;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField payeeTxt;
    private javax.swing.JTextField receiptNoTxt;
    private javax.swing.JRadioButton refundsRdBtn;
    private javax.swing.JRadioButton replenishRbtn;
    private javax.swing.JRadioButton reverseRbtn;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JButton searchButton6;
    private javax.swing.JTextField searchSurrenderTxt;
    private javax.swing.JRadioButton surrenderRbtn;
    private javax.swing.JTextField surrenderdAmountTxt;
    private javax.swing.JTextField unsurrenderedAmountTxt;
    private javax.swing.JTextField voucherNoSrchTxt;
    // End of variables declaration//GEN-END:variables
    
}
