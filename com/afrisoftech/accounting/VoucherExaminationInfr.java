/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.accounting;

import static com.afrisoftech.accounting.VoucherApprintfr.requNo;
//import com.afrisoftech.votebook*;
import java.sql.Date;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author System Partners
 */
public class VoucherExaminationInfr extends javax.swing.JInternalFrame {
JComboBox cmboxs3 = new javax.swing.JComboBox();    /**
     * Creates new form SuppliesGuyApprovalintfr
     */

    /**
     * Creates new form SuppliesGuyApprovalintfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
      String voucherNo=null, voucherDate=null, vochno=null,decision=null,lpoNo=null;
    private boolean yes;
    private boolean yesI;
    public VoucherExaminationInfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
        cmboxs3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT DISTINCT subhead FROM subheads ORDER BY 1"));
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton13.setEnabled(false);
        jButton12.setEnabled(false);
//         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Save = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        dealerNameTxt = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        ApprovalTblscr1 = new javax.swing.JScrollPane();
        voucherTable = new com.afrisoftech.dbadmin.JTable();
        jLabel75 = new javax.swing.JLabel();
        jTextField45 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        ApprovalTblscr = new javax.swing.JScrollPane();
        staffpaymentApproval = new com.afrisoftech.dbadmin.JTable();
        jLabel76 = new javax.swing.JLabel();
        staffPaymentTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField11111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Voucher Examination");
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(824, 549));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        Save.setMnemonic('s');
        Save.setText("Pass Examination");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(Save, gridBagConstraints);

        resetbtn.setText("Remove Row");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(resetbtn, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(cancelbtn, gridBagConstraints);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel4.add(jButton1, gridBagConstraints);

        cancelbtn1.setMnemonic('l');
        cancelbtn1.setText("Reject");
        cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(cancelbtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel4, gridBagConstraints);

        jLabel5.setText("Total Approvals");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        getContentPane().add(jLabel5, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 0, 0));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jTextField1, gridBagConstraints);

        jButton10.setBackground(new java.awt.Color(153, 255, 255));
        jButton10.setForeground(new java.awt.Color(0, 102, 102));
        jButton10.setText("GRN");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        getContentPane().add(jButton10, gridBagConstraints);

        jButton12.setBackground(new java.awt.Color(153, 255, 255));
        jButton12.setForeground(new java.awt.Color(0, 102, 102));
        jButton12.setText("Acceptance Form");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        getContentPane().add(jButton12, gridBagConstraints);

        jButton11.setBackground(new java.awt.Color(153, 255, 255));
        jButton11.setForeground(new java.awt.Color(0, 102, 102));
        jButton11.setText("Payment Voucher");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 7;
        getContentPane().add(jButton11, gridBagConstraints);

        jButton13.setBackground(new java.awt.Color(153, 255, 255));
        jButton13.setForeground(new java.awt.Color(0, 102, 102));
        jButton13.setText("Imprest Form");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 7;
        getContentPane().add(jButton13, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Voucher Examination");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel1, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        /*     tableModel = jTable1.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        */
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date Due", "Invoice/Imprest No.", "Transaction Type", "Item", "Amount", "Amt Approved", "Approve ?", "Invoice/Imprest No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 250.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel1, gridBagConstraints);

        dealerNameTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dealerNameTxt.setForeground(new java.awt.Color(255, 0, 0));
        dealerNameTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dealerNameTxt.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(dealerNameTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 7.0;
        gridBagConstraints.weighty = 2.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Voucher here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel8.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        voucherTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"Select DISTINCT dealer as Supplier,voucher_no FROM ac_accounts_payable where approved=false and voucher_no!='' and examination=false and accountant=true and finance_head=true and voucher_no in (select voucher_no from ac_accounts_payable group by voucher_no having sum(credit-debit)>0  and sum(credit-debit) !=0 ) group by 1,2 order by dealer"));
        voucherTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voucherTableMouseClicked(evt);
            }
        });
        ApprovalTblscr1.setViewportView(voucherTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel8.add(ApprovalTblscr1, gridBagConstraints);

        jLabel75.setText("PV no");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel75, gridBagConstraints);

        jTextField45.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField45KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jTextField45, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel8, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Staff Payment/ Refunds", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel7.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel7.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        staffpaymentApproval.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND examination=false and commited=true and accountant=true and finance_head=true union select distinct payee as Imprest_Holder, final_voucher_no as voucher_no from ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false"));
        staffpaymentApproval.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffpaymentApprovalMouseClicked(evt);
            }
        });
        ApprovalTblscr.setViewportView(staffpaymentApproval);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel7.add(ApprovalTblscr, gridBagConstraints);

        jLabel76.setText("Voucher no:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel76, gridBagConstraints);

        staffPaymentTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                staffPaymentTxtKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(staffPaymentTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 2.0;
        getContentPane().add(jPanel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        getContentPane().add(jLabel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formInternalFrameOpened
   
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate


        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked

        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
       
        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void staffpaymentApprovalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffpaymentApprovalMouseClicked
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton12.setEnabled(false);
        jButton13.setEnabled(true);
        decision="two";
        try{    
          int ik= staffpaymentApproval.getSelectedRow();
           if(yesI==true){
               //begin here
          staffpaymentApproval.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND examination=false and commited=true and accountant=true and finance_head=true AND (final_voucher_no ilike '%"+staffPaymentTxt.getText()+"%' and final_voucher_no !='') union select distinct payee as Imprest_Holder, final_voucher_no as voucher_no from ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false AND final_voucher_no ilike '%"+staffPaymentTxt.getText()+"%'"));
       // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND final_voucher_no ilike '%"+jTextField46.getText()+"%' and examination=false and commited=true and accountant=true and finance_head=true union select distinct payee as Imprest_Holder, requisition_no as voucher_no from ac_petty_cash_requisition WHERE approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false and requisition_no ilike '%"+jTextField46.getText()+"%'"));
        yesI=false;
    }else if(yesI!=true){
         // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no as voucher_no FROM ac_bills  WHERE approved = false AND cancelled=false AND examination=true and commited=true and accountant=false and finance_head=false union select distinct payee as Imprest_Holder, requisition_no as voucher_no from ac_petty_cash_requisition WHERE approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false"));
         staffpaymentApproval.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false and final_voucher_no !='' AND cancelled=false AND examination=false and commited=true and accountant=true and finance_head=true union select distinct payee as Imprest_Holder, final_voucher_no as voucher_no from ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false"));
    }
          
          voucherNo=staffpaymentApproval.getValueAt(ik, 1).toString();
          
        String correct_name=staffpaymentApproval.getValueAt(ik, 0).toString();
                      if(correct_name.contains("'")){
                            correct_name=  staffpaymentApproval.getValueAt(ik, 0).toString().substring(0, staffpaymentApproval.getValueAt(ik, 0).toString().indexOf("'"));
                      }
                      else if(!correct_name.contains("'")){
                            correct_name=staffpaymentApproval.getValueAt(ik, 0).toString();
                      }
                       
                   
                    System.out.println("The correct name is "+correct_name);
if(staffpaymentApproval.getValueAt(ik, 1).toString().contains("PETT")||staffpaymentApproval.getValueAt(ik, 1).toString().contains("PERS_REQ")){
   jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date_due as Invoice_date, final_voucher_no as imprest_no, reason, description, credit as amount, 0.00 as approved_amount, false as approve, requisition_no"
     + " FROM ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and final_voucher_no  = '" +staffpaymentApproval.getValueAt(ik, 1)+ "' order by 2"));
   }else{
     jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT date_deu as date_due,voucher_no as imprest_no,description,reason,credit as amount, 0.00 as approved_amount, false as approve,final_voucher_no "
   + " FROM ac_bills WHERE approved = false AND cancelled=false AND examination=false and accountant=true and final_voucher_no  = '" +staffpaymentApproval.getValueAt(ik, 1)+ "' order by 2) union"
             + " (SELECT date_due as Invoice_date, final_voucher_no as imprest_no, reason, description, credit as amount, 0.00 as approved_amount, false as approve, requisition_no"
     + " FROM ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and final_voucher_no  = '" +staffpaymentApproval.getValueAt(ik, 1)+ "' order by 2)"));
    
   
}
   
   dealerNameTxt.setText(staffpaymentApproval.getValueAt(ik, 0).toString());
        }catch(Exception r){
            r.printStackTrace();
        }
    }//GEN-LAST:event_staffpaymentApprovalMouseClicked

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try{
            connectDB.setAutoCommit(false);
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                            if (jTable1.getModel().getValueAt(i, 6) != null) {
                                if (jTable1.getModel().getValueAt(i, 6).toString().equals("true")) {
                                    System.out.println("Value 1 " + jTable1.getModel().getValueAt(i, 4));
                                    System.out.println("Value 2 " + jTable1.getModel().getValueAt(i, 3));
                                    if (decision=="one") {
                                        requNo=jTable1.getModel().getValueAt(i, 7).toString();
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_accounts_payable set examination = true,journal_no='" + jTable1.getModel().getValueAt(i, 1) + "' WHERE voucher_no = '" + requNo + "' and invoice_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and dealer ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");

                                        pstmt.executeUpdate();
//                                        java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET examination=now(), examination_by=current_user where voucher_no = '" + requNo + "'  and supplier ILIKE '"+this.dealerNameTxt.getText()+"'");
//                                                    pstmt91.executeUpdate();
                                        Boolean inTracker=false;
                                             java.sql.Statement stmtf2 = connectDB.createStatement();
                                        java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='"+com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText())+"' and invoice_no='"+jTable1.getValueAt(i, 1).toString()+"'");
                                        if (rsetf2.getFetchSize()>0) {
                                            inTracker=true;
                                        }
                                        //start
                                String rectifyDate = "1900-01-01 00:00:00.000"; 
                                java.util.Date realDate = null;
                                        java.sql.Statement stmtr = connectDB.createStatement();
                                        java.sql.ResultSet rsetr = stmtr.executeQuery("select '"+rectifyDate+"'::date");
                                        while(rsetr.next()){
                                        realDate = rsetr.getDate(1);
                                        }
                                            if(inTracker==true){ 
                                                    java.sql.PreparedStatement pstmt191 = connectDB.prepareStatement("UPDATE ac_dashboard SET examination=now(), examination_by=current_user where voucher_no = '" + requNo + "'  and supplier ILIKE '"+com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText())+"'");
                                                    pstmt191.executeUpdate();
                                            }else{
                                               java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard (supplier,invoice_no,creditor_created,creditor_created_by,"
                                                       + "                                                                                 commited,commited_by, voucher_no,accountant,accountant_name,finance_head ,finance_head_officer,examination,examination_by) "
                                                       + "values(?,?,?,?,?,?,?,?,?,?,?,now(),current_user)");
                                                pstmt7.setString(1, dealerNameTxt.getText().toString());
                                                pstmt7.setObject(2, jTable1.getValueAt(i, 1));
                                                pstmt7.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                                pstmt7.setObject(4, "");
                                                pstmt7.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                                pstmt7.setObject(6, "");
                                                pstmt7.setObject(7, jTable1.getValueAt(i, 7));
                                                pstmt7.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                                pstmt7.setString(9, "");
                                                pstmt7.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                                pstmt7.setString(11, "");
                                                pstmt7.executeUpdate();
                                            }
                                         
                                            
                                    } else if (decision=="two") {
                                         requNo=jTable1.getModel().getValueAt(i, 7).toString();
                                         if(jTable1.getModel().getValueAt(i, 7).toString().contains("PETT") || jTable1.getModel().getValueAt(i, 7).toString().contains("PERS_REQ")){
                                            
                                               java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_petty_cash_requisition SET accountant = true  WHERE"
                                            + " (requisition_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' or final_voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "') and payee ILIKE '" + this.dealerNameTxt.getText() + "'");

                                        pstmt.executeUpdate();
                                        
                                        java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET examination=now(), examination_by=current_user where voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and supplier ILIKE '"+com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText())+"'");
                                            pstmt91.executeUpdate();
                                         }else{
                                         
                                             java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_bills set examination = true, examination_officer=current_user WHERE"
                                            + " voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and final_voucher_no = '" + jTable1.getModel().getValueAt(i, 7).toString() + "' and dealer ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");

                                        pstmt.executeUpdate();
                                        
                                        java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET examination=now(), examination_by=current_user where voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and invoice_no ='"+jTable1.getModel().getValueAt(i, 1).toString()+"' and supplier ILIKE '"+com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText())+"'");
                                            pstmt91.executeUpdate();
                                           
                                         }
                                    }
                                }
                            }

                        }
                        connectDB.commit();
                        connectDB.setAutoCommit(true);
//
                        //SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND examination=false and commited=true and accountant=true and finance_head=true
                        javax.swing.JOptionPane.showMessageDialog(this, "Voucher Examination Done Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        voucherTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"Select DISTINCT dealer as Supplier,voucher_no FROM ac_accounts_payable where approved=false and voucher_no!='' and examination=false and accountant=true and finance_head=true and voucher_no in (select voucher_no from ac_accounts_payable group by voucher_no having sum(credit-debit)>0  and sum(credit-debit) !=0 ) group by 1,2 order by dealer"));
                        staffpaymentApproval.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no as voucher_no FROM ac_bills  WHERE approved = false AND final_voucher_no !='' and cancelled=false AND examination=true and commited=true and accountant=false and finance_head=false union select distinct payee as Imprest_Holder, final_voucher_no as voucher_no from ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false"));
                        jButton1.doClick();
        }catch(Exception r){
            r.printStackTrace();
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
          int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        } 

    }//GEN-LAST:event_resetbtnActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
         for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
        }
         jTextField45.setText("");
         staffPaymentTxt.setText("");
         jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton12.setEnabled(false);
        jButton13.setEnabled(false);
         dealerNameTxt.setText("");
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void voucherTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voucherTableMouseClicked
        // TODO add your handling code here:
       jButton10.setEnabled(true);
        jButton11.setEnabled(true);
        jButton12.setEnabled(true);
        jButton13.setEnabled(false);
        decision="one";
        int iu=voucherTable.getSelectedRow();
        
   
       try{
    if(yes==true){
        voucherTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"Select DISTINCT dealer as Supplier,voucher_no FROM ac_accounts_payable where approved=false and voucher_no ilike '%"+jTextField45.getText()+"%' and examination=false and accountant=true and finance_head=true and voucher_no in (select voucher_no from ac_accounts_payable group by voucher_no having sum(credit-debit)>0  and sum(credit-debit) !=0 ) group by 1,2 order by dealer"));
        yes=false;
    }else if(yes!=true){        
  voucherTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"Select DISTINCT dealer as Supplier,voucher_no FROM ac_accounts_payable where approved=false and voucher_no!='' and examination=false and accountant=true and finance_head=true and voucher_no in (select voucher_no from ac_accounts_payable group by voucher_no having sum(credit-debit)>0  and sum(credit-debit) !=0 ) group by 1,2 order by dealer"));
    }
  voucherNo=voucherTable.getValueAt(iu, 1).toString();
        java.sql.Statement  st119= connectDB.createStatement();
            java.sql.ResultSet ress19= st119.executeQuery("select refno from ac_aie_commitment where voucher_no='"+voucherTable.getValueAt(iu, 1)+"'");
            while(ress19.next()){
                lpoNo=ress19.getString(1);
            }
        
           
//       jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select date_due,invoice_no,transaction_type,item,"
//                    + "(credit-debit) AS AMOUNT, 0.00 as approved_amount, false as approve,voucher_no FROM "
//                    + "ac_accounts_payable where approved=false and examination=false and committed=true and dealer ='" + ApprovalTbl1.getValueAt(iu, 0) + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 ) order by invoice_no"));
jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select date_due,invoice_no,transaction_type,item,(credit-debit) AS AMOUNT, 0.00 as approved_amount, false as approve,voucher_no FROM ac_accounts_payable where approved=false and examination=false and committed=true and dealer ='"+com.afrisoftech.lib.VoteBook.RemoveAppostroph(voucherTable.getValueAt(iu, 0).toString())+"' and voucher_no='"+voucherTable.getValueAt(iu, 1)+"' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0) order by invoice_no"));

                dealerNameTxt.setText(voucherTable.getValueAt(iu, 0).toString());
                iu=0;
       }catch(Exception e){
           e.printStackTrace();
       }
    }//GEN-LAST:event_voucherTableMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        /*
        if (jTable1.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();
        }else{
            */
            //if (jTable1.getSelectedColumn() == 4) {
                //   this.cmboxMouseClicked();
                System.out.println("Check here");
                if (jTable1.getValueAt(jTable1.getSelectedRow(), 2) != null) {
                    double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());

                    // if (jTable1.getValueAt(jTable1.getSelectedRow(), 2) != null){
                        //if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(),4).equals(true)){
                            /// if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
                                if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString().equalsIgnoreCase("true")) {

                                    jTable1.setValueAt(new java.lang.Float(floatCol2), jTable1.getSelectedRow(), 5);
                                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                                    this.jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                                   

                            } else {
                                System.out.println("Check here");
                                // if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(),4).equals(false)){
                                    if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.FALSE) {
                                        System.out.println("Check here too");
                                        jTable1.setValueAt(new java.lang.Float(0.00), jTable1.getSelectedRow(), 5);
                                        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                                        this.jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                                       
                                }
                            }
                        }
                        // }
                    // }
                // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cancelbtn.doClick();
        //ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no as voucher_no FROM ac_bills  WHERE approved = false AND cancelled=false AND examination=true and commited=true and accountant=false and finance_head=false union select distinct payee as Imprest_Holder, requisition_no as voucher_no from ac_petty_cash_requisition WHERE approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false"));
        voucherTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"Select DISTINCT dealer as Supplier,voucher_no FROM ac_accounts_payable where approved=false and voucher_no!='' and examination=false and accountant=true and finance_head=true and voucher_no in (select voucher_no from ac_accounts_payable group by voucher_no having sum(credit-debit)>0  and sum(credit-debit) !=0 ) group by 1,2 order by dealer"));
        staffpaymentApproval.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND examination=false and commited=true and accountant=true and finance_head=true union select distinct payee as Imprest_Holder, final_voucher_no as voucher_no from ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false"));
                      
//        
//        ApprovalTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select dealer as Supplier FROM "
//    + "ac_accounts_payable where approved=false and voucher_no!='' and examination=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 ) order by invoice_no"));
//ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT dealer as Imprest_Holder FROM ac_bills WHERE approved = false AND examination=false and commited=true"));
//
//        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try{
            java.sql.Statement  st119= connectDB.createStatement();
            java.sql.ResultSet ress19= st119.executeQuery("select grn_no from st_stock_cardex where order_no= '"+lpoNo+"'");
            while(ress19.next()){
                com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf policy1 = new com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf();
                policy1.MtrhSthirteenPdf(connectDB,lpoNo,dealerNameTxt.getText(),ress19.getString(1));

            }
        }catch(Exception t){
            t.printStackTrace();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try{
            java.sql.Statement  st119= connectDB.createStatement();
            java.sql.ResultSet ress19= st119.executeQuery("select cert_no from st_certificate where lpo= '"+lpoNo+"'");
            while(ress19.next()){

                com.afrisoftech.hospinventory.ComplianceCertificatePdf policy = new com.afrisoftech.hospinventory.ComplianceCertificatePdf();
                policy.ComplianceCertificatePdf(connectDB,ress19.getString(1),lpoNo);

            }
        }catch(Exception t){
            t.printStackTrace();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:

        com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();

        policy.VoucherMtrhPdf(connectDB,voucherNo);

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.PettyCashVoucherPdf policy = new com.afrisoftech.votebook.PettyCashVoucherPdf();

         policy.PettyCashVoucherPdf(connectDB, voucherNo);  
    }//GEN-LAST:event_jButton13ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        // TODO add your handling code here:
        String reason= JOptionPane.showInputDialog(null,"Input Reason for Rejecting ","Reject",JOptionPane.OK_CANCEL_OPTION);
        if(JOptionPane.OK_OPTION==0){
            try{
                connectDB.setAutoCommit(false);
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    if (jTable1.getModel().getValueAt(i, 6) != null) {
                        if (jTable1.getModel().getValueAt(i, 6).toString().equals("true")) {
                            System.out.println("Value 1 " + jTable1.getModel().getValueAt(i, 4));
                            System.out.println("Value 2 " + jTable1.getModel().getValueAt(i, 3));
                            if (decision=="one") {
                                requNo=jTable1.getModel().getValueAt(i, 7).toString();
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_accounts_payable set finance_head=false,journal_no='" + jTable1.getModel().getValueAt(i, 1) + "' WHERE voucher_no = '" + requNo + "' and invoice_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and dealer ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");

                                pstmt.executeUpdate();

                            } else if (decision=="two") {
                                requNo=jTable1.getModel().getValueAt(i, 7).toString();
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_bills set finance_head=false WHERE"
                                    + " voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and final_voucher_no = '" + jTable1.getModel().getValueAt(i, 7).toString() + "' and dealer ILIKE '" +com.afrisoftech.lib.VoteBook.RemoveAppostroph( this.dealerNameTxt.getText()) + "'");

                                pstmt.executeUpdate();

                                //                                        java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET finance_head=now(),finance_head_officer=current_user where voucher_no = '" + requNo + "' and invoice_no ='"+jTable1.getModel().getValueAt(i, 1).toString()+"' and supplier ILIKE '"+this.jTextField2.getText()+"'");
                                //                                            pstmt91.executeUpdate();
                            }
                        }
                    }

                }
                connectDB.commit();
                connectDB.setAutoCommit(true);

                javax.swing.JOptionPane.showMessageDialog(this, "Successfully Returned to Sender", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                voucherTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Supplier,voucher_no FROM ac_accounts_payable where approved=false and voucher_no!='' and examination=false and accountant=true and finance_head=false and voucher_no in (select voucher_no from ac_accounts_payable group by voucher_no having sum(credit-debit)>0  and sum(credit-debit) !=0 ) group by 1,2 order by dealer"));
                staffpaymentApproval.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND examination=false and commited=true and accountant=true and finance_head=false"));
                jButton1.doClick();
            }catch(Exception r){
                r.printStackTrace();
            }
        }
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void jTextField45KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField45KeyPressed
        // TODO add your handling code here:
        yes=true;
       // ApprovalTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,invoice_no from ac_accounts_payable where transaction_type='Raise Invoice' and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) and invoice_no ilike '%"+jTextField45.getText()+"%' union select distinct dealer,'DIR_PUR' from ac_accounts_payable where transaction_type='Stock Delivery' and approved=false and order_no ilike '%"+jTextField45.getText()+"%'  and committed=false"));
        voucherTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"Select DISTINCT dealer as Supplier,voucher_no FROM ac_accounts_payable where approved=false and voucher_no ilike '%"+jTextField45.getText()+"%' and examination=false and accountant=true and finance_head=true and voucher_no in (select voucher_no from ac_accounts_payable group by voucher_no having sum(credit-debit)>0  and sum(credit-debit) !=0 ) group by 1,2 order by dealer"));
    }//GEN-LAST:event_jTextField45KeyPressed

    private void staffPaymentTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_staffPaymentTxtKeyPressed
        // TODO add your handling code here:
      yesI=true;
      
        staffpaymentApproval.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND final_voucher_no !='' and cancelled=false AND examination=false and commited=true and accountant=true and finance_head=true AND final_voucher_no ilike '%"+staffPaymentTxt.getText()+"%' union select distinct payee as Imprest_Holder, final_voucher_no as voucher_no from ac_petty_cash_requisition WHERE final_voucher_no != '' and commited=true and approved = false AND cancelled=false AND examination=true and accountant=false and finance_head=false AND final_voucher_no ilike '%"+staffPaymentTxt.getText()+"%'"));
       // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT dealer as Imprest_Holder,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND final_voucher_no ilike '%"+jTextField46.getText()+"%' and examination=false and commited=true and accountant=true and finance_head=true"));
    }//GEN-LAST:event_staffPaymentTxtKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ApprovalTblscr;
    private javax.swing.JScrollPane ApprovalTblscr1;
    private javax.swing.JButton Save;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JTextField dealerNameTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField45;
    private javax.swing.JButton resetbtn;
    private javax.swing.JTextField staffPaymentTxt;
    private javax.swing.JTable staffpaymentApproval;
    private javax.swing.JTable voucherTable;
    // End of variables declaration//GEN-END:variables
}
