/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class GeneratingVoucherCrdNote extends javax.swing.JInternalFrame {

    /**
     * Creates new form loanpymntintfr
     */
    javax.swing.table.TableModel tableModel = null;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    public static String requNo = null;

    public GeneratingVoucherCrdNote(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        
        lpolsoCbx.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton51 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        dealerNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        supplierChkbx = new javax.swing.JCheckBox();
        imprestChkbx = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        lpolsoCbx = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        approvalsTbl = new com.afrisoftech.dbadmin.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        jTextField113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField113ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField1111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Generating  a Payment voucher ");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jXTitledPanel1.setTitle("Tick the invoices  and Credit Notes You want to generate a voucher");
        jXTitledPanel1.getContentContainer().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Supplier/Staff Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        dealerNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(dealerNameTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jLabel4.setText("Acc. No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel4, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(jTextField2, gridBagConstraints);

        jLabel1.setText("Period To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Period From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(datePicker2, gridBagConstraints);

        buttonGroup1.add(supplierChkbx);
        supplierChkbx.setText("Supplier/Creditor");
        supplierChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        supplierChkbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                supplierChkbxItemStateChanged(evt);
            }
        });
        supplierChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(supplierChkbx, gridBagConstraints);

        buttonGroup1.add(imprestChkbx);
        imprestChkbx.setText("Imprest");
        imprestChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        imprestChkbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                imprestChkbxItemStateChanged(evt);
            }
        });
        imprestChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(imprestChkbx, gridBagConstraints);

        jLabel8.setText("LPO/LSO Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel8, gridBagConstraints);

        lpolsoCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        lpolsoCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lpolsoCbxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(lpolsoCbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jXTitledPanel1.getContentContainer().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        approvalsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Date Due", "Invoice No", "Transaction Type", "Item", "Amt", "Approve", "Invoice No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        approvalsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                approvalsTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(approvalsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 250.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jXTitledPanel1.getContentContainer().add(jPanel2, gridBagConstraints);

        jLabel5.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jXTitledPanel1.getContentContainer().add(jLabel5, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jXTitledPanel1.getContentContainer().add(jTextField1, gridBagConstraints);

        jButton1.setMnemonic('r');
        jButton1.setText("Generate Voucher");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.getContentContainer().add(jButton1, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.getContentContainer().add(jButton4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.getContentContainer().add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.getContentContainer().add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        getContentPane().add(jXTitledPanel1, gridBagConstraints);

        setBounds(0, 0, 697, 390);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
       

        jSearchDialog.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = approvalsTbl.getLocationOnScreen();
        jSearchDialog.setSize(400, 200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);
    }
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select invoice_no,date as date,sum(credit-debit) as amount FROM ac_accounts_payable WHERE invoice_no ILIKE '" + jTextField1111.getText() + "%' AND dealer = '" + dealerNameTxt.getText() + "' and paid = false and approved = false GROUP BY invoice_no,date order by invoice_no"));
        jSearchScrollPane.setViewportView(jSearchTable);
        //  System.out.println("Cannot sort out");

        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (this.jTextField113.getCaretPosition() < 3) {
            System.out.print("Nothing");
        } else {
            //if (supplierChkbx.isSelected()) {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT code,supplier_name as name from st_suppliers where supplier_name ILIKE '%" + jTextField113.getText() + "%' order by supplier_name"));
//            } else if (imprestChkbx.isSelected()) {
//                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT employee_no, first_name||' '||middle_name||' '||last_name as name FROM master_file WHERE first_name||' '||middle_name||' '||last_name ilike '%" + jTextField113.getText() + "%' order by 2"));
//            }
                

            jSearchScrollPane2.setViewportView(jSearchTable2);
            System.out.println("Cannot sort out");

        } // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt.getLocationOnScreen();

        jSearchDialog2.setSize(600, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    private void populateTable1(java.lang.String patient_no) {      
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(supplier_name) FROM st_suppliers WHERE supplier_name = '" + patient_no + "'");

            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
///select date_due,invoice_no,transaction_type,item,(credit-debit) AS AMOUNT,approved 
               // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select invoice_no,date_due,credit,approved FROM ac_accounts_payable where approved = 'false' and paid = 'false' and dealer ='" + patient_no + "' AND (transaction_type = 'INV' OR transaction_type = 'Raise Invoice' OR transaction_type = 'Stock Delivery') AND date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "'");
 java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery(""
         + "select date_due,invoice_no, transaction_type,item,(credit-debit) AS AMOUNT FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' and dealer ='" + patient_no + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )");
      //   + " date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "'");
//select date_due,invoice_no, transaction_type,item,(credit-debit) AS AMOUNT FROM ac_accounts_payable where  dealer ='SURGILINKS LIMITED' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    approvalsTbl.setValueAt(rsetTable1.getObject(1), i, 0);
                    approvalsTbl.setValueAt(rsetTable1.getObject(2), i, 1);
                    approvalsTbl.setValueAt(rsetTable1.getObject(3), i, 2);
                    approvalsTbl.setValueAt(rsetTable1.getObject(4), i, 3);
                    approvalsTbl.setValueAt(rsetTable1.getObject(5), i, 4);
                     

                    i++;

                }
            }

        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }


    }

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        dealerNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        //  approvalsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT invoice_no,date as date,sum(credit-debit) as amount,0::numeric as Amt_paid, null::boolean as approve FROM ac_accounts_payable WHERE dealer ILIKE '"+jTextField9.getText()+"' AND paid = false AND approved = false AND date BETWEEN '"+jXDatePicker1.getDate()+"' AND '"+jXDatePicker2.getDate()+"' AND (transaction_type = 'INV' OR transaction_type = 'Raise Invoice' OR transaction_type = 'Stock Delivery') GROUP BY invoice_no,date,approved ORDER BY date"));
      
                //approvalsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select date_due,invoice_no, transaction_type,item,(credit-debit) AS AMOUNT, 0.00 as approved_amount, false as approve,invoice_no FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' and dealer ='" + dealerNameTxt.getText() + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )"));
            jSearchDialog2.dispose();
          lpolsoCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(select '-' UNION select order_no FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' and dealer ='" + dealerNameTxt.getText() + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )) order by 1"));
         // populating the LPO and LSO Combo box
      
         
        //lpolsoCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select order_no FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' and dealer ='" + dealerNameTxt.getText() + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )"));
            

    
        
       
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jTextField113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField113ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       /////////generating a voucher 
        try{
                                String date_now=null;
                            java.sql.Statement stmt1q1 = connectDB.createStatement();
                            java.sql.ResultSet ress=stmt1q1.executeQuery("select current_date::date");
                            
                            while(ress.next()){
                               
                                date_now=ress.getString(1);
                                
                            }
                            
                             String transaction_nos=null;
         for (int i = 0; i < approvalsTbl.getRowCount(); i++) {
                    if (approvalsTbl.getModel().getValueAt(i, 0) != null) {
                        if (approvalsTbl.getModel().getValueAt(i, 6).toString().equals("true")) {
                            System.out.println("Value 1 " + approvalsTbl.getModel().getValueAt(i, 4));
                            System.out.println("Value 2 " + approvalsTbl.getModel().getValueAt(i, 3));
                           
                            
                            //}
                           java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("INSERT INTO ac_merge_vouchers( order_no, invoice_no, voucher_no, voucher_generated, date_generated,transaction_no) VALUES (?, ?, ?, ?, ?,?)");
                                    pstmt1q1.setObject(1, lpolsoCbx.getSelectedItem().toString());
                                    pstmt1q1.setString(2, approvalsTbl.getModel().getValueAt(i, 1).toString());
                                    pstmt1q1.setString(3, "");
                                    pstmt1q1.setBoolean(4,true);
                                    pstmt1q1.setObject(5, date_now);
                                    
                                    
                                     
                                    /////getting the transection no
                                    java.sql.Statement stmt1q = connectDB.createStatement();
                                java.sql.ResultSet resst=stmt1q.executeQuery("select invoice_no,reference_no, transaction_type,item,(credit-debit) AS AMOUNT, 0.00 as approved_amount, false as approve FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND  '" + datePicker2.getDate() + "' and dealer ='" + dealerNameTxt.getText() + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 ) and order_no='"+lpolsoCbx.getSelectedItem()+"' and invoice_no='"+approvalsTbl.getModel().getValueAt(i, 1).toString()+"' ");
                          
                                 while(resst.next()){
                                    transaction_nos=resst.getString("reference_no");
                                 }
                                 
                                    pstmt1q1.setObject(6,transaction_nos);
                                    pstmt1q1.executeUpdate();
                      
                      
                        }
                        else{
                        
                             java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("INSERT INTO ac_merge_vouchers( order_no, invoice_no, voucher_no, voucher_generated, date_generated,transaction_no) VALUES (?, ?, ?, ?, ?,?)");
                                    pstmt1q1.setObject(1, lpolsoCbx.getSelectedItem().toString());
                                    pstmt1q1.setString(2, approvalsTbl.getModel().getValueAt(i, 1).toString());
                                    pstmt1q1.setString(3, "");
                                    pstmt1q1.setBoolean(4,false);
                                    pstmt1q1.setObject(5, date_now);
                                    
                                    
                                      //String transaction_nos=null;
                                    /////getting the transection no
                                    java.sql.Statement stmt1q = connectDB.createStatement();
                                java.sql.ResultSet resst=stmt1q.executeQuery("select invoice_no,reference_no, transaction_type,item,(credit-debit) AS AMOUNT, 0.00 as approved_amount, false as approve FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND  '" + datePicker2.getDate() + "' and dealer ='" + dealerNameTxt.getText() + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 ) and order_no='"+lpolsoCbx.getSelectedItem()+"' and invoice_no='"+approvalsTbl.getModel().getValueAt(i, 1).toString()+"' ");
                          
                                 while(resst.next()){
                                    transaction_nos=resst.getString("reference_no");
                                 }
                                 
                                    pstmt1q1.setObject(6,transaction_nos);
                                    pstmt1q1.executeUpdate();
                      
                        
                        }
                    }
                }
           }
                            catch(Exception escv){  
                            escv.printStackTrace();
                            System.out.println(escv);
                            }
        
               
        
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void imprestChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestChkbxActionPerformed

     //  jButton2.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_imprestChkbxActionPerformed

    private void supplierChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierChkbxActionPerformed
     // jButton2.setEnabled(true);
      // TODO add your handling code here:
    }//GEN-LAST:event_supplierChkbxActionPerformed

    private void lpolsoCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lpolsoCbxItemStateChanged
       
        if(dealerNameTxt.getText().toString()!=null){
         ///populating  the JTable 1
       // approvalsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select date_due,invoice_no, transaction_type,item,(credit-debit) AS AMOUNT, 0.00 as approved_amount, false as approve,invoice_no FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' and dealer ='" + dealerNameTxt.getText() + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 ) and order_no='"+lpolsoCbx.getSelectedItem()+"'"));
            
            approvalsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select st.date ,ac.invoice_no, st.transaction_type,st.item,st.debit AS AMOUNT, 0.00 as approved_amount, false as approve,ac.invoice_no from st_stock_cardex st,ac_accounts_payable  ac where st.order_no=ac.order_no and st.approved=true and ac.order_no='"+lpolsoCbx.getSelectedItem()+"'  and st.date BETWEEN '" + datePicker1.getDate() + "'  AND  '" + datePicker2.getDate() + "' and dealer ='" + dealerNameTxt.getText() + "' "));
        // Add your handling code here:
        }
        else
        {
        JOptionPane.showMessageDialog(null,"You need to choose the Dealer's Name","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
        
        }
    }//GEN-LAST:event_lpolsoCbxItemStateChanged

    private void approvalsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_approvalsTblMouseClicked
       
        System.out.println("Check here");
        if (approvalsTbl.getValueAt(approvalsTbl.getSelectedRow(), 2) != null) {
            double floatCol2 = java.lang.Double.parseDouble(approvalsTbl.getValueAt(approvalsTbl.getSelectedRow(), 4).toString());

            // if (approvalsTbl.getValueAt(approvalsTbl.getSelectedRow(), 2) != null){
            //if (approvalsTbl.getModel().getValueAt(approvalsTbl.getSelectedRow(),4).equals(true)){ 
            /// if (Boolean.valueOf(approvalsTbl.getModel().getValueAt(approvalsTbl.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
            if (approvalsTbl.getModel().getValueAt(approvalsTbl.getSelectedRow(), 6).toString().equalsIgnoreCase("true")){ 
                
                approvalsTbl.setValueAt(new java.lang.Float(floatCol2), approvalsTbl.getSelectedRow(), 5);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(approvalsTbl, 5);
                this.jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                 approvalsTbl.setValueAt(approvalsTbl.getModel().getValueAt(approvalsTbl.getSelectedRow(), 1), approvalsTbl.getSelectedRow(), 7);
                // }

            } else {
                System.out.println("Check here");
                // if (approvalsTbl.getModel().getValueAt(approvalsTbl.getSelectedRow(),4).equals(false)){
                if (Boolean.valueOf(approvalsTbl.getModel().getValueAt(approvalsTbl.getSelectedRow(), 6).toString()) == java.lang.Boolean.FALSE) {
                    System.out.println("Check here too");
                    approvalsTbl.setValueAt(new java.lang.Float(0.00), approvalsTbl.getSelectedRow(), 5);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(approvalsTbl, 5);
                    this.jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    // }
                }
            }
        }
    }//GEN-LAST:event_approvalsTblMouseClicked

    private void supplierChkbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_supplierChkbxItemStateChanged
       if(supplierChkbx.isSelected()){
       lpolsoCbx.setEnabled(true);
       
       }else{
        lpolsoCbx.setEnabled(false);
       
       }
           
    }//GEN-LAST:event_supplierChkbxItemStateChanged

    private void imprestChkbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_imprestChkbxItemStateChanged
        // TODO add your handling code here:
        if(imprestChkbx.isSelected()){
       lpolsoCbx.setEnabled(false);
       jLabel8.setEnabled(false);
       
       }else{
        lpolsoCbx.setEnabled(true);
       
       }
        
    }//GEN-LAST:event_imprestChkbxItemStateChanged
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable approvalsTbl;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JTextField dealerNameTxt;
    private javax.swing.JCheckBox imprestChkbx;
    private javax.swing.JButton jButton1;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField6;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;
    private javax.swing.JComboBox lpolsoCbx;
    private javax.swing.JButton searchButton;
    private javax.swing.JCheckBox supplierChkbx;
    // End of variables declaration//GEN-END:variables
}
