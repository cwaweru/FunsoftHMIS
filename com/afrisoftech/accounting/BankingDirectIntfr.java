
/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class BankingDirectIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    java.sql.Connection connectDB = null;
    
    javax.swing.table.TableModel tableModel = null;
    
    javax.swing.JSpinner beginDateSpinner = null;
    
    javax.swing.JSpinner endDateSpinner = null;
    
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public BankingDirectIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField71 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Banking");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here to enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear fields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close ");
        jButton4.setSelected(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select amount to bank", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        jTextField71.setEditable(false);
        jTextField71.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField71.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField71, gridBagConstraints);

        jLabel9.setText("Acc. No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel2.setText("Account  Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel2, gridBagConstraints);

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT bank_account_name from ac_banks_setup order by  bank_account_name"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jComboBox2, gridBagConstraints);

        jLabel1.setText("Branch");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel3.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField1, gridBagConstraints);

        jTextField2.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField2.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel3.add(jTextField2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel5.setText("Date Banked");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker3, gridBagConstraints);

        jLabel3.setText("Cheque No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField3, gridBagConstraints);

        jLabel11.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT initcap(payment_mode) as payment_mode from pb_paymentmodes order by payment_mode"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBox1, gridBagConstraints);

        jLabel4.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        setBounds(0, 0, 697, 276);
    }// </editor-fold>//GEN-END:initComponents
 /*   private void populateTable111() {
        int j = 0;
        int i = 0;
  
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
  
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select count(debit) from ac_cash_collection where withdrawn = false and reconciled = true and transaction_type = 'Receipts' and debit > 0 and date_reconcilled between '"+this.datePicker1.getDate().toString()+"' and  '"+this.datePicker2.getDate().toString()+"'");
  
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
  
                java.sql.Statement stmtTable11 = connectDB.createStatement();
                java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select cheque_no,payment_mode, sum(debit- credit) as amount,null::boolean as banked from ac_cash_collection where debit > 0 and date_reconcilled between '"+this.datePicker1.getDate().toString()+"' and  '"+this.datePicker2.getDate().toString()+"' group by cheque_no,payment_mode");
  
                //  java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT voucher_no, sum(credit),sum(credit-debit),0.00 FROM ac_bills WHERE dealer = '"+patient_name+"' GROUP BY voucher_no order BY voucher_no");
  
                while (rsetTable11.next()) {
  
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable11.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable11.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable11.getObject(4), i, 3);
                    // jTable11.setValueAt(rsetTable11.getObject(5), i, 5);
                    ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
  
                    i++;
  
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
        } catch(java.sql.SQLException sqlExec) {
  
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
  
        }
    }    */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        this.dispose();
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jButton1.setEnabled(true);
        this.jLabel7.setText("");
        
        int rowsNo = 0;
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select DISTINCT bank_account_no,bank_name,gl_code from ac_banks_setup where bank_account_name ='"+jComboBox2.getSelectedItem()+"'");
            while (rset.next()){
                
                jTextField71.setText(rset.getObject(1).toString());
                jTextField1.setText(rset.getObject(2).toString());
                jTextField2.setText(rset.getObject(3).toString());
            }
            
            
        }catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sqlex.getMessage());
            
        }
        
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        
        jTextField1.setText("");
        jTextField71.setText("");
        jComboBox2.setSelectedItem(null);
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+datePicker3.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker3.getDate().before(periodFrom) || datePicker3.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql.toString());
            
            
            String glAcc = null;
            String Activity = null;
            String userName = null;
            String cpoint = null;
            String shift = null;
            String slipNo = null;
            String actCode = null;
            String glCode = null;
            String bankAcc = null;
            String glCode1 = null;
            String bankAcc1 = null;
            String transNo = null;
            String payMode = null;
            String patCat = null;
            String patientAcc = null;
            String cardNo = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String actNames = null;
            String user = null;
            try {
                connectDB.setAutoCommit(false);
                int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are the amounts okay ?", "Caution before Finalising Invoice!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
                
                if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                    java.sql.Statement stm1 = connectDB.createStatement();
                    
                    java.sql.Statement pss = connectDB.createStatement();
                    java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                    while (rss.next()){
                        transNo = rss.getObject(1).toString();
                    }
                    java.sql.Statement pssm = connectDB.createStatement();
                    java.sql.ResultSet rssm = pssm.executeQuery("select nextval('slip_no_seq')");
                    while (rssm.next()){
                        slipNo = rssm.getObject(1).toString();
                    }
                    java.sql.Statement pss1 = connectDB.createStatement();
                    java.sql.ResultSet rsts = pss1.executeQuery("select code,activity,current_user from pb_activity where activity_category ='RC'");
                    while (rsts.next()){
                        actCode = rsts.getObject(1).toString();
                        actNames = rsts.getObject(2).toString();
                    }
                    
                    java.sql.Statement pss11 = connectDB.createStatement();
                    java.sql.ResultSet rsts1 = pss11.executeQuery("select current_user");
                    while (rsts1.next()){
                        user = rsts1.getObject(1).toString();
                    }
                    
                    
                    
                    if (this.jComboBox2.getSelectedItem().toString().toUpperCase().startsWith("PETTY")){
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity from pb_activity where activity_category = 'PC'");
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            Activity = rse121.getObject(2).toString();
                            
                        }
                        
                        
                        
                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?)");
                        pstmt21.setObject(1,glAcc);
                        pstmt21.setString(2,Activity);
                        pstmt21.setString(3,userName);
                        pstmt21.setObject(4,"Petty Cash");
                        pstmt21.setDouble(5,java.lang.Double.valueOf(jTextField4.getText()));
                        pstmt21.setDouble(6,0.00);
                        pstmt21.setDate(7,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                        pstmt21.setString(8,userName);
                        pstmt21.setBoolean(9,true);
                        pstmt21.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                        pstmt21.setString(10,slipNo);
                        pstmt21.setBoolean(12,true);
                        pstmt21.setString(13,"Accounts");
                        pstmt21.setString(14,userName);
                        pstmt21.setObject(15,"Petty Cash Reimbursment From Receipt Control");
                        pstmt21.setString(16,"");
                        pstmt21.setString(17,transNo);
                        pstmt21.setString(18,cpoint);
                        pstmt21.setString(19,shift);
                        pstmt21.executeUpdate();
                    }else{
                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        pstmt21.setObject(1,actCode);
                        pstmt21.setString(3,jComboBox1.getSelectedItem().toString());
                        pstmt21.setString(2,"Banking");
                        pstmt21.setString(4,jComboBox1.getSelectedItem().toString());
                        pstmt21.setString(5,"");
                        pstmt21.setString(6,"");
                        pstmt21.setString(7,"");
                        pstmt21.setString(8,"");
                        pstmt21.setObject(10,jTextField3.getText());
                        pstmt21.setString(9,jTextField2.getText());
                        pstmt21.setString(12,"");
                        pstmt21.setString(11,slipNo);
                        pstmt21.setString(13,"");
                        pstmt21.setString(15,jComboBox2.getSelectedItem().toString());
                        if (jTextField71.getText().equals("")){
                            javax.swing.JOptionPane.showMessageDialog(this,"account_name missing","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else{
                            pstmt21.setString(14,jTextField71.getText());
                        }
                        pstmt21.setObject(16,jTextField1.getText());
                        pstmt21.setString(17,"Banking");
                        pstmt21.setDouble(18,java.lang.Double.valueOf(jTextField4.getText()));
                        pstmt21.setDate(20,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                        pstmt21.setDouble(19,0.00);
                        pstmt21.setString(21,transNo);
                        pstmt21.setBoolean(22,false);
                        pstmt21.setBoolean(23,false);
                        pstmt21.setBoolean(24,false);
                        pstmt21.setDate(25,null);
                        pstmt21.setDate(26,null);
                        pstmt21.setDate(27,null);
                        pstmt21.setString(28,user);
                        pstmt21.setObject(29,null);
                        pstmt21.setString(30,"");
                        pstmt21.executeUpdate();
                        
                    }
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                    pstmt2.setObject(1,jTextField2.getText());
                    pstmt2.setObject(3,"");
                    pstmt2.setString(2,jComboBox2.getSelectedItem().toString());
                    pstmt2.setString(5,jComboBox1.getSelectedItem().toString());
                    pstmt2.setString(4,user);
                    pstmt2.setString(6,"");
                    pstmt2.setString(7,"");
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,"");
                    pstmt2.setString(10,actCode);
                    pstmt2.setObject(11,jTextField3.getText());
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jComboBox1.getSelectedItem().toString());
                    pstmt2.setString(15,"Banking");
                    pstmt2.setDouble(17,java.lang.Double.valueOf(jTextField4.getText()));
                    pstmt2.setDouble(16,0.00);
                    pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                    pstmt2.setString(19,""+transNo+"");
                    pstmt2.setBoolean(20,false);
                    pstmt2.setBoolean(21,true);
                    pstmt2.setBoolean(22,false);
                    pstmt2.setString(23,user);
                    pstmt2.setString(24,"");
                    pstmt2.setString(25,"");
                    pstmt2.setDate(26,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                    pstmt2.executeUpdate();
                    
                    
                }
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                
                jTextField1.setText("");
                jTextField71.setText("");
                jComboBox2.setSelectedItem(null);
                
                // crset4.execute();
            }catch(java.sql.SQLException sq){
                sq.printStackTrace();
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }
         /*           java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_cash_collection SET reconcilled = true,date_reconcilled = current_date where shift_no = '"+this.jComboBox2.getSelectedItem().toString()+"'");
                    pstmt.executeUpdate();
                    jLabel7.setForeground(java.awt.Color.blue);
                    jLabel7.setText("Insert successful");
          
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    jButton1.setEnabled(false);
                }
            }
        }   catch(java.sql.SQLException sq){
          
            try {
          
                connectDB.rollback();
          
            } catch(java.sql.SQLException sql) {
          
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
          
            }
          
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
          
            System.out.println(sq.getMessage());
        }
        /*
       try{
             connectDB.setAutoCommit(false);
            // jButton5ActionPerformed(evt);
          
           java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into banking values(?,?,?,?)");
              for (int i = 0; i < jTable1.getRowCount(); i++){
               if (jTable1.getModel().getValueAt(i,6) != null){
            //pstmt7.setString(1,jTextField12.getText());
            pstmt7.setObject(1,jTable1.getValueAt(i,2).toString());
            pstmt7.setObject(2,jTable1.getValueAt(i,5).toString());
            pstmt7.setObject(3,jTable1.getValueAt(i,6).toString());
            pstmt7.setObject(4,jTable1.getValueAt(i,7).toString());
          
               }
              }
           pstmt7.executeUpdate();
          
            connectDB.commit();
            connectDB.setAutoCommit(true);
          
             this.getContentPane().removeAll();
            this.initComponents();
             jLabel7.setForeground(java.awt.Color.blue);
            jLabel7.setText("Insert successful");
          
             }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                  try {
                  connectDB.rollback();
                  }catch (java.sql.SQLException sql){
                  javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
              }
            System.out.println(sq.getMessage());
              }
          
          
          */
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
  /*
     public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
   
         double totals = 0.00;
   
         int i = 0;
   
         for (int j = 0; j < jTable1.getRowCount(); j++) {
   
             System.out.println(jTable1.getModel().getValueAt(j, 4).toString());
   
            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 4).toString()) == java.lang.Boolean.FALSE) {
   
             totals = totals + Double.parseDouble(jTable1.getModel().getValueAt(j, 2).toString()) + Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
   
             i++;
           }
         }
   
         jTextField6.setText(Double.toString(totals));
   
         jTextField2.setText(Integer.toString(i));
   
         System.out.println(totals);
   
         System.out.println(i);
   
         System.out.println("This table has changed");
   
     }
   */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField71;
    // End of variables declaration//GEN-END:variables
    
}
