/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SalesPrefsIntfr.java
 *
 * Created on 01-May-2009, 12:48:03
 */
package com.afrisoftech.accounting;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Charles Waweru
 */
public class SalesPrefsIntfr extends javax.swing.JInternalFrame {

    private java.sql.Connection connectDB = null;

    /** Creates new form SalesPrefsIntfr */
    public SalesPrefsIntfr(java.sql.Connection connDB) {

        setConnectDB(connDB);

        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        priceEditRbt = new javax.swing.JRadioButton();
        reprintRbt = new javax.swing.JRadioButton();
        buttonPanel = new javax.swing.JPanel();
        updateBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();

        setTitle("Settings for POS Operations");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        priceEditRbt.setText("Allow Price Editing");
        priceEditRbt.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        mainPanel.add(priceEditRbt, new java.awt.GridBagConstraints());

        reprintRbt.setText("Allow Re-Printing of receipts");
        reprintRbt.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        mainPanel.add(reprintRbt, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        updateBtn.setText("Update settings");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(updateBtn, gridBagConstraints);

        closeBtn.setText("Close form");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5000.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-410)/2, (screenSize.height-127)/2, 410, 127);
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        try {
            java.sql.PreparedStatement pstmtFetchPrefs = connectDB.prepareStatement("SELECT count(*) FROM sales_prefs");
            java.sql.ResultSet rsetFetchPrefs = pstmtFetchPrefs.executeQuery();
            int fetchSize = 0;
            while(rsetFetchPrefs.next()){
               fetchSize = rsetFetchPrefs.getInt(1);
            }
            if (fetchSize > 0) {
                java.sql.PreparedStatement pstmtUpdate = connectDB.prepareStatement("UPDATE sales_prefs SET edit_prices =?, re_prints=?");
                pstmtUpdate.setBoolean(1, this.getPriceEditRbt().isSelected());
                pstmtUpdate.setBoolean(2, this.getReprintRbt().isSelected());
                pstmtUpdate.executeUpdate();
            } else {
                java.sql.PreparedStatement pstmtInsert = connectDB.prepareStatement("INSERT INTO sales_prefs(edit_prices, re_prints) VALUES (?, ?)");
                pstmtInsert.setBoolean(1, this.getPriceEditRbt().isSelected());
                pstmtInsert.setBoolean(2, this.getReprintRbt().isSelected());
                pstmtInsert.executeUpdate();
            }
        // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(SalesPrefsIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

    // TODO add your handling code here:
    }//GEN-LAST:event_updateBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed

        this.dispose();

    // TODO add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton priceEditRbt;
    private javax.swing.JRadioButton reprintRbt;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the connectDB
     */
    public java.sql.Connection getConnectDB() {
        return connectDB;
    }

    /**
     * @param connectDB the connectDB to set
     */
    public void setConnectDB(java.sql.Connection connectDB) {
        this.connectDB = connectDB;
    }

    /**
     * @return the priceEditRbt
     */
    public javax.swing.JRadioButton getPriceEditRbt() {
        return priceEditRbt;
    }

    /**
     * @param priceEditRbt the priceEditRbt to set
     */
    public void setPriceEditRbt(javax.swing.JRadioButton priceEditRbt) {
        this.priceEditRbt = priceEditRbt;
    }

    /**
     * @return the reprintRbt
     */
    public javax.swing.JRadioButton getReprintRbt() {
        return reprintRbt;
    }

    /**
     * @param reprintRbt the reprintRbt to set
     */
    public void setReprintRbt(javax.swing.JRadioButton reprintRbt) {
        this.reprintRbt = reprintRbt;
    }
}
