/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import com.afrisoftech.dbadmin.TableModel;

/**
 *
 * @author root
 */
public class RaiseDebitNoteintfr extends javax.swing.JInternalFrame {

    private javax.swing.JComboBox cmbox1;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox2;

    /**
     * Creates new form loanpymntintfr
     */
    java.sql.Connection connectDB = null;
    javax.swing.JSpinner beginDateSpinner = null;

    javax.swing.JSpinner endDateSpinner = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private String ref_no;

    public RaiseDebitNoteintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        lposearchdialog = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        lpotxt = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        lpotable = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton13 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jPanel61 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        lpoTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField111ActionPerformed(evt);
            }
        });
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton41, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        lposearchdialog.setModal(true);
        lposearchdialog.setUndecorated(true);
        lposearchdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        lpotxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                lpotxtCaretUpdate(evt);
            }
        });
        lpotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpotxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(lpotxt, gridBagConstraints);

        lpotable.setToolTipText("Click on the target row to select the patient from the search.");
        lpotable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        lpotable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lpotableMouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(lpotable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        lposearchdialog.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setBackground(new java.awt.Color(102, 255, 204));
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Enter Debit Note");
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Accounts here"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jScrollPane13.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N

        jTable1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Description", "Activity code", "Invoice No", "Invoice Date", "Date Due", "Reason for Debiting", "Amount", "VAT Amt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        cmbox = new javax.swing.JComboBox();
        javax.swing.table.TableColumn dateEditor = jTable1.getColumnModel().getColumn(4);
        com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), jTable1);
        dateEditor.setCellEditor(dateCellEditor);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer.TRAILING);
        dateEditor.setCellRenderer(cellRenderer);

        javax.swing.table.TableColumn dateEditor1 = jTable1.getColumnModel().getColumn(3);
        com.afrisoftech.lib.DateCellEditor dateCellEditor1 = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), jTable1);
        dateEditor1.setCellEditor(dateCellEditor1);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer1 = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer1.TRAILING);
        dateEditor.setCellRenderer(cellRenderer1);

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jScrollPane13, gridBagConstraints);

        jButton13.setMnemonic('s');
        jButton13.setText("Save");
        jButton13.setToolTipText("Click here to enter data");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton13, gridBagConstraints);

        jButton53.setMnemonic('r');
        jButton53.setText("Remove Row");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jButton53, gridBagConstraints);

        jButton33.setMnemonic('l');
        jButton33.setText("Clear");
        jButton33.setToolTipText("Click here to clear fields");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton33, gridBagConstraints);

        jButton43.setMnemonic('C');
        jButton43.setText("Close");
        jButton43.setToolTipText("Click here to close ");
        jButton43.setSelected(true);
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton43, gridBagConstraints);

        resetbtn.setMnemonic('v');
        resetbtn.setText("View");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(resetbtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        jTabbedPane1.addTab("Debit Notes", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        getContentPane().add(jTabbedPane1, gridBagConstraints);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Debit Notes");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(datePicker1, gridBagConstraints);

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField36, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search patient name");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel61.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel61, gridBagConstraints);

        jCheckBox1.setText("Click to add a Gl Item");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jCheckBox1, gridBagConstraints);

        jLabel3.setText("Dealer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);

        jCheckBox2.setText("Enter Invoice No:");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jCheckBox2, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        lpoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(lpoTxt, gridBagConstraints);

        searchBtn.setEnabled(false);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(searchBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Book Debit note");
        jRadioButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jRadioButton2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jPanel3, gridBagConstraints);

        setBounds(0, 0, 700, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_resetbtnActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog1.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1), jTable1.getSelectedRow(), 1);
        // jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);

        jSearchDialog1.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where (payment_modes ='Payable' OR payment_modes = 'Both') and activity ILIKE '" + jTextField1111.getText() + "%' order by activity"));

        jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane13.getLocationOnScreen();
        jSearchDialog1.setSize(400, 200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();

        } else if ((jTable1.getSelectedColumn() == 3) || (jTable1.getSelectedColumn() == 4)) {

            kiwi.ui.DateChooser dateChooser = new kiwi.ui.DateChooser();

            dateChooser.setVisible(true);

        }// Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        javax.swing.JInternalFrame other = new com.afrisoftech.accounting.ActivitiesIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if (this.jTextField111.getCaretPosition() < 3) {
            System.out.print("Nothing");
        } else {
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,supplier_name as name from st_suppliers where supplier_name ILIKE '" + jTextField111.getText() + "%' order by supplier_name"));

            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");

        }           // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        this.jButton13.setEnabled(true);
        jTextField36.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());

        //  this.populateTable1(jTextField9.getText());
        this.jSearchDialog.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField111ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();
        this.jButton13.setEnabled(true);

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField36.getLocationOnScreen();

        jSearchDialog.setSize(400, 200);

        jSearchDialog.setLocation(point);

        jSearchDialog.setVisible(true);
    }
    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        } // Add your handling code here:
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());

            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton53ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());

        }

        if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else {
            if (jTable1.isEditing()) {
                jTable1.getCellEditor().stopCellEditing();
            }
            java.util.Calendar calendar = java.util.Calendar.getInstance();

            long dateNow = calendar.getTimeInMillis();

            java.sql.Date datenowSql = new java.sql.Date(dateNow);
            try {
                String Stock = null;
                String voucNo = null;
                String accountCode = null;
                String TransNo = null;
                String glType = null;
                // String glType = null;
                String userName = null;
                java.sql.Date invDate = null;
                java.sql.Date dateTo = null;
                java.sql.Savepoint registerSavePoint = null;
                try {
                    connectDB.setAutoCommit(false);
                    registerSavePoint = connectDB.setSavepoint("registration");
                } catch (java.sql.SQLException ex) {
                    ex.printStackTrace();
                }

                try {

                    java.sql.Statement pst1 = connectDB.createStatement();
                    java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                    while (rs1.next()) {
                        accountCode = rs1.getObject(1).toString();
                        glType = rs1.getObject(2).toString();
                    }
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rs2 = ps.executeQuery("select nextval('transaction_no_seq'),current_user");
                    while (rs2.next()) {
                        TransNo = rs2.getObject(1).toString();
                        userName = rs2.getObject(2).toString();
                    }
                    java.sql.Statement pst2 = connectDB.createStatement();
                    java.sql.ResultSet rs = pst2.executeQuery("select 'IN'||lpad(nextval('invoice_no_seq')::text,7,0::text)");
                    while (rs.next()) {
                        voucNo = rs.getObject(1).toString();
                    }
                    if (jRadioButton2.isSelected()) {
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            if (jTable1.getModel().getValueAt(i, 3) != null) {
                                java.sql.Statement pst22 = connectDB.createStatement();
                                java.sql.ResultSet rs22 = pst22.executeQuery("select '" + jTable1.getValueAt(i, 3).toString() + "'::date,'" + jTable1.getValueAt(i, 4).toString() + "'::date");
                                while (rs22.next()) {
                                    invDate = rs22.getDate(1);
                                    dateTo = rs22.getDate(2);
                                }

                                if (jCheckBox2.isSelected()) {
                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                    java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_accounts_payable where dealer = '" + jTextField36.getText() + "' and invoice_no = '" + lpoTxt.getText() + "' and reference_no = '" + ref_no + "' and credit > 0");
                                    while (rsetf2.next()) {
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                        pstmt2.setObject(1, jTable1.getValueAt(i, 1).toString());
                                        pstmt2.setObject(2, jTable1.getValueAt(i, 0).toString());
                                        pstmt2.setString(3, "");
                                        if (jTextField36.getText() == null) {
                                            javax.swing.JOptionPane.showMessageDialog(this, "You must Enter Payee!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                        } else {
                                            pstmt2.setObject(4, jTextField36.getText().toString());
                                        }
                                        pstmt2.setObject(5, jTable1.getValueAt(i, 5).toString());
                                        pstmt2.setObject(6, "");
                                        pstmt2.setObject(7, jTextField36.getText().toString());
                                        pstmt2.setString(8, "");
                                        pstmt2.setString(9, "");
                                        pstmt2.setString(10, "");
                                        pstmt2.setString(11, "");
                                        pstmt2.setString(12, "");
                                        pstmt2.setString(13, "");
                                        pstmt2.setString(14, jTable1.getValueAt(i, 0).toString());
                                        pstmt2.setString(15, "Debit Note");
                                        pstmt2.setDouble(16, 0.00);
                                        if (jTable1.getValueAt(i, 6) == null) {
                                            javax.swing.JOptionPane.showMessageDialog(this, "You must Enter Amount!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                        } else {
                                            pstmt2.setDouble(17, java.lang.Double.valueOf(jTable1.getValueAt(i, 6).toString()));
                                        }
                                        pstmt2.setDate(18, datenowSql);
                                        pstmt2.setString(19, TransNo);
                                        pstmt2.setBoolean(20, false);
                                        pstmt2.setBoolean(21, false);
                                        pstmt2.setBoolean(22, false);
                                        pstmt2.setString(23, userName);
                                        pstmt2.executeUpdate();

                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?"
                                                + ",?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1.setObject(1, accountCode);
                                        pstmt1.setObject(2, jTextField36.getText().toString());
                                        pstmt1.setObject(3, jTable1.getValueAt(i, 0));
                                        pstmt1.setString(4, rsetf2.getString(4));
                                        pstmt1.setObject(5, rsetf2.getObject(5));
                                        pstmt1.setString(6, jTable1.getValueAt(i, 5).toString().toUpperCase());
                                        pstmt1.setString(7, "");
                                        pstmt1.setString(8, "");
                                        pstmt1.setString(9, "");
                                        pstmt1.setString(10, "");
                                        pstmt1.setString(11, TransNo);
                                        pstmt1.setString(12, rsetf2.getString(12));
                                        pstmt1.setString(32, rsetf2.getString(32));
                                        pstmt1.setDouble(14, 0.00);
                                        pstmt1.setDouble(13, java.lang.Double.valueOf(jTable1.getValueAt(i, 6).toString()));
                                        pstmt1.setDate(15, datenowSql);
                                        pstmt1.setObject(16, jTable1.getValueAt(i, 2));
                                        pstmt1.setString(17, glType);
                                        pstmt1.setBoolean(18, rsetf2.getBoolean(18));
                                        pstmt1.setBoolean(19, rsetf2.getBoolean(19));
                                        pstmt1.setString(20, userName);
                                        pstmt1.setString(21, "");
                                        if (jTable1.getValueAt(i, 4) == null) {
                                            javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                        } else {
                                            //    pstmt1.setDate(22,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTable1.getValueAt(i,4).toString())));
                                            pstmt1.setDate(22, dateTo);

                                        }
                                        pstmt1.setDate(23, invDate);
                                        pstmt1.setDouble(24, -1 * java.lang.Double.valueOf(jTable1.getValueAt(i, 7).toString()));
                                        pstmt1.setDouble(25, -1 * java.lang.Double.valueOf(jTable1.getValueAt(i, 6).toString()));
                                        pstmt1.setDouble(26, -1 * java.lang.Double.valueOf(jTable1.getValueAt(i, 7).toString()));
                                        pstmt1.setObject(27, null);
                                        pstmt1.setObject(28, 0.0);
                                        pstmt1.setObject(29, 0.0);
                                        pstmt1.setObject(30, 0.0);
                                        pstmt1.setObject(31, 0.0);
                                        pstmt1.setObject(32, rsetf2.getObject(32));
                                        pstmt1.setObject(33, rsetf2.getObject(33));
                                        pstmt1.setObject(34, rsetf2.getObject(34));
                                        pstmt1.setObject(35, rsetf2.getObject(35));
                                        pstmt1.setObject(36, rsetf2.getObject(36));
                                        pstmt1.setObject(37, rsetf2.getObject(37));
                                        pstmt1.setObject(38, rsetf2.getObject(38));
                                        pstmt1.setObject(39, rsetf2.getObject(39));
                                        pstmt1.setObject(40, rsetf2.getObject(40));
                                        pstmt1.setObject(41, rsetf2.getObject(41));
                                        pstmt1.setObject(42, rsetf2.getObject(42));

                                        pstmt1.executeUpdate();
                                    }
                                } else {
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                    pstmt2.setObject(1, jTable1.getValueAt(i, 1).toString());
                                    pstmt2.setObject(2, jTable1.getValueAt(i, 0).toString());
                                    pstmt2.setString(3, "");
                                    if (jTextField36.getText() == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "You must Enter Payee!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {
                                        pstmt2.setObject(4, jTextField36.getText().toString());
                                    }
                                    pstmt2.setObject(5, jTable1.getValueAt(i, 5).toString());
                                    pstmt2.setObject(6, "");
                                    pstmt2.setObject(7, jTextField36.getText().toString());
                                    pstmt2.setString(8, "");
                                    pstmt2.setString(9, "");
                                    pstmt2.setString(10, "");
                                    pstmt2.setString(11, "");
                                    pstmt2.setString(12, "");
                                    pstmt2.setString(13, "");
                                    pstmt2.setString(14, jTable1.getValueAt(i, 0).toString());
                                    pstmt2.setString(15, "Debit Note");
                                    pstmt2.setDouble(16, 0.00);
                                    if (jTable1.getValueAt(i, 6) == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "You must Enter Amount!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {
                                        pstmt2.setDouble(17, java.lang.Double.valueOf(jTable1.getValueAt(i, 6).toString()));
                                    }
                                    pstmt2.setDate(18, datenowSql);
                                    pstmt2.setString(19, TransNo);
                                    pstmt2.setBoolean(20, false);
                                    pstmt2.setBoolean(21, false);
                                    pstmt2.setBoolean(22, false);
                                    pstmt2.setString(23, userName);
                                    pstmt2.executeUpdate();

                                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                    pstmt1.setObject(1, accountCode);
                                    pstmt1.setObject(2, jTextField36.getText().toString());
                                    pstmt1.setObject(3, jTable1.getValueAt(i, 0));
                                    pstmt1.setString(4, "");
                                    pstmt1.setObject(5, jTextField36.getText().toString());
                                    pstmt1.setString(6, jTable1.getValueAt(i, 5).toString().toUpperCase());
                                    pstmt1.setString(7, "");
                                    pstmt1.setString(8, "");
                                    pstmt1.setString(9, "");
                                    pstmt1.setString(10, "");
                                    pstmt1.setString(11, TransNo);
                                    pstmt1.setString(12, "Raise Invoice");
                                    pstmt1.setString(32, lpoTxt.getText());
                                    pstmt1.setDouble(13, java.lang.Double.valueOf(jTable1.getValueAt(i, 6).toString()));
                                    pstmt1.setDouble(14, 0.00);
                                    pstmt1.setDate(15, invDate);
                                    pstmt1.setObject(16, jTable1.getValueAt(i, 2));
                                    pstmt1.setString(17, glType);
                                    pstmt1.setBoolean(18, false);
                                    pstmt1.setBoolean(19, false);
                                    pstmt1.setString(20, userName);
                                    pstmt1.setString(21, "");
                                    if (jTable1.getValueAt(i, 4) == null) {
                                        javax.swing.JOptionPane.showMessageDialog(this, "Date Due Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                    } else {
                                        //    pstmt1.setDate(22,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTable1.getValueAt(i,4).toString())));
                                        pstmt1.setDate(22, dateTo);

                                    }
                                    pstmt1.setDate(23, invDate);
                                    pstmt1.setDouble(24, -1 * java.lang.Double.valueOf(jTable1.getValueAt(i, 7).toString()));
                                    pstmt1.setDouble(25, -1 * java.lang.Double.valueOf(jTable1.getValueAt(i, 6).toString()));
                                    pstmt1.setDouble(26, -1 * java.lang.Double.valueOf(jTable1.getValueAt(i, 7).toString()));
                                    pstmt1.setObject(27, null);
                                    pstmt1.setObject(28, 0.0);
                                    pstmt1.setObject(29, 0.0);
                                    pstmt1.setObject(30, 0.0);
                                    pstmt1.setObject(31, 0.0);

                                    pstmt1.executeUpdate();
                                }
                            }
                        }
                    } else {
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            if (jTable1.getModel().getValueAt(i, 0) != null) {

                                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?, ?, ?, ?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                pstmt1.setString(1, jTextField36.getText().toString().toUpperCase());
                                pstmt1.setObject(2, jTable1.getValueAt(i, 0));
                                pstmt1.setObject(3, jTable1.getValueAt(i, 1));
                                pstmt1.setObject(4, jTable1.getValueAt(i, 2));
                                pstmt1.setString(5, jTable1.getValueAt(i, 3).toString());

                                //  pstmt1.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTable1.getValueAt(i,3).toString())));
                                pstmt1.setObject(6, jTable1.getValueAt(i, 5).toString().toUpperCase());
                                pstmt1.setString(7, jTable1.getValueAt(i, 5).toString());
                                pstmt1.setDouble(9, 0.00);
                                pstmt1.setDouble(8, java.lang.Double.valueOf(jTable1.getValueAt(i, 6).toString()));
                                pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt1.setObject(11, "");
                                pstmt1.setDouble(12, -1 * java.lang.Double.valueOf(jTable1.getValueAt(i, 7).toString()));
                                pstmt1.executeUpdate();
                            }
                        }
                    }

                    this.jButton13.setEnabled(false);
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    for (int k = 0; k < jTable1.getRowCount(); k++) {
                        for (int r = 0; r < jTable1.getColumnCount(); r++) {
                            jTable1.getModel().setValueAt(null, k, r);
                        }
                    }

                    //  javax.swing.JOptionPane.showMessageDialog(this, "Enter quantity received","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    sq.printStackTrace();
                    System.out.println(sq.getMessage());
                    try {
                        connectDB.rollback(registerSavePoint);
                    } catch (java.sql.SQLException sql) {
                        sql.printStackTrace();
                        System.out.println(sql.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                }

            } catch (java.lang.Exception ex) {
                System.out.println(ex.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
        }

        jCheckBox2.setSelected(false);
        // Add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran2 = cmbox2.getSelectedItem();

        /*   int j = jTable11.getSelectedRow();
         if (selectedGuaran2 != null) {
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select member_name,sum(amount_payable - amount_paid) from member_resignation where member_no ='"+selectedGuaran2+"' GROUP BY member_name,member_no");
     
         while (rs.next()){
         jTable11.setValueAt(rs.getObject(1),j,1);
         jTable11.setValueAt(rs.getObject(2),j,3);
         jTable11.setValueAt("Shares Refund",j,2);
     
         }
     
         java.sql.Statement pstmt1 = connectDB.createStatement();
         java.sql.ResultSet rs1 = pstmt1.executeQuery("select code from activity where activity = 'Shares Refund'");
     
         while (rs1.next()){
         jTable11.setValueAt(rs1.getObject(1),j,4);
     
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
         }
         }
         } private void cmbox1ActionPerformed(java.awt.event.ActionEvent evt){
         java.lang.Object selectedGuaran1 = cmbox1.getSelectedItem();
     
         System.out.println("Selected Guarntor : "+selectedGuaran1);
     
         int i = jTable1.getSelectedRow();
         if (selectedGuaran1 != null) {
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select member_name,member_no,loan_purpose,sum(principal)-sum(debit) from loan_transactions where loan_account_no ='"+selectedGuaran1+"' GROUP BY member_name,member_no,loan_purpose");
     
         while (rs.next()){
         jTable1.setValueAt(rs.getObject(1),i,3);
         jTable1.setValueAt(rs.getObject(2),i,2);
         jTable1.setValueAt(rs.getObject(3),i,1);
         jTable1.setValueAt(rs.getObject(4),i,4);
         }
     
         java.sql.Statement pstmt1 = connectDB.createStatement();
         java.sql.ResultSet rs1 = pstmt1.executeQuery("select code from activity where activity = '"+jTable1.getValueAt(i,1).toString()+"'");
     
         while (rs1.next()){
         jTable1.setValueAt(rs1.getObject(1),i,5);
     
         }
     
     
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
         }
         }
     
         */
    }

    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();

        System.out.println("Selected Guarntor : " + selectedGuaran);

        int k = jTable1.getSelectedRow();
        if (selectedGuaran != null) {

            try {

                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rst = pstmt.executeQuery("select code from pb_activity where activity = '" + selectedGuaran + "'");
                while (rst.next()) {
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rst.getObject(1), k, 1);
                }

            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        }
    }


    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void lpotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpotxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lpotxtActionPerformed

    private void lpotxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_lpotxtCaretUpdate
        // TODO add your handling code here:
        if (lpotxt.getCaretPosition() > 1) {

            lpotable.setModel(TableModel.createTableVectors(connectDB, "SELECT distinct invoice_no,voucher_no,credit,item,reference_no from ac_accounts_payable where dealer='" + jTextField36.getText() + "' and credit!=0 and  invoice_no ilike '%" + lpotxt.getText() + "%' order by invoice_no asc"));

        }
    }//GEN-LAST:event_lpotxtCaretUpdate

    private void lpotableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lpotableMouseClicked
        // TODO add your handling code here:
        lposearchdialog.dispose();

        lpoTxt.setText(lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString());
        jTable1.setValueAt(lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString(), 0, 2);
        ref_no = lpotable.getValueAt(lpotable.getSelectedRow(), 4).toString();
    }//GEN-LAST:event_lpotableMouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        // TODO add your handling code here:
        this.lposearchdialog.dispose();
    }//GEN-LAST:event_jButton52ActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        java.awt.Point point = this.lpoTxt.getLocationOnScreen();

        lposearchdialog.setSize(600, 200);

        lposearchdialog.setLocation(point);

        lposearchdialog.setVisible(true);
    }//GEN-LAST:event_searchBtnActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox2.isSelected()) {
            searchBtn.setEnabled(true);
        } else {
            searchBtn.setEnabled(false);
        }


    }//GEN-LAST:event_jCheckBox2ActionPerformed

    //private void cmboxActionPerformed(javax.swing.

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton41;
    public javax.swing.JButton jButton43;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField lpoTxt;
    private javax.swing.JDialog lposearchdialog;
    private javax.swing.JTable lpotable;
    private javax.swing.JTextField lpotxt;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

}
