/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.accounting;

import static com.afrisoftech.accounting.VoucherApprintfr.md5;
import com.afrisoftech.dbadmin.TableModel;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author System Partners
 */
public class DocumentTrackIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form DocumentTrackIntfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private String action;
    public DocumentTrackIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
//        reportBodyTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO, supplier as supplier_name from st_stock_cardex st where st.approved=FALSE "
//                    + "and supplies=true and chairperson=true and technical=true and certficate_no is not null and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
//        jTable1.setValueAt("Checking/Raising Invoice", 0, 0);
//        jTable1.setValueAt("VoteBook", 1, 0);
//        jTable1.setValueAt("AIE Holder", 2, 0);
//        jTable1.setValueAt("Voucher Examination", 3, 0);
//        jTable1.setValueAt("Authority To Pay", 4, 0);
//        jTable1.setValueAt("Payment", 5, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog4 = new javax.swing.JDialog();
        jSearchPanel5 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane5 = new javax.swing.JScrollPane();
        jSearchTable4 = new com.afrisoftech.dbadmin.JTable();
        jButton45 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        lposearchdialog = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        lpotxt = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        lpotable = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        passwd = new javax.swing.JDialog();
        jPanel56 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton9 = new javax.swing.JButton();
        encrptedpasswordDialog = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPasswordField4 = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        bankStatementTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jChecklpo = new javax.swing.JCheckBox();
        jCheckInv = new javax.swing.JCheckBox();
        jCheckvoucher = new javax.swing.JCheckBox();
        jPanel61 = new javax.swing.JPanel();
        dealerNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel62 = new javax.swing.JPanel();
        lpoTxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jTextField2 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.afrisoftech.dbadmin.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new com.afrisoftech.dbadmin.JTable();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        jSearchDialog4.setModal(true);
        jSearchDialog4.setUndecorated(true);
        jSearchDialog4.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel5.setLayout(new java.awt.GridBagLayout());

        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });
        jTextField112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel5.add(jTextField112, gridBagConstraints);

        jSearchTable4.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable4MouseClicked(evt);
            }
        });
        jSearchScrollPane5.setViewportView(jSearchTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel5.add(jSearchScrollPane5, gridBagConstraints);

        jButton45.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton45, gridBagConstraints);

        jButton54.setText("Dispose");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton54, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog4.getContentPane().add(jSearchPanel5, gridBagConstraints);

        lposearchdialog.setModal(true);
        lposearchdialog.setUndecorated(true);
        lposearchdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        lpotxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                lpotxtCaretUpdate(evt);
            }
        });
        lpotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpotxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(lpotxt, gridBagConstraints);

        lpotable.setToolTipText("Click on the target row to select the patient from the search.");
        lpotable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        lpotable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lpotableMouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(lpotable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        lposearchdialog.getContentPane().add(jSearchPanel2, gridBagConstraints);

        passwd.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        passwd.setModal(true);
        passwd.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel56.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Authorisation Password Here"));
        jPanel56.setAutoscrolls(true);
        jPanel56.setLayout(new java.awt.GridBagLayout());

        jButton17.setText("Approve Authorisation");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton17, gridBagConstraints);

        jButton18.setText("Close Dialog");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton18, gridBagConstraints);

        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 50);
        jPanel56.add(jPasswordField1, gridBagConstraints);

        jButton9.setText("Change Password");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel56.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        passwd.getContentPane().add(jPanel56, gridBagConstraints);

        encrptedpasswordDialog.setTitle("Changing User password");
        encrptedpasswordDialog.setModal(true);
        encrptedpasswordDialog.setResizable(false);
        encrptedpasswordDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                encrptedpasswordDialogcloseDialog(evt);
            }
        });
        encrptedpasswordDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel6.setBackground(new java.awt.Color(230, 230, 230));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel8.setText("New Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Retype New Pasword");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Current Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel10, gridBagConstraints);

        jPasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel6.add(jPasswordField2, gridBagConstraints);

        jPasswordField3.setToolTipText("Must be aleast 8 characters long.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel6.add(jPasswordField3, gridBagConstraints);

        jPasswordField4.setToolTipText("Same as \"New Password\" above.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel6.add(jPasswordField4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel6, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Change your password here.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel7, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButton10.setMnemonic('n');
        jButton10.setText("Cancel");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton10, gridBagConstraints);

        jButton11.setMnemonic('C');
        jButton11.setText("Change Password");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel8, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Payment Dashboard");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        bankStatementTabbedPane.setBackground(new java.awt.Color(204, 255, 204));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search here....", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 10))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        jLabel4.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel4, gridBagConstraints);

        jChecklpo.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(jChecklpo);
        jChecklpo.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        jChecklpo.setText("Lpo/Lso No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jChecklpo, gridBagConstraints);

        jCheckInv.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(jCheckInv);
        jCheckInv.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        jCheckInv.setText("Invoice No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckInv, gridBagConstraints);

        jCheckvoucher.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(jCheckvoucher);
        jCheckvoucher.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        jCheckvoucher.setText("Voucher No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckvoucher, gridBagConstraints);

        jPanel61.setBackground(new java.awt.Color(204, 255, 204));
        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(84, 25));
        jPanel61.setPreferredSize(new java.awt.Dimension(59, 25));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        dealerNameTxt.setEditable(false);
        dealerNameTxt.setBackground(new java.awt.Color(204, 255, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(dealerNameTxt, gridBagConstraints);

        searchButton.setBackground(new java.awt.Color(204, 255, 204));
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search patient name");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel61.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel61, gridBagConstraints);

        jPanel62.setBackground(new java.awt.Color(204, 255, 204));
        jPanel62.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel62.setMinimumSize(new java.awt.Dimension(84, 25));
        jPanel62.setPreferredSize(new java.awt.Dimension(59, 25));
        jPanel62.setLayout(new java.awt.GridBagLayout());

        lpoTxt.setEditable(false);
        lpoTxt.setBackground(new java.awt.Color(204, 255, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(lpoTxt, gridBagConstraints);

        searchButton1.setBackground(new java.awt.Color(204, 255, 204));
        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search patient name");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel62.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel62, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        jLabel5.setText("Search here");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel5, gridBagConstraints);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 51, 255));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jTable1.setBackground(new java.awt.Color(204, 255, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 8.0;
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(204, 255, 204));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField2.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jTextField2, gridBagConstraints);

        jButton8.setText("Update Invoice");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jButton8, gridBagConstraints);

        jButton12.setText("Update Lpo No");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel3.setText("Payment Dashbord");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(jLabel3, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton1.setText("Checking/Raising Invoice");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton2.setText("VoteBook");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton2, gridBagConstraints);

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton3.setText("AIE Holder");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton3, gridBagConstraints);

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton4.setText("Voucher Examination");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton4, gridBagConstraints);

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton5.setText("Authority To Pay");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton5, gridBagConstraints);

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton6.setText("Payment");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton6, gridBagConstraints);

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton7.setText("Not In Tracker");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton7, gridBagConstraints);

        jButton13.setBackground(new java.awt.Color(0, 0, 0));
        jButton13.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton13.setText("Invoices Waiting Doc");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        bankStatementTabbedPane.addTab("Stages", jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Total Amount: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel2, gridBagConstraints);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane2, gridBagConstraints);

        bankStatementTabbedPane.addTab("", jPanel2);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane4, gridBagConstraints);

        jLabel6.setText("Total Amount: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel5.add(jLabel6, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jTextField3, gridBagConstraints);

        bankStatementTabbedPane.addTab("Not In Tracker", jPanel5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(bankStatementTabbedPane, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton3Clicked();
        //        this.paymentRequestBtn.setEnabled(true);

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        // TODO add your handling code here:
        jSearchTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,supplier_name as name from st_suppliers where supplier_name ILIKE '" + jTextField112.getText() + "%' order by supplier_name"));

        jSearchScrollPane5.setViewportView(jSearchTable4);
    }//GEN-LAST:event_jTextField112CaretUpdate

    private void jTextField112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField112ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField112ActionPerformed

    private void jSearchTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable4MouseClicked
        // TODO add your handling code here:
        dealerNameTxt.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 1).toString());
        jSearchDialog4.dispose();
         this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                          for (int k = 0; k < jTable1.getRowCount(); k++) {
                                            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                                                jTable1.getModel().setValueAt(null, k, r);
                                                 }
                                            }
    jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct invoice_no,voucher_no,'' as lpo_no,sum(credit-debit),false as Tick,invoice_no as new_inv from ac_accounts_payable where dealer ='"+jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 1).toString()+"' group by 1,2,3 having sum(credit-debit)!=0  order by 1 asc"));
                                    for (int k = 0; k < jTable1.getRowCount(); k++) {
                                            try{
                                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                                       java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select distinct order_no from ac_accounts_payable where dealer='"+dealerNameTxt.getText()+"' and invoice_no='"+jTable1.getValueAt(k, 0).toString()+"'");
                                                      while(rsetf2.next()){
                                                           jTable1.getModel().setValueAt(rsetf2.getString(1), k, 2);
                                                      }  
                                            }catch(Exception r){
                                                r.printStackTrace();
                                            }
                                        
                                            }
    jTextField2.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3)));
    //String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 3)));
    
    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));  
        
    }//GEN-LAST:event_jSearchTable4MouseClicked

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        // TODO add your handling code here:
        this.jSearchDialog4.dispose();
    }//GEN-LAST:event_jButton54ActionPerformed
private void searchButton3Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt.getLocationOnScreen();

        jSearchDialog4.setSize(350, 200);

        jSearchDialog4.setLocation(point);

        jSearchDialog4.setVisible(true);
    }
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        // TODO add your handling code here:
         java.awt.Point point = this.lpoTxt.getLocationOnScreen();
        
        lposearchdialog.setSize(400,200);
        
        lposearchdialog.setLocation(point);
        
        lposearchdialog.setVisible(true);
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void lpotxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_lpotxtCaretUpdate
        // TODO add your handling code here:
        if(lpotxt.getCaretPosition()>1){
            if(jChecklpo.isSelected()==true){
                 lpotable.setModel(TableModel.createTableVectors(connectDB, "SELECT distinct invoice_no,voucher_no,order_no,sum(credit-debit) from ac_accounts_payable where dealer='"+dealerNameTxt.getText()+"' and  order_no ilike '%"+lpotxt.getText()+"%' group by 1,2,3 order by order_no asc"));
            }else if(jCheckInv.isSelected()==true){
                 lpotable.setModel(TableModel.createTableVectors(connectDB, "SELECT distinct invoice_no,voucher_no,order_no,sum(credit-debit) from ac_accounts_payable where dealer='"+dealerNameTxt.getText()+"' and  invoice_no ilike '%"+lpotxt.getText()+"%' group by 1,2,3 order by invoice_no asc"));
            }else if(jCheckvoucher.isSelected()==true){
                 lpotable.setModel(TableModel.createTableVectors(connectDB, "SELECT distinct invoice_no,voucher_no,order_no,sum(credit-debit) from ac_accounts_payable where dealer='"+dealerNameTxt.getText()+"' and  voucher_no ilike '%"+lpotxt.getText()+"%' group by 1,2,3 order by voucher_no asc"));
            }
           

        }
    }//GEN-LAST:event_lpotxtCaretUpdate

    private void lpotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpotxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lpotxtActionPerformed

    private void lpotableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lpotableMouseClicked
        // TODO add your handling code here:
        
            if(jChecklpo.isSelected()==true){
                   lpoTxt.setText(lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString());
            }else if(jCheckInv.isSelected()==true){
                   lpoTxt.setText(lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString());
            }else if(jCheckvoucher.isSelected()==true){
                   lpoTxt.setText(lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString());
            } 
            jTextArea1.setText("");
            search();
     lposearchdialog.dispose();   
    }//GEN-LAST:event_lpotableMouseClicked
public void search(){
   // if(lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString().length()>0){
          try {String commit="",aie="",ve="",atp="",cash="";
                 java.sql.Statement stmtf2 = connectDB.createStatement();
                java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='"+dealerNameTxt.getText()+"' and voucher_no='"+lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString()+"'");
               if(rsetf2.getFetchSize()==0){
                   jTextArea1.setText("Not In Document Tracker");
               }
                while (rsetf2.next()) {
                    System.out.println("hapa");
                    if(rsetf2.getObject("commited_by")!=null){
                        System.out.println("hapa 1");
                        commit=rsetf2.getString("commited_by");
                    }
                    if(rsetf2.getObject("finance_head_officer")!=null){
                        System.out.println("hapa 2");
                        aie=rsetf2.getString("finance_head_officer");
                    }
                    if(rsetf2.getObject("examination_by")!=null){
                        System.out.println("hapa 3");
                        ve=rsetf2.getString("examination_by");
                    }
                    if(rsetf2.getObject("approval_by")!=null){
                        System.out.println("hapa 4");
                        atp=rsetf2.getString("approval_by");
                    }
                    if(rsetf2.getObject("cash_by")!=null){
                        System.out.println("hapa 5");
                        cash=rsetf2.getString("cash_by");
                    }
                        if(commit.length()>0 && aie.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+lpotable.getValueAt(lpotable.getSelectedRow(), 3).toString()+"\nStage:AIE Holder");
                        }else if(aie.length()>0 && ve.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+lpotable.getValueAt(lpotable.getSelectedRow(), 3).toString()+"\nStage:Voucher Examination");
                        }else if(ve.length()>0 && atp.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+lpotable.getValueAt(lpotable.getSelectedRow(), 3).toString()+"\nStage:Authority To Pay");
                        }else if(atp.length()>0 && cash.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+lpotable.getValueAt(lpotable.getSelectedRow(), 3).toString()+"\nStage:Payment");
                        }else if(cash.length()>0){
                             jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+lpotable.getValueAt(lpotable.getSelectedRow(), 3).toString()+"\nStage:Paid");
                        }
                }
          }catch(Exception R){
           R.printStackTrace();
          }
//    }else{
//         jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString()+
//                 "\nLpo/Lso:"+lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString()+""
//                 + "\nAmount:"+lpotable.getValueAt(lpotable.getSelectedRow(), 3).toString()+"\nStage:VoteBook");
//    }
}
public void search2(){
   // if(lpotable.getValueAt(lpotable.getSelectedRow(), 1).toString().length()>0){
          try {String commit="",aie="",ve="",atp="",cash="";
                 java.sql.Statement stmtf2 = connectDB.createStatement();
                java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='"+dealerNameTxt.getText()+"' and voucher_no='"+jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()+"'");
               if(rsetf2.getFetchSize()==0){
                   jTextArea1.setText("Not In Document Tracker");
               }
                while (rsetf2.next()) {
                    System.out.println("hapa");
                    if(rsetf2.getObject("commited_by")!=null){
                        System.out.println("hapa 1");
                        commit=rsetf2.getString("commited_by");
                    }
                    if(rsetf2.getObject("finance_head_officer")!=null){
                        System.out.println("hapa 2");
                        aie=rsetf2.getString("finance_head_officer");
                    }
                    if(rsetf2.getObject("examination_by")!=null){
                        System.out.println("hapa 3");
                        ve=rsetf2.getString("examination_by");
                    }
                    if(rsetf2.getObject("approval_by")!=null){
                        System.out.println("hapa 4");
                        atp=rsetf2.getString("approval_by");
                    }
                    if(rsetf2.getObject("cash_by")!=null){
                        System.out.println("hapa 5");
                        cash=rsetf2.getString("cash_by");
                    }
                        if(commit.length()>0 && aie.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()+"\nStage:AIE Holder");
                        }else if(aie.length()>0 && ve.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()+"\nStage:Voucher Examination");
                        }else if(ve.length()>0 && atp.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()+"\nStage:Authority To Pay");
                        }else if(atp.length()>0 && cash.length()<1 ){
                                    jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()+"\nStage:Payment");
                        }else if(cash.length()>0){
                             jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()+
                                    "\nVoucher No:"+jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()+"\nLpo/Lso:"+jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()+""
                                    + "\nAmount:"+jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()+"\nStage:Paid");
                        }
                }
          }catch(Exception R){
           R.printStackTrace();
          }
//    }else{
//         jTextArea1.setText(dealerNameTxt.getText()+"\nInvoice No:"+lpotable.getValueAt(lpotable.getSelectedRow(), 0).toString()+
//                 "\nLpo/Lso:"+lpotable.getValueAt(lpotable.getSelectedRow(), 2).toString()+""
//                 + "\nAmount:"+lpotable.getValueAt(lpotable.getSelectedRow(), 3).toString()+"\nStage:VoteBook");
//    }
}
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        // TODO add your handling code here:
        this.lposearchdialog.dispose();
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       // TODO add your handling code here:
    this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                          for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                                                jTable2.getModel().setValueAt(null, k, r);
                                                 }
                                            }
    jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO, supplier as supplier_name,sum(debit-quantity_ordered) as amount from st_stock_cardex st where st.approved=FALSE "
                    + "and supplies=true and chairperson=true and technical=true and certficate_no is not null and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
        
     bankStatementTabbedPane.setSelectedIndex(1);
     jLabel1.setText(jButton1.getLabel());
     bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), jButton1.getLabel());
      jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 2)));
     //jTextField1.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 2)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                        for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                                                jTable2.getModel().setValueAt(null, k, r);
                                                 }
                                            }
        jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select supplier,invoice_no,'' as LPO_LSO,(select sum(credit-debit) from ac_accounts_payable where dealer=a.supplier and invoice_no=a.invoice_no) as amount,creditor_created::date as date from ac_dashboard a where voucher_no is null and a.supplier in (select distinct supplier_name from st_suppliers) order by 1"));
                             for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            try{
                                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                                       java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select distinct order_no from ac_accounts_payable where dealer='"+jTable2.getValueAt(k, 0).toString()+"' and invoice_no='"+jTable2.getValueAt(k, 1).toString()+"'");
                                                      while(rsetf2.next()){
                                                           jTable2.getModel().setValueAt(rsetf2.getString(1), k, 2);
                                                      }  
                                            }catch(Exception r){
                                                r.printStackTrace();
                                            }
                                        
                                            }
        
     bankStatementTabbedPane.setSelectedIndex(1);
     jLabel1.setText(jButton2.getLabel());
     bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), jButton2.getLabel());
      jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 3)));
     //jTextField1.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 3)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                        for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                                                jTable2.getModel().setValueAt(null, k, r);
                                                 }
                                            }
        jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select supplier,invoice_no,'' as lpo_lso,voucher_no ,(select sum(credit-debit) from ac_accounts_payable where dealer=a.supplier and voucher_no=a.voucher_no) as Amount,creditor_created::date as date_raised,commited::date as date_voted from ac_dashboard a where voucher_no is not null and finance_head is null and a.supplier in (select distinct supplier_name from st_suppliers) order by 1"));
                                 for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            try{
                                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                                       java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select distinct order_no from ac_accounts_payable where dealer='"+jTable2.getValueAt(k, 0).toString()+"' and invoice_no='"+jTable2.getValueAt(k, 1).toString()+"'");
                                                      while(rsetf2.next()){
                                                           jTable2.getModel().setValueAt(rsetf2.getString(1), k, 2);
                                                      }  
                                            }catch(Exception r){
                                                r.printStackTrace();
                                            }
                                        
                                            }
     bankStatementTabbedPane.setSelectedIndex(1);
     jLabel1.setText(jButton3.getLabel());
     bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), jButton3.getLabel());
      jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 4)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
           this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                        for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                                                jTable2.getModel().setValueAt(null, k, r);
                                                 }
                                            }
        jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select supplier,invoice_no,'' as lpo_lso,voucher_no,(select sum(credit-debit) from ac_accounts_payable where dealer=a.supplier and voucher_no=a.voucher_no) as Amount,creditor_created::date as date_raised,commited::date as date_voted,finance_head::date as aie_date from ac_dashboard a where voucher_no is not null and finance_head is not null and examination is null and a.supplier in (select distinct supplier_name from st_suppliers) order by 1"));
                              for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            try{
                                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                                       java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select distinct order_no from ac_accounts_payable where dealer='"+jTable2.getValueAt(k, 0).toString()+"' and invoice_no='"+jTable2.getValueAt(k, 1).toString()+"'");
                                                      while(rsetf2.next()){
                                                           jTable2.getModel().setValueAt(rsetf2.getString(1), k, 2);
                                                      }  
                                            }catch(Exception r){
                                                r.printStackTrace();
                                            }
                                        
                                            }
     bankStatementTabbedPane.setSelectedIndex(1);
     jLabel1.setText(jButton4.getLabel());
     bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), jButton4.getLabel());
      jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 4)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
          this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                        for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                                                jTable2.getModel().setValueAt(null, k, r);
                                                 }
                                            }
        jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select supplier,invoice_no,'' as lpo_lso,voucher_no,(select sum(credit-debit) from ac_accounts_payable where dealer=a.supplier and voucher_no=a.voucher_no) as Amount,creditor_created::date as date_raised,commited::date as date_voted,finance_head::date as aie_date,examination::date as examination_date from ac_dashboard a where voucher_no is not null and finance_head is not null and examination is not null and approval is null and a.supplier in (select distinct supplier_name from st_suppliers) order by 1"));
                        for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            try{
                                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                                       java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select distinct order_no from ac_accounts_payable where dealer='"+jTable2.getValueAt(k, 0).toString()+"' and invoice_no='"+jTable2.getValueAt(k, 1).toString()+"'");
                                                      while(rsetf2.next()){
                                                           jTable2.getModel().setValueAt(rsetf2.getString(1), k, 2);
                                                      }  
                                            }catch(Exception r){
                                                r.printStackTrace();
                                            }
                                        
                                            }
     bankStatementTabbedPane.setSelectedIndex(1);
     jLabel1.setText(jButton5.getLabel());
     bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), jButton5.getLabel());
     jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 4)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
                  this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                        for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                                                jTable2.getModel().setValueAt(null, k, r);
                                                 }
                                            }
        jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select supplier,invoice_no,'' as lpo_lso,voucher_no,(select sum(credit-debit) from ac_accounts_payable where dealer=a.supplier and voucher_no=a.voucher_no) as Amount,creditor_created::date as date_raised,commited::date as date_voted,finance_head::date as aie_date,examination::date as examination_date,approval::date as approval_date from ac_dashboard a where voucher_no is not null and finance_head is not null and examination is not null and approval is not null and cash is null and a.supplier in (select distinct supplier_name from st_suppliers) order by 1"));
                    for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            try{
                                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                                       java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select distinct order_no from ac_accounts_payable where dealer='"+jTable2.getValueAt(k, 0).toString()+"' and invoice_no='"+jTable2.getValueAt(k, 1).toString()+"'");
                                                      while(rsetf2.next()){
                                                           jTable2.getModel().setValueAt(rsetf2.getString(1), k, 2);
                                                      }  
                                            }catch(Exception r){
                                                r.printStackTrace();
                                            }
                                        
                                            }
     bankStatementTabbedPane.setSelectedIndex(1);
     jLabel1.setText(jButton6.getLabel());
     bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), jButton6.getLabel());
     jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 4)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        search2();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
           this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                        for (int k = 0; k < jTable3.getRowCount(); k++) {
                                            for (int r = 0; r < jTable3.getColumnCount(); r++) {
                                                jTable3.getModel().setValueAt(null, k, r);
                                                 }
                                            }
        jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select dealer,invoice_no,'' as lpo_lso,voucher_no,sum(credit-debit) from ac_accounts_payable a where invoice_no not in (select distinct invoice_no from ac_dashboard where supplier=a.dealer)  group by 1,2,3,4 having sum(credit-debit)>0 order by 1,2"));
                    for (int k = 0; k < jTable3.getRowCount(); k++) {
                                            try{
                                                    java.sql.Statement stmtf2 = connectDB.createStatement();
                                                       java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select distinct order_no from ac_accounts_payable where dealer='"+jTable3.getValueAt(k, 0).toString()+"' and invoice_no='"+jTable3.getValueAt(k, 1).toString()+"'");
                                                      while(rsetf2.next()){
                                                           jTable3.getModel().setValueAt(rsetf2.getString(1), k, 2);
                                                      }  
                                            }catch(Exception r){
                                                r.printStackTrace();
                                            }
                                        
                                            }
     bankStatementTabbedPane.setSelectedIndex(2);
    // jLabel1.setText(jButton6.getLabel());
    // bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), jButton6.getLabel());
     jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable3, 4)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        action="";
          passwd.setSize(400, 200);
        passwd.setLocation(350,230);
        //passwd.setLocation(point);
        passwd.setVisible(true);
        jPasswordField1.setText(null);
        
      
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
          java.lang.String access_code = null;
        String  currentUser=null;
        try {

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.PreparedStatement pstmtsd = connectDB.prepareStatement("select authorisation from secure_levels_access where  login_username='"+ currentUser+"' and menu_access='Approve Vouchers' and authorisation='"+md5(jPasswordField1.getText())+"'");

            java.sql.ResultSet rsetsd = pstmtsd.executeQuery();
            while (rsetsd.next()) {
                access_code = rsetsd.getObject(1).toString();
            }

 if (md5(jPasswordField1.getText()).equals(access_code)) {
        if(action=="voucher"){
                    try {
                   for (int i = 0; i < jTable1.getRowCount(); i++) {
                        if(Boolean.valueOf(jTable1.getValueAt(i, 4).toString())==true){

                                java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement("update ac_dashboard set voucher_no='"+jTable1.getValueAt(i, 1).toString()+"' where invoice_no='"+jTable1.getValueAt(i, 0).toString()+"' and supplier='"+dealerNameTxt.getText()+"'  ");
                                pstmt81212.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("update ac_reprinting_vouchers set order_no='"+jTable1.getValueAt(i, 2).toString()+"',voucher_no='"+jTable1.getValueAt(i, 1).toString()+"' where invoice='"+jTable1.getValueAt(i, 0).toString()+"' and payee='"+dealerNameTxt.getText()+"'  ");
                                pstmt8121.executeUpdate();
                                
                                if(jTable1.getValueAt(i, 1)==null || jTable1.getValueAt(i, 1).toString().equals("")){
                                     java.sql.PreparedStatement pstmt8122 = connectDB.prepareStatement("update ac_accounts_payable set order_no='"+jTable1.getValueAt(i, 2).toString()+"' where invoice_no='"+jTable1.getValueAt(i, 0).toString()+"' and dealer='"+dealerNameTxt.getText()+"'  ");
                                     pstmt8122.executeUpdate();
                                }else{
                                    java.sql.PreparedStatement pstmt8122 = connectDB.prepareStatement("update ac_accounts_payable set order_no='"+jTable1.getValueAt(i, 2).toString()+"',voucher_no='"+jTable1.getValueAt(i, 1).toString()+"', committed=true,accountant=true,finance_head=true where invoice_no='"+jTable1.getValueAt(i, 0).toString()+"' and dealer='"+dealerNameTxt.getText()+"'  ");
                                    pstmt8122.executeUpdate();
                                   
                                }
                                

                        }
                    }
                    } catch (SQLException ex) {
                                ex.printStackTrace();
                                Logger.getLogger(DocumentTrackIntfr.class.getName()).log(Level.SEVERE, null, ex);
                            }
                    javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! Update Done Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    this.passwd.dispose();
                     jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct invoice_no,voucher_no,order_no,sum(credit-debit),false as Tick,invoice_no as new_inv from ac_accounts_payable where dealer ='"+jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 1).toString()+"' group by 1,2,3 having sum(credit-debit)>0  order by 1 asc"));
        }else{
           Boolean sample=false;
                 try {
                   for (int i = 0; i < jTable1.getRowCount(); i++) {
                         Boolean errorInvoice=false;
                       if(Boolean.valueOf(jTable1.getValueAt(i, 4).toString())==true){
                                        java.sql.Statement stmtf2 = connectDB.createStatement();
                                        java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_accounts_payable where dealer='"+dealerNameTxt.getText()+"' and invoice_no='"+jTable1.getValueAt(i, 5).toString()+"'");
                                        while (rsetf2.next()) {
                                            errorInvoice=true;
                                        }
                      if(errorInvoice==true){ 
                        int utilizeDeposit = javax.swing.JOptionPane.showConfirmDialog(this, "The Invoice No:'"+jTable1.getValueAt(i, 0).toString()+"' that you are updating already exist\n Note: This can cause invoice duplication.Are you sure you want to change?", "Confirmation", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);
                                    if (utilizeDeposit == javax.swing.JOptionPane.YES_OPTION) {
                                         java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement("update ac_dashboard set invoice_no='"+jTable1.getValueAt(i, 5).toString()+"' where invoice_no='"+jTable1.getValueAt(i, 0).toString()+"' and supplier='"+dealerNameTxt.getText()+"'  ");
                                pstmt81212.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("update ac_reprinting_vouchers set invoice='"+jTable1.getValueAt(i, 5).toString()+"' where invoice='"+jTable1.getValueAt(i, 0).toString()+"' and payee='"+dealerNameTxt.getText()+"'  ");
                                pstmt8121.executeUpdate();
                                        
                                        
                                            java.sql.PreparedStatement pstmt812 = connectDB.prepareStatement("update ac_accounts_payable set invoice_no='"+jTable1.getValueAt(i, 5).toString()+"' where invoice_no='"+jTable1.getValueAt(i, 0).toString()+"' and dealer='"+dealerNameTxt.getText()+"'  ");
                                            pstmt812.executeUpdate();
                                            sample=false;
                                          } else{ sample=true;}     
                                    }else{
                                              java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement("update ac_dashboard set invoice_no='"+jTable1.getValueAt(i, 5).toString()+"' where invoice_no='"+jTable1.getValueAt(i, 0).toString()+"' and supplier='"+dealerNameTxt.getText()+"'  ");
                                pstmt81212.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("update ac_reprinting_vouchers set invoice='"+jTable1.getValueAt(i, 5).toString()+"' where invoice='"+jTable1.getValueAt(i, 0).toString()+"' and payee='"+dealerNameTxt.getText()+"'  ");
                                pstmt8121.executeUpdate();
                          
                                            java.sql.PreparedStatement pstmt812 = connectDB.prepareStatement("update ac_accounts_payable set invoice_no='"+jTable1.getValueAt(i, 5).toString()+"' where invoice_no='"+jTable1.getValueAt(i, 0).toString()+"' and dealer='"+dealerNameTxt.getText()+"'  ");
                                            pstmt812.executeUpdate(); 
                                   }
                       }
                    }
                    } catch (SQLException ex) {
                                ex.printStackTrace();
                                Logger.getLogger(DocumentTrackIntfr.class.getName()).log(Level.SEVERE, null, ex);
                            }
                 if(sample==false){
                    javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! Update Done Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                 }
                    
                    this.passwd.dispose();
                     jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct invoice_no,voucher_no,order_no,sum(credit-debit),false as Tick,invoice_no as new_inv from ac_accounts_payable where dealer ='"+jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 1).toString()+"' group by 1,2,3 having sum(credit-debit)>0  order by 1 asc"));
        }
         }
            else{
                JOptionPane.showMessageDialog(null,"You dont have the permission to Approve voucher", "WARNING",JOptionPane.ERROR_MESSAGE);
                passwd.dispose();
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        this.passwd.dispose();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        encrptedpasswordDialog.setSize(400, 200);
        encrptedpasswordDialog.setLocation(350,230);
        //passwd.setLocation(point);
        encrptedpasswordDialog.setVisible(true);

        passwd.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jPasswordField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusLost

        java.lang.String currPassWord = null,currentUser=null;

        currPassWord = this.jPasswordField1.getText();
        int nums=0,num2=0;

        try{
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtsd = connectDB.createStatement();

            java.sql.ResultSet rsetsd = stmtsd.executeQuery("SELECT count(*) from secure_levels_access where  login_username='"+currentUser+"' and menu_access='Approve Vouchers'");

            while (rsetsd.next()) {
                num2=rsetsd.getInt(1);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='"+md5(jPasswordField2.getText())+"' and  login_username='"+currentUser+"' and menu_access='Approve Vouchers'");

            while (rsets.next()) {
                nums=rsets.getInt(1);

            }

            if (nums==0&&!jPasswordField2.getText().equals("nothing")) {

                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "You have typed your current password incorrectly");
                jPasswordField2.setText(null);
                //       jPasswordField1.grabFocus();

            }
            else  if (nums==1&&!jPasswordField2.getText().equals("nothing")&&num2>=1) {

                jButton8.setText("Change Password");

            }
            else if (nums==0&&jPasswordField2.getText().equals("nothing")&&num2!=1) {
                System.out.println("DO NOTHING");
            }
            else if (nums==0&&jPasswordField2.getText().equals("nothing")&&num2==1){
                javax.swing.JOptionPane.showMessageDialog(null, "You already have an existing password","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
                jPasswordField2.setText(null);

            }

            if(jPasswordField2.getText().equals("nothing")){

                jButton8.setText("Set Password");

            }

        }
        catch(Exception efg){
            efg.printStackTrace();

        }

        // Add your handling code here:
    }//GEN-LAST:event_jPasswordField2FocusLost

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        encrptedpasswordDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        java.lang.String currPassWord = null;

        currPassWord = this.jPasswordField1.getText();

        java.lang.String currentUser = null;
        int num=0,num_user=0;
        String fullname=null, group=null;

        /////getting the current password
        try{
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtSS = connectDB.createStatement();

            java.sql.ResultSet rsetSS = stmtSS.executeQuery("SELECT CONCAT(f_name,' ',l_name) ,group_name from secure_menu_access where login_name='"+currentUser+"'");

            while (rsetSS.next()) {

                fullname = rsetSS.getString(1);
                group = rsetSS.getString(2);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='"+md5(jPasswordField2.getText())+"' and  login_username='"+currentUser+"' and menu_access='Approve Vouchers'");

            while (rsets.next()) {
                num=rsets.getInt(1);

            }

            java.sql.Statement stmtsg = connectDB.createStatement();

            java.sql.ResultSet rsetsg = stmtsg.executeQuery("SELECT count(*) from secure_levels_access where   login_username='"+currentUser+"' and menu_access='Approve Vouchers'");

            while (rsetsg.next()) {
                num_user=rsetsg.getInt(1);

            }
            if(checkPasswordModality()==true){

                if(jButton8.getActionCommand().equals("Set Password")){

                    if(num==0&&num_user==0){
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO secure_levels_access(login_username, login_name, group_name, authorisation,menu_access) VALUES (?, ?, ?, ?,?)");
                        pstmt2.setObject(1,  currentUser);
                        // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                        pstmt2.setObject(2, fullname);
                        pstmt2.setObject(3,  group);
                        pstmt2.setObject(4, md5(jPasswordField4.getText()));
                        pstmt2.setObject(5,"Approve Vouchers");
                        pstmt2.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Password Created Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField2.setText(null);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);

                    }
                }
                else{

                    if(num==1&&num_user==1){
                        java.sql.PreparedStatement pstmts=connectDB.prepareStatement("UPDATE secure_levels_access set authorisation='"+md5(jPasswordField4.getText())+"' where authorisation='"+md5(jPasswordField2.getText())+"' and login_username='"+currentUser+"' and menu_access='Approve Vouchers'");
                        pstmts.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Password Changed Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField2.setText(null);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);
                    }
                    else{
                        jButton8.setText("Set Password");

                    }
                }
                //            if(num_user>=1&&num==1){
                    //             JOptionPane.showMessageDialog(null,"Password Changed Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                    //
                    //            }
            }
            else{
                JOptionPane.showMessageDialog(null,"Password Mismatch","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
                jPasswordField3.setText(null);
                jPasswordField4.setText(null);
            }
        }
        catch( Exception dfg){
            dfg.printStackTrace();

        }

        //        if (currPassWord.equals(secrets)) {
            //
            //            if (this.jPasswordField2.getText().equals(this.jPasswordField3.getText())) {
                //
                //                try {
                    //
                    //                    java.sql.Statement stmt1 = connectDB.createStatement();
                    //
                    //                    java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");
                    //
                    //                    while (rset1.next()) {
                        //
                        //                        currentUser = rset1.getString(1);
                        //
                        //                    }
                    //
                    //                    //                     java.sql.PreparedStatement pstmt = connectDB.prepareStatement("ALTER USER "+currentUser+" WITH PASSWORD '"+jPasswordField2.getText()+"'");
                    //
                    //                    java.sql.Statement stmt = connectDB.createStatement();
                    //
                    //                    stmt.executeUpdate("ALTER USER "+currentUser+" WITH PASSWORD '"+jPasswordField2.getText()+"'");
                    //
                    //                    //                        pstmt.executeUpdate();
                    //
                    //                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "Password changed for user : "+currentUser);
                    //
                    //                    this.dispose();
                    //
                    //                } catch(java.sql.SQLException SQLExec) {
                    //
                    //                    SQLExec.printStackTrace();
                    //
                    //                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), SQLExec.getLocalizedMessage());
                    //
                    //                }
                //
                //            } else {
                //
                //                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "New password must be confirmed by an identical entry on the Retyped password entry.");
                //
                //            }
            //
            //        }else {
            //
            //            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "You hava typed your current password incorrectly.");
            //
            //        }

        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
public  Boolean checkPasswordModality(){
        Boolean modality=false;
    if(jPasswordField3.getText().equals(jPasswordField4.getText())){
    modality=true;
    
    }
    else{
     modality=false;
    }
    
    return modality;
    
    }
    
     public static String md5(String input) {
         
        String md5 = null;
         
        if(null == input) return null;
         
        try {
             
        //Create MessageDigest object for MD5
        MessageDigest digest = MessageDigest.getInstance("MD5");
         
        //Update input string in message digest
        digest.update(input.getBytes(), 0, input.length());
 
        //Converts message digest value in base 16 (hex)
        md5 = new BigInteger(1, digest.digest()).toString(16);
 
        } catch (NoSuchAlgorithmException e) {
 
            e.printStackTrace();
        }
        return md5;
    }
    private void encrptedpasswordDialogcloseDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_encrptedpasswordDialogcloseDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_encrptedpasswordDialogcloseDialog

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        action="voucher";
           passwd.setSize(400, 200);
        passwd.setLocation(350,230);
        //passwd.setLocation(point);
        passwd.setVisible(true);
        jPasswordField1.setText(null);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
         jButton17.doClick();   
        }
        
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
            // TODO add your handling code here:
    this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));  
                                          for (int k = 0; k < jTable2.getRowCount(); k++) {
                                            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                                                jTable2.getModel().setValueAt(null, k, r);
                                                 }
                                            }
    jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select supplier,invoice_no,date_received,date_on_invoice,amount,delivered_by,username as received_by,doc_type from ac_creditor_invoice_register where status=false order by 1,2"));
        
     bankStatementTabbedPane.setSelectedIndex(1);
     jLabel1.setText("Received Invoices awaiting Documentation");
     bankStatementTabbedPane.setTitleAt(bankStatementTabbedPane.getSelectedIndex(), "Received Invoices awaiting Documentation");
      jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 4)));
     //jTextField1.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 2)));
    // bankStatementTabbedPane.getModel().
     this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton13ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane bankStatementTabbedPane;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField dealerNameTxt;
    private javax.swing.JDialog encrptedpasswordDialog;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckInv;
    private javax.swing.JCheckBox jChecklpo;
    private javax.swing.JCheckBox jCheckvoucher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JDialog jSearchDialog4;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel5;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane5;
    private javax.swing.JTable jSearchTable4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField lpoTxt;
    private javax.swing.JDialog lposearchdialog;
    private javax.swing.JTable lpotable;
    private javax.swing.JTextField lpotxt;
    private javax.swing.JDialog passwd;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    // End of variables declaration//GEN-END:variables
}
