/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.accounting;

/**
 *
 * @author SPLgithinji
 */
public class editPayedRequisition extends javax.swing.JDialog {
private javax.swing.JComboBox cmbox;
    /**
     * Creates new form editPayedRequisition
     */
    java.sql.Connection connectDB = null;
    javax.swing.JSpinner beginDateSpinner = null;
    javax.swing.JSpinner endDateSpinner = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    public editPayedRequisition(java.awt.Frame parent, boolean modal,java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        super(parent, modal);
        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchImprestDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        searchImprstTxt = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTableImprest = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tableSearchDialog = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        tableSearchActivityTxt = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTableActivity = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel10 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        imprestRadio = new javax.swing.JRadioButton();
        pettyCashRadio = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        imprestTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        imprestHolderCmbx = new javax.swing.JComboBox();
        imprestTypeCmbx = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel61 = new javax.swing.JPanel();
        dealerNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        systemNoTxt = new javax.swing.JTextField();
        dealerCodeTxt = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        warrantNoTxt = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel9 = new javax.swing.JLabel();
        imprestNumberTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        deptNameCmbx = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        deleteImprestBtn = new javax.swing.JButton();
        editImprestBtn = new javax.swing.JButton();
        closeImprestBtn = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();

        searchImprestDialog.setModal(true);
        searchImprestDialog.setUndecorated(true);
        searchImprestDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchImprstTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchImprstTxtCaretUpdate(evt);
            }
        });
        searchImprstTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchImprstTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(searchImprstTxt, gridBagConstraints);

        jSearchTableImprest.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTableImprest.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTableImprest.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTableImprest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableImprestMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTableImprest);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton41, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchImprestDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        tableSearchDialog.setModal(true);
        tableSearchDialog.setUndecorated(true);
        tableSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        tableSearchActivityTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tableSearchActivityTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(tableSearchActivityTxt, gridBagConstraints);

        jSearchTableActivity.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTableImprest.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTableImprest);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTableActivity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableActivityMouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTableActivity);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tableSearchDialog.getContentPane().add(jSearchPanel1, gridBagConstraints);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("EDIT AND DELETE SAVED TRANSACTIONS");
        setBounds(new java.awt.Rectangle(100, 150, 789, 486));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(892, 526));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jInternalFrame1.setPreferredSize(new java.awt.Dimension(892, 559));
        jInternalFrame1.setVisible(true);
        jInternalFrame1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(imprestRadio);
        imprestRadio.setSelected(true);
        imprestRadio.setText("Imprest");
        imprestRadio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                imprestRadioItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(imprestRadio, gridBagConstraints);

        buttonGroup1.add(pettyCashRadio);
        pettyCashRadio.setText("Petty Cash");
        pettyCashRadio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pettyCashRadioItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(pettyCashRadio, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Accounts here"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jScrollPane13.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N

        imprestTable.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        imprestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Expense Description", "Activity code", "Invoice/Imprest No", "Invoice/Imprest Date", "Date Due", "Reason for Payment", "Amount", "VAT Amt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        imprestTable.setShowHorizontalLines(false);
        cmbox = new javax.swing.JComboBox();
        javax.swing.table.TableColumn dateEditor = imprestTable.getColumnModel().getColumn(4);
        //com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new org.jdesktop.swingx.JXDatePicker(), imprestTable);
        com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), imprestTable);
        dateEditor.setCellEditor(dateCellEditor);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer.TRAILING);
        dateEditor.setCellRenderer(cellRenderer);

        javax.swing.table.TableColumn dateEditor1 = imprestTable.getColumnModel().getColumn(3);
        com.afrisoftech.lib.DateCellEditor dateCellEditor1 = new  com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), imprestTable);
        dateEditor1.setCellEditor(dateCellEditor1);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer1 = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer1.TRAILING);
        dateEditor.setCellRenderer(cellRenderer1);

        imprestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprestTableMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(imprestTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jScrollPane13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel3.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel8.setLayout(new java.awt.GridBagLayout());

        imprestHolderCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION   SELECT DISTINCT payee FROM ac_petty_cash WHERE voucher_no ilike 's%'  group by payee having sum(debit-credit) > 0 order by 1"));
        imprestHolderCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestHolderCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(imprestHolderCmbx, gridBagConstraints);

        imprestTypeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' as activity UNION SELECT 'Personal Claims' as activity UNION SELECT activity FROM pb_activity WHERE activity ilike '%imprest%' order by 1"));
        imprestTypeCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestTypeCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(imprestTypeCmbx, gridBagConstraints);

        jLabel1.setText("Supplier/Creditor/Staff Member");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel1, gridBagConstraints);

        jLabel4.setText("Imprest Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel4, gridBagConstraints);

        jLabel7.setText("System Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel7, gridBagConstraints);

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(84, 25));
        jPanel61.setPreferredSize(new java.awt.Dimension(59, 25));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        dealerNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(dealerNameTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search patient name");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jPanel61, gridBagConstraints);

        jLabel5.setText("Standing Imprest Holder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel5, gridBagConstraints);

        systemNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(systemNoTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(dealerCodeTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel8, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        warrantNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(warrantNoTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(datePicker1, gridBagConstraints);

        jLabel9.setText("Warrant Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jLabel9, gridBagConstraints);

        imprestNumberTxt.setEditable(false);
        imprestNumberTxt.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(imprestNumberTxt, gridBagConstraints);

        jLabel6.setText("Imprest Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jLabel6, gridBagConstraints);

        jLabel2.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel9, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        deptNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT depart_name FROM pb_main_department ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.53;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(deptNameCmbx, gridBagConstraints);

        jLabel8.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        jPanel5.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        deleteImprestBtn.setText("Delete Entry");
        deleteImprestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteImprestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(deleteImprestBtn, gridBagConstraints);

        editImprestBtn.setText("Save Changes");
        editImprestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editImprestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(editImprestBtn, gridBagConstraints);

        closeImprestBtn.setText("Close Form");
        closeImprestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeImprestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(closeImprestBtn, gridBagConstraints);

        jButton53.setMnemonic('r');
        jButton53.setText("Remove Row");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton53, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jInternalFrame1.getContentPane().add(jPanel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jInternalFrame1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchImprstTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchImprstTxtCaretUpdate
        if (this.searchImprstTxt.getCaretPosition() < 1) {
            System.out.print("Nothing");
        } else {
            if (imprestRadio.isSelected()) {
                jSearchTableImprest.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select dealer_code as Number, dealer as Payee, "
             + "document_no as Warrant_no,voucher_no as System_No from ac_bills where dealer_code ILIKE '" + searchImprstTxt.getText() + "%' or dealer ilike '" + searchImprstTxt.getText() + "%'or"
             + " document_no ILIKE '" + searchImprstTxt.getText() + "%' and debit = '0.00' order by 2"));

                jSearchScrollPane.setViewportView(jSearchTableImprest);
            } else {
                jSearchTableImprest.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select dealer_code as Number, "
               + "payee as Payee, document_no as Warrant_no,requisition_no as System_No from ac_petty_cash_requisition where dealer_code ILIKE '" + searchImprstTxt.getText() + "%' "
               + "or payee ilike '" + searchImprstTxt.getText() + "%'or document_no ILIKE '" + searchImprstTxt.getText() + "%' and debit = '0.00' order by 2"));
                //SELECT dealer, description, code, voucher_no, voucher_date, reason, date_deu, debit, credit, date, final_voucher_no, vat_amt, dealer_code,approved, commited, document_no FROM ac_bills;

                jSearchScrollPane.setViewportView(jSearchTableImprest);
            }
            // System.out.println("Cannot sort out");

        }           // Add your handling code here:
    }//GEN-LAST:event_searchImprstTxtCaretUpdate

    private void searchImprstTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchImprstTxtActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_searchImprstTxtActionPerformed

    private void jSearchTableImprestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableImprestMouseClicked
        clear(); 
        dealerNameTxt.setText(jSearchTableImprest.getValueAt(jSearchTableImprest.getSelectedRow(), 1).toString());
        dealerCodeTxt.setText(jSearchTableImprest.getValueAt(jSearchTableImprest.getSelectedRow(), 0).toString());
        warrantNoTxt.setText(jSearchTableImprest.getValueAt(jSearchTableImprest.getSelectedRow(), 2).toString());
        systemNoTxt.setText(jSearchTableImprest.getValueAt(jSearchTableImprest.getSelectedRow(), 3).toString());
        if(systemNoTxt.getText().toString().contains("T_IMPREST_REQ")){
            imprestTypeCmbx.setSelectedItem("Temporary Imprest");
        }else if(systemNoTxt.getText().toString().contains("S_IMPREST_REQ")){
            imprestTypeCmbx.setSelectedItem("Standing Imprest");
        }else if(systemNoTxt.getText().toString().contains("P_IMPREST_REQ")){
            imprestTypeCmbx.setSelectedItem("Personal Claims");
        }else if(systemNoTxt.getText().toString().contains("PERS_REQ")){
            imprestTypeCmbx.setSelectedItem("Personal Claims");
        }
        else if(systemNoTxt.getText().toString().contains("PETT_REQ")){
            imprestTypeCmbx.setSelectedItem("Temporary Imprest");
        }
        //populate table
        if(imprestRadio.isSelected()){
        try{
        java.sql.PreparedStatement imprestPrepare = connectDB.prepareStatement("SELECT dealer, description, code, voucher_no, "
                + "voucher_date, reason, date_deu, debit, credit, date::date, final_voucher_no, vat_amt, dealer_code,approved, "
                + "commited, document_no FROM ac_bills where document_no = '"+jSearchTableImprest.getValueAt(jSearchTableImprest.getSelectedRow(), 2).toString()+"' and debit = '0.00'");
        java.sql.ResultSet imprestResult = imprestPrepare.executeQuery();
        
        while(imprestResult.next()){
        //deptNameCmbx.setSelectedItem(imprestResult.getObject(3));
        datePicker1.setDate(imprestResult.getDate(10));
        imprestTable.getModel().setValueAt(imprestResult.getObject(2), 0, 0);
        imprestTable.getModel().setValueAt(imprestResult.getObject(3), 0, 1);
        imprestTable.getModel().setValueAt(imprestResult.getObject(16), 0, 2);
        imprestTable.getModel().setValueAt(imprestResult.getObject(5), 0, 3);
        imprestTable.getModel().setValueAt(imprestResult.getObject(7), 0, 4);
        imprestTable.getModel().setValueAt(imprestResult.getObject(6), 0, 5);//reason
        imprestTable.getModel().setValueAt(imprestResult.getObject(9), 0, 6);//credit
        imprestTable.getModel().setValueAt(imprestResult.getObject(12), 0, 7);
        }
        } 

        
        catch(Exception e){
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
        }else if(pettyCashRadio.isSelected()){
       try{
//        
        java.sql.PreparedStatement imprestPreparePetty = connectDB.prepareStatement("SELECT requisitioner, payee, department, purpose, debit, credit, date_required::date," +
    "  status, user_name, approved, requisition_no, paid, code, reason, quantity, dealer_code, "
                + "document_no FROM ac_petty_cash_requisition where document_no ='"+jSearchTableImprest.getValueAt(jSearchTableImprest.getSelectedRow(), 2).toString()+"' and debit = '0.00'");
        java.sql.ResultSet imprestResultPetty = imprestPreparePetty.executeQuery(); 
        
        while(imprestResultPetty.next()){
        datePicker1.setDate(imprestResultPetty.getDate(7));
        imprestTypeCmbx.setSelectedItem(imprestResultPetty.getObject(14));
        deptNameCmbx.setSelectedItem(imprestResultPetty.getObject(3));
        imprestNumberTxt.setText(imprestResultPetty.getObject(4).toString());
        imprestHolderCmbx.setSelectedItem(imprestResultPetty.getObject(1));
        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(14), 0, 0);
        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(13), 0, 1);
        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(17), 0, 2);
//        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(5), 0, 3);
//        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(7), 0, 4);
        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(14), 0, 5);
        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(5), 0, 6);
//        imprestTable.getModel().setValueAt(imprestResultPetty.getObject(12), 0, 7);
        
        }
        
        }
       catch(Exception r){
            r.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, r.getMessage());
        }            
        }
        
        this.searchImprestDialog.dispose(); 
        
    }//GEN-LAST:event_jSearchTableImprestMouseClicked

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        this.searchImprestDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed
private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane13.getLocationOnScreen();
        tableSearchDialog.setSize(600, 200);
        tableSearchDialog.setLocation(point);
        tableSearchDialog.setVisible(true);
    }
    private void imprestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprestTableMouseClicked
        if (imprestTable.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();

        } else if ((imprestTable.getSelectedColumn() == 3) || (imprestTable.getSelectedColumn() == 4)) {

            kiwi.ui.DateChooser dateChooser = new kiwi.ui.DateChooser();

            dateChooser.setVisible(true);

        }// Add your handling code here:
    }//GEN-LAST:event_imprestTableMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();
        

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt.getLocationOnScreen();

        searchImprestDialog.setSize(600, 200);

        searchImprestDialog.setLocation(point);

        searchImprestDialog.setVisible(true);
    }
    private void imprestTypeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestTypeCmbxActionPerformed
        // TODO add your handling code here:
        //        if(imprestTypeCmbx.getSelectedItem().toString().equalsIgnoreCase("Standing Imprest")){
            //
            //        }
    }//GEN-LAST:event_imprestTypeCmbxActionPerformed

    private void imprestHolderCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestHolderCmbxActionPerformed
        try {

            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rst = pstmt.executeQuery("select DISTINCT voucher_no from ac_petty_cash where payee ilike '" + imprestHolderCmbx.getSelectedItem().toString() + "' and  voucher_no ilike 's%' group by voucher_no having sum(debit-credit) > 0");
            while (rst.next()) {
                imprestNumberTxt.setText(rst.getObject(1).toString());
            }

        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_imprestHolderCmbxActionPerformed

    private void tableSearchActivityTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tableSearchActivityTxtCaretUpdate
        //if (creditorsBtn.isSelected()) {

           // jSearchTableActivity.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where  activity ILIKE '%" + tableSearchActivityTxt.getText() + "%' order by activity"));

            // jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where (payment_modes ='Payable' OR payment_modes = 'Both') and activity ILIKE '" + jTextField1111.getText() + "%' order by activity"));

       // } else {

            if (imprestTypeCmbx.getSelectedItem().toString().contains("Imprest")) {

                jSearchTableActivity.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where activity ILIKE '" + imprestTypeCmbx.getSelectedItem().toString() + "%' order by activity"));

            } else {
                jSearchTableActivity.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT activity,code from pb_activity where (category_class ilike 'pled' or category_class ilike 'ba') and activity ILIKE '%" + tableSearchActivityTxt.getText() + "%' order by activity"));

            }
       // }
        // jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_tableSearchActivityTxtCaretUpdate

    private void jSearchTableActivityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableActivityMouseClicked
        imprestTable.setValueAt(jSearchTableActivity.getValueAt(jSearchTableActivity.getSelectedRow(), 0), imprestTable.getSelectedRow(), 0);
        imprestTable.setValueAt(jSearchTableActivity.getValueAt(jSearchTableActivity.getSelectedRow(), 1), imprestTable.getSelectedRow(), 1);

        // jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);

        tableSearchDialog.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTableActivityMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        tableSearchDialog.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void closeImprestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeImprestBtnActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_closeImprestBtnActionPerformed

    private void editImprestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editImprestBtnActionPerformed
        // TODO add your handling code here:
        try{
         connectDB.setAutoCommit(false);
         java.sql.Date invDate = null;
         java.sql.Date dateTo = null;
         String accountCode = null;
         String TransNo = null;
         String glType = null;
         if(imprestRadio.isSelected()){
        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE ac_bills" +
                "   SET dealer=?, description=?, code=?, voucher_no=?, voucher_date=?, " +
                "   reason=?, date_deu=?, debit=?, credit=?, date=?, final_voucher_no=?, " +
                "   vat_amt=?, dealer_code=?, approved=?, commited=?, document_no=?" +
                " WHERE document_no = '"+warrantNoTxt.getText().toString()+"'");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");

         java.sql.Statement pst22 = connectDB.createStatement();
         java.sql.ResultSet rs22 = pst22.executeQuery("select '" + imprestTable.getValueAt(0, 3).toString() + "'::date,'" + imprestTable.getValueAt(0, 4).toString() + "'::date");
         while (rs22.next()) {
            invDate = rs22.getDate(1);
            dateTo = rs22.getDate(2);
         }
        java.sql.Statement pst1 = connectDB.createStatement();
        java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
        while (rs1.next()) {
            accountCode = rs1.getObject(1).toString();
            glType = rs1.getObject(2).toString();
        }        
        pstmt1.setString(1, dealerNameTxt.getText().toString().toUpperCase());
        pstmt1.setObject(2, imprestTable.getValueAt(0, 0));
        pstmt1.setObject(3, imprestTable.getValueAt(0, 1));
        pstmt1.setObject(4, systemNoTxt.getText());
        pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
        pstmt1.setObject(6, imprestTable.getValueAt(0, 5).toString().toUpperCase());
        pstmt1.setObject(7, imprestTable.getValueAt(0, 4));
        pstmt1.setDouble(8, 0.00);
        pstmt1.setDouble(9, java.lang.Double.valueOf(imprestTable.getValueAt(0, 6).toString()));
        pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
        pstmt1.setObject(11, "");
        pstmt1.setDouble(12, java.lang.Double.valueOf(imprestTable.getValueAt(0, 7).toString()));
        pstmt1.setString(13, dealerCodeTxt.getText());
        pstmt1.setBoolean(14, false);
        pstmt1.setBoolean(15, false);
        pstmt1.setObject(16, imprestTable.getValueAt(0, 2).toString());
        pstmt1.executeUpdate();
         }
         else if(pettyCashRadio.isSelected()){
        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_petty_cash_requisition values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
        pstmt1.setString(1, imprestHolderCmbx.getSelectedItem().toString().toUpperCase());
        pstmt1.setObject(2, dealerNameTxt.getText().toUpperCase());
        pstmt1.setObject(3, deptNameCmbx.getSelectedItem().toString());
        pstmt1.setObject(4, imprestNumberTxt.getText());
        pstmt1.setDouble(5, 0.00);
        pstmt1.setDouble(6, java.lang.Double.valueOf(imprestTable.getValueAt(0, 6).toString()));
        pstmt1.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(invDate));
        pstmt1.setObject(8, "PENDING");
        pstmt1.setString(9, com.afrisoftech.lib.UserName.getLoginName(connectDB));
        pstmt1.setBoolean(10, false);
        pstmt1.setObject(11, systemNoTxt.getText());
        pstmt1.setBoolean(12, false);
        pstmt1.setString(13, accountCode);
        pstmt1.setObject(14, imprestTypeCmbx.getSelectedItem());
        pstmt1.setDouble(15, 1);
        pstmt1.setString(16, dealerCodeTxt.getText());
        pstmt1.setObject(17, imprestTable.getValueAt(0, 2).toString());
        pstmt1.executeUpdate();

         }
     connectDB.commit();
     connectDB.setAutoCommit(true);
     javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
     clear();
        }
        catch(Exception f){
            f.printStackTrace();
       javax.swing.JOptionPane.showMessageDialog(this, f.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
    try {
            connectDB.rollback();
        }catch (java.sql.SQLException sql){
            javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
}
    }//GEN-LAST:event_editImprestBtnActionPerformed
    private void clear(){
     for (int k = 0; k < imprestTable.getRowCount(); k++) {
            for (int r = 0; r < imprestTable.getColumnCount(); r++) {
                imprestTable.getModel().setValueAt(null, k, r);
            }
        }
     dealerCodeTxt.setText("");
     systemNoTxt.setText("");
     imprestTypeCmbx.setSelectedIndex(0);
     imprestHolderCmbx.setSelectedIndex(0);
     dealerNameTxt.setText("");
     deptNameCmbx.setSelectedIndex(0);
     imprestNumberTxt.setText("");
    }
    private void deleteImprestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteImprestBtnActionPerformed
        // TODO add your handling code here:
        if(imprestRadio.isSelected()){
        try{
        java.sql.PreparedStatement stmntDel = connectDB.prepareStatement("DELETE FROM ac_bills WHERE document_no = ?");
        stmntDel.setObject(1, warrantNoTxt.getText().toString());
        stmntDel.executeUpdate();
        javax.swing.JOptionPane.showMessageDialog(this, "Deleted Successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        clear();
        }catch(Exception ef){
           ef.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this, ef.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        }else if(pettyCashRadio.isSelected()){
         try{
        java.sql.PreparedStatement stmntDel1 = connectDB.prepareStatement("DELETE FROM ac_petty_cash_requisition WHERE document_no = ?");
        stmntDel1.setObject(1, warrantNoTxt.getText().toString());
        stmntDel1.executeUpdate();
        javax.swing.JOptionPane.showMessageDialog(this, "Deleted Successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        clear();
        }catch(Exception ef){
           ef.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this, ef.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
        }    
        }
    }//GEN-LAST:event_deleteImprestBtnActionPerformed

    private void imprestRadioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_imprestRadioItemStateChanged
        // TODO add your handling code here:
        
        clear();
        jSearchTableImprest.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select dealer_code as Number, dealer as Payee, "
     + "document_no as Warrant_no,voucher_no as System_No from ac_bills where debit = '0.00' order by 2"));
    }//GEN-LAST:event_imprestRadioItemStateChanged

    private void pettyCashRadioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pettyCashRadioItemStateChanged
        // TODO add your handling code here:
        clear();
        jSearchTableImprest.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select dealer_code as Number, "
               + "payee as Payee, document_no as Warrant_no,requisition_no as System_No from ac_petty_cash_requisition where debit = '0.00' order by 2"));
    }//GEN-LAST:event_pettyCashRadioItemStateChanged

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        int rows2Delete = imprestTable.getSelectedRowCount();

        int[] selectedRows = imprestTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) imprestTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) imprestTable.getModel();

                defTableModel.removeRow(imprestTable.getSelectedRow());

            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton53ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editPayedRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editPayedRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editPayedRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editPayedRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                editPayedRequisition dialog = new editPayedRequisition(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        }
//        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton closeImprestBtn;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel dealerCodeTxt;
    private javax.swing.JTextField dealerNameTxt;
    private javax.swing.JButton deleteImprestBtn;
    private javax.swing.JComboBox deptNameCmbx;
    private javax.swing.JButton editImprestBtn;
    private javax.swing.JComboBox imprestHolderCmbx;
    private javax.swing.JTextField imprestNumberTxt;
    private javax.swing.JRadioButton imprestRadio;
    private javax.swing.JTable imprestTable;
    private javax.swing.JComboBox imprestTypeCmbx;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton9;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTableActivity;
    private javax.swing.JTable jSearchTableImprest;
    private javax.swing.JRadioButton pettyCashRadio;
    private javax.swing.JButton searchButton;
    private javax.swing.JDialog searchImprestDialog;
    private javax.swing.JTextField searchImprstTxt;
    private javax.swing.JTextField systemNoTxt;
    private javax.swing.JTextField tableSearchActivityTxt;
    private javax.swing.JDialog tableSearchDialog;
    private javax.swing.JTextField warrantNoTxt;
    // End of variables declaration//GEN-END:variables
}
