/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import javax.swing.JOptionPane;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/**
 *
 * @author root
 */
public class VoucherApprintfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form loanpymntintfr
     */
    javax.swing.table.TableModel tableModel = null;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    public static String requNo = null, voucherNo = null, lpoNo = null;

    public VoucherApprintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton12.setEnabled(false);
        jButton13.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchSupplierOrOthersTable = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton51 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        encrptedpasswordDialog = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPasswordField4 = new javax.swing.JPasswordField();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        passwd = new javax.swing.JDialog();
        jPanel56 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        dealerNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        supplierChkbx = new javax.swing.JCheckBox();
        imprestChkbx = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton2 = new javax.swing.JButton();
        removerow = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        commentsTxt = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        searchSupplierOrOthersTable.setModal(true);
        searchSupplierOrOthersTable.setUndecorated(true);
        searchSupplierOrOthersTable.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        jTextField113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField113ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchSupplierOrOthersTable.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField1111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        encrptedpasswordDialog.setTitle("Changing User password");
        encrptedpasswordDialog.setModal(true);
        encrptedpasswordDialog.setResizable(false);
        encrptedpasswordDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                encrptedpasswordDialogcloseDialog(evt);
            }
        });
        encrptedpasswordDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(230, 230, 230));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel8.setText("New Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Retype New Pasword");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Current Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel10, gridBagConstraints);

        jPasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel3.add(jPasswordField2, gridBagConstraints);

        jPasswordField3.setToolTipText("Must be aleast 8 characters long.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel3.add(jPasswordField3, gridBagConstraints);

        jPasswordField4.setToolTipText("Same as \"New Password\" above.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel3.add(jPasswordField4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel3, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Change your password here.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel5, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButton7.setMnemonic('n');
        jButton7.setText("Cancel");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton7, gridBagConstraints);

        jButton8.setMnemonic('C');
        jButton8.setText("Change Password");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel6, gridBagConstraints);

        passwd.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        passwd.setModal(true);
        passwd.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel56.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Authorisation Password Here"));
        jPanel56.setAutoscrolls(true);
        jPanel56.setLayout(new java.awt.GridBagLayout());

        jButton17.setText("Approve Authorisation");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton17, gridBagConstraints);

        jButton18.setText("Close Dialog");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton18, gridBagConstraints);

        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 50);
        jPanel56.add(jPasswordField1, gridBagConstraints);

        jButton6.setText("Change Password");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel56.add(jButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        passwd.getContentPane().add(jPanel56, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Bills Approval");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jXTitledPanel1.setTitle("");
        jXTitledPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tick the invoices You want to approve for payment"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Supplier/Staff Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        dealerNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(dealerNameTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jLabel4.setText("Acc. No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel4, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(jTextField2, gridBagConstraints);

        jLabel1.setText("Period To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Period From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(datePicker2, gridBagConstraints);

        buttonGroup1.add(supplierChkbx);
        supplierChkbx.setSelected(true);
        supplierChkbx.setText("Supplier/Creditor");
        supplierChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        supplierChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(supplierChkbx, gridBagConstraints);

        buttonGroup1.add(imprestChkbx);
        imprestChkbx.setText("Imprest / Other Payments");
        imprestChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        imprestChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(imprestChkbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jXTitledPanel1.add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        /*     tableModel = jTable1.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        */
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date Due", "Invoice/Imprest No.", "Transaction Type", "Item", "Amount", "Amt Approved", "Approve ?", "Invoice/Imprest No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableModel = jTable1.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        jTable1.setShowHorizontalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 250.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jXTitledPanel1.add(jPanel2, gridBagConstraints);

        jLabel5.setText("Total Approvals");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jXTitledPanel1.add(jLabel5, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 0, 0));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jXTitledPanel1.add(jTextField1, gridBagConstraints);

        jButton1.setMnemonic('r');
        jButton1.setText("Approve");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('O');
        jButton2.setText("Approve & Print");
        jButton2.setToolTipText("Click here enter data");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.add(jButton2, gridBagConstraints);

        removerow.setMnemonic('R');
        removerow.setText("Remove Row");
        removerow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerowActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        jXTitledPanel1.add(removerow, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.add(jButton4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.add(jLabel6, gridBagConstraints);

        jButton5.setText("Approved Vouchers");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jXTitledPanel1.add(jButton5, gridBagConstraints);

        commentsTxt.setBorder(javax.swing.BorderFactory.createTitledBorder("Type comments here"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 10.0;
        jXTitledPanel1.add(commentsTxt, gridBagConstraints);

        jButton10.setBackground(new java.awt.Color(153, 255, 255));
        jButton10.setForeground(new java.awt.Color(0, 102, 102));
        jButton10.setText("GRN");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        jXTitledPanel1.add(jButton10, gridBagConstraints);

        jButton12.setBackground(new java.awt.Color(153, 255, 255));
        jButton12.setForeground(new java.awt.Color(0, 102, 102));
        jButton12.setText("Acceptance Form");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        jXTitledPanel1.add(jButton12, gridBagConstraints);

        jButton11.setBackground(new java.awt.Color(153, 255, 255));
        jButton11.setForeground(new java.awt.Color(0, 102, 102));
        jButton11.setText("Payment Voucher");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        jXTitledPanel1.add(jButton11, gridBagConstraints);

        jButton13.setBackground(new java.awt.Color(153, 255, 255));
        jButton13.setForeground(new java.awt.Color(0, 102, 102));
        jButton13.setText("Imprest Form");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        jXTitledPanel1.add(jButton13, gridBagConstraints);

        jButton3.setText("Reject");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 9;
        jXTitledPanel1.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        getContentPane().add(jXTitledPanel1, gridBagConstraints);

        setBounds(0, 0, 924, 390);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);

        System.out.println(datenowSql.toString());

        int j = jTable1.getRowCount();
        //    String requNo = null;
        jButton1ActionPerformed(evt);

        com.afrisoftech.reports.ChequeRequisitionPdf policy = new com.afrisoftech.reports.ChequeRequisitionPdf();
        policy.ChequeRequisitionPdf(connectDB, requNo);

        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void removerowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerowActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_removerowActionPerformed

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), jTable1.getSelectedRow(), 1);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), jTable1.getSelectedRow(), 2);

        jSearchDialog.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog.setSize(400, 200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);
    }
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select invoice_no,date as date,sum(credit-debit) as amount FROM ac_accounts_payable WHERE invoice_no ILIKE '" + jTextField1111.getText() + "%' AND dealer = '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and paid = false and approved = false GROUP BY invoice_no,date order by invoice_no"));
        jSearchScrollPane.setViewportView(jSearchTable);
        //  System.out.println("Cannot sort out");

        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (supplierChkbx.isSelected() == true) {
            jButton10.setEnabled(true);
            jButton11.setEnabled(true);
            jButton12.setEnabled(true);
            jButton13.setEnabled(false);
            voucherNo = jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString();
            try {
                java.sql.Statement st119 = connectDB.createStatement();
                java.sql.ResultSet ress19 = st119.executeQuery("select refno from ac_aie_commitment where voucher_no='" + jTable1.getValueAt(jTable1.getSelectedRow(), 7) + "'");
                while (ress19.next()) {
                    lpoNo = ress19.getString(1);
                }
            } catch (Exception r) {
                r.printStackTrace();
            }
        } else if (imprestChkbx.isSelected() == true) {
            jButton10.setEnabled(false);
            jButton11.setEnabled(false);
            jButton12.setEnabled(false);
            jButton13.setEnabled(true);
            voucherNo = jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString();
        }
        /*
         if (jTable1.getSelectedColumn() == 0) {
   
         this.cmboxMouseClicked();
         }else{
         */
        //if (jTable1.getSelectedColumn() == 4) {
        //   this.cmboxMouseClicked();
        System.out.println("Check here");
        if (jTable1.getValueAt(jTable1.getSelectedRow(), 2) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());

            // if (jTable1.getValueAt(jTable1.getSelectedRow(), 2) != null){
            //if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(),4).equals(true)){ 
            /// if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
            if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString().equalsIgnoreCase("true")) {

                jTable1.setValueAt(new java.lang.Float(floatCol2), jTable1.getSelectedRow(), 5);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                this.jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                // jTable1.setValueAt(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1), jTable1.getSelectedRow(), 7);
                // }

            } else {
                System.out.println("Check here");
                // if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(),4).equals(false)){
                if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.FALSE) {
                    System.out.println("Check here too");
                    jTable1.setValueAt(new java.lang.Float(0.00), jTable1.getSelectedRow(), 5);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                    this.jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    // }
                }
            }
        }
        // }
        // }
// Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (this.jTextField113.getCaretPosition() < 3) {
            System.out.print("Nothing");
        } else {
            if (supplierChkbx.isSelected()) {
                //jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT code,supplier_name as name from st_suppliers where supplier_name ILIKE '%" + jTextField113.getText() + "%' order by supplier_name"));
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer as Supplier FROM ac_accounts_payable where approved=false and voucher_no!='' and examination=true and dealer ilike '%" + jTextField113.getText() + "%' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )"));
            } else if (imprestChkbx.isSelected()) {
                //jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT employee_no, first_name||' '||last_name as name FROM master_file WHERE first_name||' '||middle_name||' '||last_name ilike '%" + jTextField113.getText() + "%' order by 2"));
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct employee_no, first_name||' '||last_name as name FROM master_file WHERE first_name||' '||middle_name||' '||last_name ilike  '%" + jTextField113.getText() + "%' and employee_no in (SELECT dealer_code FROM ac_bills WHERE approved = false AND cancelled=false AND examination=true union select dealer_code from ac_petty_cash_requisition WHERE approved = false AND cancelled=false AND examination=true and accountant=true and finance_head=false) union SELECT dealer_code,dealer FROM ac_bills WHERE approved = false AND cancelled=false AND examination=true and dealer ilike  '%" + jTextField113.getText() + "%' union select dealer_code,payee from ac_petty_cash_requisition WHERE approved = false AND cancelled=false AND examination=true and accountant=true and finance_head=false  and payee ilike  '%" + jTextField113.getText() + "%' "));
            }

            jSearchScrollPane2.setViewportView(jSearchTable2);
            System.out.println("Cannot sort out");

        } // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.dealerNameTxt.getLocationOnScreen();

        searchSupplierOrOthersTable.setSize(600, 200);

        searchSupplierOrOthersTable.setLocation(point);

        searchSupplierOrOthersTable.setVisible(true);
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.searchSupplierOrOthersTable.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    private void populateTable1(java.lang.String patient_no) {
        /*       for (int k = 0; k < jTable1.getRowCount(); k++ ) {
         for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
         jTable1.getModel().setValueAt(null,k,r);
         }
         }
         */
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");



        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(supplier_name) FROM st_suppliers WHERE supplier_name = '" + patient_no + "'");

            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
///select date_due,invoice_no,transaction_type,item,(credit-debit) AS AMOUNT,approved 
                // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select invoice_no,date_due,credit,approved FROM ac_accounts_payable where approved = 'false' and paid = 'false' and dealer ='" + patient_no + "' AND (transaction_type = 'INV' OR transaction_type = 'Raise Invoice' OR transaction_type = 'Stock Delivery') AND date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "'");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery(""
                        + "select date_due,invoice_no, transaction_type,item,(credit-debit) AS AMOUNT FROM ac_accounts_payable where approved=false and date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' and dealer ='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(patient_no) + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )");
                //   + " date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "'");
//select date_due,invoice_no, transaction_type,item,(credit-debit) AS AMOUNT FROM ac_accounts_payable where  dealer ='SURGILINKS LIMITED' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 )

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 4);


                    i++;

                }
            }

        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }


    }

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        //jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());

        if (supplierChkbx.isSelected()) {
            dealerNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
            jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select date_due,invoice_no,transaction_type,item,"
                    + "(credit-debit) AS AMOUNT, 0.00 as approved_amount, false as approve,voucher_no FROM "
                    + "ac_accounts_payable where approved=false and voucher_no!='' and examination=true and date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' and dealer ='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) != 0 ) order by invoice_no"));

        } else if (imprestChkbx.isSelected()) {
            dealerNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
            String correct_name = com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText());




            System.out.println("The correct name is " + correct_name);
//            jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date_deu as date_due,voucher_no as imprest_no,description,reason,credit as amount, 0.00 as approved_amount, false as approve,final_voucher_no "
//                    + " FROM ac_bills WHERE approved = false AND dealer ilike '%" +correct_name+ "%' AND voucher_no in (SELECT refno FROM ac_aie_commitment) order by 2 "));

            jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT date_deu as date_due,voucher_no as imprest_no,description,reason,credit as amount, 0.00 as approved_amount, false as approve,final_voucher_no FROM ac_bills WHERE approved = false AND cancelled=false AND examination=true and  dealer ilike '%" + correct_name + "%' union SELECT date_due as Invoice_date, final_voucher_no as imprest_no, reason, description, credit as amount, 0.00 as approved_amount, false as approve, requisition_no FROM ac_petty_cash_requisition WHERE approved = false AND cancelled=false AND examination=true and accountant=true and payee ilike '%" + correct_name + "%' order by 2"));

        }
        this.searchSupplierOrOthersTable.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jTextField113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField113ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        passwd.setSize(400, 200);
        passwd.setLocation(350, 230);
        //passwd.setLocation(point);
        passwd.setVisible(true);
        jPasswordField1.setText(null);


        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void imprestChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestChkbxActionPerformed

        jButton2.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_imprestChkbxActionPerformed

    private void supplierChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierChkbxActionPerformed
        // jButton2.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierChkbxActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //  biz.systempartners.reports.ApprovedVouchersIntfr.
        com.afrisoftech.hospital.HospitalMain.approvedVouchersmnit.doClick();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jPasswordField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusLost

        java.lang.String currPassWord = null, currentUser = null;

        currPassWord = this.jPasswordField1.getText();
        int nums = 0, num2 = 0;

        try {
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtsd = connectDB.createStatement();

            java.sql.ResultSet rsetsd = stmtsd.executeQuery("SELECT count(*) from secure_levels_access where  login_username='" + currentUser + "' and menu_access='Approve Vouchers'");

            while (rsetsd.next()) {
                num2 = rsetsd.getInt(1);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='" + md5(jPasswordField2.getText()) + "' and  login_username='" + currentUser + "' and menu_access='Approve Vouchers'");

            while (rsets.next()) {
                nums = rsets.getInt(1);

            }

            if (nums == 0 && !jPasswordField2.getText().equals("nothing")) {

                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "You have typed your current password incorrectly");
                jPasswordField2.setText(null);
                //       jPasswordField1.grabFocus();

            } else if (nums == 1 && !jPasswordField2.getText().equals("nothing") && num2 >= 1) {

                jButton8.setText("Change Password");

            } else if (nums == 0 && jPasswordField2.getText().equals("nothing") && num2 != 1) {
                System.out.println("DO NOTHING");
            } else if (nums == 0 && jPasswordField2.getText().equals("nothing") && num2 == 1) {
                javax.swing.JOptionPane.showMessageDialog(null, "You already have an existing password", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                jPasswordField2.setText(null);

            }

            if (jPasswordField2.getText().equals("nothing")) {

                jButton8.setText("Set Password");

            }

        } catch (Exception efg) {
            efg.printStackTrace();

        }

        // Add your handling code here:
    }//GEN-LAST:event_jPasswordField2FocusLost

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        encrptedpasswordDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        java.lang.String currPassWord = null;

        currPassWord = this.jPasswordField1.getText();

        java.lang.String currentUser = null;
        int num = 0, num_user = 0;
        String fullname = null, group = null;

        /////getting the current password
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtSS = connectDB.createStatement();

            java.sql.ResultSet rsetSS = stmtSS.executeQuery("SELECT CONCAT(f_name,' ',l_name) ,group_name from secure_menu_access where login_name='" + currentUser + "'");

            while (rsetSS.next()) {

                fullname = rsetSS.getString(1);
                group = rsetSS.getString(2);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='" + md5(jPasswordField2.getText()) + "' and  login_username='" + currentUser + "' and menu_access='Approve Vouchers'");

            while (rsets.next()) {
                num = rsets.getInt(1);

            }

            java.sql.Statement stmtsg = connectDB.createStatement();

            java.sql.ResultSet rsetsg = stmtsg.executeQuery("SELECT count(*) from secure_levels_access where   login_username='" + currentUser + "' and menu_access='Approve Vouchers'");

            while (rsetsg.next()) {
                num_user = rsetsg.getInt(1);

            }
            if (checkPasswordModality() == true) {

                if (jButton8.getActionCommand().equals("Set Password")) {

                    if (num == 0 && num_user == 0) {
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO secure_levels_access(login_username, login_name, group_name, authorisation,menu_access) VALUES (?, ?, ?, ?,?)");
                        pstmt2.setObject(1, currentUser);
                        // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                        pstmt2.setObject(2, fullname);
                        pstmt2.setObject(3, group);
                        pstmt2.setObject(4, md5(jPasswordField4.getText()));
                        pstmt2.setObject(5, "Approve Vouchers");
                        pstmt2.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Password Created Successfully", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField2.setText(null);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);

                    }
                } else {

                    if (num == 1 && num_user == 1) {
                        java.sql.PreparedStatement pstmts = connectDB.prepareStatement("UPDATE secure_levels_access set authorisation='" + md5(jPasswordField4.getText()) + "' where authorisation='" + md5(jPasswordField2.getText()) + "' and login_username='" + currentUser + "' and menu_access='Approve Vouchers'");
                        pstmts.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Password Changed Successfully", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField2.setText(null);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);
                    } else {
                        jButton8.setText("Set Password");

                    }
                }
                //            if(num_user>=1&&num==1){
                //             JOptionPane.showMessageDialog(null,"Password Changed Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                //
                //            }
            } else {
                JOptionPane.showMessageDialog(null, "Password Mismatch", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                jPasswordField3.setText(null);
                jPasswordField4.setText(null);
            }
        } catch (Exception dfg) {
            dfg.printStackTrace();

        }

        //        if (currPassWord.equals(secrets)) {
        //
        //            if (this.jPasswordField2.getText().equals(this.jPasswordField3.getText())) {
        //
        //                try {
        //
        //                    java.sql.Statement stmt1 = connectDB.createStatement();
        //
        //                    java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");
        //
        //                    while (rset1.next()) {
        //
        //                        currentUser = rset1.getString(1);
        //
        //                    }
        //
        //                    //                     java.sql.PreparedStatement pstmt = connectDB.prepareStatement("ALTER USER "+currentUser+" WITH PASSWORD '"+jPasswordField2.getText()+"'");
        //
        //                    java.sql.Statement stmt = connectDB.createStatement();
        //
        //                    stmt.executeUpdate("ALTER USER "+currentUser+" WITH PASSWORD '"+jPasswordField2.getText()+"'");
        //
        //                    //                        pstmt.executeUpdate();
        //
        //                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "Password changed for user : "+currentUser);
        //
        //                    this.dispose();
        //
        //                } catch(java.sql.SQLException SQLExec) {
        //
        //                    SQLExec.printStackTrace();
        //
        //                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), SQLExec.getLocalizedMessage());
        //
        //                }
        //
        //            } else {
        //
        //                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "New password must be confirmed by an identical entry on the Retyped password entry.");
        //
        //            }
        //
        //        }else {
        //
        //            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "You hava typed your current password incorrectly.");
        //
        //        }

        // Add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void encrptedpasswordDialogcloseDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_encrptedpasswordDialogcloseDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_encrptedpasswordDialogcloseDialog

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        java.lang.String access_code = null;
        String currentUser = null;
        try {

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.PreparedStatement pstmtsd = connectDB.prepareStatement("select authorisation from secure_levels_access where  login_username='" + currentUser + "' and menu_access='Approve Vouchers' and authorisation='" + md5(jPasswordField1.getText()) + "'");

            java.sql.ResultSet rsetsd = pstmtsd.executeQuery();
            while (rsetsd.next()) {
                access_code = rsetsd.getObject(1).toString();
            }

            if (md5(jPasswordField1.getText()).equals(access_code)) {
                java.util.Calendar calendar = java.util.Calendar.getInstance();

                long dateNow = calendar.getTimeInMillis();

                java.sql.Date datenowSql = new java.sql.Date(dateNow);

                System.out.println(datenowSql.toString());

                int j = jTable1.getRowCount();

                jTextField1.setText("0.00");
                //   String requNo = null;
                try {
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                        ex.printStackTrace();
                    }

                    try {
                        //                fdghjj
                        //                java.sql.Statement ps1 = connectDB.createStatement();
                        //                java.sql.ResultSet rst1 = ps1.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                        //                while (rst1.next()) {
                        //                    requNo = rst1.getObject(1).toString();
                        //                }

                        //       Object newdate = datenowSql;
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            if (jTable1.getModel().getValueAt(i, 6) != null) {
                                if (jTable1.getModel().getValueAt(i, 6).toString().equals("true")) {
                                    System.out.println("Value 1 " + jTable1.getModel().getValueAt(i, 4));
                                    System.out.println("Value 2 " + jTable1.getModel().getValueAt(i, 3));
                                    if (supplierChkbx.isSelected() == true) {
                                        requNo = jTable1.getModel().getValueAt(i, 7).toString();
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_accounts_payable set approved = true,journal_no='" + jTable1.getModel().getValueAt(i, 1) + "' WHERE voucher_no = '" + requNo + "' and invoice_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and dealer ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");

                                        pstmt.executeUpdate();


                                        Boolean inTracker = false;
                                        java.sql.Statement stmtf2 = connectDB.createStatement();
                                        java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no='" + jTable1.getValueAt(i, 1).toString() + "'");
                                        if (rsetf2.getFetchSize() > 0) {
                                            inTracker = true;
                                        }
                                        //start
                                        String rectifyDate = "1900-01-01 00:00:00.000";
                                        java.util.Date realDate = null;
                                        java.sql.Statement stmtr = connectDB.createStatement();
                                        java.sql.ResultSet rsetr = stmtr.executeQuery("select '" + rectifyDate + "'::date");
                                        while (rsetr.next()) {
                                            realDate = rsetr.getDate(1);
                                        }
                                        if (inTracker == true) {

                                            java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET approval_by=current_user, approval=now() where voucher_no = '" + requNo + "' and supplier ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");
                                            pstmt91.executeUpdate();
                                        } else {
                                            java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard (supplier,invoice_no,creditor_created,creditor_created_by,"
                                                    + "                                                                                 commited,commited_by, voucher_no,accountant,accountant_name,finance_head ,finance_head_officer,examination,examination_by,approval,approval_by) "
                                                    + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,now(),current_user)");
                                            pstmt7.setString(1, dealerNameTxt.getText().toString());
                                            pstmt7.setObject(2, jTable1.getValueAt(i, 1));
                                            pstmt7.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                            pstmt7.setObject(4, "");
                                            pstmt7.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                            pstmt7.setObject(6, "");
                                            pstmt7.setObject(7, jTable1.getValueAt(i, 7));
                                            pstmt7.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                            pstmt7.setString(9, "");
                                            pstmt7.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                            pstmt7.setString(11, "");
                                            pstmt7.setDate(12, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                            pstmt7.setString(13, "");
                                            pstmt7.executeUpdate();
                                        }



                                    } else if (imprestChkbx.isSelected() == true) {
                                        if (jTable1.getModel().getValueAt(i, 7).toString().contains("PETT") || jTable1.getModel().getValueAt(i, 7).toString().contains("PERS_REQ")) {
                                            requNo = jTable1.getModel().getValueAt(i, 7).toString();
                                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_petty_cash_requisition set approved = true WHERE"
                                                    + " (requisition_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' or final_voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "') ");

                                            pstmt.executeUpdate();
                                        } else {
                                            requNo = jTable1.getModel().getValueAt(i, 7).toString();
                                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_bills set approved = true WHERE"
                                                    + " voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and final_voucher_no = '" + jTable1.getModel().getValueAt(i, 7).toString() + "' and dealer ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");

                                            pstmt.executeUpdate();
                                        }
                                        java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET approval_by=current_user, approval=now() where voucher_no = '" + requNo + "' and supplier ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");
                                        pstmt91.executeUpdate();
                                    }
                                    //             com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, jTable1.getValueAt(i, 1).toString(), commentsTxt.getText(), "EXPENDITURE_APPROVAL", "PAYMENTS_TREASURY");
                                }
                            }

                        }
                        connectDB.commit();
                        connectDB.setAutoCommit(true);

                        javax.swing.JOptionPane.showMessageDialog(this, "Approval Done Successfully !!!", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        passwd.dispose();
                        //  com.afrisoftech.reports.ChequeRequisitionPdf policy = new com.afrisoftech.reports.ChequeRequisitionPdf();
                        //   policy.ChequeRequisitionPdf(connectDB,requNo);
                        for (int k = 0; k < jTable1.getRowCount(); k++) {
                            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                                jTable1.getModel().setValueAt(null, k, r);
                            }
                        }
                        jButton10.setEnabled(false);
                        jButton11.setEnabled(false);
                        jButton12.setEnabled(false);
                        jButton13.setEnabled(false);
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());
                        jLabel7.setForeground(java.awt.Color.red);
                        jLabel7.setText("Sorry. Please Check The Fields");
                    }

                } catch (java.lang.Exception ex) {
                    ex.printStackTrace();
                    System.out.println(ex.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                }

            } else {
                JOptionPane.showMessageDialog(null, "You dont have the permission to Approve voucher", "WARNING", JOptionPane.ERROR_MESSAGE);
                passwd.dispose();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        this.passwd.dispose();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        encrptedpasswordDialog.setSize(400, 200);
        encrptedpasswordDialog.setLocation(350, 230);
        //passwd.setLocation(point);
        encrptedpasswordDialog.setVisible(true);

        passwd.dispose();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try {
            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select grn_no from st_stock_cardex where order_no= '" + lpoNo + "'");
            while (ress19.next()) {
                com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf policy1 = new com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf();
                policy1.MtrhSthirteenPdf(connectDB, lpoNo, dealerNameTxt.getText(), ress19.getString(1));

            }
        } catch (Exception t) {
            t.printStackTrace();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select cert_no from st_certificate where lpo= '" + lpoNo + "'");
            while (ress19.next()) {

                com.afrisoftech.hospinventory.ComplianceCertificatePdf policy = new com.afrisoftech.hospinventory.ComplianceCertificatePdf();
                policy.ComplianceCertificatePdf(connectDB, ress19.getString(1), lpoNo);

            }
        } catch (Exception t) {
            t.printStackTrace();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:

        com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();

        policy.VoucherMtrhPdf(connectDB, voucherNo);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.PettyCashVoucherPdf policy = new com.afrisoftech.votebook.PettyCashVoucherPdf();

        policy.PettyCashVoucherPdf(connectDB, voucherNo);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String reason = JOptionPane.showInputDialog(null, "Input Reason for Rejecting ", "Reject", JOptionPane.OK_CANCEL_OPTION);
        if (JOptionPane.OK_OPTION == 0) {
            try {
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    if (jTable1.getModel().getValueAt(i, 6) != null) {
                        if (jTable1.getModel().getValueAt(i, 6).toString().equals("true")) {
                            System.out.println("Value 1 " + jTable1.getModel().getValueAt(i, 4));
                            System.out.println("Value 2 " + jTable1.getModel().getValueAt(i, 3));
                            if (supplierChkbx.isSelected() == true) {
                                requNo = jTable1.getModel().getValueAt(i, 7).toString();
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_accounts_payable set examination = false,journal_no='" + jTable1.getModel().getValueAt(i, 1) + "' WHERE voucher_no = '" + requNo + "' and invoice_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and dealer ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");

                                pstmt.executeUpdate();



                            } else if (imprestChkbx.isSelected() == true) {
                                requNo = jTable1.getModel().getValueAt(i, 7).toString();
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_bills set examination = false WHERE"
                                        + " voucher_no = '" + jTable1.getModel().getValueAt(i, 1).toString() + "' and final_voucher_no = '" + jTable1.getModel().getValueAt(i, 7).toString() + "' and dealer ILIKE '" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(this.dealerNameTxt.getText()) + "'");

                                pstmt.executeUpdate();

                            }
                            // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, jTable1.getValueAt(i, 1).toString(), commentsTxt.getText(), "EXPENDITURE_APPROVAL", "PAYMENTS_TREASURY");
                        }
                    }

                }
                connectDB.commit();
                connectDB.setAutoCommit(true);

                javax.swing.JOptionPane.showMessageDialog(this, "Sent Back to Sender Successfully !!!", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception u) {
                u.printStackTrace();
            }
            //  com.afrisoftech.reports.ChequeRequisitionPdf policy = new com.afrisoftech.reports.ChequeRequisitionPdf();
            //   policy.ChequeRequisitionPdf(connectDB,requNo);
            for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }
            jButton10.setEnabled(false);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            jButton17.doClick();
        }
    }//GEN-LAST:event_jPasswordField1KeyReleased
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField commentsTxt;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JTextField dealerNameTxt;
    private javax.swing.JDialog encrptedpasswordDialog;
    private javax.swing.JCheckBox imprestChkbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField6;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;
    private javax.swing.JDialog passwd;
    private javax.swing.JButton removerow;
    private javax.swing.JButton searchButton;
    private javax.swing.JDialog searchSupplierOrOthersTable;
    private javax.swing.JCheckBox supplierChkbx;
    // End of variables declaration//GEN-END:variables

    public Boolean checkPasswordModality() {
        Boolean modality = false;
        if (jPasswordField3.getText().equals(jPasswordField4.getText())) {
            modality = true;

        } else {
            modality = false;
        }

        return modality;

    }

    public static String md5(String input) {

        String md5 = null;

        if (null == input) {
            return null;
        }

        try {

            //Create MessageDigest object for MD5
            MessageDigest digest = MessageDigest.getInstance("MD5");

            //Update input string in message digest
            digest.update(input.getBytes(), 0, input.length());

            //Converts message digest value in base 16 (hex)
            md5 = new BigInteger(1, digest.digest()).toString(16);

        } catch (NoSuchAlgorithmException e) {

            e.printStackTrace();
        }
        return md5;
    }
}