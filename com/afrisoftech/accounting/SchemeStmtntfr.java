/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class SchemeStmtntfr extends javax.swing.JInternalFrame implements java.lang.Runnable{
    
    /** Creates new form loanpymntintfr */
    com.afrisoftech.lib.DBObject dbObject;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    
    java.lang.String tableName = null;
    
    
    java.lang.Thread threadExportTable = null;
    javax.swing.JTable exportTable;
    
    boolean exportTableBoolean = true;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    com.afrisoftech.dbadmin.XMLExport xmlExport;
    
    com.afrisoftech.dbadmin.ExcelExport excelExport;
    
    com.afrisoftech.dbadmin.HTMLExport htmlExport;
    
    com.afrisoftech.dbadmin.PDFExport pdfExport;
    
    
    public SchemeStmtntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            /*       Class[] types = new Class [] {
                java.lang.Short.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        */

        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Double.class, java.lang.Double.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false, true, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    };
    jTable11 = new com.afrisoftech.dbadmin.JTable(){
        Class[] types = new Class [] {
            java.lang.Short.class, java.lang.Object.class, java.lang.Object.class,java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false, false, true
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    };
    jPanel2 = new javax.swing.JPanel();
    jLabel9 = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    jTextField1 = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    jTextField2 = new javax.swing.JTextField();
    jTextField4 = new javax.swing.JTextField();
    jPanel4 = new javax.swing.JPanel();
    jTextField9 = new javax.swing.JTextField();
    searchButton = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    jTextField7 = new javax.swing.JTextField();
    jPanel3 = new javax.swing.JPanel();
    jRadioButton1 = new javax.swing.JRadioButton();
    jRadioButton2 = new javax.swing.JRadioButton();
    jPanel5 = new javax.swing.JPanel();
    jCheckBox3 = new javax.swing.JCheckBox();
    jCheckBox4 = new javax.swing.JCheckBox();

    jButton1 = new javax.swing.JButton();
    jButton6 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();
    jButton4 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();
    jLabel53 = new javax.swing.JLabel();
    jTextField3 = new javax.swing.JTextField();
    jSeparator1 = new javax.swing.JSeparator();
    jLabel5 = new javax.swing.JLabel();
    datePicker1 = new com.afrisoftech.lib.DatePicker();
    datePicker3 = new com.afrisoftech.lib.DatePicker();
    jLabel6 = new javax.swing.JLabel();
    export2Excel = new javax.swing.JButton();

    jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchDialog2.setModal(true);
    jSearchDialog2.setUndecorated(true);
    jSearchPanel2.setLayout(new java.awt.GridBagLayout());

    jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField113CaretUpdate(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 300.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jSearchPanel2.add(jTextField113, gridBagConstraints);

    jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
    jSearchTable2.setShowHorizontalLines(false);
    /*javax.swing.table.TableColumn column = null;

    for (int i = 0; i < 4; i++) {

        column = jSearchTable2.getColumnModel().getColumn(i);

        if (i == 1) {

            column.setPreferredWidth(400);
            //sport column is bigger
        } else {

            column.setPreferredWidth(200);

        }
    }
    */
    jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable2MouseClicked(evt);
        }
    });

    jSearchScrollPane2.setViewportView(jSearchTable2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

    jButton42.setText("Select");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel2.add(jButton42, gridBagConstraints);

    jButton52.setText("Cancel");
    jButton52.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton52ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel2.add(jButton52, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

    getContentPane().setLayout(new java.awt.GridBagLayout());

    setClosable(true);
    setIconifiable(true);
    setMaximizable(true);
    setResizable(true);
    setTitle("Scheme Statement View");
    setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
    setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
    try {
        setSelected(true);
    } catch (java.beans.PropertyVetoException e1) {
        e1.printStackTrace();
    }
    setVisible(true);
    jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    getContentPane().add(jLabel7, gridBagConstraints);

    jTextField6.setEditable(false);
    jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
    jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    getContentPane().add(jTextField6, gridBagConstraints);

    jPanel1.setLayout(new java.awt.GridBagLayout());

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Date", "Pat/ChqNo", "Name", "Inv/Rct No.", "Debit", "Credit", "Bal", "Select", "DR Bal.", "CR Bal."
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Double.class, java.lang.Double.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false, true, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable1.setShowHorizontalLines(false);
    /*javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 5; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 0) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {

            //if (i == 2) {
                column.setPreferredWidth(150);
                // }  else
            //column.setPreferredWidth(50);

        }
    }
    */
    jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jTable1KeyReleased(evt);
        }
    });
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });

    jScrollPane2.setViewportView(jTable1);

    jTable11.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Date", "Pat/ChqNo", "Name", "Scheme", "Inv/Rct No.", "Debit", "Credit", "Bal", "Select"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false, false, true
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable11.setShowHorizontalLines(false);
    /*javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 5; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 0) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {

            //if (i == 2) {
                column.setPreferredWidth(150);
                // }  else
            //column.setPreferredWidth(50);

        }
    }
    */
    jScrollPane2.setViewportView(jTable11);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipady = 150;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 5.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel1.add(jScrollPane2, gridBagConstraints);

    jPanel2.setLayout(new java.awt.GridBagLayout());

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient Here"));
    jLabel9.setText("Acc No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jLabel9, gridBagConstraints);

    jLabel1.setText("Account Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jLabel1, gridBagConstraints);

    jTextField1.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 3.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel2.add(jTextField1, gridBagConstraints);

    jLabel3.setText("B/Bf");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    jPanel2.add(jLabel3, gridBagConstraints);

    jTextField2.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel2.add(jTextField2, gridBagConstraints);

    jTextField4.setEditable(false);
    jTextField4.setMinimumSize(new java.awt.Dimension(0, 0));
    jTextField4.setPreferredSize(new java.awt.Dimension(0, 0));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jTextField4, gridBagConstraints);

    jPanel4.setLayout(new java.awt.GridBagLayout());

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField9.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jTextField9, gridBagConstraints);

    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
    searchButton.setToolTipText("Search");
    searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel4.add(searchButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 3.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jPanel4, gridBagConstraints);

    jLabel4.setText("Payer/Category");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    jPanel2.add(jLabel4, gridBagConstraints);

    jTextField7.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jTextField7, gridBagConstraints);

    jPanel3.setLayout(new java.awt.GridBagLayout());

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose By Category"));
    buttonGroup4.add(jRadioButton1);
    jRadioButton1.setText("Scheme");
    jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRadioButton1ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel3.add(jRadioButton1, gridBagConstraints);

    buttonGroup4.add(jRadioButton2);
    jRadioButton2.setText("Payer/Category");
    jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRadioButton2ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel3.add(jRadioButton2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jPanel3, gridBagConstraints);

    jPanel5.setLayout(new java.awt.GridBagLayout());

    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Search By"));
    buttonGroup2.add(jCheckBox3);
    jCheckBox3.setText("Search By  No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    jPanel5.add(jCheckBox3, gridBagConstraints);

    buttonGroup2.add(jCheckBox4);
    jCheckBox4.setSelected(true);
    jCheckBox4.setText("Search By Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    jPanel5.add(jCheckBox4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jPanel5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipady = -10;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jPanel2, gridBagConstraints);

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
    jButton1.setMnemonic('P');
    jButton1.setText("Print");
    jButton1.setToolTipText("Click here to Print");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jButton1, gridBagConstraints);

    jButton6.setMnemonic('r');
    jButton6.setText("Remove Row");
    jButton6.setEnabled(false);
    jButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton6ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 8;
    jPanel1.add(jButton6, gridBagConstraints);

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
    jButton3.setMnemonic('l');
    jButton3.setText("Clear");
    jButton3.setToolTipText("Click here to clear textfields");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jButton3, gridBagConstraints);

    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
    jButton4.setMnemonic('C');
    jButton4.setText("Close");
    jButton4.setToolTipText("Click here to close window");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jButton4, gridBagConstraints);

    jButton5.setMnemonic('h');
    jButton5.setText("Help");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jButton5, gridBagConstraints);

    jLabel53.setText("Amount KShs.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jLabel53, gridBagConstraints);

    jTextField3.setEditable(false);
    jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField3.setText("0.00");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 40);
    jPanel1.add(jTextField3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
    gridBagConstraints.weightx = 1.0;
    jPanel1.add(jSeparator1, gridBagConstraints);

    jLabel5.setText("From Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    jPanel1.add(jLabel5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(datePicker1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(datePicker3, gridBagConstraints);

    jLabel6.setText("To Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel1.add(jLabel6, gridBagConstraints);

    export2Excel.setMnemonic('E');
    export2Excel.setText("Export to Excel");
    export2Excel.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            export2ExcelActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    jPanel1.add(export2Excel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jPanel1, gridBagConstraints);

    setBounds(0, 0, 697, 416);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
 
        
          this.invalidate();
        jTable11.grabFocus();
        this.jTable11.setVisible(true);
        this.jScrollPane2.setViewportView(jTable11);
        this.validate(); 
        //jTable1.setVisible(false);
        //jTable11.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
          
        this.invalidate();
        jTable1.grabFocus();
        this.jTable1.setVisible(true);
        this.jScrollPane2.setViewportView(jTable1);
        this.validate();
        // Add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    
    private void export2ExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_export2ExcelActionPerformed
        threadExportTable = new java.lang.Thread(this, "Export2Excel");
        
        threadExportTable.start();        // Add your handling code here:
    }//GEN-LAST:event_export2ExcelActionPerformed
    
    //  tableName = this.jTable1.getModel().toString();
    
    public javax.swing.JTable getExportTable() {
        
        javax.swing.JTable table2Export = null;
        
        if (exportTable != null) {
            
            table2Export = exportTable;
            
        }
        
        return table2Export;
        
    }
    public void run() {
        
        if (exportTableBoolean == false) {
            
            exportTableBoolean = true;
            
        }
        
        while (exportTableBoolean) {
            
            System.out.println("Export process started for thread ["+Thread.currentThread().getName()+"]");
            
            if (Thread.currentThread().getName().matches("Export2Excel")) {
                
                System.out.println("Exporting Export2Excel");
                
                excelExport = new com.afrisoftech.dbadmin.ExcelExport(this.getExportTable(), tableName);
                
            } else if (Thread.currentThread().getName().matches("Export2Xml")) {
                
                xmlExport = new com.afrisoftech.dbadmin.XMLExport(this.getExportTable(), tableName);
                
            } else if (Thread.currentThread().getName().matches("Export2HTML")) {
                
                htmlExport = new com.afrisoftech.dbadmin.HTMLExport(this.getExportTable(), tableName);
                
            } else if (Thread.currentThread().getName().matches("Export2PDF")) {
                
                pdfExport = new com.afrisoftech.dbadmin.PDFExport(this.getExportTable(), tableName);
                
            }
            
            
            try {
                
                Thread.currentThread().sleep(100);
                
            } catch(java.lang.InterruptedException IntExec){ System.out.println(IntExec.getMessage());}
            
            exportTableBoolean = false;
            
        }
        
        
    }
    
 
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
  
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
  
    }                    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
     
    }                private void searchButton1Clicked() {
        
        System.out.println("Showing dialog");
        
 
        
        
    }             private void populateTable3(java.lang.String patient_no) {
        
        int i = 0;
        int j = 0;
    
        
        
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        String receiptNo = null;
        receiptNo =  jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString();
        if (jTable1.getSelectedColumn() == 7) {
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(),7).toString()) == java.lang.Boolean.TRUE) {
                if(receiptNo.toUpperCase().startsWith("O")){
                    com.afrisoftech.reports.FinalInvoiceByinvPdf policy = new com.afrisoftech.reports.FinalInvoiceByinvPdf();
                    
                    policy.FinalInvoiceByinvPdf(connectDB, receiptNo, receiptNo);
                }else{
                    com.afrisoftech.reports.FinalInPatientlnvPdf policy = new com.afrisoftech.reports.FinalInPatientlnvPdf();
                    
                    policy.FinalInPatientInvPdf(connectDB, receiptNo);
                }
            }
            
        }
        
        
        /*
        if (jTable1.getSelectedColumn() == 0) {
         
            this.cmboxMouseClicked();
        }
         */// Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked() {
      /*
        System.out.println("Showing dialog");
        java.awt.Point point = jTable1.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);
       */
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    private void populateTable2(java.lang.String patient_no) {
        int i = 0;
        int j = 0;
        try {
            if(this.jRadioButton1.isSelected()){
                java.sql.Statement stmt = connectDB.createStatement();
                
                java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM ac_debtors WHERE account_no = '"+patient_no+"' and date between '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker3.getDate().toString()+"'");
                
                while (rset.next()) {
                    j = rset.getInt(1);
                }
                if (j > 0){
                    jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct date::date,admission_no||cheque_no AS doc_no,item as name,invoice_no||receipt_no AS ref_no,debit,credit,debit-credit AS balance,false::boolean, balance,credit_bal FROM ac_debtors WHERE account_no = '"+patient_no+"' and date::date between '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker3.getDate().toString()+"' ORDER BY date"));
          
                }
            }else{
                java.sql.Statement stmt = connectDB.createStatement();
                
                java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM ac_debtors WHERE dealer ilike '"+patient_no+"' and date between '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker3.getDate().toString()+"'");
                
                while (rset.next()) {
                    j = rset.getInt(1);
                }
                if (j > 0){
                    
                    jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct date::date,admission_no||cheque_no AS doc_no,item as name,initcap(payee) as Scheme,invoice_no||receipt_no AS ref_no,debit,credit,debit-credit AS balance,,false::boolean,balance,credit_bal FROM ac_debtors WHERE dealer ilike '"+patient_no+"' and date::date between '"+this.datePicker1.getDate().toString()+"' and '"+this.datePicker3.getDate().toString()+"' ORDER BY Scheme,date"));
            
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        
    }
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        //        this.jComboBox131.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        if(this.jRadioButton1.isSelected()){
            
            jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
            jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
            jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
            
            jSearchDialog2.dispose();
            
            try {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select SUM(BALANCE-CREDIT_bal) from ac_debtors where account_no  ='"+jTextField9.getText()+"' and date <= '"+datePicker1.getDate().toString()+"'");
                while (rset1.next()){
                    jTextField2.setText(dbObject.getDBObject(rset1.getObject(1), "0.00"));
                    //   jTextField2.setText(rset1.getObject(1).toString());
                    
                }
                java.sql.Statement stmt12 = connectDB.createStatement();
                java.sql.ResultSet rset12 = stmt12.executeQuery("select SUM(BALANCE-CREDIT_bal) from ac_debtors where account_no  ='"+jTextField9.getText()+"'");
                while (rset12.next()){
                    
                    jTextField3.setText(dbObject.getDBObject(rset12.getObject(1), "0.00"));
                    //  jTextField3.setText(rset12.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
            this.populateTable2(jTextField9.getText());
        }else{
            jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
            jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
            jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
            
            jSearchDialog2.dispose();
            
            try {
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select SUM(BALANCE-CREDIT_bal) from ac_debtors where dealer  ilike '"+jTextField1.getText()+"' and date <= '"+datePicker1.getDate().toString()+"'");
                while (rset1.next()){
                    jTextField2.setText(dbObject.getDBObject(rset1.getObject(1), "0.00"));
                    //   jTextField2.setText(rset1.getObject(1).toString());
                    
                }
                java.sql.Statement stmt12 = connectDB.createStatement();
                java.sql.ResultSet rset12 = stmt12.executeQuery("select SUM(BALANCE-CREDIT_bal) from ac_debtors where dealer ilike '"+jTextField1.getText()+"'");
                while (rset12.next()){
                    
                    jTextField3.setText(dbObject.getDBObject(rset12.getObject(1), "0.00"));
                    //  jTextField3.setText(rset12.getObject(1).toString());
                }
                
                
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
            this.populateTable2(jTextField1.getText());
        }
        
        
        
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jRadioButton1.isSelected()){
            if(jCheckBox3.isSelected()){
                
                if(jTextField113.getCaretPosition() < 1){
                    System.out.println("Nothing");
                }else{
                    
                    //  searchRowSet2.execute("SELECT account_no, (upper(scheme_name)) as name, payer_name from ac_schemes where account_no ILIKE '"+jTextField113.getText()+"%'  order by scheme_name");
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no, (upper(scheme_name)) as name, payer_name from ac_schemes where account_no ILIKE '%"+jTextField113.getText()+"%'  order by scheme_name"));
                    /*jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
                        //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));*/
                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    
                    
                    
                }
            }else{
                if( this.jCheckBox4.isSelected()){
                    if(jTextField113.getCaretPosition() < 3){
                        System.out.println("Nothing");
                    }else{
                        jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no, (upper(scheme_name)) as name, payer_name from ac_schemes where scheme_name ILIKE '%"+jTextField113.getText()+"%'  order by scheme_name"));
                        
                        jSearchTable2.setShowHorizontalLines(false);
                        jSearchScrollPane2.setViewportView(jSearchTable2);
                        
                        
                        
                    }
                }
            }
        }else{
            
            
            if(jTextField113.getCaretPosition() < 1){
                System.out.println("Nothing");
            }else{
                
                //  searchRowSet2.execute("SELECT account_no, (upper(scheme_name)) as name, payer_name from ac_schemes where account_no ILIKE '"+jTextField113.getText()+"%'  order by scheme_name");
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no, (upper(scheme_manager)) as name from ac_scheme_providers where scheme_manager ILIKE '%"+jTextField113.getText()+"%'  order by scheme_manager"));
                    /*jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
                        //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));*/
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
                
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked2() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.setVisible(true);
        
        
        
    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
   /*     double resFloat = 0.00;
    
    
        for (int i = 0; i < jTable1.getRowCount(); i++) {
    
            if (jTable1.getModel().getValueAt(i, 0) != null) {
    
               resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
    
                jTextField3.setText(java.lang.String.valueOf(resFloat));
    
            } else{
               resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
    
                jTextField3.setText(java.lang.String.valueOf(resFloat));
    
        }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
    
        //        double resFloat = 0.00;
        double resFloat = 0.00;
    
        for (int i = 0; i < jTable1.getRowCount(); i++) {
    
            if (jTable1.getModel().getValueAt(i, 0) != null) {
    
                //   if (jTable11.getSelectedColumn() == 1) {
    
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
    
                //   }
    
                jTextField3.setText(java.lang.String.valueOf(resFloat));
    
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
    
                //   }
    
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
    
        }
    */
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
 /*        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
  
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
  
            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
  
            double resVal = floatCol2 * floatCol3;
  
  
            jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
  
            for (int i = 0; i < jTable1.getRowCount(); i++) {
  
                if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
  
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
  
  
                    // totalSum = floatTotal + resFloat;
  
                }
            }
            this.tableModelTableChanged();
        }
  
/*        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
  
            float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
  
            float resVal = floatCol2 * floatCol3;
  
            java.lang.Float resFloat =new java.lang.Float(resVal);
  
            if (jTable1.getSelectedColumn() == 1) {
  
                jTable1.setValueAt(resFloat, jTable1.getSelectedRow(), 3);
  
                double Total = java.lang.Double.parseDouble(jTextField3.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField3.setText(""+totalSum+"");
  
            }
        }
  */
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt){
   /*     java.lang.Object selectedGuaran = cmbox4.getSelectedItem();
//        int i = jTable2.getSelectedRow();
    
        if (selectedGuaran != null) {
    
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
    
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    */
        
    }    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox3.getSelectedItem();
  /*      int i = jTable2.getSelectedRow();
   
        if (selectedGuaran != null) {
   
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
   
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
   
   */
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    /*private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
     
        if (selectedGuaran != null) {
     
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"'");
     
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rs.getObject(1),i,2);
                    jTable1.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
     
    }
     */
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        com.afrisoftech.reports.StatementAccPdf policy = new com.afrisoftech.reports.StatementAccPdf();
        
        policy.StatementAccPdf(connectDB, this.datePicker1.getDate(), this.datePicker3.getDate(),jTextField1.getText(),this.jTextField9.getText());
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JButton export2Excel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
    
}
