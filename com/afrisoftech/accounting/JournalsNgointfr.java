/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class JournalsNgointfr extends javax.swing.JInternalFrame {
    private  javax.swing.JComboBox cmbox2;
    private  javax.swing.JComboBox cmbox1;
    private  javax.swing.JComboBox cmbox;
    private  javax.swing.JComboBox cmbox1x;
    String cashPoint = null;
    /** Creates new form loanpymntintfr */
    java.sql.Connection connectDB = null;
    javax.swing.JSpinner beginDateSpinner = null;
    
    com.afrisoftech.lib.DBObject dbObject;
    javax.swing.JSpinner endDateSpinner = null;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public JournalsNgointfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        initComponents();
        
        jTextField14.setText(getCashPoint());
        jTextField81.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField111111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton911 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField11112 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        jSearchDialog13 = new javax.swing.JDialog();
        jSearchPanel13 = new javax.swing.JPanel();
        jTextField11113 = new javax.swing.JTextField();
        jSearchScrollPane13 = new javax.swing.JScrollPane();
        jSearchTable13 = new com.afrisoftech.dbadmin.JTable();
        jButton93 = new javax.swing.JButton();
        jSearchDialog14 = new javax.swing.JDialog();
        jSearchPanel14 = new javax.swing.JPanel();
        jTextField11114 = new javax.swing.JTextField();
        jSearchScrollPane14 = new javax.swing.JScrollPane();
        jSearchTable14 = new com.afrisoftech.dbadmin.JTable();
        jButton94 = new javax.swing.JButton();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jTable12 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jTable11 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jTable13 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jTable121 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jTable122 = new com.afrisoftech.dbadmin.JTable(){
            /* Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };*/

        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    };
    jTable14 = new com.afrisoftech.dbadmin.JTable(){
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            true, true, true, true, true, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    };
    jTable2 = new com.afrisoftech.dbadmin.JTable(){
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    };
    jButton5 = new javax.swing.JButton();
    jPanel11 = new javax.swing.JPanel();
    jLabel11 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    datePicker1 = new com.afrisoftech.lib.DatePicker();
    jPanel1 = new javax.swing.JPanel();
    jPanel4 = new javax.swing.JPanel();
    jTextField10 = new javax.swing.JTextField();
    jCheckBox3 = new javax.swing.JCheckBox();
    jCheckBox2 = new javax.swing.JCheckBox();
    jCheckBox1 = new javax.swing.JCheckBox();
    jCheckBox4 = new javax.swing.JCheckBox();
    jCheckBox5 = new javax.swing.JCheckBox();
    jCheckBox51 = new javax.swing.JCheckBox();
    jCheckBox6 = new javax.swing.JCheckBox();
    jCheckBox7 = new javax.swing.JCheckBox();
    jComboBox1 = new javax.swing.JComboBox();
    jLabel1 = new javax.swing.JLabel();
    jTextField1 = new javax.swing.JTextField();
    jLabel10 = new javax.swing.JLabel();
    jTextField14 = new javax.swing.JTextField();
    jLabel131 = new javax.swing.JLabel();
    jTextField81 = new javax.swing.JTextField();

    jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchDialog1.setModal(true);
    jSearchDialog1.setUndecorated(true);
    jSearchPanel1.setLayout(new java.awt.GridBagLayout());

    jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField1111CaretUpdate(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel1.add(jTextField1111, gridBagConstraints);

    jSearchTable1.setShowHorizontalLines(false);
    jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable1MouseClicked(evt);
        }
    });

    jSearchScrollPane1.setViewportView(jSearchTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

    jButton9.setText("Cancel");
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel1.add(jButton9, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

    jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchDialog11.setModal(true);
    jSearchDialog11.setUndecorated(true);
    jSearchPanel11.setLayout(new java.awt.GridBagLayout());

    jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField11111CaretUpdate(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel11.add(jTextField11111, gridBagConstraints);

    jSearchTable11.setShowHorizontalLines(false);
    jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable11MouseClicked(evt);
        }
    });

    jSearchScrollPane11.setViewportView(jSearchTable11);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

    jButton91.setText("Cancel");
    jButton91.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton91ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel11.add(jButton91, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

    jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchDialog111.setModal(true);
    jSearchDialog111.setUndecorated(true);
    jSearchPanel111.setLayout(new java.awt.GridBagLayout());

    jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField111111.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField111111CaretUpdate(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel111.add(jTextField111111, gridBagConstraints);

    jSearchTable111.setShowHorizontalLines(false);
    jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable111MouseClicked(evt);
        }
    });

    jSearchScrollPane111.setViewportView(jSearchTable111);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

    jButton911.setText("Cancel");
    jButton911.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton911ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel111.add(jButton911, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

    jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchDialog12.setModal(true);
    jSearchDialog12.setUndecorated(true);
    jSearchPanel12.setLayout(new java.awt.GridBagLayout());

    jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField11112.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField11112CaretUpdate(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel12.add(jTextField11112, gridBagConstraints);

    jSearchTable12.setShowHorizontalLines(false);
    jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable12MouseClicked(evt);
        }
    });

    jSearchScrollPane12.setViewportView(jSearchTable12);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

    jButton92.setText("Cancel");
    jButton92.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton92ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel12.add(jButton92, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog12.getContentPane().add(jSearchPanel12, gridBagConstraints);

    jSearchDialog13.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchDialog13.setModal(true);
    jSearchDialog13.setUndecorated(true);
    jSearchPanel13.setLayout(new java.awt.GridBagLayout());

    jSearchPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField11113.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField11113CaretUpdate(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel13.add(jTextField11113, gridBagConstraints);

    jSearchTable13.setShowHorizontalLines(false);
    jSearchTable13.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable13MouseClicked(evt);
        }
    });

    jSearchScrollPane13.setViewportView(jSearchTable13);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel13.add(jSearchScrollPane13, gridBagConstraints);

    jButton93.setText("Cancel");
    jButton93.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton93ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel13.add(jButton93, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog13.getContentPane().add(jSearchPanel13, gridBagConstraints);

    jSearchDialog14.getContentPane().setLayout(new java.awt.GridBagLayout());

    jSearchDialog14.setModal(true);
    jSearchDialog14.setUndecorated(true);
    jSearchPanel14.setLayout(new java.awt.GridBagLayout());

    jSearchPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jTextField11114.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField11114CaretUpdate(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jSearchPanel14.add(jTextField11114, gridBagConstraints);

    jSearchTable14.setShowHorizontalLines(false);
    jSearchTable14.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jSearchTable14MouseClicked(evt);
        }
    });

    jSearchScrollPane14.setViewportView(jSearchTable14);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    jSearchPanel14.add(jSearchScrollPane14, gridBagConstraints);

    jButton94.setText("Cancel");
    jButton94.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton94ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchPanel14.add(jButton94, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jSearchDialog14.getContentPane().add(jSearchPanel14, gridBagConstraints);

    getContentPane().setLayout(new java.awt.GridBagLayout());

    setClosable(true);
    setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
    setIconifiable(true);
    setMaximizable(true);
    setResizable(true);
    setTitle("General Journal [NGO]");
    setVisible(true);
    addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
        public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            formInternalFrameActivated(evt);
        }
        public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
        }
        public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
        }
        public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
        }
        public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
        }
        public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
        }
        public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
        }
    });

    jButton1.setMnemonic('P');
    jButton1.setText("Post Entries to GL");
    jButton1.setToolTipText("Click here to enter data");
    jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jButton1MouseClicked(evt);
        }
    });
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jButton1, gridBagConstraints);

    jButton3.setMnemonic('l');
    jButton3.setText("Clear");
    jButton3.setToolTipText("Click here to clear fields");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });
    jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jButton3MouseClicked(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jButton3, gridBagConstraints);

    jButton4.setMnemonic('C');
    jButton4.setText("Close");
    jButton4.setToolTipText("Click here to close ");
    jButton4.setSelected(true);
    jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jButton4MouseClicked(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jButton4, gridBagConstraints);

    jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jLabel7, gridBagConstraints);

    jPanel2.setLayout(new java.awt.GridBagLayout());

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Accounts here"));
    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Account", "Payer", "Scheme", "Debit", "Credit", "Reference", "Gl Code", "Reason"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    jTable1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    jTable1.setDragEnabled(true);
    jTable1.setShowHorizontalLines(false);
    jTable1.setSurrendersFocusOnKeystroke(true);

    /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
    //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
    javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmboxActionPerformed(evt);
        }
    });
    */
    jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jTable1KeyReleased(evt);
        }
    });
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable1);

    jTable12.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Account", "Reference", "Debit", "Credit", "Reason"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable12.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    jTable12.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    jTable12.setDragEnabled(true);
    jTable12.setShowHorizontalLines(false);
    jTable12.setSurrendersFocusOnKeystroke(true);

    /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
    //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
    javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmboxActionPerformed(evt);
        }
    });
    */
    jTable12.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable12MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable12);

    jTable11.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Account", "Creditor Name", "Debit", "Credit", "Reference", "Gl Code", "Invoice No", "Cheque No", "Narration"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable11.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    jTable11.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    jTable11.setDragEnabled(true);
    jTable11.setShowHorizontalLines(false);
    jTable11.setSurrendersFocusOnKeystroke(true);

    /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
    //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
    javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmboxActionPerformed(evt);
        }
    });
    */
    jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable11MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable11);

    jTable13.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null}
        },
        new String [] {
            "Bank A/C", "Debit", "Credit", "Reference", "GL A/C", "Cheque No."
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable13.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    jTable13.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    jTable13.setDragEnabled(true);
    jTable13.setShowHorizontalLines(false);
    jTable13.setSurrendersFocusOnKeystroke(true);

    /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
    //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
    javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmboxActionPerformed(evt);
        }
    });
    */
    jTable13.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable13MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable13);

    jTable121.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Sales A/C", "Ref.", "Debit", "Credit", "Reason"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable121.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    jTable121.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    jTable121.setDragEnabled(true);
    jTable121.setShowHorizontalLines(false);
    jTable121.setSurrendersFocusOnKeystroke(true);

    /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
    //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
    javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmboxActionPerformed(evt);
        }
    });
    */
    jTable121.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable121MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable121);

    jTable122.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Petty Cash A/C", "Reference", "Debit", "Credit", "Reason", "Donor", "Proj", "Unit", "Staff/Veh"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable122.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    jTable122.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    jTable122.setDragEnabled(true);
    jTable122.setShowHorizontalLines(false);
    jTable122.setSurrendersFocusOnKeystroke(true);
    cmbox = new javax.swing.JComboBox();

    cmbox.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT code from ac_donor ORDER BY code"));
    javax.swing.table.TableColumn s = this.jTable122.getColumn("Donor");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmboxActionPerformed(evt);
        }
    });

    cmbox1x = new javax.swing.JComboBox();

    cmbox1x.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT code from ac_project ORDER BY code"));
    javax.swing.table.TableColumn t = this.jTable122.getColumn("Proj");
    t.setCellEditor(new javax.swing.DefaultCellEditor(cmbox1x));
    cmbox1x.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            String branch = null;
            try {
                //  for (int i = 0; i < jTable1.getRowCount(); i++){
                    //      if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(),6) != null){
                        java.sql.Statement stmt = connectDB.createStatement();
                        //java.sql.ResultSet rset = stmt.executeQuery("select branch_code from ac_project WHERE code ilike '"+jTable1.getModel().getValueAt(jTable1.getSelectedRow(),6)+"'");
                        java.sql.ResultSet rset = stmt.executeQuery("select branch_code from ac_project WHERE code ilike '"+cmbox1x.getSelectedItem()+"'");
                        while (rset.next()){
                            branch = rset.getObject(1).toString();
                            jTable122.setValueAt(branch,jTable122.getSelectedRow(), 7);
                        }
                        //jTable1.setValueAt(branch,jTable1.getSelectedRow(), 7);
                        // i++;

                        rset.close();
                        stmt.close();
                        //    }
                    // }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                // System.out.println("Insert not successful");
            }

            cmbox1xActionPerformed(evt);
        }
    });
    /*cmbox2 = new javax.swing.JComboBox();

    cmbox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select code from ac_branch ORDER BY code"));
    javax.swing.table.TableColumn n = this.jTable1.getColumn("Unit");
    n.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));
    cmbox2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmbox2ActionPerformed(evt);
        }
    });
    */

    javax.swing.table.TableColumn column = null;

    /*for (int i = 0; i < 9; i++) {

        column = jTable1.getColumnModel().getColumn(i);

        if (i == 1) {

            column.setPreferredWidth(400);
            //sport column is bigger
        } else {
            if(i == 0){
                column.setPreferredWidth(200);
            }else{
                if( i == 2){
                    column.setPreferredWidth(50);
                }else{
                    column.setPreferredWidth(100);
                }
            }
        }

    }
    */
    jTable122.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable122MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable122);

    jTable14.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null}
        },
        new String [] {
            "Account", "Doctor", "Reason", "Debit", "Credit", "Reference", "Gl Code"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable14.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    jTable14.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    jTable14.setDragEnabled(true);
    jTable14.setShowHorizontalLines(false);
    jTable14.setSurrendersFocusOnKeystroke(true);

    /*   cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset3, "activity_code", null, null, null));
    //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
    javax.swing.table.TableColumn s = this.jTable1.getColumn("GL Code");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmboxActionPerformed(evt);
        }
    });
    */
    jTable14.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable14MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable14);

    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null}
        },
        new String [] {
            "Patient No", "Patient Name", "Reason", "Debit", "Credit", "A/C Code", "A/C Description"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true, true, true, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable2MouseClicked(evt);
        }
    });

    jScrollPane1.setViewportView(jTable2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.gridheight = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jScrollPane1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.gridheight = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 50.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
    getContentPane().add(jPanel2, gridBagConstraints);

    jButton5.setMnemonic('r');
    jButton5.setText("Remove Row");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.weightx = 1.0;
    getContentPane().add(jButton5, gridBagConstraints);

    jPanel11.setLayout(new java.awt.GridBagLayout());

    /*    try {
        java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
        java.util.Date dateInstance = java.util.Calendar.getInstance().getTime();
        //        java.lang.String dateString2Parse = null;
        //        dateString2Parse = String.valueOf(dateInstance.getDate())+"-"+String.valueOf(dateInstance.getMonth()+1)+"-200"+String.valueOf(dateInstance.getYear()-100);

        java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
        System.out.println(dateFormat.format(formattedDate));
        javax.swing.SpinnerDateModel beginDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);
        //   javax.swing.SpinnerDateModel endDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);

        beginDateSpinner = new javax.swing.JSpinner(beginDate);
        //     endDateSpinner = new javax.swing.JSpinner(endDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(beginDateSpinner, gridBagConstraints);

    } catch(java.text.ParseException parseExec) {

        javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), parseExec.getMessage());

    }*/
    jPanel11.setBackground(new java.awt.Color(228, 237, 246));
    jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Date,Account & Journal No. here"));
    jLabel11.setText("Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel11.add(jLabel11, gridBagConstraints);

    jLabel2.setText("Transaction Type");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    jPanel11.add(jLabel2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(datePicker1, gridBagConstraints);

    jPanel1.setLayout(new java.awt.GridBagLayout());

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Tick  type of GL Account here"));
    jPanel4.setLayout(new java.awt.GridBagLayout());

    /*  try {
        java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
        java.util.Date dateInstance = java.util.Calendar.getInstance().getTime();
        //        java.lang.String dateString2Parse = null;
        //        dateString2Parse = String.valueOf(dateInstance.getDate())+"-"+String.valueOf(dateInstance.getMonth()+1)+"-200"+String.valueOf(dateInstance.getYear()-100);

        java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
        System.out.println(dateFormat.format(formattedDate));
        javax.swing.SpinnerDateModel beginDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);
        //   javax.swing.SpinnerDateModel endDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);

        beginDateSpinner = new javax.swing.JSpinner(beginDate);
        //     endDateSpinner = new javax.swing.JSpinner(endDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(beginDateSpinner, gridBagConstraints);

    } catch(java.text.ParseException parseExec) {

        javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), parseExec.getMessage());

    }
    */
    jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jTextField10.setEnabled(false);
    jTextField10.setFocusable(false);
    jTextField10.setMinimumSize(new java.awt.Dimension(0, 0));
    jTextField10.setPreferredSize(new java.awt.Dimension(0, 0));
    jTextField10.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField10ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    jPanel4.add(jTextField10, gridBagConstraints);

    buttonGroup1.add(jCheckBox3);
    jCheckBox3.setText("Other GL A/C");
    jCheckBox3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox3ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jCheckBox3, gridBagConstraints);

    buttonGroup1.add(jCheckBox2);
    jCheckBox2.setText("Debtors");
    jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox2ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jCheckBox2, gridBagConstraints);

    buttonGroup1.add(jCheckBox1);
    jCheckBox1.setText("Creditors");
    jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox1ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jCheckBox1, gridBagConstraints);

    buttonGroup1.add(jCheckBox4);
    jCheckBox4.setText("Cashbook");
    jCheckBox4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox4ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jCheckBox4, gridBagConstraints);

    buttonGroup1.add(jCheckBox5);
    jCheckBox5.setText("Consultants");
    jCheckBox5.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox5ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    jPanel4.add(jCheckBox5, gridBagConstraints);

    buttonGroup1.add(jCheckBox51);
    jCheckBox51.setText("Petty Cash");
    jCheckBox51.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    jCheckBox51.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox51.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox51ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    jPanel4.add(jCheckBox51, gridBagConstraints);

    buttonGroup1.add(jCheckBox6);
    jCheckBox6.setText("Receipts");
    jCheckBox6.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox6ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    jPanel4.add(jCheckBox6, gridBagConstraints);

    buttonGroup1.add(jCheckBox7);
    jCheckBox7.setText("Patient A/C");
    jCheckBox7.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox7ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jCheckBox7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jPanel4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jPanel1, gridBagConstraints);

    jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select transaction_type from pb_transaction_type order by transaction_type"));
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel11.add(jComboBox1, gridBagConstraints);

    jLabel1.setText("Journal No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel11.add(jLabel1, gridBagConstraints);

    jTextField1.setText("-");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel11.add(jTextField1, gridBagConstraints);

    jLabel10.setText("Cash Point");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel11.add(jLabel10, gridBagConstraints);

    jTextField14.setEditable(false);
    jTextField14.addComponentListener(new java.awt.event.ComponentAdapter() {
        public void componentShown(java.awt.event.ComponentEvent evt) {
            jTextField14ComponentShown(evt);
        }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 2.5;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jTextField14, gridBagConstraints);

    jLabel131.setText("Shift No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel11.add(jLabel131, gridBagConstraints);

    jTextField81.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel11.add(jTextField81, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
    getContentPane().add(jPanel11, gridBagConstraints);

    setBounds(0, 0, 704, 518);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField14ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextField14ComponentShown
// Add your handling code here:
    }//GEN-LAST:event_jTextField14ComponentShown
    
    private void jButton94ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton94ActionPerformed
        jSearchDialog14.dispose();
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton94ActionPerformed
    
    private void jSearchTable14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable14MouseClicked
        if(jCheckBox7.isSelected()){
            jTable2.setValueAt(jSearchTable14.getValueAt(jSearchTable14.getSelectedRow(),0),jTable2.getSelectedRow(), 5);
            jTable2.setValueAt(jSearchTable14.getValueAt(jSearchTable14.getSelectedRow(),1),jTable2.getSelectedRow(), 6);
        }
        jSearchDialog14.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable14MouseClicked
    
    private void jTextField11114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11114CaretUpdate
        if(jTextField11114.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable14.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT code,activity from pb_activity where code ILIKE '"+jTextField11114.getText()+"%' AND activity_category ilike 'PR' order by activity"));
            jSearchTable14.setShowHorizontalLines(false);
            jSearchScrollPane14.setViewportView(jSearchTable14);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField11114CaretUpdate
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if (jTable2.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked21zq();
        }else{
            if (jTable2.getSelectedColumn() == 5) {
                
                this.cmboxMouseClicked21z();
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked
    private void cmboxMouseClicked21zq() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog13.setSize(400,200);
        jSearchDialog13.setLocation(point);
        jSearchDialog13.setVisible(true);
    }
    
    private void cmboxMouseClicked21z() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog14.setSize(400,200);
        jSearchDialog14.setLocation(point);
        jSearchDialog14.setVisible(true);
    }
    private void jButton93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton93ActionPerformed
        jSearchDialog13.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton93ActionPerformed
    
    private void jSearchTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable13MouseClicked
        if(jCheckBox7.isSelected()){
            jTable2.setValueAt(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(),0),jTable2.getSelectedRow(), 0);
            jTable2.setValueAt(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(),1),jTable2.getSelectedRow(), 1);
        }
        jSearchDialog13.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable13MouseClicked
    
    private void jTextField11113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11113CaretUpdate
        if(jTextField11113.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable13.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register WHERE second_name||' '||first_name||' '||last_name ILIKE '%"+jTextField11113.getText()+"%' UNION ALL SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where patient_no ILIKE '"+jTextField11113.getText()+"%' order by 2"));
            
            jSearchTable13.setShowHorizontalLines(false);
            jSearchScrollPane13.setViewportView(jSearchTable13);
            
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField11113CaretUpdate
    
    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        this.invalidate();
        this.jTable2.setVisible(true);
        jTable2.grabFocus();
        this.jScrollPane1.setViewportView(jTable2);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        jButton1.setEnabled(true);      // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jTable14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable14MouseClicked
        if (jTable14.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked1();
        } else {
            if (jTable14.getSelectedColumn() == 6) {
                
                this.cmboxMouseClicked21();
            }
        }     // Add your handling code here:
    }//GEN-LAST:event_jTable14MouseClicked
    
    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        this.invalidate();
        this.jTable14.grabFocus();
        this.jTable14.setVisible(true);
        this.jScrollPane1.setViewportView(jTable14);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        cmbox = new javax.swing.JComboBox();
        cmbox2 = new javax.swing.JComboBox();
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed
    
    private void jTable122MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable122MouseClicked
        if (jTable122.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked212();
        }       // Add your handling code here:
    }//GEN-LAST:event_jTable122MouseClicked
    private void cmboxMouseClicked212() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog12.setSize(400,200);
        jSearchDialog12.setLocation(point);
        jSearchDialog12.setVisible(true);
    }
    private void jTable121MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable121MouseClicked
        if (jTable121.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked211();
        }        // Add your handling code here:
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable121MouseClicked
    private void cmboxMouseClicked211() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog12.setSize(400,200);
        jSearchDialog12.setLocation(point);
        jSearchDialog12.setVisible(true);
    }
    private void jCheckBox51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox51ActionPerformed
        this.invalidate();
        this.jTable122.setVisible(true);
        jTable122.grabFocus();
        this.jScrollPane1.setViewportView(jTable122);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox51ActionPerformed
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        this.invalidate();
        this.jTable121.setVisible(true);
        jTable121.grabFocus();
        this.jScrollPane1.setViewportView(jTable121);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        if (jCheckBox3.isSelected()){
            jTable12.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable12.getSelectedRow(), 0);
            jTable12.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable12.getSelectedRow(), 1);
            
            jSearchDialog12.dispose();
        }else{
            if (jCheckBox2.isSelected()){
                jTable1.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable1.getSelectedRow(), 6);
                jTable1.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable1.getSelectedRow(), 5);
                
                jSearchDialog12.dispose();
            }else{
                if (jCheckBox1.isSelected()){
                    jTable11.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable11.getSelectedRow(), 5);
                    jTable11.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable11.getSelectedRow(), 4);
                    
                    jSearchDialog12.dispose();
                }else{
                    if (jCheckBox6.isSelected()){
                        jTable121.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable121.getSelectedRow(), 0);
                        jTable121.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable121.getSelectedRow(), 1);
                        
                        jSearchDialog12.dispose();
                    }else{
                        if (jCheckBox51.isSelected()){
                            jTable122.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable122.getSelectedRow(), 0);
                            jTable122.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable122.getSelectedRow(), 1);
                            
                            jSearchDialog12.dispose();
                        }else{
                            if(jCheckBox5.isSelected()){
                                jTable14.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable14.getSelectedRow(), 6);
                                jTable14.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable14.getSelectedRow(), 5);
                                
                                jSearchDialog12.dispose();
                            }
                        }
                    }
                }
            }
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable12MouseClicked
    
    private void jTextField11112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11112CaretUpdate
        if(jTextField11112.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT code,activity from pb_activity where code ILIKE '"+jTextField11112.getText()+"%' order by code"));
            
            
            jSearchTable12.setShowHorizontalLines(false);
            jSearchScrollPane12.setViewportView(jSearchTable12);
            
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField11112CaretUpdate
    
    private void jTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable12MouseClicked
        if (jTable12.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked21();
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable12MouseClicked
    private void cmboxMouseClicked21() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog12.setSize(400,200);
        jSearchDialog12.setLocation(point);
        jSearchDialog12.setVisible(true);
    }
    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        this.jSearchDialog12.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        jTable11.setValueAt(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),0),jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),1),jTable11.getSelectedRow(), 1);
        
        jSearchDialog111.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField111111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111111CaretUpdate
        if(jTextField111111.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT code,supplier_name from st_suppliers where supplier_name ILIKE '"+jTextField111111.getText()+"%' order by supplier_name"));
            
            
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);
            
            
            
            /*try {
             
                searchRowSet111.execute("SELECT code,supplier_name from st_suppliers where supplier_name ILIKE '"+jTextField111111.getText()+"%' order by supplier_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
             
                jSearchTable111.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet111, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("code", "Account no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("supplier_name", "Creditor", false)
                    // new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
             
                }));
             
                jSearchTable111.setShowHorizontalLines(false);
                jSearchScrollPane111.setViewportView(jSearchTable111);
             
             
            } catch(java.sql.SQLException sqlExec) {
             
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
             
            }
             */
        }       // Add your handling code here:
    }//GEN-LAST:event_jTextField111111CaretUpdate
    
    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        
        if (jTable11.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked2();
        }else{
            if (jTable11.getSelectedColumn() == 5) {
                
                this.cmboxMouseClicked21();
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    private void cmboxMouseClicked2() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog111.setSize(400,200);
        jSearchDialog111.setLocation(point);
        jSearchDialog111.setVisible(true);
    }
    private void jButton911ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton911ActionPerformed
        jSearchDialog111.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton911ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        
        if(jCheckBox2.isSelected()){
            jTable1.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
            jTable1.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),2),jTable1.getSelectedRow(), 1);
            jTable1.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable1.getSelectedRow(), 2);
        }else{
            if(jCheckBox5.isSelected()){
                jTable14.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0),jTable14.getSelectedRow(), 0);
                jTable14.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable14.getSelectedRow(), 1);
            }
        }
        jSearchDialog11.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog11.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jCheckBox2.isSelected()){
            if(jTextField11111.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                
                jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField11111.getText()+"%'  order by scheme_name"));
                
               /* try {
                
                    searchRowSet11.execute("SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField11111.getText()+"%' and (allowed ilike 'Both' or allowed ilike 'OPD%') order by scheme_name");
                    //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
                
                    jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Scheme", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
                
                    }));
                */
                jSearchTable11.setShowHorizontalLines(false);
                jSearchScrollPane11.setViewportView(jSearchTable11);
                
                
                
            }
        }else{
            if(jCheckBox5.isSelected()){
                if(jTextField11111.getCaretPosition() < 1){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no,first_name||' '||middle_name as name from pb_doctors_list where first_name||' '||middle_name ILIKE '"+jTextField11111.getText()+"%' order by name"));
                    
                    
                    
                    jSearchTable11.setShowHorizontalLines(false);
                    jSearchScrollPane11.setViewportView(jSearchTable11);
                    
                    
                    
                }
            }
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable13.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable13.getSelectedRow(), 0);
        jTable13.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable13.getSelectedRow(), 3);
        jTable13.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable13.getSelectedRow(), 4);
        
        jSearchDialog1.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT bank_account_no,bank_name||' '||branch_name as name,gl_code from ac_banks_setup where bank_account_no ILIKE '"+jTextField1111.getText()+"%' order by bank_account_no"));
        
        
        jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog1.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable13MouseClicked
        if (jTable13.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable13MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked1();
        } else {
            if (jTable1.getSelectedColumn() == 6) {
                
                this.cmboxMouseClicked21();
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked1() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);
    }
    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        this.invalidate();
        this.jTable13.setVisible(true);
        jTable13.grabFocus();
        this.jScrollPane1.setViewportView(jTable13);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed
    
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        this.invalidate();
        this.jTable12.setVisible(true);
        jTable12.grabFocus();
        this.jScrollPane1.setViewportView(jTable12);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        
        
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
  /*      this.invalidate();
        //this.jTable11.hide();
        // this.jTable12.hide();
        this.jTable1.grabFocus();
        this.jTable1.setVisible(true);
        this.jScrollPane1.setViewportView(jTable1);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        cmbox = new javax.swing.JComboBox();
        cmbox2 = new javax.swing.JComboBox();
   
   */
        this.invalidate();
        this.jTable1.grabFocus();
        this.jTable1.setVisible(true);
        this.jScrollPane1.setViewportView(jTable1);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        cmbox = new javax.swing.JComboBox();
        cmbox2 = new javax.swing.JComboBox();
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.invalidate();
        jTable11.grabFocus();
        this.jTable11.setVisible(true);
        this.jScrollPane1.setViewportView(jTable11);
        this.validate();
        cmbox1 = new javax.swing.JComboBox();
        cmbox = new javax.swing.JComboBox();
        cmbox2 = new javax.swing.JComboBox();
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        
        for (int k = 0; k < jTable12.getRowCount(); k++ ) {
            for (int r = 0; r < jTable12.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        
        
        for (int k = 0; k < jTable13.getRowCount(); k++ ) {
            for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                jTable13.getModel().setValueAt(null,k,r);
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
                
                
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
    /*     java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
     
         System.out.println("Selected Guarntor : "+selectedGuaran);
     
         int j = jTable1.getSelectedRow();
         int i = jTable1.getSelectedRow();
         if (selectedGuaran != null) {
   // int i = jTable1.getSelectedRow();
     
        try {
     
          java.sql.Statement pstmt = connectDB.createStatement();
          java.sql.ResultSet rst = pstmt.executeQuery("select member_no,member_name from loan_transactions where loan_account_no = '"+selectedGuaran+"'");
     while (rst.next()){
     
            //jTextField4.setText(rs.getObject(1).toString());
            jTable1.setValueAt(rst.getObject(1),i,2);
            jTable1.setValueAt(rst.getObject(2),i,6);
     
     }
          } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
 }
     }*/
    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        Object floatCol2 =  "00";
        
        if (jTable1.getSelectedColumn() == 2) {
            
            jTable1.setValueAt(floatCol2, jTable1.getSelectedRow(), 3);
            
        }else{
            if (jTable1.getSelectedColumn() == 3) {
                jTable1.setValueAt(floatCol2, jTable1.getSelectedRow(), 2);
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void cmbox1xActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran1 = cmbox1.getSelectedItem();
        
        
    }
    private void cmbox1ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran1 = cmbox1.getSelectedItem();
        
        System.out.println("Selected Guarntor : "+selectedGuaran1);
        
        int i = jTable11.getSelectedRow();
        int j = jTable1.getSelectedRow();
        int k = jTable12.getSelectedRow();
        int c = jTable13.getSelectedRow();
        try {
            //    if (jCheckBox1.getText().equals("Shares")){
            
            if (jCheckBox1.isSelected()){
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select code from activity where activity = '"+selectedGuaran1+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable11.setValueAt(rs.getObject(1),i,4);
                }
            }else{
                if (jCheckBox2.isSelected()){
                    
                    java.sql.Statement pstmt1 = connectDB.createStatement();
                    java.sql.ResultSet rs1 = pstmt1.executeQuery("select code from activity where activity = '"+selectedGuaran1+"'");
                    while (rs1.next()){
                        //jTextField4.setText(rs.getObject(1).toString());
                        jTable1.setValueAt(rs1.getObject(1),j,5);
                    }
                    
                }else{
                    if (jCheckBox4.isSelected()){
                        
                        java.sql.Statement pstmt13 = connectDB.createStatement();
                        java.sql.ResultSet rs13 = pstmt13.executeQuery("select bank_account_code from bank_branches where bank_account_name = '"+selectedGuaran1+"'");
                        while (rs13.next()){
                            //jTextField4.setText(rs.getObject(1).toString());
                            jTable13.setValueAt(rs13.getObject(1),c,3);
                        }
                        
                    }else{
                        java.sql.Statement pstmt11 = connectDB.createStatement();
                        java.sql.ResultSet rs11 = pstmt11.executeQuery("select code from activity where activity = '"+selectedGuaran1+"'");
                        while (rs11.next()){
                            //jTextField4.setText(rs.getObject(1).toString());
                            jTable12.setValueAt(rs11.getObject(1),k,4);
                        }
                    }
                    
                }
            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
    }
    // }
    
    
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        
        System.out.println("Selected Guarntor : "+selectedGuaran);
        
        int j = jTable1.getSelectedRow();
        int i = jTable11.getSelectedRow();
        if (selectedGuaran != null) {
            
            try {
                if (jCheckBox1.isSelected()){
                    
                    java.sql.Statement pstmt = connectDB.createStatement();
                    java.sql.ResultSet rst = pstmt.executeQuery("select suffix||' '||first_name||' '||middle_name||' '||last_name from member where m_number = '"+selectedGuaran+"'");
                    while (rst.next()){
                        //jTextField4.setText(rs.getObject(1).toString());
                        jTable11.setValueAt(rst.getObject(1),i,5);
                    }
                    
                }else{
                    
                    if (jCheckBox2.isSelected()){
                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rst1 = pstmt1.executeQuery("select suffix||' '||first_name||' '||middle_name||' '||last_name from member where m_number = '"+selectedGuaran+"'");
                        while (rst1.next()){
                            //jTextField4.setText(rs.getObject(1).toString());
                            jTable1.setValueAt(rst1.getObject(1),j,6);
                        }
                    }
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
            
        }
        
    }
    
    
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        
        /*
          javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
   //cmbox.setEditable(true);
    cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset1, "description", null, null, null));
    //javax.swing.table.TableColumn s = this.jTable1.getColumnModel().getColumn(0);
   javax.swing.table.TableColumn s = this.jTable1.getColumn("ITEM DESCRIPTION");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
         */
        
        
        
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+datePicker1.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            if(jTable1.isEditing()){
                jTable1.getCellEditor().stopCellEditing();
            }
            if(jTable11.isEditing()){
                jTable11.getCellEditor().stopCellEditing();
            }
            
            if(jTable12.isEditing()){
                jTable12.getCellEditor().stopCellEditing();
            }
            if(jTable121.isEditing()){
                jTable121.getCellEditor().stopCellEditing();
            }
            if(jTable122.isEditing()){
                jTable122.getCellEditor().stopCellEditing();
            }
            if(jTable13.isEditing()){
                jTable13.getCellEditor().stopCellEditing();
            }
            if(jTable14.isEditing()){
                jTable14.getCellEditor().stopCellEditing();
            }
            if(jTable2.isEditing()){
                jTable2.getCellEditor().stopCellEditing();
            }
            
            double debitsTable1 = 0.00;
            
            double debitsTable11 = 0.00;
            
            double debitsTable12 = 0.00;
            
            double debitsTable121 = 0.00;
            
            double debitsTable122 = 0.00;
            
            double debitsTable4 = 0.00;
            
            double creditsTable1 = 0.00;
            
            double creditsTable11 = 0.00;
            
            double creditsTable12 = 0.00;
            
            double creditsTable121 = 0.00;
            
            double creditsTable122 = 0.00;
            
            double creditsTable13 = 0.00;
            
            double creditsTable4 = 0.00;
            
            double debitsTable13 = 0.00;
            
            double totalDebits = 0.00;
            
            double totalCredits = 0.00;
            
            double Credit = 0.00;
            
            double Debit = 0.00;
            
            double creditsTable4x = 0.00;
            
            double debitsTable4x = 0.00;
            
            double diff = 0.00;
            //  String bal = null;
            
            try{
                java.util.Calendar calendar = java.util.Calendar.getInstance();
                
                long dateNow = calendar.getTimeInMillis();
                
                java.sql.Date datenowSql= new java.sql.Date(dateNow);
                
                System.out.println(datenowSql.toString());
                
                java.sql.Connection con;
                String vouchNo = null;
                String user = null;
                String InvNo = null;
                String KRA = null;
                String Code = null;
                String Codes = null;
                String invoice = null;
                String journal = null;
                
                
                for(int j = 0; j < jTable1.getModel().getRowCount(); j++) {
                    
                    if (jTable1.getModel().getValueAt(j, 3) != null) {
                        
                        debitsTable1 = debitsTable1 + Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
                        
                    }
                    
                }
                
                for(int k = 0; k < jTable11.getModel().getRowCount(); k++) {
                    
                    if (jTable11.getModel().getValueAt(k, 2) != null) {
                        
                        debitsTable11 = debitsTable11 + Double.parseDouble(jTable11.getModel().getValueAt(k, 2).toString());
                        
                    }
                    
                }
                
                for(int l = 0; l < jTable12.getModel().getRowCount(); l++) {
                    
                    if (jTable12.getModel().getValueAt(l, 2) != null) {
                        
                        debitsTable12 = debitsTable12 + Double.parseDouble(jTable12.getModel().getValueAt(l, 2).toString());
                        
                    }
                    
                }
                
                for(int s = 0; s < jTable122.getModel().getRowCount(); s++) {
                    
                    if (jTable122.getModel().getValueAt(s, 2) != null) {
                        
                        debitsTable122 = debitsTable122 + Double.parseDouble(jTable122.getModel().getValueAt(s, 2).toString());
                        
                    }
                    
                }
                
                for(int x = 0; x < jTable121.getModel().getRowCount(); x++) {
                    
                    if (jTable121.getModel().getValueAt(x, 2) != null) {
                        
                        debitsTable121 = debitsTable121 + Double.parseDouble(jTable121.getModel().getValueAt(x, 2).toString());
                        
                    }
                    
                }
                
                for(int m = 0; m < jTable1.getModel().getRowCount(); m++) {
                    
                    if (jTable1.getModel().getValueAt(m, 4) != null) {
                        
                        creditsTable1 = creditsTable1 + Double.parseDouble(jTable1.getModel().getValueAt(m, 4).toString());
                        
                    }
                    
                }
                
                for(int n = 0; n < jTable11.getModel().getRowCount(); n++) {
                    
                    if (jTable11.getModel().getValueAt(n, 3) != null) {
                        
                        creditsTable11 = creditsTable11 + Double.parseDouble(jTable11.getModel().getValueAt(n, 3).toString());
                        
                    }
                    
                }
                
                for(int p = 0; p < jTable12.getModel().getRowCount(); p++) {
                    
                    if (jTable12.getModel().getValueAt(p, 3) != null) {
                        
                        creditsTable12 = creditsTable12 + Double.parseDouble(jTable12.getModel().getValueAt(p, 3).toString());
                        
                    }
                    
                }
                
                for(int q = 0; q < jTable13.getRowCount(); q++) {
                    
                    if (jTable13.getModel().getValueAt(q, 2) != null) {
                        
                        creditsTable13 = creditsTable13 + Double.parseDouble(jTable13.getModel().getValueAt(q, 2).toString());
                        
                    }
                    
                }
                
                for(int h = 0; h < jTable121.getModel().getRowCount(); h++) {
                    
                    if (jTable121.getModel().getValueAt(h, 3) != null) {
                        
                        creditsTable121 = creditsTable121 + Double.parseDouble(jTable121.getModel().getValueAt(h, 3).toString());
                        
                    }
                    
                }
                
                for(int d = 0; d < jTable122.getModel().getRowCount(); d++) {
                    
                    if (jTable122.getModel().getValueAt(d, 3) != null) {
                        
                        creditsTable122 = creditsTable122 + Double.parseDouble(jTable122.getModel().getValueAt(d, 3).toString());
                        
                    }
                    
                }
                
                for(int r = 0; r < jTable13.getModel().getRowCount(); r++) {
                    
                    if (jTable13.getModel().getValueAt(r, 1) != null) {
                        
                        debitsTable13 = debitsTable13 + Double.parseDouble(jTable13.getModel().getValueAt(r, 1).toString());
                        
                    }
                    
                }
                
                
                for(int a = 0; a < jTable14.getModel().getRowCount(); a++) {
                    
                    if (jTable14.getModel().getValueAt(a, 4) != null) {
                        
                        creditsTable4 = creditsTable4 + Double.parseDouble(jTable14.getModel().getValueAt(a, 4).toString());
                        
                    }
                    
                }
                
                for(int q = 0; q < jTable14.getModel().getRowCount(); q++) {
                    
                    if (jTable14.getModel().getValueAt(q, 3) != null) {
                        
                        debitsTable4 = debitsTable4 + Double.parseDouble(jTable14.getModel().getValueAt(q, 3).toString());
                        
                    }
                    
                }
                
                
                for(int u = 0; u < jTable2.getModel().getRowCount(); u++) {
                    
                    if (jTable2.getModel().getValueAt(u, 4) != null) {
                        
                        creditsTable4x = creditsTable4x + Double.parseDouble(jTable2.getModel().getValueAt(u, 4).toString());
                        
                    }
                    
                }
                
                for(int g = 0; g < jTable2.getModel().getRowCount(); g++) {
                    
                    if (jTable2.getModel().getValueAt(g, 3) != null) {
                        
                        debitsTable4x = debitsTable4x + Double.parseDouble(jTable2.getModel().getValueAt(g, 3).toString());
                        
                    }
                    
                }
                
                
                
                totalDebits = debitsTable1 + debitsTable11 + debitsTable12 + debitsTable13 + debitsTable121 + debitsTable122 + debitsTable4 + debitsTable4x;
                
                System.out.println(totalDebits);
                
                totalCredits = creditsTable1 + creditsTable11 + creditsTable12 + creditsTable13 + creditsTable121 + creditsTable122 + creditsTable4 + creditsTable4x;
                
                System.out.println(totalCredits);
                
                //System.out.println("Difference Debits V Credits = "+(totalDebits - totalCredits));
                // bal = (totalDebits - totalCredits);
                String bal =  new com.afrisoftech.sys.Format2Currency().Format2Currency(Double.toString(totalDebits - totalCredits));
                
                System.out.println("Difference Debits V Credits = "+bal);
                
                diff = Double.parseDouble(java.lang.String.valueOf(bal));
                
                System.out.println("Difference = "+diff);
                
                if (diff != 0.00) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Debits and Credits MUST balance! Out of balance by "+new com.afrisoftech.sys.Format2Currency().Format2Currency(Double.toString(totalDebits - totalCredits)));
                    
                } else {
                    
                    String transNo = null;
                    
                    
                    try {
                        connectDB.setAutoCommit(false);
                        java.sql.Statement ps = connectDB.createStatement();
                        java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                        while (rst.next()){
                            transNo = rst.getObject(1).toString();
                        }
                        
                        if(jTextField1.getText().equalsIgnoreCase("-")){
                            java.sql.Statement ps1 = connectDB.createStatement();
                            java.sql.ResultSet rst1 = ps1.executeQuery("select nextval('journal_no_seq')");
                            while (rst1.next()){
                                
                                journal = rst1.getObject(1).toString();
                            }
                        }else{
                            journal = jTextField1.getText();
                        }
                        java.sql.Statement psg = connectDB.createStatement();
                        java.sql.ResultSet rstg = psg.executeQuery("select current_user");
                        while (rstg.next()){
                            user = rstg.getObject(1).toString();
                        }
                        for (int i = 0;  i < jTable13.getModel().getRowCount(); i++) {
                            if (jTable13.getModel().getValueAt(i,0) != null){
                                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt1.setObject(1,jTable13.getModel().getValueAt(i,4));
                                pstmt1.setString(2,jComboBox1.getSelectedItem().toString());
                                pstmt1.setObject(3,jTable13.getModel().getValueAt(i,3));
                                pstmt1.setObject(4,jTable13.getModel().getValueAt(i,3));
                                pstmt1.setString(5,"-");
                                pstmt1.setString(6,"");
                                pstmt1.setString(7,"-");
                                pstmt1.setObject(9,jTable13.getModel().getValueAt(i,4));
                                pstmt1.setObject(10,jTable13.getModel().getValueAt(i,5));
                                pstmt1.setString(8,"-");
                                pstmt1.setString(11,"");
                                pstmt1.setString(12,"");
                                pstmt1.setString(13,journal);
                                pstmt1.setObject(14,jTable13.getModel().getValueAt(i,0));
                                pstmt1.setObject(16,jTable13.getModel().getValueAt(i,1));
                                pstmt1.setObject(15,jTable13.getModel().getValueAt(i,3));
                                pstmt1.setString(17,jComboBox1.getSelectedItem().toString());
                                if(jTable13.getValueAt(i,1) == null){
                                    pstmt1.setDouble(18,0.00);
                                } else{
                                    pstmt1.setDouble(18,java.lang.Double.valueOf(jTable13.getModel().getValueAt(i,1).toString()));
                                }
                                if(jTable13.getValueAt(i,2) == null){
                                    pstmt1.setDouble(19,0.00);
                                } else{
                                    pstmt1.setDouble(19,java.lang.Double.valueOf(jTable13.getModel().getValueAt(i,2).toString()));
                                    
                                }
                                pstmt1.setDate(20,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt1.setString(21,transNo);
                                pstmt1.setBoolean(24,false);
                                pstmt1.setBoolean(22,false);
                                pstmt1.setBoolean(23,false);
                                pstmt1.setDate(25,null);
                                pstmt1.setDate(26,null);
                                pstmt1.setDate(27,null);
                                pstmt1.setString(28,user);
                                pstmt1.setObject(29,"-");
                                pstmt1.setString(30,"-");
                                pstmt1.executeUpdate();
                                
                                
                                
                                java.sql.PreparedStatement pstmt2z1 = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?)");
                                pstmt2z1.setObject(1,jTable13.getModel().getValueAt(i,4).toString());
                                pstmt2z1.setObject(2,jTable13.getModel().getValueAt(i,3).toString());
                                pstmt2z1.setObject(3,jTable13.getModel().getValueAt(i,3).toString());
                                pstmt2z1.setString(4,journal);
                                
                                if(jTable13.getModel().getValueAt(i,1) == null){
                                    pstmt2z1.setDouble(6,0.00);
                                } else{
                                    pstmt2z1.setDouble(6,java.lang.Double.valueOf(jTable13.getModel().getValueAt(i,1).toString()));
                                }
                                if(jTable13.getModel().getValueAt(i,2) == null){
                                    pstmt2z1.setDouble(7,0.00);
                                } else{
                                    pstmt2z1.setDouble(7,java.lang.Double.valueOf(jTable13.getModel().getValueAt(i,2).toString()));
                                }
                                pstmt2z1.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt2z1.setString(8,user);
                                pstmt2z1.setObject(9,jTable13.getModel().getValueAt(i,0).toString());
                                pstmt2z1.setObject(10,jTable13.getModel().getValueAt(i,3).toString());
                                pstmt2z1.executeUpdate();
                                
                            }
                        }
                        for (int i = 0;  i < jTable12.getModel().getRowCount(); i++) {
                            if (jTable12.getModel().getValueAt(i,0) != null){
                                
                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmt2.setObject(1,jTable12.getModel().getValueAt(i,0).toString());
                                pstmt2.setObject(2,jTable12.getModel().getValueAt(i,1).toString());
                                pstmt2.setString(3,"");
                                pstmt2.setObject(4,jTable12.getModel().getValueAt(i,4).toString());
                                pstmt2.setObject(5,jTable12.getModel().getValueAt(i,4).toString());
                                pstmt2.setObject(6,"");
                                pstmt2.setObject(7,"-");
                                pstmt2.setString(8,"");
                                pstmt2.setString(9,"");
                                pstmt2.setString(10,"");
                                pstmt2.setString(11,"");
                                pstmt2.setString(12,"");
                                pstmt2.setString(13,journal);
                                pstmt2.setString(14,jTable12.getModel().getValueAt(i,4).toString());
                                pstmt2.setString(15,jComboBox1.getSelectedItem().toString());
                                if(jTable12.getModel().getValueAt(i,2) == null){
                                    pstmt2.setDouble(16,0.00);
                                } else{
                                    pstmt2.setDouble(16,java.lang.Double.valueOf(jTable12.getModel().getValueAt(i,2).toString()));
                                    
                                }
                                if(jTable12.getModel().getValueAt(i,3) == null){
                                    pstmt2.setDouble(17,0.00);
                                } else{
                                    pstmt2.setDouble(17,java.lang.Double.valueOf(jTable12.getModel().getValueAt(i,3).toString()));
                                    
                                }
                                pstmt2.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt2.setString(19,transNo);
                                pstmt2.setBoolean(20,false);
                                pstmt2.setBoolean(21,false);
                                pstmt2.setBoolean(22,false);
                                pstmt2.setString(23,user);
                                pstmt2.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt2z = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?)");
                                pstmt2z.setObject(1,jTable12.getModel().getValueAt(i,0).toString());
                                pstmt2z.setObject(2,jTable12.getModel().getValueAt(i,1).toString());
                                pstmt2z.setObject(3,jTable12.getModel().getValueAt(i,4).toString());
                                pstmt2z.setString(4,journal);
                                
                                if(jTable12.getModel().getValueAt(i,2) == null){
                                    pstmt2z.setDouble(6,0.00);
                                } else{
                                    pstmt2z.setDouble(6,java.lang.Double.valueOf(jTable12.getModel().getValueAt(i,2).toString()));
                                }
                                if(jTable12.getModel().getValueAt(i,3) == null){
                                    pstmt2z.setDouble(7,0.00);
                                } else{
                                    pstmt2z.setDouble(7,java.lang.Double.valueOf(jTable12.getModel().getValueAt(i,3).toString()));
                                }
                                pstmt2z.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt2z.setString(8,user);
                                pstmt2z.setString(9,"-");
                                pstmt2z.setObject(10,jTable12.getModel().getValueAt(i,4).toString());
                                pstmt2z.executeUpdate();
                            }
                        }
                        String Payer = null;
                        
                        
                        for (int i = 0;  i < jTable1.getModel().getRowCount(); i++) {
                            if (jTable1.getModel().getValueAt(i,0) != null){
                                
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt.setObject(1,jTable1.getModel().getValueAt(i,6).toString());
                                pstmt.setObject(2,jTable1.getModel().getValueAt(i,1).toString());
                                pstmt.setString(3,jTable1.getModel().getValueAt(i,2).toString());
                                pstmt.setString(4,"-");
                                pstmt.setObject(5,jTable1.getValueAt(i,2).toString());
                                pstmt.setObject(6,jTable1.getValueAt(i,7).toString());
                                pstmt.setObject(7,jTable1.getModel().getValueAt(i,0).toString());
                                pstmt.setString(8,journal);
                                pstmt.setString(9,journal);
                                pstmt.setString(10,journal);
                                pstmt.setString(11,transNo);
                                pstmt.setString(12,jComboBox1.getSelectedItem().toString());
                                if(jTable1.getValueAt(i,3) == null){
                                    pstmt.setDouble(13,0.00);
                                } else{
                                    pstmt.setDouble(13,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,3).toString()));
                                    
                                }
                                if(jTable1.getModel().getValueAt(i,4) == null){
                                    pstmt.setDouble(14,0.00);
                                } else{
                                    pstmt.setDouble(14,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,4).toString()));
                                    
                                }
                                pstmt.setString(16,"");
                                pstmt.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                                pstmt.setBoolean(18,true);
                                pstmt.setBoolean(19,true);
                                pstmt.setString(20,user);
                                pstmt.setString(21,"");
                                if(jTable1.getModel().getValueAt(i,3) == null){
                                    pstmt.setDouble(24,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,4).toString()));
                                    pstmt.setDouble(22,0.00);
                                } else{
                                    pstmt.setDouble(22,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,3).toString()));
                                    pstmt.setDouble(24,0.00);
                                }
                                pstmt.setBoolean(23,true);
                                pstmt.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt2x1 = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?)");
                                pstmt2x1.setObject(1,jTable1.getModel().getValueAt(i,6).toString());
                                pstmt2x1.setObject(2,jTable1.getModel().getValueAt(i,1).toString());
                                pstmt2x1.setObject(3,jTable1.getModel().getValueAt(i,2).toString());
                                pstmt2x1.setString(4,journal);
                                pstmt2x1.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                if(jTable1.getModel().getValueAt(i,3) == null){
                                    pstmt2x1.setDouble(6,0.00);
                                } else{
                                    pstmt2x1.setDouble(6,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,3).toString()));
                                }
                                if(jTable1.getModel().getValueAt(i,4) == null){
                                    pstmt2x1.setDouble(7,0.00);
                                } else{
                                    pstmt2x1.setDouble(7,java.lang.Double.valueOf(jTable1.getModel().getValueAt(i,4).toString()));
                                }
                                
                                pstmt2x1.setString(8,user);
                                pstmt2x1.setObject(9,jTable1.getModel().getValueAt(i,0).toString());
                                pstmt2x1.setObject(10,jTable1.getModel().getValueAt(i,1).toString());
                                pstmt2x1.executeUpdate();
                                
                            }
                        }
                        
                        for (int i = 0;  i < jTable11.getModel().getRowCount(); i++) {
                            if (jTable11.getModel().getValueAt(i,0) != null){
                                java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                                pstmt3.setObject(1,jTable11.getModel().getValueAt(i,5).toString());
                                pstmt3.setString(4,journal);
                                pstmt3.setObject(3,jTable11.getModel().getValueAt(i,8).toString());
                                pstmt3.setObject(2,jTable11.getModel().getValueAt(i,1).toString());
                                pstmt3.setObject(5,jTable11.getModel().getValueAt(i,1).toString());
                                pstmt3.setObject(6,jTable11.getModel().getValueAt(i,8).toString());
                                pstmt3.setObject(7,jTable11.getModel().getValueAt(i,0).toString());
                                pstmt3.setString(8,"-");
                                pstmt3.setString(9,journal);
                                pstmt3.setObject(10,jTable11.getModel().getValueAt(i,7).toString());
                                pstmt3.setString(11,transNo);
                                pstmt3.setString(12,jComboBox1.getSelectedItem().toString());
                                if(jTable11.getModel().getValueAt(i,2) == null){
                                    pstmt3.setDouble(13,0.00);
                                } else{
                                    pstmt3.setDouble(13,java.lang.Double.valueOf(jTable11.getModel().getValueAt(i,2).toString()));
                                    
                                }
                                if(jTable11.getModel().getValueAt(i,3) == null){
                                    pstmt3.setDouble(14,0.00);
                                } else{
                                    pstmt3.setDouble(14,java.lang.Double.valueOf(jTable11.getModel().getValueAt(i,3).toString()));
                                    
                                }
                                pstmt3.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt3.setObject(16,jTable11.getModel().getValueAt(i,6));
                                pstmt3.setString(17,"CREDITORS PAYABLES");
                                pstmt3.setBoolean(18,true);
                                pstmt3.setBoolean(19,true);
                                pstmt3.setString(20,user);
                                pstmt3.setString(21,journal);
                                pstmt3.setDate(22,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt3.setDate(23,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt3.setDouble(24,0.00);
                                if(jTable11.getModel().getValueAt(i,2) == null){
                                    Credit = Double.parseDouble(jTable11.getModel().getValueAt(i, 3).toString());
                                    
                                    pstmt3.setDouble(25,Credit);
                                } else{
                                    Debit = Double.parseDouble(jTable11.getModel().getValueAt(i, 2).toString());
                                    
                                    System.out.println("How much is the debit " +Debit);
                                    pstmt3.setDouble(25,(Debit)*-1);
                                    
                                }
                                
                                pstmt3.setDouble(26,0.00);
                                pstmt3.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt2x = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?)");
                                pstmt2x.setObject(1,jTable11.getModel().getValueAt(i,5).toString());
                                pstmt2x.setObject(2,jTable11.getModel().getValueAt(i,1).toString());
                                pstmt2x.setObject(3,jTable11.getModel().getValueAt(i,4).toString());
                                pstmt2x.setString(4,journal);
                                pstmt2x.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                if(jTable11.getValueAt(i,2) == null){
                                    pstmt2x.setDouble(6,0.00);
                                } else{
                                    pstmt2x.setDouble(6,java.lang.Double.valueOf(jTable11.getModel().getValueAt(i,2).toString()));
                                }
                                if(jTable11.getModel().getValueAt(i,3) == null){
                                    pstmt2x.setDouble(7,0.00);
                                } else{
                                    pstmt2x.setDouble(7,java.lang.Double.valueOf(jTable11.getModel().getValueAt(i,3).toString()));
                                }
                                
                                pstmt2x.setString(8,user);
                                pstmt2x.setObject(9,jTable11.getModel().getValueAt(i,0).toString());
                                pstmt2x.setObject(10,jTable11.getModel().getValueAt(i,5).toString());
                                pstmt2x.executeUpdate();
                                
                            }
                        }
                        
                        for (int w = 0;  w < jTable121.getModel().getRowCount(); w++) {
                            if (jTable121.getModel().getValueAt(w,0) != null){
                                
                                java.sql.PreparedStatement pstmt25 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                pstmt25.setObject(1,jTable121.getModel().getValueAt(w,0).toString());
                                pstmt25.setObject(2,jTable121.getModel().getValueAt(w,1).toString());
                                pstmt25.setString(3,"-");
                                if(jTable121.getModel().getValueAt(w,4) == null){
                                    pstmt25.setString(4,"-");
                                } else{
                                    pstmt25.setObject(4,jTable121.getModel().getValueAt(w,4).toString());
                                }
                                pstmt25.setString(5,"Cash");
                                pstmt25.setString(6,"-");
                                pstmt25.setString(7,"-");
                                pstmt25.setString(8,"-");
                                pstmt25.setString(9,"-");
                                pstmt25.setObject(10,jTable121.getModel().getValueAt(w,0).toString());
                                pstmt25.setString(11,"-");
                                pstmt25.setString(12,"-");
                                pstmt25.setString(13,journal);
                                pstmt25.setString(14,"-");
                                pstmt25.setString(15,jComboBox1.getSelectedItem().toString());
                                if(jTable121.getModel().getValueAt(w,2) == null){
                                    pstmt25.setDouble(16,0.00);
                                } else{
                                    pstmt25.setDouble(16,java.lang.Double.valueOf(jTable121.getModel().getValueAt(w,2).toString()));
                                    
                                }
                                if(jTable121.getModel().getValueAt(w,3) == null){
                                    pstmt25.setDouble(17,0.00);
                                } else{
                                    pstmt25.setDouble(17,java.lang.Double.valueOf(jTable121.getModel().getValueAt(w,3).toString()));
                                    
                                }
                                pstmt25.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt25.setString(19,transNo);
                                pstmt25.setBoolean(20,true);
                                pstmt25.setBoolean(21,false);
                                pstmt25.setBoolean(22,false);
                                pstmt25.setString(23,user);
                                pstmt25.setString(24,"-");
                                pstmt25.setString(25,"-");
                                pstmt25.setDate(26,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt25.setDouble(27,0.00);
                                pstmt25.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt25121 = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?)");
                                pstmt25121.setObject(1,jTable121.getModel().getValueAt(w,0).toString());
                                pstmt25121.setObject(2,jTable121.getModel().getValueAt(w,1).toString());
                                if(jTable121.getModel().getValueAt(w,4) == null){
                                    pstmt25121.setString(3,"-");
                                } else{
                                    pstmt25121.setObject(3,jTable121.getModel().getValueAt(w,4).toString());
                                }
                                pstmt25121.setString(4,journal);
                                
                                if(jTable121.getModel().getValueAt(w,2) == null){
                                    pstmt25121.setDouble(6,0.00);
                                } else{
                                    pstmt25121.setDouble(6,java.lang.Double.valueOf(jTable121.getModel().getValueAt(w,2).toString()));
                                }
                                if(jTable121.getModel().getValueAt(w,3) == null){
                                    pstmt25121.setDouble(7,0.00);
                                } else{
                                    pstmt25121.setDouble(7,java.lang.Double.valueOf(jTable121.getModel().getValueAt(w,3).toString()));
                                }
                                pstmt25121.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt25121.setString(8,user);
                                pstmt25121.setString(9,"-");
                                if(jTable121.getModel().getValueAt(w,4) == null){
                                    pstmt25121.setString(10,"-");
                                } else{
                                    pstmt25121.setObject(10,jTable121.getModel().getValueAt(w,4).toString());
                                }
                                pstmt25121.executeUpdate();
                                
                                
                            }
                        }
                        String glAcc = null;
                        String Activity = null;
                        java.sql.Statement stm121 = connectDB.createStatement();
                        java.sql.ResultSet rse121 = stm121.executeQuery("select code,activity,current_user from pb_activity where activity_category = 'PC'");
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            Activity = rse121.getObject(2).toString();
                            //userName = rse121.getObject(3).toString();
                        }
                        for (int o = 0;  o < jTable122.getModel().getRowCount(); o++) {
                            if (jTable122.getModel().getValueAt(o,0) != null){
                                
                                java.sql.PreparedStatement pstmt251 = connectDB.prepareStatement("insert into ac_petty_cash values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                pstmt251.setString(1,glAcc);
                                pstmt251.setString(2,Activity);
                                pstmt251.setString(3,"Petty Cash Control");
                                if(jTable122.getModel().getValueAt(o,4) == null){
                                    pstmt251.setString(4,"-");
                                } else{
                                    pstmt251.setObject(4,jTable122.getModel().getValueAt(o,4).toString());
                                }
                                if(jTable122.getModel().getValueAt(o,2) == null){
                                    pstmt251.setDouble(5,0.00);
                                } else{
                                    pstmt251.setDouble(5,java.lang.Double.valueOf(jTable122.getModel().getValueAt(o,2).toString()));
                                }
                                if(jTable122.getModel().getValueAt(o,3) == null){
                                    pstmt251.setDouble(6,0.00);
                                } else{
                                    pstmt251.setDouble(6,java.lang.Double.valueOf(jTable122.getModel().getValueAt(o,3).toString()));
                                }
                                pstmt251.setDate(7,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt251.setString(8,user);
                                pstmt251.setBoolean(9,true);
                                pstmt251.setString(10,journal);
                                pstmt251.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt251.setBoolean(12,true);
                                pstmt251.setString(13,"ACCOUNTS");
                                pstmt251.setString(14,"-");
                                pstmt251.setObject(15,jTable122.getModel().getValueAt(o,4));
                                pstmt251.setString(16,jComboBox1.getSelectedItem().toString());
                                pstmt251.setString(17,transNo);
                                pstmt251.setString(18,jTextField14.getText());
                                pstmt251.setString(19,jTextField81.getText());
                                
                                pstmt251.setString(20,journal);
                                pstmt251.setObject(21,jTable122.getModel().getValueAt(o,0).toString());
                                pstmt251.setString(22,journal);
                                pstmt251.setObject(23,jTable122.getModel().getValueAt(o,5).toString());
                                pstmt251.setObject(24,jTable122.getModel().getValueAt(o,6).toString());
                                pstmt251.setObject(25,jTable122.getModel().getValueAt(o,7).toString());
                                pstmt251.setObject(26,jTable122.getModel().getValueAt(o,8).toString());
                                // pstmt251.setString(27,"-");
                                
                                pstmt251.executeUpdate();
                                
                                
                                java.sql.PreparedStatement pstmt2512 = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?)");
                                pstmt2512.setObject(1,jTable122.getModel().getValueAt(o,0).toString());
                                pstmt2512.setObject(2,jTable122.getModel().getValueAt(o,1).toString());
                                if(jTable122.getModel().getValueAt(o,4) == null){
                                    pstmt2512.setString(3,"-");
                                } else{
                                    pstmt2512.setObject(3,jTable122.getModel().getValueAt(o,4).toString());
                                }
                                
                                pstmt2512.setString(4,journal);
                                
                                if(jTable122.getModel().getValueAt(o,2) == null){
                                    pstmt2512.setDouble(6,0.00);
                                } else{
                                    pstmt2512.setDouble(6,java.lang.Double.valueOf(jTable122.getModel().getValueAt(o,2).toString()));
                                }
                                if(jTable122.getModel().getValueAt(o,3) == null){
                                    pstmt2512.setDouble(7,0.00);
                                } else{
                                    pstmt2512.setDouble(7,java.lang.Double.valueOf(jTable122.getModel().getValueAt(o,3).toString()));
                                }
                                pstmt2512.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt2512.setString(8,user);
                                pstmt2512.setString(9,"-");
                                if(jTable122.getModel().getValueAt(o,4) == null){
                                    pstmt2512.setString(10,"-");
                                } else{
                                    pstmt2512.setObject(10,jTable122.getModel().getValueAt(o,4).toString());
                                }
                                pstmt2512.executeUpdate();
                            }
                        }
                        
                        
                        for (int y = 0;  y < jTable14.getModel().getRowCount(); y++) {
                            if (jTable14.getModel().getValueAt(y,0) != null){
                                
                                java.sql.PreparedStatement pstmt251y = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                pstmt251y.setObject(1,jTable14.getModel().getValueAt(y,0).toString());
                                pstmt251y.setObject(2,jTable14.getModel().getValueAt(y,2).toString());
                                pstmt251y.setObject(3,jTable14.getModel().getValueAt(y,1).toString());
                                
                                pstmt251y.setString(4,transNo);
                                pstmt251y.setObject(5,jTable14.getModel().getValueAt(y,6).toString());
                                pstmt251y.setString(6,jComboBox1.getSelectedItem().toString());
                                if(jTable14.getModel().getValueAt(y,3) == null){
                                    pstmt251y.setDouble(7,0.00);
                                } else{
                                    pstmt251y.setDouble(7,java.lang.Double.valueOf(jTable14.getModel().getValueAt(y,3).toString()));
                                    
                                }
                                if(jTable14.getModel().getValueAt(y,4) == null){
                                    pstmt251y.setDouble(8,0.00);
                                } else{
                                    pstmt251y.setDouble(8,java.lang.Double.valueOf(jTable14.getModel().getValueAt(y,4).toString()));
                                    
                                }
                                pstmt251y.setString(9,journal);
                                pstmt251y.setObject(10,jTable14.getModel().getValueAt(y,0).toString());
                                pstmt251y.setObject(11,jTable14.getModel().getValueAt(y,5).toString());
                                pstmt251y.setBoolean(12,true);
                                pstmt251y.setString(13,user);
                                pstmt251y.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt251y.setString(15,journal);
                                pstmt251y.setObject(16,jTable14.getModel().getValueAt(y,2).toString());
                                if(jTable14.getModel().getValueAt(y,3) == null){
                                    pstmt251y.setDouble(17,0.00);
                                } else{
                                    pstmt251y.setDouble(17,java.lang.Double.valueOf(jTable14.getModel().getValueAt(y,3).toString()));
                                    
                                }
                                if(jTable14.getModel().getValueAt(y,4) == null){
                                    pstmt251y.setDouble(18,0.00);
                                } else{
                                    pstmt251y.setDouble(18,java.lang.Double.valueOf(jTable14.getModel().getValueAt(y,4).toString()));
                                    
                                }
                                pstmt251y.setString(19,"Journal");
                                pstmt251y.executeUpdate();
                                
                                
                                java.sql.PreparedStatement pstmt2512y = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?,?)");
                                pstmt2512y.setObject(1,jTable14.getModel().getValueAt(y,6).toString());
                                pstmt2512y.setObject(2,jTable14.getModel().getValueAt(y,5).toString());
                                pstmt2512y.setObject(3,jTable14.getModel().getValueAt(y,2).toString());
                                pstmt2512y.setString(4,journal);
                                pstmt2512y.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                if(jTable14.getModel().getValueAt(y,3) == null){
                                    pstmt2512y.setDouble(6,0.00);
                                } else{
                                    pstmt2512y.setDouble(6,java.lang.Double.valueOf(jTable14.getModel().getValueAt(y,3).toString()));
                                }
                                if(jTable14.getModel().getValueAt(y,4) == null){
                                    pstmt2512y.setDouble(7,0.00);
                                } else{
                                    pstmt2512y.setDouble(7,java.lang.Double.valueOf(jTable14.getModel().getValueAt(y,4).toString()));
                                }
                                pstmt2512y.setString(8,user);
                                pstmt2512y.setObject(9,jTable14.getModel().getValueAt(y,0).toString());
                                pstmt2512y.setObject(10,jTable14.getModel().getValueAt(y,1).toString());
                                pstmt2512y.setObject(11,"-");
                                pstmt2512y.executeUpdate();
                            }
                        }
                        
                        for (int q = 0;  q < jTable2.getModel().getRowCount(); q++) {
                            if (jTable2.getModel().getValueAt(q,0) != null){
                                String scheme = null;
                                String cardName = null;
                                String isurer = null;
                                java.sql.Date expDate = null;
                                String staffNo = null;
                                String patientAcc = null;
                                String cardNo = null;
                                String payMod = null;
                                String AccDesc = null;
                                
                                java.sql.Statement stm1pt = connectDB.createStatement();
                                java.sql.ResultSet rse1pt = stm1pt.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no = '"+jTable2.getValueAt(q,0).toString()+"'");
                                while (rse1pt.next()){
                                    payMod = dbObject.getDBObject(rse1pt.getObject(1), "-");
                                    cardNo = dbObject.getDBObject(rse1pt.getObject(2), "-");
                                    scheme = dbObject.getDBObject(rse1pt.getObject(3), "-");
                                    cardName = dbObject.getDBObject(rse1pt.getObject(4), "-");
                                    isurer = dbObject.getDBObject(rse1pt.getObject(5), "-");
                                    expDate = rse1pt.getDate(6);
                                    staffNo = dbObject.getDBObject(rse1pt.getObject(7), "-");
                                    
                                }
                                
                                java.sql.Statement stm12 = connectDB.createStatement();
                                
                                java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                                while (rse12.next()){
                                    
                                    patientAcc = rse12.getObject(1).toString();
                                    AccDesc = rse12.getObject(2).toString();
                                }
                                
                                java.sql.PreparedStatement pstmtpt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmtpt.setObject(1,jTable2.getValueAt(q,0).toString());
                                pstmtpt.setObject(2,jTable2.getValueAt(q,2).toString());
                                pstmtpt.setString(3,"General");
                                pstmtpt.setString(4,payMod);
                                pstmtpt.setString(5,journal);
                                pstmtpt.setString(7,scheme);
                                pstmtpt.setString(6,cardNo);
                                pstmtpt.setString(8,cardName);
                                pstmtpt.setString(9,isurer);
                                pstmtpt.setDate(10,null);
                                pstmtpt.setString(11,"");
                                if(jTable2.getModel().getValueAt(q,3) == null){
                                    pstmtpt.setDouble(12,0.00);
                                } else{
                                    pstmtpt.setDouble(12,java.lang.Double.valueOf(jTable2.getModel().getValueAt(q,3).toString()));
                                    
                                }
                                if(jTable2.getModel().getValueAt(q,4) == null){
                                    pstmtpt.setDouble(13,0.00);
                                } else{
                                    pstmtpt.setDouble(13,java.lang.Double.valueOf(jTable2.getModel().getValueAt(q,4).toString()));
                                    
                                }
                                pstmtpt.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmtpt.setObject(15,patientAcc);
                                pstmtpt.setObject(16,jTable2.getValueAt(q,6).toString());
                                pstmtpt.setDouble(17,1);
                                pstmtpt.setObject(18,staffNo);
                                pstmtpt.setBoolean(19,false);
                                pstmtpt.setString(20,jComboBox1.getSelectedItem().toString());
                                pstmtpt.setBoolean(21,false);
                                pstmtpt.setString(22,AccDesc);
                                pstmtpt.setString(23,"");
                                pstmtpt.setString(24,user);
                                pstmtpt.setString(25,"");
                                pstmtpt.setString(26,"");
                                // pstmtpt.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                // pstmt.setInt(28,visitid);
                                pstmtpt.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt2512yq = connectDB.prepareStatement("insert into ac_journal values(?,?,?,?,?,?,?, ?, ?, ?,?)");
                                pstmt2512yq.setObject(1,jTable2.getModel().getValueAt(q,5).toString());
                                pstmt2512yq.setObject(2,jTable2.getModel().getValueAt(q,6).toString());
                                pstmt2512yq.setObject(3,jTable2.getModel().getValueAt(q,2).toString());
                                pstmt2512yq.setString(4,journal);
                                pstmt2512yq.setDate(5,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                if(jTable2.getModel().getValueAt(q,3) == null){
                                    pstmt2512yq.setDouble(6,0.00);
                                } else{
                                    pstmt2512yq.setDouble(6,java.lang.Double.valueOf(jTable2.getModel().getValueAt(q,3).toString()));
                                }
                                if(jTable14.getModel().getValueAt(q,4) == null){
                                    pstmt2512yq.setDouble(7,0.00);
                                } else{
                                    pstmt2512yq.setDouble(7,java.lang.Double.valueOf(jTable2.getModel().getValueAt(q,4).toString()));
                                }
                                pstmt2512yq.setString(8,user);
                                pstmt2512yq.setObject(9,jTable2.getModel().getValueAt(q,0).toString());
                                pstmt2512yq.setObject(10,jTable2.getModel().getValueAt(q,1).toString());
                                pstmt2512yq.setObject(11,"-");
                                pstmt2512yq.executeUpdate();
                                
                            }
                        }
                        
                        
                        connectDB.commit();
                        connectDB.setAutoCommit(true);
                        
                        javax.swing.JOptionPane.showMessageDialog(this, "Data saved Successfully","Comfirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        for (int s = 0; s < jTable11.getModel().getRowCount(); s++ ) {
                            for (int r = 0; r < jTable11.getModel().getColumnCount(); r++ ) {
                                jTable11.getModel().setValueAt(null,s,r);
                            }
                        }
                        
                        for (int s = 0; s < jTable12.getModel().getRowCount(); s++ ) {
                            for (int r = 0; r < jTable12.getModel().getColumnCount(); r++ ) {
                                jTable12.getModel().setValueAt(null,s,r);
                            }
                        }
                        
                        for (int s = 0; s < jTable13.getModel().getRowCount(); s++ ) {
                            for (int r = 0; r < jTable13.getModel().getColumnCount(); r++ ) {
                                jTable13.getModel().setValueAt(null,s,r);
                            }
                        }
                        
                        for (int s = 0; s < jTable121.getModel().getRowCount(); s++ ) {
                            for (int r = 0; r < jTable121.getModel().getColumnCount(); r++ ) {
                                jTable121.getModel().setValueAt(null,s,r);
                            }
                        }
                        
                        for (int s = 0; s < jTable122.getModel().getRowCount(); s++ ) {
                            for (int r = 0; r < jTable122.getModel().getColumnCount(); r++ ) {
                                jTable122.getModel().setValueAt(null,s,r);
                            }
                        }
                        
                        for (int s = 0; s < jTable1.getModel().getRowCount(); s++ ) {
                            for (int r = 0; r < jTable1.getModel().getColumnCount(); r++ ) {
                                jTable1.getModel().setValueAt(null,s,r);
                            }
                        }
                        jButton1.setEnabled(false);
                    }   catch(java.sql.SQLException sq){
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        
                        try {
                            connectDB.rollback();
                        }catch (java.sql.SQLException sql){
                            javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        ///// jLabel7.setForeground(java.awt.Color.red);
                        // jLabel7.setText("Data not inserted");
                        System.out.println(sq.getMessage());
                    }
                    
                }
                
                
            } catch(java.lang.Exception ex) {
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(ex.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, "Please click on the data entry table(s) and \n press the TAB key once then try saving again." , "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    //private void cmboxActionPerformed(javax.swing.
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked
    
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // jTextField1.setText("");
        //jTextField2.setText("");
        //jTextField3.setText("");
        //  jTextField4.setText("");
        //jTextField12.setText("");// Add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked
    
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked
     public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    
    
    public java.lang.String getCashPoint() {
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()){
                cashPoint = rsetf.getObject(1).toString();
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT cash_point FROM ac_shifts WHERE cash_point = '"+cashPoint+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                cash_no = rset.getString(1);
                
            }
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return cash_no;
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton911;
    private javax.swing.JButton jButton92;
    private javax.swing.JButton jButton93;
    private javax.swing.JButton jButton94;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox51;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog13;
    private javax.swing.JDialog jSearchDialog14;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel13;
    private javax.swing.JPanel jSearchPanel14;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane13;
    private javax.swing.JScrollPane jSearchScrollPane14;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JTable jSearchTable13;
    private javax.swing.JTable jSearchTable14;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable121;
    private javax.swing.JTable jTable122;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable14;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField111111;
    private javax.swing.JTextField jTextField11112;
    private javax.swing.JTextField jTextField11113;
    private javax.swing.JTextField jTextField11114;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField81;
    // End of variables declaration//GEN-END:variables
    
}
