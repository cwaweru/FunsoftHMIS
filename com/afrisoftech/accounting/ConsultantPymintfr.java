/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class ConsultantPymintfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    private  javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private java.lang.String shift_no = null;
    public ConsultantPymintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        jTextField81.setText(System.getProperty("cashpoint"));
        
        jTextField14.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new com.afrisoftech.dbadmin.JTable();
        jButton522 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jList1 = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel422 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField3 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jSeparator1 = new javax.swing.JSeparator();
        jPanel7 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField1111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Cancel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });

        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Payments");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jTextField7.setEditable(false);
        jTextField7.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField7.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        getContentPane().add(jTextField7, gridBagConstraints);

        jTextField8.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField8.setPreferredSize(new java.awt.Dimension(0, 0));
        getContentPane().add(jTextField8, new java.awt.GridBagConstraints());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter payee details"));
        jLabel1.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("GL Account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField11.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField11, gridBagConstraints);

        jLabel9.setText("Paid To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel531.setText("Payment Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel531, gridBagConstraints);

        jTextField31.setText("Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jTextField31, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct payment_mode from pb_paymentmodes ORDER BY payment_mode"));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jComboBox1, gridBagConstraints);

        jLabel6.setText("Payment Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jPanel1.add(jList1, new java.awt.GridBagConstraints());

        jLabel4.setText("Cheque Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField9.setEditable(false);
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel42, gridBagConstraints);

        jTextField1.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField1.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jTextField1, gridBagConstraints);

        jPanel422.setLayout(new java.awt.GridBagLayout());

        jPanel422.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel422.add(jTextField92, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel422.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel422, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = -10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = -50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter payment details here."));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel5.setText("Bank Acct No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jLabel5, gridBagConstraints);

        jLabel51.setText("Account Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jLabel51, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField4, gridBagConstraints);

        jLabel52.setText("Bank Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jLabel52, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField5, gridBagConstraints);

        jComboBox2.setBackground(new java.awt.Color(204, 204, 204));
        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct bank_account_no from ac_banks_setup"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jComboBox2, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("00");
        jTextField3.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField3, gridBagConstraints);

        jLabel53.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jLabel53, gridBagConstraints);

        jLabel12.setText("Net Pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jLabel12, gridBagConstraints);

        jTextField12.setEditable(false);
        jTextField12.setText("00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField12, gridBagConstraints);

        jLabel10.setText("Net Deductions");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jLabel10, gridBagConstraints);

        jTextField10.setEditable(false);
        jTextField10.setText("00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jTextField10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Visit Date", "Patient No", "Patient Name", "Invoice No", "Amt.", "Amt Paid", "Pay ?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 255));
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        jPanel5.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jPanel5, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Deduction Type", "Amount", "Creditor", "Debtor", "Account No", "Gl"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        jPanel9.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel3.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jSeparator1, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('p');
        jButton1.setText("Save & Print");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton1, gridBagConstraints);

        jButton5.setMnemonic('R');
        jButton5.setText("Reprint");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton5, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton4, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton12.setMnemonic('s');
        jButton12.setText("Save");
        jButton12.setToolTipText("Click here enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Payments");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jPanel10.add(jCheckBox1);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Deductions");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jPanel10.add(jCheckBox2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jPanel10, gridBagConstraints);

        jTabbedPane1.addTab("Consultants", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        jLabel3.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel3, gridBagConstraints);

        jTextField81.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTextField81, gridBagConstraints);

        jLabel8.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel8, gridBagConstraints);

        jTextField14.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jTextField14, gridBagConstraints);

        setBounds(0, 0, 697, 511);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed
    
    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        jTextField92.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        
        this.jSearchDialog22.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
    
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        this.jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        cmbox22MouseClicked();        // Add your handling code here:
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void cmbox22MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jTextField92.getLocationOnScreen();
        jSearchDialog22.setSize(400,200);
        jSearchDialog22.setLocation(point);
        jSearchDialog22.setVisible(true);
    }
    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(jTextField1132.getCaretPosition() > 2){
            jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select chq_no FROM pb_documents_register WHERE chq_no  ilike '"+jTextField1132.getText()+"%' and used = 'false' and doc_no = '"+jTextField11.getText()+"' order by chq_no"));
            
            
            jSearchScrollPane22.setViewportView(jSearchTable22);
            System.out.println("Cannot sort out");
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate
    public void tableModelTableChanged2() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double netPay = 0.00;
        double floatDeduct = java.lang.Double.parseDouble(jTextField10.getText());
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            
            if (jTable2.getModel().getValueAt(i, 1) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 1).toString());
                jTextField10.setText(java.lang.String.valueOf(resFloat));
                netPay = floatTotal - resFloat;
                this.jTextField12.setText(java.lang.String.valueOf(netPay));
            }/* else{
                resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 1).toString());
                jTextField10.setText(java.lang.String.valueOf(resFloat));
                netPay = floatTotal - resFloat;
                this.jTextField12.setText(java.lang.String.valueOf(netPay));
            }*/else{
                netPay = floatTotal - floatDeduct;
            }
            
            
        }
        
    }
    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        double resFloat = 0.00;
        double deduction = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField10.getText()).doubleValue();
        double balance = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField3.getText()).doubleValue();
        
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            
            if (jTable2.getModel().getValueAt(i, 0) != null && jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1) != null) {//toString().compareToIgnoreCase(null) {
                
                resFloat = resFloat + Double.parseDouble(jTable2.getValueAt(i, 1).toString());
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable2, 1);
                jTextField10.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                
                jTextField12.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(balance-totalSum));
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable2KeyReleased
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable2.getSelectedRow();
        boolean Gl = false;
        if (selectedGuaran != null) {
            try {
                
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT income FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                
                while (rsetTable1.next()){
                    Gl = rsetTable1.getBoolean(1);
                if(Gl != true){
                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT creditor,acc_no FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                    
                    while (rsetTable11.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable2.setValueAt(rsetTable11.getObject(1), i, 2);
                        jTable2.setValueAt(rsetTable11.getObject(2), i, 4);
                        // jTable11.setValueAt(rsetTable11.getObject(5), i, 5);
                        ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                        
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }else{
                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT creditor,acc_no,gl_code FROM pb_statutory WHERE description = '"+cmbox.getSelectedItem().toString()+"'");
                    
                    while (rsetTable11.next()) {
                        
                        System.out.println("Working at table row "+i);
                        jTable2.setValueAt(rsetTable11.getObject(1), i, 2);
                        jTable2.setValueAt(rsetTable11.getObject(2), i, 4);
                        jTable2.setValueAt(rsetTable11.getObject(3), i, 5);
                        ///  jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                        
                        
                        //                i = i + i;
                        //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    }
                }
                }
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
            
        }
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable2.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable2.getSelectedRow(), 3);
        jTable2.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable2.getSelectedRow(), 4);
        this.jSearchDialog.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() > 2){
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select scheme_name,account_no FROM ac_schemes WHERE scheme_name  ilike '"+jTextField1111.getText()+"%' order by scheme_name"));
            
            
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if (jTable2.getSelectedColumn() == 3) {
            
            this.cmbox1MouseClicked();
        }         // Add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked
    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        this.jPanel9.setVisible(true);
        this.jPanel5.setVisible(false);
        jButton1.setEnabled(true);
        
       /*  for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        */
        //  this.populateTable2(this.jComboBox13.getSelectedItem().toString());
        // Add your handling code here:
        
        cmbox.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct description FROM pb_statutory order by description"));
        javax.swing.table.TableColumn s = this.jTable2.getColumn("Deduction Type");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.jPanel5.setVisible(true);
        this.jPanel9.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        double floatCol21 = 00;
//        double Total = java.lang.Double.parseDouble(this.jTextField3.getText());
        double deduction = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField10.getText()).doubleValue();
        
        //if (jTable1.getSelectedColumn() == 6) {
        if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
            
            
            // if (jTable1.getValueAt(jTable1.getSelectedRow(), 6) != null) {
            if (jTable1.getValueAt(jTable1.getSelectedRow(), 6) != null){
                jTable1.setValueAt(new java.lang.Float(floatCol2), jTable1.getSelectedRow(), 5);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                jTextField12.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum-deduction));
            }
            //}
            
            
        }else{
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.FALSE) {
                
                if (jTable1.getValueAt(jTable1.getSelectedRow(), 6) != null) {
                    jTable1.setValueAt(new java.lang.Float(floatCol21), jTable1.getSelectedRow(), 5);
                    
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 5);
                    jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    jTextField12.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum-deduction));
                    
                }
            }
        }
        //}
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        double resFloat = 0.00;
        //  if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {
        
        //    float floatCol2 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        
        //  float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        
        // float resVal = floatCol3;
        
        
        // jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        
        
        // for (int i = 0; i < jTable1.getRowCount(); i++) {
        
        // if (jTable1.getModel().getValueAt(i, 4) != null) {//toString().compareToIgnoreCase(null) {
        
        //    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
        
        
        // totalSum = floatTotal + resFloat;
        
        // }
        
        this.tableModelTableChanged();
        this.tableModelTableChanged1();
        this.tableModelTableChanged2();
          /*  this.tableModelTableChanged1();
        }else
            if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) == null) {
                jTable1.setValueAt(new java.lang.Double(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()), jTable1.getSelectedRow(), 5);
                this.tableModelTableChanged1();
            }
           */// Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+datePicker11.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker11.getDate().before(periodFrom) || datePicker11.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            if(jTable1.isEditing()){
                jTable1.getCellEditor().stopCellEditing();
            }
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql.toString());
            
            
            java.sql.Connection con;
            try{
                java.sql.Savepoint registerSavePoint = null;
                try {
                    connectDB.setAutoCommit(false);
                    registerSavePoint = connectDB.setSavepoint("registration");
                } catch (java.sql.SQLException ex) {
                    ex.printStackTrace();
                }
                
                
                try {
                    String KRA = null;
                    String Code = null;
                    String vouchNo = null;
                    String user = null;
                    String transNo = null;
                    // String user = null;
                    String actNames1 = null;
                    String actCode1 = null;
                    String actNames11 = null;
                    String actCode11 = null;
                    String invoiceNo = null;
                    String invoiceNo1 = null;
                    // double Deductions = java.lang.Double.parseDouble(jTextField10.getText());;
                    // double Net = java.lang.Double.parseDouble(jTextField3.getText());;
                    double Deductions = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField10.getText()).doubleValue();
                    double Net = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField12.getText()).doubleValue();
                    double Gross = new com.afrisoftech.sys.Format2Number().Format2Number(jTextField3.getText()).doubleValue();
                    
                    
                    java.sql.Statement ps22 = connectDB.createStatement();
                    java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq')::text,5,0::text)");
                    while (rs22.next()){
                        vouchNo = rs22.getObject(1).toString();
                    }
                    java.sql.Statement ps221 = connectDB.createStatement();
                    java.sql.ResultSet rs221 = ps221.executeQuery("select nextval('transaction_no_seq')");
                    while (rs221.next()){
                        transNo = rs221.getObject(1).toString();
                    }
                   /* java.sql.Statement ps222 = connectDB.createStatement();
                    java.sql.ResultSet rs222 = ps222.executeQuery("select supplier_name,code from st_suppliers where category ilike 'KRA%'");
                    while (rs222.next()){
                        KRA = rs222.getObject(1).toString();
                        Code = rs222.getObject(2).toString();
                    }*/
                    java.sql.Statement pss11 = connectDB.createStatement();
                    java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                    while (rsts1.next()){
                        actCode1 = rsts1.getObject(1).toString();
                        actNames1 = rsts1.getObject(2).toString();
                        user = rsts1.getObject(3).toString();
                    }
                    
                    java.sql.Statement pss111 = connectDB.createStatement();
                    java.sql.ResultSet rsts11 = pss111.executeQuery("select code,activity from pb_activity where activity_category = 'WT'");
                    while (rsts11.next()){
                        actCode11 = rsts11.getObject(1).toString();
                        actNames11 = rsts11.getObject(2).toString();
                        
                    }
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_cash_book values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt1.setString(1,jTextField7.getText());
                    pstmt1.setString(6,"");
                    pstmt1.setString(2,jTextField31.getText());
                    pstmt1.setString(3,jTextField9.getText());
                    pstmt1.setString(4,jComboBox1.getSelectedItem().toString());
                    pstmt1.setString(5,vouchNo);
                    pstmt1.setString(7,jTextField9.getText());
                    if (jTextField11.getText().equals("")){
                        javax.swing.JOptionPane.showMessageDialog(this,"Select payment code","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }else{
                        
                        pstmt1.setString(9,jTextField11.getText());
                    }
                    pstmt1.setString(7,"");
                    pstmt1.setString(8,"");
                    pstmt1.setString(11,"");
                    pstmt1.setString(12,"");
                    pstmt1.setString(13,"");
                    pstmt1.setString(10,jTextField92.getText());
                    pstmt1.setString(14,jComboBox2.getSelectedItem().toString());
                    pstmt1.setObject(15,jTextField4.getText());
                    pstmt1.setString(16,jTextField5.getText());
                    pstmt1.setString(17,"Payment");
                    pstmt1.setDouble(18,0.00);
                    pstmt1.setDouble(19,Net);
                    pstmt1.setDate(20,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                    pstmt1.setString(21,transNo);
                    pstmt1.setBoolean(24,false);
                    pstmt1.setBoolean(22,false);
                    pstmt1.setBoolean(23,false);
                    pstmt1.setDate(25,null);
                    pstmt1.setDate(26,null);
                    pstmt1.setDate(27,null);
                    pstmt1.setString(28,user);
                    pstmt1.setObject(29,jTextField81.getText());
                    pstmt1.setString(30,jTextField14.getText());
                     pstmt1.setDate(31,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                    pstmt1.executeUpdate();
                    
                    //    java.sql.PreparedStatement pstmt2126 = connectDB.prepareStatement("UPDATE pb_activity SET ytd_credit = ytd_credit + '"+jTextField3.getText()+"',mtd_credit = mtd_credit + '"+jTextField3.getText()+"' where code = '"+jTextField11.getText()+"'");
                    //    pstmt2126.executeUpdate();
                    
                    java.sql.PreparedStatement pstmta = connectDB.prepareStatement("insert into ac_doctors_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)");
                    pstmta.setObject(1,jTextField1.getText());
                    pstmta.setString(4,transNo);
                    pstmta.setObject(3,jTextField9.getText());
                    pstmta.setString(2,jTextField31.getText());
                    pstmta.setString(5,jTextField7.getText());
                    pstmta.setDouble(7,Net);
                    pstmta.setString(6,"Payment");
                    pstmta.setDouble(8,0.00);
                    pstmta.setString(9,jTextField92.getText());
                    pstmta.setString(10,jTextField1.getText());
                    pstmta.setString(11,actNames1);
                    pstmta.setBoolean(12,true);
                    pstmta.setString(13,user);
                    pstmta.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                    pstmta.setObject(15,vouchNo);
                    pstmta.setObject(16,jTextField9.getText());
                    pstmta.setDouble(17,0.00);
                    pstmta.executeUpdate();
                    
                    
                    java.sql.PreparedStatement pstmta1 = connectDB.prepareStatement("insert into ac_doctors_payments values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                    pstmta1.setDate(1,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                    pstmta1.setObject(2,jTextField1.getText());
                    pstmta1.setObject(3,jTextField9.getText());
                    pstmta1.setString(4,jTextField92.getText());
                    pstmta1.setObject(5,vouchNo);
                    pstmta1.setDouble(6,Gross);
                    pstmta1.setString(8,"Payment");
                    pstmta1.setDouble(7,0.00);
                    pstmta1.setString(9,user);
                    pstmta1.executeUpdate();
                    
                    for (int i = 0; i < jTable1.getRowCount(); i++){
                        //                  if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                        if (jTable1.getModel().getValueAt(i,5) != null){
                            
                            // if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 6).toString()) == java.lang.Boolean.TRUE) {
                            if(java.lang.Double.parseDouble(jTable1.getValueAt(i,5).toString()) != 0 ){
                                
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into dr_allocation values(?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt.setObject(1,jTextField1.getText());
                                pstmt.setObject(3,"Allocation");
                                pstmt.setDate(2,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                pstmt.setObject(4,vouchNo);
                                pstmt.setObject(5,jComboBox1.getToolTipText());
                                if(jTextField92.getText().equals(null) || jTextField92.getText().equals("")){
                                    pstmt.setDouble(6,0.00);
                                }else{
                                    pstmt.setDouble(6,java.lang.Double.valueOf(jTextField92.getText()));
                                }
                                pstmt.setDouble(7,Gross);
                                pstmt.setDouble(8,java.lang.Double.valueOf(jTable1.getValueAt(i,4).toString()));
                                pstmt.setObject(9,jTable1.getValueAt(i,3).toString());
                                pstmt.setObject(10,user);
                                pstmt.setObject(11,jTable1.getValueAt(i,1).toString()+" "+jTable1.getValueAt(i,2).toString());
                                pstmt.setDate(12,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                                pstmt.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt213 = connectDB.prepareStatement("update ac_doctors_ledger set credit_bal = (credit_bal - '"+jTable1.getModel().getValueAt(i,5).toString()+"'),debit_bal=0 where pat_inv ='"+jTable1.getValueAt(i,3).toString()+"' and acc_no = '"+jTextField1.getText()+"' and input_date = '"+jTable1.getValueAt(i,0).toString()+"'");
                                pstmt213.executeUpdate();
                            }
                        }
                    }
                    for (int j = 0; j < jTable2.getRowCount(); j++){
                        if (jTable2.getModel().getValueAt(j,0) != null){
                            java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into ac_doctors_payments values(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                            pstmt11.setDate(1,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                            pstmt11.setObject(2,jTextField1.getText());
                            pstmt11.setObject(3,jTextField9.getText());
                            pstmt11.setString(4,jTextField92.getText());
                            pstmt11.setString(5,vouchNo);
                            pstmt11.setDouble(6,0.00);
                            pstmt11.setDouble(7,java.lang.Double.valueOf(jTable2.getValueAt(j,1).toString()));
                            pstmt11.setObject(8,jTable2.getValueAt(j,0).toString());
                            pstmt11.setString(9,user);
                            pstmt11.executeUpdate();
                            
                            if (jTable2.getModel().getValueAt(j,3) != null){
                                java.sql.Statement ps22c = connectDB.createStatement();
                                java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INV'||lpad(nextval('inv_no_seq')::text,5,0::text)");
                                while (rs22c.next()){
                                    invoiceNo = rs22c.getObject(1).toString();
                                }
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                pstmt.setObject(1,actCode1);
                                pstmt.setString(4,"");
                                pstmt.setObject(2,jTable2.getValueAt(j,3).toString());
                                pstmt.setString(3,jTable2.getValueAt(j,0).toString());
                                pstmt.setObject(5,jTable2.getValueAt(j,3).toString());
                                pstmt.setString(6,"");
                                pstmt.setObject(7,jTable2.getValueAt(j,4).toString());
                                pstmt.setString(8,"");
                                pstmt.setString(9,"");
                                pstmt.setString(10,jTextField92.getText());
                                pstmt.setString(11,transNo);
                                pstmt.setString(12,jTable2.getValueAt(j,0).toString());
                                pstmt.setDouble(13,0.00);
                                pstmt.setDouble(14,java.lang.Double.valueOf(jTable2.getValueAt(j,1).toString()));
                                pstmt.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                pstmt.setString(16,invoiceNo);
                                pstmt.setString(17,actNames1);
                                pstmt.setBoolean(18,true);
                                pstmt.setBoolean(19,true);
                                pstmt.setString(20,user);
                                pstmt.setString(21,"");
                                pstmt.setDouble(22,00);
                                pstmt.setBoolean(23,false);
                                pstmt.setDouble(24,java.lang.Double.valueOf(jTable2.getValueAt(j,1).toString()));
                                pstmt.executeUpdate();
                                
                            }else{
                                
                                if (jTable2.getModel().getValueAt(j,5) != null){
                                    java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt212.setObject(1,jTable2.getValueAt(j,5).toString());
                                    pstmt212.setString(2,jTable2.getValueAt(j,0).toString());
                                    pstmt212.setString(3,"");
                                    pstmt212.setString(4,jTextField9.getText());
                                    pstmt212.setString(5,"Medbill");
                                    pstmt212.setString(6,"");
                                    pstmt212.setString(7,jTextField9.getText());
                                    pstmt212.setString(8,"");
                                    pstmt212.setString(9,"");
                                    pstmt212.setString(10,"");
                                    pstmt212.setString(11,"");
                                    pstmt212.setString(12,"");
                                    pstmt212.setString(13,"");
                                    pstmt212.setString(14,jTable2.getValueAt(j,0).toString());
                                    pstmt212.setString(15,"Revenue");
                                    pstmt212.setDouble(16,0.00);
                                    pstmt212.setDouble(17,java.lang.Double.valueOf(jTable2.getValueAt(j,1).toString()));
                                    pstmt212.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                    pstmt212.setString(19,transNo);
                                    pstmt212.setBoolean(20,false);
                                    pstmt212.setBoolean(21,false);
                                    pstmt212.setBoolean(22,false);
                                    pstmt212.setString(23,user);
                                    pstmt212.setString(24,jTextField14.getText());
                                    pstmt212.setString(25,jTextField81.getText());
                                    pstmt212.executeUpdate();
                                    
                                } else{
                                    if (jTable2.getModel().getValueAt(j,2) != null){
                                        java.sql.Statement ps22c = connectDB.createStatement();
                                        
                                        java.sql.ResultSet rs22c = ps22c.executeQuery("select 'INVD'||lpad(nextval('inv_no_seq')::text,5,0::text)");
                                        while (rs22c.next()){
                                            invoiceNo1 = rs22c.getObject(1).toString();
                                        }
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_accounts_payable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?, ?,?,?,?)");
                                        pstmt.setObject(1,actCode11);
                                        pstmt.setString(4,"");
                                        pstmt.setObject(3,jTable2.getValueAt(j,0).toString());
                                        pstmt.setString(2,jTable2.getValueAt(j,2).toString());
                                        pstmt.setString(5,jTextField9.getText());
                                        pstmt.setString(6,jTextField31.getText());
                                        pstmt.setString(7,jTable2.getValueAt(j,4).toString());
                                        pstmt.setString(8,"");
                                        pstmt.setString(9,jTextField11.getText());
                                        pstmt.setString(10,"");
                                        pstmt.setString(11,transNo);
                                        pstmt.setString(12,jTable2.getValueAt(j,0).toString());
                                        pstmt.setDouble(14,java.lang.Double.valueOf(jTable2.getValueAt(j,1).toString()));
                                        pstmt.setDouble(13,0.00);
                                        pstmt.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt.setObject(17,jTable2.getValueAt(j,0).toString());
                                        pstmt.setString(16,invoiceNo1);
                                        pstmt.setBoolean(18,false);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,user);
                                        pstmt.setString(21,"");
                                        pstmt.setDate(22,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt.setDate(23,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt.setDouble(24,0.00);
                                        pstmt.setDouble(25,java.lang.Double.valueOf(jTable2.getValueAt(j,1).toString()));
                                        pstmt.executeUpdate();
                                        
                                        java.sql.PreparedStatement pstmtaq = connectDB.prepareStatement("insert into ac_doctors_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)");
                                        pstmtaq.setObject(1,jTextField1.getText());
                                        pstmtaq.setObject(2,jTable2.getValueAt(j,0).toString());
                                        pstmtaq.setObject(3,jTextField9.getText());
                                        pstmtaq.setString(4,transNo);
                                        pstmtaq.setString(5,jTextField7.getText());
                                        pstmtaq.setString(6,"Payment");
                                        pstmtaq.setDouble(7,java.lang.Double.valueOf(jTable2.getValueAt(j,1).toString()));
                                        pstmtaq.setDouble(8,0.00);
                                        pstmtaq.setString(9,jTextField92.getText());
                                        pstmtaq.setString(10,jTextField1.getText());
                                        pstmtaq.setString(11,actNames1);
                                        pstmtaq.setBoolean(12,true);
                                        pstmtaq.setString(13,user);
                                        pstmtaq.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmtaq.setObject(15,vouchNo);
                                        pstmtaq.setObject(16,jTextField9.getText());
                                        pstmtaq.setDouble(17,0.00);
                                        pstmtaq.executeUpdate();
                                        
                                    }
                                }
                                
                            }
                        }else{
                        }
                    }
                    java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("update pb_documents_register set used ='true' where chq_no ='"+jTextField92.getText()+"' and doc_no = '"+jTextField11.getText()+"'");
                    pstmt2a.executeUpdate();
                    
                    
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Voucher No is '"+vouchNo+"'","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                    jTextField92.setText("");
                    jTextField3.setText("");
                    jTextField11.setText("");
                    jTextField4.setText("");
                    jTextField31.setText("");
                    this.jComboBox1.setSelectedItem(null);
                    jTextField5.setText("");
                    
                    jButton1.setEnabled(false);
                    jButton12.setEnabled(false);
                    
                }   catch(java.sql.SQLException sq){
                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    try {
                        connectDB.rollback(registerSavePoint);
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    jLabel7.setForeground(java.awt.Color.red);
                    jLabel7.setText("Sorry. Please Check The Fields");
                }
                
            } catch(java.lang.Exception ex) {
                System.out.println(ex.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                
            }
        }
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String vouchNo = null;
        try {
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(currval('voucher_no_seq')::text,5,0::text)");
            while (rs22.next())
                vouchNo = rs22.getObject(1).toString();
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        com.afrisoftech.reports.DoctorsVouchDetPdf policy = new com.afrisoftech.reports.DoctorsVouchDetPdf();
        policy.DoctorsVouchDetPdf(connectDB,vouchNo,true);  // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        this.jSearchDialog2.dispose();
        jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        
        //  this.populateTable1(jTextField9.getText());
        this.jSearchDialog2.dispose();
        
        jLabel7.setText("");
        jTextField3.setText("0.00");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jButton1.setEnabled(true);
        this.jButton12.setEnabled(true);
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select gl_acc,sum(debit_bal),acc_desc,acc_desc from ac_doctors_ledger where acc_no ='"+this.jTextField1.getText()+"' AND paid = true  GROUP BY gl_acc,acc_desc");
            while (rset.next()){
                jTextField7.setText(rset.getObject(1).toString());
                //jTextField3.setText(rset.getObject(2).toString());
                jTextField31.setText(rset.getObject(3).toString());
                jTextField8.setText(rset.getObject(4).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            
        }
        this.populateTable11(this.jTextField1.getText());
        // Add your handling code here:
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jTextField113.getCaretPosition() < 3){
            System.out.print("Nothing");
        }else{
            if(this.jTextField113.getCaretPosition() < 3){
                System.out.print("Nothing");
            }else{
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT first_name||' '||middle_name as name,staff_no FROM pb_doctors_list WHERE first_name ILIKE '"+jTextField113.getText()+"%' ORDER BY first_name||' '||middle_name"));
                
                
                jSearchScrollPane2.setViewportView(jSearchTable2);
                System.out.println("Cannot sort out");
                
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
        jButton1.setEnabled(true);
        jButton12.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.setVisible(true);
    }    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
 
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_name,gl_code,bank_name from ac_banks_setup where bank_account_no ='"+jComboBox2.getSelectedItem().toString()+"'");
            while (rset1.next()){
                jTextField4.setText(rset1.getObject(1).toString());
                jTextField11.setText(rset1.getObject(2).toString());
                jTextField5.setText(rset1.getObject(3).toString());
                
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }         // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
 /*       try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select gl_account,description,account from ac_cash_points where payment_code ='"+jComboBox1.getSelectedItem()+"'");
            while (rset.next()){
                jTextField11.setText(rset.getObject(1).toString());
                jTextField9.setText(rset.getObject(2).toString());
                jTextField4.setText(rset.getObject(3).toString());
  
            }
  
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt.executeQuery("select bank_account_no,bank_name from ac_banks_setup where bank_account_name ='"+jTextField4.getText()+"'");
            while (rset1.next()){
                jTextField1.setText(rset1.getObject(1).toString());
                jTextField5.setText(rset1.getObject(2).toString());
  
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        } */       // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    private void populateTable11(java.lang.String patient_no) {
        
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(acc_no) FROM ac_doctors_ledger WHERE acc_no = '"+patient_no+"' and paid = true");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery("SELECT input_date::date,input_date::date,patient_name, patient_no, pat_inv,credit_bal::numeric,null as boolean FROM ac_doctors_ledger WHERE acc_no = '"+patient_no+"' and credit_bal > 0 and paid = true order by input_date");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
                java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery("SELECT input_date as date,patient_name, patient_no, pat_inv,sum(credit_bal-debit_bal)::numeric,null as numeric,null::boolean as boolean FROM ac_doctors_ledger WHERE acc_no = '"+patient_no+"' and  paid = true and credit_bal != 0 group by patient_name, patient_no, pat_inv,input_date order by pat_inv desc");// and revenue_code = '"+jTextField5.getText()+"' AND paid = false");
                
                while (rsetTable11.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable11.getObject(2), i, 2);
                    jTable1.setValueAt(rsetTable11.getObject(3), i, 1);
                    jTable1.setValueAt(rsetTable11.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable11.getObject(5), i, 4);
                    jTable1.setValueAt(rsetTable11.getObject(6), i, 5);
                    jTable1.setValueAt(rsetTable11.getObject(7), i, 6);
                    
                    i++;
                    
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }
    
    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        jTextField92.setText("");
        jTextField3.setText("");
        jTextField11.setText("");
        jTextField4.setText("");
        jTextField31.setText("");
        //        jTextField9.setText("");
        
        jTextField5.setText("");
        this.jComboBox1.setSelectedItem(null);
        this.jTextField9.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql.toString());
        
        
        java.sql.Connection con;
        String KRA = null;
        String Code = null;
        String vouchNo = null;
        String user = null;
        String transNo = null;
        // String user = null;
        String actNames1 = null;
        String actCode1 = null;
        String invoiceNo = null;
        String invoiceNo1 = null;
//        double Deductions = java.lang.Double.parseDouble(jTextField10.getText());;
//        double Net = java.lang.Double.parseDouble(jTextField3.getText());;
        
        
        try {
            jButton12ActionPerformed(evt);
            // if(Deductions > Net){
            //  javax.swing.JOptionPane.showMessageDialog(this,"Deductions MORE THAN The Earnings","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            // }else{
            // connectDB.setAutoCommit(false);
            
            
            java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(currval('voucher_no_seq')::text,5,0::text)");
            while (rs22.next()){
                vouchNo = rs22.getObject(1).toString();
            }
            
            com.afrisoftech.reports.DoctorsVouchDetPdf policy = new com.afrisoftech.reports.DoctorsVouchDetPdf();
            policy.DoctorsVouchDetPdf(connectDB,vouchNo,true);
            
            jTextField92.setText("");
            jTextField3.setText("");
            jTextField11.setText("");
            jTextField4.setText("");
            jTextField31.setText("");
            this.jComboBox1.setSelectedItem(null);
            jTextField5.setText("");
            //            jTextField9.setText("");
            //  crset1.execute();
            jButton1.setEnabled(false);
            jButton12.setEnabled(false);
            // }
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            jLabel7.setForeground(java.awt.Color.red);
            jLabel7.setText("Sorry. Please Check The Fields");
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 12 and 21.");
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double total = java.lang.Double.parseDouble(jTextField3.getText());;
        
        int i = this.jTable1.getSelectedRow();
        // for (int i = 0; i < jTable1.getRowCount(); i++) {
        
        if (jTable1.getModel().getValueAt(i, 4) != null) {
            
            // if (jTable1.getSelectedColumn() == 1) {
            
            resFloat1 = total + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
            
            //   }
            
            
            
        }//else
        
        jTextField3.setText(java.lang.String.valueOf(resFloat1));
        //    if (jTable1.getSelectedColumn() == 4) {
        
        //   resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i,3).toString());
        //    }
        //   jTextField3.setText(java.lang.String.valueOf(resFloat1));
        
        
        // }
        // }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    public void tableModelTableChanged() {
        int i = this.jTable1.getSelectedRow();
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double total = java.lang.Double.parseDouble(jTextField3.getText());;
        // for (int i = 0; i < jTable1.getRowCount(); i++) {
        
        if (jTable1.getModel().getValueAt(i, 4) == null) {
            
            //if (jTable1.getSelectedColumn() == 1) {
            
            resFloat1 = total - Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
            
            // }
            
            jTextField3.setText(java.lang.String.valueOf(resFloat1));
            
            // }else
            //  if (jTable11.getSelectedColumn() == 4) {
            
            resFloat1 = total - Double.parseDouble(jTable1.getModel().getValueAt(i,3).toString());
            //  }
            jTextField3.setText(java.lang.String.valueOf(resFloat1));
            
            //}
            //}
            
            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker11;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel422;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton2;
    // End of variables declaration//GEN-END:variables
    
}
