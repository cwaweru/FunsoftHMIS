/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TotalShiftsIntfr.java
 *
 * Created on 10-Jul-2009, 12:51:24
 */
package com.afrisoftech.accounting;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Charles Waweru
 */
public class TotalShiftsIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    double Rct = 0.00;
    double Cash = 0.00;
    double Cheque = 0.00;
    double Eft = 0.00;
    double Chq = 0.00;
    double Card = 0.00;
    double Refund = 0.00;
    double Net = 0.00;
    double Total = 0.00;
    double dCash = 0.00;
    private double mCash = 0.00;
    com.afrisoftech.lib.DBObject dbObject;

    /**
     * Creates new form TotalShiftsIntfr
     */
    public TotalShiftsIntfr(java.sql.Connection connDb) {

        connectDB = connDb;


        initComponents();

        dbObject = new com.afrisoftech.lib.DBObject();

        GetShiftTotals shiftTotalsThread = new GetShiftTotals();

        shiftTotalsThread.start();



        this.setSize(com.afrisoftech.hospital.HospitalMain.saccopn.getSize());


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        datesPanel = new javax.swing.JPanel();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        beginDateLbl = new javax.swing.JLabel();
        endDatePanel = new javax.swing.JLabel();
        beginDatePicker = new com.afrisoftech.lib.DatePicker();
        mainPanel = new javax.swing.JPanel();
        shiftTotalsJscrl = new javax.swing.JScrollPane();
        shiftTotalsTable = new com.afrisoftech.dbadmin.JTable();
        shiftsTotalAmountLbl = new javax.swing.JLabel();
        shiftsTotalAmountTxt = new javax.swing.JFormattedTextField();
        totalcashLbl = new javax.swing.JLabel();
        totalChequesLbl = new javax.swing.JLabel();
        totalEftLbl = new javax.swing.JLabel();
        totalCashTxt = new javax.swing.JFormattedTextField();
        totalChequesTxt = new javax.swing.JFormattedTextField();
        totalEFTTxt = new javax.swing.JFormattedTextField();
        totalRefundsLbl = new javax.swing.JLabel();
        totalRefundsTxt = new javax.swing.JFormattedTextField();
        totalChequesLbl1 = new javax.swing.JLabel();
        totalChequesTxt1 = new javax.swing.JFormattedTextField();
        totalEftLbl1 = new javax.swing.JLabel();
        totalEFTTxt1 = new javax.swing.JFormattedTextField();
        totalMPayLbl = new javax.swing.JLabel();
        totalMPayTxt = new javax.swing.JFormattedTextField();
        actionsPanel = new javax.swing.JPanel();
        reconcilemnit = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Total Shifts Report");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        datesPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        datesPanel.add(endDatePicker, gridBagConstraints);

        beginDateLbl.setText("Begin Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        datesPanel.add(beginDateLbl, gridBagConstraints);

        endDatePanel.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        datesPanel.add(endDatePanel, gridBagConstraints);

        beginDatePicker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                beginDatePickerMouseClicked(evt);
            }
        });
        beginDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                beginDatePickerPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        datesPanel.add(beginDatePicker, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(datesPanel, gridBagConstraints);

        mainPanel.setLayout(new java.awt.GridBagLayout());

        shiftTotalsJscrl.setBorder(javax.swing.BorderFactory.createTitledBorder("Shift totals table"));

        shiftTotalsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        shiftTotalsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shiftTotalsTableMouseClicked(evt);
            }
        });
        shiftTotalsJscrl.setViewportView(shiftTotalsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1000.0;
        mainPanel.add(shiftTotalsJscrl, gridBagConstraints);

        shiftsTotalAmountLbl.setText("Net Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(shiftsTotalAmountLbl, gridBagConstraints);

        shiftsTotalAmountTxt.setEditable(false);
        shiftsTotalAmountTxt.setForeground(new java.awt.Color(0, 0, 204));
        shiftsTotalAmountTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("造造#,##0.00"))));
        shiftsTotalAmountTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        shiftsTotalAmountTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        shiftsTotalAmountTxt.setMinimumSize(new java.awt.Dimension(50, 20));
        shiftsTotalAmountTxt.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(shiftsTotalAmountTxt, gridBagConstraints);

        totalcashLbl.setText("Total (Cash)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalcashLbl, gridBagConstraints);

        totalChequesLbl.setText("Total (Exemptions)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalChequesLbl, gridBagConstraints);

        totalEftLbl.setText("Total (Credit)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalEftLbl, gridBagConstraints);

        totalCashTxt.setEditable(false);
        totalCashTxt.setForeground(new java.awt.Color(0, 51, 204));
        totalCashTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("造造#,##0.00"))));
        totalCashTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalCashTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        totalCashTxt.setMinimumSize(new java.awt.Dimension(50, 20));
        totalCashTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalCashTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalCashTxt, gridBagConstraints);

        totalChequesTxt.setEditable(false);
        totalChequesTxt.setForeground(new java.awt.Color(0, 0, 204));
        totalChequesTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("造造#,##0.00"))));
        totalChequesTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalChequesTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        totalChequesTxt.setMinimumSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalChequesTxt, gridBagConstraints);

        totalEFTTxt.setEditable(false);
        totalEFTTxt.setForeground(new java.awt.Color(0, 0, 204));
        totalEFTTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("造造#,##0.00"))));
        totalEFTTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalEFTTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        totalEFTTxt.setMinimumSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalEFTTxt, gridBagConstraints);

        totalRefundsLbl.setText("Total Refunds");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalRefundsLbl, gridBagConstraints);

        totalRefundsTxt.setEditable(false);
        totalRefundsTxt.setForeground(new java.awt.Color(255, 0, 0));
        totalRefundsTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("造造#,##0"))));
        totalRefundsTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalRefundsTxt.setFont(new java.awt.Font("Trebuchet MS", 3, 11)); // NOI18N
        totalRefundsTxt.setMinimumSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalRefundsTxt, gridBagConstraints);

        totalChequesLbl1.setText("Total (Chq)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalChequesLbl1, gridBagConstraints);

        totalChequesTxt1.setEditable(false);
        totalChequesTxt1.setForeground(new java.awt.Color(0, 0, 204));
        totalChequesTxt1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("造造#,##0.00"))));
        totalChequesTxt1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalChequesTxt1.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        totalChequesTxt1.setMinimumSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalChequesTxt1, gridBagConstraints);

        totalEftLbl1.setText("Total (Eft)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalEftLbl1, gridBagConstraints);

        totalEFTTxt1.setEditable(false);
        totalEFTTxt1.setForeground(new java.awt.Color(0, 0, 204));
        totalEFTTxt1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("造造#,##0.00"))));
        totalEFTTxt1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalEFTTxt1.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        totalEFTTxt1.setMinimumSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalEFTTxt1, gridBagConstraints);

        totalMPayLbl.setText("Total Mobile/Pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalMPayLbl, gridBagConstraints);

        totalMPayTxt.setEditable(false);
        totalMPayTxt.setMinimumSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(totalMPayTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1000.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        actionsPanel.setLayout(new java.awt.GridBagLayout());

        reconcilemnit.setText("Reconcile shift(s)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(reconcilemnit, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1000.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(spacerLbl, gridBagConstraints);

        refreshBtn.setText("Refresh report");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(refreshBtn, gridBagConstraints);

        jButton3.setText("Close form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(actionsPanel, gridBagConstraints);

        setBounds(0, 0, 839, 369);
    }// </editor-fold>//GEN-END:initComponents

    private void shiftTotalsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shiftTotalsTableMouseClicked
        int confirm = javax.swing.JOptionPane.showConfirmDialog(this, "Terminate shift number : [" + shiftTotalsTable.getValueAt(shiftTotalsTable.getSelectedRow(), 1) + "] for Cashier : [" + shiftTotalsTable.getValueAt(shiftTotalsTable.getSelectedRow(), 2) + "]", "CLOSE SHIFT", javax.swing.JOptionPane.OK_CANCEL_OPTION);
        if (confirm == javax.swing.JOptionPane.OK_OPTION) {
            try {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_shifts set status = 'Closed', end_date = now()::timestamp(0) WHERE shift_no = ?");

                pstmt.setString(1, shiftTotalsTable.getValueAt(shiftTotalsTable.getSelectedRow(), 1).toString());

                pstmt.executeUpdate();
                // TODO add your handling code here:
            } catch (SQLException ex) {
                ex.printStackTrace();
                Logger.getLogger(TotalShiftsIntfr.class.getName()).log(Level.SEVERE, null, ex);
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_shiftTotalsTableMouseClicked

    private void beginDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_beginDatePickerPropertyChange

        System.out.println("Property is working ...");
        // TODO add your handling code here:
    }//GEN-LAST:event_beginDatePickerPropertyChange

    private void beginDatePickerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_beginDatePickerMouseClicked

        System.out.println("Property is working ...");
        // TODO add your handling code here:
    }//GEN-LAST:event_beginDatePickerMouseClicked

    private void totalCashTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalCashTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalCashTxtActionPerformed

    public class GetShiftTotals extends java.lang.Thread {

        public void GetShiftTotals() {
        }

        public synchronized void run() {

            while (true) {

                shiftTotalsJscrl.setViewportView(getTotalShiftsTable());
                if (shiftTotalsTable.getRowCount() > 0) {
                    totalCashTxt.setText(java.lang.String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 5))));
                    totalChequesTxt1.setText(java.lang.String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 6))));
                    totalEFTTxt1.setText(java.lang.String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 8)));
                    //   totalMPayTxt.setText(java.lang.String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 9)));
                    totalChequesTxt.setText(java.lang.String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 9))));
                    totalEFTTxt.setText(java.lang.String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 10))));
                    totalRefundsTxt.setText(java.lang.String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 11))));
                    shiftsTotalAmountTxt.setText(java.lang.String.valueOf(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(shiftTotalsTable, 12) + getMobilePay())));
                }
                try {
                    Thread.sleep(10000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(TotalShiftsIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }

    private javax.swing.JTable getTotalShiftsTable() {

        //   javax.swing.JTable shiftTotalsTable = new javax.swing.JTable();

        int horizontalAlignments[] = {biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_RIGHT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_RIGHT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_RIGHT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_RIGHT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_RIGHT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_RIGHT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_RIGHT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT,
            biz.systempartners.txtreports.Phrase.HORIZONTAL_ALIGNMENT_LEFT};

        //    double floats[] = {5, 5, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10};

        //   int colSizes[] = textReport.createTableHeader(13, floats);

        biz.systempartners.txtreports.PlainTextTable table = new biz.systempartners.txtreports.PlainTextTable(16);

        //    com.afrisoftech.lib.DBObject dbObject = new com.afrisoftech.lib.DBObject();


        java.util.Vector columnVector = new java.util.Vector(1, 1);

        //  Phrase phrase = new Phrase("No", pFontHeader);
        columnVector.addElement("Index");
        //  table.addCell(phrase);
        columnVector.addElement("Shift No.");

        columnVector.addElement("Cashier");//, pFontHeader);
        //  table.addCell(phrase);

        columnVector.addElement("Cash Point");//, pFontHeader);

        columnVector.addElement("Receipts");//, pFontHeader);
        //  table.addCell(phrase);

        //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_RIGHT);

        columnVector.addElement("Cash");//, pFontHeader);
        //  table.addCell(phrase);

        columnVector.addElement("Cheque");

        columnVector.addElement("D/Banking");

        columnVector.addElement("E.F.T");

        //    columnVector.addElement("Mobile/Pay");

        columnVector.addElement("Exemptions");//, pFontHeader);
        //  table.addCell(phrase);


        columnVector.addElement("Credit");//, pFontHeader); // was Waiver
        // table.addCell(phrase);

        columnVector.addElement("Refund");//, pFontHeader);
        // table.addCell(phrase);

        columnVector.addElement("Net Amt(KSH)");//, pFontHeader);
        // table.addCell(phrase);

        //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);

        columnVector.addElement("Start Date");//, pFontHeader);

        //  table.addCell(phrase);

        columnVector.addElement("End Date");//, pFontHeader);

        //  table.addCell(phrase);

        columnVector.addElement("Status");//, pFontHeader);

        //  table.addCell(phrase);

        //   columnVector.addElement("Reconcile");// pFontHeader);


        try {

            java.lang.Object[] listofAct = this.getListofStaffNos();


            System.out.println(listofAct.length);
            //java.sql.Statement st12 = connectDB.createStatement();

            //  java.sql.ResultSet rset12 = st12.executeQuery("SELECT DISTINCT count(patient_no) FROM hp_admission WHERE discharge = false");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");

            for (int i = 0; i < listofAct.length; i++) {

                java.sql.Statement st1 = connectDB.createStatement();

                java.sql.Statement st2 = connectDB.createStatement();
                java.sql.Statement st21 = connectDB.createStatement();
                // java.sql.Statement st1 = connectDB.createStatement();

                java.sql.Statement st11 = connectDB.createStatement();
                java.sql.Statement st12 = connectDB.createStatement();
                java.sql.Statement st13 = connectDB.createStatement();

                java.sql.Statement st14 = connectDB.createStatement();
                java.sql.Statement st15 = connectDB.createStatement();


                java.sql.Statement st16 = connectDB.createStatement();
                java.sql.Statement st17 = connectDB.createStatement();
                java.sql.Statement st18 = connectDB.createStatement();
                java.sql.Statement st22 = connectDB.createStatement();


                // java.sql.ResultSet rset12 = st12.executeQuery("select count(ad.patient_no) from hp_admission ad where ad.patient_no ='"+listofAct[i]+"' ORDER BY patient_no DESC LIMIT 1");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");

                //java.sql.ResultSet rset1 = st.executeQuery("select ad.date_admitted,ad.patient_no,ad.patient_name,ad.ward,ad.bed_no,ad.mode_of_payment,sum(pc.credit),sum(pc.debit) from hp_admission ad,hp_patient_card pc where ad.discharge =false and pc.patient_no = ad.patient_no and pc.date >= ad.date_admitted group by ad.date_admitted,ad.mode_of_payment,ad.patient_no,ad.patient_name,ad.ward,ad.bed_no");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset1 = st1.executeQuery("select sum(debit-credit) from ac_cash_collection where shift_no ='" + listofAct[i] + "' and payment_mode = 'Cash'");// and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset17 = st17.executeQuery("select sum(debit-credit) from ac_cash_collection where shift_no ='" + listofAct[i] + "' and payment_mode = 'Cheque'");// and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset18 = st18.executeQuery("select sum(debit-credit) from ac_cash_collection where shift_no ='" + listofAct[i] + "' and payment_mode = 'Eft'");// and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset22 = st22.executeQuery("select sum(debit-credit) from ac_cash_collection where shift_no ='" + listofAct[i] + "' AND (payment_mode ILIKE 'DBA' OR payment_mode ILIKE '%DIRECT BANKING%')");;// and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset11 = st11.executeQuery("select shift_no,upper(user_name), upper(cash_point) from ac_shifts where shift_no ='" + listofAct[i] + "'");// and start_date::date > '"+beginDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset21 = st21.executeQuery("select count(DISTINCT receipt_no) from ac_cash_collection  where shift_no ='" + listofAct[i] + "'");//and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset12 = st12.executeQuery("select sum(credit-debit) from ac_cash_collection where shift_no ='" + listofAct[i] + "' AND transaction_type = 'Exemptions'");//and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset13 = st13.executeQuery("select sum(credit-debit) from ac_cash_collection where shift_no ='" + listofAct[i] + "' AND transaction_type = 'Waiver'");// and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset14 = st14.executeQuery("select start_date::date,end_date::date,status from ac_shifts where shift_no ='" + listofAct[i] + "' ");// and start_date::date > '"+beginDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset15 = st15.executeQuery("select sum(credit) from ac_cash_collection where shift_no ='" + listofAct[i] + "'  AND transaction_type = 'RECEIPT CANCELLATION'");//and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");
                java.sql.ResultSet rset16 = st16.executeQuery("select sum(debit - credit) from ac_cash_collection where shift_no ='" + listofAct[i] + "'");// and date between '"+beginDate+"'::date and  '"+endDate+"'");// tn,debit_note db WHERE tn.policy_no != '' and tn.policy_no = db.policy_no GROUP BY tn.policy_no,db.policy_class");

                // java.sql.ResultSet rsetTotals = st2.executeQuery("SELECT sum(debit),SUM(credit) from general_ledger_view WHERE date::date BETWEEN '"+beginDate+"' AND '"+endDate+"' AND gl_code = '"+bank+"'");

                int noSeq = 0;

                while (rset11.next()) {

                    noSeq = noSeq + 1;
                    //  phrase = new Phrase(java.lang.String.valueOf(noSeq), pFontNum);
                    table.addCell(java.lang.String.valueOf(i + 1));

                    // table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset11.getObject(1), "-"), pFontNum);

                    table.addCell(dbObject.getDBObject(rset11.getObject(1), "-"));

                    // table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset11.getObject(2), "-"), pFontNum);

                    table.addCell(dbObject.getDBObject(rset11.getObject(2), "-"));
                    table.addCell(dbObject.getDBObject(rset11.getObject(3), "-"));
                }

                while (rset21.next()) {
                    // table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_RIGHT);
                    // phrase = new Phrase(dbObject.getDBObject(rset21.getObject(1), "0"), pFontNum);
                    Rct = Rct + rset21.getDouble(1);
                    table.addCell(dbObject.getDBObject(rset21.getObject(1), "0"));
                }


                // table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_RIGHT);

                while (rset1.next()) {
                    //table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset1.getObject(1), "0.00"), pFontNum);
                    Cash = Cash + rset1.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset1.getObject(1), "0.00")));
                }

                while (rset17.next()) {
                    //table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset1.getObject(1), "0.00"), pFontNum);
                    Cheque = Cheque + rset17.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset17.getObject(1), "0.00")));
                }

                while (rset22.next()) {
                    //table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset1.getObject(1), "0.00"), pFontNum);
                    dCash = dCash + rset22.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset22.getObject(1), "0.00")));
                }


                while (rset18.next()) {
                    //table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset1.getObject(1), "0.00"), pFontNum);
                    Eft = Eft + rset18.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset18.getObject(1), "0.00")));
                }



                while (rset12.next()) {
                    //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset12.getObject(1), "0.0"), pFontNum);
                    Chq = Chq + rset12.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset12.getObject(1), "0.0")));

                }

                while (rset13.next()) {
                    //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset13.getObject(1), "0.0"), pFontNum);
                    Card = Card + rset13.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset13.getObject(1), "0.0")));
                }
                while (rset15.next()) {
                    //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    //phrase = new Phrase(dbObject.getDBObject(rset15.getObject(1), "0.0"), pFontNum);
                    Refund = Refund + rset15.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset15.getObject(1), "0.0")));
                }
                while (rset16.next()) {
                    //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset16.getObject(1), "0.0"), pFontNum);
                    Net = Net + rset16.getDouble(1);
                    table.addCell(Double.parseDouble(dbObject.getDBObject(rset16.getObject(1), "0.0")));
                }
                while (rset14.next()) {
                    // table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset14.getObject(1), "-"), pFontNum);

                    table.addCell(dbObject.getDBObject(rset14.getObject(1), "-"));

                    // table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset14.getObject(2), "-"), pFontNum);

                    table.addCell(dbObject.getDBObject(rset14.getObject(2), "-"));

                    // table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                    // phrase = new Phrase(dbObject.getDBObject(rset14.getObject(3), "-"), pFontNum);

                    table.addCell(dbObject.getDBObject(rset14.getObject(3), "-"));
                }

                rset1.close();
                rset11.close();
                rset21.close();
                rset12.close();
                rset13.close();
                rset14.close();
                rset15.close();
                rset16.close();
                rset22.close();
                rset17.close();
                rset18.close();
                st1.close();
                st11.close();
                st21.close();
                st12.close();
                st13.close();
                st14.close();
                st15.close();
                st16.close();
                st22.close();
                st17.close();
                st18.close();




            }

            // table.getDefaultCell().setBorderColor(java.awt.Color.BLACK);

            //  table.getDefaultCell().setBorder(Rectangle.BOTTOM | Rectangle.TOP);

            //  table.getDefaultCell().setColspan(3);

            //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
            //  phrase = new Phrase("Total", pFontHeader);

            table.addCell(java.lang.String.valueOf(Total));

            //  table.getDefaultCell().setColspan(1);

            //   table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_RIGHT);
            //   phrase = new Phrase("" + Rct, pFontHeader);

            table.addCell(java.lang.String.valueOf(Rct));

            //   phrase = new Phrase(new com.afrisoftech.sys.Format2Currency().Format2Currency(java.lang.String.valueOf(Cash)), pFontHeader);

            table.addCell(java.lang.String.valueOf(Cash));

            table.addCell(java.lang.String.valueOf(Cheque));

            table.addCell(java.lang.String.valueOf(dCash));



            table.addCell(java.lang.String.valueOf(Eft));
            //   phrase = new Phrase(new com.afrisoftech.sys.Format2Currency().Format2Currency(java.lang.String.valueOf(Chq)), pFontHeader);

            //    table.addCell(java.lang.String.valueOf(mCash));

            table.addCell(java.lang.String.valueOf(Chq));
            //  phrase = new Phrase(new com.afrisoftech.sys.Format2Currency().Format2Currency(java.lang.String.valueOf(Card)), pFontHeader);

            table.addCell(java.lang.String.valueOf(Card));

            //  phrase = new Phrase(new com.afrisoftech.sys.Format2Currency().Format2Currency(java.lang.String.valueOf(Refund)), pFontHeader);

            table.addCell(java.lang.String.valueOf(Refund));
            // phrase = new Phrase(new com.afrisoftech.sys.Format2Currency().Format2Currency(java.lang.String.valueOf(Net)), pFontHeader);

            table.addCell(java.lang.String.valueOf(Net));

            //  table.getDefaultCell().setColspan(3);

            //  table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
            //  phrase = new Phrase(" ", pFontHeader);

            //  table.addCell(phrase);
            //  docPdf.add(table);

            shiftTotalsTable = new com.afrisoftech.dbadmin.JTable(); //new javax.swing.JTable();//table.getDataVector(), columnVector);

            shiftTotalsTable.setModel(new javax.swing.table.DefaultTableModel(table.getDataVector(), columnVector) {

                Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class,
                    java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class,
                    java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class,
                    java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false, false, false, false, false, false,
                    false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

            shiftTotalsTable.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    //shiftTotalsTableMouseClicked(evt);
                    closeShift();
                }
            });

            javax.swing.table.TableColumn column1 = null;
            for (int i = 0; i < 4; i++) {
                column1 = shiftTotalsTable.getColumnModel().getColumn(i);
                if (i == 2 | i == 3) {

                    column1.setPreferredWidth(200); //sport column is bigger
                } else if(i == 0 | i == 1 | i == 4) {

                    column1.setPreferredWidth(50);


                } else {
                   
                    column1.setPreferredWidth(100);
                }
            }

        } catch (java.sql.SQLException SqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), SqlExec.getMessage());

        }

        return shiftTotalsTable;

    }

    public java.lang.Object[] getListofStaffNos() {

        java.lang.Object[] listofStaffNos = null;

        java.util.Vector listStaffNoVector = new java.util.Vector(1, 1);


        try {

            //    java.sql.Connection connDB = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");

            java.sql.Statement stmt1 = connectDB.createStatement();

            //java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT shift_no,date FROM ac_cash_collection WHERE date between '"+beginDate+"'::date and  '"+endDate+"' and shift_no is not null and shift_no !='' Order by date ASC");
            java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT shift_no,start_date::date FROM ac_shifts WHERE start_date::date between '" + beginDatePicker.getDate() + "'::date and  '" + endDatePicker.getDate() + "' Order by start_date::date ASC");

            while (rSet1.next()) {

                listStaffNoVector.addElement(rSet1.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());

        }


        listofStaffNos = listStaffNoVector.toArray();
        System.out.println("Done list of Staff Nos ...");
        return listofStaffNos;
    }

    private void closeShift() {
        int shift_no = java.lang.Integer.valueOf(shiftTotalsTable.getValueAt(shiftTotalsTable.getSelectedRow(), 1).toString());
        int confirm = javax.swing.JOptionPane.showConfirmDialog(this, "Terminate shift number : [" + shiftTotalsTable.getValueAt(shiftTotalsTable.getSelectedRow(), 1) + "] for Cashier : [" + shiftTotalsTable.getValueAt(shiftTotalsTable.getSelectedRow(), 2) + "]", "CLOSE SHIFT", javax.swing.JOptionPane.OK_CANCEL_OPTION);
        if (confirm == javax.swing.JOptionPane.OK_OPTION) {
            try {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_shifts set status = 'Closed', end_date = now() WHERE shift_no = ?");

                pstmt.setInt(1, shift_no);

                pstmt.executeUpdate();
                // TODO add your handling code here:
            } catch (SQLException ex) {
                Logger.getLogger(TotalShiftsIntfr.class.getName()).log(Level.SEVERE, null, ex);
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    double getMobilePay() {
        double totalMobilePay = 0.00;
        try {
            java.sql.Statement st24 = connectDB.createStatement();
            java.sql.ResultSet rset24 = st24.executeQuery("select sum(debit-credit) from ac_cash_collection where transaction_type ilike 'MPESA' and date between '" + beginDatePicker.getDate() + "'::date and  '" + endDatePicker.getDate() + "'");

            while (rset24.next()) {
                //table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                // phrase = new Phrase(dbObject.getDBObject(rset1.getObject(1), "0.00"), pFontNum);
                mCash = mCash + rset24.getDouble(1);
                // table.addCell(dbObject.getDBObject(rset24.getObject(1), "0.00"));
                totalMPayTxt.setText(dbObject.getDBObject(rset24.getObject(1), "0.00"));
            }
        } catch (java.sql.SQLException sqlExec) {
            sqlExec.printStackTrace();
        }
        return totalMobilePay;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JLabel beginDateLbl;
    private com.afrisoftech.lib.DatePicker beginDatePicker;
    private javax.swing.JPanel datesPanel;
    private javax.swing.JLabel endDatePanel;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton reconcilemnit;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JScrollPane shiftTotalsJscrl;
    private javax.swing.JTable shiftTotalsTable;
    private javax.swing.JLabel shiftsTotalAmountLbl;
    private javax.swing.JFormattedTextField shiftsTotalAmountTxt;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JFormattedTextField totalCashTxt;
    private javax.swing.JLabel totalChequesLbl;
    private javax.swing.JLabel totalChequesLbl1;
    private javax.swing.JFormattedTextField totalChequesTxt;
    private javax.swing.JFormattedTextField totalChequesTxt1;
    private javax.swing.JFormattedTextField totalEFTTxt;
    private javax.swing.JFormattedTextField totalEFTTxt1;
    private javax.swing.JLabel totalEftLbl;
    private javax.swing.JLabel totalEftLbl1;
    private javax.swing.JLabel totalMPayLbl;
    private javax.swing.JFormattedTextField totalMPayTxt;
    private javax.swing.JLabel totalRefundsLbl;
    private javax.swing.JFormattedTextField totalRefundsTxt;
    private javax.swing.JLabel totalcashLbl;
    // End of variables declaration//GEN-END:variables
}
