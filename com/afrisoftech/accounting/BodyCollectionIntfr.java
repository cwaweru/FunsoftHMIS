/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

import static com.afrisoftech.reports.FarewellGatePassPdf.connectDB;
import java.sql.Date;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author root
 */
public class BodyCollectionIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form loanpymntintfr
     */
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public BodyCollectionIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jSearchDialog2 = new javax.swing.JDialog();
        bodySearchDialog = new javax.swing.JPanel();
        searchBoxTxt = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        debtorSearchDialog = new javax.swing.JDialog();
        debtorSearchDialogPanel = new javax.swing.JPanel();
        debtorSearchBoxTxt = new javax.swing.JTextField();
        debtorSearchScrollPane = new javax.swing.JScrollPane();
        debtorSearchTable = new com.afrisoftech.dbadmin.JTable();
        debtorCloseBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        this.jTextField7.setVisible(false);
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tagNumberTxt = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        bodyNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        bodyNumberTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dateCollectedDatePicker = new com.afrisoftech.lib.DatePicker();
        currentDatePicker = new com.afrisoftech.lib.DatePicker();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        countyofBurialCmbx = new javax.swing.JComboBox();
        permitNumberTxt = new javax.swing.JTextField();
        placeofBurialTxt = new javax.swing.JTextField();
        billAmountLbl = new javax.swing.JLabel();
        billAmountTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        admissionDatePicker = new com.afrisoftech.lib.DatePicker();
        jLabel15 = new javax.swing.JLabel();
        dischargeModeCmbx = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        transferFacilityTxt = new javax.swing.JTextField();
        jPanel42 = new javax.swing.JPanel();
        debtorNameTxt = new javax.swing.JTextField();
        debtorSearchButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        invoicingBtn = new javax.swing.JButton();
        debtorAccountTxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        invoiceAmountTxt = new javax.swing.JTextField();
        invoiceNumberLbl = new javax.swing.JLabel();
        invoiceNumberTxt = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        nokNameTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        nokIDNumberTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nokTelephoneTxt = new javax.swing.JTextField();
        nokRelationshipCmbx = new javax.swing.JComboBox();
        deceasedNumberChkbx = new javax.swing.JCheckBox();
        deceasedNameChkbx = new javax.swing.JCheckBox();
        buttonPanel = new javax.swing.JPanel();

        saveDataBtn = new javax.swing.JButton();
        clearFormBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        helpBtn = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();
        interimInvoiceBtn = new javax.swing.JButton();
        reprintInvoiceBtn = new javax.swing.JButton();
        spacerlbl = new javax.swing.JLabel();

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        bodySearchDialog.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bodySearchDialog.setLayout(new java.awt.GridBagLayout());

        searchBoxTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchBoxTxtCaretUpdate(evt);
            }
        });
        searchBoxTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        bodySearchDialog.add(searchBoxTxt, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        bodySearchDialog.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodySearchDialog.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(bodySearchDialog, gridBagConstraints);

        debtorSearchDialog.setModal(true);
        debtorSearchDialog.setUndecorated(true);
        debtorSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        debtorSearchDialogPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        debtorSearchDialogPanel.setLayout(new java.awt.GridBagLayout());

        debtorSearchBoxTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                debtorSearchBoxTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        debtorSearchDialogPanel.add(debtorSearchBoxTxt, gridBagConstraints);

        debtorSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        debtorSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        debtorSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                debtorSearchTableMouseClicked(evt);
            }
        });
        debtorSearchScrollPane.setViewportView(debtorSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        debtorSearchDialogPanel.add(debtorSearchScrollPane, gridBagConstraints);

        debtorCloseBtn.setText("Dispose");
        debtorCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtorCloseBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        debtorSearchDialogPanel.add(debtorCloseBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        debtorSearchDialog.getContentPane().add(debtorSearchDialogPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Body Release From Farewell Home");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Details of deceased"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Name of Deceased");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField7.setEditable(false);
        jTextField7.setEnabled(false);
        jTextField7.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField7.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField7, gridBagConstraints);

        jTextField5.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField5.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jTextField5, gridBagConstraints);

        jLabel10.setText("Tag Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel10, gridBagConstraints);

        tagNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(tagNumberTxt, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        bodyNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(bodyNameTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel41, gridBagConstraints);

        jLabel12.setText("Body  Registration Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel12, gridBagConstraints);

        bodyNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(bodyNumberTxt, gridBagConstraints);

        jLabel6.setText("Current Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(dateCollectedDatePicker, gridBagConstraints);

        currentDatePicker.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(currentDatePicker, gridBagConstraints);

        jLabel8.setText("Date Collected");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel4.setText("County of Burial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Place of Burial or Village");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel13.setText("Permit Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel13, gridBagConstraints);

        countyofBurialCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT county_name FROM pb_county order by county_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(countyofBurialCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(permitNumberTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(placeofBurialTxt, gridBagConstraints);

        billAmountLbl.setText("Bill Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(billAmountLbl, gridBagConstraints);

        billAmountTxt.setEditable(false);
        billAmountTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        billAmountTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        billAmountTxt.setText("0.00");
        billAmountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billAmountTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(billAmountTxt, gridBagConstraints);

        jLabel14.setText("Registration Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel14, gridBagConstraints);

        admissionDatePicker.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(admissionDatePicker, gridBagConstraints);

        jLabel15.setText("Discharge Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel15, gridBagConstraints);

        dischargeModeCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Relatives for Burial", "Relatives to Another facility", "Disposal after long stay", "Research Specimen" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(dischargeModeCmbx, gridBagConstraints);

        jLabel16.setText("Transfer Facility");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(transferFacilityTxt, gridBagConstraints);

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel42.setLayout(new java.awt.GridBagLayout());

        debtorNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(debtorNameTxt, gridBagConstraints);

        debtorSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        debtorSearchButton.setToolTipText("Search");
        debtorSearchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        debtorSearchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        debtorSearchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        debtorSearchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        debtorSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtorSearchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(debtorSearchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel42, gridBagConstraints);

        jLabel17.setText("Scheme/Debtor Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel17, gridBagConstraints);

        invoicingBtn.setText("Generate Invoice");
        invoicingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoicingBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(invoicingBtn, gridBagConstraints);

        debtorAccountTxt.setEditable(false);
        debtorAccountTxt.setForeground(new java.awt.Color(0, 0, 255));
        debtorAccountTxt.setBorder(javax.swing.BorderFactory.createTitledBorder("Debtor A/C No."));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(debtorAccountTxt, gridBagConstraints);

        jLabel18.setText("Invoice Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel18, gridBagConstraints);

        invoiceAmountTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        invoiceAmountTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        invoiceAmountTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(invoiceAmountTxt, gridBagConstraints);

        invoiceNumberLbl.setText("Invoice Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(invoiceNumberLbl, gridBagConstraints);

        invoiceNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(invoiceNumberTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details Of The Person Collecting The Body (The Person MUST have the permit to collect the body)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(153, 0, 153)));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Name of person collecting the body");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel8.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(nokNameTxt, gridBagConstraints);

        jLabel11.setText("ID Number/Passport");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(nokIDNumberTxt, gridBagConstraints);

        jLabel2.setText("Relationship to the deseased");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Telephone Number of person with permit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel8.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(nokTelephoneTxt, gridBagConstraints);

        nokRelationshipCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT relation FROM pb_relation ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(nokRelationshipCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jPanel31, gridBagConstraints);

        buttonGroup5.add(deceasedNumberChkbx);
        deceasedNumberChkbx.setSelected(true);
        deceasedNumberChkbx.setText("Body No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(deceasedNumberChkbx, gridBagConstraints);

        buttonGroup5.add(deceasedNameChkbx);
        deceasedNameChkbx.setText("Deceased Name");
        getContentPane().add(deceasedNameChkbx, new java.awt.GridBagConstraints());

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        saveDataBtn.setMnemonic('O');
        saveDataBtn.setText("Release body");
        saveDataBtn.setToolTipText("Click here enter data");
        saveDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(saveDataBtn, gridBagConstraints);

        clearFormBtn.setMnemonic('l');
        clearFormBtn.setText("Clear form");
        clearFormBtn.setToolTipText("Click here to clear textfields");
        clearFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(clearFormBtn, gridBagConstraints);

        closeFormBtn.setMnemonic('C');
        closeFormBtn.setText("Close form");
        closeFormBtn.setToolTipText("Click here to close window");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeFormBtn, gridBagConstraints);

        helpBtn.setMnemonic('h');
        helpBtn.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(helpBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerLbl, gridBagConstraints);

        interimInvoiceBtn.setText("Interim Invoice");
        interimInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interimInvoiceBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(interimInvoiceBtn, gridBagConstraints);

        reprintInvoiceBtn.setText("Reprint Invoice");
        reprintInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reprintInvoiceBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(reprintInvoiceBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerlbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        setBounds(0, 0, 697, 390);
    }// </editor-fold>//GEN-END:initComponents

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        bodyNumberTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        bodyNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        tagNumberTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        billAmountTxt.setText(String.valueOf(this.billAmount(bodyNumberTxt.getText())));
        admissionDatePicker.setDate(Date.valueOf(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString()));
        invoiceNumberTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 4).toString());
        this.jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void searchBoxTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchBoxTxtCaretUpdate
        if (searchBoxTxt.getCaretPosition() < 3) {

            System.out.println("Nothing");

        } else {
            if (this.deceasedNameChkbx.isSelected()) {

                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT annual_no, (upper(patient_name)) as name, tag_no, date_received as registration_date, (SELECT DISTINCT invoice_no FROM hp_patient_card WHERE hp_mortuary.annual_no = hp_patient_card.patient_no AND invoice_no ilike 'fw%') as invoice_no from hp_mortuary where patient_name ILIKE '%" + searchBoxTxt.getText() + "%' or tag_no ILIKE '" + searchBoxTxt.getText() + "%' or annual_no ILIKE '%" + searchBoxTxt.getText() + "%' and check_out = false order by 2"));


                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);



            } else {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT annual_no, (upper(patient_name)) as name, tag_no, date_received as registration_date, (SELECT DISTINCT invoice_no FROM hp_patient_card WHERE hp_mortuary.annual_no = hp_patient_card.patient_no AND invoice_no ilike 'fw%') as invoice_no  from hp_mortuary where patient_no ILIKE '" + searchBoxTxt.getText() + "%' or tag_no ILIKE '" + searchBoxTxt.getText() + "%'  or annual_no ILIKE '%" + searchBoxTxt.getText() + "%' and check_out = false order by 2"));


                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);



            }
        }        // Add your handling code here:
    }//GEN-LAST:event_searchBoxTxtCaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.bodyNameTxt.getLocationOnScreen();

        jSearchDialog2.setSize(700, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);



    }

    private void searchButton11Clicked() {
    }

    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        //java.awt.Point point = jTable1.getLocationOnScreen();

    }
    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        // this.jLabel5.setVisible(false);
        this.jTextField7.setVisible(false);

        // Add your handling code here:
    }//GEN-LAST:event_jPanel2ComponentShown
    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt) {
    }
    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void clearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBtnActionPerformed
        bodyNumberTxt.setText("");
        nokTelephoneTxt.setText("");
        tagNumberTxt.setText("");
        permitNumberTxt.setText("");
        placeofBurialTxt.setText("");
        countyofBurialCmbx.setSelectedItem(null);
        bodyNameTxt.setText("");
        nokNameTxt.setText("");
        nokRelationshipCmbx.setSelectedItem(null);
        nokIDNumberTxt.setText("");
        billAmountTxt.setText("0.00");

    }//GEN-LAST:event_clearFormBtnActionPerformed
    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox4.getSelectedItem();

    }
    private void saveDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataBtnActionPerformed
        if (!bodyNumberTxt.getText().isEmpty()) {

            if (billCleared(bodyNumberTxt.getText())) {

                if (!this.nokIDNumberTxt.getText().isEmpty() && !nokNameTxt.getText().isEmpty() && !this.nokTelephoneTxt.getText().isEmpty()) {

                    if(tagNumberTxt.getText().length() < 2){
                        
                        tagNumberTxt.setText(bodyNumberTxt.getText());
                        
                    }
                    
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String billNo = null;

                    String transNo = null;
                    String payMode = null;
                    String patientAcc = null;
                    String cardNo = null;
                    String AccDesc = null;
                    String scheme = null;
                    String cardName = null;
                    String isurer = null;
                    String expDate = null;
                    String staffNo = null;
                    String glAcc = null;
                    String user = null;
                    String accDesc1 = null;
                    String glAcc1 = null;
                    String BillNo = null;
                    String code = null;
                    String prescNo = null;
                    String glAcc2 = null;
                    String Stock = null;
                    String actCode = null;
                    String accountCode = null;
                    String userName = null;
                    String transNo1 = null;
                    String glType = null;
                    String glCode = null;
                    String units = null;
                    String chbox = null;
                    try {
                        connectDB.setAutoCommit(false);


                        java.sql.Statement ps11 = connectDB.createStatement();
                        java.sql.ResultSet rst11 = ps11.executeQuery("select current_user");
                        while (rst11.next()) {
                            user = rst11.getObject(1).toString();
                        }

                        // Finalise invoice and generate invoice number
                        String invoiceNumber = com.afrisoftech.lib.InvoiceNumbers.getFarewellInvoiceNumber();
                        java.sql.PreparedStatement pstmtReleaseInvoice = connectDB.prepareStatement("UPDATE hp_patient_card SET invoice_no = ?  WHERE patient_no = ? AND invoice_no NOT ILIKE 'FW%'");
                        pstmtReleaseInvoice.setString(1, invoiceNumber);
                        pstmtReleaseInvoice.setString(2, bodyNumberTxt.getText());
                        pstmtReleaseInvoice.executeUpdate();
                        java.sql.PreparedStatement pstmtHeader = connectDB.prepareStatement("SELECT nextval('release_seq_no'), current_user");
                        java.sql.ResultSet rsetheader = pstmtHeader.executeQuery();
                        String releaseSerial = null;
                        while (rsetheader.next()) {
                            releaseSerial = String.valueOf(rsetheader.getInt(1));
                        }
                        // Capture data for releasing the body
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO hp_body_collector("
                                + "            diceased_name, sheet_no, patient_no, collector, id_no, relation, "
                                + "            tel, date_collected, burial_county, place_of_burial,"
                                + "            permit_number, admission_date, invoice_no, release_serial_no, discharge_mode, "
                                + "            transfer_facility)"
                                + "    VALUES (?, ?, ?, ?, ?, ?,"
                                + "            ?, ?, ?, ?, "
                                + "            ?, ?, ?, ?, ?, ?)");

                        pstmt2.setString(1, bodyNameTxt.getText());
                        pstmt2.setString(2, tagNumberTxt.getText());
                        pstmt2.setString(3, bodyNumberTxt.getText());
                        pstmt2.setString(4, nokNameTxt.getText());
                        pstmt2.setObject(5, nokIDNumberTxt.getText());
                        pstmt2.setObject(6, nokRelationshipCmbx.getSelectedItem());
                        pstmt2.setString(7, nokTelephoneTxt.getText());
                        pstmt2.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateCollectedDatePicker.getDate()));
                        pstmt2.setObject(9, countyofBurialCmbx.getSelectedItem());
                        pstmt2.setObject(10, placeofBurialTxt.getText());
                        pstmt2.setString(11, permitNumberTxt.getText());
                        pstmt2.setDate(12, com.afrisoftech.lib.SQLDateFormat.getSQLDate(admissionDatePicker.getDate()));
                        pstmt2.setString(13, invoiceNumber);
                        pstmt2.setString(14, releaseSerial);
                        pstmt2.setString(15, dischargeModeCmbx.getSelectedItem().toString());
                        pstmt2.setString(16, transferFacilityTxt.getText());

                        pstmt2.executeUpdate();

                        // Mark body as released on the body register
                        java.sql.PreparedStatement pstmtRelease = connectDB.prepareStatement("UPDATE hp_mortuary SET discharge_date = ?, input_date = ? , discharged = ?, check_out = ?, discharged_by = ?  WHERE annual_no = ?");

                        pstmtRelease.setDate(1, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                        pstmtRelease.setDate(2, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                        pstmtRelease.setBoolean(3, true);
                        pstmtRelease.setBoolean(4, true);
                        pstmtRelease.setString(5, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                        pstmtRelease.setString(6, bodyNumberTxt.getText());
                        pstmtRelease.executeUpdate();

                        connectDB.commit();
                        connectDB.setAutoCommit(true);

                        com.afrisoftech.reports.MortFinalDescInPatientlnvPdf finalInvoice = new com.afrisoftech.reports.MortFinalDescInPatientlnvPdf();
                        finalInvoice.MortFinalDescInPatientlnvPdf(connectDB, invoiceNumber, bodyNumberTxt.getText());

                        com.afrisoftech.reports.FarewellGatePassPdf gatePass = new com.afrisoftech.reports.FarewellGatePassPdf();
                        gatePass.FarewellGatePassPdf(connectDB, bodyNumberTxt.getText(), invoiceNumber);

                        javax.swing.JOptionPane.showMessageDialog(this, "Body release from farewell home/mortuary records successful.", "Body Release Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        this.clearForm();
                    } catch (java.sql.SQLException sq) {

                        sq.printStackTrace();
                        try {
                            connectDB.rollback();
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }

                } else {

                    javax.swing.JOptionPane.showMessageDialog(this, "Information on person responsible for collecting body is mandatory! \nFields for Name, ID/Passport No and Telephone Number MUST be filled.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                }

            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "You bill is not cleared yet!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "You MUST select the file for the body!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // Add your handling code here:
    }//GEN-LAST:event_saveDataBtnActionPerformed

    private void billAmountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billAmountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_billAmountTxtActionPerformed

    private void debtorSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtorSearchButtonActionPerformed

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.debtorNameTxt.getLocationOnScreen();

        debtorSearchDialog.setSize(700, 200);

        debtorSearchDialog.setLocation(point);

        debtorSearchDialog.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_debtorSearchButtonActionPerformed

    private void invoicingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoicingBtnActionPerformed

        java.sql.Savepoint registerSavePoint = null;
        try {
            connectDB.setAutoCommit(false);
            registerSavePoint = connectDB.setSavepoint("registration");
        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
        }

        try {

            boolean rebateType = false;
            String transNo = null;
            String actCode1 = null;
            String actNames1 = null;
            String invoiceNo = null;
            String actCode = null;
            String actNames = null;
            if (debtorNameTxt.getText().length() > 1) {
                java.sql.PreparedStatement pstmtRT = connectDB.prepareStatement("SELECT rebate_type_invoicing FROM ac_schemes WHERE account_no = ?");
                pstmtRT.setString(1, debtorAccountTxt.getText());
                java.sql.ResultSet rsetRT = pstmtRT.executeQuery();
                while (rsetRT.next()) {
                    rebateType = rsetRT.getBoolean(1);
                }
            }
            //invoiceNo = com.afrisoftech.lib.InvoiceNumbers.getInvoiceNumber();
            java.sql.Statement pss12 = connectDB.createStatement();
            java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rsts11.next()) {
                actCode = rsts11.getObject(1).toString();
                actNames = rsts11.getObject(2).toString();
            }
            if (debtorAccountTxt.getText().length() > 1) {
                if (Double.parseDouble(billAmountTxt.getText()) > 0.00) {
                    invoiceNo = com.afrisoftech.lib.InvoiceNumbers.getFarewellInvoiceNumber();
                    java.sql.Statement pss = connectDB.createStatement();
                    java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                    while (rss.next()) {
                        transNo = rss.getObject(1).toString();
                    }
                    double totalSum = Double.parseDouble(billAmountTxt.getText());
                    String name = null;
                    String payer = null;
                    java.sql.Statement pss11h = connectDB.createStatement();
                    java.sql.ResultSet rsts1h = pss11h.executeQuery("SELECT scheme_name,payer_name,gl_code,gl_name FROM ac_schemes WHERE account_no = '" + this.debtorAccountTxt.getText() + "'");
                    while (rsts1h.next()) {
                        name = rsts1h.getObject(1).toString();
                        payer = rsts1h.getObject(2).toString();
                        actCode1 = rsts1h.getObject(3).toString();
                        actNames1 = rsts1h.getObject(4).toString();
                    }
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                    pstmt.setString(1, bodyNumberTxt.getText());
                    pstmt.setObject(2, "Receipt");
                    pstmt.setString(3, "");
                    pstmt.setString(4, "Scheme");
                    pstmt.setString(5, transNo);
                    pstmt.setString(7, name);
                    pstmt.setString(6, "");
                    pstmt.setString(8, "");
                    pstmt.setString(9, payer);
                    pstmt.setDate(10, null);
                    pstmt.setString(11, "");
                    pstmt.setDouble(13, Double.parseDouble(billAmountTxt.getText()));
                    pstmt.setDouble(12, 0.00);
                    pstmt.setDate(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstmt.setObject(15, actCode);
                    pstmt.setString(16, "INVOICE - " + name);
                    pstmt.setDouble(17, 1.00);
                    pstmt.setObject(18, debtorAccountTxt.getText());
                    pstmt.setBoolean(19, true);
                    pstmt.setString(20, "Receipts");
                    pstmt.setBoolean(21, true);
                    pstmt.setString(22, actNames);
                    pstmt.setString(23, invoiceNo);
                    pstmt.setString(24, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                    pstmt.setString(25, transNo);
                    pstmt.setString(26, "IP");
                    pstmt.setTimestamp(27, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                    pstmt.setString(28, bodyNumberTxt.getText());
                    pstmt.executeUpdate();

                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?, ?,?,?,?,?,?, ?,?,?,?,?,?,?)");
                    pstmt2.setObject(1, actCode1);
                    pstmt2.setString(4, bodyNumberTxt.getText());
                    pstmt2.setObject(3, bodyNameTxt.getText());
                    pstmt2.setString(2, payer);
                    pstmt2.setString(5, name);
                    pstmt2.setString(6, "");
                    pstmt2.setObject(7, debtorAccountTxt.getText());
                    pstmt2.setString(8, "");
                    pstmt2.setString(9, "");
                    pstmt2.setString(10, bodyNumberTxt.getText());
                    pstmt2.setString(11, transNo);
                    pstmt2.setString(12, "Raise Invoice");
                    pstmt2.setDouble(13, Double.parseDouble(billAmountTxt.getText()));
                    pstmt2.setDouble(14, 0.00);
                    pstmt2.setDate(15, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstmt2.setObject(16, invoiceNo);
                    pstmt2.setString(17, actNames1);
                    pstmt2.setBoolean(18, false);
                    pstmt2.setBoolean(19, false);
                    pstmt2.setString(20, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                    pstmt2.setString(21, "");
                    pstmt2.setDouble(22, Double.parseDouble(billAmountTxt.getText()));
                    pstmt2.setBoolean(23, false);
                    pstmt2.setDouble(24, 0.00);
                    pstmt2.setObject(25, "");
                    pstmt2.setObject(26, null);
                    pstmt2.setBoolean(27, false);
                    pstmt2.setDouble(28, 0.00);
                    pstmt2.setObject(29, null);
                    pstmt2.setString(30, "");
                    pstmt2.setBoolean(31, false);
                    pstmt2.setDouble(32, 0.00);
                    pstmt2.setObject(33, null);
                    pstmt2.setString(34, "");
                    pstmt2.setString(35, bodyNumberTxt.getText());
                    pstmt2.setString(36, null);
                    pstmt2.executeUpdate();
                    if (!(billAmount(bodyNumberTxt.getText()) > 0.00)) {
                        java.sql.PreparedStatement pstmtReleaseInvoice = connectDB.prepareStatement("UPDATE hp_patient_card SET invoice_no = ?  WHERE patient_no = ?");
                        pstmtReleaseInvoice.setString(1, invoiceNo);
                        pstmtReleaseInvoice.setString(2, bodyNumberTxt.getText());
                        pstmtReleaseInvoice.executeUpdate();
                    }
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    javax.swing.JOptionPane.showMessageDialog(this, "Invoice Number [" + invoiceNo + "] generated successfully.");
                    com.afrisoftech.reports.MortFinalDescInPatientlnvPdf finalInvoice = new com.afrisoftech.reports.MortFinalDescInPatientlnvPdf();
                    finalInvoice.MortFinalDescInPatientlnvPdf(connectDB, invoiceNo, bodyNumberTxt.getText());
                    debtorAccountTxt.setText(null);
                    debtorNameTxt.setText(null);
                    //}
//                
//                if (rebateType) {
//                    Double nhifDiff = schemediff;//Double.parseDouble(netAmountTxt.getText()) - Double.parseDouble(schemeInvoicingTable.getValueAt(0, 2).toString());
//                    if (nhifDiff != 0 && payModeTxt.getText().equalsIgnoreCase("Cash")) {
//                        String diffCode = null;
//                        String diffDesc = null;
//                        java.sql.Statement pss11u = connectDB.createStatement();
//                        java.sql.ResultSet rsts1u = pss11u.executeQuery("SELECT code,activity FROM pb_activity WHERE activity_category ilike 'NH'"); //get the GL account code and description for rebate variance account
//                        while (rsts1u.next()) {
//                            diffCode = rsts1u.getObject(1).toString();
//                            diffDesc = rsts1u.getObject(2).toString();
//
//                        }
//                        java.sql.Statement pss1 = connectDB.createStatement();
//                        java.sql.ResultSet rss1 = pss.executeQuery("select nextval('transaction_no_seq')");
//                        while (rss1.next()) {
//                            transNo = rss1.getObject(1).toString();
//                        }
//                        java.sql.PreparedStatement pstmtp = connectDB.prepareStatement("INSERT INTO hp_patient_card VALUES(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
//                        pstmtp.setString(1, bodyNumberTxt.getText());
//                        pstmtp.setObject(2, "SCHEME DIFF ");
//                        pstmtp.setString(3, patCat);
//                        pstmtp.setString(4, payMode);
//                        pstmtp.setString(5, transNo);
//                        pstmtp.setString(7, "SCHEME DIFF");
//                        pstmtp.setString(6, cardNumberTxt.getText());
//                        pstmtp.setString(8, schemeInvoicingTable.getValueAt(i, 1).toString());
//                        pstmtp.setString(9, schemeInvoicingTable.getValueAt(i, 1).toString());
//                        pstmtp.setDate(10, null);
//                        pstmtp.setString(11, "");
//                        if (nhifDiff > 0) {
//                            pstmtp.setDouble(13, nhifDiff);
//                            pstmtp.setDouble(12, 0.00);
//                        } else {
//                            pstmtp.setDouble(12, nhifDiff * -1);
//                            pstmtp.setDouble(13, 0.00);
//                        }
//                        pstmtp.setDate(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
//                        // pstmtp.setDate(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dischargeDatePicker.getDate()));
//                        pstmtp.setObject(15, actCode);
//                        //      pstmtp.setObject(15, actCode);
//                        pstmtp.setString(16, "SCHEME DIFF");
//                        pstmtp.setDouble(17, 1);
//                        pstmtp.setObject(18, patientNameTxt.getText());
//                        pstmtp.setBoolean(19, true);
//                        pstmtp.setString(23, invoiceNo);
//                        pstmtp.setString(20, "Remittance");
//                        pstmtp.setBoolean(21, false);
//                        pstmtp.setString(22, actNames);
//                        pstmtp.setString(24, user);
//                        pstmtp.setString(25, "-");
//                        pstmtp.setString(26, "IP");
//                        pstmtp.setTimestamp(27, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
//                        pstmtp.setObject(28, visitIDTxt.getText());
//                        pstmtp.executeUpdate();
//
//                        java.sql.PreparedStatement pstmt2x = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
//                        pstmt2x.setObject(1, diffCode);
//                        pstmt2x.setObject(2, diffDesc);
//                        pstmt2x.setString(3, patientNumberTxt.getText());
//                        pstmt2x.setString(4, patientNameTxt.getText());
//                        pstmt2x.setString(5, "Scheme Diff");
//                        pstmt2x.setString(6, "");
//                        pstmt2x.setString(7, "");
//                        pstmt2x.setString(10, "Scheme");
//                        pstmt2x.setString(9, "");
//                        pstmt2x.setString(8, "IP");
//                        pstmt2x.setString(11, "");
//                        pstmt2x.setString(12, "");
//                        pstmt2x.setString(13, "");
//                        pstmt2x.setString(14, "Scheme Diff");
//                        pstmt2x.setString(15, "Scheme Rebate");
//                        if (nhifDiff > 0) {
//                            pstmt2x.setDouble(16, nhifDiff);
//                            pstmt2x.setDouble(17, 0.00);
//                        } else {
//                            pstmt2x.setDouble(17, nhifDiff * -1);
//                            pstmt2x.setDouble(16, 0.00);
//                        }
//                        pstmt2x.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
//                        //pstmt2x.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dischargeDatePicker.getDate()));
//                        pstmt2x.setString(19, transNo);
//                        pstmt2x.setBoolean(20, false);
//                        pstmt2x.setBoolean(21, false);
//                        pstmt2x.setBoolean(22, false);
//                        pstmt2x.setString(23, user);
//                        pstmt2x.executeUpdate();
//                    }
//                }
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "You can't invoice against zero balance!");
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "You MUST set the debtor account to proceed with invoicing!");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            try {
                connectDB.rollback(registerSavePoint);
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(BodyCollectionIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }



        // TODO add your handling code here:
    }//GEN-LAST:event_invoicingBtnActionPerformed

    private void debtorSearchBoxTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_debtorSearchBoxTxtCaretUpdate

        debtorSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT"
                + " scheme_name, account_no FROM ac_schemes WHERE scheme_name ilike"
                + " '%" + debtorSearchBoxTxt.getText() + "%' or account_no ilike '%" + debtorSearchBoxTxt.getText() + "%' ORDER by 1"));
        // TODO add your handling code here:
    }//GEN-LAST:event_debtorSearchBoxTxtCaretUpdate

    private void debtorSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debtorSearchTableMouseClicked

        this.debtorNameTxt.setText(this.debtorSearchTable.getValueAt(this.debtorSearchTable.getSelectedRow(), 0).toString());

        this.debtorAccountTxt.setText(this.debtorSearchTable.getValueAt(this.debtorSearchTable.getSelectedRow(), 1).toString());
        debtorSearchDialog.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_debtorSearchTableMouseClicked

    private void debtorCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtorCloseBtnActionPerformed
        debtorSearchDialog.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_debtorCloseBtnActionPerformed

    private void interimInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interimInvoiceBtnActionPerformed

        com.afrisoftech.reports.FinalDescInPatientIntmlnvPdf policy = new com.afrisoftech.reports.FinalDescInPatientIntmlnvPdf();

        policy.FinalDescInPatientIntmlnvPdf(connectDB, "", bodyNumberTxt.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_interimInvoiceBtnActionPerformed

    private void reprintInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reprintInvoiceBtnActionPerformed
        com.afrisoftech.reports.MortFinalDescInPatientlnvPdf finalInvoice = new com.afrisoftech.reports.MortFinalDescInPatientlnvPdf();
        finalInvoice.MortFinalDescInPatientlnvPdf(connectDB, invoiceNumberTxt.getText(), bodyNumberTxt.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_reprintInvoiceBtnActionPerformed

    private void searchBoxTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxTxtActionPerformed
    private void populateTable1(java.lang.String patient_no) {
    }

    private void populateTable2(java.lang.String patient_no) {
    }

    private boolean billCleared(String bodyNumber) {

        boolean hasClearedBill = false;

        double billAmount = 0.00;
        try {
            java.sql.PreparedStatement pstmtBillCleared = connectDB.prepareStatement("SELECT sum(debit-credit) FROM hp_patient_card WHERE patient_no = ?");
            pstmtBillCleared.setString(1, this.bodyNumberTxt.getText());
            java.sql.ResultSet rsetBillCleared = pstmtBillCleared.executeQuery();

            while (rsetBillCleared.next()) {
                billAmount = rsetBillCleared.getDouble(1);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(BodyCollectionIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (billAmount > 0.00) {
            hasClearedBill = false;
        } else {
            hasClearedBill = true;
        }
        return hasClearedBill;
    }

    private double billAmount(String bodyNumber) {

        double billAmount = 0.00;
        try {
            java.sql.PreparedStatement pstmtBillCleared = connectDB.prepareStatement("SELECT sum(debit-credit) FROM hp_patient_card WHERE patient_no = ?");
            pstmtBillCleared.setString(1, this.bodyNumberTxt.getText());
            java.sql.ResultSet rsetBillCleared = pstmtBillCleared.executeQuery();

            while (rsetBillCleared.next()) {
                billAmount = rsetBillCleared.getDouble(1);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(BodyCollectionIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        return billAmount;
    }

    private void clearForm() {
        bodyNumberTxt.setText("");
        nokTelephoneTxt.setText("");
        tagNumberTxt.setText("");
        permitNumberTxt.setText("");
        placeofBurialTxt.setText("");
        countyofBurialCmbx.setSelectedItem(null);
        bodyNameTxt.setText("");
        nokNameTxt.setText("");
        nokRelationshipCmbx.setSelectedItem(null);
        nokIDNumberTxt.setText("");
        billAmountTxt.setText("0.00");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker admissionDatePicker;
    private javax.swing.JLabel billAmountLbl;
    private javax.swing.JTextField billAmountTxt;
    private javax.swing.JTextField bodyNameTxt;
    private javax.swing.JTextField bodyNumberTxt;
    private javax.swing.JPanel bodySearchDialog;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton clearFormBtn;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JComboBox countyofBurialCmbx;
    private com.afrisoftech.lib.DatePicker currentDatePicker;
    private com.afrisoftech.lib.DatePicker dateCollectedDatePicker;
    private javax.swing.JTextField debtorAccountTxt;
    private javax.swing.JButton debtorCloseBtn;
    private javax.swing.JTextField debtorNameTxt;
    private javax.swing.JTextField debtorSearchBoxTxt;
    private javax.swing.JButton debtorSearchButton;
    private javax.swing.JDialog debtorSearchDialog;
    private javax.swing.JPanel debtorSearchDialogPanel;
    private javax.swing.JScrollPane debtorSearchScrollPane;
    private javax.swing.JTable debtorSearchTable;
    private javax.swing.JCheckBox deceasedNameChkbx;
    private javax.swing.JCheckBox deceasedNumberChkbx;
    private javax.swing.JComboBox dischargeModeCmbx;
    private javax.swing.JButton helpBtn;
    private javax.swing.JButton interimInvoiceBtn;
    private javax.swing.JTextField invoiceAmountTxt;
    private javax.swing.JLabel invoiceNumberLbl;
    private javax.swing.JTextField invoiceNumberTxt;
    private javax.swing.JButton invoicingBtn;
    private javax.swing.JButton jButton52;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField nokIDNumberTxt;
    private javax.swing.JTextField nokNameTxt;
    private javax.swing.JComboBox nokRelationshipCmbx;
    private javax.swing.JTextField nokTelephoneTxt;
    private javax.swing.JTextField permitNumberTxt;
    private javax.swing.JTextField placeofBurialTxt;
    private javax.swing.JButton reprintInvoiceBtn;
    private javax.swing.JButton saveDataBtn;
    private javax.swing.JTextField searchBoxTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel spacerLbl;
    private javax.swing.JLabel spacerlbl;
    private javax.swing.JTextField tagNumberTxt;
    private javax.swing.JTextField transferFacilityTxt;
    // End of variables declaration//GEN-END:variables
}
