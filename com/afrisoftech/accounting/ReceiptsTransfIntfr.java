/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */

package com.afrisoftech.accounting;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author  root
 */
public class ReceiptsTransfIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form countryintfr */
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private java.lang.String shift_no = null;
    private String visitId = null;
    
    public ReceiptsTransfIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        System.out.println("Cashpoint : "+System.getProperty("cashpoint"));
        
        //        System.out.println("Shift No. : "+getShiftMunber());
        
        cashPointTxt.setText(System.getProperty("cashpoint"));
        
        shiftNoTxt.setText(getShiftNumber());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        receiptDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jPanel711 = new javax.swing.JPanel();
        jLabel711 = new javax.swing.JLabel();
        jTextField611 = new javax.swing.JTextField();
        jPanel1111 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        okayButton = new javax.swing.JButton();
        jButton3111 = new javax.swing.JButton();
        jButton4111 = new javax.swing.JButton();
        jButton5111 = new javax.swing.JButton();
        jSeparator1111 = new javax.swing.JSeparator();
        jButton221 = new javax.swing.JButton();
        jPanel511 = new javax.swing.JPanel();
        jLabel1211 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cashPointTxt = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        shiftNoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        paymentModeTxt = new javax.swing.JTextField();
        dateTxt = new javax.swing.JTextField();
        jPanel212 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        referenceNoTxt = new javax.swing.JTextField();
        patientNoTxt = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField152 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel911 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        receiptAmountTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        receiptNoTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel2122 = new javax.swing.JLabel();
        visitDonorIdTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel53111 = new javax.swing.JLabel();
        visitIdTxt = new javax.swing.JTextField();
        jLabel3121 = new javax.swing.JLabel();
        patientNameTxt = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        patientAccountNoTxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        transferPatientToConsultantChk = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        transferDebtorToPatientChk = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        transferPatientToPatientChk = new javax.swing.JCheckBox();
        transferPatientToDebtorChk = new javax.swing.JCheckBox();
        panelPayment = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        depositRdi = new javax.swing.JRadioButton();
        billPaymentRdi = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();

        receiptDialog.setModal(true);
        receiptDialog.setUndecorated(true);
        receiptDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        receiptDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Patient Receipts Transfer");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel3, gridBagConstraints);

        jPanel711.setLayout(new java.awt.GridBagLayout());

        jLabel711.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel711.add(jLabel711, gridBagConstraints);

        jTextField611.setEditable(false);
        jTextField611.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField611.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel711.add(jTextField611, gridBagConstraints);

        jPanel1111.setLayout(new java.awt.GridBagLayout());

        okayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        okayButton.setMnemonic('O');
        okayButton.setText("Ok");
        okayButton.setToolTipText("Click here enter data");
        okayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okayButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(okayButton, gridBagConstraints);

        jButton3111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        jButton3111.setMnemonic('l');
        jButton3111.setText("Clear");
        jButton3111.setToolTipText("Click here to clear textfields");
        jButton3111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton3111, gridBagConstraints);

        jButton4111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
        jButton4111.setMnemonic('C');
        jButton4111.setText("Close");
        jButton4111.setToolTipText("Click here to close window");
        jButton4111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton4111, gridBagConstraints);

        jButton5111.setMnemonic('h');
        jButton5111.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton5111, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1111.add(jSeparator1111, gridBagConstraints);

        jButton221.setMnemonic('p');
        jButton221.setText("RePrint");
        jButton221.setToolTipText("Click here to edit data");
        jButton221.setEnabled(false);
        jButton221.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton221ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton221, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel711.add(jPanel1111, gridBagConstraints);

        jPanel511.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Payment Mode"));
        jPanel511.setLayout(new java.awt.GridBagLayout());

        jLabel1211.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel511.add(jLabel1211, gridBagConstraints);

        jLabel10.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel511.add(jLabel10, gridBagConstraints);

        cashPointTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.5;
        gridBagConstraints.weighty = 1.0;
        jPanel511.add(cashPointTxt, gridBagConstraints);

        jLabel131.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel511.add(jLabel131, gridBagConstraints);

        shiftNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel511.add(shiftNoTxt, gridBagConstraints);

        jLabel2.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel511.add(jLabel2, gridBagConstraints);

        paymentModeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel511.add(paymentModeTxt, gridBagConstraints);

        dateTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel511.add(dateTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel711.add(jPanel511, gridBagConstraints);

        jPanel212.setBorder(javax.swing.BorderFactory.createTitledBorder("Select receipt here"));
        jPanel212.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Transfer Receipt From (Donor)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 13), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        referenceNoTxt.setEditable(false);
        referenceNoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        referenceNoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                referenceNoTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(referenceNoTxt, gridBagConstraints);

        patientNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(patientNoTxt, gridBagConstraints);

        jLabel112.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel112, gridBagConstraints);

        jTextField3.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel1.add(jTextField3, new java.awt.GridBagConstraints());

        jLabel9.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jTextField4.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField4.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel1.add(jTextField4, new java.awt.GridBagConstraints());

        jLabel4.setText("Visit ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jTextField152.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField152.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel1.add(jTextField152, new java.awt.GridBagConstraints());

        jLabel8.setText("Reference");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel911.setText("Receipt No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel911, gridBagConstraints);

        nameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(nameTxt, gridBagConstraints);

        receiptAmountTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        receiptAmountTxt.setForeground(new java.awt.Color(0, 0, 204));
        receiptAmountTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        receiptAmountTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(receiptAmountTxt, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        receiptNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(receiptNoTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jLabel2122.setText("Patient No. / AC No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel2122, gridBagConstraints);

        visitDonorIdTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(visitDonorIdTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Transfer Receipt To (recipient)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel53111.setText("Visit Id");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel53111, gridBagConstraints);

        visitIdTxt.setEditable(false);
        visitIdTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(visitIdTxt, gridBagConstraints);

        jLabel3121.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel3121, gridBagConstraints);

        patientNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(patientNameTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(datePicker1, gridBagConstraints);

        jLabel1.setText("Patient No / Ac No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        patientAccountNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(patientAccountNoTxt, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jPanel41, gridBagConstraints);

        jLabel12.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel711.add(jPanel212, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(transferPatientToConsultantChk);
        transferPatientToConsultantChk.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        transferPatientToConsultantChk.setText("Transfer from patient to clinical consultants");
        transferPatientToConsultantChk.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        transferPatientToConsultantChk.setMargin(new java.awt.Insets(0, 0, 0, 0));
        transferPatientToConsultantChk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                transferPatientToConsultantChkItemStateChanged(evt);
            }
        });
        transferPatientToConsultantChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferPatientToConsultantChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel7.add(transferPatientToConsultantChk, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel5, gridBagConstraints);

        buttonGroup2.add(transferDebtorToPatientChk);
        transferDebtorToPatientChk.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        transferDebtorToPatientChk.setText("Transfer from debtor to patient");
        transferDebtorToPatientChk.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        transferDebtorToPatientChk.setMargin(new java.awt.Insets(0, 0, 0, 0));
        transferDebtorToPatientChk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                transferDebtorToPatientChkItemStateChanged(evt);
            }
        });
        transferDebtorToPatientChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferDebtorToPatientChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel7.add(transferDebtorToPatientChk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.setPreferredSize(new java.awt.Dimension(875, 558));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(transferPatientToPatientChk);
        transferPatientToPatientChk.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        transferPatientToPatientChk.setText("Transfer from patient to patient");
        transferPatientToPatientChk.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        transferPatientToPatientChk.setMargin(new java.awt.Insets(0, 0, 0, 0));
        transferPatientToPatientChk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                transferPatientToPatientChkItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel8.add(transferPatientToPatientChk, gridBagConstraints);

        buttonGroup2.add(transferPatientToDebtorChk);
        transferPatientToDebtorChk.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        transferPatientToDebtorChk.setText("Transfer from patient to debtor");
        transferPatientToDebtorChk.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        transferPatientToDebtorChk.setMargin(new java.awt.Insets(0, 0, 0, 0));
        transferPatientToDebtorChk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                transferPatientToDebtorChkItemStateChanged(evt);
            }
        });
        transferPatientToDebtorChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferPatientToDebtorChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel8.add(transferPatientToDebtorChk, gridBagConstraints);

        panelPayment.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("Payment Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelPayment.add(jLabel6, gridBagConstraints);

        buttonGroup3.add(depositRdi);
        depositRdi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        depositRdi.setForeground(new java.awt.Color(0, 0, 204));
        depositRdi.setText("Deposit");
        depositRdi.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelPayment.add(depositRdi, gridBagConstraints);

        buttonGroup3.add(billPaymentRdi);
        billPaymentRdi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        billPaymentRdi.setForeground(new java.awt.Color(0, 0, 204));
        billPaymentRdi.setText("Bill Payment");
        billPaymentRdi.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelPayment.add(billPaymentRdi, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(panelPayment, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel711.add(jPanel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel711.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel711, gridBagConstraints);

        setBounds(0, 0, 1128, 558);
    }// </editor-fold>//GEN-END:initComponents
    
    private void transferDebtorToPatientChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferDebtorToPatientChkActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_transferDebtorToPatientChkActionPerformed
    
    private void transferPatientToDebtorChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferPatientToDebtorChkActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_transferPatientToDebtorChkActionPerformed
    
    private void transferPatientToConsultantChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferPatientToConsultantChkActionPerformed
        com.afrisoftech.accounting.ReceiptsDocTransfIntfr other = new ReceiptsDocTransfIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true); // TODO add your handling code here:
        
    }//GEN-LAST:event_transferPatientToConsultantChkActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        int j = 0;
        
        patientNameTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        patientAccountNoTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        visitIdTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        
     /*   try {
      
            java.sql.Statement stmt111 = connectDB.createStatement();
            java.sql.ResultSet rsetTable11 = stmt111.executeQuery("SELECT count(patient_no) FROM ac_cash_collection WHERE patient_no = '"+jTextField16.getText()+"'");
      
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
      
            java.sql.Statement stmt111d = connectDB.createStatement();
            java.sql.ResultSet rsetTable11d = stmt111d.executeQuery("SELECT cash_point,shift_no,date FROM ac_cash_collection WHERE receipt_no = '"+jTextField9.getText()+"'");
      
            while (rsetTable11d.next()) {
              jTextField14.setText(rsetTable11d.getObject(1).toString());
              jTextField81.setText(rsetTable11d.getObject(2).toString());
              jTextField2.setText(rsetTable11d.getObject(3).toString());
            }
          //  if (j > 0) {
      
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select patient_name,patient_no from hp_admission where admission_no ='"+jTextField16.getText()+"'");
                while (rset.next()){
                    jTextField20.setText(rset.getObject(1).toString());
                    jTextField16.setText(rset.getObject(2).toString());
                }
      
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField16.getText()+"'");
                while (rset1.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField25.setText(rset1.getObject(1).toString());
                }
      
                java.sql.Statement stmt11 = connectDB.createStatement();
                java.sql.ResultSet rset11 = stmt11.executeQuery("SELECT sum(debit),payment_mode,date FROM ac_cash_collection WHERE  receipt_no  = '"+jTextField9.getText()+"' group by payment_mode,date");
                while (rset11.next()){
                    //    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField3111.setText(rset11.getObject(1).toString());
                    jTextField17.setText(rset11.getObject(1).toString());
                    jTextField1.setText(rset11.getObject(2).toString());
                    jTextField2.setText(rset11.getObject(3).toString());
                }
      
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
      */
        
        //   jButton301.setEnabled(true);
        
        jSearchDialog1.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    private void searchButtonClicked1() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.patientAccountNoTxt.getLocationOnScreen();
        
        jSearchDialog1.setSize(400,200);
        
        jSearchDialog1.setLocation(point);
        
        jSearchDialog1.setVisible(true);
        
        
        
    }
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if(jTextField111.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            if(transferPatientToDebtorChk.isSelected()){
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT scheme_name as name,account_no,'' as visit_id from ac_schemes where scheme_name ILIKE '%"+jTextField111.getText()+"%' ORDER BY scheme_name"));
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
            }else{
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT DISTINCT patient_name as name,patient_no,visit_id from hp_admission where patient_no ILIKE '%"+jTextField111.getText()+"%' AND visit_id IS NOT NULL order by patient_no"));
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);
            }
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButtonClicked1();
        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    
    private void jButton221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton221ActionPerformed
        String receiptNo1 = null;
        try {
            connectDB.setAutoCommit(false);
            
           /* java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
            while (rse12.next())
            
                patientAcc = rse12.getObject(1).toString();
            AccDesc = rse12.getObject(2).toString();
            user = rse12.getObject(3).toString();
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next())
                rst.getObject(1).toString();
            
            transNo = rst.getObject(1).toString();
            //      if (!(jComboBox11.getSelectedItem().toString().equalsIgnoreCase("Pharmacy"))){
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq')");
            while (rst11.next())
                rst11.getObject(1).toString();
            
            billNo = rst11.getObject(1).toString();
            
            System.out.println("Bill No "+billNo);
            
            for (int i = 0; i < jTable11.getRowCount(); i++){
                if (jTable11.getModel().getValueAt(i,0) != null){
                    System.out.println("Bill No 2 "+billNo);
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable11.getModel().getValueAt(i,4).toString()+"'");
                    while (rse121.next()){
            
                        glAcc = rse121.getObject(1).toString();
                        //    desc = rse121.getObject(2).toString();
            
                        java.sql.PreparedStatement pstmt1c = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        System.out.println("g1acc No 3"+billNo);
                        pstmt1c.setString(1,jTextField9.getText());
                        pstmt1c.setObject(2,jTable11.getValueAt(i,0).toString());
                        pstmt1c.setString(3,jTextField211.getText());
                        pstmt1c.setString(4,jComboBox4.getSelectedItem().toString());
                        pstmt1c.setString(5,transNo);
                        pstmt1c.setString(7,"");
                        pstmt1c.setString(6,jTextField21.getText());
                        pstmt1c.setString(8,jTextField52.getText());
                        pstmt1c.setString(9,jTextField41.getText());
                        if (jTextField511.getText().equals("")){
                            pstmt1c.setString(10,null);
                        }else{
                            pstmt1c.setString(10,jTextField511.getText());
                        }
                        pstmt1c.setString(11,"");
                        pstmt1c.setObject(12,jTable11.getValueAt(i,3).toString());
                        pstmt1c.setString(13,"00");
                        pstmt1c.setString(14,datePicker11.getDate().toString());
                        System.out.println("Time now " +datenowSql.toString());
                        pstmt1c.setObject(15,patientAcc);
                        pstmt1c.setString(16,glAcc);
                        pstmt1c.setObject(17,jTable11.getValueAt(i,1).toString());
                        pstmt1c.setObject(18,staffNo);
                        pstmt1c.setBoolean(19,false);
                        pstmt1c.setString(20,"Billing");
                        pstmt1c.setBoolean(21,false);
                        pstmt1c.setString(22,AccDesc);
                        pstmt1c.setString(23,billNo);
                        pstmt1c.setString(24,user);
                        pstmt1c.setString(25,jTextField14.getText());
                        pstmt1c.executeUpdate();
            
                        System.out.println("Bill No 4"+billNo);
                        java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt212.setObject(1,jTable11.getValueAt(i,4).toString());
                        pstmt212.setString(2,glAcc);
                        pstmt212.setString(3,jTextField9.getText());
                        if(jTextField10.getText().equals("")){
                            pstmt212.setString(4,jTextField111.getText());
                        }else{
                            pstmt212.setString(4,jTextField10.getText());
                        }
                        //    pstmt212.setString(4,jTextField11.getText());
                        pstmt212.setString(5,"");
                        pstmt212.setString(6,"");
                        pstmt212.setString(7,"");
                        pstmt212.setString(8,"");
                        pstmt212.setString(9,"");
                        pstmt212.setString(10,"");
                        pstmt212.setString(11,"");
                        pstmt212.setString(12,"");
                        pstmt212.setString(13,"");
                        pstmt212.setString(14,jTable11.getValueAt(i,0).toString());
                        pstmt212.setString(15,"Revenue");
                        pstmt212.setString(16,"0.00");
                        pstmt212.setObject(17,jTable11.getValueAt(i,3).toString());
                        pstmt212.setString(18,datePicker11.getDate().toString());
                        pstmt212.setString(19,transNo);
                        pstmt212.setString(20,"false");
                        pstmt212.setString(21,"false");
                        pstmt212.setString(22,"false");
                        pstmt212.setString(23,user);
                        pstmt212.setString(24,jTextField14.getText());
                        pstmt212.setString(25,jTextField81.getText());
                        pstmt212.executeUpdate();
                        System.out.println("Bill No 5"+billNo);
                    }
                }
            }
            
            
            */
            
            java.sql.Statement ps1 = connectDB.createStatement();
            java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
            while (rst1.next())
                receiptNo1 = rst1.getObject(1).toString();
            /*
            java.sql.Statement pss = connectDB.createStatement();
            java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
            while (rss.next())
                transNo1 = rss.getObject(1).toString();
             
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.ResultSet rse122 = stm122.executeQuery("select payment_mode from pb_paymentmodes where gl_account ='"+jTextField8.getText()+"'");
            while (rse122.next())
             
                name = rse122.getObject(1).toString();
             
            for (int k = 0; k < jTable11.getRowCount(); k++){
                if (jTable11.getModel().getValueAt(k,0) != null){
                    java.sql.Statement pss1 = connectDB.createStatement();
                    java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rsts.next())
                        actCode1 = rsts.getObject(1).toString();
                    actNames1 = rsts.getObject(2).toString();
                    java.sql.Statement stm121 = connectDB.createStatement();
                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code from pb_activity where code ='"+jTable11.getModel().getValueAt(k,4).toString()+"'");
                    while (rse121.next())
             
                        glAcc1 = rse121.getObject(1).toString();
                    accDesc1 = rse121.getObject(2).toString();
             
                    java.sql.Statement stm1211 = connectDB.createStatement();
                    java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                    while (rse1211.next())
                        rname = rse1211.getObject(1).toString();
                    rcode = rse1211.getObject(2).toString();
             
             
                    System.out.println(actNames1);
                    java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                    pstmtx.setString(1,jTextField9.getText());
                    pstmtx.setObject(2,jTable11.getValueAt(k,0).toString());
                    pstmtx.setString(3,jTextField211.getText());
                    pstmtx.setString(4,jComboBox4.getSelectedItem().toString());
                    pstmtx.setString(5,transNo1);
                    pstmtx.setString(7,"");
                    pstmtx.setString(6,jTextField21.getText());
                    pstmtx.setString(8,jTextField52.getText());
                    pstmtx.setString(9,jTextField41.getText());
                    if (jTextField511.getText().equals("")){
                        pstmtx.setString(10,null);
                    }else{
                        pstmtx.setString(10,jTextField511.getText());
                    }
                    //  pstmtx.setString(10,jTextField511.getText());
                    pstmtx.setString(11,"");
                    pstmtx.setObject(13,jTable11.getValueAt(k,3).toString());
                    pstmtx.setString(12,"00");
                    pstmtx.setString(14,datePicker11.getDate().toString());
                    pstmtx.setObject(15,actCode1);
                    pstmtx.setObject(16,glAcc1);
                    pstmtx.setObject(17,jTable11.getValueAt(k,1).toString());
                    pstmtx.setObject(18,"");
                    pstmtx.setString(19,"false");
                    pstmtx.setString(20,"Receipts");
                    pstmtx.setString(21,"false");
                    pstmtx.setString(22,actNames1);
                    pstmtx.setString(23,"");
                    pstmtx.setString(24,user);
                    pstmtx.setString(25,jTextField14.getText());
                    pstmtx.executeUpdate();
             
             
                    java.sql.PreparedStatement pstmt25 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                    pstmt25.setObject(1,jTable11.getValueAt(k,4).toString());
                    pstmt25.setObject(2,glAcc1);
                    pstmt25.setString(3,jTextField9.getText());
                    pstmt25.setString(4,jTextField111.getText());
                    pstmt25.setString(5,jComboBox4.getSelectedItem().toString());
                    pstmt25.setString(6,"");
                    pstmt25.setString(7,"");
                    pstmt25.setString(8,jTextField4.getText());
                    pstmt25.setString(9,jTextField5.getText());
                    pstmt25.setString(10,rcode);
                    pstmt25.setString(11,jTextField2.getText());
                    pstmt25.setString(12,receiptNo1);
                    pstmt25.setString(13,"");
                    if(jTextField10.getText().equals("")){
                        pstmt25.setString(14,jTextField111.getText());
                    }else{
                        pstmt25.setString(14,jTextField10.getText());
                    }
                    pstmt25.setString(15,"Receipts");
                    pstmt25.setObject(16,jTable11.getValueAt(k,3).toString());
                    pstmt25.setString(17,"0.00");
                    pstmt25.setString(18,datePicker11.getDate().toString());
                    pstmt25.setString(19,""+transNo1+"");
                    pstmt25.setString(20,"false");
                    pstmt25.setString(21,"false");
                    pstmt25.setString(22,"false");
                    pstmt25.setString(23,user);
                    pstmt25.setString(24,jTextField14.getText());
                    pstmt25.setString(25,jTextField81.getText());
                    pstmt25.setString(26,null);
                    pstmt25.setObject(27,jTable11.getValueAt(k,1).toString());
                    pstmt25.executeUpdate();
             
                    for (int s = 0; s < jTable11.getRowCount(); s++){
                        if (jTable11.getModel().getValueAt(s,0) == "Consultancy Fee"){
                            this.jDialog31.setVisible(true);
                        }
                    }
             
             
                }
            }
            java.sql.PreparedStatement pstmt41 = connectDB.prepareStatement("UPDATE hp_pharmacy SET paid ='true' WHERE patient_no = '"+jTextField9.getText()+"'");
            pstmt41.executeUpdate();
            java.sql.PreparedStatement pstmt411 = connectDB.prepareStatement("UPDATE hp_patient_billing SET paid ='true' WHERE patient_no = '"+jTextField9.getText()+"'");
            pstmt411.executeUpdate();
             
            connectDB.commit();
            connectDB.setAutoCommit(true);
             
             */
            
            // jTextField11.setText("");
            //    jTextField21.setText("");
            //    jTextField31.setText("0.00");
          /*
            for (int t = 0; t < jTable2.getRowCount(); t++ ) {
                for (int r = 0; r < jTable2.getColumnCount(); r++ ) {
                    jTable2.getModel().setValueAt(null,t,r);
                }
            }
           */
            
            //   InPatientsReceiptsPdf policy = new InPatientsReceiptsPdf();
            //   policy.InPatientsReceiptsPdf(connectDB, jTextField9.getText(),jTextField20.getText(),jTextField17.getText(),receiptNo1,this.jComboBox411.getSelectedItem().toString(),jTextField221.getText(),this.jTextField1.getText());
            
           /*
            for (int s = 0; s < jTable11.getRowCount(); s++ ) {
                for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                    jTable11.getModel().setValueAt(null,s,r);
                }
            }
            */
            
            // jLabel7.setForeground(java.awt.Color.blue);
            //jLabel7.setText("Insert successful");
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }            // Add your handling code here:
    }//GEN-LAST:event_jButton221ActionPerformed
    
    private void jButton4111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4111ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4111ActionPerformed
    
    private void jButton3111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3111ActionPerformed
        nameTxt.setText("");
        patientNoTxt.setText("");
        patientNameTxt.setText("");
        receiptNoTxt.setText("");
        visitIdTxt.setText("");
        receiptAmountTxt.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3111ActionPerformed
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.receiptDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    public String getVisitID(String patient_no){
        visitId="-";
        try {
            // String visitID_="-";
           java.sql.Statement stmtBill= connectDB.createStatement();
           java.sql.ResultSet rsetTableBill = stmtBill.executeQuery("SELECT distinct visit_id FROM hp_admission WHERE patient_no = '"+patient_no+"' and check_out=false limit 1 ");
           
                 while (rsetTableBill.next()) {
                    
                     visitId = rsetTableBill.getString(1);
                     
                     System.out.println(" visit id ["+visitId+"]");
                 }
                 
        } catch (SQLException ex) {
            Logger.getLogger(ReceiptsTransfIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        return visitId;
    }
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        this.okayButton.setEnabled(true);
        
        int j = 0;
        int i = 0;
        int getReceiptNo = 0;
        double totalAmount = 0.00;
        String patientNo = null;
        
        
//        patientNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
         receiptNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
//        nameTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString());
        
        try {
                        
            java.sql.Statement stmt111 = connectDB.createStatement();
            java.sql.ResultSet rsetTable11 = stmt111.executeQuery("SELECT count(patient_no) FROM ac_cash_collection WHERE patient_no = '"+patientNoTxt.getText()+"'");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            
            java.sql.Statement stmt111d = connectDB.createStatement();
            java.sql.ResultSet rsetTable11d = stmt111d.executeQuery("SELECT cash_point,shift_no,date,transaction_no FROM ac_cash_collection WHERE receipt_no = '"+receiptNoTxt.getText()+"'");
            
            while (rsetTable11d.next()) {
                cashPointTxt.setText(rsetTable11d.getObject(1).toString());
                shiftNoTxt.setText(rsetTable11d.getObject(2).toString());
                dateTxt.setText(rsetTable11d.getObject(3).toString());
                referenceNoTxt.setText(rsetTable11d.getObject(4).toString());
            }
           
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select activity_code,description  FROM ac_cash_collection WHERE receipt_no = '"+receiptNoTxt.getText()+"'");
            
            while (rset.next()){
                jTextField3.setText(rset.getObject(1).toString());
                jTextField4.setText(rset.getObject(2).toString());
            }
            
            
            java.sql.Statement stmt11 = connectDB.createStatement();
            java.sql.ResultSet rset11 = stmt11.executeQuery("SELECT sum(debit),payment_mode,date FROM ac_cash_collection WHERE  receipt_no  = '"+receiptNoTxt.getText()+"' group by payment_mode,date");
            while (rset11.next()){
                
                paymentModeTxt.setText(rset11.getObject(2).toString());
                dateTxt.setText(rset11.getObject(3).toString());
            }
           
            
         
            if(transferPatientToPatientChk.isSelected()){
                if(billPaymentRdi.isSelected()){
            java.sql.Statement stmtBill = connectDB.createStatement();
         //   java.sql.ResultSet rsetTableBill = stmtBill.executeQuery("SELECT count(requisition_no), sum(credit-debit),visit_id FROM hp_patient_card WHERE patient_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString()+"' and requisition_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString()+"' and invoice_no not ilike 'IP%' group by 3 having sum(credit-debit)>0");
            java.sql.ResultSet rsetTableBill = stmtBill.executeQuery("SELECT count(receipt_no), sum(credit-debit),voucher_no FROM ac_ledger WHERE receipt_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString()+"' group by 3 having sum(credit-debit)>0 ");
            while (rsetTableBill.next()) {
                getReceiptNo = rsetTableBill.getInt(1);
                totalAmount = rsetTableBill.getDouble(2);
                //visitId = rsetTableBill.getString(3);
                visitId = getVisitID(patientNo);
                
                System.out.println("Receipts: ["+getReceiptNo+"] Amount: ["+totalAmount+"] visit id ["+visitId+"]");
            }
         } else if(depositRdi.isSelected()){
            java.sql.Statement stmtPp = connectDB.createStatement();
            java.sql.ResultSet rsetTablePp = stmtPp.executeQuery("select count(receipt_no),sum(credit-debit),voucher_no from ac_ledger WHERE patient_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString()+"' and receipt_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString()+"' group by 3 having sum(credit-debit)>0");
            
            while (rsetTablePp.next()) {
                getReceiptNo = rsetTablePp.getInt(1);
                totalAmount = rsetTablePp.getDouble(2);
                visitId = rsetTablePp.getString(3);
            }
         }
            
         }else if(transferPatientToDebtorChk.isSelected()){
            java.sql.Statement stmtBill = connectDB.createStatement();
            java.sql.ResultSet rsetTableBill = stmtBill.executeQuery("SELECT count(requisition_no), sum(credit-debit),visit_id FROM hp_patient_card WHERE patient_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString()+"' and requisition_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString()+"' and invoice_no not ilike 'IP%' group by 3 having sum(credit-debit)>0");
            
            while (rsetTableBill.next()) {
                getReceiptNo = rsetTableBill.getInt(1);
                totalAmount = rsetTableBill.getDouble(2);
                visitId = rsetTableBill.getString(3);
            }
         } else if(transferDebtorToPatientChk.isSelected()){
            java.sql.Statement stmt111dx = connectDB.createStatement();
            java.sql.ResultSet rsetTable11dx = stmt111dx.executeQuery("SELECT account_no FROM ac_debtors WHERE receipt_no ilike '"+receiptNoTxt.getText()+"'");
            
            while (rsetTable11dx.next()) {
                patientNoTxt.setText(rsetTable11dx.getObject(1).toString());
                patientNo = rsetTable11dx.getObject(1).toString();
                visitId = rsetTable11dx.getString(1);
            }
            
            java.sql.Statement stmtdebt = connectDB.createStatement();
            java.sql.ResultSet rsetTabledebt = stmtdebt.executeQuery("SELECT count(receipt_no), sum(credit-debit) FROM ac_debtors WHERE receipt_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString()+"' having sum(credit-debit)>0");
           // java.sql.ResultSet rsetTabledebt = stmtdebt.executeQuery("SELECT count(receipt_no), sum(credit-debit) FROM ac_ledger WHERE receipt_no = '"+jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString()+"' having sum(credit-debit)>0");
         //   k
            while (rsetTabledebt.next()) {
                getReceiptNo = rsetTabledebt.getInt(1);
                totalAmount = rsetTabledebt.getDouble(2);
                
                System.out.println("Receipts: ["+getReceiptNo+"] Amount: ["+totalAmount+"]");
                
            }
         } 
            
         if(getReceiptNo>0){
             if(transferDebtorToPatientChk.isSelected()){
             patientNoTxt.setText(patientNo);    
             } else {
            patientNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
            } 
            nameTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2).toString()); 
            receiptAmountTxt.setText(java.lang.Double.valueOf(totalAmount).toString());
            visitDonorIdTxt.setText(visitId);
            }
         
         else{
            javax.swing.JOptionPane.showMessageDialog(this, "Can't Find This Receipt in the selected Option.\n"
                    + "Either Receipt Already fully transfered from this Patient/debtors\n OR Payment Type/Transfer Type Is Wrong!!","ERROR Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            receiptDialog.dispose();  
            }  
             
            
   
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            
        }
       
        receiptDialog.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        if(transferPatientToPatientChk.isSelected() || transferPatientToDebtorChk.isSelected() || transferPatientToConsultantChk.isSelected() || transferDebtorToPatientChk.isSelected()){
         if(jTextField11.getCaretPosition() > 5){
            
//            System.out.println("Nothing");
//        }else{
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB,"SELECT DISTINCT receipt_no as name,patient_no,dealer from ac_cash_collection where receipt_no ILIKE '"+jTextField11.getText()+"%' group by 1,2,3 having sum(debit-credit)>0 order by receipt_no"));
            
            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);
            
        }
      }else{
        javax.swing.JOptionPane.showMessageDialog(this, "You Must Select Receipt Transfer Type First!!","ERROR Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            receiptDialog.dispose();    
        }
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.receiptNoTxt.getLocationOnScreen();
        
        receiptDialog.setSize(400,200);
        
        receiptDialog.setLocation(point);
        
        receiptDialog.setVisible(true);
        
        
        
    }
    private void okayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okayButtonActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+datePicker1.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            try{
                String glAcc = null;
                String receiptNo1 = null;
                String actCode1 = null;
                String glCode1 = null;
                String transNo1 = null;
                String actNames1 = null;
                String patientAcc = null;
                String user = null;
                String AccDesc = null;
                String name = null;
                String rcode = null;
                String rname = null;
                //   String glAcc = null;
                String Activity = null;
                // String userName = null;
                String voucherNo = null;
                String visitid = null;
                String Stock = null;
                String voucNo = null;
                String accountCode = null;
                String TransNo = null;
                String glType = null;
                int vid = 0;
                int refere = 0;
                String debts = null;
                String dcode = null;
                String payer = null;
                String chq = null;
                java.sql.Savepoint registerSavePoint = null;
                try {
                    connectDB.setAutoCommit(false);
                    registerSavePoint = connectDB.setSavepoint("registration");
                } catch (java.sql.SQLException ex) {
                    ex.printStackTrace();
                }
                
                try {
                    
                    
                    java.sql.Statement stm12 = connectDB.createStatement();
                    java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
                    while (rse12.next()){
                        
                        patientAcc = rse12.getObject(1).toString();
                        AccDesc = rse12.getObject(2).toString();
                        user = rse12.getObject(3).toString();
                    }
                    java.sql.Statement stm1211 = connectDB.createStatement();
                    java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                    while (rse1211.next()){
                        rname = rse1211.getObject(1).toString();
                        rcode = rse1211.getObject(2).toString();
                    }
                    
                    java.sql.Statement stm1211d = connectDB.createStatement();
                    java.sql.ResultSet rse1211d = stm1211d.executeQuery("select activity,code from pb_activity where activity_category ='DA'");
                    while (rse1211d.next()){
                        debts = rse1211d.getObject(1).toString();
                        dcode = rse1211d.getObject(2).toString();
                    }
                    java.sql.Statement pss = connectDB.createStatement();
                    java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                    while (rss.next()){
                        transNo1 = rss.getObject(1).toString();
                    }
                    
                    java.sql.Statement pss2 = connectDB.createStatement();
                    java.sql.ResultSet rss2 = pss2.executeQuery("select count(reference) from hp_patient_card where reference = '"+referenceNoTxt.getText()+"'");
                    while (rss2.next()){
                        refere = rss2.getInt(1);
                    }
                    
                    java.sql.Statement pss2c = connectDB.createStatement();
                    java.sql.ResultSet rss2c = pss2c.executeQuery("select cheque_no from ac_cash_collection where receipt_no = '"+receiptNoTxt.getText()+"'");
                    while (rss2c.next()){
                        chq = rss2c.getString(1);
                    }
                    if(transferPatientToDebtorChk.isSelected()){
                        java.sql.Statement pss2s = connectDB.createStatement();
                        java.sql.ResultSet rss2s = pss2s.executeQuery("select payer_name from ac_schemes where account_no = '"+patientAccountNoTxt.getText()+"'");
                        while (rss2s.next()){
                            payer = rss2s.getString(1);
                        }
                    }else{
                        if(transferPatientToDebtorChk.isSelected()){
                            java.sql.Statement pss2s = connectDB.createStatement();
                            java.sql.ResultSet rss2s = pss2s.executeQuery("select payer_name from ac_schemes where account_no = '"+patientNoTxt.getText()+"'");
                            while (rss2s.next()){
                                payer = rss2s.getString(1);
                            }
                        }
                    }
             
                    System.out.println(actNames1);
                    if(transferPatientToPatientChk.isSelected()){
                        java.sql.PreparedStatement pstmtR = connectDB.prepareStatement("select activity_code from ac_cash_collection where receipt_no = ?");
                        pstmtR.setString(1, receiptNoTxt.getText());
                        java.sql.ResultSet rsetR = pstmtR.executeQuery();
                        String activityCode = "";
                        while(rsetR.next()){
                           activityCode = rsetR.getString(1);
                           
                        }
                        if(billPaymentRdi.isSelected()){
                        java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                        //
                        if(patientNoTxt.getText().equalsIgnoreCase(patientAccountNoTxt.getText()))
                        {pstmtx.setString(1,patientNoTxt.getText()+"-");}
                        else 
                        {pstmtx.setString(1,patientNoTxt.getText());}
                        
                        pstmtx.setObject(2,"Receipt");
                        pstmtx.setObject(3,"Cash");
                        pstmtx.setObject(4,paymentModeTxt.getText());
                        pstmtx.setString(5,transNo1);
                        pstmtx.setString(7,"");
                        pstmtx.setString(6,"");
                        pstmtx.setString(8,"");
                        pstmtx.setString(9,"");
                        pstmtx.setDate(10,null);
                        pstmtx.setString(11,"");
                        pstmtx.setDouble(12,java.lang.Double.valueOf(receiptAmountTxt.getText()));
                        pstmtx.setDouble(13,0.00);
                        pstmtx.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                        pstmtx.setObject(15,patientAcc);
                        pstmtx.setString(16,"REC trans to "+patientAccountNoTxt.getText());
                        pstmtx.setDouble(17,1);
                        pstmtx.setObject(18,"");
                        pstmtx.setBoolean(19,false);
                        pstmtx.setString(20,"Receipt");
                        pstmtx.setBoolean(21,true);
                        pstmtx.setString(22,AccDesc);
                        pstmtx.setString(23,visitId);
                        pstmtx.setString(24,user);
                        pstmtx.setString(25,cashPointTxt.getText());
                        pstmtx.setString(26,"IP");
                        pstmtx.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        
                        if(patientNoTxt.getText().equalsIgnoreCase(patientAccountNoTxt.getText()))
                        {pstmtx.setString(28,visitId+"_");}
                        else
                        {pstmtx.setString(28,visitId);}
                        pstmtx.setString(29,receiptNoTxt.getText());
                        pstmtx.executeUpdate();
                        
                        java.sql.PreparedStatement pstmtnext = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                        pstmtnext.setString(1,patientAccountNoTxt.getText());
                        pstmtnext.setObject(2,"Receipt");
                        pstmtnext.setObject(3,"Cash");
                        pstmtnext.setObject(4,paymentModeTxt.getText());
                        pstmtnext.setString(5,transNo1);
                        pstmtnext.setString(7,"");
                        pstmtnext.setString(6,"");
                        pstmtnext.setString(8,"");
                        pstmtnext.setString(9,"");
                        pstmtnext.setDate(10,null);
                        pstmtnext.setString(11,"");
                        pstmtnext.setDouble(13,java.lang.Double.valueOf(receiptAmountTxt.getText()));
                        pstmtnext.setDouble(12,0.00);
                        pstmtnext.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                        pstmtnext.setObject(15,patientAcc);
                        pstmtnext.setString(16,"Rec trans FROM "+patientNoTxt.getText());
                        pstmtnext.setDouble(17,1);
                        pstmtnext.setObject(18,"");
                        pstmtnext.setBoolean(19,false);
                        pstmtnext.setString(20,"Receipt");
                        pstmtnext.setBoolean(21,true);
                        pstmtnext.setString(22,AccDesc);
                        pstmtnext.setString(23,visitIdTxt.getText());
                        pstmtnext.setString(24,user);
                        pstmtnext.setString(25,cashPointTxt.getText());
                        pstmtnext.setString(26,"IP");
                        pstmtnext.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmtnext.setString(28,visitIdTxt.getText());
                        pstmtnext.setString(29,receiptNoTxt.getText());
                        pstmtnext.executeUpdate();
                        }else if(depositRdi.isSelected())   {
 
                        java.sql.PreparedStatement pstmtx1 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                        pstmtx1.setString(1,activityCode);
                        pstmtx1.setObject(2,"Receipt");
                        pstmtx1.setObject(3,patientAccountNoTxt.getText());
                        pstmtx1.setObject(4,patientNameTxt.getText());
                        pstmtx1.setString(5,"PATIENT DEPOSIT TRANSFER");
                        pstmtx1.setString(7,nameTxt.getText());
                        pstmtx1.setString(6,visitIdTxt.getText());
                        pstmtx1.setString(8,"IP");
                        pstmtx1.setString(9,"");
                        pstmtx1.setString(10,"Cash");
                        pstmtx1.setString(11,"");
                        pstmtx1.setString(12,receiptNoTxt.getText());
                        pstmtx1.setString(13,"");
                        pstmtx1.setString(14, "Receipt trans FROM "+patientNoTxt.getText());
                        pstmtx1.setString(15, "Unutilized patient deposit");
                        pstmtx1.setDouble(17,Double.parseDouble(receiptAmountTxt.getText()));
                        pstmtx1.setDouble(16,0.00);
                        pstmtx1.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)));
                        pstmtx1.setString(19,transNo1);
                        pstmtx1.setBoolean(20,false);
                        pstmtx1.setBoolean(21,false);
                        pstmtx1.setBoolean(22,false);
                        pstmtx1.setString(23,com.afrisoftech.lib.UserName.getLoginName(connectDB));
                        pstmtx1.setString(24,cashPointTxt.getText());
                        pstmtx1.setString(25,shiftNoTxt.getText());
                        pstmtx1.setTimestamp(26, com.afrisoftech.lib.ServerTime.getSQLTimeStamp(connectDB));//new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmtx1.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmtDep = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                        pstmtDep.setString(1,activityCode);
                        pstmtDep.setObject(2,"Receipt");
                        pstmtDep.setObject(3,patientNoTxt.getText());
                        pstmtDep.setObject(4,nameTxt.getText());
                        pstmtDep.setString(5,"PATIENT DEPOSIT TRANSFER");
                        pstmtDep.setString(7,nameTxt.getText());
                        pstmtDep.setString(6,visitDonorIdTxt.getText());
                        pstmtDep.setString(8,"IP");
                        pstmtDep.setString(9,"");
                        pstmtDep.setString(10,"Cash");
                        pstmtDep.setString(11,"");
                        pstmtDep.setString(12,receiptNoTxt.getText());
                        pstmtDep.setString(13,"");
                        pstmtDep.setString(14, "Receipt trans to "+patientAccountNoTxt.getText());
                        pstmtDep.setString(15, "Unutilized patient deposit");
                        pstmtDep.setDouble(16,Double.parseDouble(receiptAmountTxt.getText()));
                        pstmtDep.setDouble(17,0.00);
                        pstmtDep.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)));
                        pstmtDep.setString(19,transNo1);
                        pstmtDep.setBoolean(20,false);
                        pstmtDep.setBoolean(21,false);
                        pstmtDep.setBoolean(22,false);
                        pstmtDep.setString(23,com.afrisoftech.lib.UserName.getLoginName(connectDB));
                        pstmtDep.setString(24,cashPointTxt.getText());
                        pstmtDep.setString(25,shiftNoTxt.getText());
                        pstmtDep.setTimestamp(26, com.afrisoftech.lib.ServerTime.getSQLTimeStamp(connectDB));//new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmtDep.executeUpdate();
                        }
                        
                    }else{
                        if(transferPatientToDebtorChk.isSelected()){
                            java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                            pstmtx.setString(1,patientNoTxt.getText());
                            pstmtx.setObject(2,"Receipt");
                            pstmtx.setObject(3,"Cash");
                            pstmtx.setObject(4,paymentModeTxt.getText());
                            pstmtx.setString(5,transNo1);
                            pstmtx.setString(7,"");
                            pstmtx.setString(6,"");
                            pstmtx.setString(8,"");
                            pstmtx.setString(9,"");
                            pstmtx.setDate(10,null);
                            pstmtx.setString(11,"");
                            pstmtx.setDouble(12,java.lang.Double.valueOf(receiptAmountTxt.getText()));//debit
                            pstmtx.setDouble(13,0.00);//credit
                            pstmtx.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmtx.setObject(15,patientAcc);
                            pstmtx.setString(16,"Rec trans to :"+patientAccountNoTxt.getText());
                            pstmtx.setDouble(17,1);
                            pstmtx.setObject(18,"");
                            pstmtx.setBoolean(19,false);
                            pstmtx.setString(20,"Receipt");
                            pstmtx.setBoolean(21,true);
                            pstmtx.setString(22,AccDesc);
                            pstmtx.setString(23,"");
                            pstmtx.setString(24,user);
                            pstmtx.setString(25,cashPointTxt.getText());
                            pstmtx.setString(26,"IP");
                            pstmtx.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmtx.setString(28,visitIdTxt.getText());
                            pstmtx.setString(29,receiptNoTxt.getText());
                            pstmtx.executeUpdate();
                            
                            java.sql.PreparedStatement pstmtx1 = connectDB.prepareStatement("insert into ac_debtors values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                            pstmtx1.setString(1,dcode);
                            pstmtx1.setObject(2,payer);
                            pstmtx1.setObject(3,"Receipt transfer");
                            pstmtx1.setObject(4,"");
                            pstmtx1.setString(5,patientNameTxt.getText());
                            pstmtx1.setString(7,patientAccountNoTxt.getText());
                            pstmtx1.setString(6,"Receipt Transfer from "+patientNoTxt.getText());
                            pstmtx1.setString(8,receiptNoTxt.getText());
                            pstmtx1.setString(9,chq);
                            pstmtx1.setString(10,"");
                            pstmtx1.setString(11,transNo1);
                            pstmtx1.setString(12,"Receipt Transfer");
                            pstmtx1.setDouble(14,java.lang.Double.valueOf(receiptAmountTxt.getText()));//credit
                            pstmtx1.setDouble(13,0.00);//debit
                            pstmtx1.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmtx1.setString(16,chq);
                            pstmtx1.setString(17,debts);
                            pstmtx1.setBoolean(18,true);
                            pstmtx1.setBoolean(19,true);
                            pstmtx1.setString(20,user);
                            pstmtx1.setString(21,cashPointTxt.getText());
                            pstmtx1.setDouble(22,0.00);
                            pstmtx1.setBoolean(23,true);
                            pstmtx1.setString(25,"");
                            pstmtx1.setDouble(24,java.lang.Double.valueOf(receiptAmountTxt.getText()));
                            pstmtx1.setDate(26,null);
                           
                        }else{
                            if(transferDebtorToPatientChk.isSelected()){
                                java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                pstmtx.setString(1,patientAccountNoTxt.getText());
                                pstmtx.setObject(2,"Receipt");
                                pstmtx.setObject(3,"Cash");
                                pstmtx.setObject(4,paymentModeTxt.getText());
                                pstmtx.setString(5,transNo1);
                                pstmtx.setString(7,"");
                                pstmtx.setString(6,"");
                                pstmtx.setString(8,"");
                                pstmtx.setString(9,"");
                                pstmtx.setDate(10,null);
                                pstmtx.setString(11,"");
                                pstmtx.setDouble(13,java.lang.Double.valueOf(receiptAmountTxt.getText()));
                                pstmtx.setDouble(12,0.00);
                                pstmtx.setDate(14,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmtx.setObject(15,patientAcc);
                                pstmtx.setString(16,"Rec trans from :"+patientNoTxt.getText());
                                pstmtx.setDouble(17,1);
                                pstmtx.setObject(18,"");
                                pstmtx.setBoolean(19,false);
                                pstmtx.setString(20,"Receipt");
                                pstmtx.setBoolean(21,true);
                                pstmtx.setString(22,AccDesc);
                                pstmtx.setString(23,"");
                                pstmtx.setString(24,user);
                                pstmtx.setString(25,cashPointTxt.getText());
                                pstmtx.setString(26,"IP");
                                pstmtx.setTimestamp(27,new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                pstmtx.setString(28,visitIdTxt.getText());
                                pstmtx.setString(29,receiptNoTxt.getText());
                                pstmtx.executeUpdate();
                                
                                java.sql.PreparedStatement pstmtx1 = connectDB.prepareStatement("insert into ac_debtors values(?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                pstmtx1.setString(1,dcode);
                                pstmtx1.setObject(2,payer);
                                pstmtx1.setObject(3,"Receipt transfer");
                                pstmtx1.setObject(4,"");
                                pstmtx1.setString(5,nameTxt.getText());
                                pstmtx1.setString(7,patientNoTxt.getText());
                                pstmtx1.setString(6,"Receipt Transfer to "+patientAccountNoTxt.getText());
                                pstmtx1.setString(8,receiptNoTxt.getText());
                                pstmtx1.setString(9,chq);
                                pstmtx1.setString(10,"");
                                pstmtx1.setString(11,transNo1);
                                pstmtx1.setString(12,"Receipt Transfer");
                                pstmtx1.setDouble(13,java.lang.Double.valueOf(receiptAmountTxt.getText()));
                                pstmtx1.setDouble(14,0.00);
                                pstmtx1.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmtx1.setString(16,chq);
                                pstmtx1.setString(17,debts);
                                pstmtx1.setBoolean(18,true);
                                pstmtx1.setBoolean(19,true);
                                pstmtx1.setString(20,user);
                                pstmtx1.setString(21,cashPointTxt.getText());
                                pstmtx1.setDouble(22,0.00);
                                pstmtx1.setBoolean(23,true);
                                pstmtx1.setString(25,"");
                                pstmtx1.setDouble(24,java.lang.Double.valueOf(receiptAmountTxt.getText()));
                                pstmtx1.setDate(26,null);
                                pstmtx1.executeUpdate();
                            
                            }
                        }
                    }
                    //}
                    
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    
                    this.okayButton.setEnabled(false);
                    javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                    
                    //   jButton1111.setEnabled(false);
                }catch(java.sql.SQLException sq){
                    
                    try {
                        connectDB.rollback(registerSavePoint);
                    }catch (java.sql.SQLException sql){
                        sql.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    sq.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    
                }
            } catch(java.lang.Exception ex) {
                ex.printStackTrace();
                System.out.println(ex.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_okayButtonActionPerformed

    private void referenceNoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_referenceNoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_referenceNoTxtActionPerformed

    private void transferPatientToPatientChkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_transferPatientToPatientChkItemStateChanged
        // TODO add your handling code here:
       billPaymentRdi.setEnabled(true);
       depositRdi.setEnabled(true);
    }//GEN-LAST:event_transferPatientToPatientChkItemStateChanged

    private void transferDebtorToPatientChkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_transferDebtorToPatientChkItemStateChanged
        // TODO add your handling code here:
        billPaymentRdi.setEnabled(false);
       depositRdi.setEnabled(false);
    }//GEN-LAST:event_transferDebtorToPatientChkItemStateChanged

    private void transferPatientToDebtorChkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_transferPatientToDebtorChkItemStateChanged
        // TODO add your handling code here:
        billPaymentRdi.setEnabled(false);
       depositRdi.setEnabled(false);
    }//GEN-LAST:event_transferPatientToDebtorChkItemStateChanged

    private void transferPatientToConsultantChkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_transferPatientToConsultantChkItemStateChanged
        // TODO add your handling code here:
        billPaymentRdi.setEnabled(false);
       depositRdi.setEnabled(false);
    }//GEN-LAST:event_transferPatientToConsultantChkItemStateChanged
    
    public java.lang.String getShiftNumber() {
        
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            
            while (rset.next()) {
                
                shift_no = rset.getString(1);
                
            }
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        return shift_no;
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton billPaymentRdi;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField cashPointTxt;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JRadioButton depositRdi;
    private javax.swing.JButton jButton221;
    private javax.swing.JButton jButton3111;
    private javax.swing.JButton jButton4111;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel1211;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2122;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel3121;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53111;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel711;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel911;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel212;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel511;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel711;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator1111;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField152;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField611;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton okayButton;
    private javax.swing.JPanel panelPayment;
    private javax.swing.JTextField patientAccountNoTxt;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JTextField patientNoTxt;
    private javax.swing.JTextField paymentModeTxt;
    private javax.swing.JTextField receiptAmountTxt;
    private javax.swing.JDialog receiptDialog;
    private javax.swing.JTextField receiptNoTxt;
    private javax.swing.JTextField referenceNoTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField shiftNoTxt;
    private javax.swing.JCheckBox transferDebtorToPatientChk;
    private javax.swing.JCheckBox transferPatientToConsultantChk;
    private javax.swing.JCheckBox transferPatientToDebtorChk;
    private javax.swing.JCheckBox transferPatientToPatientChk;
    private javax.swing.JTextField visitDonorIdTxt;
    private javax.swing.JTextField visitIdTxt;
    // End of variables declaration//GEN-END:variables
    
}
