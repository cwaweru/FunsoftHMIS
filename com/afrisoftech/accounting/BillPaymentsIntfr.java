/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.accounting;

/**
 *
 * @author  root
 */
public class BillPaymentsIntfr extends javax.swing.JInternalFrame {

    /** Creates new form loanpymntintfr */
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox2;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    private javax.swing.JComboBox cmbox21;
    private final javax.swing.JTextField comboTextField = new javax.swing.JTextField();
    javax.swing.ComboBoxModel mainComboBoxModel;
    javax.swing.ComboBoxModel oldComboBox1311Model;
    private boolean threadCheck = false;
    private boolean refreshStatus;
    String Categ = null;
    String desc = null;
    String billNo = null;
    String transNo = null;
    String payMode = null;
    String patientAcc = null;
    String cardNo = null;
    String AccDesc = null;
    String scheme = null;
    String cardName = null;
    String isurer = null;
    String expDate = null;
    String staffNo = null;
    String glAcc = null;
    String receiptNo1 = null;
    String actCode1 = null;
    String glCode1 = null;
    String bankAcc1 = null;
    String transNo1 = null;
    String actNames1 = null;
    String patCat1 = null;
    String patientAcc1 = null;
    String user = null;
    String glAcc1 = null;
    String accDesc1 = null;
    String name = null;
    String rname = null;
    String rcode = null;
    String cashPoint = null;
    java.sql.Connection connectDB = null;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;
    javax.swing.table.TableModel tableModel;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private boolean DirectRev;
    DispatchThread dispatchThread;
    private boolean printReceipt = false;
    java.awt.event.ActionEvent evt1;

    public BillPaymentsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

//        dispatchThread = new DispatchThread();

        refreshStatus = true;

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        System.out.println("Cashpoint : " + System.getProperty("cashpoint"));

        //        System.out.println("Shift No. : "+getShiftMunber());

        //jTextField14.setText(System.getProperty("cashpoint"));

        jTextField14.setText(getCashPoint());
        jTextField81.setText(getShiftNumber());

        //        startRunning();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jDialog31 = new javax.swing.JDialog();
        //jDialog3.setSize(600,400);
        jPanel121 = new javax.swing.JPanel();
        jPanel1111 = new javax.swing.JPanel();
        jLabel66111 = new javax.swing.JLabel();
        jTextField14111 = new javax.swing.JTextField();
        jLabel3111 = new javax.swing.JLabel();
        jTextField4111 = new javax.swing.JTextField();
        jPanel312 = new javax.swing.JPanel();
        jLabel582211 = new javax.swing.JLabel();
        jLabel5821111 = new javax.swing.JLabel();
        jTextField3111 = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jTextField1611 = new javax.swing.JTextField();
        searchButton13 = new javax.swing.JButton();
        jSeparator1111 = new javax.swing.JSeparator();
        jButton301111 = new javax.swing.JButton();
        jButton252111 = new javax.swing.JButton();
        jButton1111 = new javax.swing.JButton();
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new com.afrisoftech.dbadmin.JTable();
        jButton522 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new com.afrisoftech.dbadmin.JTable();
        jButton921 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField111 = new javax.swing.JTextField();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel212 = new javax.swing.JLabel();
        jLabel312 = new javax.swing.JLabel();
        jTextField211 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField921 = new javax.swing.JTextField();
        searchButton21 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jPanel3.setVisible(false);
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jPanel31.setVisible(false);
        jLabel21 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField52 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        jTextField511 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable(){
            /* Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        *

        {*/
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        tableModel = jTable11.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        jPanel10 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel531 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        jPanel422 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jButton221 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton112 = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchScrollPaneMouseClicked(evt);
            }
        });

        jSearchTable.setShowHorizontalLines(false);
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Cancel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        jTextField113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField113ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Cancel");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jDialog31.setTitle("Enter Doctors Fee");
        jDialog31.setSize(400,200);
        jDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel121.setLayout(new java.awt.GridBagLayout());

        jPanel1111.setBackground(new java.awt.Color(130, 232, 255));
        jPanel1111.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Doctor's details here"));
        jPanel1111.setLayout(new java.awt.GridBagLayout());

        jLabel66111.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel1111.add(jLabel66111, gridBagConstraints);

        jTextField14111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1111.add(jTextField14111, gridBagConstraints);

        jLabel3111.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel1111.add(jLabel3111, gridBagConstraints);

        jTextField4111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1111.add(jTextField4111, gridBagConstraints);

        jPanel312.setBackground(new java.awt.Color(204, 204, 255));
        jPanel312.setLayout(new java.awt.GridBagLayout());

        jLabel582211.setText("Doctor's No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jLabel582211, gridBagConstraints);

        jLabel5821111.setText("Doc. Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jLabel5821111, gridBagConstraints);

        jTextField3111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jTextField3111, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jTextField1611.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jTextField1611, gridBagConstraints);

        searchButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton13.setToolTipText("Search");
        searchButton13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton13.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton13.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel41.add(searchButton13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel312.add(jPanel41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jPanel312, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel121.add(jPanel1111, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jSeparator1111, gridBagConstraints);

        jButton301111.setMnemonic('O');
        jButton301111.setText("Ok");
        jButton301111.setToolTipText("Click here to enter data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jButton301111, gridBagConstraints);

        jButton252111.setMnemonic('c');
        jButton252111.setText("Close");
        jButton252111.setToolTipText("Click here to close window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jButton252111, gridBagConstraints);

        jButton1111.setMnemonic('h');
        jButton1111.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel121.add(jButton1111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog31.getContentPane().add(jPanel121, gridBagConstraints);

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jTextField1132.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1132ActionPerformed(evt);
            }
        });
        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });
        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1121CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel31.add(jTextField1121, gridBagConstraints);

        jSearchTable31.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable31MouseClicked(evt);
            }
        });
        jSearchScrollPane31.setViewportView(jSearchTable31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

        jButton921.setText("Close");
        jButton921.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton921ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel31.add(jButton921, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("RECEIPTs");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel7.add(jTextField6, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Patient here"));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel91.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel91, gridBagConstraints);

        jLabel11.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel21.add(jTextField111, gridBagConstraints);

        jComboBox11.setModel(//com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct upper(main_service)  as main_service from pb_operating_parameters  order by main_service")
            com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION ALL SELECT distinct UPPER(activity) FROM pb_activity WHERE category_class ilike 'plid' EXCEPT select main_service from pb_operating_parameters WHERE category = 'CA' ORDER BY 1"));
        jComboBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox11ActionPerformed(evt);
            }
        });
        jComboBox11.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jComboBox11CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jComboBox11, gridBagConstraints);

        jLabel212.setText("Revenue Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel212, gridBagConstraints);

        jLabel312.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel312, gridBagConstraints);

        jTextField211.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel21.add(jTextField211, gridBagConstraints);

        jTextField15.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField15.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel21.add(jTextField15, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 20));
        jPanel6.setPreferredSize(new java.awt.Dimension(42, 20));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(15, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(15, 19));
        searchButton.setPreferredSize(new java.awt.Dimension(34, 19));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jPanel6, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Search By No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Search By Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jCheckBox2, gridBagConstraints);

        jCheckBox3.setBackground(new java.awt.Color(255, 204, 204));
        jCheckBox3.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBox3.setMnemonic('y');
        jCheckBox3.setText("Copay");
        jCheckBox3.setToolTipText("Click here to receipt Co_payment Patients");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jCheckBox3, gridBagConstraints);

        jCheckBox6.setForeground(new java.awt.Color(153, 0, 153));
        jCheckBox6.setText("Doctors Fees");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jCheckBox6, gridBagConstraints);

        jLabel1.setText("Rcpt. No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(251, 9, 102));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel21.add(jPanel13, gridBagConstraints);

        jLabel82.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel82, gridBagConstraints);

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel42.setMinimumSize(new java.awt.Dimension(82, 20));
        jPanel42.setPreferredSize(new java.awt.Dimension(42, 20));
        jPanel42.setLayout(new java.awt.GridBagLayout());

        jTextField921.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField921, gridBagConstraints);

        searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton21.setToolTipText("Search");
        searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton21.setMaximumSize(new java.awt.Dimension(15, 53));
        searchButton21.setMinimumSize(new java.awt.Dimension(15, 53));
        searchButton21.setPreferredSize(new java.awt.Dimension(34, 19));
        searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel21.add(jPanel42, gridBagConstraints);

        jLabel16.setText("A/C Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel21.add(jLabel16, gridBagConstraints);

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jTextField7.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel12.add(jTextField7, gridBagConstraints);

        jTextField22.setEditable(false);
        jTextField22.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField22.setMinimumSize(new java.awt.Dimension(2, 7));
        jTextField22.setPreferredSize(new java.awt.Dimension(2, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel12.add(jTextField22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jPanel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jPanel21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jSeparator11, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Cheque Details"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Cheque No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel3.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField2, gridBagConstraints);

        jLabel3.setText("Drawer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField4, gridBagConstraints);

        jLabel4.setText("Drawer's Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jTextField5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel11.add(jPanel3, gridBagConstraints);

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("Card Details"));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel21.setText("Card No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jTextField21, gridBagConstraints);

        jLabel31.setText("Card Company");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jTextField41, gridBagConstraints);

        jLabel42.setText("Card Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jLabel42, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel31.add(jTextField52, gridBagConstraints);

        jLabel411.setText("Expiry Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel31.add(jLabel411, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel31.add(jTextField511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel11.add(jPanel31, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Service", "Qty", "Price", "Total", "GL Code", "Service Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setColumnSelectionAllowed(true);
        jTable11.setDragEnabled(true);
        jTable11.setEditingColumn(1);
        jTable11.setGridColor(new java.awt.Color(153, 153, 255));
        jTable11.setPreferredSize(new java.awt.Dimension(500, 320));
        javax.swing.table.TableColumn column3 = null;
        for (int i = 0; i < 6; i++) {
            column3 = jTable11.getColumnModel().getColumn(i);
            if (i == 0) {

                column3.setPreferredWidth(500); //sport column is bigger
            } else {
                if(i == 1){
                    column3.setPreferredWidth(50);
                }else{
                    if(i == 5){
                        column3.setPreferredWidth(100);
                    }else{
                        //if (i == 2) {
                            column3.setPreferredWidth(100);
                            // }  else
                        //column.setPreferredWidth(50);
                    }
                }
            }
        }
        jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable11MouseClicked(evt);
            }
        });
        jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable11KeyReleased(evt);
            }
        });
        jScrollPane21.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel9.add(jScrollPane21, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setText("Search By Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox4, gridBagConstraints);

        buttonGroup2.add(jCheckBox5);
        jCheckBox5.setText("Search By Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox5, gridBagConstraints);

        jPanel9.add(jPanel10, new java.awt.GridBagConstraints());

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Paid By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jTextField10, gridBagConstraints);

        jLabel14.setText("Amount Paid");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(jLabel14, gridBagConstraints);

        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField12KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jTextField12, gridBagConstraints);

        jLabel531.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jLabel531, gridBagConstraints);

        jTextField31.setEditable(false);
        jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField31.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel15.add(jTextField31, gridBagConstraints);

        jLabel15.setText("Change");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(jLabel15, gridBagConstraints);

        jTextField13.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(jTextField13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel15, gridBagConstraints);

        buttonGroup3.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Normal Rate");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel9.add(jRadioButton1, gridBagConstraints);

        buttonGroup3.add(jRadioButton2);
        jRadioButton2.setText("Special Rate");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel11.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 30.0;
        jPanel7.add(jPanel11, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Payment Mode"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(jLabel10, gridBagConstraints);

        jLabel12.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(jLabel12, gridBagConstraints);

        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT initcap(payment_mode) as payment_mode from pb_paymentmodes order by payment_mode"));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jComboBox4, gridBagConstraints);

        jLabel13.setText("Gl Acc. No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jLabel13, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(jTextField8, gridBagConstraints);

        jTextField14.setEditable(false);
        jTextField14.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTextField14ComponentShown(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.5;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jTextField14, gridBagConstraints);

        jLabel131.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jLabel131, gridBagConstraints);

        jTextField81.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(jTextField81, gridBagConstraints);

        jLabel81.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jLabel81, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel5.add(datePicker11, gridBagConstraints);

        jPanel422.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel422.setLayout(new java.awt.GridBagLayout());

        jTextField92.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel422.add(jTextField92, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(14, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = -30;
        jPanel422.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel422, gridBagConstraints);

        jLabel43.setText("Manual Receipt No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(jLabel43, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel7.add(jPanel5, gridBagConstraints);

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel14.setMinimumSize(new java.awt.Dimension(80, 39));
        jPanel14.setPreferredSize(new java.awt.Dimension(80, 39));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jButton11.setMnemonic('s');
        jButton11.setText("Save");
        jButton11.setToolTipText("Click here enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jButton11, gridBagConstraints);

        jButton221.setMnemonic('p');
        jButton221.setText("RePrint");
        jButton221.setToolTipText("Click here to edit data");
        jButton221.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton221ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jButton221, gridBagConstraints);

        jButton61.setMnemonic('r');
        jButton61.setText("Remove Row");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jButton61, gridBagConstraints);

        jButton31.setMnemonic('l');
        jButton31.setText("Clear");
        jButton31.setToolTipText("Click here to clear textfields");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jButton31, gridBagConstraints);

        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.setToolTipText("Click here to close window");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jButton41, gridBagConstraints);

        jButton51.setMnemonic('h');
        jButton51.setText("Help");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jButton51, gridBagConstraints);

        jButton112.setMnemonic('a');
        jButton112.setText("Save & Print");
        jButton112.setToolTipText("Click here enter data");
        jButton112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jButton112, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel14.add(spacerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jPanel14, gridBagConstraints);

        jTabbedPane1.addTab("Registered Patients", jPanel7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 697, 560);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        System.out.println("This date is todays date");
        System.out.print("This date is todays date");

        /*java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println("This date is not printing "+datenowSql.toString());
        
        String receiptDate = null;
        
        receiptDate = datePicker11.getDate().toString();
        
        System.out.println("This date is todays date "+receiptDate.toString());
         */
// TODO add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jButton112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton112ActionPerformed

        evt1 = evt;

        printReceipt = true;

        jButton11ActionPerformed(evt);

        //       jButton221ActionPerformed(evt);

        // Add your handling code here:
    }//GEN-LAST:event_jButton112ActionPerformed

    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTextField921.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable31MouseClicked

    private void jButton921ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton921ActionPerformed
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton921ActionPerformed

    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
        if (jTextField1121.getCaretPosition() < 1) {

            System.out.println("Nothing");
        } else {
            jSearchTable31.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '" + jTextField1121.getText() + "%' order by first_name"));

            /* try {
            
            searchRowSet31.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name");
            jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet31, new org.netbeans.lib.sql.models.TableModel.Column[] {
            new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
            new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
            
            }));
             */
            jSearchTable31.setShowHorizontalLines(false);
            jSearchScrollPane31.setViewportView(jSearchTable31);


            /* } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
            }
             */
        }       // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate

    private void searchButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton21ActionPerformed
        searchButtonClickedw();        // Add your handling code here:
    }//GEN-LAST:event_searchButton21ActionPerformed
    private void searchButtonClickedw() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField921.getLocationOnScreen();

        jSearchDialog31.setSize(400, 200);

        jSearchDialog31.setLocation(point);

        jSearchDialog31.setVisible(true);



    }
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        com.afrisoftech.accounting.DoctorsFeesRctintfr other = new DoctorsFeesRctintfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jTextField12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyReleased
        float num_c = java.lang.Float.parseFloat(jTextField31.getText());
        float total_num = java.lang.Float.parseFloat(jTextField12.getText());
        // jTextField9.setText(""+total_num+"");

        // System.out.println(total_num);



        float num_d = total_num - num_c;
        jTextField13.setText("" + num_d + "");


        if (num_d < 0) {
            // java.awt.Toolkit.getDefaultToolkit().beep();
            //javax.swing.JOptionPane.showMessageDialog(this,"Invoice Amt cannot be more than Returned Amt","Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField13.setForeground(java.awt.Color.red);
            //jTextField2.setText("");
        } else {
            jTextField13.setForeground(java.awt.Color.blue);
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField12KeyReleased

    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        jTextField92.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());

        this.jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked

    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        this.jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed

    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if (jTextField1132.getCaretPosition() > 1) {
            jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select chq_no FROM pb_documents_register WHERE chq_no  ilike '" + jTextField1132.getText() + "%' and used = 'false' and doc_name ilike '%Receipt%' order by chq_no"));

            jSearchScrollPane22.setViewportView(jSearchTable22);
            System.out.println("Cannot sort out");
            /* } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
            }
             */
        }          // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate

    private void jTextField1132ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1132ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        cmbox22MouseClicked();      // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void cmbox22MouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        //java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog22.setSize(400, 200);
        jSearchDialog22.setLocation(point);
        jSearchDialog22.setVisible(true);
    }
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
//        com.afrisoftech.accounting.CopayReceiptsIntfr other = new CopayReceiptsIntfr(connectDB, pConnDB, jTextField31.getText());
//        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
//        try {
//            other.setSelected(true);
//        } catch (java.beans.PropertyVetoException pvt) {
//        }
//        other.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    private void searchButton111Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog2.dispose();
        java.awt.Point point = this.jTextField3111.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);
        jSearchDialog2.setVisible(true);


    }

    private void searchButton212Clicked() {
    }
    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        //     jComboBox1311.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0));
        //      jTextField111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        //     jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }
        //    jComboBox1311.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0));
        jTextField111.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        //       this.populateTable1(this.jTextField111.getText().toString());

        jSearchDialog2.dispose();

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select category from hp_patient_register where patient_no ='" + jTextField9.getText() + "'");
            while (rset.next()) {
                jTextField211.setText(rset.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }

        jTextField21.setText("");
        jTextField31.setText("0.00");

        this.jButton11.setEnabled(true);
        //  this.jButton11.setEnabled(false);
        this.jButton112.setEnabled(true);
        this.jButton221.setEnabled(false);

        this.populateTable1(this.jTextField9.getText());
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate

        if (this.jCheckBox1.isSelected()) {
            if (jTextField113.getCaretPosition() < 1) {

                System.out.println("Nothing");
            } else {

                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct patient_no, (second_name||' '||first_name) as patient_name from hp_patient_register where patient_no ILIKE '%" + jTextField113.getText() + "%' and last_visit >= (current_date - 100) UNION ALL select distinct patient_no,patient_name from hp_pharmacy where date_prescribed >= (current_date - 1) and patient_no ilike 'wk%' and patient_no ILIKE '%" + jTextField113.getText() + "%' and paid = false UNION ALL select distinct patient_no,patient_name from hp_patient_billing where trans_date >= (current_date - 1) and patient_no ilike 'wk%' and patient_no ILIKE '%" + jTextField113.getText() + "%' and paid = false ORDER BY patient_no"));

                jSearchTable2.setShowHorizontalLines(false);

                jSearchScrollPane2.setViewportView(jSearchTable2);

            }
        } else {

            if (jTextField113.getCaretPosition() < 1) {

                System.out.println("Nothing");
            } else {
                // try {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct patient_no, (second_name||' '||first_name) as patient_name from hp_patient_register where second_name||' '||first_name ILIKE '%" + jTextField113.getText() + "%' and last_visit >= (current_date - 100) UNION ALL select patient_no,patient_name from hp_pharmacy where date_prescribed >= (current_date - 1) and patient_no ilike 'wk%' and patient_name ILIKE '%" + jTextField113.getText() + "%'  and paid = false UNION ALL select patient_no,patient_name from hp_patient_billing where trans_date >= (current_date - 1) and patient_no ilike 'wk%' and patient_name ILIKE '%" + jTextField113.getText() + "%'  and paid = false order by patient_name"));


                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);


            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jTextField113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField113ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();
        this.jButton11.setEnabled(true);
        this.jButton112.setEnabled(true);
        this.jButton221.setEnabled(false);
// Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jComboBox11.getLocationOnScreen();

        jSearchDialog2.setSize(500, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);



    }

    public class ComboTextField extends javax.swing.JTextField implements javax.swing.ComboBoxEditor {

        public ComboTextField() {

            initComponents();

        }

        void initComponents() {

            // oldComboBox1311Model = jComboBox1311.getModel();

            // comboTextField = new javax.swing.JTextField();


            comboTextField.addKeyListener(new java.awt.event.KeyAdapter() {

                public void keyTyped(java.awt.event.KeyEvent e) {

                    if (e.getID() == java.awt.event.KeyEvent.VK_BACK_SPACE) {

                        changeComboBoxModel(comboTextField.getText());

                        System.out.println(comboTextField.getText() + " Pressed Key " + e.getKeyText(e.getKeyCode()));
                    }
                }
            });

        }

        public java.awt.Component getEditorComponent() {

            return comboTextField;

        }

        public Object getItem() {

            return comboTextField.getText();

        }

        public void setItem(Object obj) {
            //    comboTextField.setText(jComboBox1311.getSelectedItem().toString());
        }

        public void changeComboBoxModel(java.lang.String typedLetters) {



            javax.swing.DefaultComboBoxModel newComboBox1311Model = new javax.swing.DefaultComboBoxModel();

            System.out.println("ComboBox Item No. " + oldComboBox1311Model.getSize());

            /*            if (typedLetters.equals("")) {
            
            jComboBox6.setModel(oldComboBox6Model);
            
            } else {
            
             *
             */

            for (int i = 0; i < oldComboBox1311Model.getSize(); i++) {


                if (oldComboBox1311Model.getElementAt(i).toString().startsWith(typedLetters)) {

                    newComboBox1311Model.addElement(oldComboBox1311Model.getElementAt(i));

                    //                    jComboBox1311.setModel(newComboBox1311Model);

                }

            }

        }
        //      }
    }
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        //      jT.setSelectedItem(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0));

        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(1, jTable11.getSelectedRow(), 1);
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), jTable11.getSelectedRow(), 2);
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), jTable11.getSelectedRow(), 4);
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3), jTable11.getSelectedRow(), 5);
        double floatCol2 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());

        double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());

        double resVal = floatCol2 * floatCol3;


        jTable11.setValueAt(new java.lang.Float(resVal), jTable11.getSelectedRow(), 3);

        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 3);
        jTextField31.setText(java.lang.String.valueOf(totalSum));

        jSearchDialog.dispose();           // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jSearchScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchScrollPaneMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jSearchScrollPaneMouseClicked

    private void jComboBox11CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jComboBox11CaretPositionChanged
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox11CaretPositionChanged

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    /*    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
    int i = jSearchTable.getSelectedRow();
    java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();
    
    try {
    java.sql.Statement pstmt = connectDB.createStatement();
    java.sql.ResultSet rs = pstmt.executeQuery("select units from st_stock_item where description = '"+cmbox2.getSelectedItem()+"'");
    while (rs.next())
    jTable11.setValueAt(rs.getObject(1),i,2);
    
    } catch(java.sql.SQLException sqlex){
    System.out.println(sqlex.getMessage());
    }
    }
     */
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        String codeType = null;

        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT DISTINCT code_type FROM pb_patient_names");
            while (rs.next()) {
                codeType = rs.getString(1);
            }

        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
        if (codeType.equalsIgnoreCase("subcode")) {
            if (this.jCheckBox4.isSelected()) {

                if (jTextField11.getCaretPosition() < 1) {

                    System.out.println("Nothing");
                } else {
                    if (jRadioButton1.isSelected()) {

                        // jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate::numeric as rate,gl_account,code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField11.getText()+"%' AND main_service ilike '"+jComboBox11.getSelectedItem()+"' UNION ALL select product,selling_price,gl_code as service_type,product_id FROM st_stock_prices WHERE product_id ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by code"));
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,rate::numeric as rate,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE code ILIKE '%" + jTextField11.getText() + "%' AND sub_code ILIKE '%" + jTextField22.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM st_stock_prices WHERE product_id ILIKE '" + jTextField11.getText() + "%' AND sub_code ilike  '" + jTextField22.getText() + "'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by code"));
                    } else {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,anaesthetist_rate as rate,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE code ILIKE '%" + jTextField11.getText() + "%' AND sub_code ILIKE '%" + jTextField22.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM st_stock_prices WHERE product_id ILIKE '" + jTextField11.getText() + "%' AND sub_code ilike  '" + jTextField22.getText() + "'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by 2"));

                    }

                    jSearchScrollPane.setViewportView(jSearchTable);
                    System.out.println("Cannot sort out");

                }
            } else {
                if (jTextField11.getCaretPosition() < 1) {

                    System.out.println("Nothing");
                } else {
                    if (jRadioButton1.isSelected()) {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,rate::numeric,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE service_type ILIKE '%" + jTextField11.getText() + "%' AND sub_code ILIKE '%" + jTextField22.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%" + jTextField11.getText() + "%' AND sub_code ILIKE '%" + jTextField22.getText() + "%'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by 1"));
                    } else {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,anaesthetist_rate as rate,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE service_type ILIKE '%" + jTextField11.getText() + "%' AND sub_code ILIKE '%" + jTextField22.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM st_stock_prices WHERE product ILIKE '%" + jTextField11.getText() + "%' AND sub_code ILIKE '%" + jTextField22.getText() + "%'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by 1"));

                    }

                    jSearchScrollPane.setViewportView(jSearchTable);
                    System.out.println("Cannot sort out");

                }
            }
        } else {

            if (this.jCheckBox4.isSelected()) {

                if (jTextField11.getCaretPosition() < 1) {

                    System.out.println("Nothing");
                } else {
                    if (jRadioButton1.isSelected()) {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,rate::numeric as rate,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE code ILIKE '%" + jTextField11.getText() + "%' AND gl_account ILIKE '%" + jTextField7.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM stockprices WHERE product_id ILIKE '" + jTextField11.getText() + "%' AND gl_code ilike  '" + jTextField7.getText() + "'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by code"));
                    } else {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,anaesthetist_rate as rate,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE code ILIKE '%" + jTextField11.getText() + "%' AND gl_account ILIKE '%" + jTextField7.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM stockprices WHERE product_id ILIKE '" + jTextField11.getText() + "%' AND gl_code ilike  '" + jTextField7.getText() + "'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package_code ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by 2"));

                    }

                    jSearchScrollPane.setViewportView(jSearchTable);
                    System.out.println("Cannot sort out");

                }
            } else {
                if (jTextField11.getCaretPosition() < 1) {

                    System.out.println("Nothing");
                } else {
                    if (jRadioButton1.isSelected()) {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,rate::numeric,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE service_type ILIKE '%" + jTextField11.getText() + "%' AND gl_account ILIKE '%" + jTextField7.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM stockprices WHERE product ILIKE '%" + jTextField11.getText() + "%' AND gl_code ILIKE '%" + jTextField7.getText() + "%'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by 1"));
                    } else {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type,anaesthetist_rate as rate,'" + jTextField7.getText() + "',code FROM pb_operating_parameters WHERE service_type ILIKE '%" + jTextField11.getText() + "%' AND gl_account ILIKE '%" + jTextField7.getText() + "%' UNION ALL select product,selling_price,'" + jTextField7.getText() + "' as service_type,product_id FROM stockprices WHERE product ILIKE '%" + jTextField11.getText() + "%' AND gl_code ILIKE '%" + jTextField7.getText() + "%'"));// UNION ALL select package,package_amt,glcode as service_type,package_code FROM pb_packages_setup WHERE package ILIKE '"+jTextField11.getText()+"%' AND department ilike  '"+jComboBox11.getSelectedItem()+"' order by 1"));

                    }

                    jSearchScrollPane.setViewportView(jSearchTable);
                    System.out.println("Cannot sort out");

                }
            }

        }

        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate

    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked

        if (jTable11.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();
        }

        this.jButton11.setEnabled(true);
        this.jButton112.setEnabled(true);
        this.jButton221.setEnabled(false);

        // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane21.getLocationOnScreen();
        jSearchDialog.setSize(400, 200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);


    }

    private void jButton221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton221ActionPerformed

        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());
        String receiptNo = null;
        String nodetails = null;
        String rct = null;
        try {
            connectDB.setAutoCommit(false);

            /* if(jTextField92.getText().equalsIgnoreCase("-")){
            
            java.sql.Statement ps1 = connectDB.createStatement();
            java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
            while (rst1.next()){
            receiptNo = rst1.getObject(1).toString();
            }
            
            }else{*/
            receiptNo = jTextField1.getText();
            // }

            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nodetails from receipt_pref");
            while (rst11.next()) {
                nodetails = rst11.getObject(1).toString();
            }
            java.sql.Statement ps112 = connectDB.createStatement();
            java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
            while (rst112.next()) {
                rct = rst112.getObject(1).toString();
            }

            // ReceiptsPdf_1 policy = new ReceiptsPdf_1();

            //policy.ReceiptsPdf_1(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
            if (nodetails.equalsIgnoreCase("NoDetails")) {

                com.afrisoftech.txtreports.NoDetReceiptsTxt policy = new com.afrisoftech.txtreports.NoDetReceiptsTxt(connectDB, jTextField9.getText(), jTextField111.getText(), jTextField31.getText(), receiptNo, this.jComboBox4.getSelectedItem().toString());
            } else {
                if (nodetails.equalsIgnoreCase("Codes")) {
                    com.afrisoftech.txtreports.CodeReceiptsTxt policy = new com.afrisoftech.txtreports.CodeReceiptsTxt(connectDB, jTextField9.getText(), jTextField111.getText(), jTextField31.getText(), receiptNo, this.jComboBox4.getSelectedItem().toString());

                } else {
                    if (nodetails.equalsIgnoreCase("dept")) {
                        com.afrisoftech.txtreports.ReceiptsPerDeptTxt policy = new com.afrisoftech.txtreports.ReceiptsPerDeptTxt(connectDB, jTextField9.getText(), jTextField111.getText(), jTextField31.getText(), receiptNo, this.jComboBox4.getSelectedItem().toString());

                    } else {
                        if (nodetails.equalsIgnoreCase("Prints") && rct.equalsIgnoreCase("Pdf")) {
                            com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
                            policy.ReceiptsPdf(connectDB, receiptNo);
// ReceiptsPdf_1 policy = new ReceiptsPdf_1();
                            // policy.ReceiptsPdf_1(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
                        } else {
                            com.afrisoftech.txtreports.ReceiptsTxt policy = new com.afrisoftech.txtreports.ReceiptsTxt(connectDB, jTextField9.getText(), jTextField111.getText(), jTextField31.getText(), receiptNo, this.jComboBox4.getSelectedItem().toString());
                        }
                    }
                }
            }
            //ReceiptsPdf_1 policy = new ReceiptsPdf_1();
            // policy.ReceiptsPdf_1(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());

        } catch (java.sql.SQLException sq) {

            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }          // Add your handling code here:
    }//GEN-LAST:event_jButton221ActionPerformed
    /*  private void jComboBox11CaretPositionChanged(java.awt.event.InputMethodEvent evt) {
    try {
    searchRowSet.execute("select service_type FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField11.getText()+"%' AND main_service = '"+jComboBox11.getSelectedItem().toString()+"' UNION ALL select product as service_type FROM st_stock_prices WHERE product ILIKE '"+jTextField11.getText()+"%' AND department =  '"+jComboBox11.getSelectedItem().toString()+"' order by service_type");
    
    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
    new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Description", false),
    //   new org.netbeans.lib.sql.models.TableModel.Column("description", "Description", false),
    //   new org.netbeans.lib.sql.models.TableModel.Column("units", "Units", false)
    }));
    jSearchScrollPane.setViewportView(jSearchTable);
    System.out.println("Cannot sort out");
    } catch(java.sql.SQLException sqlExec) {
    
    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
    
    }
    
    }
     */
    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        /*        double resFloat = 0.00;
        // double totalSum = 0.00;
        //        java.lang.Float resFloats = null;
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
        
        
        if (jTable2.getSelectedColumn() == 2) {
        
        double floatCol2 = java.lang.Double.parseDouble(jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString());
        
        double floatCol3 = java.lang.Double.parseDouble(jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString());
        
        double resVal = floatCol2 * floatCol3;
        
        jTable2.setValueAt(new java.lang.Float(resVal), jTable2.getSelectedRow(), 4);
        
        }
        
        for (int i = 0; i < jTable2.getRowCount(); i++) {
        
        if (jTable2.getModel().getValueAt(i, 0) != null) {
        
        resFloat = resFloat + Double.parseDouble(jTable2.getModel().getValueAt(i, 4).toString());
        
        // totalSum = floatTotal + resFloat;
        
        }
        }
        jTextField31.setText(java.lang.String.valueOf(resFloat));
        //  }
        
         */// Add your handling code here:
    }//GEN-LAST:event_jTable2KeyReleased

    private void jTextField14ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextField14ComponentShown
        // Add your handling code here:
    }//GEN-LAST:event_jTextField14ComponentShown

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden

        System.setProperty("billpmnt", "closed");

        System.out.println("Form closed");

        System.out.println(System.getProperty("billpmnt"));// Add your handling code here:
    }//GEN-LAST:event_formComponentHidden

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed

        System.setProperty("billpmnt", "closed");

        System.out.println("Form closed");
        // Add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select gl_account from ac_cash_points where description  ='" + jComboBox4.getSelectedItem() + "'");
            while (rset1.next()) {
                jTextField8.setText(rset1.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();

        }

        if (jComboBox4.getSelectedItem().equals("Credit Card")) {
            jPanel11.setVisible(true);
            // jPanel4.setVisible(true);
            jPanel31.setVisible(true);
            jPanel3.setVisible(false);
            jTextField2.setText("");
            jTextField5.setText("");
            jTextField4.setText("");
        } else {
            if (jComboBox4.getSelectedItem().equals("Cheque")) {
                //                jPanel4.setVisible(false);
                jPanel11.setVisible(true);
                jPanel3.setVisible(true);
                jTextField21.setText("");
                jTextField52.setText("");
                jTextField41.setText("");
            } else {
                //                jPanel4.setVisible(false);
                jPanel11.setVisible(true);
                jPanel3.setVisible(false);
                jPanel31.setVisible(false);
                jTextField21.setText("");
                jTextField52.setText("");
                jTextField41.setText("");
                jTextField2.setText("");
                jTextField5.setText("");
                jTextField4.setText("");
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed
    private void populateTable1(java.lang.String patient_no) {
        int j = 0;
        int i = 0;

        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();

            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_no)  FROM patient_bill WHERE patient_no = '" + patient_no + "' and date_prescribed = '" + datePicker11.getDate() + "'");

            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,price,amount,gl_code,'-' as code  FROM patient_bill WHERE patient_no ilike '" + patient_no + "' and date_prescribed = '" + datePicker11.getDate() + "'");
                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable1.getObject(5), i, 4);
                    jTable11.setValueAt(rsetTable1.getObject(6), i, 5);

                    i++;

                }
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT sum(amount) FROM patient_bill WHERE patient_no = '" + patient_no + "' and date_prescribed = '" + datePicker11.getDate() + "'");
                while (rset1.next()) {
                    jTextField31.setText(rset1.getObject(1).toString());
                }
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }
    }
    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed


        try {
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
            while (rse1211.next()) //  rname = rse1211.getObject(1).toString();
            {
                rcode = rse1211.getObject(2).toString();
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }

        try {
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select code,sub_code from pb_activity WHERE activity ilike '" + jComboBox11.getSelectedItem() + "'");
            while (rst11.next()) {

                jTextField7.setText(rst11.getString(1));
                jTextField22.setText(rst11.getString(2));

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }
        jButton11.setEnabled(true);
        //  this.jButton11.setEnabled(false);
        this.jButton112.setEnabled(true);
        this.jButton221.setEnabled(false);


        // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased
        if (jTable11.getModel().getValueAt(jTable11.getSelectedRow(), 1) != null) {
            if (jTable11.getSelectedColumn() == jTable11.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 1).toString());
                float price = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 2).toString());
                float total = qty * price;
                jTable11.setValueAt(total, jTable11.getSelectedRow(), 3);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 3);
                jTextField31.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                jTextField31.setText(java.lang.String.valueOf(totalSum));
            }

        }


        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable11.getSelectedRow();

        if (selectedGuaran != null) {

            try {

                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '" + selectedGuaran + "' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '" + selectedGuaran + "'");
                while (rs.next()) {
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable11.setValueAt(rs.getObject(1), i, 2);
                    jTable11.setValueAt(rs.getObject(2), i, 4);
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        }

    }

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed

        this.setVisible(false);

        System.setProperty("billpmnt", "closed");
        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        jTextField111.setText("");
        jTextField21.setText("");
        jTextField10.setText("");
        jTextField12.setText("0.00");
        jTextField13.setText("0.00");
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }
        jLabel7.setText("");
        jTextField9.setText("");
        //        this.jComboBox1311.setSelectedItem(null);
        jTextField31.setText("0.00");
        this.jButton11.setEnabled(true);
        this.jButton112.setEnabled(true);
        this.jButton221.setEnabled(false);
// Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed

        if (jTable11.isRowSelected(jTable11.getSelectedRow())) {
            int rows2Delete = jTable11.getSelectedRowCount();

            int[] selectedRows = jTable11.getSelectedRows();

            if (rows2Delete < 1) {

                java.awt.Toolkit.getDefaultToolkit().beep();

                javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

            } else {

                if (rows2Delete > 1) {

                    for (int i = 0; i < selectedRows.length; i++) {



                        javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                        defTableModel.removeRow(selectedRows[i]);

                    }



                } else {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                    defTableModel.removeRow(jTable11.getSelectedRow());

                    calculateTotals();
                }
            }
        } else {
        }
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 3);
        //  jTextField31.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        jTextField31.setText(java.lang.String.valueOf(totalSum));

// this.tableModelTableChanged();// Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker11.getDate() + "' BETWEEN period_from AND period_to");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());

        }
        if (periodFrom != null && periodTo != null) {
            if (datePicker11.getDate().before(periodFrom) || datePicker11.getDate().after(periodTo)) {
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } else {
//        printReceipt = false;

                dispatchThread = new DispatchThread();

                dispatchThread.start();

                jButton11.setEnabled(false);

                jButton112.setEnabled(false);

            }

        } else {

            javax.swing.JOptionPane.showMessageDialog(this, "Please check with the head of Accounts department to ensure that you \n"
                    + "have a validly set accounting period.");

            // }
        }

        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    public java.lang.String getShiftNumber() {

        /* try {
        
        java.sql.Statement stmtf = connectDB.createStatement();
        java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
        while (rsetf.next()) {
        cashPoint = rsetf.getObject(1).toString();
        
        }
        } catch (java.sql.SQLException sqe) {
        sqe.printStackTrace();
        System.out.println("select not successful");
        }*/
        try {

            java.sql.Statement stmt = connectDB.createStatement();

            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE user_name = current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset.next()) {

                shift_no = rset.getString(1);

            }




        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        return shift_no;

    }

    public java.lang.String getCashPoint() {

        /*try {
        
        java.sql.Statement stmtf = connectDB.createStatement();
        java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
        while (rsetf.next()) {
        cashPoint = rsetf.getObject(1).toString();
        
        }
        } catch (java.sql.SQLException sqe) {
        sqe.printStackTrace();
        System.out.println("select not successful");
        }*/
        try {

            java.sql.Statement stmt = connectDB.createStatement();

            // java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset = stmt.executeQuery("SELECT cash_point FROM ac_shifts WHERE user_name = current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset.next()) {

                cash_no = rset.getString(1);

            }




        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        return cash_no;

    }

    private void resetTable11() {
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null}
                },
                new String[]{
                    "Service", "Quantity", "Price(KShs)", "Total", "Gl Account"
                }) {

            boolean[] canEdit = new boolean[]{
                true, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable11.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 5; i++) {
            column = jTable11.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                column.setPreferredWidth(150);
                // }  else
                //column.setPreferredWidth(50);

            }
        }
        /*  jTable11.addInputMethodListener(new java.awt.event.InputMethodListener() {
        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
        jTable11InputMethodTextChanged(evt);
        }
        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
        }
        });
         */

        jTable11.addKeyListener(new java.awt.event.KeyAdapter() {

            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable11KeyReleased(evt);
            }
        });

        jScrollPane21.setViewportView(jTable11);

    }

    private void calculateTotals() {
    }

    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;




        for (int i = 0; i < jTable11.getRowCount(); i++) {

            if (jTable11.getValueAt(i, 0) != null) {

                if (jTable11.getSelectedColumn() == 1) {

                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());

                    jTextField31.setText(java.lang.String.valueOf(resFloat));
                } else {
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                }

                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {

        //        double resFloat = 0.00;
        double resFloat = 0.00;




        for (int i = 0; i < jTable11.getRowCount(); i++) {

            if (jTable11.getValueAt(i, 0) != null) {

                if (jTable11.getSelectedColumn() == 1) {

                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());

                    jTextField31.setText(java.lang.String.valueOf(resFloat));
                } else {
                    resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
                }

                jTextField31.setText(java.lang.String.valueOf(resFloat));

            }
        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    private class DispatchThread extends java.lang.Thread {

        public void run() {

            saveData();

        }
    }

    private void saveData() {
        if (jTable11.isEditing()) {
            jTable11.getCellEditor().stopCellEditing();
        }
        if (jTextField111.getText().equalsIgnoreCase("")) {
            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save without the name", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else {
            if (jTextField81.getText().equalsIgnoreCase("")) {
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot save without the shift No \n enquire if you are created as a shift operator", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } else {
                java.sql.Savepoint registerSavePoint = null;
                try {
                    connectDB.setAutoCommit(false);
                    registerSavePoint = connectDB.setSavepoint("registration");
                } catch (java.sql.SQLException ex) {
                    ex.printStackTrace();
                }



                try {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println("This date is not printing " + datenowSql.toString());

                    String receiptDate = null;

                    String receiptNo2 = null;

                    receiptDate = datePicker11.getDate().toString();

                    System.out.println("This date is todays date " + receiptDate.toString());

                    double price = 0.00;
                    double qty = 0.00;
                    double amount = 0.00;
                    String units = null;
                    String Store = null;
                    String glCode = null;
                    String glCodec = null;
                    String actCode = null;
                    double sellPrice = 0.00;
                    String noDetails = null;

                    String iTem = null;
                    String gcode = null;
                    double quant = 0.00;
                    double pRice = 0.00;
                    double tTotal = 0.00;

                    java.sql.Statement stm121xx = connectDB.createStatement();
                    java.sql.ResultSet rse121xx = stm121xx.executeQuery("select shift_no from ac_shifts WHERE user_name = current_user and status = 'Running' AND cash_point = '" + jTextField14.getText() + "'");
                    while (rse121xx.next()) {

                        jTextField81.setText(rse121xx.getString(1));

                    }
                    java.sql.Statement stm121x = connectDB.createStatement();
                    java.sql.ResultSet rse121x = stm121x.executeQuery("select direct_rev from pb_patient_names");
                    while (rse121x.next()) {

                        DirectRev = rse121x.getBoolean(1);

                    }
                    java.sql.Statement stm12 = connectDB.createStatement();
                    java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity,current_user from pb_activity where activity_category ='PR'");
                    while (rse12.next()) {

                        patientAcc = rse12.getObject(1).toString();
                        AccDesc = rse12.getObject(2).toString();
                    }
                    java.sql.Statement stm12z = connectDB.createStatement();
                    java.sql.ResultSet rse12z = stm12z.executeQuery("select current_user");
                    while (rse12z.next()) {
                        user = rse12z.getObject(1).toString();
                    }
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                    while (rst.next()) {
                        rst.getObject(1).toString();
                        transNo = rst.getObject(1).toString();

                        receiptNo1 = "B" + rst.getObject(1).toString();
                    }
                    /*                    if(jTextField92.getText().equalsIgnoreCase("-")){
                    java.sql.Statement ps1 = connectDB.createStatement();
                    java.sql.ResultSet rst1 = ps1.executeQuery("select nextval('receipt_no_seq')");
                    while (rst1.next()){
                    receiptNo1 = rst1.getObject(1).toString();
                    }
                    }else{
                    receiptNo1 = jTextField92.getText();
                    }
                     */

                    //receiptNo1 = com.afrisoftech.lib.DateLables.getDateLabel();

                    java.sql.Statement pss1 = connectDB.createStatement();
                    java.sql.ResultSet rsts = pss1.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rsts.next()) {
                        actCode1 = rsts.getObject(1).toString();
                        actNames1 = rsts.getObject(2).toString();
                    }

                    java.sql.Statement stm1211 = connectDB.createStatement();
                    java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                    while (rse1211.next()) {
                        rname = rse1211.getObject(1).toString();
                        rcode = rse1211.getObject(2).toString();
                    }
                    if (jTextField9.getText().equalsIgnoreCase("")) {
                        jTextField9.setText("WK" + transNo);
                    } else {
                        jTextField9.getText();
                    }
                    for (int i = 0; i < jTable11.getRowCount(); i++) {
                        if (jTable11.getModel().getValueAt(i, 0) != null) {
                            if (java.lang.Double.valueOf(jTable11.getValueAt(i, 1).toString()) > 0) {
                                int itemInt = 0;
                                String strength = "-";
                                java.sql.Statement pstBx = connectDB.createStatement();
                                java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product) from st_stock_prices where product_id = '" + jTable11.getValueAt(i, 5) + "' and gl_code = '" + jTable11.getValueAt(i, 4) + "'");

                                while (rsBx.next()) {
                                    itemInt = rsBx.getInt(1);
                                }

                                String service = null;
                                if (itemInt > 0) {
                                    java.sql.Statement pstB = connectDB.createStatement();
                                    java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department,strength from st_stock_prices where product_id = '" + jTable11.getValueAt(i, 5) + "' AND gl_code =  '" + jTable11.getValueAt(i, 4) + "'");

                                    while (rsB.next()) {
                                        price = rsB.getDouble(1);
                                        units = rsB.getString(2);
                                        Store = rsB.getString(3);
                                        strength = rsB.getString(4);
                                    }

                                    if (strength.equalsIgnoreCase("0") || strength.equalsIgnoreCase("-")) {
                                        service = jTable11.getValueAt(i, 0).toString();
                                    } else {
                                        service = jTable11.getValueAt(i, 0).toString() + " " + strength;
                                    }
                                } else {
                                    service = jTable11.getValueAt(i, 0).toString();
                                }

                                java.sql.Statement stm121 = connectDB.createStatement();
                                java.sql.ResultSet rse121 = stm121.executeQuery("select activity,activity_category from pb_activity where code ='" + jTable11.getModel().getValueAt(i, 4).toString() + "'");
                                while (rse121.next()) {

                                    glAcc = rse121.getObject(1).toString();
                                    glCodec = rse121.getObject(2).toString();
                                }
                                java.sql.Statement stm12a = connectDB.createStatement();
                                java.sql.ResultSet rse12a = stm12a.executeQuery("select category from pb_operating_parameters where code ='" + jTable11.getModel().getValueAt(i, 4).toString() + "'");
                                while (rse12a.next()) {

                                    Categ = rse12a.getObject(1).toString();
                                }
                                if (DirectRev) {
                                    System.out.println("Bill No 5" + billNo);

                                    java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt212.setObject(1, jTextField9.getText());

                                    pstmt212.setString(3, jTextField211.getText());
                                    pstmt212.setString(4, jComboBox4.getSelectedItem().toString());
                                    pstmt212.setString(5, transNo);
                                    pstmt212.setString(6, "");
                                    pstmt212.setString(7, "");
                                    pstmt212.setString(8, "OP");
                                    pstmt212.setString(9, "");
                                    pstmt212.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                    pstmt212.setString(11, "");
                                    if (java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) > 0) {
                                        pstmt212.setString(2, "Receipt");
                                        pstmt212.setDouble(12, 0.00);
                                        pstmt212.setDouble(13, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                    } else {
                                        pstmt212.setDouble(13, 0.00);
                                        pstmt212.setDouble(12, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) * -1);
                                        pstmt212.setString(2, service);
                                    }
                                    pstmt212.setDate(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                    pstmt212.setString(15, actCode1);
                                    pstmt212.setString(16, glAcc);
                                    pstmt212.setDouble(17, java.lang.Double.valueOf(jTable11.getValueAt(i, 1).toString()));
                                    pstmt212.setString(18, "");
                                    pstmt212.setString(20, "Receipt");
                                    pstmt212.setBoolean(19, false);
                                    pstmt212.setBoolean(21, false);
                                    pstmt212.setString(23, jTextField1.getText());
                                    pstmt212.setString(24, user);
                                    pstmt212.setString(22, actNames1);
                                    pstmt212.setString(25, jTextField14.getText());
                                    pstmt212.executeUpdate();

                                    if (glCodec.equalsIgnoreCase("IC")) {
                                        java.sql.PreparedStatement pstmt212C = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt212C.setObject(1, jTextField9.getText());
                                        pstmt212C.setString(2, service);
                                        pstmt212C.setString(3, jTextField211.getText());
                                        pstmt212C.setString(4, jComboBox4.getSelectedItem().toString());
                                        pstmt212C.setString(5, transNo);
                                        pstmt212C.setString(6, "");
                                        pstmt212C.setString(7, "");
                                        pstmt212C.setString(8, "OP");
                                        pstmt212C.setString(9, "");
                                        pstmt212C.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt212C.setString(11, "");
                                        if (java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) > 0) {
                                            pstmt212C.setDouble(13, 0.00);
                                            pstmt212C.setDouble(12, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                        } else {
                                            pstmt212C.setDouble(12, 0.00);
                                            pstmt212C.setDouble(13, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) * -1);

                                        }
                                        pstmt212C.setDate(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt212C.setString(15, actCode1);
                                        pstmt212C.setString(16, glAcc);
                                        pstmt212C.setDouble(17, java.lang.Double.valueOf(jTable11.getValueAt(i, 1).toString()));
                                        pstmt212C.setString(18, "");
                                        pstmt212C.setString(20, "Billing");
                                        pstmt212C.setBoolean(19, false);
                                        pstmt212C.setBoolean(21, false);
                                        pstmt212C.setString(23, jTextField1.getText());
                                        pstmt212C.setString(24, user);
                                        pstmt212C.setString(22, actNames1);
                                        pstmt212C.setString(25, jTextField14.getText());
                                        pstmt212C.executeUpdate();


                                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt21.setObject(1, jTable11.getValueAt(i, 4).toString());
                                        pstmt21.setString(2, glAcc);
                                        pstmt21.setString(3, jTextField9.getText());
                                        if (jTextField10.getText().equals("")) {
                                            pstmt21.setString(4, jTextField111.getText());
                                        } else {
                                            pstmt21.setString(4, jTextField10.getText());
                                        }
                                        pstmt21.setString(5, "");
                                        pstmt21.setString(6, "");
                                        pstmt21.setString(7, "");
                                        pstmt21.setString(8, "OP");
                                        pstmt21.setString(9, jTextField921.getText());
                                        pstmt21.setString(10, jComboBox4.getSelectedItem().toString());
                                        pstmt21.setString(11, "");
                                        pstmt21.setString(12, "");
                                        pstmt21.setString(13, "");
                                        pstmt21.setString(14, service);
                                        pstmt21.setString(15, "Revenue");
                                        if (java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) > 0) {
                                            pstmt21.setDouble(16, 0.00);
                                            pstmt21.setDouble(17, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                        } else {
                                            pstmt21.setDouble(17, 0.00);
                                            pstmt21.setDouble(16, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) * -1);

                                        }
                                        pstmt21.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt21.setString(19, transNo);
                                        pstmt21.setBoolean(20, false);
                                        pstmt21.setBoolean(21, false);
                                        pstmt21.setBoolean(22, false);
                                        pstmt21.setString(23, user);
                                        pstmt21.setString(24, jTextField14.getText());
                                        pstmt21.setString(25, jTextField81.getText());
                                        pstmt21.executeUpdate();
                                    }
                                } else {

                                    java.sql.PreparedStatement pstmt212 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt212.setObject(1, jTable11.getValueAt(i, 4).toString());
                                    pstmt212.setString(2, glAcc);
                                    pstmt212.setString(3, jTextField9.getText());
                                    if (jTextField10.getText().equals("")) {
                                        pstmt212.setString(4, jTextField111.getText());
                                    } else {
                                        pstmt212.setString(4, jTextField10.getText());
                                    }
                                    pstmt212.setString(5, "");
                                    pstmt212.setString(6, "");
                                    pstmt212.setString(7, "");
                                    pstmt212.setString(8, "OP");
                                    pstmt212.setString(9, jTextField921.getText());
                                    pstmt212.setString(10, jComboBox4.getSelectedItem().toString());
                                    pstmt212.setString(11, "");
                                    pstmt212.setString(12, "");
                                    pstmt212.setString(13, "");
                                    pstmt212.setString(14, service);
                                    pstmt212.setString(15, "Receipt");
                                    if (java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) > 0) {
                                        pstmt212.setDouble(16, 0.00);
                                        pstmt212.setDouble(17, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                    } else {
                                        pstmt212.setDouble(17, 0.00);
                                        pstmt212.setDouble(16, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) * -1);

                                    }
                                    pstmt212.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                    pstmt212.setString(19, transNo);
                                    pstmt212.setBoolean(20, false);
                                    pstmt212.setBoolean(21, false);
                                    pstmt212.setBoolean(22, false);
                                    pstmt212.setString(23, user);
                                    pstmt212.setString(24, jTextField14.getText());
                                    pstmt212.setString(25, jTextField81.getText());
                                    pstmt212.executeUpdate();
                                }


                                java.sql.PreparedStatement pstmt25 = connectDB.prepareStatement("INSERT INTO ac_cash_collection VALUES(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                pstmt25.setObject(1, jTable11.getValueAt(i, 4).toString());
                                pstmt25.setObject(2, service);
                                pstmt25.setString(3, jTextField9.getText());
                                pstmt25.setString(4, jTextField111.getText());
                                pstmt25.setString(5, jComboBox4.getSelectedItem().toString());
                                pstmt25.setString(6, "");
                                pstmt25.setString(7, "");
                                pstmt25.setString(8, jTextField4.getText());
                                pstmt25.setString(9, jTextField5.getText());
                                pstmt25.setString(10, rcode);
                                pstmt25.setString(11, jTextField2.getText());
                                pstmt25.setString(12, receiptNo1);
                                pstmt25.setString(13, jTable11.getValueAt(i, 5).toString());
                                if (jTextField10.getText().equals("")) {
                                    pstmt25.setString(14, jTextField111.getText());
                                } else {
                                    pstmt25.setString(14, jTextField10.getText());
                                }
                                pstmt25.setString(15, "Receipts");
                                if (java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) > 0) {
                                    pstmt25.setDouble(16, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                    pstmt25.setDouble(17, 0.00);
                                } else {
                                    pstmt25.setDouble(17, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()) * -1);
                                    pstmt25.setDouble(16, 0.00);
                                }
                                pstmt25.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                pstmt25.setString(19, transNo);
                                pstmt25.setBoolean(20, false);
                                pstmt25.setBoolean(21, false);
                                pstmt25.setBoolean(22, false);
                                pstmt25.setString(23, user);
                                pstmt25.setString(24, jTextField14.getText());
                                pstmt25.setString(25, jTextField81.getText());
                                pstmt25.setDate(26, null);
                                pstmt25.setDouble(27, java.lang.Double.valueOf(jTable11.getValueAt(i, 1).toString()));
                                pstmt25.executeUpdate();




                                if (itemInt > 0) {
                                    java.sql.Statement pstB1 = connectDB.createStatement();
                                    java.sql.ResultSet rsB1 = pstB1.executeQuery("select nodetails from receipt_pref");

                                    while (rsB1.next()) {
                                        noDetails = rsB1.getString(1);
                                    }
                                    if (noDetails.equalsIgnoreCase("Codes")) {
                                        java.sql.Statement pstB = connectDB.createStatement();
                                        java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department,strength from st_stock_prices where product_id = '" + jTable11.getValueAt(i, 5) + "' and gl_code =  '" + jTable11.getValueAt(i, 4) + "'");

                                        while (rsB.next()) {
                                            price = rsB.getDouble(1);
                                            units = rsB.getString(2);
                                            Store = rsB.getString(3);
                                            strength = rsB.getString(4);
                                        }
                                        java.sql.Statement pst211 = connectDB.createStatement();
                                        java.sql.ResultSet rs111 = pst211.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '" + jTable11.getValueAt(i, 4) + "'");
                                        while (rs111.next()) {
                                            glCode = rs111.getObject(1).toString();
                                            actCode = rs111.getObject(2).toString();

                                        }
                                        qty = java.lang.Double.parseDouble(jTable11.getValueAt(i, 1).toString());
                                        amount = price * qty;

                                        amount = amount;


                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("INSERT INTO hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1.setString(1, jTextField9.getText());
                                        pstmt1.setString(2, jTextField111.getText());
                                        pstmt1.setDouble(3, java.lang.Double.valueOf(jTable11.getValueAt(i, 1).toString()));
                                        pstmt1.setDouble(4, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                        pstmt1.setObject(5, service);
                                        pstmt1.setDouble(7, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                        pstmt1.setObject(8, jTable11.getValueAt(i, 4).toString());
                                        pstmt1.setBoolean(6, true);
                                        pstmt1.setString(9, transNo);
                                        pstmt1.setObject(10, jTextField921.getText());
                                        pstmt1.setBoolean(11, true);
                                        pstmt1.setString(12, units);
                                        pstmt1.setDate(13, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt1.setObject(14, Store);
                                        pstmt1.setString(15, "OP");
                                        pstmt1.setString(16, "Cash");
                                        pstmt1.setObject(17, "");
                                        pstmt1.setDouble(18, 0.00);
                                        pstmt1.setString(19, user);
                                        pstmt1.setObject(20, "");
                                        pstmt1.setObject(21, "");
                                        pstmt1.setObject(22, jTable11.getValueAt(i, 5).toString());
                                        pstmt1.setObject(23, strength);
                                        pstmt1.executeUpdate();

                                        java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("INSERT INTO st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1a.setString(1, null);
                                        pstmt1a.setObject(3, jTable11.getValueAt(i, 0));
                                        pstmt1a.setString(2, Store);
                                        pstmt1a.setDate(4, null);
                                        pstmt1a.setDouble(5, amount);
                                        pstmt1a.setDouble(6, 0.00);
                                        pstmt1a.setObject(7, units);
                                        pstmt1a.setObject(8, "");
                                        pstmt1a.setString(9, null);
                                        pstmt1a.setString(10, null);
                                        pstmt1a.setDouble(11, 0.00);
                                        pstmt1a.setDouble(12, 0.00);
                                        pstmt1a.setDouble(13, 0.00);
                                        pstmt1a.setString(14, jTextField111.getText());
                                        pstmt1a.setString(15, user);
                                        pstmt1a.setString(16, "");
                                        pstmt1a.setString(17, null);
                                        pstmt1a.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt1a.setString(19, Store);
                                        pstmt1a.setString(20, "Issuing");
                                        pstmt1a.setDouble(21, 0.00);
                                        pstmt1a.setString(23, actCode);
                                        pstmt1a.setDouble(22, 0.00);
                                        pstmt1a.setString(24, "");
                                        pstmt1a.setString(25, Store);
                                        pstmt1a.setString(26, transNo);
                                        pstmt1a.setDouble(27, java.lang.Double.valueOf(jTable11.getValueAt(i, 1).toString()));
                                        pstmt1a.setString(28, user);

                                        pstmt1a.setBoolean(29, true);
                                        pstmt1a.setDouble(30, 0.00);
                                        pstmt1a.setDate(31, null);
                                        pstmt1a.setObject(32, jTable11.getValueAt(i, 5));
                                        pstmt1a.setString(33, strength);

                                        pstmt1a.executeUpdate();


                                        java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2a.setObject(1, glCode);
                                        pstmt2a.setString(2, Store);
                                        pstmt2a.setString(3, jTextField9.getText());
                                        pstmt2a.setString(4, jTextField111.getText());
                                        pstmt2a.setString(5, "");
                                        pstmt2a.setString(6, "");
                                        pstmt2a.setString(7, "");
                                        pstmt2a.setString(8, "");
                                        pstmt2a.setString(9, "");
                                        pstmt2a.setString(10, "");
                                        pstmt2a.setString(11, "");
                                        pstmt2a.setString(12, "");
                                        pstmt2a.setString(13, "");
                                        pstmt2a.setString(14, service);
                                        pstmt2a.setString(15, "Issuing");
                                        pstmt2a.setDouble(16, amount);
                                        pstmt2a.setDouble(17, 0.00);
                                        pstmt2a.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt2a.setString(19, transNo);
                                        pstmt2a.setBoolean(20, false);
                                        pstmt2a.setBoolean(21, false);
                                        pstmt2a.setBoolean(22, false);
                                        pstmt2a.setString(23, user);
                                        pstmt2a.executeUpdate();


                                        java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("INSERT INTO st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?)");
                                        pstmt33.setObject(1, Store);
                                        pstmt33.setObject(2, jTable11.getValueAt(i, 0).toString());
                                        pstmt33.setDouble(3, 0.00);
                                        pstmt33.setDouble(7, 0.00);
                                        pstmt33.setDouble(5, java.lang.Double.valueOf(jTable11.getValueAt(i, 2).toString()));
                                        pstmt33.setDouble(6, java.lang.Double.valueOf(jTable11.getValueAt(i, 3).toString()));
                                        pstmt33.setString(8, transNo);
                                        pstmt33.setDouble(4, java.lang.Double.valueOf(jTable11.getValueAt(i, 1).toString()));
                                        pstmt33.setObject(9, jTextField921.getText());
                                        pstmt33.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                                        pstmt33.setString(11, user);
                                        pstmt33.setString(12, units);
                                        pstmt33.setString(13, Store);
                                        pstmt33.setString(14, jTextField9.getText() + " " + jTextField111.getText());
                                        pstmt33.setDouble(15, price);

                                        pstmt33.setObject(16, jTable11.getValueAt(i, 5));
                                        pstmt33.setObject(17, strength);
                                        pstmt33.executeUpdate();

                                    }
                                }
                            }

                            /*
                            
                            
                            java.sql.Statement pstBx2 = connectDB.createStatement();
                            //java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = '"+jTable1.getValueAt(i,0)+"' and glcode =  '"+jTable1.getValueAt(i,4)+"'");
                            java.sql.ResultSet rsBx2 = pstBx2.executeQuery("select count(package) from packages where package = 'Dressing' and glcode =  '100-04-101'");
                            
                            while (rsBx2.next()){
                            pack = rsBx2.getInt(1);
                            }
                            
                            
                            //     System.out.println("How many packages "+pack);
                            
                            if(pack > 0){
                            java.sql.Statement pstBw = connectDB.createStatement();
                            java.sql.ResultSet rsBw = pstBw.executeQuery("select distinct item_service,qty,price,total,glcode from packages where package = '"+jTable1.getValueAt(i,0)+"'");
                            
                            while (rsBw.next()){
                            
                            item = rsBw.getString(1);
                            quant = rsBw.getDouble(2);
                            pRice = rsBw.getDouble(3);
                            tTotal = rsBw.getDouble(4);
                            gcode = rsBw.getString(5);
                            
                            
                            java.sql.Statement pstBv = connectDB.createStatement();
                            java.sql.ResultSet rsBv = pstBv.executeQuery("select transfer_price,units,department from st_stock_prices where product = '"+item+"' and gl_code =  '"+gcode+"'");
                            
                            while (rsBv.next()){
                            price = rsBv.getDouble(1);
                            units = rsBv.getString(2);
                            Store = rsBv.getString(3);
                            }
                            
                            
                            java.sql.Statement pst211v = connectDB.createStatement();
                            java.sql.ResultSet rs111v = pst211v.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+gcode+"'");
                            while (rs111v.next()){
                            glCode = rs111v.getObject(1).toString();
                            actCode = rs111v.getObject(2).toString();
                            }
                            
                            qty = quant;
                            amount = price*qty;
                            if (amount > 10000){
                            amount = (qty*pRice)*0.67;
                            }else{
                            
                            amount = amount;
                            }
                            
                            
                            java.sql.PreparedStatement pstmt1v = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt1v.setString(1,jTextField9.getText());
                            pstmt1v.setString(2,jTextField1.getText());
                            pstmt1v.setDouble(3,quant);
                            pstmt1v.setDouble(4,tTotal);
                            pstmt1v.setObject(5,item);
                            pstmt1v.setDouble(7,pRice);
                            pstmt1v.setObject(8,jTable1.getValueAt(i,4).toString());
                            pstmt1v.setBoolean(6,true);
                            pstmt1v.setString(9,transNo);
                            pstmt1v.setObject(10,jTextField8.getText());
                            pstmt1v.setBoolean(11,true);
                            pstmt1v.setString(12,units);
                            pstmt1v.setDate(13,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt1v.setObject(14,Store);
                            pstmt1v.setString(15,chbox);
                            pstmt1v.setString(16,jComboBox2.getSelectedItem().toString());
                            pstmt1v.setObject(17,"");
                            pstmt1v.setDouble(18,0.00);
                            pstmt1v.setString(19,user);
                            pstmt1v.setObject(20,"");
                            pstmt1v.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt1av = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                            pstmt1av.setString(1,null);
                            pstmt1av.setObject(3,item);
                            pstmt1av.setString(2,Store);
                            pstmt1av.setDate(4,null);
                            pstmt1av.setDouble(5,amount);
                            pstmt1av.setDouble(6,0.00);
                            pstmt1av.setObject(7,units);
                            pstmt1av.setObject(8,"");
                            pstmt1av.setString(9,null);
                            pstmt1av.setString(10,null);
                            pstmt1av.setDouble(11,0.00);
                            pstmt1av.setDouble(12,0.00);
                            pstmt1av.setDouble(13,0.00);
                            pstmt1av.setString(14,jTextField1.getText());
                            pstmt1av.setString(15,user);
                            pstmt1av.setString(16,"");
                            pstmt1av.setString(17,null);
                            pstmt1av.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt1av.setString(19,Store);
                            pstmt1av.setString(20,"Issuing");
                            pstmt1av.setDouble(21,0.00);
                            pstmt1av.setString(23,actCode);
                            pstmt1av.setDouble(22,0.00);
                            pstmt1av.setString(24,"");
                            pstmt1av.setString(25,Store);
                            pstmt1av.setString(26,transNo);
                            pstmt1av.setDouble(27,quant);
                            pstmt1av.setString(28,user);
                            pstmt1av.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt2av = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt2av.setObject(1,glCode);
                            pstmt2av.setObject(2,jComboBox1.getSelectedItem());
                            pstmt2av.setString(3,jTextField9.getText());
                            pstmt2av.setString(4,jTextField1.getText());
                            pstmt2av.setString(5,"");
                            pstmt2av.setString(6,"");
                            pstmt2av.setString(7,"");
                            pstmt2av.setString(8,"");
                            pstmt2av.setString(9,"");
                            pstmt2av.setObject(10,jComboBox2.getSelectedItem());
                            pstmt2av.setString(11,"");
                            pstmt2av.setString(12,"");
                            pstmt2av.setString(13,"");
                            pstmt2av.setString(14,item);
                            pstmt2av.setString(15,"Issuing");
                            pstmt2av.setDouble(16,amount);
                            pstmt2av.setDouble(17,0.00);
                            pstmt2av.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt2av.setString(19,transNo);
                            pstmt2av.setBoolean(20,false);
                            pstmt2av.setBoolean(21,false);
                            pstmt2av.setBoolean(22,false);
                            pstmt2av.setString(23,user);
                            pstmt2av.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt33v = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            
                            pstmt33v.setObject(1,Store);
                            pstmt33v.setObject(2,item);
                            pstmt33v.setDouble(3,0.00);
                            pstmt33v.setDouble(7,0.00);
                            pstmt33v.setDouble(5,pRice);
                            pstmt33v.setDouble(6,tTotal);
                            pstmt33v.setString(8,transNo);
                            pstmt33v.setDouble(4,quant);
                            pstmt33v.setObject(9,jTextField8.getText());
                            pstmt33v.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                            pstmt33v.setString(11,user);
                            pstmt33v.setString(12,units);
                            pstmt33v.setString(13,Store);
                            pstmt33v.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                            pstmt33v.executeUpdate();
                            }
                            }
                             */
                        }
                    }

                    java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("UPDATE ac_doctors_ledger SET paid = true where patient_no = '" + jTextField9.getText() + "' AND input_date = '" + datePicker11.getDate().toString() + "'");
                    pstmt11.executeUpdate();
                    java.sql.PreparedStatement pstmt41 = connectDB.prepareStatement("UPDATE hp_pharmacy SET paid ='true' WHERE patient_no = '" + jTextField9.getText() + "' AND date_prescribed >= (current_date -1)");
                    pstmt41.executeUpdate();
                    java.sql.PreparedStatement pstmt411 = connectDB.prepareStatement("UPDATE hp_patient_billing SET paid ='true' WHERE patient_no = '" + jTextField9.getText() + "' and trans_date >= (current_date - 1)");
                    pstmt411.executeUpdate();
                    java.sql.PreparedStatement pstmt111 = connectDB.prepareStatement("UPDATE pb_documents_register SET used = true where chq_no = '" + jTextField92.getText() + "' AND doc_name ilike '%Receipt%'");
                    pstmt111.executeUpdate();
                    if (jTextField92.getText().equalsIgnoreCase("-")) {
                        /*java.sql.Statement ps1 = connectDB.createStatement();
                        java.sql.ResultSet rst1 = ps1.executeQuery("select nextval('receipt_no_seq')");
                        while (rst1.next()) {
                        receiptNo2 = rst1.getObject(1).toString();
                        }*/

                        java.sql.PreparedStatement psr = connectDB.prepareStatement("INSERT INTO ac_receipts_no("
                                + "account_no, account_name, date, amount, shift_no, "
                                + "cash_point, reference, user_name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
                        psr.setString(1, jTextField9.getText());
                        psr.setString(2, jTextField111.getText());
                        psr.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker11.getDate()));
                        psr.setDouble(4, java.lang.Double.valueOf(jTextField31.getText()));
                        psr.setInt(5, java.lang.Integer.valueOf(jTextField81.getText()));
                        psr.setString(6, jTextField14.getText());
                        psr.setString(7, receiptNo1);
                        psr.setString(8, user);
                        psr.executeUpdate();

                        java.sql.Statement ps1q = connectDB.createStatement();
                        java.sql.ResultSet rst1q = ps1q.executeQuery("SELECT LPAD(receipt_no::TEXT,7,'0'::TEXT) FROM ac_receipts_no WHERE reference = '" + receiptNo1 + "'");
                        while (rst1q.next()) {
                            receiptNo2 = rst1q.getObject(1).toString();
                        }
                    } else {
                        receiptNo2 = jTextField92.getText();
                    }

                    java.sql.PreparedStatement pstmt112 = connectDB.prepareStatement("UPDATE ac_cash_collection SET receipt_no = '" + receiptNo2 + "' WHERE receipt_no = '" + receiptNo1 + "'");
                    pstmt112.executeUpdate();

                    connectDB.commit();
                    connectDB.setAutoCommit(true);

                    //  ReceiptsPdf_1 policy = new ReceiptsPdf_1();
                    //  policy.ReceiptsPdf_1(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());

                    // com.afrisoftech.txtreports.ReceiptsTxt policy = new com.afrisoftech.txtreports.ReceiptsTxt(connectDB, jTextField9.getText(),jTextField111.getText(),jTextField31.getText(),receiptNo1,this.jComboBox4.getSelectedItem().toString());
                    jTextField1.setText(receiptNo2);
                    this.jButton11.setEnabled(false);
                    this.jButton112.setEnabled(false);
                    this.jButton221.setEnabled(true);
                    jTextField12.setText("0.00");
                    jTextField13.setText("0.00");
                    jTextField111.setText("");
                    jTextField21.setText("");
                    jTextField10.setText("");
                    jTextField12.setText("0.00");
                    jTextField13.setText("0.00");
                    /* for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                    jTable11.getModel().setValueAt(null,k,r);
                    }
                    }
                     */
                    jLabel7.setText("");
                    jTextField9.setText("");
                    //        this.jComboBox1311.setSelectedItem(null);
                    jTextField31.setText("0.00");
                    jLabel7.setForeground(java.awt.Color.blue);
                    jLabel7.setText("Insert successful");
                    System.out.println("Status of printReceipt is  : [" + printReceipt + "]");
                    if (printReceipt) {
                        jButton221ActionPerformed(evt1);
                    }
                    printReceipt = false;
                } catch (java.lang.Exception sq) {
                    sq.printStackTrace();
                    //               }catch(java.sql.SQLException sq){
                    try {
                        connectDB.rollback(registerSavePoint);
                        System.out.println("Rolling back to save point at cashpoint");
                    } catch (java.sql.SQLException sql) {
                        sql.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            }
        }
        /*   } catch(java.lang.Exception ex) {
        System.out.println(ex.getMessage());
        javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
        
        
        }
         */


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private com.afrisoftech.lib.DatePicker datePicker11;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton1111;
    private javax.swing.JButton jButton112;
    private javax.swing.JButton jButton221;
    private javax.swing.JButton jButton252111;
    private javax.swing.JButton jButton301111;
    private javax.swing.JButton jButton31;
    public javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton921;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    public javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    public javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JDialog jDialog31;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel212;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel3111;
    private javax.swing.JLabel jLabel312;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel5821111;
    private javax.swing.JLabel jLabel582211;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel66111;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel121;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel312;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel422;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator1111;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField14111;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField1611;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField211;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField3111;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField4111;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField511;
    private javax.swing.JTextField jTextField52;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JTextField jTextField921;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton13;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton21;
    private javax.swing.JPanel spacerPanel;
    // End of variables declaration//GEN-END:variables
}
