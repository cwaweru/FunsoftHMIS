    /*

 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.accounting;

//import static com.afrisoftech.accounting.VoucherApprintfr.requNo;
import static com.afrisoftech.accounting.VoucherApprintfr.requNo;
import static com.afrisoftech.hospital.HospitalMain.connectDB;
import static com.afrisoftech.hospital.HospitalMain.saccopn;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Wilson Gitau at my place 3.45AM
 */
public class Lpo_LsoCommitmentintfr extends javax.swing.JInternalFrame {

    JComboBox cmboxs3 = new javax.swing.JComboBox();
    /**
     * Creates new form SuppliesGuyApprovalintfr
     */
    /**
     * Creates new form SuppliesGuyApprovalintfr
     */
    String aie_no = null, head = null, subhead = null, financial_year = null, period = null, vote = null, parent_lpo = null;
    Boolean check_commit = false;
    int current_row = 0;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    String lpo = null, supplier = null;
    private boolean yes = false;
    private String retention;
    private String witholding;
    private String vat;

    public Lpo_LsoCommitmentintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
        cmboxs3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subhead FROM subheads ORDER BY 1"));

//         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        ApprovalTblscr1 = new javax.swing.JScrollPane();
        ApproveBillTable = new com.afrisoftech.dbadmin.JTable();
        jLabel75 = new javax.swing.JLabel();
        jTextField45 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        lpoTxt1 = new javax.swing.JTextField();
        jLabel114 = new javax.swing.JLabel();
        dealerNameTxt = new javax.swing.JTextField();
        financialPeriodlbl1 = new javax.swing.JLabel();
        financialPeriodCmbxBill = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        QuarterBillCbx = new javax.swing.JComboBox();
        invoiceNoTxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        voteheadBillCbx = new javax.swing.JComboBox();
        voteSubheadBillCbx = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        aie_no_bill = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        voteBillTxt = new javax.swing.JComboBox();
        jLabel63 = new javax.swing.JLabel();
        voteSubheadCommitmentsBillTxt = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        voteSubheadPaymentsBillTxt = new javax.swing.JTextField();
        BudgetTypeCbx2 = new javax.swing.JComboBox();
        jLabel71 = new javax.swing.JLabel();
        division2 = new javax.swing.JLabel();
        votehead2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        Save1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        exitbtn4 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderPaymentCommitTable1 = new com.afrisoftech.dbadmin.JTable();
        jLabel32 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        ApprovalTblscr2 = new javax.swing.JScrollPane();
        imprestApprovalTable = new com.afrisoftech.dbadmin.JTable();
        jLabel74 = new javax.swing.JLabel();
        staffNoSearchTxt = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jLabel116 = new javax.swing.JLabel();
        SupplierTxt2 = new javax.swing.JTextField();
        financialPeriodlbl2 = new javax.swing.JLabel();
        financialPeriodCmbxBill1 = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        QuarterBillCbx1 = new javax.swing.JComboBox();
        jTextField21 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        voteheadBillCbx1 = new javax.swing.JComboBox();
        voteSubheadBillCbx1 = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        aie_no_bill1 = new javax.swing.JComboBox();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        voteBillTxt1 = new javax.swing.JComboBox();
        jLabel65 = new javax.swing.JLabel();
        VoteSubheadCommitmentsImpTxt = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        VoteSubheadPaymentsImpTxt = new javax.swing.JTextField();
        BudgetTypeCbx1 = new javax.swing.JComboBox();
        jLabel70 = new javax.swing.JLabel();
        division1 = new javax.swing.JLabel();
        votehead1 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        refNo = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        imprestPaymentCommitTable = new com.afrisoftech.dbadmin.JTable();
        jLabel47 = new javax.swing.JLabel();
        jTextField30 = new javax.swing.JTextField();
        bypassVote = new javax.swing.JCheckBox();
        jPanel15 = new javax.swing.JPanel();
        Save2 = new javax.swing.JButton();
        cancelbtn2 = new javax.swing.JButton();
        exitbtn2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        exitbtn6 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        ApprovalTblscr = new javax.swing.JScrollPane();
        ApprovalTbl = new com.afrisoftech.dbadmin.JTable();
        jLabel72 = new javax.swing.JLabel();
        jTextField42 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        lpoTxt = new javax.swing.JTextField();
        TenderTxt = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        SupplierTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        financialPeriodlbl = new javax.swing.JLabel();
        financialPeriodCmbx = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        divisionCmbx = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        divisionBalancetxt = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel67 = new javax.swing.JLabel();
        SubheadCommitmentsTxt = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        SubheadPaymentsTxt = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        BudgetTypeCbx = new javax.swing.JComboBox();
        division = new javax.swing.JLabel();
        votehead = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Save = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderPaymentCommitTable = new com.afrisoftech.dbadmin.JTable();
        jLabel16 = new javax.swing.JLabel();
        totalAmttxt = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        ApprovalTblscr3 = new javax.swing.JScrollPane();
        ApprovalTbl3 = new com.afrisoftech.dbadmin.JTable();
        jLabel73 = new javax.swing.JLabel();
        jTextField43 = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel115 = new javax.swing.JLabel();
        lpoTxt2 = new javax.swing.JTextField();
        jLabel117 = new javax.swing.JLabel();
        SupplierTxt3 = new javax.swing.JTextField();
        financialPeriodlbl3 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        aie_no_bill2 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();
        jTextField34 = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jTextField36 = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jTextField38 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        division3 = new javax.swing.JLabel();
        votehead3 = new javax.swing.JLabel();
        voteBillTxt2 = new javax.swing.JTextField();
        QuarterBillCbx2 = new javax.swing.JTextField();
        voteheadBillCbx2 = new javax.swing.JTextField();
        voteSubheadBillCbx2 = new javax.swing.JTextField();
        financialPeriodCmbxBill2 = new javax.swing.JTextField();
        jTextField50 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        Save3 = new javax.swing.JButton();
        cancelbtn3 = new javax.swing.JButton();
        exitbtn3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        exitbtn5 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        orderPaymentCommitTable3 = new com.afrisoftech.dbadmin.JTable();
        jLabel62 = new javax.swing.JLabel();
        jTextField40 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton13 = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        jTextField46 = new javax.swing.JTextField();
        jTextField47 = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Order/Imprest Commitment");
        setPreferredSize(new java.awt.Dimension(739, 413));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Bill here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel8.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,invoice_no from ac_accounts_payable where dealer !='' and ((transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal' or transaction_type='Projects Journal') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where transaction_type='Stock Delivery' and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));
        ApproveBillTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApproveBillTableMouseClicked(evt);
            }
        });
        ApprovalTblscr1.setViewportView(ApproveBillTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel8.add(ApprovalTblscr1, gridBagConstraints);

        jLabel75.setText("Invoice no:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel75, gridBagConstraints);

        jTextField45.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField45CaretUpdate(evt);
            }
        });
        jTextField45.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField45KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jTextField45, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel8, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel113.setText("Contract No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(jLabel113, gridBagConstraints);

        lpoTxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(lpoTxt1, gridBagConstraints);

        jLabel114.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(jLabel114, gridBagConstraints);

        dealerNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(dealerNameTxt, gridBagConstraints);

        financialPeriodlbl1.setText("Financial Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel2.add(financialPeriodlbl1, gridBagConstraints);

        financialPeriodCmbxBill.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(financialPeriodCmbxBill, gridBagConstraints);

        jLabel18.setText("Quarter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel2.add(jLabel18, gridBagConstraints);

        QuarterBillCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel2.add(QuarterBillCbx, gridBagConstraints);

        invoiceNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(invoiceNoTxt, gridBagConstraints);

        jLabel19.setText("Invoice No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel19, gridBagConstraints);

        jLabel20.setText("Vote Head");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel20, gridBagConstraints);

        jLabel21.setText("Division");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel21, gridBagConstraints);

        voteheadBillCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteheadBillCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(voteheadBillCbx, gridBagConstraints);

        voteSubheadBillCbx.setEnabled(false);
        voteSubheadBillCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteSubheadBillCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(voteSubheadBillCbx, gridBagConstraints);

        jLabel22.setText("AIE  No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel22, gridBagConstraints);

        aie_no_bill.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct aieno from ac_aie_allocation"));
        aie_no_bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aie_no_billActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(aie_no_bill, gridBagConstraints);

        jLabel23.setText("Budget Allocation Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel23, gridBagConstraints);

        jLabel24.setText("Total Commitments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel24, gridBagConstraints);

        jLabel25.setText("Payments Done");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel25, gridBagConstraints);

        jTextField12.setEditable(false);
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField12, gridBagConstraints);

        jTextField13.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField13, gridBagConstraints);

        jTextField14.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField14, gridBagConstraints);

        jLabel26.setText("Division Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel26, gridBagConstraints);

        jLabel27.setText("Vote Head Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel27, gridBagConstraints);

        jTextField15.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField15, gridBagConstraints);

        jTextField16.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField16, gridBagConstraints);

        jLabel28.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel28, gridBagConstraints);

        jLabel29.setText("Division Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel29, gridBagConstraints);

        jTextField17.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField17, gridBagConstraints);

        jTextField18.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField18, gridBagConstraints);

        jLabel30.setText("Vote Head Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel30, gridBagConstraints);

        jTextField19.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField19, gridBagConstraints);

        jLabel31.setText("Vote");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel31, gridBagConstraints);

        voteBillTxt.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel2.add(voteBillTxt, gridBagConstraints);

        jLabel63.setText("Vote Head Commitments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jLabel63, gridBagConstraints);

        voteSubheadCommitmentsBillTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(voteSubheadCommitmentsBillTxt, gridBagConstraints);

        jLabel64.setText("Vote Head Payments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jLabel64, gridBagConstraints);

        voteSubheadPaymentsBillTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(voteSubheadPaymentsBillTxt, gridBagConstraints);

        BudgetTypeCbx2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT DISTINCT classname FROM vb_class)  ORDER BY 1 "));
        BudgetTypeCbx2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BudgetTypeCbx2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(BudgetTypeCbx2, gridBagConstraints);

        jLabel71.setText("Budget Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel71, gridBagConstraints);

        division2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        division2.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(division2, gridBagConstraints);

        votehead2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        votehead2.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(votehead2, gridBagConstraints);

        jButton6.setText("VoteHead Breakdown");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(jButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel2, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel9.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        Save1.setMnemonic('s');
        Save1.setText("Commit Bill");
        Save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(Save1, gridBagConstraints);

        cancelbtn1.setMnemonic('l');
        cancelbtn1.setText("Refresh");
        cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(cancelbtn1, gridBagConstraints);

        exitbtn1.setMnemonic('c');
        exitbtn1.setText("Zoom Table");
        exitbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(exitbtn1, gridBagConstraints);

        jButton2.setMnemonic('r');
        jButton2.setText("Delete Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jButton2, gridBagConstraints);

        exitbtn4.setMnemonic('c');
        exitbtn4.setText("Remove row");
        exitbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(exitbtn4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel6.add(jPanel9, gridBagConstraints);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bill Particulars", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        orderPaymentCommitTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Invoice Date", "Invoice No", "Item", "Raised By", "Reason", "VAT", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderPaymentCommitTable1.setGridColor(new java.awt.Color(204, 204, 255));
        /*javax.swing.table.TableColumn teditor3 = this.orderPaymentCommitTable.getColumn("vote subhead");
        teditor3.setCellEditor(new javax.swing.DefaultCellEditor(cmboxs3));

        cmboxs3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxs3ActionPerformed(evt);
            }
        });*/
        //this.grn2PayablesLinkingTable.getColumnModel().getColumn(9).setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subhead FROM subheads"))));
        orderPaymentCommitTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderPaymentCommitTable1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                orderPaymentCommitTable1MouseReleased(evt);
            }
        });
        orderPaymentCommitTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orderPaymentCommitTable1KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(orderPaymentCommitTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jScrollPane2, gridBagConstraints);

        jLabel32.setText("Total amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jLabel32, gridBagConstraints);

        jTextField20.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel10.add(jTextField20, gridBagConstraints);

        jCheckBox1.setText("By Pass Commitment");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel10.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel6.add(jPanel10, gridBagConstraints);

        jTabbedPane1.addTab("Bills Commitment ", jPanel6);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Imprest here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel12.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel12.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        imprestApprovalTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"(SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and final_voucher_no = ''  AND commited = false ORDER  BY dealer) union (SELECT distinct payee as STAFF,dealer_code as STAFF_NO FROM ac_petty_cash_requisition where cancelled = false AND commited = false ORDER  BY payee)"));
        imprestApprovalTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprestApprovalTableMouseClicked(evt);
            }
        });
        ApprovalTblscr2.setViewportView(imprestApprovalTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel12.add(ApprovalTblscr2, gridBagConstraints);

        jLabel74.setText("Staff No :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jLabel74, gridBagConstraints);

        staffNoSearchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                staffNoSearchTxtKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(staffNoSearchTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jPanel12, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel116.setText("Staff");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel13.add(jLabel116, gridBagConstraints);

        SupplierTxt2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(SupplierTxt2, gridBagConstraints);

        financialPeriodlbl2.setText("Financial Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel13.add(financialPeriodlbl2, gridBagConstraints);

        financialPeriodCmbxBill1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel13.add(financialPeriodCmbxBill1, gridBagConstraints);

        jLabel33.setText("Quarter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel13.add(jLabel33, gridBagConstraints);

        QuarterBillCbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel13.add(QuarterBillCbx1, gridBagConstraints);

        jTextField21.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField21, gridBagConstraints);

        jLabel34.setText("Staff No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel34, gridBagConstraints);

        jLabel35.setText("Vote Head");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel35, gridBagConstraints);

        jLabel36.setText("Division");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel36, gridBagConstraints);

        voteheadBillCbx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteheadBillCbx1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel13.add(voteheadBillCbx1, gridBagConstraints);

        voteSubheadBillCbx1.setEnabled(false);
        voteSubheadBillCbx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteSubheadBillCbx1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel13.add(voteSubheadBillCbx1, gridBagConstraints);

        jLabel37.setText("AIE  No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel37, gridBagConstraints);

        aie_no_bill1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct aieno from ac_aie_allocation"));
        aie_no_bill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aie_no_bill1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel13.add(aie_no_bill1, gridBagConstraints);

        jLabel38.setText("Budget Allocation Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel38, gridBagConstraints);

        jLabel39.setText("Total Commitments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel39, gridBagConstraints);

        jLabel40.setText("Payments Done");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel40, gridBagConstraints);

        jTextField22.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField22, gridBagConstraints);

        jTextField23.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField23, gridBagConstraints);

        jTextField24.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField24, gridBagConstraints);

        jLabel41.setText("Division Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel13.add(jLabel41, gridBagConstraints);

        jLabel42.setText("Vote Head Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel13.add(jLabel42, gridBagConstraints);

        jTextField25.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField25, gridBagConstraints);

        jTextField26.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField26, gridBagConstraints);

        jLabel43.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel13.add(jLabel43, gridBagConstraints);

        jLabel44.setText("Division Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        jPanel13.add(jLabel44, gridBagConstraints);

        jTextField27.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField27, gridBagConstraints);

        jTextField28.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField28, gridBagConstraints);

        jLabel45.setText("Vote Head Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel13.add(jLabel45, gridBagConstraints);

        jTextField29.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField29, gridBagConstraints);

        jLabel46.setText("Vote");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel46, gridBagConstraints);

        voteBillTxt1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel13.add(voteBillTxt1, gridBagConstraints);

        jLabel65.setText("Vote Head Commitments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        jPanel13.add(jLabel65, gridBagConstraints);

        VoteSubheadCommitmentsImpTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel13.add(VoteSubheadCommitmentsImpTxt, gridBagConstraints);

        jLabel66.setText("Vote Head Payments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        jPanel13.add(jLabel66, gridBagConstraints);

        VoteSubheadPaymentsImpTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(VoteSubheadPaymentsImpTxt, gridBagConstraints);

        BudgetTypeCbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT DISTINCT classname FROM vb_class)  ORDER BY 1 "));
        BudgetTypeCbx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BudgetTypeCbx1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel13.add(BudgetTypeCbx1, gridBagConstraints);

        jLabel70.setText("Budget Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel70, gridBagConstraints);

        division1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        division1.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel13.add(division1, gridBagConstraints);

        votehead1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        votehead1.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel13.add(votehead1, gridBagConstraints);

        jButton7.setText("VoteHead Breakdown");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel13.add(jButton7, gridBagConstraints);

        jLabel59.setText("Ref No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel59, gridBagConstraints);

        refNo.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(refNo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jPanel13, gridBagConstraints);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imprest/Other payments Particulars", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel14.setLayout(new java.awt.GridBagLayout());

        imprestPaymentCommitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Invoice Date", "Invoice No", "Item", "Raised By", "Reason", "VAT", "Amount", "Tick"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        imprestPaymentCommitTable.setGridColor(new java.awt.Color(204, 204, 255));
        /*javax.swing.table.TableColumn teditor3 = this.orderPaymentCommitTable.getColumn("vote subhead");
        teditor3.setCellEditor(new javax.swing.DefaultCellEditor(cmboxs3));

        cmboxs3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxs3ActionPerformed(evt);
            }
        });*/
        //this.grn2PayablesLinkingTable.getColumnModel().getColumn(9).setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subhead FROM subheads"))));
        imprestPaymentCommitTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprestPaymentCommitTableMouseClicked(evt);
            }
        });
        imprestPaymentCommitTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                imprestPaymentCommitTableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(imprestPaymentCommitTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jScrollPane3, gridBagConstraints);

        jLabel47.setText("Total amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel47, gridBagConstraints);

        jTextField30.setEditable(false);
        jTextField30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField30.setForeground(new java.awt.Color(204, 0, 0));
        jTextField30.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField30.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel14.add(jTextField30, gridBagConstraints);

        bypassVote.setText("By pass Votebook");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel14.add(bypassVote, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel11.add(jPanel14, gridBagConstraints);

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel15.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        Save2.setMnemonic('s');
        Save2.setText("Commit");
        Save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(Save2, gridBagConstraints);

        cancelbtn2.setMnemonic('l');
        cancelbtn2.setText("Refresh");
        cancelbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(cancelbtn2, gridBagConstraints);

        exitbtn2.setMnemonic('c');
        exitbtn2.setText("Zoom Table");
        exitbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(exitbtn2, gridBagConstraints);

        jButton3.setMnemonic('r');
        jButton3.setText("Delete Item");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jButton3, gridBagConstraints);

        exitbtn6.setMnemonic('c');
        exitbtn6.setText("Remove row");
        exitbtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(exitbtn6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel11.add(jPanel15, gridBagConstraints);

        jTabbedPane1.addTab("Imprest/Other Payment Committment ", jPanel11);

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select LPO/LSO here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel7.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel7.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct order_no,supplier from st_orders where ordered=false and dispatch=false and miu_approval=true order by order_no "));
        ApprovalTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApprovalTblMouseClicked(evt);
            }
        });
        ApprovalTblscr.setViewportView(ApprovalTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel7.add(ApprovalTblscr, gridBagConstraints);

        jLabel72.setText("lpo no:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel72, gridBagConstraints);

        jTextField42.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField42KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jTextField42, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel111.setText("LPO/LSO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel111, gridBagConstraints);

        lpoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(lpoTxt, gridBagConstraints);

        TenderTxt.setEditable(false);
        TenderTxt.setForeground(new java.awt.Color(0, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(TenderTxt, gridBagConstraints);

        jLabel112.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel112, gridBagConstraints);

        SupplierTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(SupplierTxt, gridBagConstraints);

        jLabel2.setText("Quotation/Tender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        financialPeriodlbl.setText("Financial Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(financialPeriodlbl, gridBagConstraints);

        financialPeriodCmbx.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(financialPeriodCmbx, gridBagConstraints);

        jLabel3.setText("Quarter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(jComboBox1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField1, gridBagConstraints);

        jLabel4.setText("Document Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Vote Head");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Division");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanel1.add(jLabel6, gridBagConstraints);

        divisionCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(divisionCmbx, gridBagConstraints);

        jComboBox3.setEnabled(false);
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(jComboBox3, gridBagConstraints);

        jLabel7.setText("AIE  No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel7, gridBagConstraints);

        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct aieno from ac_aie_allocation"));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jComboBox4, gridBagConstraints);

        jLabel8.setText("Budget Allocation Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Total Commitments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Payments Done");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel10, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField2, gridBagConstraints);

        jTextField3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField3, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField4, gridBagConstraints);

        jLabel11.setText("Division Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel11, gridBagConstraints);

        jLabel12.setText("Vote Head Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jLabel12, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField5, gridBagConstraints);

        jTextField6.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField6, gridBagConstraints);

        jLabel13.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel14.setText("Division Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel14, gridBagConstraints);

        divisionBalancetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(divisionBalancetxt, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField8, gridBagConstraints);

        jLabel15.setText("Vote Head Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jLabel15, gridBagConstraints);

        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField9, gridBagConstraints);

        jLabel1.setText("Vote");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jComboBox5.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jComboBox5, gridBagConstraints);

        jLabel67.setText("Vote Head Commitments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        jPanel1.add(jLabel67, gridBagConstraints);

        SubheadCommitmentsTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(SubheadCommitmentsTxt, gridBagConstraints);

        jLabel68.setText("Vote Head Payments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        jPanel1.add(jLabel68, gridBagConstraints);

        SubheadPaymentsTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(SubheadPaymentsTxt, gridBagConstraints);

        jLabel69.setText("Budget Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel69, gridBagConstraints);

        BudgetTypeCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT DISTINCT classname FROM vb_class)  ORDER BY 1 "));
        BudgetTypeCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BudgetTypeCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(BudgetTypeCbx, gridBagConstraints);

        division.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        division.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(division, gridBagConstraints);

        votehead.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        votehead.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(votehead, gridBagConstraints);

        jButton8.setText("VoteHead Breakdown");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        Save.setMnemonic('s');
        Save.setText("Commit LPO/LSO");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(Save, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Refresh");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(cancelbtn, gridBagConstraints);

        exitbtn.setMnemonic('c');
        exitbtn.setText("Remove row");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(exitbtn, gridBagConstraints);

        jButton1.setMnemonic('r');
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton1, gridBagConstraints);

        jButton5.setText("View Commited LPO/LSO");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        jPanel4.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel3.add(jPanel4, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LPO/LSO Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        orderPaymentCommitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "item code", "item", "Qty", "Units", "Unit Price", "Gross Value", "Discount", "VAT", "net value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderPaymentCommitTable.setGridColor(new java.awt.Color(204, 204, 255));
        /*javax.swing.table.TableColumn teditor3 = this.orderPaymentCommitTable.getColumn("vote subhead");
        teditor3.setCellEditor(new javax.swing.DefaultCellEditor(cmboxs3));

        cmboxs3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxs3ActionPerformed(evt);
            }
        });*/
        //this.grn2PayablesLinkingTable.getColumnModel().getColumn(9).setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subhead FROM subheads"))));
        orderPaymentCommitTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderPaymentCommitTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                orderPaymentCommitTableMouseReleased(evt);
            }
        });
        orderPaymentCommitTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orderPaymentCommitTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(orderPaymentCommitTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane1, gridBagConstraints);

        jLabel16.setText("Total amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jLabel16, gridBagConstraints);

        totalAmttxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel5.add(totalAmttxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        jTabbedPane2.addTab("Commit", jPanel3);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel18.setLayout(new java.awt.GridBagLayout());

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Orders here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel19.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel19.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel19.setLayout(new java.awt.GridBagLayout());

        ApprovalTbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,order_no from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no not like '%DIR_PU%' and committed=false and invoice_no not ilike 'RT:%' and invoice_no not ilike 'VAT:%' and invoice_no not ilike 'WT:%' order by order_no"));
        ApprovalTbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApprovalTbl3MouseClicked(evt);
            }
        });
        ApprovalTblscr3.setViewportView(ApprovalTbl3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel19.add(ApprovalTblscr3, gridBagConstraints);

        jLabel73.setText("lpo no:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jLabel73, gridBagConstraints);

        jTextField43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField43ActionPerformed(evt);
            }
        });
        jTextField43.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField43KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jTextField43, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(jPanel19, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel20.setLayout(new java.awt.GridBagLayout());

        jLabel115.setText("LPO/LSO NO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel20.add(jLabel115, gridBagConstraints);

        lpoTxt2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(lpoTxt2, gridBagConstraints);

        jLabel117.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel20.add(jLabel117, gridBagConstraints);

        SupplierTxt3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(SupplierTxt3, gridBagConstraints);

        financialPeriodlbl3.setText("Financial Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel20.add(financialPeriodlbl3, gridBagConstraints);

        jLabel48.setText("Quarter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel20.add(jLabel48, gridBagConstraints);

        aie_no_bill2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(aie_no_bill2, gridBagConstraints);

        jLabel49.setText("Invoice No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel49, gridBagConstraints);

        jLabel50.setText("Votehead");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel50, gridBagConstraints);

        jLabel51.setText("Division");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel51, gridBagConstraints);

        jLabel52.setText("AIE  No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel52, gridBagConstraints);

        jLabel53.setText("Budget Allocation Amt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel53, gridBagConstraints);

        jLabel54.setText("Total Commitments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel54, gridBagConstraints);

        jLabel55.setText("Payments Done");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel55, gridBagConstraints);

        jTextField32.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField32, gridBagConstraints);

        jTextField33.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField33, gridBagConstraints);

        jTextField34.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField34, gridBagConstraints);

        jLabel56.setText("Division Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel20.add(jLabel56, gridBagConstraints);

        jLabel57.setText("VoteHead Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel20.add(jLabel57, gridBagConstraints);

        jTextField35.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField35, gridBagConstraints);

        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField36, gridBagConstraints);

        jLabel58.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel20.add(jLabel58, gridBagConstraints);

        jTextField38.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField38, gridBagConstraints);

        jLabel61.setText("Vote");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jLabel61, gridBagConstraints);

        jLabel17.setText("Amount Committed");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        jPanel20.add(jLabel17, gridBagConstraints);

        jTextField41.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField41, gridBagConstraints);

        division3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        division3.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel20.add(division3, gridBagConstraints);

        votehead3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        votehead3.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        jPanel20.add(votehead3, gridBagConstraints);

        voteBillTxt2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(voteBillTxt2, gridBagConstraints);

        QuarterBillCbx2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(QuarterBillCbx2, gridBagConstraints);

        voteheadBillCbx2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(voteheadBillCbx2, gridBagConstraints);

        voteSubheadBillCbx2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(voteSubheadBillCbx2, gridBagConstraints);

        financialPeriodCmbxBill2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(financialPeriodCmbxBill2, gridBagConstraints);

        jTextField50.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jTextField50, gridBagConstraints);

        jButton9.setText("VoteHead Breakdown");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel20.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(jPanel20, gridBagConstraints);

        jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel21.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel21.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        Save3.setMnemonic('s');
        Save3.setText("Decommit");
        Save3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(Save3, gridBagConstraints);

        cancelbtn3.setMnemonic('l');
        cancelbtn3.setText("Refresh");
        cancelbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(cancelbtn3, gridBagConstraints);

        exitbtn3.setMnemonic('c');
        exitbtn3.setText("Zoom Table");
        exitbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(exitbtn3, gridBagConstraints);

        jButton4.setMnemonic('r');
        jButton4.setText("Delete Item");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jButton4, gridBagConstraints);

        jButton12.setText("View Commited LPO/LSO");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        jPanel21.add(jButton12, gridBagConstraints);

        exitbtn5.setMnemonic('c');
        exitbtn5.setText("Remove row");
        exitbtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(exitbtn5, gridBagConstraints);

        jButton14.setText("Commit Lpo");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        jPanel21.add(jButton14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel18.add(jPanel21, gridBagConstraints);

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LPO/LSO Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jScrollPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane4MouseClicked(evt);
            }
        });

        orderPaymentCommitTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Invoice Date", "Invoice No", "Item", "Raised By", "Reason", "VAT", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderPaymentCommitTable3.setGridColor(new java.awt.Color(204, 204, 255));
        /*javax.swing.table.TableColumn teditor3 = this.orderPaymentCommitTable.getColumn("vote subhead");
        teditor3.setCellEditor(new javax.swing.DefaultCellEditor(cmboxs3));

        cmboxs3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxs3ActionPerformed(evt);
            }
        });*/
        //this.grn2PayablesLinkingTable.getColumnModel().getColumn(9).setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subhead FROM subheads"))));
        orderPaymentCommitTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderPaymentCommitTable3MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                orderPaymentCommitTable3MouseReleased(evt);
            }
        });
        orderPaymentCommitTable3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orderPaymentCommitTable3KeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(orderPaymentCommitTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(jScrollPane4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jLabel62, gridBagConstraints);

        jTextField40.setEditable(false);
        jTextField40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField40ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel22.add(jTextField40, gridBagConstraints);

        jButton10.setBackground(new java.awt.Color(153, 255, 255));
        jButton10.setForeground(new java.awt.Color(0, 102, 102));
        jButton10.setText("GRN");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel22.add(jButton10, gridBagConstraints);

        jButton11.setBackground(new java.awt.Color(153, 255, 255));
        jButton11.setForeground(new java.awt.Color(0, 102, 102));
        jButton11.setText("Acceptance Form");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel22.add(jButton11, gridBagConstraints);

        jCheckBox2.setText("Balance Back To Vote");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel22.add(jCheckBox2, gridBagConstraints);

        jButton13.setBackground(new java.awt.Color(153, 255, 255));
        jButton13.setForeground(new java.awt.Color(0, 102, 102));
        jButton13.setText("Credit Note");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel22.add(jButton13, gridBagConstraints);

        jLabel76.setText("Amount Payable ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jLabel76, gridBagConstraints);

        jTextField46.setEditable(false);
        jTextField46.setForeground(new java.awt.Color(240, 240, 240));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel22.add(jTextField46, gridBagConstraints);

        jTextField47.setEditable(false);
        jTextField47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField47ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel22.add(jTextField47, gridBagConstraints);

        jCheckBox3.setText("By Pass Commitment");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel22.add(jCheckBox3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel18.add(jPanel22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(jPanel18, gridBagConstraints);

        jTabbedPane2.addTab("Decommit", jPanel16);

        jTabbedPane1.addTab("Orders Commitment", jTabbedPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        int t = 0;
        check_commit = false;
        try {
            // if(!ApprovalTbl.getValueAt(current_row,0).toString().contains("SUPLPO")){
            connectDB.setAutoCommit(false);
            java.sql.Statement stm1213 = connectDB.createStatement();
            java.sql.ResultSet rse1213 = stm1213.executeQuery("select distinct supplier,refno,aie_no,head,subhead,financial_year,period,sum(allocated_amount-paid_amount),vote from ac_aie_commitment where refno='" + lpoTxt.getText() + "' or refno='" + parent_lpo + "' group by 1,2,3,4,5,6,7,9 having sum(allocated_amount-paid_amount)>0 ");
            while (rse1213.next()) {
                t = ++t;
                System.out.println(t + "am here");
                if (t > 0) {
                    aie_no = rse1213.getObject("aie_no").toString();
                    head = rse1213.getObject("head").toString();
                    subhead = rse1213.getObject("subhead").toString();
                    financial_year = rse1213.getObject("financial_year").toString();
                    period = rse1213.getObject("period").toString();
                    vote = rse1213.getObject("vote").toString();
                    String message = "Aie:" + aie_no + " Year:" + financial_year + "Quater:" + period + " Vote:" + vote + " Division:" + head + " VoteHead:" + subhead;
                    System.out.println(message);
                    System.out.println(aie_no + "==" + jComboBox4.getSelectedItem().toString() + " " + head + "==" + divisionCmbx.getSelectedItem().toString() + " " + subhead + "==" + jComboBox3.getSelectedItem().toString() + " " + financial_year + "==" + financialPeriodCmbx.getSelectedItem().toString() + " " + period + "==" + jComboBox1.getSelectedItem().toString() + " " + vote + "==" + jComboBox5.getSelectedItem().toString());
                }
                if (aie_no.trim().equals(jComboBox4.getSelectedItem().toString().trim()) && head.trim().equals(divisionCmbx.getSelectedItem().toString().trim()) && subhead.trim().equals(jComboBox3.getSelectedItem().toString().trim()) && financial_year.trim().equals(financialPeriodCmbx.getSelectedItem().toString().trim()) && period.trim().equals(jComboBox1.getSelectedItem().toString().trim()) && vote.trim().equals(jComboBox5.getSelectedItem().toString().trim())) {
                    check_commit = false;
                    System.out.println("check correct vote " + check_commit);
                } else {
                    check_commit = true;
                    System.out.println("check wrong vote " + check_commit);

                }
                //  }
            }
        } catch (Exception r) {
        }

        /////KKKKKKK
        if (lpoTxt.getText().contains("SUPLPO")) {
            check_commit = false;
        }
        if (jTextField6.getText().toString().replace(",", "").length() > 0 && jTextField2.getText().toString().replace(",", "").length() > 0) {
            if (totalAmttxt.getText().toString().replace(",", "").length() > 0) {
                if (Double.parseDouble(jTextField9.getText().toString().replace(",", "")) >= Double.parseDouble(totalAmttxt.getText().toString().replace(",", "")) && Double.parseDouble(totalAmttxt.getText().toString().replace(",", "")) != 0 && check_commit == false) {
                    System.out.println("check correct vote 2 " + check_commit);

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String subvote = null;
                    String vbclass = null;
                    String user = null;
                    String head = null;
                    String subhead = null;
                    String subitem = null;
                    String aie_no = null;
                    String vote = null;

                    int comitno = 0;
                    try {

//            java.sql.Statement stm121 = connectDB.createStatement();
//            java.sql.ResultSet rse121 = stm121.executeQuery("SELECT subvote FROM heads WHERE  vote ='" + jComboBox1.getSelectedItem() + "' AND head = '" + jComboBox2.getSelectedItem() + "'");
//            while (rse121.next()) {
//
//                subvote = rse121.getObject(1).toString();
//            }
//
//            java.sql.Statement stm = connectDB.createStatement();
//            java.sql.ResultSet rse = stm.executeQuery("SELECT class FROM vb_class WHERE  classname ILIKE '" + jComboBox4.getSelectedItem() + "'");
//            while (rse.next()) {
//
//                vbclass = rse.getObject(1).toString();
//            }
                        java.sql.Statement st = connectDB.createStatement();
                        java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
                        while (rs.next()) {

                            user = rs.getObject(1).toString();
                            comitno = rs.getInt(2);

                        }

                        java.sql.Statement st11 = connectDB.createStatement();
                        java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx.getSelectedItem() + "'");
                        while (ress1.next()) {
                            vbclass = ress1.getString(1);
                        }

                        /**
                         * ********handling supplimentary LPOS************
                         */
                        if (lpoTxt.getText().contains("SUPLPO")) {

                            java.sql.Statement stm1216 = connectDB.createStatement();
                            java.sql.ResultSet rse1216 = stm1216.executeQuery("select * from ac_aie_commitment where refno='" + parent_lpo + "' and reftype='LPO' ");
                            if (rse1216.next()) {

                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                        + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                        + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                        + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period)"
                                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                        + "?, ?, ?, ?, ?, ?, ?,?,?)");
//                java.sql.Statement stm12167 = connectDB.createStatement();
//            java.sql.ResultSet rse12167 = stm12167.executeQuery("select * from ac_aie_commitment where refno='"+parent_lpo+"' and reftype='LPO'");
//           if(rse12167.next()) {
//           
                                pstmt2.setObject(1, rse1216.getInt("v_class"));
                                // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                                pstmt2.setObject(2, rse1216.getString("vote"));
                                pstmt2.setObject(3, rse1216.getString("subvote"));
                                pstmt2.setObject(4, rse1216.getString("head"));
                                pstmt2.setObject(5, rse1216.getString("subhead"));
                                pstmt2.setObject(6, rse1216.getString("subitem"));
                                pstmt2.setObject(7, rse1216.getString("supplier"));
                                pstmt2.setObject(8, "SUPPLIMENTARY LPO");
                                pstmt2.setObject(9, parent_lpo);
                                pstmt2.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                pstmt2.setDouble(11, com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(orderPaymentCommitTable, 8));
                                pstmt2.setDouble(12, 0.0);
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                                pstmt2.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                                pstmt2.setObject(14, "");
                                pstmt2.setObject(15, "");
                                pstmt2.setObject(16, user);
                                pstmt2.setObject(17, rse1216.getString("aie_no"));
                                pstmt2.setObject(18, "0");
                                pstmt2.setObject(19, comitno);
                                pstmt2.setObject(20, lpoTxt.getText());
                                pstmt2.setObject(21, rse1216.getString("financial_year"));
                                pstmt2.setObject(22, rse1216.getString("period"));

                                pstmt2.execute();
                                System.out.println("The SUPPLIMENTARY LPO has been committed");

                                ////updating st_orders
                                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE st_orders SET ordered=true , dispatch=true where order_no = ? and supplier = ? and quotation_no = ? and code = ? and item = ?");
                                pstmt9.setString(1, lpoTxt.getText());
                                pstmt9.setString(2, com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt.getText()));
                                pstmt9.setString(3, TenderTxt.getText());
                                pstmt9.setObject(4, orderPaymentCommitTable.getModel().getValueAt(0, 0));
                                pstmt9.setObject(5, orderPaymentCommitTable.getModel().getValueAt(0, 1));

                                pstmt9.executeUpdate();
//                                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE st_orders SET ordered=true where order_no='" + lpoTxt.getText() + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt.getText()) + "'  and code='" + orderPaymentCommitTable.getModel().getValueAt(0, 0) + "' and item='" + orderPaymentCommitTable.getModel().getValueAt(0, 1) + "'");
//                                pstmt9.executeUpdate();
                                connectDB.setAutoCommit(false);
                                connectDB.commit();
                                connectDB.setAutoCommit(true);
                                javax.swing.JOptionPane.showMessageDialog(this, "SUPPLIMENTARY LPO COMMITTED  SUCCESSFULLY", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                //commit_check=false;
                                // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct order_no,supplier from st_orders where ordered=false and dispatch=false "));
                                cancelbtn.doClick();

                            }

                        } else {
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                    + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                    + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                    + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period)"
                                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                    + "?, ?, ?, ?, ?, ?, ?,?,?)");
                            pstmt2.setObject(1, vbclass);
                            // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                            pstmt2.setObject(2, jComboBox5.getSelectedItem());
                            pstmt2.setObject(3, divisionCmbx.getSelectedItem());
                            pstmt2.setObject(4, divisionCmbx.getSelectedItem());
                            pstmt2.setObject(5, jComboBox3.getSelectedItem());
                            pstmt2.setObject(6, "");
                            pstmt2.setObject(7, SupplierTxt.getText());
                            pstmt2.setObject(8, jTextField1.getText());
                            pstmt2.setObject(9, lpoTxt.getText());
                            pstmt2.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt2.setDouble(11, com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(orderPaymentCommitTable, 8));
                            pstmt2.setDouble(12, 0.0);
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                            pstmt2.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                            pstmt2.setObject(14, "");
                            pstmt2.setObject(15, "");
                            pstmt2.setObject(16, user);
                            pstmt2.setObject(17, jComboBox4.getSelectedItem());
                            pstmt2.setObject(18, "0");
                            pstmt2.setObject(19, comitno);
                            pstmt2.setObject(20, "");
                            pstmt2.setObject(21, financialPeriodCmbx.getSelectedItem());
                            pstmt2.setObject(22, jComboBox1.getSelectedItem());
                            pstmt2.execute();
                            System.out.println("The LPO has been committed");
                            // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, orderPaymentCommitTable.getValueAt(i, 3).toString(), commentsTxt.getText(), "EXPENDITURE_VOTEBOOK", "EXPENDITURE_APPROVAL");

                            //////updating the table st_item_to quote
                            for (int i = 0; i < orderPaymentCommitTable.getModel().getRowCount(); i++) {
                                if (orderPaymentCommitTable.getModel().getValueAt(i, 1) != null) {

                                    if (!TenderTxt.getText().toString().equalsIgnoreCase("ExternalLpo")) {
                                        java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE st_orders SET ordered=true , dispatch=true where order_no = ? and supplier = ? and quotation_no = ? and code = ? and item = ?");
                                        pstmt9.setString(1, lpoTxt.getText());
                                        pstmt9.setString(2, com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt.getText()));
                                        pstmt9.setString(3, TenderTxt.getText());
                                        pstmt9.setObject(4, orderPaymentCommitTable.getModel().getValueAt(i, 0));
                                        pstmt9.setObject(5, orderPaymentCommitTable.getModel().getValueAt(i, 1));

                                        pstmt9.executeUpdate();
//                                        java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE st_orders SET ordered=true where order_no='" + lpoTxt.getText() + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt.getText()) + "' and quotation_no='" + TenderTxt.getText() + "' and code='" + orderPaymentCommitTable.getModel().getValueAt(i, 0) + "' and item='" + orderPaymentCommitTable.getModel().getValueAt(i, 1) + "'");
//                                        pstmt9.executeUpdate();

                                        java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE st_item_to_quote SET vote_class=?, vote=?, head=?, subhead=?, sub_item=?, sub_item_desc=? where tender_no= ? and item_description ilike ? and   item_code= ? ");
                                        pstmt4.setObject(1, vbclass);
                                        pstmt4.setObject(2, vote);
                                        pstmt4.setObject(3, head);
                                        pstmt4.setObject(4, subhead);
                                        pstmt4.setObject(5, subitem);
                                        pstmt4.setObject(6, "");
                                        pstmt4.setObject(7, TenderTxt.getText());
                                        pstmt4.setObject(8, orderPaymentCommitTable.getModel().getValueAt(i, 1).toString().trim());
                                        pstmt4.setObject(9, orderPaymentCommitTable.getModel().getValueAt(i, 0));

//                     java.sql.Statement stmnt=connectDB.createStatement();
//                     java.sql.ResultSet resd=stmnt.executeQuery("SELECT subitemname from subitems where item='"+subhead+"' and subitem='"+subitem+"'");
//                    String subhead_desc=null;
//                     while(resd.next()){
//                    subhead_desc=resd.getString(1);
//                    }
                                        pstmt4.setObject(6, "");
                                        // System.out.println("subhead description= "+subhead_desc);
                                        pstmt4.executeUpdate();
                                        System.err.println("KICK olson");

                                    } else {
                                        java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE st_orders SET ordered=true , dispatch=true where order_no = ? and supplier = ? and quotation_no = ? and code = ? and item = ?");
                                        pstmt9.setString(1, lpoTxt.getText());
                                        pstmt9.setString(2, com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt.getText()));
                                        pstmt9.setString(3, TenderTxt.getText());
                                        pstmt9.setObject(4, orderPaymentCommitTable.getModel().getValueAt(i, 0));
                                        pstmt9.setObject(5, orderPaymentCommitTable.getModel().getValueAt(i, 1));

                                        pstmt9.executeUpdate();
                                        System.err.println("DO NOTHING to olson");
                                    }
                                }
                            }
                        }

                        connectDB.commit();
                        connectDB.setAutoCommit(true);
                        javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        //commit_check=false;
                        // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct order_no,supplier from st_orders where ordered=false and dispatch=false "));
                        cancelbtn.doClick();

                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        try {
                            connectDB.rollback();
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        System.out.println(sq.getMessage());
                    }

                } else {
                    if (check_commit = true) {
                        System.out.println("am done " + check_commit);
                        String message = "Aie:" + aie_no + " Year:" + financial_year + "Quater:" + period + " Vote:" + vote + " Division:" + head + " VoteHead:" + subhead;
                        String str = "<html><center><font color=red> INVALID lPO/LSO COMMITMENT VOTE! " + message + " </font></center></html>";
                        JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));

                    } else {
                        String str = "<html><center><font color=red> INVALID lPO/LSO COMMITMENT! CHECK YOUR FIGURES</font></center></html>";
                        JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));

                    }
                    String str = "<html><center><font color=red> INVALID lPO/LSO COMMITMENT! CHECK YOUR FIGURES</font></center></html>";
                    JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
                }
            } else {
                String str = "<html><center><font color=red> You need to click on the Table to verify The total amount on the LPO/LSO</font></center></html>";
                JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
            }
        } else {
            String str = "<html><center><font color=red>Choose the AIENO and the Vote Subhead To Specify The votes Affected</font></center></html>";
            JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
        }

    }//GEN-LAST:event_SaveActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct order_no,supplier from st_orders where ordered=false and dispatch=false "));
        for (int k = 0; k < orderPaymentCommitTable.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable.getColumnCount(); r++) {
                orderPaymentCommitTable.getModel().setValueAt(null, k, r);
            }
        }
        division.setText(null);
        votehead.setText(null);
        jTextField42.setText(null);
        SupplierTxt.setText(null);
        lpoTxt.setText(null);
        jTextField1.setText(null);
        TenderTxt.setText(null);
        jComboBox5.removeAllItems();
        financialPeriodCmbx.removeAllItems();
        jTextField2.setText(null);
        jTextField3.setText(null);
        jTextField4.setText(null);
        jTextField5.setText(null);
        jTextField6.setText(null);
        jTextField8.setText(null);
        divisionBalancetxt.setText(null);
        jTextField9.setText(null);
        divisionCmbx.removeAllItems();
        jComboBox3.removeAllItems();
        totalAmttxt.setText(null);

        SupplierTxt.setText(null);
        lpoTxt.setText(null);

        TenderTxt.setText(null);
        //TenderTxt1.setText(null);
        for (int k = 0; k < orderPaymentCommitTable.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable.getColumnCount(); r++) {
                orderPaymentCommitTable.getModel().setValueAt(null, k, r);
            }
        }

        for (int k = 0; k < ApprovalTbl.getRowCount(); k++) {
            for (int r = 0; r < ApprovalTbl.getColumnCount(); r++) {
                ApprovalTbl.getModel().setValueAt(null, k, r);
            }
        }

        SubheadCommitmentsTxt.setText(null);
        SubheadPaymentsTxt.setText(null);
        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct order_no,supplier from st_orders where ordered=false and dispatch=false order by order_no"));


    }//GEN-LAST:event_cancelbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String transNo = null,
                User1 = null;
        String reason = JOptionPane.showInputDialog(null, "Input Reason for Cancelling ", "Cancel LPO/LSO", JOptionPane.OK_CANCEL_OPTION);
        try {
            if (JOptionPane.OK_OPTION == 0) {
                connectDB.setAutoCommit(false);
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select user,nextval('transaction_no_seq')");
                while (rst.next()) {
                    transNo = rst.getObject(2).toString();
                    User1 = rst.getObject(1).toString();
                }
                if (reason != null) {

                    for (int i = 0; i < orderPaymentCommitTable.getModel().getRowCount(); i++) {
                        if (orderPaymentCommitTable.getModel().getValueAt(i, 1) != null) {

                            java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE st_orders SET ordered=true ,cancel_time=now(), dispatch=true,received=true,user_name_v='" + User1 + "' ,remarks_v='" + reason + "',order_no='CAN_'||order_no where order_no='" + lpoTxt.getText() + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt.getText()) + "' and quotation_no='" + TenderTxt.getText() + "' and code='" + orderPaymentCommitTable.getModel().getValueAt(i, 0) + "' and item='" + orderPaymentCommitTable.getModel().getValueAt(i, 1) + "'");
                            pstmt9.executeUpdate();
                        }
                    }

                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    javax.swing.JOptionPane.showMessageDialog(this, "LSO/LPO Cancelled Successfully", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    //ApprovalTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where transaction_type='Stock Delivery' and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));
                    cancelbtn.doClick();

                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Double check entries. Cannot Cancel with no Reason", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception y) {
            y.printStackTrace();
        }

//biz.systempartners.reports.VoteBookViewAllocationsReporterIntFr comp = new biz.systempartners.reports.VoteBookViewAllocationsReporterIntFr(connectDB);
//        //com.afrisoftech.accounting.ImprestReporting comp = new com.afrisoftech.accounting.VoucherApprintfr(connectDB, pConnDB);
//        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
//        try {
//            comp.setSelected(true);
//        } catch (java.beans.PropertyVetoException pvt) {
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void orderPaymentCommitTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderPaymentCommitTableMouseClicked

        totalAmttxt.setForeground(Color.red);
        totalAmttxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(orderPaymentCommitTable, 8)));

// if(orderPaymentCommitTable.getSelectedColumn() == -1){
//     System.out.println("sdfsfsdf "+orderPaymentCommitTable.getSelectedColumn());
//      if (orderPaymentCommitTable.getValueAt(orderPaymentCommitTable.getSelectedRow(), 0) != null) {
//                if (Boolean.valueOf(orderPaymentCommitTable.getValueAt(orderPaymentCommitTable.getSelectedRow(), 11).toString()) == java.lang.Boolean.TRUE){
//                        
//        try{
//                   
//          String bal=null,vote_no;
//          double check_amt=0.0;
//          int value=0;
//          vote_no=orderPaymentCommitTable.getValueAt(orderPaymentCommitTable.getSelectedRow(),9)+"-"+orderPaymentCommitTable.getValueAt(orderPaymentCommitTable.getSelectedRow(),10);
//          System.out.println("vote no "+vote_no);  
//          System.out.println("quarter "+financialPeriodCmbx.getSelectedItem()); 
//          System.out.println("year "+jComboBox1.getSelectedItem()); 
//
//java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT amount FROM ac_aie_allocation WHERE subitem ='"+trimmed_subitem+"' AND financial_year = '"+financialPeriodCmbx.getSelectedItem()+"'");
//          java.sql.Statement stmtss1=connectDB.createStatement();
//            java.sql.ResultSet rset1 = stmtss1.executeQuery("SELECT count(*) as num FROM st_procurement_plan WHERE item_code ='"+orderPaymentCommitTable.getValueAt(orderPaymentCommitTable.getSelectedRow(),0).toString().trim()+"' and vote_no='"+vote_no.trim()+"' and  financial_year = '"+financialPeriodCmbx.getSelectedItem()+"' and quarter ='"+jComboBox1.getSelectedItem().toString().trim()+"'");
//           
//            while (rset1.next()) {
//              value=rset1.getInt(1);
//                
//            }
//          
//          java.sql.Statement stmtss=connectDB.createStatement();
//            java.sql.ResultSet rset = stmtss.executeQuery("SELECT vote_balance FROM st_procurement_plan WHERE item_code ='"+orderPaymentCommitTable.getValueAt(orderPaymentCommitTable.getSelectedRow(),0).toString().trim()+"' and vote_no='"+vote_no.trim()+"' and  financial_year = '"+financialPeriodCmbx.getSelectedItem()+"' and quarter ='"+jComboBox1.getSelectedItem().toString().trim()+"'");
//           
//            while (rset.next()) {
//                System.out.println("there is trgdfbal "+check_amt);
//                bal=rset.getString(1);
//                if(value>0){
//                check_amt=Double.parseDouble(bal);
//                System.out.println("there is bal "+check_amt);
//                }
//                else {
//                    check_amt=0.0;
//                 System.out.println("there is no bal "+check_amt);
//                
//                }
//                
//                if(check_amt>Double.parseDouble(orderPaymentCommitTable.getValueAt(orderPaymentCommitTable.getSelectedRow(),8).toString()))
//                {
//                 orderPaymentCommitTable.setValueAt(true,orderPaymentCommitTable.getSelectedRow(),11);
//               
//                }
//                else{
//                
//                 JOptionPane.showMessageDialog(null,"That Item Cannot be procured: The netvalue exceeds the vote balance","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
//                orderPaymentCommitTable.setValueAt(false,orderPaymentCommitTable.getSelectedRow(),11);
//                }
//               
//                    
//            
//            }
//            
//            }
//            catch(Exception ds){
//            ds.printStackTrace();
//            System.out.println(ds.getMessage());
//            
//            }
//              
//                        }
//            }
//  }
//if (grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 0) != null) {
//
//          if (Boolean.valueOf(grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 11).toString()) == java.lang.Boolean.TRUE) {  
//             System.out.println("msdsdfsssssssssssssssssssssssssss");
//              
//              
//        }
//                           
//                        }
        //}
//        {
//            Double totalAmnt = 0.0, qtytotal = 0.0;
//            if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.TRUE) {
//                totalAmnt = 0.0;
//                qtytotal = 0.0;
//                if (v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
//                    //  v.remove(grn2PayablesLinkingTable.getSelectedRow());
//                } else if (!v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
//                    v.add(grn2PayablesLinkingTable.getSelectedRow());
//                }
//            } else if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.FALSE) {
//                totalAmnt = 0.0;
//                qtytotal = 0.0;
//                v.remove(grn2PayablesLinkingTable.getSelectedRow());
//            }
//
//            for (int i = 0; i < v.size(); i++) {
//                Double total = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 7).toString());
//                totalAmnt = totalAmnt + total;
//                Double totals = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 6).toString());
//                qtytotal = qtytotal + totals;
//
//            }
//
//            System.out.println(totalAmnt);
//            totalGrnAmountTxt.setText(totalAmnt.toString());
//            qtyTtField.setText(qtytotal.toString());
//
//        }

    }//GEN-LAST:event_orderPaymentCommitTableMouseClicked

    private void orderPaymentCommitTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderPaymentCommitTableMouseReleased
//        if (grn2PayablesLinkingTable.getSelectedColumn() == 1) {
//
//            if (grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1) != null) {
//
//                java.awt.Point point = this.lpoNumberTxt.getLocationOnScreen();
//
//                jSearchDialog2.setSize(900, 200);
//
//                jSearchDialog2.setLocation(point);
//
//                jSearchDialog2.setVisible(true);
//
//                orderNumberTxt.grabFocus();
//
//                orderNumberTxt.setText(grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1).toString());
//            }
//        }        // TODO add your handling code here:
    }//GEN-LAST:event_orderPaymentCommitTableMouseReleased

    private void orderPaymentCommitTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderPaymentCommitTableKeyReleased
        /*     double resFloat = 0.00;
         //  double totalSum = 0.00;
         double floatTotal = java.lang.Double.parseDouble(jTextField1.getText());

         if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {
         double amtToalloc = java.lang.Double.parseDouble(jTextField2.getText());
         double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());

         double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
         double balance = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());

         if (floatCol3 <= amtToalloc && amtToalloc >= 0){

         double resVal =floatCol2 - floatCol3;

         jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
         } else
         if (floatCol3 > amtToalloc && amtToalloc > 0){
         javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the amount to allocate","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         }

         this.tableModelTableChanged();
         }else
         if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) == null) {
         jTable1.setValueAt(new java.lang.Double(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()), jTable1.getSelectedRow(), 5);
         this.tableModelTableChanged();
         }
         */
        // Add your handling code here:
    }//GEN-LAST:event_orderPaymentCommitTableKeyReleased

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened
    private void cmboxs3ActionPerformed(java.awt.event.ActionEvent evt) {

        this.orderPaymentCommitTable.getColumnModel().getColumn(10).setCellEditor(new javax.swing.DefaultCellEditor(new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subitem FROM subitems WHERE "
                + " item = '" + cmboxs3.getSelectedItem() + "'"
                + " ORDER BY 1"))));
    }
    private void ApprovalTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApprovalTblMouseClicked
        current_row = ApprovalTbl.getSelectedRow();
//    if(yes==true){
        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct order_no,supplier from st_orders where order_no ilike '%" + jTextField42.getText() + "%' and ordered=false and dispatch=false order by order_no "));
//        yes=false;
//    }else if(yes!=true){
//        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct order_no,supplier from st_orders where ordered=false and dispatch=false order by order_no"));
//    }
//        

        for (int k = 0; k < orderPaymentCommitTable.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable.getColumnCount(); r++) {
                orderPaymentCommitTable.getModel().setValueAt(null, k, r);
            }
        }

        try {

//            SupplierTxt.setText(null);
//            lpoTxt.setText(null);
//            
//            TenderTxt.setText(null);
//           // TenderTxt1.setText(null);
//            connectDB.setAutoCommit(false);
            ////clearing
            division.setText(null);
            votehead.setText(null);
            jTextField42.setText(null);
            SupplierTxt.setText(null);
            lpoTxt.setText(null);
            jTextField1.setText(null);
            TenderTxt.setText(null);
            jComboBox5.removeAllItems();
            financialPeriodCmbx.removeAllItems();
            jTextField2.setText(null);
            jTextField3.setText(null);
            jTextField4.setText(null);
            jTextField5.setText(null);
            jTextField6.setText(null);
            jTextField8.setText(null);
            divisionBalancetxt.setText(null);
            jTextField9.setText(null);
            divisionCmbx.removeAllItems();
            jComboBox3.removeAllItems();
            totalAmttxt.setText(null);

            connectDB.setAutoCommit(false);
            jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct aieno from ac_aie_allocation"));
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter"}));
            BudgetTypeCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT DISTINCT classname FROM vb_class)  ORDER BY 1 "));
            /**
             * ****catering for a supplimentary LPO*********
             */
            if (ApprovalTbl.getValueAt(current_row, 0).toString().contains("SUPLPO")) {

                String class_sup = null, classname_sup = null;

                /////GET THE LPO DETAILS
                java.sql.Statement stm12171 = connectDB.createStatement();
                java.sql.ResultSet rse12171 = stm12171.executeQuery("select code from st_orders where order_no='" + ApprovalTbl.getValueAt(current_row, 0).toString() + "'");
                while (rse12171.next()) {
                    parent_lpo = rse12171.getString(1);
                    System.out.println("here i am lpo parent " + parent_lpo);
                }
                java.sql.Statement stm1216 = connectDB.createStatement();
                java.sql.ResultSet rse1216 = stm1216.executeQuery("select distinct v_class,supplier,refno,aie_no,head,subhead,financial_year,period,allocated_amount,vote from ac_aie_commitment where refno='" + parent_lpo + "' ");
                while (rse1216.next()) {
                    SupplierTxt.setText(rse1216.getString(2));

                    lpoTxt.setText(ApprovalTbl.getValueAt(current_row, 0).toString());
                    financialPeriodCmbx.addItem(rse1216.getString("financial_year").toString());
                    // financialPeriodCmbx.setSelectedIndex(0);
                    jComboBox4.addItem(rse1216.getString("aie_no"));
                    //jComboBox4.setSelectedIndex(0);
                    jComboBox1.setEnabled(false);
                    jComboBox5.addItem(rse1216.getString("vote"));
                    //jComboBox5.setSelectedIndex(0);
                    BudgetTypeCbx.setEnabled(false);

                    jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '" + rse1216.getString("period") + "'"));

                    divisionCmbx.setEnabled(false);
                    divisionCmbx.addItem(rse1216.getString("head"));
                    // jComboBox2.setSelectedIndex(0);
                    jComboBox3.setEnabled(false);
                    jComboBox3.addItem(rse1216.getString("subhead"));
                    // jComboBox3.setSelectedIndex(0);
                    jTextField41.setForeground(Color.red);

                    java.sql.Statement stm12134 = connectDB.createStatement();
                    java.sql.ResultSet ress189 = stm12134.executeQuery("select classname from vb_class where class = '" + rse1216.getString("v_class") + "'");
                    while (ress189.next()) {
                        classname_sup = ress189.getString(1);

                        BudgetTypeCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '" + classname_sup + "'"));

                        java.sql.Statement stm121347 = connectDB.createStatement();
                        java.sql.ResultSet ress1897 = stm121347.executeQuery("select class from vb_class where classname = '" + classname_sup + "'");
                        while (ress1897.next()) {
                            class_sup = ress1897.getString(1);

                        }

                    }
                    java.sql.Statement st901 = connectDB.createStatement();
                    //java.sql.ResultSet res90= st90.executeQuery(" SELECT  distinct sum(allocated_amount)   FROM ac_aie_commitment where aie_no='"+jComboBox4.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and head='"+jComboBox2.getSelectedItem()+"' and period='"+jComboBox1.getSelectedItem()+"' and subhead='"+jComboBox3.getSelectedItem()+"' ");
                    double subhead_commited_total = 0.0, subhead_payment_total = 0.0;

                    java.sql.ResultSet res901 = st901.executeQuery("SELECT  distinct sum(allocated_amount),sum(paid_amount)   FROM ac_aie_commitment where aie_no='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and head='" + divisionCmbx.getSelectedItem() + "' and period='" + jComboBox1.getSelectedItem() + "' and subhead='" + jComboBox3.getSelectedItem() + "'  and vote ='" + jComboBox5.getSelectedItem() + "' and v_class='" + class_sup + "' ");
                    while (res901.next()) {
                        if (res901.getString(1) != null) {

                            subhead_commited_total = res901.getDouble(1);
                            //fin_yr=res2.getString(2);
                            SubheadCommitmentsTxt.setForeground(Color.red);
                            SubheadCommitmentsTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                        } else {
                            subhead_commited_total = 0.0;
                            SubheadCommitmentsTxt.setForeground(Color.red);
                            SubheadCommitmentsTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                        }
                        // jTextField41.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(rsets.getString(8))));

                    }

                    /////GENERATING THE BALANCES
                    try {
                        Double aie_amt = 0.0;
                        java.sql.Statement st2 = connectDB.createStatement();
                        java.sql.ResultSet res2 = st2.executeQuery(" SELECT distinct aie_amount,aie_reference_no   FROM ac_aie_allocation where aieno='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' ");
                        while (res2.next()) {
                            jTextField2.setForeground(Color.red);
                            jTextField2.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res2.getString(1))));
                            aie_amt = res2.getDouble(1);

                        }

                        try {
                            //////getting the total balance
                            String total_commited_amt = null;
                            java.sql.Statement st22 = connectDB.createStatement();
                            java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "'");
                            while (ress22.next()) {

                                total_commited_amt = ress22.getString(1);
                                if (total_commited_amt != null) {
                                    jTextField3.setForeground(Color.red);
                                    jTextField8.setForeground(Color.red);
                                    jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                                    jTextField8.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                                } else {
                                    total_commited_amt = "0.0";
                                    jTextField3.setForeground(Color.red);
                                    jTextField8.setForeground(Color.red);
                                    jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                                    jTextField8.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                                }
                            }

                            ///getting the total payments done
                            String total_paid_amt = null;
                            java.sql.Statement st23 = connectDB.createStatement();
                            java.sql.ResultSet ress23 = st23.executeQuery("SELECT sum(paid_amount)  FROM ac_aie_commitment where aie_no ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "'");
                            while (ress23.next()) {

                                total_paid_amt = ress23.getString(1);
                                if (total_paid_amt != null) {

                                    jTextField4.setForeground(Color.red);
                                    jTextField4.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                                } else {
                                    total_paid_amt = "0.0";
                                    jTextField4.setForeground(Color.red);

                                    jTextField4.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                                }
                            }
                        } catch (Exception hsd) {
                            hsd.printStackTrace();
                        }

                    } catch (Exception eds) {
                        eds.printStackTrace();

                    }

                    //////GENERATING THE HEAD AND SUBHEAD AMOUNTS
                    try {
//      java.sql.Statement  st1192= connectDB.createStatement();
//       java.sql.ResultSet ress192= st1192.executeQuery("select headname from heads where head = '"+jComboBox2.getSelectedItem()+"'");
//       if(ress192.next()){
//           
//        division.setText(ress192.getString(1));
//       
//       }

                        ///////setting the subheads
//             jComboBox3.removeAllItems();
//             jTextField5.setText(null);
//             String classes=null;
//             java.sql.Statement  st11= connectDB.createStatement();
//       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+BudgetTypeCbx.getSelectedItem()+"'");
//       while(ress1.next()){
//        classes=ress1.getString(1);
//        
//        /***** modified on 24 the feb 2014    **/
//         jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct subhead,subheadname  from subheads where srccode='"+jComboBox2.getSelectedItem()+"'  and subhead in (select DISTINCT subhead from ac_aie_allocation where head='"+jComboBox2.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and aieno='"+jComboBox4.getSelectedItem()+"')  and station  ilike '%"+classes+"%' order by subhead asc "));
//        
//       }
                        ///end
                        int num1 = 0;
                        Double head_amt = 0.0;
                        Double subhead_quarterly_total = 0.0;
                        java.sql.Statement st1 = connectDB.createStatement();
                        java.sql.ResultSet ress = st1.executeQuery("SELECT count(*) as num FROM ac_aie_allocation where aieno ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and  head='" + divisionCmbx + "' and class='" + class_sup + "'");
                        while (ress.next()) {
                            num1 = ress.getInt(1);
                            // head_amt=ress.getDouble(2);
                        }
                        String head_amt_str = null;
                        java.sql.Statement st6 = connectDB.createStatement();
                        java.sql.ResultSet ress6 = st6.executeQuery(" SELECT DISTINCT head_amount  FROM ac_aie_allocation where aieno ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and  head='" + divisionCmbx.getSelectedItem() + "' and class='" + class_sup + "' and head_amount>0");
                        while (ress6.next()) {

                            head_amt_str = ress6.getString(1);

                            jTextField5.setForeground(Color.red);
                            jTextField5.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(head_amt_str)));
                        }

                        double subhead_com_total = 0.0;
                        java.sql.Statement st7 = connectDB.createStatement();
                        java.sql.ResultSet res7 = st7.executeQuery(" SELECT   sum(allocated_amount)   FROM ac_aie_commitment where aie_no='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and head='" + divisionCmbx.getSelectedItem() + "' and v_class='" + class_sup + "' ");
                        while (res7.next()) {
                            if (res7.getString(1) != null) {
                                subhead_com_total = res7.getDouble(1);

                                divisionBalancetxt.setForeground(Color.red);
                                divisionBalancetxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField5.getText().replace(",", "")) - subhead_com_total));

                            } else {
                                subhead_com_total = 0;
                                divisionBalancetxt.setForeground(Color.red);
                                divisionBalancetxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField5.getText().replace(",", "")) - subhead_com_total));

                            }

                        }

                    } catch (Exception edf) {
                        edf.printStackTrace();

                    }
                    /////END

                    java.sql.Statement stmtss = connectDB.createStatement();
                    java.sql.ResultSet rsets = stmtss.executeQuery("SELECT * FROM st_orders WHERE order_no ='" + ApprovalTbl.getValueAt(current_row, 0) + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApprovalTbl.getValueAt(current_row, 1).toString()) + "' and ordered=false");
                    int d = 0;
                    while (rsets.next()) {
                        //jTextField1.setText(rsets.getString("doc_type"));
                        //TenderTxt.setText(rsets.getString("quotation_no"));
                        //SupplierTxt.setText(rsets.getString("supplier"));
                        //TenderTxt1.setText(rsets.getString("ordering_store"));
                        // lpoTxt.setText(rsets.getString("order_no"));

                        ///table
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("code"), d, 0);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("item"), d, 1);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("quantity"), d, 2);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("units"), d, 3);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("unit_price"), d, 4);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("gross_value"), d, 5);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("discount"), d, 6);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("vat"), d, 7);
                        orderPaymentCommitTable.getModel().setValueAt(rsets.getString("net_value"), d, 8);
//                orderPaymentCommitTable.getModel().setValueAt(false,d,11);

                        d++;
                    }

                }
                combo();

            } /**
             * *******END***********
             */
            else {
                divisionCmbx.setEnabled(true);
                jComboBox3.setEnabled(true);
                jComboBox1.setEnabled(true);
                jComboBox5.setEnabled(true);
                BudgetTypeCbx.setEnabled(true);

                java.sql.Statement stmtss = connectDB.createStatement();
                java.sql.ResultSet rsets = stmtss.executeQuery("SELECT * FROM st_orders WHERE order_no ='" + ApprovalTbl.getValueAt(current_row, 0) + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApprovalTbl.getValueAt(current_row, 1).toString()) + "' and ordered=false");
                int d = 0;
                while (rsets.next()) {
                    jTextField1.setText(rsets.getString("doc_type"));
                    TenderTxt.setText(rsets.getString("quotation_no"));
                    SupplierTxt.setText(rsets.getString("supplier"));
                    //TenderTxt1.setText(rsets.getString("ordering_store"));
                    lpoTxt.setText(rsets.getString("order_no"));

                    ///table
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("code"), d, 0);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("item"), d, 1);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("quantity"), d, 2);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("units"), d, 3);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("unit_price"), d, 4);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("gross_value"), d, 5);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("discount"), d, 6);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("vat"), d, 7);
                    orderPaymentCommitTable.getModel().setValueAt(rsets.getString("net_value"), d, 8);
//                orderPaymentCommitTable.getModel().setValueAt(false,d,11);

                    d++;
                }

                connectDB.commit();
                connectDB.setAutoCommit(true);

                // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT   P.requisition_no as \"PR N0:\", P.type_of_pr as \"PR Type\" FROM st_receive_requisation as P,st_authorizations as S WHERE  P.requisition_no ILIKE '%PRQ%' and P.approval_status=TRUE and P.requisition_no=S.requisition_no and S.scm_forwading=TRUE and S.cso_forwading=FALSE GROUP BY P.requisition_no,P.type_of_pr"));
                ////clearing the products table
//
                ////clear the JTextPane
            }
        } catch (SQLException ex) {
            Logger.getLogger(Lpo_LsoCommitmentintfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_ApprovalTblMouseClicked

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        int rows2Delete = orderPaymentCommitTable.getSelectedRowCount();

        int[] selectedRows = orderPaymentCommitTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) orderPaymentCommitTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) orderPaymentCommitTable.getModel();

                defTableModel.removeRow(orderPaymentCommitTable.getSelectedRow());
            }
        }
    }//GEN-LAST:event_exitbtnActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        ///vote
        jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct vote from ac_aie_allocation where aieno='" + jComboBox4.getSelectedItem() + "' order by 1"));
        ///fin yr
        financialPeriodCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct financial_year from ac_aie_allocation where aieno='" + jComboBox4.getSelectedItem() + "'"));
        divisionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct head from ac_aie_allocation where aieno='" + jComboBox4.getSelectedItem() + "' order by 1"));
        //jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct head from ac_aie_allocation where aieno='"+jComboBox4.getSelectedItem()+"' order by 1"));
        try {
            Double aie_amt = 0.0;
            java.sql.Statement st2 = connectDB.createStatement();
            java.sql.ResultSet res2 = st2.executeQuery(" SELECT distinct aie_amount,aie_reference_no   FROM ac_aie_allocation where aieno='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' ");
            while (res2.next()) {
                jTextField2.setForeground(Color.red);
                jTextField2.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res2.getString(1))));
                aie_amt = res2.getDouble(1);

            }

            try {
                //////getting the total balance
                String total_commited_amt = null;
                java.sql.Statement st22 = connectDB.createStatement();
                java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "'");
                while (ress22.next()) {

                    total_commited_amt = ress22.getString(1);
                    if (total_commited_amt != null) {
                        jTextField3.setForeground(Color.red);
                        jTextField8.setForeground(Color.red);
                        jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                        jTextField8.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                    } else {
                        total_commited_amt = "0.0";
                        jTextField3.setForeground(Color.red);
                        jTextField8.setForeground(Color.red);
                        jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                        jTextField8.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                    }
                }

                ///getting the total payments done
                String total_paid_amt = null;
                java.sql.Statement st23 = connectDB.createStatement();
                java.sql.ResultSet ress23 = st23.executeQuery("SELECT sum(paid_amount)  FROM ac_aie_commitment where aie_no ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "'");
                while (ress23.next()) {

                    total_paid_amt = ress23.getString(1);
                    if (total_paid_amt != null) {

                        jTextField4.setForeground(Color.red);
                        jTextField4.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                    } else {
                        total_paid_amt = "0.0";
                        jTextField4.setForeground(Color.red);

                        jTextField4.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                    }
                }
            } catch (Exception hsd) {
                hsd.printStackTrace();
            }

        } catch (Exception eds) {
            eds.printStackTrace();

        }
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void divisionCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionCmbxActionPerformed

        if (!jComboBox1.getSelectedItem().equals("-")) {

            /**
             * **commented on 24th 02 2014*
             */
            // jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct subhead from ac_aie_allocation where aieno='"+jComboBox4.getSelectedItem()+"' and head='"+jComboBox2.getSelectedItem()+"' order by 1"));
            jComboBox3.setEnabled(true);

            try {
                java.sql.Statement st1192 = connectDB.createStatement();
                java.sql.ResultSet ress192 = st1192.executeQuery("select headname from heads where head = '" + divisionCmbx.getSelectedItem() + "'");
                if (ress192.next()) {

                    division.setText(ress192.getString(1));

                }

                ///////setting the subheads
                jComboBox3.removeAllItems();
                jTextField5.setText(null);
                String classes = null;
                java.sql.Statement st11 = connectDB.createStatement();
                java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx.getSelectedItem() + "'");
                while (ress1.next()) {
                    classes = ress1.getString(1);

                    /**
                     * *** modified on 24 the feb 2014 *
                     */
                    jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct subhead,subheadname  from subheads where srccode='" + divisionCmbx.getSelectedItem() + "'  and subhead in (select DISTINCT subhead from ac_aie_allocation where head='" + divisionCmbx.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and aieno='" + jComboBox4.getSelectedItem() + "')  and station  ilike '%" + classes + "%' order by subhead asc "));

                }

                ///end
                int num1 = 0;
                Double head_amt = 0.0;
                Double subhead_quarterly_total = 0.0;
                java.sql.Statement st1 = connectDB.createStatement();
                java.sql.ResultSet ress = st1.executeQuery("SELECT count(*) as num FROM ac_aie_allocation where aieno ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and  head='" + divisionCmbx.getSelectedItem() + "' and class='" + classes + "'");
                while (ress.next()) {
                    num1 = ress.getInt(1);
                    // head_amt=ress.getDouble(2);
                }
                String head_amt_str = null;
                java.sql.Statement st6 = connectDB.createStatement();
                java.sql.ResultSet ress6 = st6.executeQuery(" SELECT DISTINCT head_amount  FROM ac_aie_allocation where aieno ilike '" + jComboBox4.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and  head='" + divisionCmbx.getSelectedItem() + "' and class='" + classes + "' and head_amount>0");
                while (ress6.next()) {

                    head_amt_str = ress6.getString(1);

                    jTextField5.setForeground(Color.red);
                    jTextField5.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(head_amt_str)));
                }

                double subhead_com_total = 0.0;
                java.sql.Statement st7 = connectDB.createStatement();
                java.sql.ResultSet res7 = st7.executeQuery(" SELECT sum(allocated_amount) FROM ac_aie_commitment where aie_no='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and head='" + divisionCmbx.getSelectedItem() + "' and v_class='" + classes + "' ");
                while (res7.next()) {
                    if (res7.getString(1) != null) {
                        subhead_com_total = res7.getDouble(1);

                        divisionBalancetxt.setForeground(Color.red);
                        divisionBalancetxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField5.getText().replace(",", "")) - subhead_com_total));

                    } else {
                        subhead_com_total = 0.0;
                        divisionBalancetxt.setForeground(Color.red);
//       divisionBalancetxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField5.getText().replace(",",""))-subhead_com_total));

                    }

                }

            } catch (Exception edf) {
                edf.printStackTrace();

            }
        } else {
            JOptionPane.showMessageDialog(null, "You must select the Quarter you are in", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_divisionCmbxActionPerformed
    private void combo() {
        try {

            String class_vb = null;
            java.sql.Statement st11 = connectDB.createStatement();
            java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx.getSelectedItem() + "'");
            while (ress1.next()) {

                class_vb = ress1.getString(1);

            }

            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select subheadname from subheads where subhead = '" + jComboBox3.getSelectedItem() + "'");
            if (ress19.next()) {

                votehead.setText(ress19.getString(1));

            }
            java.sql.Statement st1192 = connectDB.createStatement();
            java.sql.ResultSet ress192 = st1192.executeQuery("select headname from heads where head = '" + divisionCmbx.getSelectedItem() + "'");
            if (ress192.next()) {

                division.setText(ress192.getString(1));

            }

            double subhead_quarterly_total = 0.0;
            java.sql.Statement st2 = connectDB.createStatement();
            java.sql.ResultSet res2 = st2.executeQuery(" SELECT  distinct sum(subhead_quartely_amount) FROM ac_aie_allocation where aieno='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and head='" + divisionCmbx.getSelectedItem() + "' and period='" + jComboBox1.getSelectedItem() + "' and subhead='" + jComboBox3.getSelectedItem() + "' and class='" + class_vb + "' ");
            while (res2.next()) {
                subhead_quarterly_total = res2.getDouble(1);
                //fin_yr=res2.getString(2);
                jTextField6.setForeground(Color.red);
                jTextField6.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total));

            }
            ///getting the balances

            //subhead balance
            double subhead_com_total = 0.0;
            java.sql.Statement st7 = connectDB.createStatement();
            java.sql.ResultSet res7 = st7.executeQuery(" SELECT   sum(allocated_amount)   FROM ac_aie_commitment where aie_no='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and head='" + divisionCmbx.getSelectedItem() + "' and period='" + jComboBox1.getSelectedItem() + "' and subhead='" + jComboBox3.getSelectedItem() + "' and v_class='" + class_vb + "' ");
            while (res7.next()) {
                if (res7.getString(1) != null) {
                    subhead_com_total = res7.getDouble(1);
                    //fin_yr=res2.getString(2);
                    jTextField9.setForeground(Color.red);
                    jTextField9.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total - subhead_com_total));
                } else {
                    subhead_com_total = 0.0;
                    jTextField9.setForeground(Color.red);
                    jTextField9.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total - subhead_com_total));
                }
            }

//       /////head balance
//       jTextField7.setForeground(Color.red);
//       jTextField7.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField5.getText().replace(",",""))-subhead_com_total));
//        
            ////getting the vote subhead commitments
            java.sql.Statement st90 = connectDB.createStatement();
            //java.sql.ResultSet res90= st90.executeQuery(" SELECT  distinct sum(allocated_amount)   FROM ac_aie_commitment where aie_no='"+jComboBox4.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and head='"+jComboBox2.getSelectedItem()+"' and period='"+jComboBox1.getSelectedItem()+"' and subhead='"+jComboBox3.getSelectedItem()+"' ");
            double subhead_commited_total = 0.0, subhead_payment_total = 0.0;
            java.sql.ResultSet res90 = st90.executeQuery("SELECT  distinct sum(allocated_amount),sum(paid_amount)   FROM ac_aie_commitment where aie_no='" + jComboBox4.getSelectedItem() + "' and financial_year='" + financialPeriodCmbx.getSelectedItem() + "' and head='" + divisionCmbx.getSelectedItem() + "' and period='" + jComboBox1.getSelectedItem() + "' and subhead='" + jComboBox3.getSelectedItem() + "'  and vote ='" + jComboBox5.getSelectedItem() + "' and v_class='" + class_vb + "' ");
            while (res90.next()) {
                if (res90.getString(1) != null) {
                    subhead_commited_total = res90.getDouble(1);
                    //fin_yr=res2.getString(2);
                    SubheadCommitmentsTxt.setForeground(Color.red);
                    SubheadCommitmentsTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                } else {
                    subhead_commited_total = 0.0;
                    SubheadCommitmentsTxt.setForeground(Color.red);
                    SubheadCommitmentsTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                }

                if (res90.getString(2) != null) {
                    subhead_payment_total = res90.getDouble(2);
                    //fin_yr=res2.getString(2);
                    SubheadPaymentsTxt.setForeground(Color.red);
                    SubheadPaymentsTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_payment_total));
                } else {
                    subhead_payment_total = 0.0;
                    SubheadPaymentsTxt.setForeground(Color.red);
                    SubheadPaymentsTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_payment_total));
                }
            }

        } catch (Exception esd) {
            esd.printStackTrace();

        }
    }
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        combo();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void ApproveBillTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApproveBillTableMouseClicked
        ///populating the bills table
        current_row = ApproveBillTable.getSelectedRow();

        // String quail="dcrhg9887";
//         if(yes==true){
        ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,invoice_no from ac_accounts_payable where ((transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal' or transaction_type='Projects Journal') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) and invoice_no ilike '%" + jTextField45.getText() + "%' union select distinct dealer,'DIR_PUR' from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no ilike '%" + jTextField45.getText() + "%'  and committed=false"));
//        yes=false;
//    }else if(yes!=true){
//        ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,invoice_no from ac_accounts_payable where ((transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal' or transaction_type='Projects Journal') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));
//    }

        for (int k = 0; k < orderPaymentCommitTable1.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable1.getColumnCount(); r++) {
                orderPaymentCommitTable1.getModel().setValueAt(null, k, r);
            }
        }

        try {

            dealerNameTxt.setText(null);
            lpoTxt1.setText(null);

            //TenderTxt1.setText(null);
            // TenderTxt1.setText(null);
            connectDB.setAutoCommit(false);

            if (ApproveBillTable.getValueAt(current_row, 1).toString().startsWith("WT") || ApproveBillTable.getValueAt(current_row, 1).toString().startsWith("VAT") || ApproveBillTable.getValueAt(current_row, 1).toString().startsWith("RT")) {
                aie_no_bill.setEnabled(false);
                jCheckBox1.setSelected(true);
            } else {
                jCheckBox1.setSelected(false);
                aie_no_bill.setEnabled(true);
            }

            java.sql.Statement stmtss = connectDB.createStatement();
            System.out.println(current_row + " ni yangu");
            //select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false where 
            java.sql.ResultSet rsets = null;
            if (!ApproveBillTable.getValueAt(current_row, 1).toString().contains("DIR_PUR")) {
                rsets = stmtss.executeQuery("SELECT * FROM ac_accounts_payable WHERE invoice_no ='" + ApproveBillTable.getValueAt(current_row, 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApproveBillTable.getValueAt(current_row, 0).toString()) + "' and (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%' or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal' or transaction_type='Projects Journal') and committed=false and approved=false order by credit desc");
            } else {
                rsets = stmtss.executeQuery("SELECT * FROM ac_accounts_payable WHERE dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApproveBillTable.getValueAt(current_row, 0).toString()) + "' and (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and committed=false");
            }

            int d = 0;

            while (rsets.next()) {
                invoiceNoTxt.setText(rsets.getString("invoice_no"));

                dealerNameTxt.setText(rsets.getString("dealer"));
                //TenderTxt1.setText(rsets.getString("ordering_store"));
                lpoTxt1.setText(rsets.getString("order_no"));

                ///table
                System.out.println(rsets.getString("invoice_date"));
                orderPaymentCommitTable1.getModel().setValueAt(rsets.getString("invoice_date"), d, 0);
                orderPaymentCommitTable1.getModel().setValueAt(rsets.getString("invoice_no"), d, 1);
                orderPaymentCommitTable1.getModel().setValueAt(rsets.getString("item"), d, 2);
                orderPaymentCommitTable1.getModel().setValueAt(rsets.getString("user_name"), d, 3);
                orderPaymentCommitTable1.getModel().setValueAt(rsets.getString("reason"), d, 4);
                orderPaymentCommitTable1.getModel().setValueAt(rsets.getString("vat"), d, 5);
                if (Double.parseDouble(rsets.getString("credit")) == 0) {
                    double t = 0 - Double.parseDouble(rsets.getString("debit"));
                    orderPaymentCommitTable1.getModel().setValueAt(String.valueOf(t), d, 6);
                } else {
                    orderPaymentCommitTable1.getModel().setValueAt(rsets.getString("credit"), d, 6);
                }

                d++;
            }

            java.sql.Statement stmtss1 = connectDB.createStatement();
            java.sql.ResultSet rsets1 = null;
            rsets1 = stmtss1.executeQuery("SELECT * FROM ac_accounts_payable WHERE invoice_no ='" + ApproveBillTable.getValueAt(current_row, 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApproveBillTable.getValueAt(current_row, 0).toString()) + "' and (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%' or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal' or transaction_type='Projects Journal') and approved=false order by credit");
            // rsets1 = stmtss1.executeQuery("SELECT * FROM ac_accounts_payable WHERE dealer='"+ApproveBillTable.getValueAt(current_row,0)+"' and transaction_type='Stock Delivery' and approved=false and committed=false order by credit asc");
            retention = "";
            witholding = "";
            vat = "";
            while (rsets1.next()) {
                if (retention == "" || Double.parseDouble(retention) == 0) {
                    retention = rsets1.getString("discount");
                }

                if (witholding == "" || Double.parseDouble(witholding) == 0) {
                    witholding = rsets1.getString("custom_duty");
                }
                if (vat == "" || Double.parseDouble(vat) == 0) {
                    vat = rsets1.getString("vat");
                }

            }

            connectDB.commit();
            connectDB.setAutoCommit(true);

            // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT   P.requisition_no as \"PR N0:\", P.type_of_pr as \"PR Type\" FROM st_receive_requisation as P,st_authorizations as S WHERE  P.requisition_no ILIKE '%PRQ%' and P.approval_status=TRUE and P.requisition_no=S.requisition_no and S.scm_forwading=TRUE and S.cso_forwading=FALSE GROUP BY P.requisition_no,P.type_of_pr"));
            ////clearing the products table
//
            ////clear the JTextPane
        } catch (SQLException ex) {
            Logger.getLogger(Lpo_LsoCommitmentintfr.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_ApproveBillTableMouseClicked

    private void voteheadBillCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteheadBillCbxActionPerformed
        if (!QuarterBillCbx.getSelectedItem().equals("-")) {
            try {

                java.sql.Statement st1192 = connectDB.createStatement();
                java.sql.ResultSet ress192 = st1192.executeQuery("select headname from heads where head = '" + voteheadBillCbx.getSelectedItem() + "'");
                if (ress192.next()) {

                    division2.setText(ress192.getString(1));

                }

                String classes = null;
                java.sql.Statement st11 = connectDB.createStatement();
                java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx2.getSelectedItem() + "'");
                while (ress1.next()) {
                    classes = ress1.getString(1);
                }
                /**
                 * *** modified on 24 the feb 2014 *
                 */
                voteSubheadBillCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct subhead,subheadname  from subheads where srccode='" + voteheadBillCbx.getSelectedItem() + "'  and subhead in (select DISTINCT subhead from ac_aie_allocation where head='" + voteheadBillCbx.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and aieno='" + aie_no_bill.getSelectedItem() + "')  and station  ilike '%" + classes + "%' order by subhead asc "));

                // voteSubheadBillCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct subhead from ac_aie_allocation where aieno='"+aie_no_bill.getSelectedItem()+"' and head='"+voteheadBillCbx.getSelectedItem()+"' order by 1"));
                voteSubheadBillCbx.setEnabled(true);

                int num1 = 0;
                Double head_amt = 0.0;
                Double subhead_quarterly_total = 0.0;
                java.sql.Statement st1 = connectDB.createStatement();
                java.sql.ResultSet ress = st1.executeQuery("SELECT count(*) as num FROM ac_aie_allocation where aieno ilike '" + aie_no_bill.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and  head='" + voteheadBillCbx.getSelectedItem() + "' and class  ilike '%" + classes + "%'");
                while (ress.next()) {
                    num1 = ress.getInt(1);
                    // head_amt=ress.getDouble(2);
                }
                String head_amt_str = null;
                java.sql.Statement st6 = connectDB.createStatement();
                java.sql.ResultSet ress6 = st6.executeQuery(" SELECT DISTINCT head_amount  FROM ac_aie_allocation where aieno ilike '" + aie_no_bill.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and  head='" + voteheadBillCbx.getSelectedItem() + "' and class  ilike '%" + classes + "%' and head_amount>0");
                while (ress6.next()) {

                    head_amt_str = ress6.getString(1);
                    jTextField15.setForeground(Color.red);
                    jTextField15.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(head_amt_str)));
                }

                double subhead_com_total = 0.0;
                java.sql.Statement st7 = connectDB.createStatement();
                java.sql.ResultSet res7 = st7.executeQuery(" SELECT   sum(allocated_amount)   FROM ac_aie_commitment where aie_no='" + aie_no_bill.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and head='" + voteheadBillCbx.getSelectedItem() + "' and v_class='" + classes + "' ");
                while (res7.next()) {
                    if (res7.getString(1) != null) {
                        subhead_com_total = res7.getDouble(1);

                        jTextField17.setForeground(Color.red);
                        jTextField17.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField15.getText().replace(",", "")) - subhead_com_total));

                    } else {
                        subhead_com_total = 0.0;
                        jTextField17.setForeground(Color.red);
                        jTextField17.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField15.getText().replace(",", "")) - subhead_com_total));

                    }

                }

            } catch (Exception edf) {
                edf.printStackTrace();

            }
        } else {
            JOptionPane.showMessageDialog(null, "You must select the Quarter you are in", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_voteheadBillCbxActionPerformed

    private void voteSubheadBillCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteSubheadBillCbxActionPerformed
        try {
            String class_vb = null;
            java.sql.Statement st11 = connectDB.createStatement();
            java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx2.getSelectedItem() + "'");
            while (ress1.next()) {

                class_vb = ress1.getString(1);

            }

            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select subheadname from subheads where subhead = '" + voteSubheadBillCbx.getSelectedItem() + "'");
            if (ress19.next()) {

                votehead2.setText(ress19.getString(1));

            }
            java.sql.Statement st1192 = connectDB.createStatement();
            java.sql.ResultSet ress192 = st1192.executeQuery("select headname from heads where head = '" + voteheadBillCbx.getSelectedItem() + "'");
            if (ress192.next()) {

                division2.setText(ress192.getString(1));

            }

            double subhead_quarterly_total = 0.0;
            java.sql.Statement st2 = connectDB.createStatement();
            java.sql.ResultSet res2 = st2.executeQuery(" SELECT  sum(subhead_quartely_amount)    FROM ac_aie_allocation where aieno='" + aie_no_bill.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and head='" + voteheadBillCbx.getSelectedItem() + "' and period='" + QuarterBillCbx.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx.getSelectedItem() + "'and class='" + class_vb + "' ");
            while (res2.next()) {
                subhead_quarterly_total = res2.getDouble(1);
                //fin_yr=res2.getString(2);
                jTextField16.setForeground(Color.red);
                jTextField16.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total));

            }
            ///getting the balances

            //subhead balance
            double subhead_com_total = 0.0;
            java.sql.Statement st7 = connectDB.createStatement();
            java.sql.ResultSet res7 = st7.executeQuery(" SELECT sum(allocated_amount)   FROM ac_aie_commitment where aie_no='" + aie_no_bill.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and head='" + voteheadBillCbx.getSelectedItem() + "' and period='" + QuarterBillCbx.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx.getSelectedItem() + "' and v_class='" + class_vb + "' ");
            while (res7.next()) {
                if (res7.getString(1) != null) {
                    subhead_com_total = res7.getDouble(1);
                    //fin_yr=res2.getString(2);
                    jTextField19.setForeground(Color.red);
                    jTextField19.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total - subhead_com_total));
                } else {
                    subhead_com_total = 0.0;
                    jTextField19.setForeground(Color.red);
                    jTextField19.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total - subhead_com_total));
                }
            }

            /////head balance
            jTextField17.setForeground(Color.red);
            jTextField17.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField15.getText().replace(",", "")) - subhead_com_total));

            ////getting the vote subhead commitments
            java.sql.Statement st90 = connectDB.createStatement();
            //java.sql.ResultSet res90= st90.executeQuery(" SELECT  distinct sum(allocated_amount)   FROM ac_aie_commitment where aie_no='"+jComboBox4.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and head='"+jComboBox2.getSelectedItem()+"' and period='"+jComboBox1.getSelectedItem()+"' and subhead='"+jComboBox3.getSelectedItem()+"' ");
            double subhead_commited_total = 0.0, subhead_payment_total = 0.0;
            java.sql.ResultSet res90 = st90.executeQuery(" SELECT  distinct sum(allocated_amount),sum(paid_amount)   FROM ac_aie_commitment where aie_no='" + aie_no_bill.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and head='" + voteheadBillCbx.getSelectedItem() + "' and period='" + QuarterBillCbx.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx.getSelectedItem() + "' and vote='" + voteBillTxt.getSelectedItem() + "' ");
            while (res90.next()) {
                if (res90.getString(1) != null) {
                    subhead_commited_total = res90.getDouble(1);
                    //fin_yr=res2.getString(2);
                    voteSubheadCommitmentsBillTxt.setForeground(Color.red);
                    voteSubheadCommitmentsBillTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                } else {
                    subhead_commited_total = 0.0;
                    voteSubheadCommitmentsBillTxt.setForeground(Color.red);
                    voteSubheadCommitmentsBillTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                }

                if (res90.getString(2) != null) {
                    subhead_payment_total = res90.getDouble(2);
                    //fin_yr=res2.getString(2);
                    voteSubheadPaymentsBillTxt.setForeground(Color.red);
                    voteSubheadPaymentsBillTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_payment_total));
                } else {
                    subhead_payment_total = 0.0;
                    voteSubheadPaymentsBillTxt.setForeground(Color.red);
                    voteSubheadPaymentsBillTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_payment_total));
                }
            }

        } catch (Exception esd) {
            esd.printStackTrace();

        }
    }//GEN-LAST:event_voteSubheadBillCbxActionPerformed

    private void aie_no_billActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aie_no_billActionPerformed
        ///vote
        voteBillTxt.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct vote from ac_aie_allocation where aieno='" + aie_no_bill.getSelectedItem() + "' order by 1"));
        ///fin yr
        financialPeriodCmbxBill.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct financial_year from ac_aie_allocation where aieno='" + aie_no_bill.getSelectedItem() + "'"));

        voteheadBillCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct head from ac_aie_allocation where aieno='" + aie_no_bill.getSelectedItem() + "' order by 1"));
        try {
            Double aie_amt = 0.0;
            java.sql.Statement st2 = connectDB.createStatement();
            java.sql.ResultSet res2 = st2.executeQuery(" SELECT distinct aie_amount,aie_reference_no   FROM ac_aie_allocation where aieno='" + aie_no_bill.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' ");
            while (res2.next()) {
                jTextField12.setForeground(Color.red);
                jTextField12.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res2.getString(1))));
                aie_amt = res2.getDouble(1);

            }

            try {
                //////getting the total balance
                String total_commited_amt = null;
                java.sql.Statement st22 = connectDB.createStatement();
                java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "'");
                while (ress22.next()) {

                    total_commited_amt = ress22.getString(1);
                    if (total_commited_amt != null) {
                        jTextField13.setForeground(Color.red);
                        jTextField18.setForeground(Color.red);
                        jTextField13.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                        jTextField18.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                    } else {
                        total_commited_amt = "0.0";
                        jTextField13.setForeground(Color.red);
                        jTextField18.setForeground(Color.red);
                        jTextField13.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                        jTextField18.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                    }
                }

                ///getting the total payments done
                String total_paid_amt = null;
                java.sql.Statement st23 = connectDB.createStatement();
                java.sql.ResultSet ress23 = st23.executeQuery("SELECT sum(paid_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "'");
                while (ress23.next()) {

                    total_paid_amt = ress23.getString(1);
                    if (total_paid_amt != null) {

                        jTextField14.setForeground(Color.red);
                        jTextField14.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                    } else {
                        total_paid_amt = "0.0";
                        jTextField14.setForeground(Color.red);

                        jTextField14.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                    }
                }
            } catch (Exception hsd) {
                hsd.printStackTrace();
            }

        } catch (Exception eds) {
            eds.printStackTrace();

        }
    }//GEN-LAST:event_aie_no_billActionPerformed

    private void Save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save1ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());

        String subvote = null;
        String vbclass = null;
        String user = null;
        String head = null;
        String subhead = null;
        String subitem = null;
        String aie_no = null;
        String vote = null;
        String voucher_no = null;

        int comitno = 0;

        if (jCheckBox1.isSelected() == true) {
            try {
                connectDB.setAutoCommit(false);
                java.sql.Statement st = connectDB.createStatement();
                java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
                while (rs.next()) {

                    user = rs.getObject(1).toString();
                    comitno = rs.getInt(2);

                }

                java.sql.Statement ps1 = connectDB.createStatement();
                java.sql.ResultSet rst1 = ps1.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                while (rst1.next()) {
                    voucher_no = rst1.getObject(1).toString();
                }

                java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by,witholding_amount,retention_amount,vat_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?,?,?,?)");
                //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                pstmtss.setObject(1, voucher_no);
                pstmtss.setObject(2, dealerNameTxt.getText());
                pstmtss.setObject(3, "-");
                pstmtss.setObject(4, "Being Payment to  " + dealerNameTxt.getText() + " for " + orderPaymentCommitTable1.getValueAt(0, 4).toString());
                pstmtss.setObject(5, lpoTxt1.getText());
                pstmtss.setObject(6, orderPaymentCommitTable1.getValueAt(0, 1));
                pstmtss.setDouble(7, Double.parseDouble(jTextField20.getText().replace(",", "")));
                pstmtss.setDouble(8, Double.parseDouble(jTextField20.getText().replace(",", "")));
                pstmtss.setObject(9, "-");
                pstmtss.setDouble(10, 0);
                pstmtss.setDouble(11, 0);
                pstmtss.setDouble(12, 0);
                pstmtss.setDouble(13, Double.parseDouble(jTextField20.getText().replace(",", "")));
                pstmtss.setDouble(14, 0);
                pstmtss.setObject(15, orderPaymentCommitTable1.getValueAt(0, 3));
                pstmtss.setDouble(16, Double.parseDouble(witholding));
                pstmtss.setDouble(17, Double.parseDouble(retention));
                pstmtss.setDouble(18, Double.parseDouble(vat));

                pstmtss.executeUpdate();
                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_accounts_payable SET committed=true ,finance_head=true,finance_head_officer=current_user,finance_head_time=now(), accountant = true, accountant_officer=current_user,accountant_time=now(), voucher_no='" + voucher_no + "' where committed=false and invoice_no ='" + ApproveBillTable.getValueAt(current_row, 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApproveBillTable.getValueAt(current_row, 0).toString()) + "' and ((transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') or transaction_type='Projects Journal' or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal')");
                pstmt9.executeUpdate();
                Boolean inTracker = false;
                java.sql.Statement stmtf2 = connectDB.createStatement();
                java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no='" + ApproveBillTable.getValueAt(current_row, 1).toString() + "'");
                if (rsetf2.getFetchSize() > 0) {
                    inTracker = true;
                }
                //start
                String rectifyDate = "1900-01-01 00:00:00.000";
                java.util.Date realDate = null;
                java.sql.Statement stmtr = connectDB.createStatement();
                java.sql.ResultSet rsetr = stmtr.executeQuery("select '" + rectifyDate + "'::date");
                while (rsetr.next()) {
                    realDate = rsetr.getDate(1);
                }
                if (inTracker == true) {
                    java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET finance_head=now(),finance_head_officer=current_user,accountant=now(), accountant_name=current_user, commited=now(), commited_by=current_user,voucher_no='" + voucher_no + "' where (invoice_no ='" + ApproveBillTable.getValueAt(current_row, 1) + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "') ");
                    pstmt91.executeUpdate();
                } else {
                    java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard (supplier,invoice_no,creditor_created,creditor_created_by, voucher_no,"
                            + "                                                                                 commited,commited_by,accountant,accountant_name,finance_head ,finance_head_officer) "
                            + "values(?,?,?,?,?,now(),current_user,now(),current_user,now(),current_user)");
                    pstmt7.setString(1, dealerNameTxt.getText().toString());
                    pstmt7.setObject(2, ApproveBillTable.getValueAt(current_row, 1));
                    pstmt7.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                    pstmt7.setObject(4, "");
                    pstmt7.setObject(5, voucher_no);

                    pstmt7.executeUpdate();
                }

                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                //commit_check=false;
                //cancelbtn1.doClick();
                ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));

                ///generating a voucher
                com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();

                policy.VoucherMtrhPdf(connectDB, voucher_no);
                cancelbtn1.doClick();
            } catch (Exception r) {
                r.printStackTrace();
            }
        } else {
            if (jTextField12.getText().toString().replace(",", "").length() > 0 && jTextField16.getText().toString().replace(",", "").length() > 0) {
                if (jTextField20.getText().toString().replace(",", "").length() > 0) {
                    if (Double.parseDouble(jTextField19.getText().toString().replace(",", "")) >= Double.parseDouble(jTextField20.getText().toString().replace(",", "")) && Double.parseDouble(jTextField20.getText().toString().replace(",", "")) != 0) {

                        try {
                            connectDB.setAutoCommit(false);

                            java.sql.Statement st = connectDB.createStatement();
                            java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
                            while (rs.next()) {

                                user = rs.getObject(1).toString();
                                comitno = rs.getInt(2);

                            }

                            java.sql.Statement ps1 = connectDB.createStatement();
                            java.sql.ResultSet rst1 = ps1.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                            while (rst1.next()) {
                                voucher_no = rst1.getObject(1).toString();
                            }

                            java.sql.Statement st11 = connectDB.createStatement();
                            java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx2.getSelectedItem() + "'");
                            while (ress1.next()) {
                                vbclass = ress1.getString(1);
                            }
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                    + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                    + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                    + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                    + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            pstmt2.setObject(1, vbclass);
                            // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                            pstmt2.setObject(2, voteBillTxt.getSelectedItem());
                            pstmt2.setObject(3, voteheadBillCbx.getSelectedItem());
                            pstmt2.setObject(4, voteheadBillCbx.getSelectedItem());
                            pstmt2.setObject(5, voteSubheadBillCbx.getSelectedItem());
                            pstmt2.setObject(6, "");
                            pstmt2.setObject(7, dealerNameTxt.getText());
                            pstmt2.setObject(8, "Payment");
                            pstmt2.setObject(9, lpoTxt1.getText());
                            pstmt2.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt2.setDouble(11, Double.parseDouble(jTextField20.getText().replace(",", "")));
                            pstmt2.setDouble(12, 0.0);
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                            pstmt2.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                            pstmt2.setObject(14, "");
                            pstmt2.setObject(15, "");
                            pstmt2.setObject(16, user);
                            pstmt2.setObject(17, aie_no_bill.getSelectedItem());
                            pstmt2.setObject(18, "0");
                            pstmt2.setObject(19, comitno);
                            pstmt2.setObject(20, orderPaymentCommitTable1.getValueAt(0, 1).toString());
                            pstmt2.setObject(21, financialPeriodCmbxBill.getSelectedItem());
                            pstmt2.setObject(22, QuarterBillCbx.getSelectedItem());
                            pstmt2.setObject(23, voucher_no);
                            pstmt2.setObject(24, "Being  payment to the above " + dealerNameTxt.getText());
                            pstmt2.execute();

                            /////decommiting 
                            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                    + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                    + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                    + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                    + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            pstmt21.setObject(1, vbclass);
                            // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                            pstmt21.setObject(2, voteBillTxt.getSelectedItem());
                            pstmt21.setObject(3, voteheadBillCbx.getSelectedItem());
                            pstmt21.setObject(4, voteheadBillCbx.getSelectedItem());
                            pstmt21.setObject(5, voteSubheadBillCbx.getSelectedItem());
                            pstmt21.setObject(6, "");
                            pstmt21.setObject(7, dealerNameTxt.getText());
                            pstmt21.setObject(8, "Payment");
                            pstmt21.setObject(9, lpoTxt1.getText());
                            pstmt21.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt21.setDouble(11, 0.0);
                            pstmt21.setDouble(12, Double.parseDouble(jTextField20.getText().replace(",", "")));
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                            pstmt21.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                            pstmt21.setObject(14, "");
                            pstmt21.setObject(15, "");
                            pstmt21.setObject(16, user);
                            pstmt21.setObject(17, aie_no_bill.getSelectedItem());
                            pstmt21.setObject(18, "0");
                            pstmt21.setObject(19, comitno);
                            pstmt21.setObject(20, orderPaymentCommitTable1.getValueAt(0, 1).toString());
                            pstmt21.setObject(21, financialPeriodCmbxBill.getSelectedItem());
                            pstmt21.setObject(22, QuarterBillCbx.getSelectedItem());
                            pstmt21.setObject(23, voucher_no);
                            pstmt21.setObject(24, "Being  payment to the above " + dealerNameTxt.getText());
                            pstmt21.execute();

                            Boolean inTracker = false;
                            java.sql.Statement stmtf2 = connectDB.createStatement();
                            java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no='" + ApproveBillTable.getValueAt(current_row, 1).toString() + "'");
                            if (rsetf2.getFetchSize() > 0) {
                                inTracker = true;
                            }
                            //start
                            String rectifyDate = "1900-01-01 00:00:00.000";
                            java.util.Date realDate = null;
                            java.sql.Statement stmtr = connectDB.createStatement();
                            java.sql.ResultSet rsetr = stmtr.executeQuery("select '" + rectifyDate + "'::date");
                            while (rsetr.next()) {
                                realDate = rsetr.getDate(1);
                            }
                            if (inTracker == true) {
                                java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET commited=now(), commited_by=current_user,voucher_no='" + voucher_no + "' where invoice_no ='" + ApproveBillTable.getValueAt(current_row, 1) + "' and supplier ilike '%" + dealerNameTxt.getText() + "%'");
                                pstmt91.executeUpdate();
                            } else {
                                java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard (supplier,invoice_no,creditor_created,creditor_created_by, voucher_no,"
                                        + "                                                                                 commited,commited_by) "
                                        + "values(?,?,?,?,?,now(),current_user)");
                                pstmt7.setString(1, dealerNameTxt.getText().toString());
                                pstmt7.setObject(2, ApproveBillTable.getValueAt(current_row, 1));
                                pstmt7.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                pstmt7.setObject(4, "");
                                pstmt7.setObject(5, voucher_no);

                                pstmt7.executeUpdate();
                            }

                            ////end
                            System.out.println("The BILL has been committed");

                            ////generating a voucher
                            /////inserting into ac_reprinting_voucher
                            ////amount allocated to a subhead for the whole year
                            String allocated_amt = null, total_paidE_amt = null;
                            java.sql.Statement stl = connectDB.createStatement();

                            java.sql.ResultSet rsl = stl.executeQuery("select sum(subhead_quartely_amount) from ac_aie_allocation where head='" + voteheadBillCbx.getSelectedItem().toString() + "' and subhead='" + voteSubheadBillCbx.getSelectedItem().toString() + "'");
                            while (rsl.next()) {

                                allocated_amt = rsl.getObject(1).toString();

                            }

                            java.sql.Statement st22 = connectDB.createStatement();
                            java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill.getSelectedItem() + "' and head='" + voteheadBillCbx.getSelectedItem().toString() + "' and subhead='" + voteSubheadBillCbx.getSelectedItem().toString() + "'");
                            while (ress22.next()) {

                                total_paidE_amt = ress22.getString(1);

                            }

                            Boolean t = true;
                            total_paidE_amt = Double.toString(Double.parseDouble(total_paidE_amt) - Double.parseDouble(jTextField20.getText().replace(",", "")));
                            double objs = Double.parseDouble(allocated_amt) - Double.parseDouble(total_paidE_amt);
                            double balance2 = objs - Double.parseDouble(jTextField20.getText().replace(",", "")), neq = 0.0;

                            for (int i = 0; i < orderPaymentCommitTable1.getModel().getRowCount(); i++) {
                                if (orderPaymentCommitTable1.getModel().getValueAt(i, 1) != null) {
//                       if(Double.parseDouble(orderPaymentCommitTable1.getValueAt(i,6).toString())<0){
//                            t=false;
//                                 java.sql.PreparedStatement pstmtss1= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, prepared_by, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date) VALUES (?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, now()::date)");
//                    //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
//                            pstmtss1.setObject(1,voucher_no);
//                             pstmtss1.setObject(2,SupplierTxt1.getText());
//                             pstmtss1.setObject(3, "-");
//                             pstmtss1.setObject(4, "Debit Note");
//                             pstmtss1.setObject(5,lpoTxt1.getText());
//                             pstmtss1.setObject(6,orderPaymentCommitTable1.getValueAt(0,1));
//                             pstmtss1.setDouble(7,0.00);
//                             pstmtss1.setDouble(8,0.00);
//                             pstmtss1.setObject(9,orderPaymentCommitTable1.getValueAt(0,3));
//                             
//                             
//                             pstmtss1.setObject(10, voteheadBillCbx.getSelectedItem().toString()+"-"+voteSubheadBillCbx.getSelectedItem().toString());
//                             pstmtss1.setDouble(11,Double.parseDouble(allocated_amt.replace(",", "")));
//                             pstmtss1.setDouble(12,Double.parseDouble(total_paidE_amt.replace(",", "")));
//                             pstmtss1.setDouble(13,objs);
//                             pstmtss1.setDouble(14,Double.parseDouble(orderPaymentCommitTable1.getValueAt(i,6).toString()));
//                             pstmtss1.setDouble(15,balance2);
//                             neq=Double.parseDouble(orderPaymentCommitTable1.getValueAt(i,6).toString());
//                            pstmtss1.executeUpdate(); 
//                             }
                                }
                            }
                            String invoice = "";
                            if (lpoTxt1.getText().contains("DIR_PUR")) {
                                for (int i = 0; i < orderPaymentCommitTable1.getModel().getRowCount(); i++) {
                                    if (orderPaymentCommitTable1.getModel().getValueAt(i, 1) != null) {
                                        java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_accounts_payable SET committed=true , voucher_no='" + voucher_no + "' where committed=false and invoice_no ='" + orderPaymentCommitTable1.getValueAt(i, 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%')");
                                        pstmt9.executeUpdate();
                                        invoice = invoice + "\n" + orderPaymentCommitTable1.getValueAt(i, 1).toString();
                                    }
                                }
                            } else {
                                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_accounts_payable SET committed=true , voucher_no='" + voucher_no + "' where committed=false and invoice_no ='" + invoiceNoTxt.getText().toString() + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText().toString()) + "' and ((transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') or transaction_type='Projects Journal' or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal')");
                                pstmt9.executeUpdate();
                            }

                            double amount = 0.0;
//                            if(t==true){ 
                            amount = Double.parseDouble(jTextField20.getText().replace(",", ""));
//                            }
//                            else {amount=Double.parseDouble(jTextField20.getText().replace(",",""))-neq;}
                            java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by,witholding_amount,retention_amount,vat_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?,?,?,?)");
                            //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                            pstmtss.setObject(1, voucher_no);
                            pstmtss.setObject(2, dealerNameTxt.getText());
                            pstmtss.setObject(3, "-");
                            if (lpoTxt1.getText().contains("DIR_PUR")) {
                                pstmtss.setObject(4, "Being Payment to  " + dealerNameTxt.getText() + " for " + orderPaymentCommitTable1.getValueAt(0, 4).toString() + " as per GRN,Acceptance form and Invoices Attached");
                                pstmtss.setObject(5, "Direct Purchase");
                                pstmtss.setObject(6, invoice);
                            } else {
                                pstmtss.setObject(4, "Being Payment to  " + dealerNameTxt.getText() + " for " + orderPaymentCommitTable1.getValueAt(0, 4).toString());
                                pstmtss.setObject(5, lpoTxt1.getText());
                                pstmtss.setObject(6, orderPaymentCommitTable1.getValueAt(0, 1));
                            }
//                             pstmtss.setObject(4, "Being Payment to  "+SupplierTxt1.getText()+" for "+orderPaymentCommitTable1.getValueAt(0, 4).toString());
//                             pstmtss.setObject(5,lpoTxt1.getText());

                            pstmtss.setDouble(7, amount);
                            pstmtss.setDouble(8, amount);
                            pstmtss.setObject(9, voteheadBillCbx.getSelectedItem().toString() + "-" + voteSubheadBillCbx.getSelectedItem().toString());
                            pstmtss.setDouble(10, Double.parseDouble(allocated_amt.replace(",", "")));
                            pstmtss.setDouble(11, Double.parseDouble(total_paidE_amt.replace(",", "")));
                            pstmtss.setDouble(12, objs);
                            pstmtss.setDouble(13, amount);
                            pstmtss.setDouble(14, balance2);
                            pstmtss.setObject(15, orderPaymentCommitTable1.getValueAt(0, 3));
                            pstmtss.setDouble(16, Double.parseDouble(witholding));
                            pstmtss.setDouble(17, Double.parseDouble(retention));
                            pstmtss.setDouble(18, Double.parseDouble(vat));

                            pstmtss.executeUpdate();

                            if (dealerNameTxt.getText().contains("BOARD MEMBER") || dealerNameTxt.getText().contains("CASUAL LABOURERS")) {
                                System.out.println("niko");
                                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_ledger SET voucher_no='" + voucher_no + "' where (transaction_type ='CASUAL LABOURERS PAYMENT' or transaction_type ='BOARD MEMBER PAYMENT') and receipt_no='" + invoiceNoTxt.getText() + "'");
                                pstmt9.executeUpdate();
                            }

                            // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, orderPaymentCommitTable.getValueAt(i, 3).toString(), commentsTxt.getText(), "EXPENDITURE_VOTEBOOK", "EXPENDITURE_APPROVAL");
                            ////generating a voucher
                            connectDB.commit();
                            connectDB.setAutoCommit(true);
                            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            jCheckBox1.setSelected(false);
                            //commit_check=false;
                            //cancelbtn1.doClick();
                            ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));

                            ///generating a voucher
                            com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();

                            policy.VoucherMtrhPdf(connectDB, voucher_no);
                            cancelbtn1.doClick();

                        } catch (java.sql.SQLException sq) {
                            sq.printStackTrace();
                            try {
                                connectDB.rollback();
                            } catch (java.sql.SQLException sql) {
                                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            }
                            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            System.out.println(sq.getMessage());
                        }

                    } else {
                        String str = "<html><center><font color=red> INVALID BILL COMMITMENT! CHECK YOUR FIGURES</font></center></html>";
                        JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
                    }
                } else {
                    String str = "<html><center><font color=red> You need to click on the Table to verify The total amount on the Bill</font></center></html>";
                    JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
                }
            } else {
                String str = "<html><center><font color=red>Choose the AIENO and the Vote Subhead To Specify The votes Affected</font></center></html>";
                JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
            }
        }
    }//GEN-LAST:event_Save1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        //   ApprovalTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select  dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and committed=false"));
        for (int k = 0; k < orderPaymentCommitTable1.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable1.getColumnCount(); r++) {
                orderPaymentCommitTable1.getModel().setValueAt(null, k, r);
            }
        }

        invoiceNoTxt.setText(null);
        votehead2.setText(null);
        division2.setText(null);
        //TenderTxt.setText(null);
        // QuarterBillCbx.removeAllItems();
        financialPeriodCmbxBill.removeAllItems();
        jTextField12.setText(null);
        jTextField13.setText(null);
        jTextField14.setText(null);
        jTextField15.setText(null);
        jTextField16.setText(null);
        jTextField18.setText(null);
        jTextField17.setText(null);
        jTextField19.setText(null);
        //aie_no_bill.removeAllItems();
        voteBillTxt.removeAllItems();
        voteheadBillCbx.removeAllItems();
        voteSubheadBillCbx.removeAllItems();
        jTextField20.setText(null);

        dealerNameTxt.setText(null);
        lpoTxt1.setText(null);

        //TenderTxt1.setText(null);
        for (int k = 0; k < orderPaymentCommitTable1.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable1.getColumnCount(); r++) {
                orderPaymentCommitTable1.getModel().setValueAt(null, k, r);
            }
        }

        for (int k = 0; k < ApproveBillTable.getRowCount(); k++) {
            for (int r = 0; r < ApproveBillTable.getColumnCount(); r++) {
                ApproveBillTable.getModel().setValueAt(null, k, r);
            }
        }
        voteSubheadCommitmentsBillTxt.setText(null);
        voteSubheadPaymentsBillTxt.setText(null);

        ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,invoice_no from ac_accounts_payable where ((transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal' or transaction_type='Projects Journal') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
//        // TODO add your handling code here:
//        com.afrisoftech.voucher.ImprestSurrenderPdf policy = new com.afrisoftech.voucher.ImprestSurrenderPdf();
//
//                 policy.ImprestSurrenderPdf(connectDB);
    }//GEN-LAST:event_exitbtn1ActionPerformed
    private String appostroph(String mmme) {
        String newname = "";

        for (int i = 0; i < mmme.length(); i++) {
            if (String.valueOf(mmme.charAt(i)).contains("'")) {
                System.out.println("true " + String.valueOf(mmme.charAt(i)));
                newname = newname.concat(String.valueOf(mmme.charAt(i)) + "'");
            } else {
                System.out.println("false " + String.valueOf(mmme.charAt(i)));
                newname = newname.concat(String.valueOf(mmme.charAt(i)));
            }
        }
        System.out.println(newname);
        return newname;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String transNo = null,
                User1 = null;
        String reason = JOptionPane.showInputDialog(null, "Input Reason for Cancelling ", "Cancel Bill", JOptionPane.OK_CANCEL_OPTION);
        try {
            if (JOptionPane.OK_OPTION == 0) {
                connectDB.setAutoCommit(false);
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select user,nextval('transaction_no_seq')");
                while (rst.next()) {
                    transNo = rst.getObject(2).toString();
                    User1 = rst.getObject(1).toString();
                }
                if (reason != null) {
                    java.sql.Statement stmtfge = connectDB.createStatement();
                    java.sql.ResultSet rsetfge = stmtfge.executeQuery("select * from ac_accounts_payable where dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no='" + orderPaymentCommitTable1.getValueAt(0, 1).toString() + "' and balance>0");
                    if (rsetfge.next()) {
                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_accounts_payable values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now(), ?, ?, ?,?,?,?,now(),now(),?,?,?)");
                        pstmt1.setObject(1, rsetfge.getObject(1));
                        pstmt1.setObject(2, rsetfge.getObject(2));
                        pstmt1.setObject(3, rsetfge.getObject(3));
                        pstmt1.setString(4, rsetfge.getObject(4).toString());
                        pstmt1.setObject(5, rsetfge.getObject(5));
                        pstmt1.setString(6, reason.toUpperCase());
                        pstmt1.setString(7, "");
                        pstmt1.setString(8, "");
                        pstmt1.setString(9, "");
                        pstmt1.setString(10, "");
                        pstmt1.setString(11, transNo);
                        pstmt1.setString(12, "Raise Invoice");
                        pstmt1.setDouble(14, 0.00);
                        java.sql.Statement stmtfges = connectDB.createStatement();
                        java.sql.ResultSet rsetfges = stmtfges.executeQuery("select sum(credit-debit) from ac_accounts_payable where dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no='" + orderPaymentCommitTable1.getValueAt(0, 1).toString() + "'");
                        if (rsetfges.next()) {
                            pstmt1.setDouble(13, java.lang.Double.valueOf(rsetfges.getObject(1).toString()));
                        }
                        pstmt1.setObject(15, "CANCELED-" + rsetfge.getObject(16));
                        pstmt1.setString(16, rsetfge.getObject(17).toString());
                        pstmt1.setBoolean(17, false);
                        pstmt1.setBoolean(18, false);
                        pstmt1.setString(19, User1);
                        pstmt1.setString(20, "");

                        pstmt1.setDouble(21, -1 * java.lang.Double.valueOf(rsetfge.getObject(24).toString()));
                        pstmt1.setDouble(22, -1 * java.lang.Double.valueOf(rsetfge.getObject(25).toString()));
                        pstmt1.setDouble(23, -1 * java.lang.Double.valueOf(rsetfge.getObject(26).toString()));
                        pstmt1.executeUpdate();

                        java.sql.PreparedStatement pstmt129 = connectDB.prepareStatement("UPDATE ac_accounts_payable SET invoice_no='" + "CANCELED-" + rsetfge.getObject(16) + "' where dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no='" + orderPaymentCommitTable1.getValueAt(0, 1).toString() + "' and balance>0");
                        pstmt129.executeUpdate();
                        java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_dashboard SET cancelled=true ,  reason='" + reason + "' where supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(dealerNameTxt.getText()) + "' and invoice_no='" + orderPaymentCommitTable1.getValueAt(0, 1).toString() + "'");
                        pstmt9.executeUpdate();

                        connectDB.commit();
                        connectDB.setAutoCommit(true);
                        javax.swing.JOptionPane.showMessageDialog(this, "Bill Cancelled Successfully", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        //ApprovalTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where transaction_type='Stock Delivery' and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));
                        cancelbtn1.doClick();
                    }
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Double check entries. Cannot Cancel with no Reason", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception y) {
            y.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void orderPaymentCommitTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderPaymentCommitTable1MouseClicked
        // TODO add your handling code here:

        jTextField20.setForeground(Color.red);
        if (Double.parseDouble(retention) != 0 || Double.parseDouble(witholding) != 0 || Double.parseDouble(vat) != 0) {
            double tot = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(orderPaymentCommitTable1, 6) + Double.parseDouble(retention) + Double.parseDouble(witholding) + Double.parseDouble(vat);
            jTextField20.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(tot));
        } else {
            jTextField20.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(orderPaymentCommitTable1, 6)));
        }
    }//GEN-LAST:event_orderPaymentCommitTable1MouseClicked

    private void orderPaymentCommitTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderPaymentCommitTable1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_orderPaymentCommitTable1MouseReleased

    private void orderPaymentCommitTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderPaymentCommitTable1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_orderPaymentCommitTable1KeyReleased

    private void voteheadBillCbx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteheadBillCbx1ActionPerformed
        if (!QuarterBillCbx1.getSelectedItem().equals("-")) {

            try {

                java.sql.Statement st1192 = connectDB.createStatement();
                java.sql.ResultSet ress192 = st1192.executeQuery("select headname from heads where head = '" + voteheadBillCbx1.getSelectedItem() + "'");
                if (ress192.next()) {

                    division1.setText(ress192.getString(1));

                }

                String classes = null;
                java.sql.Statement st11 = connectDB.createStatement();
                java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx1.getSelectedItem() + "'");
                while (ress1.next()) {
                    classes = ress1.getString(1);
                    voteSubheadBillCbx1.setEnabled(true);

                    voteSubheadBillCbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct subhead,subheadname  from subheads where srccode='" + voteheadBillCbx1.getSelectedItem() + "'  and subhead in (select DISTINCT subhead from ac_aie_allocation where head='" + voteheadBillCbx1.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and aieno='" + aie_no_bill1.getSelectedItem() + "')  and station  ilike '%" + classes + "%' order by subhead asc"));
                    voteSubheadBillCbx1.setEnabled(true);
                }

                int num1 = 0;
                Double head_amt = 0.0;
                Double subhead_quarterly_total = 0.0;
                java.sql.Statement st1 = connectDB.createStatement();
                java.sql.ResultSet ress = st1.executeQuery("SELECT count(*) as num FROM ac_aie_allocation where aieno ilike '" + aie_no_bill1.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and  head='" + voteheadBillCbx1.getSelectedItem() + "'  and class='" + classes + "'");
                while (ress.next()) {
                    num1 = ress.getInt(1);
                    // head_amt=ress.getDouble(2);
                }
                String head_amt_str = null;
                java.sql.Statement st6 = connectDB.createStatement();
                java.sql.ResultSet ress6 = st6.executeQuery(" SELECT DISTINCT head_amount  FROM ac_aie_allocation where aieno ilike '" + aie_no_bill1.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and  head='" + voteheadBillCbx1.getSelectedItem() + "' and class='" + classes + "' and head_amount>0 ");
                while (ress6.next()) {

                    head_amt_str = ress6.getString(1);
                    jTextField25.setForeground(Color.red);
                    jTextField25.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(head_amt_str)));
                }

                ////head balance
                double subhead_com_total = 0.0;
                java.sql.Statement st7 = connectDB.createStatement();
                java.sql.ResultSet res7 = st7.executeQuery(" SELECT   sum(allocated_amount)   FROM ac_aie_commitment where aie_no='" + aie_no_bill1.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and head='" + voteheadBillCbx1.getSelectedItem() + "' and v_class='" + classes + "' ");
                while (res7.next()) {
                    if (res7.getString(1) != null) {
                        subhead_com_total = res7.getDouble(1);

                        jTextField27.setForeground(Color.red);
                        jTextField27.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField25.getText().replace(",", "")) - subhead_com_total));

                    } else {
                        subhead_com_total = 0.0;
                        jTextField27.setForeground(Color.red);
                        jTextField27.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField25.getText().replace(",", "")) - subhead_com_total));

                    }

                }

            } catch (Exception edf) {
                edf.printStackTrace();

            }
        } else {
            JOptionPane.showMessageDialog(null, "You must select the Quarter you are in", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_voteheadBillCbx1ActionPerformed

    private void voteSubheadBillCbx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteSubheadBillCbx1ActionPerformed
        try {

            String class_vb = null;
            java.sql.Statement st11 = connectDB.createStatement();
            java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx1.getSelectedItem() + "'");
            while (ress1.next()) {

                class_vb = ress1.getString(1);

            }
            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select subheadname from subheads where subhead = '" + voteSubheadBillCbx1.getSelectedItem() + "'");
            if (ress19.next()) {

                votehead1.setText(ress19.getString(1));

            }
            java.sql.Statement st1192 = connectDB.createStatement();
            java.sql.ResultSet ress192 = st1192.executeQuery("select headname from heads where head = '" + voteheadBillCbx1.getSelectedItem() + "'");
            if (ress192.next()) {

                division1.setText(ress192.getString(1));

            }

            double subhead_quarterly_total = 0.0;
            java.sql.Statement st2 = connectDB.createStatement();
            java.sql.ResultSet res2 = st2.executeQuery(" SELECT   sum(subhead_quartely_amount)    FROM ac_aie_allocation where aieno='" + aie_no_bill1.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and head='" + voteheadBillCbx1.getSelectedItem() + "' and period='" + QuarterBillCbx1.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx1.getSelectedItem() + "' and class='" + class_vb + "' ");
            while (res2.next()) {
                subhead_quarterly_total = res2.getDouble(1);
                //fin_yr=res2.getString(2);
                jTextField26.setForeground(Color.red);
                jTextField26.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total));

            }
            ///getting the balances

            //subhead balance
            double subhead_com_total = 0.0;
            java.sql.Statement st7 = connectDB.createStatement();
            java.sql.ResultSet res7 = st7.executeQuery(" SELECT  sum(allocated_amount)   FROM ac_aie_commitment where aie_no='" + aie_no_bill1.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and head='" + voteheadBillCbx1.getSelectedItem() + "' and period='" + QuarterBillCbx1.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx1.getSelectedItem() + "' and v_class='" + class_vb + "' ");
            while (res7.next()) {
                if (res7.getString(1) != null) {
                    subhead_com_total = res7.getDouble(1);
                    //fin_yr=res2.getString(2);
                    jTextField29.setForeground(Color.red);
                    jTextField29.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total - subhead_com_total));
                } else {
                    subhead_com_total = 0.0;
                    jTextField29.setForeground(Color.red);
                    jTextField29.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total - subhead_com_total));
                }
            }

            /////head balance
            jTextField27.setForeground(Color.red);
            jTextField27.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField25.getText().replace(",", "")) - subhead_com_total));

            ////getting the vote subhead commitments
            java.sql.Statement st90 = connectDB.createStatement();
            //java.sql.ResultSet res90= st90.executeQuery(" SELECT  distinct sum(allocated_amount)   FROM ac_aie_commitment where aie_no='"+jComboBox4.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and head='"+jComboBox2.getSelectedItem()+"' and period='"+jComboBox1.getSelectedItem()+"' and subhead='"+jComboBox3.getSelectedItem()+"' ");
            double subhead_commited_total = 0.0, subhead_payment_total = 0.0;
            java.sql.ResultSet res90 = st90.executeQuery(" SELECT  sum(allocated_amount),sum(paid_amount)   FROM ac_aie_commitment where aie_no='" + aie_no_bill1.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and head='" + voteheadBillCbx1.getSelectedItem() + "' and period='" + QuarterBillCbx1.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx1.getSelectedItem() + "' and vote='" + voteBillTxt1.getSelectedItem() + "' and v_class='" + class_vb + "' ");
            while (res90.next()) {
                if (res90.getString(1) != null) {
                    subhead_commited_total = res90.getDouble(1);
                    //fin_yr=res2.getString(2);
                    VoteSubheadCommitmentsImpTxt.setForeground(Color.red);
                    VoteSubheadCommitmentsImpTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                } else {
                    subhead_commited_total = 0.0;
                    VoteSubheadCommitmentsImpTxt.setForeground(Color.red);
                    VoteSubheadCommitmentsImpTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total));
                }

                if (res90.getString(2) != null) {
                    subhead_payment_total = res90.getDouble(2);
                    //fin_yr=res2.getString(2);
                    VoteSubheadPaymentsImpTxt.setForeground(Color.red);
                    VoteSubheadPaymentsImpTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_payment_total));
                } else {
                    subhead_payment_total = 0.0;
                    VoteSubheadPaymentsImpTxt.setForeground(Color.red);
                    VoteSubheadPaymentsImpTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_payment_total));
                }
            }

        } catch (Exception esd) {
            esd.printStackTrace();

        }
    }//GEN-LAST:event_voteSubheadBillCbx1ActionPerformed

    private void aie_no_bill1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aie_no_bill1ActionPerformed
        ///vote
        voteBillTxt1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct vote from ac_aie_allocation where aieno='" + aie_no_bill1.getSelectedItem() + "' order by 1"));
        ///fin yr
        financialPeriodCmbxBill1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct financial_year from ac_aie_allocation where aieno='" + aie_no_bill1.getSelectedItem() + "'"));

        voteheadBillCbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct head from ac_aie_allocation where aieno='" + aie_no_bill1.getSelectedItem() + "' order by 1"));
        try {
            Double aie_amt = 0.0;
            java.sql.Statement st2 = connectDB.createStatement();
            java.sql.ResultSet res2 = st2.executeQuery(" SELECT distinct aie_amount,aie_reference_no   FROM ac_aie_allocation where aieno='" + aie_no_bill1.getSelectedItem() + "' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' ");
            while (res2.next()) {
                jTextField22.setForeground(Color.red);
                jTextField22.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res2.getString(1))));
                aie_amt = res2.getDouble(1);

            }

            try {
                //////getting the total balance
                String total_commited_amt = null;
                java.sql.Statement st22 = connectDB.createStatement();
                java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill1.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "'");
                while (ress22.next()) {

                    total_commited_amt = ress22.getString(1);
                    if (total_commited_amt != null) {
                        jTextField23.setForeground(Color.red);
                        jTextField28.setForeground(Color.red);
                        jTextField23.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                        jTextField28.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                    } else {
                        total_commited_amt = "0.0";
                        jTextField23.setForeground(Color.red);
                        jTextField28.setForeground(Color.red);
                        jTextField23.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                        jTextField28.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                    }
                }

                ///getting the total payments done
                String total_paid_amt = null;
                java.sql.Statement st23 = connectDB.createStatement();
                java.sql.ResultSet ress23 = st23.executeQuery("SELECT sum(paid_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill1.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "'");
                while (ress23.next()) {

                    total_paid_amt = ress23.getString(1);
                    if (total_paid_amt != null) {

                        jTextField24.setForeground(Color.red);
                        jTextField24.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                    } else {
                        total_paid_amt = "0.0";
                        jTextField24.setForeground(Color.red);

                        jTextField24.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                    }
                }
            } catch (Exception hsd) {
                hsd.printStackTrace();
            }

        } catch (Exception eds) {
            eds.printStackTrace();

        }
    }//GEN-LAST:event_aie_no_bill1ActionPerformed

    private void imprestPaymentCommitTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprestPaymentCommitTableMouseClicked
        // TODO add your handling code here:
        if (imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 5) == Boolean.TRUE) {
            jTextField30.setForeground(Color.red);
            jTextField30.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(imprestPaymentCommitTable, 4)));
        } else {
            jTextField30.setText("0.00");
        }
    }//GEN-LAST:event_imprestPaymentCommitTableMouseClicked

    private void imprestPaymentCommitTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imprestPaymentCommitTableKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_imprestPaymentCommitTableKeyReleased

    private void Save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save2ActionPerformed
        boolean board = false;
        if (bypassVote.isSelected()) {
            String user = "";

            String voucher_no = null;
            int comitno = 0;
            try {
                connectDB.setAutoCommit(false);
//satrt
                if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("OTHER_PAY") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PAYE_PAY") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PERS_REQ") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("P_IMPREST_REQ")) {
                    String dealer = null, voucher = null, reason = null;
                    if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PERS_REQ")) {
                        java.sql.Statement psGetReason = connectDB.createStatement();
                        java.sql.ResultSet rstGetReason = psGetReason.executeQuery("select payee,requisition_no,reason from ac_petty_cash_requisition where requisition_no = '" + imprestPaymentCommitTable.getValueAt(0, 1).toString() + "'");
                        while (rstGetReason.next()) {
                            voucher = rstGetReason.getString(2);
                            dealer = rstGetReason.getString(1);
                            reason = rstGetReason.getString(3);
                        }
                    } else {
                        java.sql.Statement psGetReason = connectDB.createStatement();
                        java.sql.ResultSet rstGetReason = psGetReason.executeQuery("select dealer,voucher_no,reason from ac_bills where voucher_no = '" + imprestPaymentCommitTable.getValueAt(0, 1).toString() + "'");
                        while (rstGetReason.next()) {
                            voucher = rstGetReason.getString(2);
                            dealer = rstGetReason.getString(1);
                            reason = rstGetReason.getString(3);
                        }
                    }

                    System.out.println("dealer == " + dealer);

                    if (reason.contains("BOARD MEMBER")) {
                        java.sql.Statement ps1 = connectDB.createStatement();
                        java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCBOD'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                        while (rst1.next()) {
                            board = true;
                            voucher_no = rst1.getObject(1).toString();
                        }

                        java.sql.PreparedStatement pstmtBod = connectDB.prepareStatement("update ac_other_payments set final_voucher_no = ?  WHERE voucher_no = ?");
                        pstmtBod.setString(1, voucher_no);
                        pstmtBod.setString(2, imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1).toString());
                        pstmtBod.executeUpdate();

                    } else if (voucher.contains("PAYE")) {
                        java.sql.Statement ps1 = connectDB.createStatement();
                        java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCPAYE'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                        while (rst1.next()) {
                            voucher_no = rst1.getObject(1).toString();
                        }
                    } else if (voucher.contains("P_IMPREST_REQ") || voucher.contains("PERS_REQ")) {
                        java.sql.Statement ps1 = connectDB.createStatement();
                        java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCPC'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                        while (rst1.next()) {
                            voucher_no = rst1.getObject(1).toString();
                        }
                    } else {
                        java.sql.Statement ps1 = connectDB.createStatement();
                        java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCKIN'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                        while (rst1.next()) {
                            voucher_no = rst1.getObject(1).toString();
                        }
                    }
                } else if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("REM_PAY")) {
                    java.sql.Statement ps1 = connectDB.createStatement();
                    java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCREM'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                    while (rst1.next()) {
                        voucher_no = rst1.getObject(1).toString();
                    }
                } else {
//           java.sql.Statement ps = connectDB.createStatement();
//            java.sql.ResultSet rst = ps.executeQuery("select 'IMP'||nextval('imprest')");
//                   while (rst.next()) {
//                rst.getObject(1).toString();
//
//                voucher_no = rst.getObject(1).toString();
//            }
                    voucher_no = imprestPaymentCommitTable.getValueAt(0, 1).toString();
                }

                //end
                java.sql.Statement st = connectDB.createStatement();
                java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
                while (rs.next()) {

                    user = rs.getObject(1).toString();
                    comitno = rs.getInt(2);

                }

                java.sql.PreparedStatement pstmtBod = connectDB.prepareStatement("update ac_other_payments set final_voucher_no = ?  WHERE voucher_no = ?");
                pstmtBod.setString(1, voucher_no);
                pstmtBod.setString(2, imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1).toString());
                pstmtBod.executeUpdate();

                java.sql.PreparedStatement pstmt931 = connectDB.prepareStatement("UPDATE ac_dashboard SET commited=now(), commited_by=current_user,voucher_no='" + voucher_no + "' where invoice_no ='" + imprestPaymentCommitTable.getValueAt(0, 1).toString().trim() + "' and supplier ilike '%" + SupplierTxt2.getText().toString().trim() + "%'");
                pstmt931.executeUpdate();

                if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("OTHER_PAY") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("REM_PAY")) {
                    java.sql.PreparedStatement pstmt10 = connectDB.prepareStatement("UPDATE ac_bills SET voucher_no='" + voucher_no + "', final_voucher_no='" + voucher_no + "', commited=true,accountant=true,finance_head=true,finance_head_officer =current_user,finance_head_time=now() where voucher_no ='" + imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt2.getText()) + "'");
                    pstmt10.executeUpdate();
                } else if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PERS_REQ") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PETT")) {
                    java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_petty_cash_requisition SET commited=true,examination=true,final_voucher_no='" + voucher_no + "' where requisition_no ='" + imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1) + "' and payee='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt2.getText()) + "'");
                    pstmt9.executeUpdate();
                } else {
                    java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_bills SET final_voucher_no='" + voucher_no + "',commited=true,accountant=true,finance_head=true,finance_head_officer =current_user,finance_head_time=now() where voucher_no ='" + imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt2.getText()) + "'");
                    pstmt9.executeUpdate();
                }

                java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by,vat_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?,?)");
                //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                pstmtss.setObject(1, voucher_no);
                pstmtss.setObject(2, SupplierTxt2.getText());
                pstmtss.setObject(3, "-");
                pstmtss.setObject(4, imprestPaymentCommitTable.getValueAt(0, 3).toString());
                pstmtss.setObject(5, jTextField21.getText());
                pstmtss.setObject(6, imprestPaymentCommitTable.getValueAt(0, 7).toString());
                pstmtss.setDouble(7, Double.parseDouble(jTextField30.getText().replace(",", "")));
                pstmtss.setDouble(8, Double.parseDouble(jTextField30.getText().replace(",", "")));
                pstmtss.setObject(9, "-");
                pstmtss.setDouble(10, 0);
                pstmtss.setDouble(11, 0);
                pstmtss.setDouble(12, 0);
                pstmtss.setDouble(13, Double.parseDouble(jTextField30.getText().replace(",", "")));
                pstmtss.setDouble(14, 0);
                pstmtss.setObject(15, imprestPaymentCommitTable.getValueAt(0, 6));
                if (board == true) {
                    pstmtss.setDouble(16, Double.parseDouble(jTextField30.getText().replace(",", "")) - com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(imprestPaymentCommitTable, 7));
                } else {
                    pstmtss.setDouble(16, 0);
                }

                pstmtss.executeUpdate();

                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                //commit_check=false;
                //cancelbtn1.doClick();
                imprestApprovalTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and final_voucher_no = ''  AND commited = false  ORDER  BY dealer"));
                ///generating a voucher
                if (voucher_no.contains("IMP") || voucher_no.contains("PETT_REQ")) {
                    com.afrisoftech.votebook.PettyCashVoucherPdf policy = new com.afrisoftech.votebook.PettyCashVoucherPdf();

                    policy.PettyCashVoucherPdf(connectDB, voucher_no);

                } else {
                    com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();
                    policy.VoucherMtrhPdf(connectDB, voucher_no);
                }
                cancelbtn2.doClick();

            } catch (Exception y) {
                y.printStackTrace();
            }

        } else {

//      if(orderPaymentCommitTable2.getValueAt(0,1).toString().contains("S_IMPREST_RE")){
//          jTextField29.setText("0");
//          jTextField26.setText("0");
//      }
//        
            // if((Double.parseDouble(jTextField29.getText().toString().replace(",",""))>=Double.parseDouble(jTextField30.getText().toString().replace(",","")) && Double.parseDouble(jTextField30.getText().toString().replace(",",""))!=0) || orderPaymentCommitTable2.getValueAt(0,1).toString().contains("S_IMPREST_RE")){
            if ((Double.parseDouble(jTextField29.getText().toString().replace(",", "")) >= Double.parseDouble(jTextField30.getText().toString().replace(",", "")) && Double.parseDouble(jTextField30.getText().toString().replace(",", "")) != 0)) {
                if (jTextField30.getText().toString().replace(",", "").length() > 0) {
                    // if((Double.parseDouble(jTextField29.getText().toString().replace(",",""))>=Double.parseDouble(jTextField30.getText().toString().replace(",","")) && Double.parseDouble(jTextField30.getText().toString().replace(",",""))!=0) || orderPaymentCommitTable2.getValueAt(0,1).toString().contains("S_IMPREST_RE")){
                    if ((Double.parseDouble(jTextField29.getText().toString().replace(",", "")) >= Double.parseDouble(jTextField30.getText().toString().replace(",", "")) && Double.parseDouble(jTextField30.getText().toString().replace(",", "")) != 0)) {
                        java.util.Calendar calendar = java.util.Calendar.getInstance();

                        long dateNow = calendar.getTimeInMillis();

                        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                        System.out.println(datenowSql1.toString());

                        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                        System.out.println(datenowSql.toString());

                        String subvote = null;
                        String vbclass = null;
                        String user = null;
                        String head = null;
                        String subhead = null;
                        String subitem = null;
                        String aie_no = null;
                        String vote = null;
                        String voucher_no = null;

                        int comitno = 0;
                        try {
                            connectDB.setAutoCommit(false);
//            java.sql.Statement stm121 = connectDB.createStatement();
//            java.sql.ResultSet rse121 = stm121.executeQuery("SELECT subvote FROM heads WHERE  vote ='" + jComboBox1.getSelectedItem() + "' AND head = '" + jComboBox2.getSelectedItem() + "'");
//            while (rse121.next()) {
//
//                subvote = rse121.getObject(1).toString();
//            }
//
//            java.sql.Statement stm = connectDB.createStatement();
//            java.sql.ResultSet rse = stm.executeQuery("SELECT class FROM vb_class WHERE  classname ILIKE '" + jComboBox4.getSelectedItem() + "'");
//            while (rse.next()) {
//
//                vbclass = rse.getObject(1).toString();
//            }

                            java.sql.Statement st = connectDB.createStatement();
                            java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
                            while (rs.next()) {

                                user = rs.getObject(1).toString();
                                comitno = rs.getInt(2);

                            }
                            /////generating the voucher no
                            if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("OTHER_PAY") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PAYE_PAY") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PERS_REQ") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("P_IMPREST_REQ")) {
                                String dealer = null, voucher = null;
                                if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PERS_REQ")) {
                                    java.sql.Statement psGetReason = connectDB.createStatement();
                                    java.sql.ResultSet rstGetReason = psGetReason.executeQuery("select payee,requisition_no,reason from ac_petty_cash_requisition where requisition_no = '" + imprestPaymentCommitTable.getValueAt(0, 1).toString() + "'");
                                    while (rstGetReason.next()) {
                                        voucher = rstGetReason.getString(2);
                                        dealer = rstGetReason.getString(3);
                                    }
                                } else {
                                    java.sql.Statement psGetReason = connectDB.createStatement();
                                    java.sql.ResultSet rstGetReason = psGetReason.executeQuery("select dealer,voucher_no,reason from ac_bills where voucher_no = '" + imprestPaymentCommitTable.getValueAt(0, 1).toString() + "'");
                                    while (rstGetReason.next()) {
                                        voucher = rstGetReason.getString(2);
                                        dealer = rstGetReason.getString(3);
                                    }
                                }
                                System.out.println("dealer == " + dealer);

                                if (dealer.contains("BOARD MEMBER")) {
                                    java.sql.Statement ps1 = connectDB.createStatement();
                                    java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCBOD'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                                    while (rst1.next()) {
                                        board = true;
                                        voucher_no = rst1.getObject(1).toString();
                                    }

                                    java.sql.PreparedStatement pstmtBod = connectDB.prepareStatement("update ac_other_payments set final_voucher_no = ?  WHERE voucher_no = ?");
                                    pstmtBod.setString(1, voucher_no);
                                    pstmtBod.setString(2, imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1).toString());
                                    pstmtBod.executeUpdate();

                                } else if (voucher.contains("PAYE")) {
                                    java.sql.Statement ps1 = connectDB.createStatement();
                                    java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCPAYE'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                                    while (rst1.next()) {
                                        voucher_no = rst1.getObject(1).toString();
                                    }
                                } else if (voucher.contains("P_IMPREST_REQ") || voucher.contains("PERS_REQ")) {
                                    java.sql.Statement ps1 = connectDB.createStatement();
                                    java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCPC'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                                    while (rst1.next()) {
                                        voucher_no = rst1.getObject(1).toString();
                                    }
                                } else {
                                    java.sql.Statement ps1 = connectDB.createStatement();
                                    java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCKIN'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                                    while (rst1.next()) {
                                        voucher_no = rst1.getObject(1).toString();
                                    }
                                }

                            } else if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("REM_PAY")) {
                                java.sql.Statement ps1 = connectDB.createStatement();
                                java.sql.ResultSet rst1 = ps1.executeQuery("select 'VCREM'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                                while (rst1.next()) {
                                    voucher_no = rst1.getObject(1).toString();
                                }
                            } else {
//           java.sql.Statement ps = connectDB.createStatement();
//            java.sql.ResultSet rst = ps.executeQuery("select 'IMP'||nextval('imprest')");
//                   while (rst.next()) {
//                rst.getObject(1).toString();
//
//                voucher_no = rst.getObject(1).toString();
//            }

                                voucher_no = imprestPaymentCommitTable.getValueAt(0, 1).toString();
                            }

                            java.sql.Statement st11 = connectDB.createStatement();
                            java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx1.getSelectedItem() + "'");
                            while (ress1.next()) {
                                vbclass = ress1.getString(1);
                            }

                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                    + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                    + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                    + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                    + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            pstmt2.setObject(1, vbclass);
                            // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                            pstmt2.setObject(2, voteBillTxt1.getSelectedItem());
                            pstmt2.setObject(3, voteheadBillCbx1.getSelectedItem());
                            pstmt2.setObject(4, voteheadBillCbx1.getSelectedItem());
                            pstmt2.setObject(5, voteSubheadBillCbx1.getSelectedItem());
                            pstmt2.setObject(6, "");
                            pstmt2.setObject(7, SupplierTxt2.getText());
                            pstmt2.setObject(8, "Imprest");
                            pstmt2.setObject(9, jTextField21.getText());
                            pstmt2.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt2.setDouble(11, Double.parseDouble(imprestPaymentCommitTable.getValueAt(0, 4).toString().replace(",", "")));
                            pstmt2.setDouble(12, 0.0);
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                            pstmt2.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                            pstmt2.setObject(14, "");
                            pstmt2.setObject(15, "");
                            pstmt2.setObject(16, user);
                            pstmt2.setObject(17, aie_no_bill1.getSelectedItem());
                            pstmt2.setObject(18, "0");
                            pstmt2.setObject(19, comitno);
                            pstmt2.setObject(20, "");
                            pstmt2.setObject(21, financialPeriodCmbxBill1.getSelectedItem());
                            pstmt2.setObject(22, QuarterBillCbx1.getSelectedItem());
                            pstmt2.setObject(23, voucher_no);
                            pstmt2.setObject(24, "Being payment of " + imprestPaymentCommitTable.getValueAt(0, 3));
                            pstmt2.execute();

                            ////end
                            System.out.println("The IMPREST has been committed" + imprestPaymentCommitTable.getValueAt(0, 1).toString().trim() + " -" + SupplierTxt2.getText().toString().trim());
                            // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, orderPaymentCommitTable.getValueAt(i, 3).toString(), commentsTxt.getText(), "EXPENDITURE_VOTEBOOK", "EXPENDITURE_APPROVAL");
                            java.sql.PreparedStatement pstmt931 = connectDB.prepareStatement("UPDATE ac_dashboard SET commited=now(), commited_by=current_user,voucher_no='" + voucher_no + "' where invoice_no ='" + imprestPaymentCommitTable.getValueAt(0, 1).toString().trim() + "' and supplier ilike '%" + SupplierTxt2.getText().toString().trim() + "%'");
                            pstmt931.executeUpdate();

                            if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("OTHER_PAY") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("REM_PAY")) {
                                java.sql.PreparedStatement pstmt10 = connectDB.prepareStatement("UPDATE ac_bills SET voucher_no='" + voucher_no + "', final_voucher_no='" + voucher_no + "', commited=true where voucher_no ='" + imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt2.getText()) + "'");
                                pstmt10.executeUpdate();
                            } else if (imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PERS_REQ") || imprestPaymentCommitTable.getValueAt(0, 1).toString().contains("PETT")) {
                                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_petty_cash_requisition SET commited=true,final_voucher_no='" + voucher_no + "' where requisition_no ='" + imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1) + "' and payee='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt2.getText()) + "'");
                                pstmt9.executeUpdate();
                            } else {
                                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_bills SET final_voucher_no='" + voucher_no + "',commited=true where voucher_no ='" + imprestPaymentCommitTable.getValueAt(imprestPaymentCommitTable.getSelectedRow(), 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt2.getText()) + "'");
                                pstmt9.executeUpdate();
                            }
                            /////decommiting 
                            java.sql.PreparedStatement pstmt23 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                    + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                    + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                    + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                    + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            pstmt23.setObject(1, vbclass);
                            // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                            pstmt23.setObject(2, voteBillTxt1.getSelectedItem());
                            pstmt23.setObject(3, voteheadBillCbx1.getSelectedItem());
                            pstmt23.setObject(4, voteheadBillCbx1.getSelectedItem());
                            pstmt23.setObject(5, voteSubheadBillCbx1.getSelectedItem());
                            pstmt23.setObject(6, "");
                            pstmt23.setObject(7, SupplierTxt2.getText());
                            pstmt23.setObject(8, "Imprest");
                            //olson check
                            pstmt23.setObject(9, jTextField21.getText());
                            pstmt23.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt23.setDouble(11, 0.0);
                            pstmt23.setDouble(12, Double.parseDouble(imprestPaymentCommitTable.getValueAt(0, 4).toString().replace(",", "")));
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                            pstmt23.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                            pstmt23.setObject(14, "");
                            pstmt23.setObject(15, "");
                            pstmt23.setObject(16, user);
                            pstmt23.setObject(17, aie_no_bill1.getSelectedItem());
                            pstmt23.setObject(18, "0");
                            pstmt23.setObject(19, comitno);
                            pstmt23.setObject(20, "");
                            pstmt23.setObject(21, financialPeriodCmbxBill1.getSelectedItem());
                            pstmt23.setObject(22, QuarterBillCbx1.getSelectedItem());
                            pstmt23.setObject(23, voucher_no);
                            pstmt23.setObject(24, "Being payment of " + imprestPaymentCommitTable.getValueAt(0, 3));

                            pstmt23.execute();

                            ////end
                            System.out.println("The imprest has been decommitted");

                            ////generating a voucher
                            /////inserting into ac_reprinting_voucher
                            ////amount allocated to a subhead for the whole year
                            String allocated_amt = null, total_paidE_amt = null;
                            java.sql.Statement stl = connectDB.createStatement();

                            java.sql.ResultSet rsl = stl.executeQuery("select sum(subhead_quartely_amount) from ac_aie_allocation where head='" + voteheadBillCbx1.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx1.getSelectedItem() + "'");
                            while (rsl.next()) {

                                allocated_amt = rsl.getObject(1).toString();

                            }

                            java.sql.Statement st22 = connectDB.createStatement();
                            java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill1.getSelectedItem() + "%' and financial_year='" + financialPeriodCmbxBill1.getSelectedItem() + "' and head='" + voteheadBillCbx1.getSelectedItem() + "' and subhead='" + voteSubheadBillCbx1.getSelectedItem() + "'");
                            while (ress22.next()) {

                                total_paidE_amt = ress22.getString(1);

                            }
                            total_paidE_amt = Double.toString(Double.parseDouble(total_paidE_amt) - Double.parseDouble(jTextField30.getText().replace(",", "")));
                            double objs = Double.parseDouble(allocated_amt) - Double.parseDouble(total_paidE_amt);
                            double balance2 = objs - Double.parseDouble(jTextField30.getText().replace(",", ""));
                            java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, prepared_by, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date,vat_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date,?)");
                            //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                            pstmtss.setObject(1, voucher_no);
                            pstmtss.setObject(2, SupplierTxt2.getText());
                            pstmtss.setObject(3, "-");
                            pstmtss.setObject(4, imprestPaymentCommitTable.getValueAt(0, 3).toString());
                            pstmtss.setObject(5, jTextField21.getText());
                            pstmtss.setObject(6, imprestPaymentCommitTable.getValueAt(0, 7).toString());
                            pstmtss.setDouble(7, Double.parseDouble(jTextField30.getText().replace(",", "")));
                            pstmtss.setDouble(8, Double.parseDouble(jTextField30.getText().replace(",", "")));
                            pstmtss.setObject(9, voteheadBillCbx1.getSelectedItem().toString() + "-" + voteSubheadBillCbx1.getSelectedItem().toString());
                            pstmtss.setDouble(10, Double.parseDouble(allocated_amt.replace(",", "")));
                            pstmtss.setDouble(11, Double.parseDouble(total_paidE_amt.replace(",", "")));
                            pstmtss.setDouble(12, objs);
                            pstmtss.setDouble(13, Double.parseDouble(jTextField30.getText().replace(",", "")));
                            pstmtss.setDouble(14, balance2);
                            if (board == true) {
                                pstmtss.setDouble(15, Double.parseDouble(jTextField30.getText().replace(",", "")) - com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(imprestPaymentCommitTable, 7));
                            } else {
                                pstmtss.setDouble(15, 0);
                            }

                            pstmtss.executeUpdate();

//                      java.sql.Statement stmtss=connectDB.createStatement();
//                      java.sql.ResultSet rds=stmtss.executeQuery("select voucher_no from ac_bills where dealer='"+SupplierTxt2.getText()+"' and  ");
                            // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, orderPaymentCommitTable.getValueAt(i, 3).toString(), commentsTxt.getText(), "EXPENDITURE_VOTEBOOK", "EXPENDITURE_APPROVAL");
                            System.out.println("yeeeeeeeeeeeeeeeeeeeeeeees");

                            // }
                            connectDB.commit();
                            connectDB.setAutoCommit(true);
                            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            //commit_check=false;
                            //cancelbtn1.doClick();
                            imprestApprovalTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and final_voucher_no = ''  AND commited = false ORDER  BY dealer) union (SELECT distinct payee as STAFF,dealer_code as STAFF_NO FROM ac_petty_cash_requisition where cancelled = false AND commited = false ORDER  BY payee)"));
                            ///generating a voucher
                            if (voucher_no.contains("IMP") || voucher_no.contains("PETT_REQ")) {
                                com.afrisoftech.votebook.PettyCashVoucherPdf policy = new com.afrisoftech.votebook.PettyCashVoucherPdf();
                                policy.PettyCashVoucherPdf(connectDB, voucher_no);
                            } else {
                                com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();
                                policy.VoucherMtrhPdf(connectDB, voucher_no);
                            }
                            cancelbtn2.doClick();

                        } catch (java.sql.SQLException sq) {
                            sq.printStackTrace();
                            try {
                                connectDB.rollback();
                            } catch (java.sql.SQLException sql) {
                                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            }
                            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            System.out.println(sq.getMessage());
                        }
                    } else {
                        String str = "<html><center><font color=red> INVALID IMPREST COMMITMENT! CHECK YOUR FIGURES</font></center></html>";
                        JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
                    }

                } else {
                    String str = "<html><center><font color=red> You need to click on the Table to verify The total amount on the Imprest</font></center></html>";
                    JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
                }
            } else {
                String str = "<html><center><font color=red>Choose the AIENO and the Vote Subhead To Specify The votes Affected</font></center></html>";
                JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
            }
        }
    }//GEN-LAST:event_Save2ActionPerformed

    private void cancelbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn2ActionPerformed
        // TODO add your handling code here:

        jTextField1.setText(null);
        division1.setText(null);
        votehead1.setText(null);
        //TenderTxt.setText(null);
        //aie_no_bill1.removeAllItems();
        financialPeriodCmbxBill1.removeAllItems();
        voteBillTxt1.removeAllItems();
        //QuarterBillCbx1.removeAllItems();
        jTextField22.setText(null);
        jTextField23.setText(null);
        jTextField24.setText(null);
        jTextField25.setText(null);
        jTextField26.setText(null);
        jTextField28.setText(null);
        jTextField27.setText(null);
        jTextField29.setText(null);
        voteSubheadBillCbx1.removeAllItems();
        jTextField30.setText(null);

        SupplierTxt2.setText(null);
        jTextField21.setText(null);

        //TenderTxt.setText(null);
        //TenderTxt1.setText(null);
        for (int k = 0; k < imprestPaymentCommitTable.getRowCount(); k++) {
            for (int r = 0; r < imprestPaymentCommitTable.getColumnCount(); r++) {
                imprestPaymentCommitTable.getModel().setValueAt(null, k, r);
            }
        }

        for (int k = 0; k < imprestApprovalTable.getRowCount(); k++) {
            for (int r = 0; r < imprestApprovalTable.getColumnCount(); r++) {
                imprestApprovalTable.getModel().setValueAt(null, k, r);
            }
        }

        VoteSubheadCommitmentsImpTxt.setText(null);
        VoteSubheadPaymentsImpTxt.setText(null);
        imprestApprovalTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and  final_voucher_no = ''  AND commited = false ORDER  BY dealer"));

    }//GEN-LAST:event_cancelbtn2ActionPerformed

    private void exitbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String reason = JOptionPane.showInputDialog(null, "Input Reason for Cancelling ", "Cancel Bill", JOptionPane.OK_CANCEL_OPTION);
        try {
            if (JOptionPane.OK_OPTION == 0) {
                java.sql.PreparedStatement pstmt1240 = connectDB.prepareStatement("UPDATE ac_bills SET cancelled=true,cancel_reason='" + reason + "',cancel_time=now() where dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt2.getText()) + "' and voucher_no='" + imprestPaymentCommitTable.getValueAt(0, 1).toString() + "'");
                pstmt1240.executeUpdate();
                javax.swing.JOptionPane.showMessageDialog(this, "Imprest Cancelled Successfully", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                imprestApprovalTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and final_voucher_no = ''  AND commited = false  ORDER  BY dealer"));
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Double check entries. Cannot Cancel with no Reason", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception u) {
            u.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void ApprovalTbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApprovalTbl3MouseClicked
        ////filling  on the decommitment data   
        for (int k = 0; k < orderPaymentCommitTable3.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable3.getColumnCount(); r++) {
                orderPaymentCommitTable3.getModel().setValueAt(null, k, r);
            }
        }
        jCheckBox2.setSelected(true);
//select aie_no,head,subhead,financial_year,period,allocated_amount from ac_aie_commitment where voucher_no is null and refno='LSO0009' 
        current_row = ApprovalTbl3.getSelectedRow();
        // cancelbtn3.doClick();
        try {
            java.sql.Statement stmtss = connectDB.createStatement();
            //java.sql.ResultSet rsets = stmtss.executeQuery("select distinct supplier,refno,invoice_no,aie_no,head,subhead,financial_year,period,sum(allocated_amount-paid_amount),vote from ac_aie_commitment where refno='"+ApprovalTbl3.getValueAt(current_row,1)+"' group by 1,2,3,4,5,6,7,8,10 ");
            //java.sql.ResultSet rsets = stmtss.executeQuery("select supplier,refno,invoice_no,aie_no,head,subhead,financial_year,period,allocated_amount,vote from ac_aie_commitment where voucher_no is null and refno='"+ApprovalTbl3.getValueAt(current_row,1)+"' ");
            java.sql.ResultSet rsets = stmtss.executeQuery("select distinct supplier,refno,aie_no,head,subhead,financial_year,period,sum(allocated_amount-paid_amount),vote from ac_aie_commitment where refno='" + ApprovalTbl3.getValueAt(current_row, 1) + "' group by 1,2,3,4,5,6,7,9 ");
            int d = 0;

            while (rsets.next()) {
                //jTextField31.setText(rsets.getString(3));

                SupplierTxt3.setText(rsets.getString(1));
                //TenderTxt1.setText(rsets.getString("ordering_store"));
                lpoTxt2.setText(rsets.getString(2));
                financialPeriodCmbxBill2.setText(rsets.getString(6));
                aie_no_bill2.setText(rsets.getString(3));
                voteBillTxt2.setText(rsets.getString(9));
                QuarterBillCbx2.setText(rsets.getString(7));
                voteheadBillCbx2.setText(rsets.getString(4));
                voteSubheadBillCbx2.setText(rsets.getString(5));
                jTextField41.setForeground(Color.red);
                jTextField41.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(rsets.getString(8))));

                //////using the aie_no
                // voteBillTxt1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct vote from ac_aie_allocation where aieno='"+aie_no_bill1.getSelectedItem()+"' order by 1"));
                ///fin yr
                // financialPeriodCmbxBill1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct financial_year from ac_aie_allocation where aieno='"+aie_no_bill1.getSelectedItem()+"'"));
                //voteheadBillCbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct head from ac_aie_allocation where aieno='"+aie_no_bill1.getSelectedItem()+"' order by 1"));
                try {
                    Double aie_amt = 0.0;
                    java.sql.Statement st2 = connectDB.createStatement();
                    java.sql.ResultSet res2 = st2.executeQuery(" SELECT distinct aie_amount,aie_reference_no   FROM ac_aie_allocation where aieno='" + aie_no_bill2.getText() + "' and financial_year='" + financialPeriodCmbxBill2.getText() + "' ");
                    while (res2.next()) {
                        jTextField32.setForeground(Color.red);
                        jTextField32.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res2.getString(1))));
                        aie_amt = res2.getDouble(1);

                    }

                    try {
                        //////getting the total balance
                        String total_commited_amt = null;
                        java.sql.Statement st22 = connectDB.createStatement();
                        java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill2.getText() + "%' and financial_year='" + financialPeriodCmbxBill2.getText() + "'");
                        while (ress22.next()) {

                            total_commited_amt = ress22.getString(1);
                            if (total_commited_amt != null) {
                                jTextField33.setForeground(Color.red);
                                jTextField38.setForeground(Color.red);
                                jTextField33.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                                jTextField38.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                            } else {
                                total_commited_amt = "0.0";
                                jTextField33.setForeground(Color.red);
                                jTextField38.setForeground(Color.red);
                                jTextField33.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_commited_amt)));
                                jTextField38.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(aie_amt - Double.parseDouble(total_commited_amt)));
                            }
                        }

                        ///getting the total payments done
                        String total_paid_amt = null;
                        java.sql.Statement st23 = connectDB.createStatement();
                        java.sql.ResultSet ress23 = st23.executeQuery("SELECT sum(paid_amount)  FROM ac_aie_commitment where aie_no ilike '" + aie_no_bill2.getText() + "%' and financial_year='" + financialPeriodCmbxBill2.getText() + "'");
                        while (ress23.next()) {

                            total_paid_amt = ress23.getString(1);
                            if (total_paid_amt != null) {

                                jTextField34.setForeground(Color.red);
                                jTextField34.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                            } else {
                                total_paid_amt = "0.0";
                                jTextField34.setForeground(Color.red);

                                jTextField34.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(total_paid_amt)));

                            }
                        }
                    } catch (Exception hsd) {
                        hsd.printStackTrace();
                    }

                    ///////getting the votehead balances
                    if (!QuarterBillCbx2.getText().equals("-")) {
                        // voteSubheadBillCbx2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct subhead from ac_aie_allocation where aieno='"+aie_no_bill1.getSelectedItem()+"' and head='"+voteheadBillCbx1.getSelectedItem()+"' order by 1"));
                        // voteSubheadBillCbx2.setEnabled(true);

                        try {
                            int num1 = 0;
                            Double head_amt = 0.0;
                            Double subhead_quarterly_total = 0.0;
                            java.sql.Statement st1 = connectDB.createStatement();
                            java.sql.ResultSet ress = st1.executeQuery("SELECT count(*) as num FROM ac_aie_allocation where aieno ilike '" + aie_no_bill2.getText() + "%' and financial_year='" + financialPeriodCmbxBill2.getText() + "' and  head='" + voteheadBillCbx2.getText() + "'");
                            while (ress.next()) {
                                num1 = ress.getInt(1);
                                // head_amt=ress.getDouble(2);
                            }
                            String head_amt_str = null;
                            java.sql.Statement st6 = connectDB.createStatement();
                            java.sql.ResultSet ress6 = st6.executeQuery(" SELECT head_amount  FROM ac_aie_allocation where aieno ilike '" + aie_no_bill2.getText() + "%' and financial_year='" + financialPeriodCmbxBill2.getText() + "' and  head='" + voteheadBillCbx2.getText() + "' group by head_amount");
                            while (ress6.next()) {

                                head_amt_str = ress6.getString(1);
                                jTextField35.setForeground(Color.red);
                                jTextField35.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(head_amt_str)));
                            }

                        } catch (Exception edf) {
                            edf.printStackTrace();

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "You must select the Quarter you are in", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);

                    }
                    ///end of vote head balances
                } catch (Exception eds) {
                    eds.printStackTrace();

                }

                ///end 
            }

            /////getting the vote subhead balances
            try {
                double subhead_quarterly_total = 0.0;
                java.sql.Statement st2 = connectDB.createStatement();
                java.sql.ResultSet res2 = st2.executeQuery(" SELECT  distinct subhead_quartely_amount    FROM ac_aie_allocation where aieno='" + aie_no_bill2.getText() + "' and financial_year='" + financialPeriodCmbxBill2.getText() + "' and head='" + voteheadBillCbx2.getText() + "' and period='" + QuarterBillCbx2.getText() + "' and subhead='" + voteSubheadBillCbx2.getText() + "' ");
                while (res2.next()) {
                    subhead_quarterly_total = res2.getDouble(1);
                    //fin_yr=res2.getString(2);
                    jTextField36.setForeground(Color.red);
                    jTextField36.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total));

                }
                ///getting the balances

                //subhead balance
                double subhead_com_total = 0.0;
                java.sql.Statement st7 = connectDB.createStatement();
                java.sql.ResultSet res7 = st7.executeQuery(" SELECT  distinct sum(allocated_amount)   FROM ac_aie_commitment where aie_no='" + aie_no_bill2.getText() + "' and financial_year='" + financialPeriodCmbxBill2.getText() + "' and head='" + voteheadBillCbx2.getText() + "' and period='" + QuarterBillCbx2.getText() + "' and subhead='" + voteSubheadBillCbx2.getText() + "' ");
                while (res7.next()) {
                    if (res7.getString(1) != null) {
                        subhead_com_total = res7.getDouble(1);
                        //fin_yr=res2.getString(2);
//             jTextField39.setForeground(Color.red);
//             jTextField39.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total-subhead_com_total));
                    } else {
                        subhead_com_total = 0.0;
//               jTextField39.setForeground(Color.red);
//             jTextField39.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total-subhead_com_total));
                    }
                }

                /////head balance
                //jTextField37.setForeground(Color.red);
                // jTextField37.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField35.getText().replace(",",""))-subhead_com_total));
            } catch (Exception esd) {
                esd.printStackTrace();

            }

            ///end of getting  the subhead balances
        } catch (Exception esd) {
            esd.printStackTrace();

        }

        ////populating the orders table
        try {

            connectDB.setAutoCommit(false);

            java.sql.Statement stmtss = connectDB.createStatement();
            //select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false where 
            java.sql.ResultSet rsets = stmtss.executeQuery("SELECT * FROM ac_accounts_payable WHERE invoice_no not ilike 'RT%' AND order_no ='" + ApprovalTbl3.getValueAt(current_row, 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApprovalTbl3.getValueAt(current_row, 0).toString()) + "' and (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and committed=false");
            int d = 0;

            java.sql.Statement stmtss1 = connectDB.createStatement();

            java.sql.ResultSet rsets1 = stmtss1.executeQuery("SELECT * FROM ac_accounts_payable WHERE order_no ='" + ApprovalTbl3.getValueAt(current_row, 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(ApprovalTbl3.getValueAt(current_row, 0).toString()) + "' and (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and committed=false order by credit asc");
            //rsets1 = stmtss1.executeQuery("SELECT * FROM ac_accounts_payable WHERE dealer='"+ApproveBillTable.getValueAt(current_row,0)+"' and transaction_type='Stock Delivery' and approved=false and committed=false order by credit");
            retention = "";
            witholding = "";
            vat = "";
            while (rsets1.next()) {
                if (retention == "") {
                    retention = rsets1.getString("discount");
                }

                if (witholding == "") {
                    witholding = rsets1.getString("custom_duty");
                }
                if (vat == "") {
                    vat = rsets1.getString("vat");
                }
            }

            while (rsets.next()) {
//                jTextField11.setText(rsets.getString("invoice_no"));
//                
//                SupplierTxt1.setText(rsets.getString("dealer"));
//                //TenderTxt1.setText(rsets.getString("ordering_store"));
//                 lpoTxt1.setText(rsets.getString("order_no"));
//                 
                ///table
                orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("invoice_date"), d, 0);
                orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("invoice_no"), d, 1);
                orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("item"), d, 2);
                orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("user_name"), d, 3);
                orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("reason"), d, 4);
                orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("vat"), d, 5);
                //  orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("credit"),d,6);

                if (Double.parseDouble(rsets.getString("credit")) == 0) {
                    double y = 0 - rsets.getDouble("debit");
                    System.out.println("here i am " + y);
                    orderPaymentCommitTable3.getModel().setValueAt(String.valueOf(y), d, 6);
                } else {
                    orderPaymentCommitTable3.getModel().setValueAt(rsets.getString("credit"), d, 6);
                }

                d++;
            }

            //getting names
            java.sql.Statement st1192 = connectDB.createStatement();
            java.sql.ResultSet ress192 = st1192.executeQuery("select headname from heads where head = '" + voteheadBillCbx2.getText() + "'");
            if (ress192.next()) {

                division3.setText(ress192.getString(1));

            }
            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select subheadname from subheads where subhead = '" + voteSubheadBillCbx2.getText() + "'");
            if (ress19.next()) {

                votehead3.setText(ress19.getString(1));

            }

            connectDB.commit();
            connectDB.setAutoCommit(true);

            // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT   P.requisition_no as \"PR N0:\", P.type_of_pr as \"PR Type\" FROM st_receive_requisation as P,st_authorizations as S WHERE  P.requisition_no ILIKE '%PRQ%' and P.approval_status=TRUE and P.requisition_no=S.requisition_no and S.scm_forwading=TRUE and S.cso_forwading=FALSE GROUP BY P.requisition_no,P.type_of_pr"));
            ////clearing the products table
//
            ////clear the JTextPane
        } catch (SQLException ex) {
            Logger.getLogger(Lpo_LsoCommitmentintfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        ///end
        lpoTxt2.setText(ApprovalTbl3.getValueAt(ApprovalTbl3.getSelectedRow(), 1).toString());
        SupplierTxt3.setText(ApprovalTbl3.getValueAt(ApprovalTbl3.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_ApprovalTbl3MouseClicked

    private void Save3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save3ActionPerformed
        if (jCheckBox3.isSelected() == true) {
            try {
                java.util.Calendar calendar = java.util.Calendar.getInstance();

                long dateNow = calendar.getTimeInMillis();

                java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                System.out.println(datenowSql1.toString());

                java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                System.out.println(datenowSql.toString());

                String subvote = null;
                String vbclass = null;
                String user = null;
                String head = null;
                String subhead = null;
                String subitem = null;
                String aie_no = null;
                String vote = null;

                int comitno = 0;

                connectDB.setAutoCommit(false);

                java.sql.Statement st = connectDB.createStatement();
                java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
                while (rs.next()) {

                    user = rs.getObject(1).toString();
                    comitno = rs.getInt(2);

                }

                /////generating the voucher no
                String voucher_no = null;
//            java.sql.Statement ps = connectDB.createStatement();
//            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
//            while (rst.next()) {
//                rst.getObject(1).toString();
//
//                voucher_no = rst.getObject(1).toString();
//            }
                java.sql.Statement ps1 = connectDB.createStatement();
                java.sql.ResultSet rst1 = ps1.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                while (rst1.next()) {
                    voucher_no = rst1.getObject(1).toString();
                }

                java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by,witholding_amount,retention_amount,vat_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?,?,?,?)");
                //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                pstmtss.setObject(1, voucher_no);
                pstmtss.setObject(2, SupplierTxt3.getText());
                pstmtss.setObject(3, "-");
//                             if(lpoTxt1.getText().contains("DIR_PUR")){
//                                 pstmtss.setObject(4, "Being Payment to  "+SupplierTxt1.getText()+" for "+orderPaymentCommitTable1.getValueAt(0, 4).toString()+" as per GRN,Acceptance form and Invoices Attached");
//                                    pstmtss.setObject(5,"Direct Purchase");
//                             }else{
                pstmtss.setObject(4, "Being Payment to  " + SupplierTxt3.getText() + "\n for the supplies as per the LPO,\n GRN and Inspection certificate attached");
                pstmtss.setObject(5, lpoTxt2.getText());
                // }
                pstmtss.setObject(6, orderPaymentCommitTable3.getValueAt(0, 1));
                if (Double.parseDouble(retention) != 0 || Double.parseDouble(vat) != 0 || Double.parseDouble(witholding) != 0) {
                    pstmtss.setDouble(7, Double.parseDouble(jTextField46.getText().replace(",", "")));
                    pstmtss.setDouble(8, Double.parseDouble(jTextField46.getText().replace(",", "")));
                    pstmtss.setDouble(13, Double.parseDouble(jTextField46.getText().replace(",", "")));
                } else {
                    pstmtss.setDouble(7, Double.parseDouble(jTextField40.getText().replace(",", "")));
                    pstmtss.setDouble(8, Double.parseDouble(jTextField40.getText().replace(",", "")));
                    pstmtss.setDouble(13, Double.parseDouble(jTextField40.getText().replace(",", "")));
                }

                pstmtss.setObject(9, "-");
                pstmtss.setDouble(10, 0);
                pstmtss.setDouble(11, 0);
                pstmtss.setDouble(12, 0);

                pstmtss.setDouble(14, 0);
                pstmtss.setObject(15, orderPaymentCommitTable3.getValueAt(0, 3));
                pstmtss.setDouble(16, Double.parseDouble(witholding));
                pstmtss.setDouble(17, Double.parseDouble(retention));
                pstmtss.setDouble(18, Double.parseDouble(vat));
                // pstmtss.setDouble(17,orderPaymentCommitTable3.getValueAt(0,3));

                pstmtss.executeUpdate();
                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_accounts_payable SET committed=true ,finance_head=true,finance_head_officer=current_user,finance_head_time=now(), accountant = true, accountant_officer=current_user,accountant_time=now(), voucher_no='" + voucher_no + "' where committed=false and invoice_no ='" + orderPaymentCommitTable3.getValueAt(0, 1) + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt3.getText()) + "' and (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') ");
                pstmt9.executeUpdate();

                Boolean inTracker = false;
                java.sql.Statement stmtf2 = connectDB.createStatement();
                java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt3.getText()) + "' and invoice_no='" + orderPaymentCommitTable3.getValueAt(0, 1) + "'");
                if (rsetf2.getFetchSize() > 0) {
                    inTracker = true;
                }
                //start
                String rectifyDate = "1900-01-01 00:00:00.000";
                java.util.Date realDate = null;
                java.sql.Statement stmtr = connectDB.createStatement();
                java.sql.ResultSet rsetr = stmtr.executeQuery("select '" + rectifyDate + "'::date");
                while (rsetr.next()) {
                    realDate = rsetr.getDate(1);
                }
                if (inTracker == true) {
                    java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET finance_head=now(),finance_head_officer=current_user,accountant=now(), accountant_name=current_user, commited=now(), commited_by=current_user,voucher_no='" + voucher_no + "' where invoice_no ='" + orderPaymentCommitTable3.getValueAt(0, 1) + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt3.getText()) + "'");
                    pstmt91.executeUpdate();
                } else {
                    java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard (supplier,invoice_no,creditor_created,creditor_created_by,voucher_no,"
                            + "                                                                                 commited,commited_by, accountant,accountant_name,finance_head ,finance_head_officer) "
                            + "values(?,?,?,?,?,now(),current_user,now(),current_user,now(),current_user)");
                    pstmt7.setString(1, SupplierTxt3.getText().toString());
                    pstmt7.setObject(2, orderPaymentCommitTable3.getValueAt(0, 1));
                    pstmt7.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                    pstmt7.setObject(4, "");
                    pstmt7.setObject(5, voucher_no);

                    pstmt7.executeUpdate();
                }

                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                //commit_check=false;
                cancelbtn3.doClick();
                ApprovalTbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,order_no from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no not like '%DIR_PU%' and committed=false order by order_no"));
                // ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) union select distinct dealer,'DIR_PUR' from ac_accounts_payable where transaction_type='Stock Delivery' and approved=false and order_no ilike '%DIR_PU%' and committed=false order by dealer"));

                ///generating a voucher
                com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();

                policy.VoucherMtrhPdf(connectDB, voucher_no);
                cancelbtn1.doClick();
            } catch (Exception r) {
                r.printStackTrace();
            }

        } else {

            if (jTextField40.getText().toString().replace(",", "").length() > 0) {
                if (Double.parseDouble(jTextField41.getText().toString().replace(",", "")) >= Double.parseDouble(jTextField40.getText().toString().replace(",", "")) && Double.parseDouble(jTextField41.getText().toString().replace(",", "")) >= Double.parseDouble(jTextField46.getText().toString().replace(",", ""))) {

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String subvote = null;
                    String vbclass = null;
                    String user = null;
                    String head = null;
                    String subhead = null;
                    String subitem = null;
                    String aie_no = null;
                    String vote = null;

                    int comitno = 0;
                    try {
                        connectDB.setAutoCommit(false);
//            java.sql.Statement stm121 = connectDB.createStatement();
//            java.sql.ResultSet rse121 = stm121.executeQuery("SELECT subvote FROM heads WHERE  vote ='" + jComboBox1.getSelectedItem() + "' AND head = '" + jComboBox2.getSelectedItem() + "'");
//            while (rse121.next()) {
//
//                subvote = rse121.getObject(1).toString();
//            }
//
//            java.sql.Statement stm = connectDB.createStatement();
//            java.sql.ResultSet rse = stm.executeQuery("SELECT class FROM vb_class WHERE  classname ILIKE '" + jComboBox4.getSelectedItem() + "'");
//            while (rse.next()) {
//
//                vbclass = rse.getObject(1).toString();
//            }

                        java.sql.Statement st = connectDB.createStatement();
                        java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
                        while (rs.next()) {

                            user = rs.getObject(1).toString();
                            comitno = rs.getInt(2);

                        }

                        /////generating the voucher no
                        String voucher_no = null;
//            java.sql.Statement ps = connectDB.createStatement();
//            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
//            while (rst.next()) {
//                rst.getObject(1).toString();
//
//                voucher_no = rst.getObject(1).toString();
//            }
                        java.sql.Statement ps1 = connectDB.createStatement();
                        java.sql.ResultSet rst1 = ps1.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq')::text,7,0::text)");
                        while (rst1.next()) {
                            voucher_no = rst1.getObject(1).toString();
                        }

                        java.sql.Statement stm = connectDB.createStatement();
                        java.sql.ResultSet rse = stm.executeQuery("select distinct v_class from ac_aie_commitment where refno='" + lpoTxt2.getText() + "'");
                        while (rse.next()) {

                            vbclass = rse.getObject(1).toString();

//                java.sql.Statement stm = connectDB.createStatement();
//            java.sql.ResultSet rse = stm.executeQuery("select class,aieno,vote,subvote,head,subhead,subitem from ac_aie_allocation where subhead='"+orderPaymentCommitTable.getValueAt(i, 9).toString()+"' and subitem='"+orderPaymentCommitTable.getValueAt(i, 10).toString()+"' and period='"+jComboBox1.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"'");
//            while (rse.next()) {
////                aie_no = rse.getObject(2).toString();
////                vote = rse.getObject(3).toString();
////                 subvote = rse.getObject(4).toString();
////                head = rse.getObject(5).toString();
////                subhead = rse.getObject(6).toString();
////                subitem = rse.getObject(7).toString();
//               
//                
                        }
                        /////decommiting 
                        java.sql.PreparedStatement pstmt23 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                        pstmt23.setObject(1, vbclass);
                        // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                        pstmt23.setObject(2, voteBillTxt2.getText());
                        pstmt23.setObject(3, voteheadBillCbx2.getText());
                        pstmt23.setObject(4, voteheadBillCbx2.getText());
                        pstmt23.setObject(5, voteSubheadBillCbx2.getText());
                        pstmt23.setObject(6, "");
                        pstmt23.setObject(7, SupplierTxt3.getText());
                        pstmt23.setObject(8, orderPaymentCommitTable3.getValueAt(0, 2));
                        pstmt23.setObject(9, lpoTxt2.getText());
                        pstmt23.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmt23.setDouble(11, 0.0);
                        pstmt23.setDouble(12, Double.parseDouble(jTextField46.getText().replace(",", "")));
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                        pstmt23.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                        pstmt23.setObject(14, "");
                        pstmt23.setObject(15, "");
                        pstmt23.setObject(16, user);
                        pstmt23.setObject(17, aie_no_bill2.getText());
                        pstmt23.setObject(18, "0");
                        pstmt23.setObject(19, comitno);
                        pstmt23.setObject(20, orderPaymentCommitTable3.getValueAt(0, 1));
                        pstmt23.setObject(21, financialPeriodCmbxBill2.getText());
                        pstmt23.setObject(22, QuarterBillCbx2.getText());
                        pstmt23.setObject(23, voucher_no);
                        pstmt23.setObject(24, "Being Payment to  " + SupplierTxt3.getText());
                        pstmt23.execute();
                        if (jCheckBox2.isSelected() == true) {
                            if (Double.parseDouble(jTextField41.getText().replace(",", "")) > Double.parseDouble(jTextField46.getText().replace(",", ""))) {
                                Double diff = Double.parseDouble(jTextField41.getText().replace(",", "")) - Double.parseDouble(jTextField46.getText().replace(",", ""));
                                java.sql.PreparedStatement pstmt237 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                                        + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                                        + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                                        + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                                        + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                pstmt237.setObject(1, vbclass);
                                // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                                pstmt237.setObject(2, voteBillTxt2.getText());
                                pstmt237.setObject(3, voteheadBillCbx2.getText());
                                pstmt237.setObject(4, voteheadBillCbx2.getText());
                                pstmt237.setObject(5, voteSubheadBillCbx2.getText());
                                pstmt237.setObject(6, "");
                                pstmt237.setObject(7, SupplierTxt3.getText());
                                pstmt237.setObject(8, "LPO Credited");
                                pstmt237.setObject(9, lpoTxt2.getText());
                                pstmt237.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                pstmt237.setDouble(11, -diff);
                                pstmt237.setDouble(12, 0.0);
                                pstmt237.setObject(13, "S");
                                pstmt237.setObject(14, "");
                                pstmt237.setObject(15, "");
                                pstmt237.setObject(16, user);
                                pstmt237.setObject(17, aie_no_bill2.getText());
                                pstmt237.setObject(18, "0");
                                pstmt237.setObject(19, comitno);
                                pstmt237.setObject(20, orderPaymentCommitTable3.getValueAt(0, 1));
                                pstmt237.setObject(21, financialPeriodCmbxBill2.getText());
                                pstmt237.setObject(22, QuarterBillCbx2.getText());
                                pstmt237.setObject(23, "");
                                pstmt237.setObject(24, "Goods not supplies" + SupplierTxt3.getText());
                                pstmt237.execute();

                            }
                        }
                        ////end

                        for (int i = 0; i < orderPaymentCommitTable3.getModel().getRowCount(); i++) {
                            if (orderPaymentCommitTable3.getModel().getValueAt(i, 1) != null) {
                                java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("UPDATE ac_accounts_payable SET committed=true ,voucher_no='" + voucher_no + "' where committed=false and order_no ='" + lpoTxt2.getText() + "' and dealer='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt3.getText()) + "' and (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and invoice_no ='" + orderPaymentCommitTable3.getModel().getValueAt(i, 1) + "'");
                                pstmt9.executeUpdate();

                                if (!orderPaymentCommitTable3.getModel().getValueAt(i, 1).toString().contains("FDBT")) {
                                    if (Double.parseDouble(orderPaymentCommitTable3.getValueAt(i, 6).toString()) > 0) {
                                        Boolean inTracker = false;
                                        java.sql.Statement stmtf2 = connectDB.createStatement();
                                        java.sql.ResultSet rsetf2 = stmtf2.executeQuery("select * from ac_dashboard where supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt3.getText()) + "' and invoice_no='" + orderPaymentCommitTable3.getValueAt(0, 1) + "'");
                                        if (rsetf2.getFetchSize() > 0) {
                                            inTracker = true;
                                        }
                                        //start
                                        String rectifyDate = "1900-01-01 00:00:00.000";
                                        java.util.Date realDate = null;
                                        java.sql.Statement stmtr = connectDB.createStatement();
                                        java.sql.ResultSet rsetr = stmtr.executeQuery("select '" + rectifyDate + "'::date");
                                        while (rsetr.next()) {
                                            realDate = rsetr.getDate(1);
                                        }
                                        if (inTracker == true) {
                                            java.sql.PreparedStatement pstmt91 = connectDB.prepareStatement("UPDATE ac_dashboard SET commited=now(), commited_by=current_user,voucher_no='" + voucher_no + "' where invoice_no ='" + orderPaymentCommitTable3.getModel().getValueAt(i, 1) + "' and supplier='" + com.afrisoftech.lib.VoteBook.RemoveAppostroph(SupplierTxt3.getText()) + "'");
                                            pstmt91.executeUpdate();
                                        } else {
                                            java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard (supplier,invoice_no,creditor_created,creditor_created_by,voucher_no,"
                                                    + "                                                                                 commited,commited_by) "
                                                    + "values(?,?,?,?,?,now(),current_user)");
                                            pstmt7.setString(1, SupplierTxt3.getText().toString());
                                            pstmt7.setObject(2, orderPaymentCommitTable3.getValueAt(0, 1));
                                            pstmt7.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(realDate));
                                            pstmt7.setObject(4, "");
                                            pstmt7.setObject(5, voucher_no);

                                            pstmt7.executeUpdate();
                                        }

                                    }
                                }
                            }
                        }
                        System.out.println("The LPO has been decommitted");
                        // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, orderPaymentCommitTable.getValueAt(i, 3).toString(), commentsTxt.getText(), "EXPENDITURE_VOTEBOOK", "EXPENDITURE_APPROVAL");

                        ////generating a voucher
                        /////inserting into ac_reprinting_voucher
                        ////amount allocated to a subhead for the whole year
                        String allocated_amt = null, total_paidE_amt = null;
                        java.sql.Statement stl = connectDB.createStatement();

                        java.sql.ResultSet rsl = stl.executeQuery("select sum(subhead_quartely_amount) from ac_aie_allocation where head='" + voteheadBillCbx2.getText().toString() + "' and subhead='" + voteSubheadBillCbx2.getText().toString() + "'");
                        while (rsl.next()) {
                            allocated_amt = rsl.getObject(1).toString();
                        }

                        java.sql.Statement st22 = connectDB.createStatement();
                        java.sql.ResultSet ress22 = st22.executeQuery("SELECT sum(allocated_amount)  FROM ac_aie_commitment where aie_no= '" + aie_no_bill2.getText() + "' and financial_year='" + financialPeriodCmbxBill2.getText() + "' and head='" + voteheadBillCbx2.getText().toString() + "' and subhead='" + voteSubheadBillCbx2.getText().toString() + "'");
                        while (ress22.next()) {

                            total_paidE_amt = ress22.getString(1);
                            System.out.println("ni hapaa " + total_paidE_amt);
                        }
                        // total_paidE_amt=total_paidE_amt-Double.parseDouble(jTextField46.getText().replace(",", ""));
                        Boolean t = true;
                        total_paidE_amt = Double.toString(Double.parseDouble(total_paidE_amt) - Double.parseDouble(jTextField46.getText().replace(",", "")));
                        double objs = Double.parseDouble(allocated_amt) - Double.parseDouble(total_paidE_amt);
                        double balance2 = objs - Double.parseDouble(jTextField46.getText().replace(",", "")), neq = 0.0;
//                       java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, prepared_by, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date) VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");
//                    //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
//                            pstmtss.setObject(1,voucher_no);
//                             pstmtss.setObject(2,SupplierTxt3.getText());
//                             pstmtss.setObject(3, "-");
//                             pstmtss.setObject(4, "Being Payment to  "+SupplierTxt3.getText());
//                             pstmtss.setObject(5,lpoTxt2.getText());
//                             pstmtss.setObject(6,orderPaymentCommitTable3.getValueAt(0,1));
//                             pstmtss.setDouble(7,Double.parseDouble(jTextField40.getText().replace(",","")));
//                             pstmtss.setDouble(8,Double.parseDouble(jTextField40.getText().replace(",","")));
//                             pstmtss.setObject(9, voteheadBillCbx2.getSelectedItem().toString()+"-"+voteSubheadBillCbx2.getSelectedItem().toString());
//                             pstmtss.setDouble(10,Double.parseDouble(allocated_amt.replace(",", "")));
//                             pstmtss.setDouble(11,Double.parseDouble(total_paidE_amt.replace(",", "")));
//                             pstmtss.setDouble(12,objs);
//                             pstmtss.setDouble(13,Double.parseDouble(jTextField40.getText().replace(",","")));
//                             pstmtss.setDouble(14,balance2);
//                   
//                            pstmtss.executeUpdate();   
                        //ac reprint
                        for (int i = 0; i < orderPaymentCommitTable3.getModel().getRowCount(); i++) {
                            if (orderPaymentCommitTable3.getModel().getValueAt(i, 1) != null) {
//                       if(Double.parseDouble(orderPaymentCommitTable3.getValueAt(i,6).toString())<0){
//                            t=false;
//                                 java.sql.PreparedStatement pstmtss1= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date,prepared_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?)");
//                    //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
//                            pstmtss1.setObject(1,voucher_no);
//                             pstmtss1.setObject(2,SupplierTxt3.getText());
//                             pstmtss1.setObject(3, "-");
//                             pstmtss1.setObject(4, "Debit Note");
//                             pstmtss1.setObject(5,lpoTxt2.getText());
//                             pstmtss1.setObject(6,orderPaymentCommitTable3.getValueAt(0,1));
//                             pstmtss1.setDouble(7,0.00);
//                             pstmtss1.setDouble(8,0.00);
//                             pstmtss1.setObject(9, voteheadBillCbx2.getText().toString()+"-"+voteSubheadBillCbx2.getText().toString());
//                             pstmtss1.setDouble(10,Double.parseDouble(allocated_amt.replace(",", "")));
//                             pstmtss1.setDouble(11,Double.parseDouble(total_paidE_amt.replace(",", "")));
//                             pstmtss1.setDouble(12,objs);
//                             pstmtss1.setDouble(13,Double.parseDouble(orderPaymentCommitTable3.getValueAt(i,6).toString()));
//                             pstmtss1.setDouble(14,balance2);
//                             pstmtss1.setObject(15,orderPaymentCommitTable3.getValueAt(i,3));
//                             neq=Double.parseDouble(orderPaymentCommitTable3.getValueAt(i,6).toString());
//                            pstmtss1.executeUpdate(); 
//                             }
                            }
                        }
                        //  double amount=0.0;
//                            if(t==true){ 
                        //  amount=Double.parseDouble(jTextField40.getText().replace(",",""));
//                            }
//                            else {amount=Double.parseDouble(jTextField40.getText().replace(",",""))-neq;}
                        java.sql.PreparedStatement pstmtss1 = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by,witholding_amount,retention_amount,vat_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?,?,?,?)");
                        //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
                        pstmtss1.setObject(1, voucher_no);
                        pstmtss1.setObject(2, SupplierTxt3.getText());
                        pstmtss1.setObject(3, "-");
                        pstmtss1.setObject(4, "Being Payment to  " + SupplierTxt3.getText() + " for \n" + orderPaymentCommitTable3.getValueAt(0, 4).toString() + " as per GRN,Acceptance form and Invoices Attached");
                        String lpos = "";
                        int k = 0;
                        java.sql.Statement st11 = connectDB.createStatement();
                        java.sql.ResultSet ress1 = st11.executeQuery("select invoice_no from ac_aie_commitment where refno = '" + lpoTxt2.getText() + "' and reftype='SUPPLIMENTARY LPO' and invoice_no ilike '%SUPLPO%'");
                        while (ress1.next()) {
                            k++;
                            lpos = lpos + " / " + ress1.getString(1);
                        }
                        if (k > 0) {
                            pstmtss1.setObject(5, lpoTxt2.getText() + " / " + lpos);
                        } else if (k == 0) {
                            pstmtss1.setObject(5, lpoTxt2.getText());
                        }

                        pstmtss1.setObject(6, orderPaymentCommitTable3.getValueAt(0, 1));
                        if (Double.parseDouble(retention) != 0 || Double.parseDouble(vat) != 0 || Double.parseDouble(witholding) != 0) {
                            pstmtss1.setDouble(7, Double.parseDouble(jTextField46.getText().replace(",", "")));
                            pstmtss1.setDouble(8, Double.parseDouble(jTextField46.getText().replace(",", "")));
                            pstmtss1.setDouble(13, Double.parseDouble(jTextField46.getText().replace(",", "")));
                        } else {
                            pstmtss1.setDouble(7, Double.parseDouble(jTextField40.getText().replace(",", "")));
                            pstmtss1.setDouble(8, Double.parseDouble(jTextField40.getText().replace(",", "")));
                            pstmtss1.setDouble(13, Double.parseDouble(jTextField40.getText().replace(",", "")));
                        }
                        //  pstmtss1.setDouble(7,amount);
                        // pstmtss1.setDouble(8,amount);
                        pstmtss1.setObject(9, voteheadBillCbx2.getText().toString() + "-" + voteSubheadBillCbx2.getText().toString());
                        pstmtss1.setDouble(10, Double.parseDouble(allocated_amt.replace(",", "")));
                        pstmtss1.setDouble(11, Double.parseDouble(total_paidE_amt.replace(",", "")));
                        pstmtss1.setDouble(12, objs);
                        // pstmtss1.setDouble(13,amount);
                        pstmtss1.setDouble(14, balance2);
                        pstmtss1.setObject(15, orderPaymentCommitTable3.getValueAt(0, 3));
                        pstmtss1.setDouble(16, Double.parseDouble(witholding));
                        pstmtss1.setDouble(17, Double.parseDouble(retention));
                        pstmtss1.setDouble(18, Double.parseDouble(vat));
                        pstmtss1.executeUpdate();

                        java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("update st_orders set received ='true' where order_no ='" + lpoTxt2.getText() + "'");
                        pstmt33.executeUpdate();

                        java.sql.PreparedStatement pstmt9 = connectDB.prepareStatement("update st_stock_cardex set voucher_no='" + voucher_no + "' where order_no='" + lpoTxt2.getText() + "'");
                        pstmt9.executeUpdate();

                        connectDB.commit();
                        connectDB.setAutoCommit(true);
                        javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        //commit_check=false;
                        //cancelbtn.doClick();
                        // ApprovalTbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,order_no from ac_accounts_payable where transaction_type='Stock Delivery' and approved=false and committed=false"));

                        ///generating a voucher
                        com.afrisoftech.votebook.BillVoucherMtrhPdfs policy = new com.afrisoftech.votebook.BillVoucherMtrhPdfs();

                        policy.VoucherMtrhPdf(connectDB, voucher_no);

                        cancelbtn3.doClick();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        try {
                            connectDB.rollback();
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        System.out.println(sq.getMessage());
                    }
                } else {
                    String str = "<html><center><font color=red> You need to click on the Table to verify The total amount on the LPO/LSO to be Decommitted</font></center></html>";
                    JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
                }
            } else {
                String str = "<html><center><font color=red> You need to click on the Table to verify The total amount on the LPO/LSO to be Decommitted</font></center></html>";
                JOptionPane.showMessageDialog(null, str, "ERROR MESSAGE", 1, new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Recycle Bin Full 1.png")));
            }

        }
    }//GEN-LAST:event_Save3ActionPerformed

    private void cancelbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn3ActionPerformed
        for (int k = 0; k < orderPaymentCommitTable3.getRowCount(); k++) {
            for (int r = 0; r < orderPaymentCommitTable3.getColumnCount(); r++) {
                orderPaymentCommitTable3.getModel().setValueAt(null, k, r);
            }
        }
        jCheckBox2.setSelected(false);
        jTextField40.setText(null);
        votehead3.setText(null);
        division3.setText(null);
        SupplierTxt3.setText(null);
        lpoTxt2.setText(null);
        aie_no_bill2.setText(null);
        TenderTxt.setText(null);
        jComboBox5.removeAllItems();
        financialPeriodCmbxBill2.setText(null);
        jTextField32.setText(null);
        jTextField33.setText(null);
        jTextField34.setText(null);
        jTextField35.setText(null);
        jTextField36.setText(null);
        jTextField41.setText(null);
        jTextField38.setText(null);
        jTextField46.setText(null);
        //jTextField39.setText(null);
        // aie_no_bill2.removeAllItems();
        voteBillTxt2.setText(null);
        QuarterBillCbx2.setText(null);
        voteheadBillCbx2.setText(null);
        voteSubheadBillCbx2.setText(null);

        for (int k = 0; k < ApprovalTbl3.getRowCount(); k++) {
            for (int r = 0; r < ApprovalTbl3.getColumnCount(); r++) {
                ApprovalTbl3.getModel().setValueAt(null, k, r);
            }
        }

        ApprovalTbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,order_no from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no not like '%DIR_PU%' and committed=false and invoice_no not ilike 'Ret:%' and invoice_no not ilike 'VAT:%' and invoice_no not ilike 'WT:%' order by order_no"));


    }//GEN-LAST:event_cancelbtn3ActionPerformed

    private void exitbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void orderPaymentCommitTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderPaymentCommitTable3MouseClicked
        jCheckBox2.setSelected(true);
        jTextField40.setForeground(Color.red);
        jTextField40.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(orderPaymentCommitTable3, 6)));

        try {
            java.sql.Statement stmtss = connectDB.createStatement();
            //java.sql.ResultSet rsets = stmtss.executeQuery("select distinct supplier,refno,aie_no,head,subhead,financial_year,period,sum(allocated_amount-paid_amount),vote from ac_aie_commitment where refno='"+ApprovalTbl3.getValueAt(current_row,1)+"' group by 1,2,3,4,5,6,7,9 ");  
            java.sql.ResultSet rsets = stmtss.executeQuery("select sum(credit) from ac_accounts_payable where invoice_no='" + orderPaymentCommitTable3.getValueAt(0, 1) + "' and order_no='" + lpoTxt2.getText() + "'");
            while (rsets.next()) {
                jTextField46.setForeground(Color.red);
                jTextField46.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rsets.getDouble(1)));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        jTextField47.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField41.getText().replace(",", "")) - Double.parseDouble(jTextField46.getText().replace(",", ""))));
        jTextField47.setForeground(Color.red);
    }//GEN-LAST:event_orderPaymentCommitTable3MouseClicked

    private void orderPaymentCommitTable3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderPaymentCommitTable3MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_orderPaymentCommitTable3MouseReleased

    private void orderPaymentCommitTable3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderPaymentCommitTable3KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_orderPaymentCommitTable3KeyReleased

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void BudgetTypeCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BudgetTypeCbxActionPerformed
        //////modified on 24/2/2014
        try {
            divisionCmbx.removeAllItems();
            String classes = null;

            java.sql.Statement st11 = connectDB.createStatement();
            java.sql.ResultSet ress1 = st11.executeQuery("select class from vb_class where classname = '" + BudgetTypeCbx.getSelectedItem() + "'");
            while (ress1.next()) {
                classes = ress1.getString(1);
            }

            java.sql.Statement st1 = connectDB.createStatement();
            //java.sql.ResultSet ress= st1.executeQuery("SELECT head FROM heads where subvote ilike '%"+classes.replace(",","")+"%' order by 1");
            java.sql.ResultSet ress = st1.executeQuery("SELECT distinct head from ac_aie_allocation where aieno='" + jComboBox4.getSelectedItem() + "' order by 1");
            while (ress.next()) {
                divisionCmbx.addItem(ress.getString(1));

                // divisionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct head from ac_aie_allocation where aieno='"+jComboBox4.getSelectedItem()+"' order by 1"));
                // head_amt=ress.getDouble(2);
                // head_amt=ress.getDouble(2);
            }

        } catch (Exception edf) {
            edf.printStackTrace();

        }

        ///end
    }//GEN-LAST:event_BudgetTypeCbxActionPerformed

    private void BudgetTypeCbx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BudgetTypeCbx1ActionPerformed
        // TODO add your handling code here:
//             try{
//             voteheadBillCbx1.removeAllItems();
//             String classes=null;
//             
//          java.sql.Statement  st11= connectDB.createStatement();
//       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+BudgetTypeCbx1.getSelectedItem()+"'");
//       while(ress1.next()){
//        classes=ress1.getString(1);
//      
//       
//       
//        java.sql.Statement  st1= connectDB.createStatement();
//       java.sql.ResultSet ress= st1.executeQuery("SELECT head FROM heads where subvote ilike '%"+classes.replace(",","")+"%' order by 1");
//       while(ress.next()){
//       voteheadBillCbx1.addItem(ress.getString(1));
//       
//       // head_amt=ress.getDouble(2);
//       }
//        // head_amt=ress.getDouble(2);
//       }
//       
//        }
//        catch(Exception edf){
//        edf.printStackTrace();
//        
//        }
    }//GEN-LAST:event_BudgetTypeCbx1ActionPerformed

    private void BudgetTypeCbx2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BudgetTypeCbx2ActionPerformed
        // TODO add your handling code here:
//             try{
//             voteheadBillCbx.removeAllItems();
//             String classes=null;
//             
//          java.sql.Statement  st11= connectDB.createStatement();
//       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+BudgetTypeCbx2.getSelectedItem()+"'");
//       while(ress1.next()){
//        classes=ress1.getString(1);
//      
//       
//       
//        java.sql.Statement  st1= connectDB.createStatement();
//       java.sql.ResultSet ress= st1.executeQuery("SELECT head FROM heads where subvote ilike '%"+classes.replace(",","")+"%' order by 1");
//       while(ress.next()){
//      voteheadBillCbx.addItem(ress.getString(1));
//       // head_amt=ress.getDouble(2);
//       }
//        // head_amt=ress.getDouble(2);
//       }
//       
//        }
//        catch(Exception edf){
//        edf.printStackTrace();
//        
//        }
    }//GEN-LAST:event_BudgetTypeCbx2ActionPerformed

    private void jTextField42KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField42KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            yes = true;
            ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct order_no,supplier from st_orders where order_no ilike '%" + jTextField42.getText() + "%' and ordered=false and dispatch=false order by order_no "));

        }
    }//GEN-LAST:event_jTextField42KeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        com.afrisoftech.accounting.CommittedLSO_LPO comp = new com.afrisoftech.accounting.CommittedLSO_LPO(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField43KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField43KeyPressed
        // TODO add your handling code here:
        yes = true;
        ApprovalTbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,order_no from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and committed=false and invoice_no not ilike 'RT:%' and invoice_no not ilike 'VAT:%' and invoice_no not ilike 'WT:%' and order_no ilike '%" + jTextField43.getText() + "%' order by order_no"));
    }//GEN-LAST:event_jTextField43KeyPressed

    private void staffNoSearchTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_staffNoSearchTxtKeyPressed
        // TODO add your handling code here:
        yes = true;//SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and final_voucher_no = ''  AND commited = false and dealer_code ilike '%"+jTextField44.getText()+"%'ORDER  BY dealer
        imprestApprovalTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and final_voucher_no = ''  AND commited = false and (dealer_code ilike '%" + staffNoSearchTxt.getText() + "%' or dealer ilike '%" + staffNoSearchTxt.getText() + "%') ORDER  BY dealer) "
                + "union "
                + "(SELECT distinct payee as STAFF,dealer_code as STAFF_NO FROM ac_petty_cash_requisition where cancelled = false AND commited = false and (payee ilike '%" + staffNoSearchTxt.getText() + "%' or dealer_code ilike '%" + staffNoSearchTxt.getText() + "%') ORDER  BY payee)"));
    }//GEN-LAST:event_staffNoSearchTxtKeyPressed

    private void jTextField45KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField45KeyPressed
        // TODO add your handling code here:
        // ApprovalTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct dealer,invoice_no from ac_accounts_payable where (transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) and invoice_no ilike '%"+jTextField45.getText()+"%'  order by invoice_no"));
    }//GEN-LAST:event_jTextField45KeyPressed

    private void imprestApprovalTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprestApprovalTableMouseClicked
        //on clicking table
        current_row = imprestApprovalTable.getSelectedRow();

        //   if(yes==true){
        //former   ApprovalTbl2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and  final_voucher_no = ''  AND commited = false and dealer_code ilike '%"+jTextField44.getText()+"%' ORDER  BY dealer"));
        imprestApprovalTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and final_voucher_no = ''  AND commited = false and dealer_code ilike '%" + staffNoSearchTxt.getText() + "%'ORDER  BY dealer) "
                + "union "
                + "(SELECT distinct payee as STAFF,dealer_code as STAFF_NO FROM ac_petty_cash_requisition where cancelled = false AND commited = false and dealer_code ilike '%" + staffNoSearchTxt.getText() + "%' ORDER  BY payee)"));
//        yes=false;
//    }else if(yes!=true){
//        ApprovalTbl2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct dealer as STAFF,dealer_code as STAFF_NO FROM ac_bills WHERE cancelled=false and  final_voucher_no = ''  AND commited = false ORDER  BY dealer"));
//    }

        SupplierTxt2.setText(null);
        try {
            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("SELECT voucher_no,document_no from ac_bills WHERE dealer_code = '" + imprestApprovalTable.getValueAt(current_row, 1).toString() + "' and dealer = '" + imprestApprovalTable.getValueAt(current_row, 0).toString().replace("'", "").trim() + "' AND final_voucher_no = '' and commited=false ORDER by 1");
            while (ress19.next()) {
                refNo.setText(ress19.getString(2));
                if (ress19.getString(1).contains("PAYE")) {
                    aie_no_bill1.setEnabled(false);
                } else {
                    aie_no_bill1.setEnabled(true);
                }

            }
            boolean board = false;
            java.sql.Statement st1192 = connectDB.createStatement();
            java.sql.ResultSet ress192 = st1192.executeQuery("SELECT * from ac_other_payments WHERE transaction_type='BOARD MEMBER' AND voucher_no ilike '%OTHER_PAY%'  and document_no = '" + imprestApprovalTable.getValueAt(current_row, 1).toString() + "' ");
            while (ress192.next()) {
                board = true;

            }

            //ApprovalTbl2.getValueAt(ApprovalTbl2.getSelectedRow(), 1).toString()
            //   if (dealerCodeTxt.getText() != null) {
            SupplierTxt2.setText(imprestApprovalTable.getValueAt(current_row, 0).toString());
            jTextField21.setText(imprestApprovalTable.getValueAt(current_row, 1).toString());
            if (board == true && !SupplierTxt2.getText().contains("TAX")) {
                imprestPaymentCommitTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT voucher_date,voucher_no,dealer, reason, gross_pay, false as Tick,user_name as checked_by,credit from ac_other_payments WHERE transaction_type='BOARD MEMBER' AND document_no = '" + imprestApprovalTable.getValueAt(current_row, 1).toString() + "' "));
            } else {//former SELECT voucher_date,voucher_no,description, reason, credit, false as Tick,cancel_reason as checked_by from ac_bills WHERE dealer_code = '"+imprestApprovalTable.getValueAt(current_row, 1).toString()+"' and dealer = '"+imprestApprovalTable.getValueAt(current_row, 0).toString().replace("'", "").trim()+"' AND final_voucher_no = '' and commited=false ORDER by 2
                imprestPaymentCommitTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT voucher_date,voucher_no,description, reason, credit, false as Tick,cancel_reason as checked_by,document_no from ac_bills "
                        + "WHERE dealer_code = '" + imprestApprovalTable.getValueAt(current_row, 1).toString() + "' and dealer = '" + imprestApprovalTable.getValueAt(current_row, 0).toString().replace("'", "").trim() + "' "
                        + "AND final_voucher_no = '' and commited=false ORDER by 2)"
                        + " union "
                        + "(SELECT date_required as voucher_date, requisition_no as voucher_no, reason,description, credit , false as Tick , user_name as checked_by,document_no "
                        + " FROM ac_petty_cash_requisition where cancelled = false AND commited = false and dealer_code = '" + imprestApprovalTable.getValueAt(current_row, 1).toString() + "' ORDER by 2)"));
            }

//                            imprestPaymentCommitTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "(SELECT voucher_date,voucher_no,description, reason, credit, false as Tick,cancel_reason as checked_by,document_no from ac_bills "
//                        + "WHERE dealer_code = '" + imprestApprovalTable.getValueAt(current_row, 1).toString() + "' and dealer = '" + imprestApprovalTable.getValueAt(current_row, 0).toString().replace("'", "").trim() + "' "
//                        + "AND final_voucher_no = '' and commited=false ORDER by 2)"
//                        + " union "
//                        + "(SELECT date_required as voucher_date, requisition_no as voucher_no, reason,description, credit , false as Tick , user_name as checked_by,document_no "
//                        + " FROM ac_petty_cash_requisition where cancelled = false AND commited = false and dealer_code = '" + imprestApprovalTable.getValueAt(current_row, 1).toString() + "' and payee = '" + imprestApprovalTable.getValueAt(current_row, 0).toString().replace("'", "").trim() + "' ORDER by 2)"));
//            }
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(Lpo_LsoCommitmentintfr.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_imprestApprovalTableMouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try {
            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select grn_no from st_stock_cardex where order_no= '" + lpoTxt2.getText() + "'");
            while (ress19.next()) {
                com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf policy1 = new com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf();
                policy1.MtrhSthirteenPdf(connectDB, lpoTxt2.getText(), SupplierTxt3.getText(), ress19.getString(1));

            }
        } catch (Exception t) {
            t.printStackTrace();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try {
            java.sql.Statement st119 = connectDB.createStatement();
            java.sql.ResultSet ress19 = st119.executeQuery("select cert_no from st_certificate where lpo= '" + lpoTxt2.getText() + "'");
            while (ress19.next()) {

                com.afrisoftech.hospinventory.ComplianceCertificatePdf policy = new com.afrisoftech.hospinventory.ComplianceCertificatePdf();
                policy.ComplianceCertificatePdf(connectDB, ress19.getString(1), lpoTxt2.getText());

            }
        } catch (Exception t) {
            t.printStackTrace();
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.accounting.CommittedLSO_LPO comp = new com.afrisoftech.accounting.CommittedLSO_LPO(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.voteExpenditure comp = new com.afrisoftech.votebook.voteExpenditure(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.voteExpenditure comp = new com.afrisoftech.votebook.voteExpenditure(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.voteExpenditure comp = new com.afrisoftech.votebook.voteExpenditure(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.voteExpenditure comp = new com.afrisoftech.votebook.voteExpenditure(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void exitbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn4ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = orderPaymentCommitTable1.getSelectedRowCount();

        int[] selectedRows = orderPaymentCommitTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) orderPaymentCommitTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) orderPaymentCommitTable1.getModel();

                defTableModel.removeRow(orderPaymentCommitTable1.getSelectedRow());
            }
        }
    }//GEN-LAST:event_exitbtn4ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox2.isSelected()) {
            jTextField47.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(jTextField41.getText().replace(",", "")) - Double.parseDouble(jTextField46.getText().replace(",", ""))));
            jTextField47.setForeground(Color.red);
        } else {
            jTextField47.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(0.00));
            jTextField47.setForeground(Color.red);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            Save1.setLabel("No Commitment");
        } else if (!jCheckBox1.isSelected()) {
            Save1.setLabel("Commit Bill");
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField40ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField40ActionPerformed

    private void jScrollPane4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane4MouseClicked

    private void jTextField47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField47ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField47ActionPerformed

    private void jTextField45CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField45CaretUpdate
        // TODO add your handling code here:
        yes = true;
        ApproveBillTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct dealer,invoice_no from ac_accounts_payable where ((transaction_type='Raise Invoice' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') or transaction_type='Payroll Journal' or transaction_type='Casual Labourers Journal' or transaction_type='Projects Journal') and invoice_no not like '%FDBT%' and approved=false and committed=false and invoice_no in (select invoice_no from ac_accounts_payable group by invoice_no having sum(credit-debit) !=0 ) and invoice_no ilike '%" + jTextField45.getText() + "%' union select distinct dealer,'DIR_PUR' from ac_accounts_payable where (transaction_type='Stock Delivery' or transaction_type='Witholding Tax' or transaction_type ilike '%Retention%') and approved=false and order_no ilike '%" + jTextField45.getText() + "%'  and committed=false"));
    }//GEN-LAST:event_jTextField45CaretUpdate

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void exitbtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn5ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = orderPaymentCommitTable3.getSelectedRowCount();

        int[] selectedRows = orderPaymentCommitTable3.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) orderPaymentCommitTable3.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) orderPaymentCommitTable3.getModel();

                defTableModel.removeRow(orderPaymentCommitTable3.getSelectedRow());
            }
        }
    }//GEN-LAST:event_exitbtn5ActionPerformed

    private void exitbtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn6ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = imprestPaymentCommitTable.getSelectedRowCount();

        int[] selectedRows = imprestPaymentCommitTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) imprestPaymentCommitTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) imprestPaymentCommitTable.getModel();

                defTableModel.removeRow(imprestPaymentCommitTable.getSelectedRow());
            }
        }
    }//GEN-LAST:event_exitbtn6ActionPerformed

    private void jTextField43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField43ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField43ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.Commitmentinfr dismth = new com.afrisoftech.votebook.Commitmentinfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jButton14ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ApprovalTbl;
    private javax.swing.JTable ApprovalTbl3;
    private javax.swing.JScrollPane ApprovalTblscr;
    private javax.swing.JScrollPane ApprovalTblscr1;
    private javax.swing.JScrollPane ApprovalTblscr2;
    private javax.swing.JScrollPane ApprovalTblscr3;
    private javax.swing.JTable ApproveBillTable;
    private javax.swing.JComboBox BudgetTypeCbx;
    private javax.swing.JComboBox BudgetTypeCbx1;
    private javax.swing.JComboBox BudgetTypeCbx2;
    private javax.swing.JComboBox QuarterBillCbx;
    private javax.swing.JComboBox QuarterBillCbx1;
    private javax.swing.JTextField QuarterBillCbx2;
    private javax.swing.JButton Save;
    private javax.swing.JButton Save1;
    private javax.swing.JButton Save2;
    private javax.swing.JButton Save3;
    private javax.swing.JTextField SubheadCommitmentsTxt;
    private javax.swing.JTextField SubheadPaymentsTxt;
    private javax.swing.JTextField SupplierTxt;
    private javax.swing.JTextField SupplierTxt2;
    private javax.swing.JTextField SupplierTxt3;
    private javax.swing.JTextField TenderTxt;
    private javax.swing.JTextField VoteSubheadCommitmentsImpTxt;
    private javax.swing.JTextField VoteSubheadPaymentsImpTxt;
    private javax.swing.JComboBox aie_no_bill;
    private javax.swing.JComboBox aie_no_bill1;
    private javax.swing.JTextField aie_no_bill2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox bypassVote;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JButton cancelbtn2;
    private javax.swing.JButton cancelbtn3;
    private javax.swing.JTextField dealerNameTxt;
    private javax.swing.JLabel division;
    private javax.swing.JLabel division1;
    private javax.swing.JLabel division2;
    private javax.swing.JLabel division3;
    private javax.swing.JTextField divisionBalancetxt;
    private javax.swing.JComboBox divisionCmbx;
    public static javax.swing.JButton exitbtn;
    public static javax.swing.JButton exitbtn1;
    public static javax.swing.JButton exitbtn2;
    public static javax.swing.JButton exitbtn3;
    public static javax.swing.JButton exitbtn4;
    public static javax.swing.JButton exitbtn5;
    public static javax.swing.JButton exitbtn6;
    private javax.swing.JComboBox financialPeriodCmbx;
    private javax.swing.JComboBox financialPeriodCmbxBill;
    private javax.swing.JComboBox financialPeriodCmbxBill1;
    private javax.swing.JTextField financialPeriodCmbxBill2;
    private javax.swing.JLabel financialPeriodlbl;
    private javax.swing.JLabel financialPeriodlbl1;
    private javax.swing.JLabel financialPeriodlbl2;
    private javax.swing.JLabel financialPeriodlbl3;
    private javax.swing.JTable imprestApprovalTable;
    private javax.swing.JTable imprestPaymentCommitTable;
    private javax.swing.JTextField invoiceNoTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField45;
    private javax.swing.JTextField jTextField46;
    private javax.swing.JTextField jTextField47;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField50;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField lpoTxt;
    private javax.swing.JTextField lpoTxt1;
    private javax.swing.JTextField lpoTxt2;
    private javax.swing.JTable orderPaymentCommitTable;
    private javax.swing.JTable orderPaymentCommitTable1;
    private javax.swing.JTable orderPaymentCommitTable3;
    private javax.swing.JTextField refNo;
    private javax.swing.JTextField staffNoSearchTxt;
    private javax.swing.JTextField totalAmttxt;
    private javax.swing.JComboBox voteBillTxt;
    private javax.swing.JComboBox voteBillTxt1;
    private javax.swing.JTextField voteBillTxt2;
    private javax.swing.JComboBox voteSubheadBillCbx;
    private javax.swing.JComboBox voteSubheadBillCbx1;
    private javax.swing.JTextField voteSubheadBillCbx2;
    private javax.swing.JTextField voteSubheadCommitmentsBillTxt;
    private javax.swing.JTextField voteSubheadPaymentsBillTxt;
    private javax.swing.JLabel votehead;
    private javax.swing.JLabel votehead1;
    private javax.swing.JLabel votehead2;
    private javax.swing.JLabel votehead3;
    private javax.swing.JComboBox voteheadBillCbx;
    private javax.swing.JComboBox voteheadBillCbx1;
    private javax.swing.JTextField voteheadBillCbx2;
    // End of variables declaration//GEN-END:variables
}
