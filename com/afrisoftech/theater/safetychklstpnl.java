/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.theater;

import java.util.Vector;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.TableColumn;

/**
 *
 * @author MUGISPL
 */
public class safetychklstpnl extends javax.swing.JPanel {

    /**
     * Creates new form safetychklstpnl
     */
     java.sql.Connection connectDB = null;
     Vector details = new Vector();
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private JPanel jpaneltoload1;
      com.afrisoftech.lib.DBObject dbObject;
    public safetychklstpnl(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB,Vector patDetails) {

        details=patDetails;

        connectDB = connDb;

        pConnDB = pconnDB;
        dbObject = new com.afrisoftech.lib.DBObject();
        initComponents();
           for(int i=0;i<jTable10.getRowCount();i++){
               for(int k=2;k<4;k++){
                   if(k==2){
                jTable10.setValueAt(true, i, k);
                   }else
                          if(k==3){
                jTable10.setValueAt("COMMENTS "+i+"-"+k, i, k);
                   }
               }
               
           }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel71 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        /**
        javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jTable10.getColumnModel().getColumn(i);

            if (i == 0) {

                column.setPreferredWidth(100);

            }else
            if (i == 1) {

                column.setPreferredWidth(400);

            }
            else if (i == 2) {

                column.setPreferredWidth(100);

            }
            else if (i == 3) {

                column.setPreferredWidth(400);

            }
        }
        **/
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        paymentRequestBtn = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jPanel71.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Surgical Safety Checklist", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel71.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Accounts here"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jScrollPane13.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N

        jTable10.setBackground(new java.awt.Color(204, 204, 255));
        jTable10.setBorder(new javax.swing.border.MatteBorder(null));
        jTable10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "BEFORE INDUCTION OF ANAESTHESIA(AT LEAST A NURSE ANAESTHETIC)", null, null},
                {"1", "Patient has confirmed identity,site,procedure and consent", null, null},
                {"2", "Is the site marked", null, null},
                {"3", "Anaesthesia machine and medication chek is complete", null, null},
                {"4", "Pulse oximeter on patient is functioning", null, null},
                {"5", "Does patient have known allergy", null, null},
                {"6", "Difficult airway or aspiration risk", null, null},
                {"7", "Risk of >500ml blood loss(7ml/kg in children)", null, null},
                {"8", "All team members introduced by name and role", null, null},
                {null, null, null, null},
                {"", "BEFORE SKIN INCISION (NURSE,ANAESTHETIST & SURGEON)", null, null},
                {"9", "Team members have introduced themselves by name and role", null, null},
                {"10", "Confirm patients name,procedure and where the incision will be made", null, null},
                {"11", "Has antibiotic prophylaxis been given within the last 60 min ", null, null},
                {null, null, null, null},
                {"TO SURGEON:", "ANTICIPATED CRITICAL EVENTS", null, null},
                {"12", "Critical or non-routine steps ?", null, null},
                {"13", "How long will the case take", null, null},
                {"14", "Anticipated blood los", null, null},
                {null, null, null, null},
                {"TO ANAESTHETIST", "ANTICIPATED CRITICAL EVENTS", null, null},
                {"15", "Are there any patient-specific concern", null, null},
                {null, null, null, null},
                {"TO NURSING TEAM", "ANTICIPATED CRITICAL EVENTS", null, null},
                {"16", "Has sterlity been confirmed", null, null},
                {"17", "Equipment issues or concerns", null, null},
                {"18", "Essential imaging displayed", null, null},
                {null, null, null, null},
                {null, "BEFORE PATIENT LEAVES (NURSE,ANAESTHETIST & SURGEON)", null, null},
                {"Nurse verbally confirms", null, null, null},
                {"19", "The name of the procedure", null, null},
                {"20", "Completion of instruments, sponge and needle count", null, null},
                {"21", "Whether there are any equipment problems to be addressed", null, null},
                {"22", "Specimen labelling(read specimen labe aloud,including patient details", null, null},
                {"23", "What arethe  key concerns of this patient", null, null},
                {null, null, null, null}
            },
            new String [] {
                "no", "Confirmations", "Consent", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable10MouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(jTable10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jScrollPane13, gridBagConstraints);

        paymentRequestBtn.setMnemonic('s');
        paymentRequestBtn.setText("Save");
        paymentRequestBtn.setToolTipText("Click here to enter data");
        paymentRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentRequestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(paymentRequestBtn, gridBagConstraints);

        jButton40.setMnemonic('l');
        jButton40.setText("Clear form");
        jButton40.setToolTipText("Click here to clear fields");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton40, gridBagConstraints);

        jButton43.setMnemonic('C');
        jButton43.setText("Close");
        jButton43.setToolTipText("Click here to close ");
        jButton43.setSelected(true);
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton43, gridBagConstraints);

        resetbtn.setMnemonic('v');
        resetbtn.setText("Save & Print");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(resetbtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel3.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel71.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel71, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable10MouseClicked

    }//GEN-LAST:event_jTable10MouseClicked

    private void paymentRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentRequestBtnActionPerformed

         if(details.isEmpty()==false){

            try {

                connectDB.setAutoCommit(false);
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement(""
                    + "INSERT INTO nursing.checklisttable(" +
"            patient_no, visit_id, patient_consent, patient_consent_remarks, " +
"            site_marked, site_marked_remarks, medication_complete, medication_complete_remarks," +
"            oximeter_functioning, oximeter_functioning_remarks, patient_allergy," +
"            patient_allergy_remarks, airway_risk, airway_risk_remarks, blood_loss, " +
"            blood_loss_remarks, members_introduced, members_introduced_remarks, " +
"            team_introduced, team_introduced_remarks, confirm_incision, confirm_incision_remarks," +
"            prophylaxis_given, prophylaxis_given_remarks, critical_steps, " +
"            critical_steps_remarks, case_time, case_time_remarks, anticipated_blood_los," +
"            anticipated_blood_los_remarks, patient_concern, patient_concern_remarks, " +
"            sterlity_confirmed, sterlity_confirmed_remarks, equipment_issues," +
"            equipment_issues_remarks, imaging_displayed, imaging_displayed_remarks," +
"            name_procedure, name_procedure_remarks, completion_of_count," +
"            completion_of_count_remarks, equipment_problems, equipment_problems_remarks, " +
"            specimen_labelling, specimen_labelling_remarks, key_concerns_patient, " +
"            concerns_patient_remarks, date, user_name, time_entered,booking_no)" +
"    VALUES (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?,?, ?, ?, ?,?, ?, ?,?, ?, ?, ?,?, ?, ?,?, ?,?, ?, ?,?, ?, ?,?, ?, ?,?, ?, ?,?, ?, ?,?, ?, ?, ?, ?, ?,?::date, ?, ?::time, ?);");
                pstmt.setObject(1, details.elementAt(0));
                pstmt.setObject(2,details.elementAt(1));
             
                   
                     pstmt.setObject(3,dbObject.getDBObject(jTable10.getModel().getValueAt(1, 2),""));
                    pstmt.setObject(4,dbObject.getDBObject(jTable10.getModel().getValueAt(1, 3),""));
                     pstmt.setObject(5,dbObject.getDBObject(jTable10.getModel().getValueAt(2, 2),""));
                    pstmt.setObject(6,dbObject.getDBObject(jTable10.getModel().getValueAt(2, 3),""));
                     pstmt.setObject(7,dbObject.getDBObject(jTable10.getModel().getValueAt(3, 2),""));
                    pstmt.setObject(8,dbObject.getDBObject(jTable10.getModel().getValueAt(3, 3),""));
                     pstmt.setObject(9,dbObject.getDBObject(jTable10.getModel().getValueAt(4, 2),""));
                     
                     pstmt.setObject(10,dbObject.getDBObject(jTable10.getModel().getValueAt(4, 3),""));
                    pstmt.setObject(11,dbObject.getDBObject(jTable10.getModel().getValueAt(5, 2),""));
                     pstmt.setObject(12,dbObject.getDBObject(jTable10.getModel().getValueAt(5, 3),""));
                     
                     pstmt.setObject(13,dbObject.getDBObject(jTable10.getModel().getValueAt(6, 2),""));
                    pstmt.setObject(14,dbObject.getDBObject(jTable10.getModel().getValueAt(6, 3),""));
                     pstmt.setObject(15,dbObject.getDBObject(jTable10.getModel().getValueAt(7, 2),""));
                     
                       pstmt.setObject(16,dbObject.getDBObject(jTable10.getModel().getValueAt(7, 3),""));
                    pstmt.setObject(17,dbObject.getDBObject(jTable10.getModel().getValueAt(8, 2),""));
                     pstmt.setObject(18,dbObject.getDBObject(jTable10.getModel().getValueAt(8, 3),""));
                    pstmt.setObject(19,dbObject.getDBObject(jTable10.getModel().getValueAt(11, 2),""));
                     pstmt.setObject(20,dbObject.getDBObject(jTable10.getModel().getValueAt(11, 3),""));
                    pstmt.setObject(21,dbObject.getDBObject(jTable10.getModel().getValueAt(12, 2),""));
                     pstmt.setObject(22,dbObject.getDBObject(jTable10.getModel().getValueAt(12, 3),""));
                    pstmt.setObject(23,dbObject.getDBObject(jTable10.getModel().getValueAt(13, 2),""));
                     pstmt.setObject(24,dbObject.getDBObject(jTable10.getModel().getValueAt(13, 3),""));
                     
                     pstmt.setObject(25,dbObject.getDBObject(jTable10.getModel().getValueAt(16, 2),""));
                    pstmt.setObject(26,dbObject.getDBObject(jTable10.getModel().getValueAt(16, 3),""));
                     pstmt.setObject(27,dbObject.getDBObject(jTable10.getModel().getValueAt(17, 2),""));
                     
                     pstmt.setObject(28,dbObject.getDBObject(jTable10.getModel().getValueAt(17, 3),""));
                    pstmt.setObject(29,dbObject.getDBObject(jTable10.getModel().getValueAt(18, 2),""));
                     pstmt.setObject(30,dbObject.getDBObject(jTable10.getModel().getValueAt(18, 3),""));
                     
                     
                       pstmt.setObject(31,dbObject.getDBObject(jTable10.getModel().getValueAt(21, 2),""));
                    pstmt.setObject(32,dbObject.getDBObject(jTable10.getModel().getValueAt(21, 3),""));
                     pstmt.setObject(33,dbObject.getDBObject(jTable10.getModel().getValueAt(24, 2),""));
                    pstmt.setObject(34,dbObject.getDBObject(jTable10.getModel().getValueAt(24, 3),""));
                     pstmt.setObject(35,dbObject.getDBObject(jTable10.getModel().getValueAt(25, 2),""));
                    pstmt.setObject(36,dbObject.getDBObject(jTable10.getModel().getValueAt(25, 3),""));
                     pstmt.setObject(37,dbObject.getDBObject(jTable10.getModel().getValueAt(26, 2),""));
                    pstmt.setObject(38,dbObject.getDBObject(jTable10.getModel().getValueAt(26, 3),""));
                     pstmt.setObject(39,dbObject.getDBObject(jTable10.getModel().getValueAt(30, 2),""));
                     
                     pstmt.setObject(40,dbObject.getDBObject(jTable10.getModel().getValueAt(30, 3),""));
                    pstmt.setObject(41,dbObject.getDBObject(jTable10.getModel().getValueAt(31, 2),""));
                     pstmt.setObject(42,dbObject.getDBObject(jTable10.getModel().getValueAt(31, 3),""));
                     
                     pstmt.setObject(43,dbObject.getDBObject(jTable10.getModel().getValueAt(32, 2),""));
                    pstmt.setObject(44,dbObject.getDBObject(jTable10.getModel().getValueAt(32, 3),""));
                     pstmt.setObject(45,dbObject.getDBObject(jTable10.getModel().getValueAt(33, 2),""));
                     
                     
                      pstmt.setObject(46,dbObject.getDBObject(jTable10.getModel().getValueAt(33, 3),""));
                    pstmt.setObject(47,dbObject.getDBObject(jTable10.getModel().getValueAt(34, 2),""));
                     pstmt.setObject(48,dbObject.getDBObject(jTable10.getModel().getValueAt(34, 3),""));
                     
                  pstmt.setObject(49,details.elementAt(2));
                 pstmt.setObject(50,details.elementAt(3));
                  pstmt.setObject(51,details.elementAt(4));
                  pstmt.setObject(52,details.elementAt(5));
                
                pstmt.executeUpdate();
                 connectDB.commit();
                    connectDB.setAutoCommit(true);

                jButton40.doClick();

                  JOptionPane.showMessageDialog(null,"Data Saved successfully. ");
               

            }
            catch(Exception anaesthetic){
                 try {
                        connectDB.rollback();
                    } catch (java.sql.SQLException sql) {
                        javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                java.util.logging.Logger.getLogger(Implantformpnl.class.getName()).log(Level.SEVERE,null,anaesthetic);
                JOptionPane.showMessageDialog(null,"Data not Saved successfully.\nTry Again ");

            }
        }else
        {
            JOptionPane.showMessageDialog(null,"Please ensure yo select patient No and Date first.\n& CONTINUE");

        }
         jButton40.doClick();
       
    }//GEN-LAST:event_paymentRequestBtnActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        for (int k = 0; k < jTable10.getRowCount(); k++) {
            
                jTable10.getModel().setValueAt(null, k, 2);
                jTable10.getModel().setValueAt(null, k, 3);
           
        } // Add your handling code here:
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        jpaneltoload1= new JPanel();
           jpaneltoload1 = (JPanel)new CancelTheatre();
              this.removeAll();
                this.setLayout(new java.awt.BorderLayout());
                this.add(jpaneltoload1, java.awt.BorderLayout.CENTER);
                  this.updateUI();
    }//GEN-LAST:event_jButton43ActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed

    }//GEN-LAST:event_resetbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton40;
    public javax.swing.JButton jButton43;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JTable jTable10;
    private javax.swing.JButton paymentRequestBtn;
    private javax.swing.JButton resetbtn;
    // End of variables declaration//GEN-END:variables
}
