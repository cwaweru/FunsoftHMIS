/*
 * DatePanel.java
 *
 * Created on May 1, 2003, 7:40 PM
 */

package com.afrisoftech.lib;

/**
 *
 * @author  root
 */
public class HosPayrollDatePanel extends javax.swing.JDialog {
    
    int reportName;
    
        org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    java.sql.Connection connectDB = null;
    
    java.util.Vector dateStartEnd = null;
    
    javax.swing.JSpinner beginDateSpinner = null;
    
    javax.swing.JSpinner endDateSpinner = null;
    
    /** Creates new form DatePanel */
    public HosPayrollDatePanel(java.awt.Frame parent, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB, boolean modal, int repName, java.sql.Connection connectDb) {
        
        super(parent, modal);
        
        reportName = repName;
        
        connectDB = connectDb;
        
        pConnDB = pconnDB;
        initComponents();
        
        //       return dateStartEnd;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setTitle("Reporting data filter dialog");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(230, 230, 230));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Begin Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(datePicker1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(datePicker2, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Select category here"));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Category Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel4, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT company_name from payroll_comsetup order by company_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select Begin and End Dates");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton2, gridBagConstraints);

        jButton1.setText("Preview Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(jPanel3, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-411)/2, (screenSize.height-251)/2, 411, 251);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        this.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        this.getReport(reportName);
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //    new DatePanel(new javax.swing.JFrame(), true).setVisible(true);
    }
    
    public java.util.Vector getBeginEndDates() {
        
        dateStartEnd = new java.util.Vector(1,1);
        
        dateStartEnd.addElement(beginDateSpinner.getValue().toString());
        
        dateStartEnd.addElement(endDateSpinner.getValue().toString());
        
        return dateStartEnd;
        
    }
    
    public void getReport(int reportName) {
        
        switch (reportName) {
            
            case 0:
                
            {
                com.afrisoftech.hospayroll.ProcessPayrollPdf policy = new com.afrisoftech.hospayroll.ProcessPayrollPdf();
                
                policy.ProcessPayrollPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 1:
                
            {
                com.afrisoftech.hospayroll.P9Pdf policy = new com.afrisoftech.hospayroll.P9Pdf();
                
                policy.P9Pdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate());
                
                this.dispose();
                
            } break;
            
            case 2:
                
            {
                com.afrisoftech.hospayroll.DeductionsPdf policy = new com.afrisoftech.hospayroll.DeductionsPdf();
                
                policy.DeductionsPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            
            
         /*  case 3:
          
            {
                com.afrisoftech.hospayroll.ChequePaymentsPdf policy = new com.afrisoftech.hospayroll.ChequePaymentsPdf();
          
                policy.ChequePaymentsPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate());
          
               this.dispose();
          
            } break;
          */
            
            case 4:
                
            {
                com.afrisoftech.hospayroll.PayeListPdf policy = new com.afrisoftech.hospayroll.PayeListPdf();
                
                policy.PayeListPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 5:
                
            {
                com.afrisoftech.hospayroll.CashPaymentsPdf policy = new com.afrisoftech.hospayroll.CashPaymentsPdf();
                
                policy.CashPaymentsPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 7:
                
            {
                com.afrisoftech.hospayroll.NetSalaryPdf policy = new com.afrisoftech.hospayroll.NetSalaryPdf();
                
                policy.NetSalaryPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 9:
                
            {
                com.afrisoftech.hospayroll.PayMasterPdf policy = new com.afrisoftech.hospayroll.PayMasterPdf();
                
                policy.PayMasterPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 11:
                
            {
                com.afrisoftech.hospayroll.StaffEarningsPdf policy = new com.afrisoftech.hospayroll.StaffEarningsPdf();
                
                policy.StaffEarningsPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 15:
                
            {
                com.afrisoftech.hospayroll.NSSFPdf policy = new com.afrisoftech.hospayroll.NSSFPdf();
                
                policy.NSSFPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 16:
                
            {
                com.afrisoftech.hospayroll.NhifPdf policy = new com.afrisoftech.hospayroll.NhifPdf();
                
                policy.NhifPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 17:
                
            {
                com.afrisoftech.hospayroll.UNIONPdf policy = new com.afrisoftech.hospayroll.UNIONPdf();
                
                policy.UNIONPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString());
                
                this.dispose();
                
            } break;
            
            case 18:
                
            {
                com.afrisoftech.hospayroll.NNAKPdf policy = new com.afrisoftech.hospayroll.NNAKPdf();
                
                policy.NNAKPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString());
                
                this.dispose();
                
            } break;
            
            
            case 19:
                
            {
                com.afrisoftech.hospayroll.SalaryJournalPdf policy = new com.afrisoftech.hospayroll.SalaryJournalPdf();
                
                policy.SalaryJournalPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            case 20:
                
            {
                com.afrisoftech.hospayroll.PostedStaffPdf policy = new com.afrisoftech.hospayroll.PostedStaffPdf();
                
                policy.PostedStaffPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
           /* 
            case 21:
                
            {
                com.afrisoftech.hospayroll.ProcessingPayroll processingPayroll = new com.afrisoftech.hospayroll.ProcessingPayroll(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate());
                
                processingPayroll.processPayroll();
                
                this.dispose();
                
            } break;
            */
            
             case 24:
                
            {
               com.afrisoftech.hospayroll.HelbPdf policy = new com.afrisoftech.hospayroll.HelbPdf();
                
                policy.HelbPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate());
                
                this.dispose();
                
            } break;
            
             case 22:
                
            {
               com.afrisoftech.hospayroll.PayrollSummaryHsePdf policy = new com.afrisoftech.hospayroll.PayrollSummaryHsePdf();
                
                policy.PayrollSummaryHsePdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
             case 25:
                
            {
               com.afrisoftech.hospayroll.PayrollDiffPdf policy = new com.afrisoftech.hospayroll.PayrollDiffPdf();
                
                policy.PayrollDiffPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
             case 27:
                
            {
               com.afrisoftech.hospayroll.PayslipAnalisysPdf policy = new com.afrisoftech.hospayroll.PayslipAnalisysPdf();
                
                policy.PayslipAnalisysPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
             case 29:
                
            {
               com.afrisoftech.hospayroll.PayrollAnnualAnalisysPdf policy = new com.afrisoftech.hospayroll.PayrollAnnualAnalisysPdf();
                
                policy.PayrollAnnualAnalisysPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            
            case 67890:
                
            {
               com.afrisoftech.hospayroll.PayrollMonthlyAnalisysPdf policy = new com.afrisoftech.hospayroll.PayrollMonthlyAnalisysPdf();
                
                policy.PayrollMonthlyAnalisysPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
              case 31:
                
            {
               com.afrisoftech.hospayroll.PayrollComparisonPdf policy = new com.afrisoftech.hospayroll.PayrollComparisonPdf();
                
                policy.PayrollComparisonPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
            
             case 2222:
                
            {
               com.afrisoftech.hospayroll.P10ListPdf policy = new com.afrisoftech.hospayroll.P10ListPdf();
                
                policy.P10ListPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            case 2223:
                
            {
               com.afrisoftech.hospayroll.PayrollChangesPdf policy = new com.afrisoftech.hospayroll.PayrollChangesPdf();
                
                policy.PayrollChangesPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
             case 2224:
                
            {
               com.afrisoftech.hospayroll.GrossAnalisysPdf policy = new com.afrisoftech.hospayroll.GrossAnalisysPdf();
                
                policy.GrossAnalisysPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
             case 2227:
                
            {
                com.afrisoftech.hospayroll.ChequeVoucherPdf policy = new com.afrisoftech.hospayroll.ChequeVoucherPdf();
                
                policy.ChequeVoucherPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
              case 2228:
                
            {
                com.afrisoftech.hospayroll.ChqPaymentsPdf policy = new com.afrisoftech.hospayroll.ChqPaymentsPdf();
                
                policy.ChqPaymentsPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(),this.jComboBox1.getSelectedItem().toString());
                
                this.dispose();
                
            } break;
            
               case 32:
                
            {
               com.afrisoftech.hospayroll.PayrollSummaryDepartPdf policy = new com.afrisoftech.hospayroll.PayrollSummaryDepartPdf();
                
                policy.PayrollSummaryDepartPdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());
                
                //this.dispose();
                
            } break;
             case 2232:
            
                
            {
                com.afrisoftech.hospayroll.TransferInvoicePdf policy = new com.afrisoftech.hospayroll.TransferInvoicePdf();

                policy.TransferInvoicePdf(connectDB, this.datePicker1.getDate(), this.datePicker2.getDate(),this.jComboBox1.getSelectedItem().toString());

                
            } break;
            
            
            
            
            
           /*
              case 8:
            
            {
                com.afrisoftech.sacco.PaymentsPdf policy = new com.afrisoftech.sacco.PaymentsPdf();
            
                policy.PaymentsPdf(connectDB, this.beginDateSpinner.getValue().toString(), this.endDateSpinner.getValue().toString());
            
               this.dispose();
            
            } break;
            
               case 9:
            
            {
                com.afrisoftech.sacco.SharesTransPdf policy = new com.afrisoftech.sacco.SharesTransPdf();
            
                policy.SharesTransPdf(connectDB, this.beginDateSpinner.getValue().toString(), this.endDateSpinner.getValue().toString());
            
               this.dispose();
            
            } break;
            
             case 16:
            
            {
                com.afrisoftech.sacco.LoanInterestPaidPdf policy = new com.afrisoftech.sacco.LoanInterestPaidPdf();
            
                policy.LoanInterestPaidPdf(connectDB, this.beginDateSpinner.getValue().toString(), this.endDateSpinner.getValue().toString());
            
               this.dispose();
            
            } break;
            
             case 17:
            
            {
                com.afrisoftech.sacco.VouchersApprListPdf policy = new com.afrisoftech.sacco.VouchersApprListPdf();
            
                policy.VouchersApprListPdf(connectDB, this.beginDateSpinner.getValue().toString(), this.endDateSpinner.getValue().toString());
            
               this.dispose();
            
            } break;
            
             case 18:
            
            {
                com.afrisoftech.sacco.PaymentAwaApprListPdf policy = new com.afrisoftech.sacco.PaymentAwaApprListPdf();
            
                policy.PaymentAwaApprListPdf(connectDB, this.beginDateSpinner.getValue().toString(), this.endDateSpinner.getValue().toString());
            
               this.dispose();
            
            } break;
            
            */
            default :  ;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
    
}
