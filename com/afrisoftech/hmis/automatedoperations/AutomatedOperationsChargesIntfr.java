/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hmis.automatedoperations;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Charles
 */
public class AutomatedOperationsChargesIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form AutomatedOperationsChargesIntfr
     */
    java.sql.Connection connectDB = null;

    public AutomatedOperationsChargesIntfr(java.sql.Connection connDB) {

        connectDB = connDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        servicesTable = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        buttonPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        loadAvailableServicesBtn = new javax.swing.JButton();
        addNewServicesBtn = new javax.swing.JButton();
        editExistingServicesBtn = new javax.swing.JButton();
        removeServicesBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Automated Charges for Farewell Home");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        servicesTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT code as service_code, service_type as Service, gl_account, main_service, rate as Normal_Fee, anaesthetist_rate as Private_Rate, other_prices as NON_E_AFrican, false as auto_billing, false as one_time_billing from pb_operating_parameters order by service_type"));
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 9; i++) {
            column = servicesTable.getColumnModel().getColumn(i);
            if (i == 1) {

                column.setPreferredWidth(500); //sport column is bigger
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(200);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }

        jScrollPane1.setViewportView(servicesTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jLabel1, gridBagConstraints);

        loadAvailableServicesBtn.setText("Load available services");
        loadAvailableServicesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadAvailableServicesBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(loadAvailableServicesBtn, new java.awt.GridBagConstraints());

        addNewServicesBtn.setText("Add new automated services");
        addNewServicesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewServicesBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(addNewServicesBtn, new java.awt.GridBagConstraints());

        editExistingServicesBtn.setText("Edit Automated Services");
        editExistingServicesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editExistingServicesBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(editExistingServicesBtn, new java.awt.GridBagConstraints());

        removeServicesBtn.setText("Remove automated services");
        removeServicesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeServicesBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(removeServicesBtn, new java.awt.GridBagConstraints());

        closeFormBtn.setText("Close form");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(closeFormBtn, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void addNewServicesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewServicesBtnActionPerformed
        try {
            for (int i = 0; i < servicesTable.getRowCount(); i++) {
                if (Boolean.parseBoolean(servicesTable.getValueAt(i, 7).toString()) || Boolean.parseBoolean(servicesTable.getValueAt(i, 8).toString())) {
                    java.sql.PreparedStatement pstmtSave = connectDB.prepareStatement("INSERT INTO pb_mort_auto_charges(service_gl_code, service_code, service_description, service_fee_normal, service_fee_private, service_fee_special, service_revenue_department, auto_billing, one_time_billing) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)");

                    pstmtSave.setObject(1, servicesTable.getValueAt(i, 2));
                    pstmtSave.setObject(2, servicesTable.getValueAt(i, 0));
                    pstmtSave.setObject(3, servicesTable.getValueAt(i, 1));
                    pstmtSave.setDouble(4, Double.parseDouble(servicesTable.getValueAt(i, 4).toString()));
                    pstmtSave.setDouble(5, Double.parseDouble(servicesTable.getValueAt(i, 5).toString()));
                    pstmtSave.setDouble(6, Double.parseDouble(servicesTable.getValueAt(i, 6).toString()));
                    pstmtSave.setObject(7, servicesTable.getValueAt(i, 3));
                    pstmtSave.setBoolean(8, Boolean.parseBoolean(servicesTable.getValueAt(i, 7).toString()));
                    pstmtSave.setBoolean(9, Boolean.parseBoolean(servicesTable.getValueAt(i, 8).toString()));

                    pstmtSave.execute();
                    javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully.");
                }
            }
            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "ERROR: Data not saved \nERROR DETAILS: " + ex.getMessage());
            Logger.getLogger(AutomatedOperationsChargesIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addNewServicesBtnActionPerformed

    private void editExistingServicesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editExistingServicesBtnActionPerformed
     this.removeServicesBtn.setEnabled(true);
     this.addNewServicesBtn.setEnabled(false);
        servicesTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT service_code as service_code, service_description as Service, service_gl_code, service_revenue_department as main_service, service_fee_normal as Normal_Fee, service_fee_private as Private_Rate, service_fee_special as NON_E_AFrican, false as remove from pb_mort_auto_charges order by service_description"));
        // TODO add your handling code here:
    }//GEN-LAST:event_editExistingServicesBtnActionPerformed

    private void removeServicesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeServicesBtnActionPerformed

        try {
            for (int i = 0; i < servicesTable.getRowCount(); i++) {
                if (Boolean.parseBoolean(servicesTable.getValueAt(i, 7).toString())) {
                    java.sql.PreparedStatement pstmtSave = connectDB.prepareStatement("DELETE FROM pb_mort_auto_charges where service_code = ?");
                    pstmtSave.setObject(1, servicesTable.getValueAt(i, 0));

                    pstmtSave.execute();
                    javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully.");
                }
            }
            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "ERROR: Data not saved \nERROR DETAILS: " + ex.getMessage());
            Logger.getLogger(AutomatedOperationsChargesIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_removeServicesBtnActionPerformed

    private void loadAvailableServicesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadAvailableServicesBtnActionPerformed

     this.removeServicesBtn.setEnabled(false);
     this.addNewServicesBtn.setEnabled(true);
     servicesTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT code as service_code, service_type as Service, gl_account, main_service, rate as Normal_Fee, anaesthetist_rate as Private_Rate, other_prices as NON_E_AFrican, auto_billing, one_time_billing from pb_operating_parameters order by service_type"));
        
        // TODO add your handling code here:
    }//GEN-LAST:event_loadAvailableServicesBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewServicesBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JButton editExistingServicesBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadAvailableServicesBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton removeServicesBtn;
    private javax.swing.JTable servicesTable;
    // End of variables declaration//GEN-END:variables
}
