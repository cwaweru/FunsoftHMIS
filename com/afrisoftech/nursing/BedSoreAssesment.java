/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.nursing;

import java.util.Date;

/**
 *
 * @author System Partners
 */
public class BedSoreAssesment extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    String activity;
    
    public static String patient_no=null;
    public static java.util.Date date=null;
    public static String visit_id=null;
    public static java.sql.Connection connectDB = null;
public static org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    public BedSoreAssesment(java.awt.Frame parent, boolean modal,java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB,String patient,java.util.Date Date,String visitId) {
        super(parent, modal);
        
        initComponents();
        jCheckBox1.hide();
        jCheckBox2.hide();
            jCheckBox3.hide();
            jCheckBox4.hide();
            jCheckBox5.hide();
            jCheckBox6.hide();
            jCheckBox7.hide();
        connectDB=connDb;
        pConnDB=pconnDB;
        patient_no=patient;
        date=Date;
        visit_id=visitId;
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jComboBoxCategory = new javax.swing.JComboBox();
        jPanelAppearance = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaObjective = new javax.swing.JTextArea();
        labelPanel4 = new javax.swing.JPanel();
        imgPanel4 = new javax.swing.JPanel();
        jLabel154 = new javax.swing.JLabel();
        actionsPanel4 = new javax.swing.JPanel();
        newAction4 = new javax.swing.JButton();
        updateAction4 = new javax.swing.JButton();
        deleteAction4 = new javax.swing.JButton();
        clearAction4 = new javax.swing.JButton();
        spacerPanel4 = new javax.swing.JPanel();
        helpPanel4 = new javax.swing.JPanel();
        helpAction4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxBedsore = new javax.swing.JComboBox();
        jComboBoxDepth = new javax.swing.JComboBox();
        jComboBoxState = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        soresource = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBounds(new java.awt.Rectangle(100, 50, 0, 0));
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Category / Problem");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jLabel1, gridBagConstraints);

        jComboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-", "Sensory perception", "Moisture", "Activity", "Mobility", "Nutrition", "Friction and shear", "Psychological Care", "Medication" }));
        jComboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jComboBoxCategory, gridBagConstraints);

        jPanelAppearance.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Appearance / Activity", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanelAppearance.setLayout(new java.awt.GridBagLayout());

        jCheckBox1.setText("jCheckBox1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelAppearance.add(jCheckBox1, gridBagConstraints);

        jCheckBox4.setText("jCheckBox1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelAppearance.add(jCheckBox4, gridBagConstraints);

        jCheckBox6.setText("jCheckBox1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelAppearance.add(jCheckBox6, gridBagConstraints);

        jCheckBox7.setText("jCheckBox1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelAppearance.add(jCheckBox7, gridBagConstraints);

        jCheckBox2.setText("jCheckBox1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelAppearance.add(jCheckBox2, gridBagConstraints);

        jCheckBox3.setText("jCheckBox1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelAppearance.add(jCheckBox3, gridBagConstraints);

        jCheckBox5.setText("jCheckBox1");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelAppearance.add(jCheckBox5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 6.0;
        getContentPane().add(jPanelAppearance, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Intervention /Objective ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTextAreaObjective.setColumns(20);
        jTextAreaObjective.setRows(5);
        jTextAreaObjective.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaObjective);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 6.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        labelPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        labelPanel4.setLayout(new java.awt.GridBagLayout());

        imgPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        imgPanel4.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        imgPanel4.add(jLabel154, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        labelPanel4.add(imgPanel4, gridBagConstraints);

        actionsPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        actionsPanel4.setLayout(new java.awt.GridBagLayout());

        newAction4.setMnemonic('w');
        newAction4.setText("Save");
        newAction4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAction4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel4.add(newAction4, gridBagConstraints);

        updateAction4.setMnemonic('U');
        updateAction4.setText("Update");
        updateAction4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAction4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel4.add(updateAction4, gridBagConstraints);

        deleteAction4.setMnemonic('D');
        deleteAction4.setText("Clear");
        deleteAction4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAction4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel4.add(deleteAction4, gridBagConstraints);

        clearAction4.setMnemonic('C');
        clearAction4.setText("Close");
        clearAction4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAction4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel4.add(clearAction4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        actionsPanel4.add(spacerPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        labelPanel4.add(actionsPanel4, gridBagConstraints);

        helpPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Assistance"));
        helpPanel4.setLayout(new java.awt.GridBagLayout());

        helpAction4.setMnemonic('H');
        helpAction4.setText("Help");
        helpAction4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpAction4ActionPerformed(evt);
            }
        });
        helpPanel4.add(helpAction4, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        labelPanel4.add(helpPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(labelPanel4, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("BedSore Site");
        jPanel1.add(jLabel2, new java.awt.GridBagConstraints());

        jComboBoxBedsore.setEditable(true);
        jComboBoxBedsore.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-", "Sacral", "Gluteal", "Shoulder", "Occiput", "Flank", "Heel", "Ankle", "Knees", "Ears" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBoxBedsore, gridBagConstraints);

        jComboBoxDepth.setEditable(true);
        jComboBoxDepth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-", "Superficial", "Shallow", "Deep", "Bone Exposed" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBoxDepth, gridBagConstraints);

        jComboBoxState.setEditable(true);
        jComboBoxState.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-", "Clean", "Septic", "Necrotic" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBoxState, gridBagConstraints);

        jLabel3.setText("Depth");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("State");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel6.setText("Where Sore Dev.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(soresource, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 6.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("BedSore Protocol");
        jPanel3.add(jLabel5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoryActionPerformed
      // TODO add your handling code here:
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox7.setSelected(false);
        if(jComboBoxCategory.getSelectedIndex()==1){
            jTextAreaObjective.setText("Reduce Pressure on ankles and feet");
            
            jCheckBox1.setText("Use of sheep wool Boots");
            jCheckBox2.setText("Inspect feet and ankles daily elevate with foam appliances");
            jCheckBox1.show();
            jCheckBox2.show();

            jCheckBox3.hide();
            jCheckBox4.hide();
            jCheckBox5.hide();
            jCheckBox6.hide();
            jCheckBox7.hide();
            
            
        }else if(jComboBoxCategory.getSelectedIndex()==2){
            jTextAreaObjective.setText("Establish bowel and bladder program");
            jCheckBox1.setText("Use of urocodom");
            jCheckBox2.setText("Catheterize");
            jCheckBox3.setText("Provision of urinals and bedpans");
            jCheckBox4.setText("Change of wet linen immediately");
            jCheckBox5.setText("Apply barrier ointment to prevent skin from moisture");
            jCheckBox6.setText("Clean the skin gently after every incontinent episode");
            jCheckBox7.setText("Dry constantly moist skin");
            jCheckBox1.show();
            jCheckBox2.show();
            jCheckBox3.show();
            jCheckBox4.show();
            jCheckBox5.show();
            jCheckBox6.show();
            jCheckBox7.show();
            
            
        }else if(jComboBoxCategory.getSelectedIndex()==3){
            jTextAreaObjective.setText("Encourage increased activity");
            jCheckBox1.setText("Passive movement");
            jCheckBox2.setText("Provision of physiotherapy");
            jCheckBox1.show();
            jCheckBox2.show();
            
            jCheckBox3.hide();
            jCheckBox4.hide();
            jCheckBox5.hide();
            jCheckBox6.hide();
            jCheckBox7.hide();
           
        }else if(jComboBoxCategory.getSelectedIndex()==4){
            jTextAreaObjective.setText("Relieve pressure");
            jCheckBox1.setText("Two (2) hourly turning");
            jCheckBox2.setText("Use of ripple matress");
            jCheckBox3.setText("Use of soft pillows");
            jCheckBox4.setText("Use of sheep's wool");
            jCheckBox5.setText("Reduce pressure on heels");
            jCheckBox1.show();
            jCheckBox2.show();
            jCheckBox3.show();
            jCheckBox4.show();
            jCheckBox5.show();
            

            jCheckBox6.hide();
            jCheckBox7.hide();
            
            
        }else if(jComboBoxCategory.getSelectedIndex()==5){
            jTextAreaObjective.setText("Evaluate nutritional status");
            jCheckBox1.setText("Feeding regime by nutritionist");
            jCheckBox2.setText("Do lab assessment for the nutritional status");
            jCheckBox3.setText("Encourage patients to feed as per the regime");
            jCheckBox4.setText("Assist in the feeding if necessary");
            jCheckBox5.setText("Maintain input output");
            jCheckBox1.show();
            jCheckBox2.show();
            jCheckBox3.show();
            jCheckBox4.show();
            jCheckBox5.show();
            
            jCheckBox6.hide();
            jCheckBox7.hide();
           
        }else if(jComboBoxCategory.getSelectedIndex()==6){
            jTextAreaObjective.setText("Prevent injury on the tissues");
            jCheckBox1.setText("Use of trapeze bar for self assisted turning");
            jCheckBox2.setText("Elevate head of bed at less than 30 degrees to avoid sliding");
            jCheckBox3.setText("Avoid excessive rubbing of skin");
            jCheckBox4.setText("Use a moisturizer on dry skin and bony");
            jCheckBox5.setText("Protect from friction");
            jCheckBox1.show();
            jCheckBox2.show();
            jCheckBox3.show();
            jCheckBox4.show();
            jCheckBox5.show();
            
            
            jCheckBox6.hide();
            jCheckBox7.hide();
            
        }else if(jComboBoxCategory.getSelectedIndex()==7){
            jTextAreaObjective.setText("Avoid anxiety and gain full co-operation");
            jCheckBox1.setText("involve a counselor");
            jCheckBox2.setText("Educate patient/s on the condition");
            jCheckBox3.setText("Involve patient on his care");
            jCheckBox1.show();
            jCheckBox2.show();
            jCheckBox3.show();
            
            jCheckBox4.hide();
            jCheckBox5.hide();
            jCheckBox6.hide();
            jCheckBox7.hide();
            
        }else if(jComboBoxCategory.getSelectedIndex()==8){
            jTextAreaObjective.setText("Treatment of infections");
            jCheckBox1.setText("Treat all infections");
            jCheckBox1.show();
            
            jCheckBox2.hide();
            jCheckBox3.hide();
            jCheckBox4.hide();
            jCheckBox5.hide();
            jCheckBox6.hide();
            jCheckBox7.hide();
           
        }else if(jComboBoxCategory.getSelectedIndex()==0){
            jTextAreaObjective.setText("");
            jCheckBox1.hide();
            jCheckBox2.hide();
            jCheckBox3.hide();
            jCheckBox4.hide();
            jCheckBox5.hide();
            jCheckBox6.hide();
            jCheckBox7.hide();
            
        }
    }//GEN-LAST:event_jComboBoxCategoryActionPerformed
    private String getUser(){
         String user=null;
         try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12=stm12.executeQuery("select current_user ");
            while (rse12.next()){
                ///getting the user
                user = rse12.getObject(1).toString();
         }
                     }
         catch(final Exception es){
         System.out.println(es);
         
         }
         return user;
    }
    private void newAction4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAction4ActionPerformed
            activity=null;
        if(jComboBoxCategory.getSelectedIndex()==1){
            activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}
                    if(jCheckBox2.isSelected()==true){activity=activity.concat(","+jCheckBox2.getText());}
        }else if(jComboBoxCategory.getSelectedIndex()==2){
             activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}
                    if(jCheckBox2.isSelected()==true){activity=activity.concat(","+jCheckBox2.getText());}
                    if(jCheckBox3.isSelected()==true){activity=activity.concat(","+jCheckBox3.getText());}
                    if(jCheckBox4.isSelected()==true){activity=activity.concat(","+jCheckBox4.getText());}
                    if(jCheckBox5.isSelected()==true){activity=activity.concat(","+jCheckBox5.getText());}
                    if(jCheckBox6.isSelected()==true){activity=activity.concat(","+jCheckBox6.getText());}
                    if(jCheckBox7.isSelected()==true){activity=activity.concat(","+jCheckBox7.getText());}
                    
        }else if(jComboBoxCategory.getSelectedIndex()==3){
            activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}
                    if(jCheckBox2.isSelected()==true){activity=activity.concat(","+jCheckBox2.getText());}

        }else if(jComboBoxCategory.getSelectedIndex()==4){
            activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}
                    if(jCheckBox2.isSelected()==true){activity=activity.concat(","+jCheckBox2.getText());}
                    if(jCheckBox3.isSelected()==true){activity=activity.concat(","+jCheckBox3.getText());}
                    if(jCheckBox4.isSelected()==true){activity=activity.concat(","+jCheckBox4.getText());}
                    if(jCheckBox5.isSelected()==true){activity=activity.concat(","+jCheckBox5.getText());}

        }else if(jComboBoxCategory.getSelectedIndex()==5){
            activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}
                    if(jCheckBox2.isSelected()==true){activity=activity.concat(","+jCheckBox2.getText());}
                    if(jCheckBox3.isSelected()==true){activity=activity.concat(","+jCheckBox3.getText());}
                    if(jCheckBox4.isSelected()==true){activity=activity.concat(","+jCheckBox4.getText());}
                    if(jCheckBox5.isSelected()==true){activity=activity.concat(","+jCheckBox5.getText());}

        }else if(jComboBoxCategory.getSelectedIndex()==6){
            activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}
                    if(jCheckBox2.isSelected()==true){activity=activity.concat(","+jCheckBox2.getText());}
                    if(jCheckBox3.isSelected()==true){activity=activity.concat(","+jCheckBox3.getText());}
                    if(jCheckBox4.isSelected()==true){activity=activity.concat(","+jCheckBox4.getText());}
                    if(jCheckBox5.isSelected()==true){activity=activity.concat(","+jCheckBox5.getText());}


        }else if(jComboBoxCategory.getSelectedIndex()==7){
            activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}
                    if(jCheckBox2.isSelected()==true){activity=activity.concat(","+jCheckBox2.getText());}
                    if(jCheckBox3.isSelected()==true){activity=activity.concat(","+jCheckBox3.getText());}

        }else if(jComboBoxCategory.getSelectedIndex()==8){
            activity="";
                    if(jCheckBox1.isSelected()==true){activity=activity.concat(jCheckBox1.getText());}

          activity=jCheckBox1.getText();  
        }else if(jComboBoxCategory.getSelectedIndex()==0){
           activity=""; 
        }
        System.out.println(activity+","+patient_no+","+jTextAreaObjective.getText()+","+jComboBoxCategory.getSelectedItem().toString());
        
        try {
                                connectDB.setAutoCommit(false);
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into nursing.pressure_intervention ("
                             + "patient_id,problem,intervention,appearance,current_users,"
                             + "transaction_date,server_date,visit_id,site,state,"
                                        + "depth,bedsore_source"
                                        + ") values("
                                        + "?,upper(?),upper(?),upper(?),upper(?),"
                                        + "?,localtimestamp,?,?,?,?,?)");
                                pstmt.setObject(1,patient_no);
                                pstmt.setObject(2,jComboBoxCategory.getSelectedItem().toString());
                                pstmt.setObject(3,jTextAreaObjective.getText());
                                pstmt.setObject(4,activity);
                                pstmt.setObject(5,getUser());
                                pstmt.setDate(6,com.afrisoftech.lib.SQLDateFormat.getSQLDate(date));
                                pstmt.setObject(7,visit_id);
                                pstmt.setObject(8,jComboBoxBedsore.getSelectedItem().toString());
                                pstmt.setObject(9,jComboBoxState.getSelectedItem().toString());
                                pstmt.setObject(10,jComboBoxDepth.getSelectedItem().toString());
                                pstmt.setObject(11,soresource.getText().trim());
                             
                                pstmt.executeUpdate();
                                connectDB.commit();
                                connectDB.setAutoCommit(true);
                                deleteAction4.doClick();
                
                                javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                            }   catch(java.sql.SQLException sq){
                                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                try {
                                        connectDB.rollback();
                                    }catch (java.sql.SQLException sql){
                                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }
                
                            }   // TODO add your handling code here:
        //this.dispose();
    }//GEN-LAST:event_newAction4ActionPerformed

    private void updateAction4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAction4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateAction4ActionPerformed

    private void deleteAction4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAction4ActionPerformed
        jTextAreaObjective.setText("");
        soresource.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteAction4ActionPerformed

    private void clearAction4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAction4ActionPerformed
        this.dispose();
        // TODO add your handling code here:
        //         pstmt.setObject(1,txtFileNo.getText());
        //           pstmt.setObject(2,txtStaffId.getText());
        //           pstmt.setObject(3,txtFirstName.getText());
        //           pstmt.setObject(4,txtSecondName.getText());
        //           pstmt.setObject(5,txtSurName.getText());
        //           pstmt.setObject(6,cmbCallingName.getSelectedItem().toString());
        //           pstmt.setObject(7,txtMaidenName.getText());
        //           pstmt.setObject(8,FileName);
        //           pstmt.setDate(9,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dtOfBirth.getDate()));
        //           pstmt.setObject(10,txtPlaceOfBirth.getText());
        //           pstmt.setObject(11,cmbNationality.getSelectedItem().toString());
        //           pstmt.setObject(12,txtCurrentResidence.getText());
        //           pstmt.setObject(13,cmbEthnicity.getSelectedItem().toString());
        //           pstmt.setObject(14,txtNationalIdNo.getText());
        //           pstmt.setObject(15,txtNssfNo.getText());
        //           pstmt.setObject(16,txtKraPin.getText());
        //           pstmt.setObject(17,txtNhifNo.getText());
        //           pstmt.setObject(18,txtPassportNo.getText());
        //           pstmt.setObject(19,txtHandcupStatus.getText());
        //           pstmt.setObject(20,cmbGender.getSelectedItem().toString());
        //           pstmt.setObject(21,cmbMaritalStatus.getSelectedItem().toString());
        //           pstmt.setObject(22,cmbBloodGroup.getSelectedItem().toString());
        //           pstmt.setObject(23,cmbReligion.getSelectedItem().toString());
        //           pstmt.setObject(24,txtHeight.getText());
        //           pstmt.setObject(25,cmbWeight.getText());
        //           pstmt.setObject(26,txtMobile1.getText());
        //           txtMobile2.getText());
        //           txtTelNo.getText());
        //           txtEmail.getText());
        //           txtPostalAddress.getText());
        //           txtPostalCode.getText();
        //           txtPostalCity.getText();
        //           txtWebsite.getText();
    }//GEN-LAST:event_clearAction4ActionPerformed

    private void helpAction4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpAction4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_helpAction4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BedSoreAssesment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BedSoreAssesment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BedSoreAssesment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BedSoreAssesment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BedSoreAssesment dialog = new BedSoreAssesment(new javax.swing.JFrame(), true,connectDB,pConnDB,patient_no,date,visit_id);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                   
                  
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel4;
    private javax.swing.JButton clearAction4;
    private javax.swing.JButton deleteAction4;
    private javax.swing.JButton helpAction4;
    private javax.swing.JPanel helpPanel4;
    private javax.swing.JPanel imgPanel4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    public static javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JComboBox jComboBoxBedsore;
    private javax.swing.JComboBox jComboBoxCategory;
    private javax.swing.JComboBox jComboBoxDepth;
    private javax.swing.JComboBox jComboBoxState;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelAppearance;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaObjective;
    private javax.swing.JPanel labelPanel4;
    private javax.swing.JButton newAction4;
    private javax.swing.JTextField soresource;
    private javax.swing.JPanel spacerPanel4;
    private javax.swing.JButton updateAction4;
    // End of variables declaration//GEN-END:variables
}
