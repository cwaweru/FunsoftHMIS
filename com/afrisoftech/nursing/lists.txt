       class WaitingPatientsThread extends Thread {

        public WaitingPatientsThread() {
        }

        public void run() {
            while (true) {
                patientwaitinglist.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, first_name ||' '||second_name||' '||last_name AS patient_name FROM hp_patient_register WHERE waiting_patient = true and last_visit = current_date"));
                patientmonitoringlist.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, first_name ||' '||second_name||' '||last_name AS patient_name FROM hp_patient_register WHERE waiting_patient = true and last_visit = current_date"));
              
                try {
                    Thread.sleep(15000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(WaitingList.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private Double fluidChart(){
        //get input
    Double s=0.0;
                try{
                //getting details
                    connectDB.setAutoCommit(false);
                    //inputs
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12=stm12.executeQuery("select * from nursing.fluid_chart_input where patient_id='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"'"); 
            //java.sql.ResultSet rse125=stm12.executeQuery("select iv_type as Iv_Type,iv_amount as Iv_Amount,oral_type as Oral_Type,oral_amount as Oral_Amount,naso_gastric as Naso_Gastric,peg_feed as Peg_feed from nursing.fluid_chart_input where patient_id='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"'");      
            Double Total=0.0;        
            while (rse12.next()){
                ///getting the user
                Double subTotal;
                subTotal=Double.parseDouble(rse12.getString("iv_amount"))+
               Double.parseDouble(rse12.getString("oral_amount"))+
                               Double.parseDouble(rse12.getString("naso_gastric"))+
                                       Double.parseDouble(rse12.getString("peg_feed"));
                Total=Total+subTotal;
         }
                //outputs
             java.sql.Statement stm123 = connectDB.createStatement();
            java.sql.ResultSet rse123=stm123.executeQuery("select * from nursing.fluid_chart_output where patient_no='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"'"); 
                  Double Totals=0.0;        
            while (rse123.next()){
                ///getting the user
                Double subTotal;
                subTotal=Double.parseDouble(rse123.getString("urine_amount"))+
                            Double.parseDouble(rse123.getString("ng_sanction"))+
                             Double.parseDouble(rse123.getString("vomitus"))+
                               Double.parseDouble(rse123.getString("drain_one_amount"))+
                               Double.parseDouble(rse123.getString("drain_two_amount"))+
                               Double.parseDouble(rse123.getString("drain_three_amount"))+
                              Double.parseDouble(rse123.getString("drain_four_amount"))+
                        Double.parseDouble(rse123.getString("drain_five_amount"));
                Totals=Totals+subTotal;
         }
//            totalIntake.setText(Double.toString(Total));
//            totalOutput.setText(Double.toString(Totals));
             //   totalBalance.setText(Double.toString(Total-Totals));
                s=Total-Totals;
            connectDB.commit();
            connectDB.setAutoCommit(true);          
         }
         
         catch(final Exception es){
         System.out.println(es);
         
         }
                
                return s;
    }

/////occupancy 
 if( nursingTabbedPane.getTitleAt(5).equalsIgnoreCase("OCCUPANCY")){
           System.out.println("the tabbed component is "+nursingTabbedPane.getTitleAt(5));
           occupancytable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, patient_name, admission_reason, ward,bed_no, wing,reffered_from, date_admitted, admission_no,invoice_no,diagnosed  FROM hp_admission where discharge=false;"));
           
       }

///////bado occupancy

    private void currentOccupRbtnItemStateChanged(java.awt.event.ItemEvent evt) {                                                  
        occupancytable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, patient_name, admission_reason, ward,bed_no, wing,reffered_from, date_admitted, admission_no,invoice_no,diagnosed  FROM hp_admission where discharge=false;"));
          
    }                                                 

    private void tobemonitoredOccupItemStateChanged(java.awt.event.ItemEvent evt) {                                                    
        
         occupancytable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, patient_name, admission_reason, ward,bed_no, wing,reffered_from, date_admitted, admission_no,invoice_no,diagnosed  FROM hp_admission where discharge=false;"));
          
    }                                                   

    private void tobeTransfRbtnItemStateChanged(java.awt.event.ItemEvent evt) {                                                
       occupancytable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, patient_name, transfered_from, bed_no_transfered_from FROM hp_ward_to_ward_transfer where date::DATE > (select current_timestamp(0)::date -7);"));
     occupancyquery="SELECT h.patient_no,(upper(h.first_name||' '||h.second_name||' '||h.last_name)) as Name,h.year_of_birth,h.sex,h.pat_marital_status,h.residence_county,h.nok,h.nok_telno,wd.transfered_to, wd.bed_no_transfered_to, wd.wing, wd.authorising_doctor,wd.patient_no,wd.reason_for_transfer, wd.date, wd.pat_age, wd.gender from (SELECT patient_no,transfered_to, bed_no_transfered_to, wing, authorising_doctor,reason_for_transfer, date, pat_age, gender  FROM hp_ward_to_ward_transfer where  date::DATE > (select current_timestamp(0)::date -7)) as wd,\n" +
" hp_patient_register as h where h.patient_no=wd.patient_no and wd.patient_no=";
       

       
       
    }                                               

    private void tobeRecievedRbtnItemStateChanged(java.awt.event.ItemEvent evt) {                                                  
        occupancytable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, patient_name, admission_reason, ward,bed_no, wing,reffered_from, date_admitted, admission_no,invoice_no,diagnosed  FROM hp_admission where discharge=false;"));
        occupancyquery="SELECT h.patient_no,(upper(h.first_name||' '||h.second_name||' '||h.last_name)) as Name,h.year_of_birth,h.sex,h.pat_marital_status,h.residence_county,h.nok,h.nok_telno,wd.transfered_to, wd.bed_no_transfered_to, wd.wing, wd.authorising_doctor,wd.patient_no,wd.reason_for_transfer, wd.date, wd.pat_age, wd.gender from (SELECT patient_no,transfered_to, bed_no_transfered_to, wing, authorising_doctor,reason_for_transfer, date, pat_age, gender,received_status  FROM hp_ward_to_ward_transfer where  date::DATE > (select current_timestamp(0)::date -7) and received_status=FALSE) as wd,\n" +
" hp_patient_register as h where h.patient_no=wd.patient_no and wd.patient_no="; 
    }             





//////////////////////////////////////occupancy table mouse clicked


    private void occupancytableMouseClicked(java.awt.event.MouseEvent evt) {                                            
               //populating things from  the waiting list
        int getRow=patientwaitinglist.getSelectedRow();
        
        //getting the patient no
       String str=patientwaitinglist.getValueAt(getRow,0).toString();
       

        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement(occupancyquery+"'"+str+"'");
            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
             nameNoTxt.setText(str);
             String txtarea="NAME: "+rset.getString(2)+"\n Y.O.B: "+rset.getString(3)+" SEX: "+rset.getString(4) +" MARITAL STATUS: "+rset.getString(5)+"\n"
             + "RESIDENCE: "+rset.getString(6)+" N.O.K: "+rset.getString(7)+" - "+rset.getString(8);
             jTextArea2.setText(txtarea);
             ///transfered_to, bed_no_transfered_to, wing, authorising_doctor,reason_for_transfer, date, pat_age, gender
             String txtarea8="transfered_to:-"+rset.getString(9)+"\n  "
                     + " bed_no_transfered_to:-"+rset.getString(10)+"\n wing:-"+rset.getString(11)+" \n"
                     + " authorising_doctor:-"+rset.getString(12)+"\npatient_no:-"+rset.getString(13)+"\n\n" +
                                " reason_for_transfer:-"+rset.getString(14)+"\n date:-"+rset.getString(15)+"\n "
                     + " pat_age:-"+rset.getString(16)+"\n gender:-"+rset.getString(2)+"\n";
             jTextArea8.setText(txtarea8);
             setTitle(" \t CASUALTY Nursing Now Tracking : "+rset.getString(2));
             
            }
            
            

        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
        }

    }                                           


///////////////patient monitoring mouse clicked
    private void patientmonitoringlistMouseClicked(java.awt.event.MouseEvent evt) {                                                   
         //populating things from  the waiting list
        int getRow=patientwaitinglist.getSelectedRow();
        
        //getting the patient no
       String str=patientwaitinglist.getValueAt(getRow,0).toString();

        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as Name,"
                    + "year_of_birth,sex,pat_marital_status,residence_county,nok,nok_telno from hp_patient_register where patient_no='"+str+"'");
            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
             nameNoTxt.setText(str);
             String txtarea="NAME: "+rset.getString(2)+"\n Y.O.B: "+rset.getString(3)+" SEX: "+rset.getString(4) +" MARITAL STATUS: "+rset.getString(5)+"\n"
             + "RESIDENCE: "+rset.getString(6)+" N.O.K: "+rset.getString(7)+" - "+rset.getString(8);
             jTextArea2.setText(txtarea);
             setTitle(" \t CASUALTY Nursing Now Monitoring :-"+rset.getString(2));
             
            }
            
            

        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
        }
    }


/////////////////////patient waiting list
 private void patientwaitinglistMouseClicked(java.awt.event.MouseEvent evt) {                                                
        //populating things from  the waiting list
        int getRow=patientwaitinglist.getSelectedRow();
        
        //getting the patient no
       String str=patientwaitinglist.getValueAt(getRow,0).toString();

        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as Name,"
                    + "year_of_birth,sex,pat_marital_status,residence_county,nok,nok_telno from hp_patient_register where patient_no='"+str+"'");
            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
             nameNoTxt.setText(str);
             String txtarea="NAME: "+rset.getString(2)+"\n Y.O.B: "+rset.getString(3)+" SEX: "+rset.getString(4) +" MARITAL STATUS: "+rset.getString(5)+"\n"
             + "RESIDENCE: "+rset.getString(6)+" N.O.K: "+rset.getString(7)+" - "+rset.getString(8);
             jTextArea2.setText(txtarea);
             setTitle(" \t CASUALTY Nursing Now Tracking : "+rset.getString(2));
             
            }
            
            

        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
        }

    }                                               

////////
////   private void fluidChart2(String databaseDate){
//        //get input
//    
//                try{
//                //getting details
//                    connectDB.setAutoCommit(false);
//                    //inputs
//            java.sql.Statement stm12 = connectDB.createStatement();
//            java.sql.ResultSet rse12=stm12.executeQuery("select * from nursing.fluid_chart_input where patient_id='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"'"); 
//            //java.sql.ResultSet rse125=stm12.executeQuery("select iv_type as Iv_Type,iv_amount as Iv_Amount,oral_type as Oral_Type,oral_amount as Oral_Amount,naso_gastric as Naso_Gastric,peg_feed as Peg_feed from nursing.fluid_chart_input where patient_id='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"'");      
//            Double Total=0.0;        
//            while (rse12.next()){
//                ///getting the user
//                Double subTotal;
//                subTotal=Double.parseDouble(rse12.getString("iv_amount"))+
//               Double.parseDouble(rse12.getString("oral_amount"))+
//                               Double.parseDouble(rse12.getString("naso_gastric"))+
//                                       Double.parseDouble(rse12.getString("peg_feed"));
//                Total=Total+subTotal;
//         }
//                //outputs
//             java.sql.Statement stm123 = connectDB.createStatement();
//            java.sql.ResultSet rse123=stm123.executeQuery("select * from nursing.fluid_chart_output where patient_no='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"'"); 
//                  Double Totals=0.0;        
//            while (rse123.next()){
//                ///getting the user
//                Double subTotal;
//                subTotal=Double.parseDouble(rse123.getString("urine_amount"))+
//                            Double.parseDouble(rse123.getString("ng_sanction"))+
//                             Double.parseDouble(rse123.getString("vomitus"))+
//                               Double.parseDouble(rse123.getString("drain_one_amount"))+
//                               Double.parseDouble(rse123.getString("drain_two_amount"))+
//                               Double.parseDouble(rse123.getString("drain_three_amount"))+
//                              Double.parseDouble(rse123.getString("drain_four_amount"))+
//                        Double.parseDouble(rse123.getString("drain_five_amount"));
//                Totals=Totals+subTotal;
//         }
//            totalIntake.setText(Double.toString(Total));
//            totalOutput.setText(Double.toString(Totals));
//                totalBalance.setText(Double.toString(Total-Totals));
//               
//                //update tables
//                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE nursing.fluid_chart_input SET "
//                                + "cumulative= ?,"
//                                
//                                + "where patient_id='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"' AND transaction_date='"+databaseDate+"'");
//
//                        pstmt.setObject(1,Double.toString(Total-Totals));
//                        pstmt.executeUpdate();
//                //update tables
//                        java.sql.PreparedStatement pstmts = connectDB.prepareStatement("UPDATE nursing.fluid_chart_output SET "
//                                + "cumulative= ?,"
//                                
//                                + "where patient_no='"+nameNoTxt.getText()+"' AND visit_id='"+visitId+"' AND transaction_date='"+databaseDate+"'");
//
//                        pstmts.setObject(1,Double.toString(Total-Totals));
//                        pstmts.executeUpdate();
//            connectDB.commit();
//            connectDB.setAutoCommit(true);          
//         }
//         
//         catch(final Exception es){
//         System.out.println(es);
//         
//         }
//    }
