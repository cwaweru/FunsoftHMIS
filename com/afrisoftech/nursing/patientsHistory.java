/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.nursing;

import com.afrisoftech.lib.DBObject;
import static com.afrisoftech.nursing.BedSoreAssesment.date;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author system
 */


public class patientsHistory extends javax.swing.JDialog {
public static java.sql.Connection connectDB = null;
public static  org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
Boolean CursorMovedOut=false;

    /**
     * Creates new form patientsHistory
     */
       com.afrisoftech.lib.DBObject dbObject;
    public static String patient_no=null;
    String trialpat_no= "789889";
    String trialvisit_id= "789889";
    String trialdated= "789889";
    private static String visitId=null;
    public static java.util.Date  dated;
    private static String ward=null,Gender=null;
    public patientsHistory(java.awt.Frame parent, boolean modal,java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB,String patient,java.util.Date  Date,String visitid,String Ward ,String gender) {
        ward=Ward;
        Gender=gender;
        connectDB = connDb;
        pConnDB = pconnDB;
        initComponents();
           dbObject = new com.afrisoftech.lib.DBObject();
        patient_no=patient;
        dated=Date;
        visitId = visitid;
    }
    java.lang.String  stroke,epilepsy,anxiety,bp,chestpain,heartdisease,rheumatic,ankles,breathing,specifybreathing,hmeoxygen,
            chronic,asmatic,kidney,gastric,menstrual,breastfeeding,artificial,injury,diabetic,socialhistory,difficultyin,
            hepatitis,disorder,transfusion,clots,tendency,illness,organ,alcohol,smokes,eversmoked,difficultybreathing,alergic = "";
    java.lang.String typeofaccident,mode_of_arrival,status = "";
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        buttonGroup12 = new javax.swing.ButtonGroup();
        buttonGroup13 = new javax.swing.ButtonGroup();
        buttonGroup14 = new javax.swing.ButtonGroup();
        buttonGroup15 = new javax.swing.ButtonGroup();
        buttonGroup16 = new javax.swing.ButtonGroup();
        buttonGroup17 = new javax.swing.ButtonGroup();
        buttonGroup18 = new javax.swing.ButtonGroup();
        buttonGroup19 = new javax.swing.ButtonGroup();
        buttonGroup20 = new javax.swing.ButtonGroup();
        buttonGroup21 = new javax.swing.ButtonGroup();
        buttonGroup22 = new javax.swing.ButtonGroup();
        buttonGroup23 = new javax.swing.ButtonGroup();
        buttonGroup24 = new javax.swing.ButtonGroup();
        buttonGroup25 = new javax.swing.ButtonGroup();
        buttonGroup26 = new javax.swing.ButtonGroup();
        buttonGroup27 = new javax.swing.ButtonGroup();
        buttonGroup28 = new javax.swing.ButtonGroup();
        buttonGroup29 = new javax.swing.ButtonGroup();
        buttonGroup30 = new javax.swing.ButtonGroup();
        buttonGroup31 = new javax.swing.ButtonGroup();
        buttonGroup32 = new javax.swing.ButtonGroup();
        buttonGroup33 = new javax.swing.ButtonGroup();
        paneAll = new javax.swing.JPanel();
        tabbedpaneAll = new javax.swing.JTabbedPane();
        globalpane = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        patientreligion = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jLabel46 = new javax.swing.JLabel();
        patientreligiontxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel77 = new javax.swing.JPanel();
        saveGeneralHist = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        generalclose = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        illnesstxt = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        illnesswhentxt = new javax.swing.JTextField();
        jPanel35 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        organtxt1 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        organwhentxt1 = new javax.swing.JTextField();
        jPanel36 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        alchoholtxt = new javax.swing.JTextField();
        jPanel37 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        smokestxt = new javax.swing.JTextField();
        jPanel38 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        stoppedtxt = new javax.swing.JTextField();
        jPanel68 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jCheckBox40 = new javax.swing.JCheckBox();
        jCheckBox82 = new javax.swing.JCheckBox();
        jPanel20 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jCheckBox49 = new javax.swing.JCheckBox();
        jCheckBox32 = new javax.swing.JCheckBox();
        jPanel69 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jCheckBox42 = new javax.swing.JCheckBox();
        jCheckBox41 = new javax.swing.JCheckBox();
        jPanel70 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        jCheckBox43 = new javax.swing.JCheckBox();
        jCheckBox83 = new javax.swing.JCheckBox();
        jPanel71 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jCheckBox44 = new javax.swing.JCheckBox();
        jCheckBox84 = new javax.swing.JCheckBox();
        jPanel72 = new javax.swing.JPanel();
        lagej1 = new javax.swing.JLabel();
        jCheckBox45 = new javax.swing.JCheckBox();
        jCheckBox85 = new javax.swing.JCheckBox();
        alergictxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        otherscasualty = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        patientriskcmb = new javax.swing.JComboBox();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        valuablescmb = new javax.swing.JComboBox();
        medicationcmb = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        durationtxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        amounttxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        colortxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        describetxt = new javax.swing.JTextField();
        jPanel51 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox58 = new javax.swing.JCheckBox();
        jPanel52 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jCheckBox59 = new javax.swing.JCheckBox();
        jCheckBox60 = new javax.swing.JCheckBox();
        jPanel53 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        sttingchk = new javax.swing.JCheckBox();
        walkingchk = new javax.swing.JCheckBox();
        lyindownchk = new javax.swing.JCheckBox();
        standingchk = new javax.swing.JCheckBox();
        otherdifficulty = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel54 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox66 = new javax.swing.JCheckBox();
        specifyhmeoxygen = new javax.swing.JTextField();
        jPanel55 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jCheckBox65 = new javax.swing.JCheckBox();
        jCheckBox67 = new javax.swing.JCheckBox();
        asmatictxt = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        describepaintxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        describedatetxt = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        describediseasetxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        describediseasedatetxt = new javax.swing.JTextField();
        jPanel46 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jCheckBox46 = new javax.swing.JCheckBox();
        jCheckBox51 = new javax.swing.JCheckBox();
        bptxt1 = new javax.swing.JTextField();
        jPanel47 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jCheckBox52 = new javax.swing.JCheckBox();
        jCheckBox53 = new javax.swing.JCheckBox();
        jPanel48 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jCheckBox54 = new javax.swing.JCheckBox();
        jCheckBox55 = new javax.swing.JCheckBox();
        jPanel49 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox56 = new javax.swing.JCheckBox();
        rheumatictxt = new javax.swing.JTextField();
        jPanel50 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox57 = new javax.swing.JCheckBox();
        jPanel41 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jPanel43 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        epilepsywhentxt1 = new javax.swing.JTextField();
        epilepsytxt1 = new javax.swing.JTextField();
        jPanel44 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        stroketxt1 = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        strokeyes = new javax.swing.JCheckBox();
        jCheckBox30 = new javax.swing.JCheckBox();
        jPanel19 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jCheckBox50 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jPanel25 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jCheckBox48 = new javax.swing.JCheckBox();
        jCheckBox33 = new javax.swing.JCheckBox();
        emotionaltxt1 = new javax.swing.JTextField();
        jPanel45 = new javax.swing.JPanel();
        saveRespiratory = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        respiratoryclose = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        gastricwhentxt = new javax.swing.JTextField();
        gastrictxt = new javax.swing.JTextField();
        jPanel57 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jCheckBox39 = new javax.swing.JCheckBox();
        jCheckBox69 = new javax.swing.JCheckBox();
        jPanel24 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        weekstxt = new javax.swing.JTextField();
        jPanel58 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jCheckBox70 = new javax.swing.JCheckBox();
        jCheckBox71 = new javax.swing.JCheckBox();
        jPanel59 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jCheckBox35 = new javax.swing.JCheckBox();
        jCheckBox72 = new javax.swing.JCheckBox();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        kidneywhentxt = new javax.swing.JTextField();
        kidneytxt = new javax.swing.JTextField();
        jPanel56 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jCheckBox34 = new javax.swing.JCheckBox();
        jCheckBox68 = new javax.swing.JCheckBox();
        jPanel73 = new javax.swing.JPanel();
        saveGastric = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        gastricClose = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        artificialtxtarea = new javax.swing.JTextArea();
        jPanel29 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        backinjurytxtarea = new javax.swing.JTextArea();
        jPanel60 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jCheckBox37 = new javax.swing.JCheckBox();
        jCheckBox36 = new javax.swing.JCheckBox();
        jPanel61 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jCheckBox38 = new javax.swing.JCheckBox();
        jCheckBox73 = new javax.swing.JCheckBox();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        hepatitistxt = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        hepatitiswhentxt = new javax.swing.JTextField();
        jPanel62 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jCheckBox74 = new javax.swing.JCheckBox();
        jCheckBox75 = new javax.swing.JCheckBox();
        diabetestxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel63 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jCheckBox76 = new javax.swing.JCheckBox();
        jCheckBox77 = new javax.swing.JCheckBox();
        jPanel74 = new javax.swing.JPanel();
        saveMuscular = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        muscularclose = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        specifybloodtxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        whenbloodtxt = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        specifyclots = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        whenclotstxt = new javax.swing.JTextField();
        jPanel64 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox78 = new javax.swing.JCheckBox();
        jPanel65 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jCheckBox28 = new javax.swing.JCheckBox();
        jCheckBox79 = new javax.swing.JCheckBox();
        transfussiontxt = new javax.swing.JTextField();
        jPanel66 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jCheckBox29 = new javax.swing.JCheckBox();
        jCheckBox80 = new javax.swing.JCheckBox();
        jPanel67 = new javax.swing.JPanel();
        lagej = new javax.swing.JLabel();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox81 = new javax.swing.JCheckBox();
        tendencytxt = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicalIlness = new javax.swing.JTable();
        jPanel75 = new javax.swing.JPanel();
        saveBlood = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        bloodpast = new javax.swing.JButton();
        jPanel39 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        medicationTable = new javax.swing.JTable();
        jPanel76 = new javax.swing.JPanel();
        saveMedication = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        medicationclose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Patient History");
        setAlwaysOnTop(true);
        setBounds(new java.awt.Rectangle(200, 15, 0, 0));
        setMinimumSize(new java.awt.Dimension(1059, 653));
        setPreferredSize(new java.awt.Dimension(1059, 653));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        paneAll.setMinimumSize(new java.awt.Dimension(774, 555));
        paneAll.setPreferredSize(new java.awt.Dimension(774, 555));
        paneAll.setLayout(new java.awt.GridBagLayout());

        tabbedpaneAll.setBackground(new java.awt.Color(255, 255, 255));
        tabbedpaneAll.setForeground(new java.awt.Color(204, 0, 0));
        tabbedpaneAll.setFont(new java.awt.Font("Droid Serif", 1, 13)); // NOI18N
        tabbedpaneAll.setMinimumSize(new java.awt.Dimension(831, 568));
        tabbedpaneAll.setPreferredSize(new java.awt.Dimension(831, 568));
        tabbedpaneAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbedpaneAllMouseClicked(evt);
            }
        });

        globalpane.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBackground(new java.awt.Color(228, 226, 226));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Social History", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        patientreligion.setBackground(new java.awt.Color(228, 226, 226));
        patientreligion.setText("Patient has Religious/Cultural  needs");
        patientreligion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                patientreligionItemStateChanged(evt);
            }
        });
        patientreligion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientreligionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel4.add(patientreligion, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(228, 226, 226));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jCheckBox4.setBackground(new java.awt.Color(228, 226, 226));
        jCheckBox4.setText("Hearing");
        jCheckBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox4ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jCheckBox4, gridBagConstraints);

        jCheckBox5.setBackground(new java.awt.Color(228, 226, 226));
        jCheckBox5.setText("Speech");
        jCheckBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox5ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jCheckBox5, gridBagConstraints);

        jCheckBox6.setBackground(new java.awt.Color(228, 226, 226));
        jCheckBox6.setText("Touching");
        jCheckBox6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox6ItemStateChanged(evt);
            }
        });
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jCheckBox6, gridBagConstraints);

        jCheckBox7.setBackground(new java.awt.Color(228, 226, 226));
        jCheckBox7.setText("Vision");
        jCheckBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox7ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jCheckBox7, gridBagConstraints);

        jCheckBox8.setBackground(new java.awt.Color(228, 226, 226));
        jCheckBox8.setText("None");
        jCheckBox8.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox8ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jCheckBox8, gridBagConstraints);

        jLabel46.setForeground(new java.awt.Color(204, 0, 0));
        jLabel46.setText("Difficulty in:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jLabel46, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        jPanel4.add(jPanel5, gridBagConstraints);

        patientreligiontxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.3;
        jPanel4.add(patientreligiontxt, gridBagConstraints);

        jLabel13.setText("Specify");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        globalpane.add(jPanel4, gridBagConstraints);

        jPanel77.setBackground(new java.awt.Color(228, 226, 226));
        jPanel77.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));
        jPanel77.setLayout(new java.awt.GridBagLayout());

        saveGeneralHist.setText("SAVE");
        saveGeneralHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGeneralHistActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel77.add(saveGeneralHist, gridBagConstraints);

        jButton14.setText("EDIT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel77.add(jButton14, gridBagConstraints);

        generalclose.setText("Close");
        generalclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generalcloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel77.add(generalclose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        globalpane.add(jPanel77, gridBagConstraints);

        jPanel33.setBackground(new java.awt.Color(228, 226, 226));
        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "General History", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel33.setLayout(new java.awt.GridBagLayout());

        jPanel34.setBackground(new java.awt.Color(228, 226, 226));
        jPanel34.setLayout(new java.awt.GridBagLayout());

        jLabel36.setText("Specify");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel34.add(jLabel36, gridBagConstraints);

        illnesstxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel34.add(illnesstxt, gridBagConstraints);

        jLabel37.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel34.add(jLabel37, gridBagConstraints);

        illnesswhentxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel34.add(illnesswhentxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel34, gridBagConstraints);

        jPanel35.setBackground(new java.awt.Color(228, 226, 226));
        jPanel35.setLayout(new java.awt.GridBagLayout());

        jLabel38.setText("Describe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel35.add(jLabel38, gridBagConstraints);

        organtxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel35.add(organtxt1, gridBagConstraints);

        jLabel39.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel35.add(jLabel39, gridBagConstraints);

        organwhentxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel35.add(organwhentxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel35, gridBagConstraints);

        jPanel36.setBackground(new java.awt.Color(228, 226, 226));
        jPanel36.setLayout(new java.awt.GridBagLayout());

        jLabel40.setText("How much a day?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel36.add(jLabel40, gridBagConstraints);

        alchoholtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel36.add(alchoholtxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel36, gridBagConstraints);

        jPanel37.setBackground(new java.awt.Color(228, 226, 226));
        jPanel37.setLayout(new java.awt.GridBagLayout());

        jLabel41.setText("How Long");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel37.add(jLabel41, gridBagConstraints);

        smokestxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel37.add(smokestxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel37, gridBagConstraints);

        jPanel38.setBackground(new java.awt.Color(228, 226, 226));
        jPanel38.setLayout(new java.awt.GridBagLayout());

        jLabel42.setText("When did you stop?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel38.add(jLabel42, gridBagConstraints);

        stoppedtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel38.add(stoppedtxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel38, gridBagConstraints);

        jPanel68.setBackground(new java.awt.Color(228, 226, 226));
        jPanel68.setLayout(new java.awt.GridBagLayout());

        jLabel68.setText("Other serious illness or disabling condition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel68.add(jLabel68, gridBagConstraints);

        jCheckBox40.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup25.add(jCheckBox40);
        jCheckBox40.setText("Yes");
        jCheckBox40.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox40ItemStateChanged(evt);
            }
        });
        jCheckBox40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox40ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel68.add(jCheckBox40, gridBagConstraints);

        jCheckBox82.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup25.add(jCheckBox82);
        jCheckBox82.setText("No");
        jCheckBox82.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox82ItemStateChanged(evt);
            }
        });
        jCheckBox82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox82ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel68.add(jCheckBox82, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel68, gridBagConstraints);

        jPanel20.setBackground(new java.awt.Color(228, 226, 226));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        jLabel27.setText("Any Organ Transplant");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel20.add(jLabel27, gridBagConstraints);

        jCheckBox49.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup26.add(jCheckBox49);
        jCheckBox49.setText("Yes");
        jCheckBox49.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox49ItemStateChanged(evt);
            }
        });
        jCheckBox49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox49ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel20.add(jCheckBox49, gridBagConstraints);

        jCheckBox32.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup26.add(jCheckBox32);
        jCheckBox32.setText("No");
        jCheckBox32.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox32ItemStateChanged(evt);
            }
        });
        jCheckBox32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox32ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel20.add(jCheckBox32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel20, gridBagConstraints);

        jPanel69.setBackground(new java.awt.Color(228, 226, 226));
        jPanel69.setLayout(new java.awt.GridBagLayout());

        jLabel69.setText("Drinks alcohol");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel69.add(jLabel69, gridBagConstraints);

        jCheckBox42.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup27.add(jCheckBox42);
        jCheckBox42.setText("Yes");
        jCheckBox42.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox42ItemStateChanged(evt);
            }
        });
        jCheckBox42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox42ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel69.add(jCheckBox42, gridBagConstraints);

        jCheckBox41.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup27.add(jCheckBox41);
        jCheckBox41.setText("No");
        jCheckBox41.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox41ItemStateChanged(evt);
            }
        });
        jCheckBox41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox41ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel69.add(jCheckBox41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel69, gridBagConstraints);

        jPanel70.setBackground(new java.awt.Color(228, 226, 226));
        jPanel70.setLayout(new java.awt.GridBagLayout());

        jLabel70.setText("Does Smoke?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel70.add(jLabel70, gridBagConstraints);

        jCheckBox43.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup28.add(jCheckBox43);
        jCheckBox43.setText("Yes");
        jCheckBox43.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox43ItemStateChanged(evt);
            }
        });
        jCheckBox43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel70.add(jCheckBox43, gridBagConstraints);

        jCheckBox83.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup28.add(jCheckBox83);
        jCheckBox83.setText("No");
        jCheckBox83.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox83ItemStateChanged(evt);
            }
        });
        jCheckBox83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox83ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel70.add(jCheckBox83, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel70, gridBagConstraints);

        jPanel71.setBackground(new java.awt.Color(228, 226, 226));
        jPanel71.setLayout(new java.awt.GridBagLayout());

        jLabel71.setText("Ever Smoked");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel71.add(jLabel71, gridBagConstraints);

        jCheckBox44.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup29.add(jCheckBox44);
        jCheckBox44.setText("Yes");
        jCheckBox44.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox44ItemStateChanged(evt);
            }
        });
        jCheckBox44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox44ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel71.add(jCheckBox44, gridBagConstraints);

        jCheckBox84.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup29.add(jCheckBox84);
        jCheckBox84.setText("No");
        jCheckBox84.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox84ItemStateChanged(evt);
            }
        });
        jCheckBox84.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox84ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel71.add(jCheckBox84, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel71, gridBagConstraints);

        jPanel72.setBackground(new java.awt.Color(228, 226, 226));
        jPanel72.setLayout(new java.awt.GridBagLayout());

        lagej1.setText(" Alergic (food/drinks/drugs)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel72.add(lagej1, gridBagConstraints);

        jCheckBox45.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup30.add(jCheckBox45);
        jCheckBox45.setText("Yes");
        jCheckBox45.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox45ItemStateChanged(evt);
            }
        });
        jCheckBox45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox45ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel72.add(jCheckBox45, gridBagConstraints);

        jCheckBox85.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup30.add(jCheckBox85);
        jCheckBox85.setText("No");
        jCheckBox85.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox85ItemStateChanged(evt);
            }
        });
        jCheckBox85.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox85ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel72.add(jCheckBox85, gridBagConstraints);

        alergictxt.setEditable(false);
        alergictxt.setText("Specify When");
        alergictxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                alergictxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel72.add(alergictxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel72, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(228, 226, 226));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), this.ward, javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel12.setBackground(new java.awt.Color(228, 226, 226));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Type of Accident:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel12.add(jLabel5, gridBagConstraints);

        jCheckBox2.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup31.add(jCheckBox2);
        jCheckBox2.setText("RTA");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel12.add(jCheckBox2, gridBagConstraints);

        jCheckBox3.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup31.add(jCheckBox3);
        jCheckBox3.setText("Cyclist");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel12.add(jCheckBox3, gridBagConstraints);

        jCheckBox9.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup31.add(jCheckBox9);
        jCheckBox9.setText("Assault");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel12.add(jCheckBox9, gridBagConstraints);

        jCheckBox10.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup31.add(jCheckBox10);
        jCheckBox10.setText("Pedestrian");
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel12.add(jCheckBox10, gridBagConstraints);

        jCheckBox11.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup31.add(jCheckBox11);
        jCheckBox11.setText("Burns");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel12.add(jCheckBox11, gridBagConstraints);

        jCheckBox12.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup31.add(jCheckBox12);
        jCheckBox12.setText("Self INflicted");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel12.add(jCheckBox12, gridBagConstraints);

        otherscasualty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherscasualtyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel12.add(otherscasualty, gridBagConstraints);

        jLabel9.setText("Others:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        jPanel12.add(jLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel12, gridBagConstraints);

        jPanel40.setBackground(new java.awt.Color(228, 226, 226));
        jPanel40.setLayout(new java.awt.GridBagLayout());

        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("Mode of Arrival:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jLabel6, gridBagConstraints);

        jCheckBox14.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup32.add(jCheckBox14);
        jCheckBox14.setText("Walking");
        jCheckBox14.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox14ItemStateChanged(evt);
            }
        });
        jCheckBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jCheckBox14, gridBagConstraints);

        jCheckBox16.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup32.add(jCheckBox16);
        jCheckBox16.setText("Strecher");
        jCheckBox16.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox16ItemStateChanged(evt);
            }
        });
        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jCheckBox16, gridBagConstraints);

        jCheckBox17.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup32.add(jCheckBox17);
        jCheckBox17.setText("Wheel Chair");
        jCheckBox17.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox17ItemStateChanged(evt);
            }
        });
        jCheckBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jCheckBox17, gridBagConstraints);

        jCheckBox18.setBackground(new java.awt.Color(228, 226, 226));
        jCheckBox18.setText("Carried");
        jCheckBox18.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox18ItemStateChanged(evt);
            }
        });
        jCheckBox18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jCheckBox18, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(204, 0, 0));
        jLabel7.setText("Status:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jLabel7, gridBagConstraints);

        jCheckBox20.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup33.add(jCheckBox20);
        jCheckBox20.setText("Conscious");
        jCheckBox20.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox20ItemStateChanged(evt);
            }
        });
        jCheckBox20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jCheckBox20, gridBagConstraints);

        jCheckBox21.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup33.add(jCheckBox21);
        jCheckBox21.setText("Coma");
        jCheckBox21.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox21ItemStateChanged(evt);
            }
        });
        jCheckBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jCheckBox21, gridBagConstraints);

        jCheckBox25.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup33.add(jCheckBox25);
        jCheckBox25.setText("Semi-conscious");
        jCheckBox25.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox25ItemStateChanged(evt);
            }
        });
        jCheckBox25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel40.add(jCheckBox25, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel40, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jPanel2, gridBagConstraints);

        patientriskcmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-", "YES", "NO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(patientriskcmb, gridBagConstraints);

        jLabel72.setText("Patient at Risk of Falls?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jLabel72, gridBagConstraints);

        jLabel73.setText("Medication Taken?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jLabel73, gridBagConstraints);

        jLabel1.setText("Patient's Valuable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jLabel1, gridBagConstraints);

        valuablescmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-", "With Patient", "Family/Friend", "Safe Keeping" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(valuablescmb, gridBagConstraints);

        medicationcmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-", "YES", "NO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(medicationcmb, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        globalpane.add(jPanel33, gridBagConstraints);

        tabbedpaneAll.addTab("General History", globalpane);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBackground(new java.awt.Color(228, 226, 226));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "The Respiratory System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel9.setBackground(new java.awt.Color(228, 226, 226));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 1, 12), new java.awt.Color(51, 0, 51))); // NOI18N
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Duration");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel9.add(jLabel3, gridBagConstraints);

        durationtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(durationtxt, gridBagConstraints);

        jLabel10.setText("color");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel9.add(jLabel10, gridBagConstraints);

        amounttxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(amounttxt, gridBagConstraints);

        jLabel11.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel9.add(jLabel11, gridBagConstraints);

        colortxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(colortxt, gridBagConstraints);

        jLabel12.setText("Describe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel9.add(jLabel12, gridBagConstraints);

        describetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(describetxt, gridBagConstraints);

        jPanel51.setBackground(new java.awt.Color(228, 226, 226));
        jPanel51.setLayout(new java.awt.GridBagLayout());

        jLabel53.setText("Chronic or productive cough (bronchitis or bronchiectasis)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel51.add(jLabel53, gridBagConstraints);

        jCheckBox19.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup11.add(jCheckBox19);
        jCheckBox19.setText("Yes");
        jCheckBox19.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox19ItemStateChanged(evt);
            }
        });
        jCheckBox19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox19ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel51.add(jCheckBox19, gridBagConstraints);

        jCheckBox58.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup11.add(jCheckBox58);
        jCheckBox58.setText("No");
        jCheckBox58.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox58ItemStateChanged(evt);
            }
        });
        jCheckBox58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox58ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel51.add(jCheckBox58, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel9, gridBagConstraints);

        jPanel52.setBackground(new java.awt.Color(228, 226, 226));
        jPanel52.setLayout(new java.awt.GridBagLayout());

        jLabel54.setText("Difficulty in Breathing");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel52.add(jLabel54, gridBagConstraints);

        jCheckBox59.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup9.add(jCheckBox59);
        jCheckBox59.setText("Yes");
        jCheckBox59.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox59ItemStateChanged(evt);
            }
        });
        jCheckBox59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox59ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel52.add(jCheckBox59, gridBagConstraints);

        jCheckBox60.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup9.add(jCheckBox60);
        jCheckBox60.setText("No");
        jCheckBox60.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox60ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel52.add(jCheckBox60, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel52, gridBagConstraints);

        jPanel53.setBackground(new java.awt.Color(228, 226, 226));
        jPanel53.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel53.setLayout(new java.awt.GridBagLayout());

        jLabel24.setText("Specify When");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel53.add(jLabel24, gridBagConstraints);

        sttingchk.setBackground(new java.awt.Color(228, 226, 226));
        sttingchk.setText("Sitting");
        sttingchk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sttingchkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel53.add(sttingchk, gridBagConstraints);

        walkingchk.setBackground(new java.awt.Color(228, 226, 226));
        walkingchk.setText("Walking");
        walkingchk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walkingchkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel53.add(walkingchk, gridBagConstraints);

        lyindownchk.setBackground(new java.awt.Color(228, 226, 226));
        lyindownchk.setText("Lying Down");
        lyindownchk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lyindownchkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel53.add(lyindownchk, gridBagConstraints);

        standingchk.setBackground(new java.awt.Color(228, 226, 226));
        standingchk.setText("Standing");
        standingchk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standingchkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel53.add(standingchk, gridBagConstraints);

        otherdifficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherdifficultyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.8;
        jPanel53.add(otherdifficulty, gridBagConstraints);

        jLabel8.setText("Others");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        jPanel53.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel53, gridBagConstraints);

        jPanel54.setBackground(new java.awt.Color(228, 226, 226));
        jPanel54.setLayout(new java.awt.GridBagLayout());

        jLabel55.setText("Home Oxygen/CPAP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel54.add(jLabel55, gridBagConstraints);

        jCheckBox15.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup10.add(jCheckBox15);
        jCheckBox15.setText("Yes");
        jCheckBox15.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox15ItemStateChanged(evt);
            }
        });
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel54.add(jCheckBox15, gridBagConstraints);

        jCheckBox66.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup10.add(jCheckBox66);
        jCheckBox66.setText("No");
        jCheckBox66.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox66ItemStateChanged(evt);
            }
        });
        jCheckBox66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox66ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel54.add(jCheckBox66, gridBagConstraints);

        specifyhmeoxygen.setEditable(false);
        specifyhmeoxygen.setText("Explain");
        specifyhmeoxygen.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                specifyhmeoxygenCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel54.add(specifyhmeoxygen, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel54, gridBagConstraints);

        jPanel55.setBackground(new java.awt.Color(228, 226, 226));
        jPanel55.setLayout(new java.awt.GridBagLayout());

        jLabel56.setText("Asmatic");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel55.add(jLabel56, gridBagConstraints);

        jCheckBox65.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup12.add(jCheckBox65);
        jCheckBox65.setText("Yes");
        jCheckBox65.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox65ItemStateChanged(evt);
            }
        });
        jCheckBox65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox65ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel55.add(jCheckBox65, gridBagConstraints);

        jCheckBox67.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup12.add(jCheckBox67);
        jCheckBox67.setText("No");
        jCheckBox67.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox67ItemStateChanged(evt);
            }
        });
        jCheckBox67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox67ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel55.add(jCheckBox67, gridBagConstraints);

        asmatictxt.setEditable(false);
        asmatictxt.setText("When?");
        asmatictxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                asmatictxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel55.add(asmatictxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel55, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel6, gridBagConstraints);

        jPanel7.setBackground(new java.awt.Color(228, 226, 226));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "The Cardiac System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBackground(new java.awt.Color(228, 226, 226));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Describe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel2, gridBagConstraints);

        describepaintxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(describepaintxt, gridBagConstraints);

        jLabel4.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel4, gridBagConstraints);

        describedatetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(describedatetxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel8, gridBagConstraints);

        jPanel10.setBackground(new java.awt.Color(228, 226, 226));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel14.setText("Describe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jLabel14, gridBagConstraints);

        describediseasetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(describediseasetxt, gridBagConstraints);

        jLabel15.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jLabel15, gridBagConstraints);

        describediseasedatetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(describediseasedatetxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel10, gridBagConstraints);

        jPanel46.setBackground(new java.awt.Color(228, 226, 226));
        jPanel46.setLayout(new java.awt.GridBagLayout());

        jLabel48.setText("High blood presure");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel46.add(jLabel48, gridBagConstraints);

        jCheckBox46.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup4.add(jCheckBox46);
        jCheckBox46.setText("Yes");
        jCheckBox46.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox46ItemStateChanged(evt);
            }
        });
        jCheckBox46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox46ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel46.add(jCheckBox46, gridBagConstraints);

        jCheckBox51.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup4.add(jCheckBox51);
        jCheckBox51.setText("No");
        jCheckBox51.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox51ItemStateChanged(evt);
            }
        });
        jCheckBox51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel46.add(jCheckBox51, gridBagConstraints);

        bptxt1.setEditable(false);
        bptxt1.setText("How Long?");
        bptxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                bptxt1CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel46.add(bptxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel46, gridBagConstraints);

        jPanel47.setBackground(new java.awt.Color(228, 226, 226));
        jPanel47.setLayout(new java.awt.GridBagLayout());

        jLabel49.setText("Chest Pain/angina or heart attack");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel47.add(jLabel49, gridBagConstraints);

        jCheckBox52.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup5.add(jCheckBox52);
        jCheckBox52.setText("Yes");
        jCheckBox52.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox52ItemStateChanged(evt);
            }
        });
        jCheckBox52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel47.add(jCheckBox52, gridBagConstraints);

        jCheckBox53.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup5.add(jCheckBox53);
        jCheckBox53.setText("No");
        jCheckBox53.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox53ItemStateChanged(evt);
            }
        });
        jCheckBox53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox53ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel47.add(jCheckBox53, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel47, gridBagConstraints);

        jPanel48.setBackground(new java.awt.Color(228, 226, 226));
        jPanel48.setLayout(new java.awt.GridBagLayout());

        jLabel50.setText("Heart disease,artificial valve/pacemaker");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.38;
        jPanel48.add(jLabel50, gridBagConstraints);

        jCheckBox54.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup6.add(jCheckBox54);
        jCheckBox54.setText("Yes");
        jCheckBox54.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox54ItemStateChanged(evt);
            }
        });
        jCheckBox54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox54ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel48.add(jCheckBox54, gridBagConstraints);

        jCheckBox55.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup6.add(jCheckBox55);
        jCheckBox55.setText("No");
        jCheckBox55.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox55ItemStateChanged(evt);
            }
        });
        jCheckBox55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox55ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel48.add(jCheckBox55, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel48, gridBagConstraints);

        jPanel49.setBackground(new java.awt.Color(228, 226, 226));
        jPanel49.setLayout(new java.awt.GridBagLayout());

        jLabel51.setText("Rheumatic fever,heart murmur,irregular pulse/palpitations");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel49.add(jLabel51, gridBagConstraints);

        jCheckBox22.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup7.add(jCheckBox22);
        jCheckBox22.setText("Yes");
        jCheckBox22.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox22ItemStateChanged(evt);
            }
        });
        jCheckBox22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel49.add(jCheckBox22, gridBagConstraints);

        jCheckBox56.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup7.add(jCheckBox56);
        jCheckBox56.setText("No");
        jCheckBox56.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox56ItemStateChanged(evt);
            }
        });
        jCheckBox56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox56ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel49.add(jCheckBox56, gridBagConstraints);

        rheumatictxt.setEditable(false);
        rheumatictxt.setText("When?");
        rheumatictxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                rheumatictxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel49.add(rheumatictxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel49, gridBagConstraints);

        jPanel50.setBackground(new java.awt.Color(228, 226, 226));
        jPanel50.setLayout(new java.awt.GridBagLayout());

        jLabel52.setText("Swelling of Ankles");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel50.add(jLabel52, gridBagConstraints);

        jCheckBox23.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup8.add(jCheckBox23);
        jCheckBox23.setText("Yes");
        jCheckBox23.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox23ItemStateChanged(evt);
            }
        });
        jCheckBox23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel50.add(jCheckBox23, gridBagConstraints);

        jCheckBox57.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup8.add(jCheckBox57);
        jCheckBox57.setText("No");
        jCheckBox57.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox57ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel50.add(jCheckBox57, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel50, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel7, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBackground(new java.awt.Color(228, 226, 226));
        jPanel42.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "The Neurological System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel43.setBackground(new java.awt.Color(228, 226, 226));
        jPanel43.setLayout(new java.awt.GridBagLayout());

        jLabel43.setText("Specify");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel43.add(jLabel43, gridBagConstraints);

        jLabel44.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel43.add(jLabel44, gridBagConstraints);

        epilepsywhentxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel43.add(epilepsywhentxt1, gridBagConstraints);

        epilepsytxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel43.add(epilepsytxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jPanel43, gridBagConstraints);

        jPanel44.setBackground(new java.awt.Color(228, 226, 226));
        jPanel44.setLayout(new java.awt.GridBagLayout());

        jLabel45.setText("What's Affected");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.2;
        jPanel44.add(jLabel45, gridBagConstraints);

        stroketxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel44.add(stroketxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jPanel44, gridBagConstraints);

        jPanel18.setBackground(new java.awt.Color(228, 226, 226));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabel25.setText("Suffers from Stroke?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel18.add(jLabel25, gridBagConstraints);

        strokeyes.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup1.add(strokeyes);
        strokeyes.setText("Yes");
        strokeyes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                strokeyesItemStateChanged(evt);
            }
        });
        strokeyes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strokeyesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(strokeyes, gridBagConstraints);

        jCheckBox30.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup1.add(jCheckBox30);
        jCheckBox30.setText("No");
        jCheckBox30.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox30ItemStateChanged(evt);
            }
        });
        jCheckBox30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox30ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel18.add(jCheckBox30, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jPanel18, gridBagConstraints);

        jPanel19.setBackground(new java.awt.Color(228, 226, 226));
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel26.setText("Epilepsy or Other fits");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel19.add(jLabel26, gridBagConstraints);

        jCheckBox50.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup2.add(jCheckBox50);
        jCheckBox50.setText("Yes");
        jCheckBox50.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox50ItemStateChanged(evt);
            }
        });
        jCheckBox50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox50ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel19.add(jCheckBox50, gridBagConstraints);

        jCheckBox31.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup2.add(jCheckBox31);
        jCheckBox31.setText("No");
        jCheckBox31.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox31ItemStateChanged(evt);
            }
        });
        jCheckBox31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox31ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel19.add(jCheckBox31, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jPanel19, gridBagConstraints);

        jPanel25.setBackground(new java.awt.Color(228, 226, 226));
        jPanel25.setLayout(new java.awt.GridBagLayout());

        jLabel28.setText("suffers from anxiety, depression or emotional disorders");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel25.add(jLabel28, gridBagConstraints);

        jCheckBox48.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup3.add(jCheckBox48);
        jCheckBox48.setText("Yes");
        jCheckBox48.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox48ItemStateChanged(evt);
            }
        });
        jCheckBox48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox48ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel25.add(jCheckBox48, gridBagConstraints);

        jCheckBox33.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup3.add(jCheckBox33);
        jCheckBox33.setText("No");
        jCheckBox33.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox33ItemStateChanged(evt);
            }
        });
        jCheckBox33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox33ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel25.add(jCheckBox33, gridBagConstraints);

        emotionaltxt1.setEditable(false);
        emotionaltxt1.setText("When?");
        emotionaltxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                emotionaltxt1CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel25.add(emotionaltxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jPanel25, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jPanel42, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel41, gridBagConstraints);

        jPanel45.setBackground(new java.awt.Color(228, 226, 226));
        jPanel45.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel45.setLayout(new java.awt.GridBagLayout());

        saveRespiratory.setText("SAVE");
        saveRespiratory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveRespiratoryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel45.add(saveRespiratory, gridBagConstraints);

        jButton5.setText("EDIT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel45.add(jButton5, gridBagConstraints);

        respiratoryclose.setText("Close");
        respiratoryclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respiratorycloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel45.add(respiratoryclose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel45, gridBagConstraints);

        tabbedpaneAll.addTab("Respiratory/Cardiac/Neuro", jPanel1);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBackground(new java.awt.Color(228, 226, 226));
        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Gastric Sytem", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel32.setBackground(new java.awt.Color(228, 226, 226));
        jPanel32.setLayout(new java.awt.GridBagLayout());

        jLabel34.setText("Specify");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel32.add(jLabel34, gridBagConstraints);

        jLabel35.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel32.add(jLabel35, gridBagConstraints);

        gastricwhentxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel32.add(gastricwhentxt, gridBagConstraints);

        gastrictxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel32.add(gastrictxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jPanel32, gridBagConstraints);

        jPanel57.setBackground(new java.awt.Color(228, 226, 226));
        jPanel57.setLayout(new java.awt.GridBagLayout());

        jLabel58.setText("Gastric reflux, hiatus hernia/hartburn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel57.add(jLabel58, gridBagConstraints);

        jCheckBox39.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup14.add(jCheckBox39);
        jCheckBox39.setText("Yes");
        jCheckBox39.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox39ItemStateChanged(evt);
            }
        });
        jCheckBox39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox39ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel57.add(jCheckBox39, gridBagConstraints);

        jCheckBox69.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup14.add(jCheckBox69);
        jCheckBox69.setText("No");
        jCheckBox69.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox69ItemStateChanged(evt);
            }
        });
        jCheckBox69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox69ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel57.add(jCheckBox69, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jPanel57, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel31, gridBagConstraints);

        jPanel24.setBackground(new java.awt.Color(228, 226, 226));
        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Gynae System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel24.setLayout(new java.awt.GridBagLayout());

        jPanel26.setBackground(new java.awt.Color(228, 226, 226));
        jPanel26.setLayout(new java.awt.GridBagLayout());

        jLabel31.setText("Specify weeks");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel26.add(jLabel31, gridBagConstraints);

        weekstxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel26.add(weekstxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jPanel26, gridBagConstraints);

        jPanel58.setBackground(new java.awt.Color(228, 226, 226));
        jPanel58.setLayout(new java.awt.GridBagLayout());

        jLabel59.setText("Had his/her last menstrual period more than 3 weeks ago");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel58.add(jLabel59, gridBagConstraints);

        jCheckBox70.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup15.add(jCheckBox70);
        jCheckBox70.setText("Yes");
        jCheckBox70.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox70ItemStateChanged(evt);
            }
        });
        jCheckBox70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox70ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel58.add(jCheckBox70, gridBagConstraints);

        jCheckBox71.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup15.add(jCheckBox71);
        jCheckBox71.setText("No");
        jCheckBox71.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox71ItemStateChanged(evt);
            }
        });
        jCheckBox71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox71ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel58.add(jCheckBox71, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jPanel58, gridBagConstraints);

        jPanel59.setBackground(new java.awt.Color(228, 226, 226));
        jPanel59.setLayout(new java.awt.GridBagLayout());

        jLabel60.setText("Currently breast feeding?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel59.add(jLabel60, gridBagConstraints);

        jCheckBox35.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup16.add(jCheckBox35);
        jCheckBox35.setText("Yes");
        jCheckBox35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox35ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel59.add(jCheckBox35, gridBagConstraints);

        jCheckBox72.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup16.add(jCheckBox72);
        jCheckBox72.setText("No");
        jCheckBox72.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox72ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel59.add(jCheckBox72, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jPanel59, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel24, gridBagConstraints);

        jPanel22.setBackground(new java.awt.Color(228, 226, 226));
        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "The Renal System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jPanel23.setBackground(new java.awt.Color(228, 226, 226));
        jPanel23.setLayout(new java.awt.GridBagLayout());

        jLabel29.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel23.add(jLabel29, gridBagConstraints);

        jLabel30.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel23.add(jLabel30, gridBagConstraints);

        kidneywhentxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel23.add(kidneywhentxt, gridBagConstraints);

        kidneytxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel23.add(kidneytxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(jPanel23, gridBagConstraints);

        jPanel56.setBackground(new java.awt.Color(228, 226, 226));
        jPanel56.setLayout(new java.awt.GridBagLayout());

        jLabel57.setText("Kidney disorder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel56.add(jLabel57, gridBagConstraints);

        jCheckBox34.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup13.add(jCheckBox34);
        jCheckBox34.setText("Yes");
        jCheckBox34.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox34ItemStateChanged(evt);
            }
        });
        jCheckBox34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox34ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel56.add(jCheckBox34, gridBagConstraints);

        jCheckBox68.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup13.add(jCheckBox68);
        jCheckBox68.setText("No");
        jCheckBox68.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox68ItemStateChanged(evt);
            }
        });
        jCheckBox68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox68ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel56.add(jCheckBox68, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(jPanel56, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel22, gridBagConstraints);

        jPanel73.setBackground(new java.awt.Color(228, 226, 226));
        jPanel73.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel73.setLayout(new java.awt.GridBagLayout());

        saveGastric.setText("SAVE");
        saveGastric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGastricActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel73.add(saveGastric, gridBagConstraints);

        jButton7.setText("EDIT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel73.add(jButton7, gridBagConstraints);

        gastricClose.setText("Close");
        gastricClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gastricCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel73.add(gastricClose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel73, gridBagConstraints);

        tabbedpaneAll.addTab("Gastric/Renal/Gynae", jPanel3);

        jPanel21.setLayout(new java.awt.GridBagLayout());

        jPanel27.setBackground(new java.awt.Color(228, 226, 226));
        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Mascular Skeletal", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel27.setLayout(new java.awt.GridBagLayout());

        jPanel28.setBackground(new java.awt.Color(228, 226, 226));
        jPanel28.setLayout(new java.awt.GridBagLayout());

        jLabel32.setText("Specify:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel28.add(jLabel32, gridBagConstraints);

        artificialtxtarea.setEditable(false);
        artificialtxtarea.setColumns(20);
        artificialtxtarea.setRows(5);
        jScrollPane2.setViewportView(artificialtxtarea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel28.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(jPanel28, gridBagConstraints);

        jPanel29.setBackground(new java.awt.Color(228, 226, 226));
        jPanel29.setLayout(new java.awt.GridBagLayout());

        jLabel33.setText("Explain:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel29.add(jLabel33, gridBagConstraints);

        backinjurytxtarea.setEditable(false);
        backinjurytxtarea.setColumns(20);
        backinjurytxtarea.setRows(5);
        jScrollPane4.setViewportView(backinjurytxtarea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel29.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(jPanel29, gridBagConstraints);

        jPanel60.setBackground(new java.awt.Color(228, 226, 226));
        jPanel60.setLayout(new java.awt.GridBagLayout());

        jLabel61.setText("Do you have an artificial joint,hearing aid,contact lenses");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel60.add(jLabel61, gridBagConstraints);

        jCheckBox37.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup17.add(jCheckBox37);
        jCheckBox37.setText("Yes");
        jCheckBox37.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox37ItemStateChanged(evt);
            }
        });
        jCheckBox37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox37ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel60.add(jCheckBox37, gridBagConstraints);

        jCheckBox36.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup17.add(jCheckBox36);
        jCheckBox36.setText("No");
        jCheckBox36.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox36ItemStateChanged(evt);
            }
        });
        jCheckBox36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox36ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel60.add(jCheckBox36, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(jPanel60, gridBagConstraints);

        jPanel61.setBackground(new java.awt.Color(228, 226, 226));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jLabel62.setText("Significant neck or back injury");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel61.add(jLabel62, gridBagConstraints);

        jCheckBox38.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup18.add(jCheckBox38);
        jCheckBox38.setText("Yes");
        jCheckBox38.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox38ItemStateChanged(evt);
            }
        });
        jCheckBox38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox38ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel61.add(jCheckBox38, gridBagConstraints);

        jCheckBox73.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup18.add(jCheckBox73);
        jCheckBox73.setText("No");
        jCheckBox73.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox73ItemStateChanged(evt);
            }
        });
        jCheckBox73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox73ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel61.add(jCheckBox73, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(jPanel61, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jPanel27, gridBagConstraints);

        jPanel16.setBackground(new java.awt.Color(228, 226, 226));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "The Endocrine System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel17.setBackground(new java.awt.Color(228, 226, 226));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel22.setText("Specify");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel17.add(jLabel22, gridBagConstraints);

        hepatitistxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel17.add(hepatitistxt, gridBagConstraints);

        jLabel23.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel17.add(jLabel23, gridBagConstraints);

        hepatitiswhentxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel17.add(hepatitiswhentxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel16.add(jPanel17, gridBagConstraints);

        jPanel62.setBackground(new java.awt.Color(228, 226, 226));
        jPanel62.setLayout(new java.awt.GridBagLayout());

        jLabel63.setText("Diabetic");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        jPanel62.add(jLabel63, gridBagConstraints);

        jCheckBox74.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup19.add(jCheckBox74);
        jCheckBox74.setText("Yes");
        jCheckBox74.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox74ItemStateChanged(evt);
            }
        });
        jCheckBox74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox74ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel62.add(jCheckBox74, gridBagConstraints);

        jCheckBox75.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup19.add(jCheckBox75);
        jCheckBox75.setText("No");
        jCheckBox75.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox75ItemStateChanged(evt);
            }
        });
        jCheckBox75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox75ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel62.add(jCheckBox75, gridBagConstraints);

        diabetestxt.setEditable(false);
        diabetestxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                diabetestxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel62.add(diabetestxt, gridBagConstraints);

        jLabel16.setText("Controlled by");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel62.add(jLabel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(jPanel62, gridBagConstraints);

        jPanel63.setBackground(new java.awt.Color(228, 226, 226));
        jPanel63.setLayout(new java.awt.GridBagLayout());

        jLabel64.setText("Hepatitis, jaundice or cirrhosis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel63.add(jLabel64, gridBagConstraints);

        jCheckBox76.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup20.add(jCheckBox76);
        jCheckBox76.setText("Yes");
        jCheckBox76.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox76ItemStateChanged(evt);
            }
        });
        jCheckBox76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox76ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel63.add(jCheckBox76, gridBagConstraints);

        jCheckBox77.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup20.add(jCheckBox77);
        jCheckBox77.setText("No");
        jCheckBox77.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox77ItemStateChanged(evt);
            }
        });
        jCheckBox77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox77ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel63.add(jCheckBox77, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(jPanel63, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jPanel16, gridBagConstraints);

        jPanel74.setBackground(new java.awt.Color(228, 226, 226));
        jPanel74.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel74.setLayout(new java.awt.GridBagLayout());

        saveMuscular.setText("SAVE");
        saveMuscular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMuscularActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel74.add(saveMuscular, gridBagConstraints);

        jButton9.setText("EDIT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel74.add(jButton9, gridBagConstraints);

        muscularclose.setText("Close");
        muscularclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muscularcloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel74.add(muscularclose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jPanel74, gridBagConstraints);

        tabbedpaneAll.addTab("Muscular S/Endocrine", jPanel21);

        jPanel30.setLayout(new java.awt.GridBagLayout());

        jPanel13.setBackground(new java.awt.Color(228, 226, 226));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "The Blood System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jPanel14.setBackground(new java.awt.Color(228, 226, 226));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabel18.setText("Specify");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel14.add(jLabel18, gridBagConstraints);

        specifybloodtxt.setEditable(false);
        specifybloodtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specifybloodtxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel14.add(specifybloodtxt, gridBagConstraints);

        jLabel19.setText("When");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel14.add(jLabel19, gridBagConstraints);

        whenbloodtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel14.add(whenbloodtxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        jPanel13.add(jPanel14, gridBagConstraints);

        jPanel15.setBackground(new java.awt.Color(228, 226, 226));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabel20.setText("Specify");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel15.add(jLabel20, gridBagConstraints);

        specifyclots.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel15.add(specifyclots, gridBagConstraints);

        jLabel21.setText("When?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.2;
        jPanel15.add(jLabel21, gridBagConstraints);

        whenclotstxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel15.add(whenclotstxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        jPanel13.add(jPanel15, gridBagConstraints);

        jPanel64.setBackground(new java.awt.Color(228, 226, 226));
        jPanel64.setLayout(new java.awt.GridBagLayout());

        jLabel65.setText("Blood Disorder (e.g leukemia or Anemia)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel64.add(jLabel65, gridBagConstraints);

        jCheckBox24.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup21.add(jCheckBox24);
        jCheckBox24.setText("Yes");
        jCheckBox24.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox24ItemStateChanged(evt);
            }
        });
        jCheckBox24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel64.add(jCheckBox24, gridBagConstraints);

        jCheckBox78.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup21.add(jCheckBox78);
        jCheckBox78.setText("No");
        jCheckBox78.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox78ItemStateChanged(evt);
            }
        });
        jCheckBox78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox78ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel64.add(jCheckBox78, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jPanel64, gridBagConstraints);

        jPanel65.setBackground(new java.awt.Color(228, 226, 226));
        jPanel65.setLayout(new java.awt.GridBagLayout());

        jLabel66.setText("Blood Transfusion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel65.add(jLabel66, gridBagConstraints);

        jCheckBox28.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup22.add(jCheckBox28);
        jCheckBox28.setText("Yes");
        jCheckBox28.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox28ItemStateChanged(evt);
            }
        });
        jCheckBox28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox28ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel65.add(jCheckBox28, gridBagConstraints);

        jCheckBox79.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup22.add(jCheckBox79);
        jCheckBox79.setText("No");
        jCheckBox79.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox79ItemStateChanged(evt);
            }
        });
        jCheckBox79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox79ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel65.add(jCheckBox79, gridBagConstraints);

        transfussiontxt.setEditable(false);
        transfussiontxt.setText("Specify When");
        transfussiontxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                transfussiontxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel65.add(transfussiontxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jPanel65, gridBagConstraints);

        jPanel66.setBackground(new java.awt.Color(228, 226, 226));
        jPanel66.setLayout(new java.awt.GridBagLayout());

        jLabel67.setText("Blood clots in legs or lungs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel66.add(jLabel67, gridBagConstraints);

        jCheckBox29.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup23.add(jCheckBox29);
        jCheckBox29.setText("Yes");
        jCheckBox29.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox29ItemStateChanged(evt);
            }
        });
        jCheckBox29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox29ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel66.add(jCheckBox29, gridBagConstraints);

        jCheckBox80.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup23.add(jCheckBox80);
        jCheckBox80.setText("No");
        jCheckBox80.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox80ItemStateChanged(evt);
            }
        });
        jCheckBox80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox80ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel66.add(jCheckBox80, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jPanel66, gridBagConstraints);

        jPanel67.setBackground(new java.awt.Color(228, 226, 226));
        jPanel67.setLayout(new java.awt.GridBagLayout());

        lagej.setText("Bleeding Tendency/Easy bruising");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.05;
        jPanel67.add(lagej, gridBagConstraints);

        jCheckBox27.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup24.add(jCheckBox27);
        jCheckBox27.setText("Yes");
        jCheckBox27.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox27ItemStateChanged(evt);
            }
        });
        jCheckBox27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox27ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel67.add(jCheckBox27, gridBagConstraints);

        jCheckBox81.setBackground(new java.awt.Color(228, 226, 226));
        buttonGroup24.add(jCheckBox81);
        jCheckBox81.setText("No");
        jCheckBox81.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox81ItemStateChanged(evt);
            }
        });
        jCheckBox81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox81ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel67.add(jCheckBox81, gridBagConstraints);

        tendencytxt.setEditable(false);
        tendencytxt.setText("Specify When");
        tendencytxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tendencytxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 0.2;
        jPanel67.add(tendencytxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jPanel67, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel30.add(jPanel13, gridBagConstraints);

        jPanel11.setBackground(new java.awt.Color(228, 226, 226));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Past Medical History (Any major health problems illness or surgery in the past 10 years)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 123))); // NOI18N
        jPanel11.setLayout(new java.awt.GridBagLayout());

        medicalIlness.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "surgery/Illness", "Describe", "Complication", "Date"
            }
        ));
        jScrollPane1.setViewportView(medicalIlness);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel30.add(jPanel11, gridBagConstraints);

        jPanel75.setBackground(new java.awt.Color(228, 226, 226));
        jPanel75.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel75.setLayout(new java.awt.GridBagLayout());

        saveBlood.setText("SAVE");
        saveBlood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBloodActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel75.add(saveBlood, gridBagConstraints);

        jButton11.setText("EDIT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel75.add(jButton11, gridBagConstraints);

        bloodpast.setText("Close");
        bloodpast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodpastActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel75.add(bloodpast, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel30.add(jPanel75, gridBagConstraints);

        tabbedpaneAll.addTab("Blood/past surgery", jPanel30);

        jPanel39.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 153))); // NOI18N
        jPanel39.setLayout(new java.awt.GridBagLayout());

        medicationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Drug Name", "Strength", "Tablets per Day", "Number at Each Time"
            }
        ));
        medicationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicationTableMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                medicationTableMouseExited(evt);
            }
        });
        medicationTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                medicationTableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(medicationTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 1.0;
        jPanel39.add(jScrollPane3, gridBagConstraints);

        jPanel76.setBackground(new java.awt.Color(228, 226, 226));
        jPanel76.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel76.setLayout(new java.awt.GridBagLayout());

        saveMedication.setText("SAVE");
        saveMedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMedicationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel76.add(saveMedication, gridBagConstraints);

        jButton13.setText("EDIT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel76.add(jButton13, gridBagConstraints);

        medicationclose.setText("Close");
        medicationclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicationcloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel76.add(medicationclose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel39.add(jPanel76, gridBagConstraints);

        tabbedpaneAll.addTab("Current Medication", jPanel39);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        paneAll.add(tabbedpaneAll, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(paneAll, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void strokeyesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strokeyesActionPerformed
        // TODO add your handling code here:
        if(strokeyes.isSelected()){
            stroketxt1.setEditable(true);
        }else if(!strokeyes.isSelected()){
            stroketxt1.setEditable(false);
            stroketxt1.setText("");
        }
    }//GEN-LAST:event_strokeyesActionPerformed

    private void jCheckBox50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox50ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox50.isSelected()){
            epilepsytxt1.setEditable(true);
            epilepsywhentxt1.setEditable(true);
        }else if(!jCheckBox50.isSelected()){
            epilepsytxt1.setEditable(false);
            epilepsywhentxt1.setEditable(false);
            epilepsytxt1.setText("");
            epilepsywhentxt1.setText("");
        }       
    }//GEN-LAST:event_jCheckBox50ActionPerformed

    private void jCheckBox49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox49ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox49.isSelected()){
            organtxt1.setEditable(true);
            organwhentxt1.setEditable(true);
        }else if(!jCheckBox49.isSelected()){
            organtxt1.setEditable(false);
            organwhentxt1.setEditable(false);
            organtxt1.setText("");
            organwhentxt1.setText("");
        } 
    }//GEN-LAST:event_jCheckBox49ActionPerformed

    private void jCheckBox48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox48ActionPerformed
        // TODO add your handling code here: emotionaltxt1
        if(jCheckBox48.isSelected()){
            emotionaltxt1.setEditable(true);
            emotionaltxt1.setForeground(Color.red);
        }else if(!jCheckBox48.isSelected()){
            emotionaltxt1.setEditable(false);
            emotionaltxt1.setText("When?");
            emotionaltxt1.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox48ActionPerformed

    private void emotionaltxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_emotionaltxt1CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_emotionaltxt1CaretUpdate

    private void jCheckBox46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox46ActionPerformed
        // TODO add your handling code here:bptxt1
        
        if(jCheckBox46.isSelected()){
            bptxt1.setEditable(true);
            bptxt1.setForeground(Color.red);
        }else if(!jCheckBox46.isSelected()){
            bptxt1.setEditable(false);
            bptxt1.setText("How LOng?");
            bptxt1.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox46ActionPerformed

    private void bptxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_bptxt1CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_bptxt1CaretUpdate

    private void jCheckBox52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox52ActionPerformed
        // TODO add your handling code here:describepaintxt
        if(jCheckBox52.isSelected()){
            describepaintxt.setEditable(true);
            describedatetxt.setEditable(true);
        }else if(!jCheckBox52.isSelected()){
            describepaintxt.setEditable(false);
            describedatetxt.setEditable(false);
            describepaintxt.setText("");
            describedatetxt.setText("");
        } 
    }//GEN-LAST:event_jCheckBox52ActionPerformed

    private void jCheckBox54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox54ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox54.isSelected()){
            describediseasetxt.setEditable(true);
            describediseasedatetxt.setEditable(true);
        }else if(!jCheckBox54.isSelected()){
            describediseasetxt.setEditable(false);
            describediseasedatetxt.setEditable(false);
            describediseasetxt.setText("");
            describediseasedatetxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox54ActionPerformed

    private void jCheckBox22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox22ActionPerformed
        // TODO add your handling code here:bptxt
       if(jCheckBox22.isSelected()){
            rheumatictxt.setEditable(true);
            rheumatictxt.setForeground(Color.red);
        }else if(!jCheckBox22.isSelected()){
            rheumatictxt.setEditable(false);
            rheumatictxt.setText("How LOng?");
            rheumatictxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox22ActionPerformed

    private void rheumatictxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_rheumatictxtCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_rheumatictxtCaretUpdate

    private void jCheckBox23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox23ActionPerformed

    private void jCheckBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox19ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox19.isSelected()){
            durationtxt.setEditable(true);
            describetxt.setEditable(true);
            amounttxt.setEditable(true);
            colortxt.setEditable(true);
        }else if(!jCheckBox19.isSelected()){
            durationtxt.setEditable(false);
            durationtxt.setText("");
            describetxt.setEditable(false);
            describetxt.setText("");
            amounttxt.setEditable(false);
            amounttxt.setText("");
            colortxt.setEditable(false);
            colortxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox19ActionPerformed

    private void jCheckBox59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox59ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox59ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
        // TODO add your handling code here:specifyhmeoxygen
        if(jCheckBox15.isSelected()){
            specifyhmeoxygen.setEditable(true);
            specifyhmeoxygen.setForeground(Color.red);
        }else if(!jCheckBox15.isSelected()){
            specifyhmeoxygen.setEditable(false);
            specifyhmeoxygen.setText("Explain");
            specifyhmeoxygen.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void specifyhmeoxygenCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_specifyhmeoxygenCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_specifyhmeoxygenCaretUpdate

    private void jCheckBox65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox65ActionPerformed
        // TODO add your handling code here:asmatictxt

        if(jCheckBox65.isSelected()){
            asmatictxt.setEditable(true);
            asmatictxt.setForeground(Color.red);
        }else if(!jCheckBox65.isSelected()){
            asmatictxt.setEditable(false);
            asmatictxt.setText("When?");
            asmatictxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox65ActionPerformed

    private void asmatictxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_asmatictxtCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_asmatictxtCaretUpdate

    private void jCheckBox34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox34ActionPerformed
       // TODO add your handling code here:
        if(jCheckBox34.isSelected()){
            kidneytxt .setEditable(true);
            kidneywhentxt.setEditable(true);
        }else if(!jCheckBox34.isSelected()){
            kidneytxt .setEditable(false);
            kidneywhentxt.setEditable(false);
            kidneytxt .setText("");
            kidneywhentxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox34ActionPerformed

    private void jCheckBox39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox39ActionPerformed
       // TODO add your handling code here:
        if(jCheckBox39.isSelected()){
            gastrictxt .setEditable(true);
            gastricwhentxt.setEditable(true);
        }else if(!jCheckBox39.isSelected()){
            gastrictxt .setEditable(false);
            gastricwhentxt.setEditable(false);
            gastrictxt .setText("");
            gastricwhentxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox39ActionPerformed

    private void jCheckBox70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox70ActionPerformed
       // TODO add your handling code here:
        if(jCheckBox70.isSelected()){
            weekstxt .setEditable(true);
        }else if(!jCheckBox70.isSelected()){
            weekstxt.setEditable(false);
            weekstxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox70ActionPerformed

    private void jCheckBox35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox35ActionPerformed
        // TODO add your handling code here:
        breastfeeding = jCheckBox35.getActionCommand();
    }//GEN-LAST:event_jCheckBox35ActionPerformed

    private void jCheckBox37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox37ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox37.isSelected()){
            artificialtxtarea.setEditable(true);
        }else if(!jCheckBox37.isSelected()){
            artificialtxtarea.setEditable(false);
            artificialtxtarea.setText("");
        }
    }//GEN-LAST:event_jCheckBox37ActionPerformed

    private void jCheckBox38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox38ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox38.isSelected()){
            backinjurytxtarea.setEditable(true);
        }else if(!jCheckBox38.isSelected()){
            backinjurytxtarea.setEditable(false);
            backinjurytxtarea.setText("");
        }
    }//GEN-LAST:event_jCheckBox38ActionPerformed

    private void jCheckBox74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox74ActionPerformed
        if(jCheckBox74.isSelected()){
            diabetestxt.setEditable(true);
        }else if(!jCheckBox74.isSelected()){
            diabetestxt.setEditable(false);
            diabetestxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox74ActionPerformed

    private void diabetestxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_diabetestxtCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_diabetestxtCaretUpdate

    private void jCheckBox76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox76ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox76.isSelected()){
            hepatitistxt.setEditable(true);
            hepatitiswhentxt.setEditable(true);
        }else if(!jCheckBox76.isSelected()){
            hepatitistxt.setEditable(false);
            hepatitiswhentxt.setEditable(false);
            hepatitistxt.setText("");
            hepatitiswhentxt.setText("");
        }
        
    }//GEN-LAST:event_jCheckBox76ActionPerformed

    private void jCheckBox24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox24ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox24.isSelected()){
            specifybloodtxt.setEditable(true);
            whenbloodtxt.setEditable(true);
        }else if(!jCheckBox24.isSelected()){
            specifybloodtxt.setEditable(false);
            whenbloodtxt.setEditable(false);
            specifybloodtxt.setText("");
            whenbloodtxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox24ActionPerformed

    private void jCheckBox28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox28ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox28.isSelected()){
            transfussiontxt.setEditable(true);
            transfussiontxt.setForeground(Color.red);
        }else if(!jCheckBox28.isSelected()){
            transfussiontxt.setEditable(false);
            transfussiontxt.setText("When?");
            transfussiontxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox28ActionPerformed

    private void transfussiontxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_transfussiontxtCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_transfussiontxtCaretUpdate

    private void jCheckBox29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox29ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox29.isSelected()){
            specifyclots.setEditable(true);
            whenclotstxt.setEditable(true);
        }else if(!jCheckBox29.isSelected()){
            specifyclots.setEditable(false);
            whenclotstxt.setEditable(false);
            specifyclots.setText("");
            whenclotstxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox29ActionPerformed

    private void jCheckBox27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox27ActionPerformed
       // TODO add your handling code here:
        if(jCheckBox27.isSelected()){
            tendencytxt .setEditable(true);
            tendencytxt .setForeground(Color.red);
        }else if(!jCheckBox27.isSelected()){
            tendencytxt .setEditable(false);
            tendencytxt .setText("Specify When?");
            tendencytxt .setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox27ActionPerformed

    private void tendencytxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tendencytxtCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_tendencytxtCaretUpdate

    private void jCheckBox40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox40ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox40.isSelected()){
            illnesstxt.setEditable(true);
            illnesswhentxt.setEditable(true);
        }else if(!jCheckBox40.isSelected()){
            illnesstxt.setEditable(false);
            illnesswhentxt.setEditable(false);
            illnesstxt.setText("");
            illnesswhentxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox40ActionPerformed

    private void jCheckBox42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox42ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox42.isSelected()){
            alchoholtxt.setEditable(true);
        }else if(!jCheckBox42.isSelected()){
            alchoholtxt.setEditable(false);
        }
    }//GEN-LAST:event_jCheckBox42ActionPerformed

    private void jCheckBox43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox43ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox43.isSelected()){
            smokestxt.setEditable(true);
        }else if(!jCheckBox43.isSelected()){
            smokestxt.setEditable(false);
        }
    }//GEN-LAST:event_jCheckBox43ActionPerformed

    private void jCheckBox44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox44ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox44.isSelected()){
            stoppedtxt.setEditable(true);
        }else if(!jCheckBox44.isSelected()){
            stoppedtxt.setEditable(false);
        }
    }//GEN-LAST:event_jCheckBox44ActionPerformed

    private void jCheckBox45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox45ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox45.isSelected()){
            alergictxt.setEditable(true);
            alergictxt.setForeground(Color.red);
        }else if(!jCheckBox45.isSelected()){
            alergictxt.setEditable(false);
            alergictxt.setText("Specify When?");
            alergictxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox45ActionPerformed

    private void alergictxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_alergictxtCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_alergictxtCaretUpdate

    private void saveRespiratoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveRespiratoryActionPerformed
 // TODO add your handling code here:connectDB,pConnDB,nameNoTxt.getText(),headerDatePicker.getDate().toLocaleString(),visitId
      if((patient_no.length()>0) && (visitId.length())>0){
        try{
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into nursing.respiratory_cardiac_neuroHistory(patient_no,visit_id,"
                    + "server_date,transaction_date,suffers_stroke,stroke_effect,epileptic,epilepsy_desc,"
                    + "epileptic_when,suffers_depression,depression_time,high_bp,hbp_time,chest_pain,chestpain_desc,chestpain_time,heart_disease,"
                    + "disease_desc,disease_time,rheumatic_fever,rheumatic_when,swelling_ankle,difficulty_breathing,specify_breathing,"
                    + "home_oxygen,oxygen_explain,chronic,chronic_duration,chronic_desc,chronic_amout,chronic_color,asmatic,asmatic_when,action_user) "      
                    + "values(?,?,localtimestamp,?,?,upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?)"
                    + ",upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?)"
                    + ",upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?))");
            pstmt.setObject(1,patient_no);
            pstmt.setObject(2,visitId);
            pstmt.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dated));
            pstmt.setObject(4,stroke);
            pstmt.setObject(5,stroketxt1.getText());
            pstmt.setObject(6,epilepsy);
            pstmt.setObject(7,epilepsytxt1.getText());
            pstmt.setObject(8,epilepsywhentxt1.getText());
            pstmt.setObject(9,anxiety);
            pstmt.setObject(10,emotionaltxt1.getText());
            pstmt.setObject(11,bp);
            pstmt.setObject(12,bptxt1.getText());
            pstmt.setObject(13,chestpain);
            pstmt.setObject(14,describepaintxt.getText());
            pstmt.setObject(15,describedatetxt.getText());
            pstmt.setObject(16,heartdisease);
            pstmt.setObject(17,describediseasetxt.getText());
            pstmt.setObject(18,describediseasedatetxt.getText());
            pstmt.setObject(19,rheumatic);
            pstmt.setObject(20,rheumatictxt.getText());
            pstmt.setObject(21,ankles);
            pstmt.setObject(22,breathing);
            
            if(otherdifficulty.getText().isEmpty()){
                pstmt.setObject(23,difficultybreathing);
            }
//            pstmt.setObject(4,typeofaccident=typeofaccident+""+jCheckBox13.getActionCommand()+",");
//            }
            else if(!otherdifficulty.getText().isEmpty()){
           pstmt.setObject(23,difficultybreathing=difficultybreathing+""+otherdifficulty.getText()+",");
            }
            
            
            pstmt.setObject(24,hmeoxygen);
            pstmt.setObject(25,specifyhmeoxygen.getText());
            pstmt.setObject(26,chronic);
            pstmt.setObject(27,durationtxt.getText());
            pstmt.setObject(28,describetxt.getText());
            pstmt.setObject(29,amounttxt.getText());
            pstmt.setObject(30,colortxt.getText());
            pstmt.setObject(31,asmatic);
            pstmt.setObject(32,asmatictxt.getText());
            pstmt.setObject(33,getUser());
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }        
        }
      }else{
     javax.swing.JOptionPane.showMessageDialog(this, "Please Ensure You select A patient First ","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
}
    }//GEN-LAST:event_saveRespiratoryActionPerformed

    private void strokeyesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_strokeyesItemStateChanged
        // TODO add your handling code here:
       stroke = strokeyes.getActionCommand();
    }//GEN-LAST:event_strokeyesItemStateChanged

    private void jCheckBox30ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox30ItemStateChanged
        // TODO add your handling code here:
        stroke = jCheckBox30.getActionCommand();
    }//GEN-LAST:event_jCheckBox30ItemStateChanged

    private void jCheckBox50ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox50ItemStateChanged
        // TODO add your handling code here:
        epilepsy = jCheckBox50.getActionCommand();
    }//GEN-LAST:event_jCheckBox50ItemStateChanged

    private void jCheckBox31ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox31ItemStateChanged
        // TODO add your handling code here:
        epilepsy = jCheckBox31.getActionCommand();
    }//GEN-LAST:event_jCheckBox31ItemStateChanged

    private void jCheckBox48ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox48ItemStateChanged
        // TODO add your handling code here:
        anxiety = jCheckBox48.getActionCommand();
    }//GEN-LAST:event_jCheckBox48ItemStateChanged

    private void jCheckBox33ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox33ItemStateChanged
        // TODO add your handling code here:
        anxiety = jCheckBox33.getActionCommand();
    }//GEN-LAST:event_jCheckBox33ItemStateChanged

    private void jCheckBox46ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox46ItemStateChanged
        // TODO add your handling code here:
        bp = jCheckBox46.getActionCommand();
    }//GEN-LAST:event_jCheckBox46ItemStateChanged

    private void jCheckBox51ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox51ItemStateChanged
        // TODO add your handling code here:
        bp = jCheckBox51.getActionCommand();
    }//GEN-LAST:event_jCheckBox51ItemStateChanged

    private void jCheckBox52ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox52ItemStateChanged
        // TODO add your handling code here:
        chestpain = jCheckBox52.getActionCommand();
    }//GEN-LAST:event_jCheckBox52ItemStateChanged

    private void jCheckBox53ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox53ItemStateChanged
        // TODO add your handling code here:
        chestpain = jCheckBox53.getActionCommand();
    }//GEN-LAST:event_jCheckBox53ItemStateChanged

    private void jCheckBox54ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox54ItemStateChanged
        // TODO add your handling code here:
        heartdisease = jCheckBox54.getActionCommand();
    }//GEN-LAST:event_jCheckBox54ItemStateChanged

    private void jCheckBox55ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox55ItemStateChanged
        // TODO add your handling code here:
        heartdisease = jCheckBox55.getActionCommand();
    }//GEN-LAST:event_jCheckBox55ItemStateChanged

    private void jCheckBox22ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox22ItemStateChanged
        // TODO add your handling code here:
        rheumatic = jCheckBox22.getActionCommand();
    }//GEN-LAST:event_jCheckBox22ItemStateChanged

    private void jCheckBox56ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox56ItemStateChanged
        // TODO add your handling code here:
        rheumatic = jCheckBox56.getActionCommand();
    }//GEN-LAST:event_jCheckBox56ItemStateChanged

    private void jCheckBox23ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox23ItemStateChanged
        // TODO add your handling code here:
        ankles = jCheckBox23.getActionCommand();
    }//GEN-LAST:event_jCheckBox23ItemStateChanged

    private void jCheckBox57ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox57ItemStateChanged
        // TODO add your handling code here:
        ankles = jCheckBox57.getActionCommand();
    }//GEN-LAST:event_jCheckBox57ItemStateChanged

    private void jCheckBox59ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox59ItemStateChanged
        // TODO add your handling code here:
        breathing = jCheckBox59.getActionCommand();
    }//GEN-LAST:event_jCheckBox59ItemStateChanged

    private void jCheckBox60ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox60ItemStateChanged
        // TODO add your handling code here:
        breathing = jCheckBox60.getActionCommand(); 
    }//GEN-LAST:event_jCheckBox60ItemStateChanged

    private void jCheckBox15ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox15ItemStateChanged
        // TODO add your handling code here:
        hmeoxygen = jCheckBox15.getActionCommand();
    }//GEN-LAST:event_jCheckBox15ItemStateChanged

    private void jCheckBox66ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox66ItemStateChanged
        // TODO add your handling code here:
        hmeoxygen = jCheckBox66.getActionCommand();
    }//GEN-LAST:event_jCheckBox66ItemStateChanged

    private void jCheckBox19ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox19ItemStateChanged
        // TODO add your handling code here:
        chronic = jCheckBox19.getActionCommand();
    }//GEN-LAST:event_jCheckBox19ItemStateChanged

    private void jCheckBox58ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox58ItemStateChanged
        // TODO add your handling code here:
        chronic = jCheckBox58.getActionCommand();
    }//GEN-LAST:event_jCheckBox58ItemStateChanged

    private void jCheckBox65ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox65ItemStateChanged
        // TODO add your handling code here:
        asmatic = jCheckBox65.getActionCommand();
    }//GEN-LAST:event_jCheckBox65ItemStateChanged

    private void jCheckBox67ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox67ItemStateChanged
        // TODO add your handling code here:
        asmatic = jCheckBox67.getActionCommand();
    }//GEN-LAST:event_jCheckBox67ItemStateChanged

    private void jCheckBox34ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox34ItemStateChanged
        // TODO add your handling code here:
        kidney = jCheckBox34.getActionCommand();
    }//GEN-LAST:event_jCheckBox34ItemStateChanged

    private void jCheckBox68ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox68ItemStateChanged
        // TODO add your handling code here:
        kidney = jCheckBox68.getActionCommand();
    }//GEN-LAST:event_jCheckBox68ItemStateChanged

    private void jCheckBox39ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox39ItemStateChanged
        // TODO add your handling code here:
        gastric = jCheckBox39.getActionCommand();
    }//GEN-LAST:event_jCheckBox39ItemStateChanged

    private void jCheckBox69ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox69ItemStateChanged
        // TODO add your handling code here:
        gastric = jCheckBox69.getActionCommand();
    }//GEN-LAST:event_jCheckBox69ItemStateChanged

    private void jCheckBox70ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox70ItemStateChanged
        // TODO add your handling code here:
        menstrual = jCheckBox70.getActionCommand();
    }//GEN-LAST:event_jCheckBox70ItemStateChanged

    private void jCheckBox71ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox71ItemStateChanged
        // TODO add your handling code here:
        menstrual = jCheckBox71.getActionCommand();
    }//GEN-LAST:event_jCheckBox71ItemStateChanged

    private void jCheckBox72ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox72ItemStateChanged
        // TODO add your handling code here:
        breastfeeding = jCheckBox72.getActionCommand();
    }//GEN-LAST:event_jCheckBox72ItemStateChanged

    private void jCheckBox37ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox37ItemStateChanged
        // TODO add your handling code here:
        artificial = jCheckBox37.getActionCommand();
    }//GEN-LAST:event_jCheckBox37ItemStateChanged

    private void jCheckBox36ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox36ItemStateChanged
        // TODO add your handling code here:
        artificial = jCheckBox36.getActionCommand();
    }//GEN-LAST:event_jCheckBox36ItemStateChanged

    private void jCheckBox38ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox38ItemStateChanged
        // TODO add your handling code here:
        injury = jCheckBox38.getActionCommand();
    }//GEN-LAST:event_jCheckBox38ItemStateChanged

    private void jCheckBox73ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox73ItemStateChanged
        // TODO add your handling code here:
        injury = jCheckBox73.getActionCommand();
    }//GEN-LAST:event_jCheckBox73ItemStateChanged

    private void jCheckBox74ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox74ItemStateChanged
        // TODO add your handling code here:
        diabetic = jCheckBox74.getActionCommand();
    }//GEN-LAST:event_jCheckBox74ItemStateChanged

    private void jCheckBox75ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox75ItemStateChanged
        // TODO add your handling code here:
        diabetic = jCheckBox75.getActionCommand();
    }//GEN-LAST:event_jCheckBox75ItemStateChanged

    private void jCheckBox76ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox76ItemStateChanged
        // TODO add your handling code here:
        hepatitis = jCheckBox76.getActionCommand();
    }//GEN-LAST:event_jCheckBox76ItemStateChanged

    private void jCheckBox77ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox77ItemStateChanged
        // TODO add your handling code here:
        hepatitis = jCheckBox77.getActionCommand();
    }//GEN-LAST:event_jCheckBox77ItemStateChanged

    private void jCheckBox24ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox24ItemStateChanged
        // TODO add your handling code here:
        disorder = jCheckBox24.getActionCommand();
    }//GEN-LAST:event_jCheckBox24ItemStateChanged

    private void jCheckBox78ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox78ItemStateChanged
        // TODO add your handling code here:
        disorder = jCheckBox78.getActionCommand();
    }//GEN-LAST:event_jCheckBox78ItemStateChanged

    private void jCheckBox28ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox28ItemStateChanged
        // TODO add your handling code here:
        transfusion = jCheckBox28.getActionCommand();
    }//GEN-LAST:event_jCheckBox28ItemStateChanged

    private void jCheckBox79ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox79ItemStateChanged
        // TODO add your handling code here:
        transfusion = jCheckBox79.getActionCommand();
    }//GEN-LAST:event_jCheckBox79ItemStateChanged

    private void jCheckBox29ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox29ItemStateChanged
        // TODO add your handling code here:
        clots = jCheckBox29.getActionCommand();
    }//GEN-LAST:event_jCheckBox29ItemStateChanged

    private void jCheckBox80ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox80ItemStateChanged
        // TODO add your handling code here:
        clots = jCheckBox80.getActionCommand();
    }//GEN-LAST:event_jCheckBox80ItemStateChanged

    private void jCheckBox27ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox27ItemStateChanged
        // TODO add your handling code here:
        tendency = jCheckBox27.getActionCommand();
    }//GEN-LAST:event_jCheckBox27ItemStateChanged

    private void jCheckBox81ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox81ItemStateChanged
        // TODO add your handling code here:
        tendency = jCheckBox8.getActionCommand();
    }//GEN-LAST:event_jCheckBox81ItemStateChanged

    private void jCheckBox40ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox40ItemStateChanged
        // TODO add your handling code here:
        illness = jCheckBox40.getActionCommand();
    }//GEN-LAST:event_jCheckBox40ItemStateChanged

    private void jCheckBox82ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox82ItemStateChanged
        // TODO add your handling code here:
        illness = jCheckBox82.getActionCommand();
    }//GEN-LAST:event_jCheckBox82ItemStateChanged

    private void jCheckBox49ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox49ItemStateChanged
        // TODO add your handling code here:
        organ = jCheckBox49.getActionCommand();
    }//GEN-LAST:event_jCheckBox49ItemStateChanged

    private void jCheckBox32ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox32ItemStateChanged
        // TODO add your handling code here:
        organ = jCheckBox32.getActionCommand();
    }//GEN-LAST:event_jCheckBox32ItemStateChanged

    private void jCheckBox42ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox42ItemStateChanged
        // TODO add your handling code here:
        alcohol = jCheckBox42.getActionCommand();
    }//GEN-LAST:event_jCheckBox42ItemStateChanged

    private void jCheckBox41ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox41ItemStateChanged
        // TODO add your handling code here:
        alcohol = jCheckBox41.getActionCommand();
    }//GEN-LAST:event_jCheckBox41ItemStateChanged

    private void jCheckBox43ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox43ItemStateChanged
        // TODO add your handling code here:
        smokes = jCheckBox43.getActionCommand();
    }//GEN-LAST:event_jCheckBox43ItemStateChanged

    private void jCheckBox83ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox83ItemStateChanged
        // TODO add your handling code here:
        smokes = jCheckBox83.getActionCommand();
    }//GEN-LAST:event_jCheckBox83ItemStateChanged

    private void jCheckBox44ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox44ItemStateChanged
        // TODO add your handling code here:
        eversmoked = jCheckBox44.getActionCommand();
    }//GEN-LAST:event_jCheckBox44ItemStateChanged

    private void jCheckBox84ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox84ItemStateChanged
        // TODO add your handling code here:
        eversmoked = jCheckBox84.getActionCommand();
    }//GEN-LAST:event_jCheckBox84ItemStateChanged

    private void jCheckBox45ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox45ItemStateChanged
        // TODO add your handling code here:
        alergic = jCheckBox45.getActionCommand();
    }//GEN-LAST:event_jCheckBox45ItemStateChanged

    private void jCheckBox85ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox85ItemStateChanged
        // TODO add your handling code here:
        alergic = jCheckBox85.getActionCommand();
    }//GEN-LAST:event_jCheckBox85ItemStateChanged

    private void saveGastricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGastricActionPerformed
      // TODO add your handling code here:
 if((patient_no.length()>0) && (visitId.length())>0){
        try{    
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into nursing.gastric_renal_gynaehistory "
                    + "(patient_no,visit_id,server_date,action_date,kidney_disorder,"
                    + "disorder_type,disorder_time,gastric_reflux,specify_gastric,gastric_when,"
                    + "menstrual_period,menstrual_weeks,action_user,breast_feeding)"
                    + "values(?,?,localtimestamp,?,?,"
                    + "upper(?),upper(?),upper(?),upper(?),upper(?),"
                    + "upper(?),upper(?),upper(?),upper(?))");
            pstmt.setObject(1,patient_no);
            pstmt.setObject(2,visitId);
            pstmt.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dated));
            pstmt.setObject(4,kidney);
            pstmt.setObject(5,kidneytxt.getText());
            pstmt.setObject(6,kidneywhentxt.getText());
            pstmt.setObject(7,gastric);
            pstmt.setObject(8,gastrictxt.getText());
            pstmt.setObject(9,gastricwhentxt.getText());
            pstmt.setObject(10,menstrual);
            pstmt.setObject(11,weekstxt.getText());
            pstmt.setObject(12,breastfeeding);
            pstmt.setObject(13,getUser());
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }        
        }
 }else{
     javax.swing.JOptionPane.showMessageDialog(this, "Please Ensure You select A patient First ","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
}
        
    }//GEN-LAST:event_saveGastricActionPerformed
    private String getUser(){
         String user=null;
         try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12=stm12.executeQuery("select current_user ");
            while (rse12.next()){
                ///getting the user
                user = rse12.getObject(1).toString();
         }
                     }
         catch(final Exception es){
         System.out.println(es);
         
         }
         return user;
    }
    private void saveMuscularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMuscularActionPerformed
        // TODO add your handling code here:
         if((patient_no.length()>0) && (visitId.length())>0){
try{
            connectDB.setAutoCommit(false);
             java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into nursing.muscularsceletal_endocrinehistory("
                     + "patient_no,visit_id,server_time,action_date,artificial_joints,joint_specify,injuries,explain_injury,"
                     + "diabetic,controlled_by,hepatitis,specify_hepatitis,action_user,hepatitiswhen)"
                     + "values(?,?,localtimestamp,?,?,upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?)"
                + ",upper(?),upper(?))");
            pstmt.setObject(1,patient_no);
            pstmt.setObject(2,visitId);
            pstmt.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dated));
            pstmt.setObject(4,artificial);
            pstmt.setObject(5,artificialtxtarea.getText());
            pstmt.setObject(6,injury);
            pstmt.setObject(7,backinjurytxtarea.getText());
            pstmt.setObject(8,diabetic);
            pstmt.setObject(9,diabetestxt.getText());
            pstmt.setObject(10,hepatitis);
            pstmt.setObject(11,hepatitistxt.getText());
            pstmt.setObject(12,hepatitiswhentxt.getText());
            pstmt.setObject(13,getUser());
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }        
        }
         }else{
     javax.swing.JOptionPane.showMessageDialog(this, "Please Ensure You select A patient First ","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
}
    }//GEN-LAST:event_saveMuscularActionPerformed

    private void specifybloodtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specifybloodtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specifybloodtxtActionPerformed

    private void saveBloodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBloodActionPerformed
        // TODO add your handling code here:
         if((patient_no.length()>0) && (visitId.length())>0){
try{
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into nursing.blood_past_surgeryhistory("
                    + "patient_no,visit_id,server_date,transaction_date,blood_disorder,specify_disorder,disorder_time,"
                    + "blood_transfusion,specify_transfussion,blood_clot,specify_clot,clot_time,bleeding_tendency,specify_tendency,action_user)"       
              + "values(?,?,localtimestamp,?,?,upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?)"
              + ",upper(?),upper(?))");
            pstmt.setObject(1,patient_no);
            pstmt.setObject(2,visitId);
            pstmt.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dated));
            pstmt.setObject(4,disorder);
            pstmt.setObject(5,specifybloodtxt.getText());
            pstmt.setObject(6,whenbloodtxt.getText());
            pstmt.setObject(7,transfusion);
            pstmt.setObject(8,transfussiontxt.getText());
            pstmt.setObject(9,clots);
            pstmt.setObject(10,specifyclots.getText());
            pstmt.setObject(11,whenclotstxt.getText());
            pstmt.setObject(12,tendency);
            pstmt.setObject(13,tendencytxt.getText());
            pstmt.setObject(14,getUser());
            
            
                        try{
            for (int i = 0; i < medicalIlness.getRowCount(); i++){
                if (medicalIlness.getModel().getValueAt(i,0) != null){
                    
        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into nursing.major_health_problems_table"
                + "(patient_no,visit_id,server_date,transaction_date,surgery_illness,describe,complication,illness_date,action_user) "
                + "values(upper(?),?,localtimestamp,?,upper(?),upper(?),upper(?),upper(?),upper(?))");
                        
                        pstmt1.setObject(1,patient_no);
                        pstmt1.setObject(2,visitId);
                        pstmt1.setObject(3,date);
                        pstmt1.setObject(4,medicalIlness.getValueAt(i,0));
                        pstmt1.setObject(5,medicalIlness.getValueAt(i,1));
                        pstmt1.setObject(6,medicalIlness.getValueAt(i,2));
                        pstmt1.setObject(7,medicalIlness.getValueAt(i,3));
                        pstmt1.setObject(8,getUser());
                        pstmt1.executeUpdate();
                }
                }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);    
            }
            catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
            
            
            
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }        
        }
         }else{
     javax.swing.JOptionPane.showMessageDialog(this, "Please Ensure You select A patient First ","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
}
    }//GEN-LAST:event_saveBloodActionPerformed

    private void saveMedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMedicationActionPerformed
        // TODO add your handling code here:illnesstxt
         if((patient_no.length()>0) && (visitId.length())>0){
try{
    
  //  if(CursorMovedOut)
    {
            
            try{
            for (int i = 0; i < medicationTable.getRowCount(); i++){
                if (medicationTable.getModel().getValueAt(i,0) != null){
                    
        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into nursing.medication_table_history"
                + "(patient_no,visit_id,server_date,transaction_date,drug_name,strength,tablets_per_day,number_at_each_time,action_user) "
                + "values(?,?,localtimestamp,?,?,upper(?),upper(?),upper(?),upper(?))");
                        
                        pstmt1.setObject(1,patient_no);
                        pstmt1.setObject(2,visitId);
                        pstmt1.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dated));
                        pstmt1.setObject(4,medicationTable.getValueAt(i,0));
                        pstmt1.setObject(5,medicationTable.getValueAt(i,1));
                        pstmt1.setObject(6,medicationTable.getValueAt(i,2));
                        pstmt1.setObject(7,medicationTable.getValueAt(i,3));
                        pstmt1.setObject(8,getUser());
                        pstmt1.executeUpdate();
                }
                }
   
            }
            catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
//            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }
//    else{
//    javax.swing.JOptionPane.showMessageDialog(null,"ERROR MESSAGE","Remove the cursor from the Table",JOptionPane.ERROR_MESSAGE);
//    }
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }  
            
            
        }
        }else{
     javax.swing.JOptionPane.showMessageDialog(this, "Please Ensure You select A patient First ","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
}
    }//GEN-LAST:event_saveMedicationActionPerformed

    private void sttingchkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sttingchkActionPerformed
        // TODO add your handling code here:
                    if(sttingchk.isSelected()){
            difficultybreathing=difficultybreathing+""+sttingchk.getActionCommand()+",";
        }   else if(!sttingchk.isSelected()){
        difficultybreathing=" ";
        } 
    }//GEN-LAST:event_sttingchkActionPerformed

    private void walkingchkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walkingchkActionPerformed
        // TODO add your handling code here:
         if(walkingchk.isSelected()){
            difficultybreathing=difficultybreathing+""+walkingchk.getActionCommand()+",";
        }   else if(!walkingchk.isSelected()){
        difficultybreathing=" ";
        } 
    }//GEN-LAST:event_walkingchkActionPerformed

    private void lyindownchkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lyindownchkActionPerformed
        // TODO add your handling code here:
         if(lyindownchk.isSelected()){
            difficultybreathing=difficultybreathing+""+lyindownchk.getActionCommand()+",";
        }   else if(!lyindownchk.isSelected()){
        difficultybreathing=" ";
        } 
    }//GEN-LAST:event_lyindownchkActionPerformed

    private void standingchkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standingchkActionPerformed
        // TODO add your handling code here:
          if(standingchk.isSelected()){
            difficultybreathing=difficultybreathing+""+standingchk.getActionCommand()+",";
        }   else if(!standingchk.isSelected()){
        difficultybreathing=" ";
        }        
    }//GEN-LAST:event_standingchkActionPerformed

    private void otherdifficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherdifficultyActionPerformed
        // TODO add your handling code here:
        if(!otherdifficulty.getText().isEmpty()&& !"Specify Others if any".equals(otherdifficulty.getText())){
         difficultybreathing=" ";   
        } else {        
        difficultybreathing=difficultybreathing+""+otherdifficulty.getText()+",";
        } 
    }//GEN-LAST:event_otherdifficultyActionPerformed

    private void patientreligionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_patientreligionItemStateChanged
        // TODO add your handling code here:

            socialhistory= patientreligion.getActionCommand()+",";
       
    }//GEN-LAST:event_patientreligionItemStateChanged

    private void jCheckBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox4ItemStateChanged
        // TODO add your handling code here:
          if(jCheckBox4.isSelected()){
            difficultyin=difficultyin+""+jCheckBox4.getActionCommand()+",";
        }   else if(!jCheckBox4.isSelected()){
        difficultyin=" ";
        }         
    }//GEN-LAST:event_jCheckBox4ItemStateChanged

    private void jCheckBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox5ItemStateChanged
        // TODO add your handling code here:
          if(jCheckBox5.isSelected()){
            difficultyin=difficultyin+""+jCheckBox5.getActionCommand()+",";
        }   else if(!jCheckBox5.isSelected()){
        difficultyin=" ";
        } 
    }//GEN-LAST:event_jCheckBox5ItemStateChanged

    private void jCheckBox6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox6ItemStateChanged
        // TODO add your handling code here:
          if(jCheckBox6.isSelected()){
            difficultyin=difficultyin+""+jCheckBox6.getActionCommand()+",";
        }   else if(!jCheckBox6.isSelected()){
        difficultyin=" ";
        }        
    }//GEN-LAST:event_jCheckBox6ItemStateChanged

    private void jCheckBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox7ItemStateChanged
        // TODO add your handling code here:
          if(jCheckBox7.isSelected()){
            difficultyin=difficultyin+""+jCheckBox7.getActionCommand()+",";
        }   else if(!jCheckBox7.isSelected()){
        difficultyin=" ";
        }
    }//GEN-LAST:event_jCheckBox7ItemStateChanged

    private void jCheckBox8ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox8ItemStateChanged
        // TODO add your handling code here:
          if(jCheckBox8.isSelected()){
            difficultyin=jCheckBox8.getActionCommand();
        }   else if(!jCheckBox7.isSelected()){
        difficultyin=" ";
        }        
    }//GEN-LAST:event_jCheckBox8ItemStateChanged

    private void bloodpastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodpastActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_bloodpastActionPerformed

    private void muscularcloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muscularcloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_muscularcloseActionPerformed

    private void medicationcloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicationcloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_medicationcloseActionPerformed

    private void respiratorycloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respiratorycloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_respiratorycloseActionPerformed

    private void gastricCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gastricCloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_gastricCloseActionPerformed

    private void saveGeneralHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGeneralHistActionPerformed
        
        //type_of_accident,mode_of_arrival,status,patient_at_risk,medication_taken,patient_valuables,
        if((patient_no.length()>0) && (visitId.length())>0){
        try{
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into nursing.history_firstpage("
                    + "patient_no,visit_id,server_date,transaction_date,type_of_accident,mode_of_arrival,status,patient_at_risk,"
                    + "medication_taken,patient_valuables,serious_illness,specify_illness,illness_time,"
                    + "organ_transplant,transplant_desc,transplant_time,drinks_alcohol,alcohol_amount,smokes,"
                    + "smoking_duration,ever_smoked,stopped_smoking,alergic,specify_alergy,social_history,specify_history,difficulty_in,action_user)"
              + "values(?,?,localtimestamp,?,?,upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?)"
              + ",upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?),upper(?))");
            pstmt.setObject(1,patient_no);
            pstmt.setObject(2,visitId);
            pstmt.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(dated));
            if(otherscasualty.getText().isEmpty()){
            pstmt.setObject(4,   dbObject.getDBObject(typeofaccident,"-"));
            }
            else{
            pstmt.setObject(4,   dbObject.getDBObject(typeofaccident=typeofaccident+""+otherscasualty.getText()+",","-"));
            }
            pstmt.setObject(5,   dbObject.getDBObject(mode_of_arrival,"-"));
            pstmt.setObject(6,   dbObject.getDBObject(status,"-"));
            pstmt.setObject(7,   dbObject.getDBObject(patientriskcmb.getSelectedItem().toString(),"-"));
            pstmt.setObject(8,   dbObject.getDBObject(medicationcmb.getSelectedItem().toString(),"-"));
            pstmt.setObject(9,   dbObject.getDBObject(valuablescmb.getSelectedItem().toString(),"-"));
            pstmt.setObject(10,   dbObject.getDBObject(illness,"-"));
            pstmt.setObject(11,   dbObject.getDBObject(illnesstxt.getText(),"-"));
            pstmt.setObject(12,   dbObject.getDBObject(illnesswhentxt.getText(),"-"));
            pstmt.setObject(13,   dbObject.getDBObject(organ,"-"));
            pstmt.setObject(14,   dbObject.getDBObject(organtxt1.getText(),"-"));
            pstmt.setObject(15,   dbObject.getDBObject(organwhentxt1.getText(),"-"));
            pstmt.setObject(16,   dbObject.getDBObject(alcohol,"-"));
            pstmt.setObject(17,   dbObject.getDBObject(alchoholtxt.getText(),"-"));
            pstmt.setObject(18,   dbObject.getDBObject(smokes,"-"));
            pstmt.setObject(19,   dbObject.getDBObject(smokestxt.getText(),"-"));
            pstmt.setObject(20,   dbObject.getDBObject(eversmoked,"-"));
            pstmt.setObject(21,   dbObject.getDBObject(stoppedtxt.getText(),"-"));
            pstmt.setObject(22,   dbObject.getDBObject(alergic,"-"));
            pstmt.setObject(23,   dbObject.getDBObject(alergictxt.getText(),"-"));
            pstmt.setObject(24,  dbObject.getDBObject(socialhistory,"-"));
            pstmt.setObject(25,  dbObject.getDBObject(patientreligiontxt.getText(),"-"));
            pstmt.setObject(26,  dbObject.getDBObject(difficultyin,"-"));
            pstmt.setObject(27,  dbObject.getDBObject(getUser(),"-"));
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);    
            }
            catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
    }else{
     javax.swing.JOptionPane.showMessageDialog(this, "Please Ensure You select A patient First ","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
}
    
    
    }//GEN-LAST:event_saveGeneralHistActionPerformed

    private void generalcloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generalcloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_generalcloseActionPerformed

    private void jCheckBox30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox30ActionPerformed
        // TODO add your handling code here:
         if(jCheckBox30.isSelected()){
            stroketxt1.setEditable(false);
            stroketxt1.setText("");
        }
    }//GEN-LAST:event_jCheckBox30ActionPerformed

    private void jCheckBox31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox31ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox31.isSelected()){
            epilepsytxt1.setEditable(false);
            epilepsywhentxt1.setEditable(false);
            epilepsytxt1.setText("");
            epilepsywhentxt1.setText("");
        }
    }//GEN-LAST:event_jCheckBox31ActionPerformed

    private void jCheckBox33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox33ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox33.isSelected()){
            emotionaltxt1.setEditable(false);
            emotionaltxt1.setText("When?");
            emotionaltxt1.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox33ActionPerformed

    private void jCheckBox51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox51ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox51.isSelected()){
            bptxt1.setEditable(false);
            bptxt1.setText("How LOng?");
            bptxt1.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox51ActionPerformed

    private void jCheckBox53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox53ActionPerformed
        // TODO add your handling code here:
         if(jCheckBox53.isSelected()){
            describepaintxt.setEditable(false);
            describedatetxt.setEditable(false);
            describepaintxt.setText("");
            describedatetxt.setText("");
        } 
    }//GEN-LAST:event_jCheckBox53ActionPerformed

    private void jCheckBox55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox55ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox55.isSelected()){
            describediseasetxt.setEditable(false);
            describediseasedatetxt.setEditable(false);
            describediseasetxt.setText("");
            describediseasedatetxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox55ActionPerformed

    private void jCheckBox56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox56ActionPerformed
        // TODO add your handling code here:
      if(jCheckBox56.isSelected()){
            rheumatictxt.setEditable(false);
            rheumatictxt.setText("How LOng?");
            rheumatictxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox56ActionPerformed

    private void jCheckBox66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox66ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox66.isSelected()){
            specifyhmeoxygen.setEditable(false);
            specifyhmeoxygen.setText("Explain");
            specifyhmeoxygen.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox66ActionPerformed

    private void jCheckBox58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox58ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox58.isSelected()){
            durationtxt.setEditable(false);
            durationtxt.setText("");
            describetxt.setEditable(false);
            describetxt.setText("");
            amounttxt.setEditable(false);
            amounttxt.setText("");
            colortxt.setEditable(false);
            colortxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox58ActionPerformed

    private void jCheckBox67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox67ActionPerformed
        // TODO add your handling code here:
         if(jCheckBox67.isSelected()){
            asmatictxt.setEditable(false);
            asmatictxt.setText("When?");
            asmatictxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox67ActionPerformed

    private void jCheckBox68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox68ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox68.isSelected()){
            kidneytxt .setEditable(false);
            kidneywhentxt.setEditable(false);
            kidneytxt .setText("");
            kidneywhentxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox68ActionPerformed

    private void jCheckBox69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox69ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox69.isSelected()){
            gastrictxt .setEditable(false);
            gastricwhentxt.setEditable(false);
            gastrictxt .setText("");
            gastricwhentxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox69ActionPerformed

    private void jCheckBox71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox71ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox71.isSelected()){
            weekstxt.setEditable(false);
            weekstxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox71ActionPerformed

    private void jCheckBox36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox36ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox36.isSelected()){
            artificialtxtarea.setEditable(false);
            artificialtxtarea.setText("");
        }
    }//GEN-LAST:event_jCheckBox36ActionPerformed

    private void jCheckBox73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox73ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox73.isSelected()){
            backinjurytxtarea.setEditable(false);
            backinjurytxtarea.setText("");
        }
    }//GEN-LAST:event_jCheckBox73ActionPerformed

    private void jCheckBox75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox75ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox75.isSelected()){
            diabetestxt.setEditable(false);
            diabetestxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox75ActionPerformed

    private void jCheckBox77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox77ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox77.isSelected()){
            hepatitistxt.setEditable(false);
            hepatitiswhentxt.setEditable(false);
            hepatitistxt.setText("");
            hepatitiswhentxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox77ActionPerformed

    private void jCheckBox78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox78ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox78.isSelected()){
            specifybloodtxt.setEditable(false);
            whenbloodtxt.setEditable(false);
            specifybloodtxt.setText("");
            whenbloodtxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox78ActionPerformed

    private void jCheckBox79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox79ActionPerformed
        // TODO add your handling code here:
         if(jCheckBox79.isSelected()){
            transfussiontxt.setEditable(false);
            transfussiontxt.setText("When?");
            transfussiontxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox79ActionPerformed

    private void jCheckBox80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox80ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox80.isSelected()){
            specifyclots.setEditable(false);
            whenclotstxt.setEditable(false);
            specifyclots.setText("");
            whenclotstxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox80ActionPerformed

    private void jCheckBox81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox81ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox81.isSelected()){
            tendencytxt .setEditable(false);
            tendencytxt .setText("Specify When?");
            tendencytxt .setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox81ActionPerformed

    private void jCheckBox82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox82ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox82.isSelected()){
            illnesstxt.setEditable(false);
            illnesswhentxt.setEditable(false);
            illnesstxt.setText("");
            illnesswhentxt.setText("");
        }
    }//GEN-LAST:event_jCheckBox82ActionPerformed

    private void jCheckBox32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox32ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox32.isSelected()){
            organtxt1.setEditable(false);
            organwhentxt1.setEditable(false);
            organtxt1.setText("");
            organwhentxt1.setText("");
        }
    }//GEN-LAST:event_jCheckBox32ActionPerformed

    private void jCheckBox41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox41ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox41.isSelected()){
            alchoholtxt.setEditable(false);
        }
    }//GEN-LAST:event_jCheckBox41ActionPerformed

    private void jCheckBox83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox83ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox83.isSelected()){
            smokestxt.setEditable(false);
        }
    }//GEN-LAST:event_jCheckBox83ActionPerformed

    private void jCheckBox84ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox84ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox84.isSelected()){
            stoppedtxt.setEditable(false);
        }
    }//GEN-LAST:event_jCheckBox84ActionPerformed

    private void jCheckBox85ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox85ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox85.isSelected()){
            alergictxt.setEditable(false);
            alergictxt.setText("Specify When?");
            alergictxt.setForeground(Color.black);
        }
    }//GEN-LAST:event_jCheckBox85ActionPerformed

    private void medicationTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_medicationTableKeyReleased
        //CursorMovedOut=true;
    }//GEN-LAST:event_medicationTableKeyReleased

    private void medicationTableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicationTableMouseExited
       CursorMovedOut=true;
    }//GEN-LAST:event_medicationTableMouseExited

    private void medicationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicationTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_medicationTableMouseClicked

    private void patientreligionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientreligionActionPerformed
        // TODO add your handling code here:patientreligiontxt
            if(patientreligion.isSelected()){
            patientreligiontxt.setEditable(true);
        }   else if(!patientreligion.isSelected()){
            patientreligiontxt.setEditable(false);
            patientreligiontxt.setText("");
        } 
    }//GEN-LAST:event_patientreligionActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
          if(jCheckBox2.isSelected()){
            typeofaccident=typeofaccident+""+jCheckBox2.getActionCommand()+",";
        }   else if(!jCheckBox2.isSelected()){
        typeofaccident=" ";
        } 
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
          if(jCheckBox3.isSelected()){
            typeofaccident=typeofaccident+""+jCheckBox3.getActionCommand()+",";
        }   else if(!jCheckBox3.isSelected()){
        typeofaccident=" ";
        } 
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        // TODO add your handling code here:
          if(jCheckBox9.isSelected()){
            typeofaccident=typeofaccident+""+jCheckBox9.getActionCommand()+",";
        }   else if(!jCheckBox9.isSelected()){
        typeofaccident=" ";
        } 
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        // TODO add your handling code here:
           if(jCheckBox10.isSelected()){
            typeofaccident=typeofaccident+""+jCheckBox10.getActionCommand()+",";
        }   else if(!jCheckBox10.isSelected()){
        typeofaccident=" ";
        } 
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        // TODO add your handling code here:
          if(jCheckBox11.isSelected()){
            typeofaccident=typeofaccident+""+jCheckBox11.getActionCommand()+",";
        }   else if(!jCheckBox11.isSelected()){
        typeofaccident=" ";
        } 
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        // TODO add your handling code here:
          if(jCheckBox12.isSelected()){
            typeofaccident=typeofaccident+""+jCheckBox12.getActionCommand()+",";
        }   else if(!jCheckBox12.isSelected()){
        typeofaccident=" ";
        } 
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox14ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jCheckBox14ActionPerformed

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jCheckBox16ActionPerformed

    private void jCheckBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox17ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jCheckBox17ActionPerformed

    private void jCheckBox18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox18ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jCheckBox18ActionPerformed

    private void jCheckBox20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox20ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jCheckBox20ActionPerformed

    private void jCheckBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox21ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jCheckBox21ActionPerformed

    private void jCheckBox25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox25ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox25ActionPerformed

    private void jCheckBox14ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox14ItemStateChanged
        // TODO add your handling code here:
       mode_of_arrival = jCheckBox14.getActionCommand(); 
    }//GEN-LAST:event_jCheckBox14ItemStateChanged

    private void jCheckBox16ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox16ItemStateChanged
        // TODO add your handling code here:
        mode_of_arrival = jCheckBox16.getActionCommand();
    }//GEN-LAST:event_jCheckBox16ItemStateChanged

    private void jCheckBox21ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox21ItemStateChanged
        // TODO add your handling code here:
        status = jCheckBox21.getActionCommand();
    }//GEN-LAST:event_jCheckBox21ItemStateChanged

    private void jCheckBox20ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox20ItemStateChanged
        // TODO add your handling code here:
        status = jCheckBox20.getActionCommand();
    }//GEN-LAST:event_jCheckBox20ItemStateChanged

    private void jCheckBox18ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox18ItemStateChanged
        // TODO add your handling code here:
        mode_of_arrival = jCheckBox18.getActionCommand();
    }//GEN-LAST:event_jCheckBox18ItemStateChanged

    private void jCheckBox17ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox17ItemStateChanged
        // TODO add your handling code here:
        mode_of_arrival = jCheckBox17.getActionCommand();
    }//GEN-LAST:event_jCheckBox17ItemStateChanged

    private void jCheckBox25ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox25ItemStateChanged
        // TODO add your handling code here:
        status = jCheckBox25.getActionCommand();
    }//GEN-LAST:event_jCheckBox25ItemStateChanged

    private void otherscasualtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherscasualtyActionPerformed
        // TODO add your handling code here:
        typeofaccident=typeofaccident+""+"Others("+otherscasualty.getText()+"),";
        
    }//GEN-LAST:event_otherscasualtyActionPerformed

    private void tabbedpaneAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedpaneAllMouseClicked
       if(this.tabbedpaneAll.getSelectedIndex()==2){
           if(Gender.equalsIgnoreCase("Female")) {
               this.jPanel58.setVisible(true);
           }
           else
             if(Gender.equalsIgnoreCase("Male")) {
              this.jPanel58.setVisible(false);  
           }   
       }
    }//GEN-LAST:event_tabbedpaneAllMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patientsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patientsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patientsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patientsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                patientsHistory dialog = new patientsHistory(new javax.swing.JFrame(), true,connectDB,pConnDB,patient_no,dated,visitId,ward,Gender);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alchoholtxt;
    private javax.swing.JTextField alergictxt;
    private javax.swing.JTextField amounttxt;
    private javax.swing.JTextArea artificialtxtarea;
    private javax.swing.JTextField asmatictxt;
    private javax.swing.JTextArea backinjurytxtarea;
    private javax.swing.JButton bloodpast;
    private javax.swing.JTextField bptxt1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.ButtonGroup buttonGroup13;
    private javax.swing.ButtonGroup buttonGroup14;
    private javax.swing.ButtonGroup buttonGroup15;
    private javax.swing.ButtonGroup buttonGroup16;
    private javax.swing.ButtonGroup buttonGroup17;
    private javax.swing.ButtonGroup buttonGroup18;
    private javax.swing.ButtonGroup buttonGroup19;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup20;
    private javax.swing.ButtonGroup buttonGroup21;
    private javax.swing.ButtonGroup buttonGroup22;
    private javax.swing.ButtonGroup buttonGroup23;
    private javax.swing.ButtonGroup buttonGroup24;
    private javax.swing.ButtonGroup buttonGroup25;
    private javax.swing.ButtonGroup buttonGroup26;
    private javax.swing.ButtonGroup buttonGroup27;
    private javax.swing.ButtonGroup buttonGroup28;
    private javax.swing.ButtonGroup buttonGroup29;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup30;
    private javax.swing.ButtonGroup buttonGroup31;
    private javax.swing.ButtonGroup buttonGroup32;
    private javax.swing.ButtonGroup buttonGroup33;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JTextField colortxt;
    private javax.swing.JTextField describedatetxt;
    private javax.swing.JTextField describediseasedatetxt;
    private javax.swing.JTextField describediseasetxt;
    private javax.swing.JTextField describepaintxt;
    private javax.swing.JTextField describetxt;
    private javax.swing.JTextField diabetestxt;
    private javax.swing.JTextField durationtxt;
    private javax.swing.JTextField emotionaltxt1;
    private javax.swing.JTextField epilepsytxt1;
    private javax.swing.JTextField epilepsywhentxt1;
    private javax.swing.JButton gastricClose;
    private javax.swing.JTextField gastrictxt;
    private javax.swing.JTextField gastricwhentxt;
    private javax.swing.JButton generalclose;
    public static javax.swing.JPanel globalpane;
    private javax.swing.JTextField hepatitistxt;
    private javax.swing.JTextField hepatitiswhentxt;
    private javax.swing.JTextField illnesstxt;
    private javax.swing.JTextField illnesswhentxt;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox29;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox30;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox32;
    private javax.swing.JCheckBox jCheckBox33;
    private javax.swing.JCheckBox jCheckBox34;
    private javax.swing.JCheckBox jCheckBox35;
    private javax.swing.JCheckBox jCheckBox36;
    private javax.swing.JCheckBox jCheckBox37;
    private javax.swing.JCheckBox jCheckBox38;
    private javax.swing.JCheckBox jCheckBox39;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox40;
    private javax.swing.JCheckBox jCheckBox41;
    private javax.swing.JCheckBox jCheckBox42;
    private javax.swing.JCheckBox jCheckBox43;
    private javax.swing.JCheckBox jCheckBox44;
    private javax.swing.JCheckBox jCheckBox45;
    private javax.swing.JCheckBox jCheckBox46;
    private javax.swing.JCheckBox jCheckBox48;
    private javax.swing.JCheckBox jCheckBox49;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox50;
    private javax.swing.JCheckBox jCheckBox51;
    private javax.swing.JCheckBox jCheckBox52;
    private javax.swing.JCheckBox jCheckBox53;
    private javax.swing.JCheckBox jCheckBox54;
    private javax.swing.JCheckBox jCheckBox55;
    private javax.swing.JCheckBox jCheckBox56;
    private javax.swing.JCheckBox jCheckBox57;
    private javax.swing.JCheckBox jCheckBox58;
    private javax.swing.JCheckBox jCheckBox59;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox60;
    private javax.swing.JCheckBox jCheckBox65;
    private javax.swing.JCheckBox jCheckBox66;
    private javax.swing.JCheckBox jCheckBox67;
    private javax.swing.JCheckBox jCheckBox68;
    private javax.swing.JCheckBox jCheckBox69;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox70;
    private javax.swing.JCheckBox jCheckBox71;
    private javax.swing.JCheckBox jCheckBox72;
    private javax.swing.JCheckBox jCheckBox73;
    private javax.swing.JCheckBox jCheckBox74;
    private javax.swing.JCheckBox jCheckBox75;
    private javax.swing.JCheckBox jCheckBox76;
    private javax.swing.JCheckBox jCheckBox77;
    private javax.swing.JCheckBox jCheckBox78;
    private javax.swing.JCheckBox jCheckBox79;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox80;
    private javax.swing.JCheckBox jCheckBox81;
    private javax.swing.JCheckBox jCheckBox82;
    private javax.swing.JCheckBox jCheckBox83;
    private javax.swing.JCheckBox jCheckBox84;
    private javax.swing.JCheckBox jCheckBox85;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JPanel jPanel67;
    private javax.swing.JPanel jPanel68;
    private javax.swing.JPanel jPanel69;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel70;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel72;
    private javax.swing.JPanel jPanel73;
    private javax.swing.JPanel jPanel74;
    private javax.swing.JPanel jPanel75;
    private javax.swing.JPanel jPanel76;
    private javax.swing.JPanel jPanel77;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField kidneytxt;
    private javax.swing.JTextField kidneywhentxt;
    private javax.swing.JLabel lagej;
    private javax.swing.JLabel lagej1;
    private javax.swing.JCheckBox lyindownchk;
    private javax.swing.JTable medicalIlness;
    private javax.swing.JTable medicationTable;
    private javax.swing.JButton medicationclose;
    private javax.swing.JComboBox medicationcmb;
    private javax.swing.JButton muscularclose;
    private javax.swing.JTextField organtxt1;
    private javax.swing.JTextField organwhentxt1;
    private javax.swing.JTextField otherdifficulty;
    private javax.swing.JTextField otherscasualty;
    public static javax.swing.JPanel paneAll;
    private javax.swing.JCheckBox patientreligion;
    private javax.swing.JTextField patientreligiontxt;
    private javax.swing.JComboBox patientriskcmb;
    private javax.swing.JButton respiratoryclose;
    private javax.swing.JTextField rheumatictxt;
    private javax.swing.JButton saveBlood;
    private javax.swing.JButton saveGastric;
    private javax.swing.JButton saveGeneralHist;
    private javax.swing.JButton saveMedication;
    private javax.swing.JButton saveMuscular;
    private javax.swing.JButton saveRespiratory;
    private javax.swing.JTextField smokestxt;
    private javax.swing.JTextField specifybloodtxt;
    private javax.swing.JTextField specifyclots;
    private javax.swing.JTextField specifyhmeoxygen;
    private javax.swing.JCheckBox standingchk;
    private javax.swing.JTextField stoppedtxt;
    private javax.swing.JTextField stroketxt1;
    private javax.swing.JCheckBox strokeyes;
    private javax.swing.JCheckBox sttingchk;
    private javax.swing.JTabbedPane tabbedpaneAll;
    private javax.swing.JTextField tendencytxt;
    private javax.swing.JTextField transfussiontxt;
    private javax.swing.JComboBox valuablescmb;
    private javax.swing.JCheckBox walkingchk;
    private javax.swing.JTextField weekstxt;
    private javax.swing.JTextField whenbloodtxt;
    private javax.swing.JTextField whenclotstxt;
    // End of variables declaration//GEN-END:variables
}
