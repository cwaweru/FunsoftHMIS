/*
 *
 *
 * HRMain.java
 *
 * Created on January 1, 2005, 11:30 PM
 */

package com.afrisoftech.fleet;


import com.afrisoftech.fleet.*;
import javax.swing.JDesktopPane;
import java.beans.PropertyVetoException;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JInternalFrame;
import java.io.IOException;
import java.awt.*;



/**
 *
 * @author  Raphael Mbugua.
 *
 */
public class Develop extends javax.swing.JFrame {
   
    //javax.help.HelpSet helpHS = null;
    
    //javax.help.HelpBroker helpBroker;
    
    boolean isRunning;
    
    //javax.help.HelpSet apiHS = null;
    
    //javax.help.HelpBroker apiHB = null;
    
    public static java.sql.Connection connectDB = null;
    
    public java.lang.String dbUserName = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    //static final java.lang.String helpSetName = "EpackHimsHelp";
    
    //static final java.lang.String helpSetLable = "Hospital Information Management System (HIMS)";
    /** Creates new form HRMain */
    public Develop(java.sql.Connection connDB, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDB;
        
        pConnDB = pconnDB;
        
        
      /*  try {
            
            java.lang.ClassLoader classLoader = FleetMain.class.getClassLoader();
            
            //java.net.URL urlHelpSet = javax.help.HelpSet.findHelpSet(classLoader, helpSetName);
            
            //helpHS = new javax.help.HelpSet(classLoader, urlHelpSet);
            
        } catch(java.lang.Exception exec) {
            
            exec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
            
        }*/
        
        // helpBroker = helpHS.createHelpBroker();
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel2 = new javax.swing.JPanel();
        gridBagLayout1 = new java.awt.GridBagLayout();
        fleetMainPanel = new javax.swing.JPanel();
        FleetSplit = new javax.swing.JSplitPane();
        ListPanel = new javax.swing.JPanel();
        listScrollPane1 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList();
        FleetMainPanel = new javax.swing.JPanel();
        fleetdesktop = new javax.swing.JDesktopPane();
        maintoolbar = new javax.swing.JToolBar();
        tool1 = new javax.swing.JToolBar();
        Addnewvehiclebtn2 = new javax.swing.JButton();
        Editbtn = new javax.swing.JButton();
        Deletevehiclebtn2 = new javax.swing.JButton();
        tool2 = new javax.swing.JToolBar();
        Workordersbtn2 = new javax.swing.JButton();
        Pmcheckbtn2 = new javax.swing.JButton();
        tool3 = new javax.swing.JToolBar();
        Pmschedrepairsbtn4 = new javax.swing.JButton();
        Repairsbtn4 = new javax.swing.JButton();
        tool4 = new javax.swing.JToolBar();
        Driversbtn2 = new javax.swing.JButton();
        Vendorbtn2 = new javax.swing.JButton();
        Partsbtn2 = new javax.swing.JButton();
        tool5 = new javax.swing.JToolBar();
        Reports1 = new javax.swing.JButton();
        fleetMenuBar3 = new javax.swing.JMenuBar();
        fleetSetupmn = new javax.swing.JMenu();
        legalstatusmnit = new javax.swing.JMenuItem();
        countrydistrictmn = new javax.swing.JMenu();
        countrymntfr = new javax.swing.JMenuItem();
        districtsmnit = new javax.swing.JMenuItem();
        departmentmnit = new javax.swing.JMenuItem();
        companyprofilemnit = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        driveremployeemnit = new javax.swing.JMenu();
        drivermnit = new javax.swing.JMenuItem();
        Employeemnit = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        vehicletypemnit = new javax.swing.JMenuItem();
        partequptmnit = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        insurancecompmnit = new javax.swing.JMenuItem();
        fuelvendermnit = new javax.swing.JMenuItem();
        repairvendermnit = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        exitmnit = new javax.swing.JMenuItem();
        fleetOperationsmn = new javax.swing.JMenu();
        AddVehiclemnit = new javax.swing.JMenuItem();
        Addvehicleduplicate = new javax.swing.JMenuItem();
        Fleetmanagermn = new javax.swing.JMenu();
        registrationpartimnit = new javax.swing.JMenuItem();
        purchaseinformnit = new javax.swing.JMenuItem();
        spescificationmnit = new javax.swing.JMenuItem();
        insurancemnit = new javax.swing.JMenuItem();
        loanleasemnit = new javax.swing.JMenuItem();
        photomnit = new javax.swing.JMenuItem();
        notesmnit = new javax.swing.JMenuItem();
        sepper1 = new javax.swing.JSeparator();
        Vehiclemn = new javax.swing.JMenu();
        issuelworkmnit = new javax.swing.JMenuItem();
        schedulerepairmnit = new javax.swing.JMenuItem();
        vehiclest1 = new javax.swing.JSeparator();
        Maintenanceduemnit = new javax.swing.JMenuItem();
        vehiclest2 = new javax.swing.JSeparator();
        Maintenancehistmnit = new javax.swing.JMenuItem();
        tirehistmnit = new javax.swing.JMenuItem();
        Coststatisticsmnit = new javax.swing.JMenuItem();
        vehiclest3 = new javax.swing.JSeparator();
        Currentmainstatusmnit = new javax.swing.JMenuItem();
        Lastpmsetupmnit = new javax.swing.JMenuItem();
        vehiclest4 = new javax.swing.JSeparator();
        Fuelhistorymnit = new javax.swing.JMenuItem();
        vehiclest5 = new javax.swing.JSeparator();
        Triphist = new javax.swing.JMenuItem();
        Maintenancemn = new javax.swing.JMenu();
        Pmcheckwizmn = new javax.swing.JMenu();
        Selectedvehiclemnit = new javax.swing.JMenuItem();
        Selecteddepmn = new javax.swing.JMenuItem();
        Selectedlocmn = new javax.swing.JMenuItem();
        Allvehiclemnit = new javax.swing.JMenuItem();
        Updatemetermnit = new javax.swing.JMenuItem();
        Maintenancesep1 = new javax.swing.JSeparator();
        Pmschedulesetupmnit = new javax.swing.JMenuItem();
        Pmassociatesmn = new javax.swing.JMenuItem();
        Scheduledrepairmnit = new javax.swing.JMenuItem();
        Maintenancesep2 = new javax.swing.JSeparator();
        IssueWorkordermnit = new javax.swing.JMenuItem();
        Workordermanagmnit = new javax.swing.JMenuItem();
        Inventorymn = new javax.swing.JMenu();
        Partsinventorymnit = new javax.swing.JMenuItem();
        Tireinventorymnit = new javax.swing.JMenuItem();
        sep1 = new javax.swing.JSeparator();
        Purchaseordersmnit = new javax.swing.JMenuItem();
        Purchaseorderaddmnit = new javax.swing.JMenuItem();
        sep2 = new javax.swing.JSeparator();
        Poreceiptbyponummnit = new javax.swing.JMenuItem();
        Poreceiptbypartmnit = new javax.swing.JMenuItem();
        sep3 = new javax.swing.JSeparator();
        Adjustrecievemnit = new javax.swing.JMenuItem();
        Billingmn = new javax.swing.JMenu();
        Generateinvomnit = new javax.swing.JMenuItem();
        Browseinvoicesmnit = new javax.swing.JMenuItem();
        sepat1 = new javax.swing.JSeparator();
        Recordpaymentsmnit = new javax.swing.JMenuItem();
        Browsepaymemnit = new javax.swing.JMenuItem();
        FleetUtilitiesmn = new javax.swing.JMenu();
        backgroundmnit = new javax.swing.JMenuItem();
        Lookandfeellnfmn = new javax.swing.JMenu();
        swinglnfmnit11 = new javax.swing.JCheckBoxMenuItem();
        winlnfmnit11 = new javax.swing.JCheckBoxMenuItem();
        motiflnfmnit11 = new javax.swing.JCheckBoxMenuItem();
        macmnit11 = new javax.swing.JCheckBoxMenuItem();
        skinmn1 = new javax.swing.JMenu();
        xpmnit11 = new javax.swing.JRadioButtonMenuItem();
        macos1mnit11 = new javax.swing.JRadioButtonMenuItem();
        whiltmnit11 = new javax.swing.JRadioButtonMenuItem();
        modernmnit11 = new javax.swing.JRadioButtonMenuItem();
        aquamnit11 = new javax.swing.JRadioButtonMenuItem();
        beosmnit11 = new javax.swing.JRadioButtonMenuItem();
        bbjmnit111 = new javax.swing.JRadioButtonMenuItem();
        FleetReportsmn = new javax.swing.JMenu();
        billingmn = new javax.swing.JMenu();
        invoicesoutstandingmnit = new javax.swing.JMenuItem();
        invoicespaidinfullmnit = new javax.swing.JMenuItem();
        invoicessummaryoutstandingmnit = new javax.swing.JMenuItem();
        invoicessummarypaidinfullmnit = new javax.swing.JMenuItem();
        paymentsrecievedmnit = new javax.swing.JMenuItem();
        employeesmn = new javax.swing.JMenu();
        detailedcontactlistmnit = new javax.swing.JMenuItem();
        generalcontactlistmnit = new javax.swing.JMenuItem();
        personalinformationmnit = new javax.swing.JMenuItem();
        licenceinformationmnit = new javax.swing.JMenuItem();
        licencerenewalsduemnit = new javax.swing.JMenuItem();
        certificationsmnit = new javax.swing.JMenuItem();
        certificationsrenewalsmnit = new javax.swing.JMenuItem();
        phsicalinformationsmnit = new javax.swing.JMenuItem();
        physicalrenewalsduemnit = new javax.swing.JMenuItem();
        fleetmn = new javax.swing.JMenu();
        fleetlistingmnit = new javax.swing.JMenuItem();
        generalmnit = new javax.swing.JMenuItem();
        specificationspartsmnit = new javax.swing.JMenuItem();
        purchaseinformationmnit = new javax.swing.JMenuItem();
        registrationinformationmnit = new javax.swing.JMenuItem();
        insurancermnit = new javax.swing.JMenuItem();
        loanleaser = new javax.swing.JMenuItem();
        registrationrenewalduemnit = new javax.swing.JMenuItem();
        stateinspectionrenewalsduemnit = new javax.swing.JMenuItem();
        fuelpurchasemn = new javax.swing.JMenu();
        fuelpurchaseshistorymnit = new javax.swing.JMenuItem();
        fuelcostsummarymnit = new javax.swing.JMenuItem();
        maintanancehistorymn = new javax.swing.JMenu();
        historyoverviewmnit = new javax.swing.JMenuItem();
        completehistorymnit = new javax.swing.JMenuItem();
        pmhistorymnit = new javax.swing.JMenuItem();
        repairhistorymnit = new javax.swing.JMenuItem();
        partshistorymnit = new javax.swing.JMenuItem();
        labourhistorymnit = new javax.swing.JMenuItem();
        externalserviceshistorymnit = new javax.swing.JMenuItem();
        fuelpurchasesrmnit = new javax.swing.JMenuItem();
        historycostsummarymnit = new javax.swing.JMenuItem();
        vendorcostsummarymnit = new javax.swing.JMenuItem();
        partsinventorymn = new javax.swing.JMenu();
        partslistingmnit = new javax.swing.JMenuItem();
        partslistingbyvendormnit = new javax.swing.JMenuItem();
        partslistngcategorymnit = new javax.swing.JMenuItem();
        needreoderedmnit = new javax.swing.JMenuItem();
        recieptsmnit = new javax.swing.JMenuItem();
        partshstoryrmnit = new javax.swing.JMenuItem();
        partsusagemnit = new javax.swing.JMenuItem();
        stockvaluedetailedmnit = new javax.swing.JMenuItem();
        stockvaluesummarymnit = new javax.swing.JMenuItem();
        pmsevicesmn = new javax.swing.JMenu();
        pmschedulesmnit = new javax.swing.JMenuItem();
        pmlastperfomeddatamnit = new javax.swing.JMenuItem();
        currentpmstatusmnit = new javax.swing.JMenuItem();
        maintainanceduemnit = new javax.swing.JMenuItem();
        pmcoststatisticspervehicleequipmnit = new javax.swing.JMenuItem();
        pmcoststatisticsoveralmnit = new javax.swing.JMenuItem();
        purchaseodersmn = new javax.swing.JMenu();
        generateclosedmnit = new javax.swing.JMenuItem();
        generateoutstandingmnit = new javax.swing.JMenuItem();
        Recieptsrmnit = new javax.swing.JMenuItem();
        summaryclosedmnit = new javax.swing.JMenuItem();
        summaryoutstandingmnit = new javax.swing.JMenuItem();
        vendorsummarymnit = new javax.swing.JMenuItem();
        sheduledrepairsmn = new javax.swing.JMenu();
        outstndingallvehiclemnit = new javax.swing.JMenuItem();
        outstandingselectedvehicle = new javax.swing.JMenuItem();
        currentdueallvehiclemnit = new javax.swing.JMenuItem();
        currentlydueselectedvehiclesmnit = new javax.swing.JMenuItem();
        summaryreportsmn = new javax.swing.JMenu();
        pmcoststatisticspervehicleequiprmnit = new javax.swing.JMenuItem();
        pmcoststatisticsoverallmnit = new javax.swing.JMenuItem();
        historycostsummarurmnit = new javax.swing.JMenuItem();
        vendorcostsummaryrmnit = new javax.swing.JMenuItem();
        fuelcostsummaryrmnit = new javax.swing.JMenuItem();
        workordedersummaryopenmnit = new javax.swing.JMenuItem();
        workordersummaryclosedmnit = new javax.swing.JMenuItem();
        fleetlistingrmnit = new javax.swing.JMenuItem();
        travelmn = new javax.swing.JMenu();
        triphistorymnit = new javax.swing.JMenuItem();
        tripticketsmnit = new javax.swing.JMenuItem();
        usagebylocdeptvehicledetailedrmnit = new javax.swing.JMenuItem();
        usagebydriverdeptdetailedmnit = new javax.swing.JMenuItem();
        usagebylocdeptdriveroverviewmnit = new javax.swing.JMenuItem();
        usagebydriveroverviewmnit = new javax.swing.JMenuItem();
        tiresmn = new javax.swing.JMenu();
        tiresinventorylistingallmnit = new javax.swing.JMenuItem();
        tiresinventorylistingmountedmnit = new javax.swing.JMenuItem();
        tiresinventorylistingdismountedmnit = new javax.swing.JMenuItem();
        tirehistorybyvehicleequipmentmnit = new javax.swing.JMenuItem();
        tirehistorybytiremnit = new javax.swing.JMenuItem();
        vendorsmn = new javax.swing.JMenu();
        vendorslistingmnit = new javax.swing.JMenuItem();
        vendorscostsummarymnit = new javax.swing.JMenuItem();
        Workordersmnit = new javax.swing.JMenu();
        workordersopenmnit = new javax.swing.JMenuItem();
        workorderscompletemnit = new javax.swing.JMenuItem();
        worksummaryopenmnit = new javax.swing.JMenuItem();
        worksummaryclosedmnit = new javax.swing.JMenuItem();
        reportgeneratorrmnit = new javax.swing.JMenuItem();
        FleetHelpmn = new javax.swing.JMenu();
        helpcontentsmnit = new javax.swing.JMenuItem();
        aboutmnit = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Fleet Management System");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        fleetMainPanel.setLayout(new java.awt.GridBagLayout());

        FleetSplit.setDividerLocation(151);
        ListPanel.setLayout(new java.awt.GridBagLayout());

        ListPanel.setMinimumSize(new java.awt.Dimension(32, 47));
        ListPanel.setPreferredSize(new java.awt.Dimension(269, 156));
        listScrollPane1.setViewportView(jList11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ListPanel.add(listScrollPane1, gridBagConstraints);

        FleetSplit.setLeftComponent(ListPanel);

        FleetMainPanel.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        FleetMainPanel.add(fleetdesktop, gridBagConstraints);

        FleetSplit.setRightComponent(FleetMainPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 3, 5, 2);
        fleetMainPanel.add(FleetSplit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 500.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(fleetMainPanel, gridBagConstraints);

        Addnewvehiclebtn2.setText("Add Vehicle");
        Addnewvehiclebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addnewvehiclebtn2ActionPerformed(evt);
            }
        });

        tool1.add(Addnewvehiclebtn2);

        Editbtn.setText("Edit ");
        Editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditbtnActionPerformed(evt);
            }
        });

        tool1.add(Editbtn);

        Deletevehiclebtn2.setText("Delete ");
        tool1.add(Deletevehiclebtn2);

        maintoolbar.add(tool1);

        Workordersbtn2.setIcon(new javax.swing.ImageIcon("C:\\Documents and Settings\\Administrator\\Desktop\\icons\\piy.gif"));
        Workordersbtn2.setText("Work Order");
        Workordersbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Workordersbtn2ActionPerformed(evt);
            }
        });

        tool2.add(Workordersbtn2);

        Pmcheckbtn2.setText("PM Check");
        tool2.add(Pmcheckbtn2);

        maintoolbar.add(tool2);

        Pmschedrepairsbtn4.setText("PM Sched Repair");
        Pmschedrepairsbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pmschedrepairsbtn4ActionPerformed(evt);
            }
        });

        tool3.add(Pmschedrepairsbtn4);

        Repairsbtn4.setText("Repairs");
        Repairsbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Repairsbtn4ActionPerformed(evt);
            }
        });

        tool3.add(Repairsbtn4);

        maintoolbar.add(tool3);

        Driversbtn2.setText("Drivers");
        Driversbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Driversbtn2ActionPerformed(evt);
            }
        });

        tool4.add(Driversbtn2);

        Vendorbtn2.setText("Vendors");
        Vendorbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Vendorbtn2ActionPerformed(evt);
            }
        });

        tool4.add(Vendorbtn2);

        Partsbtn2.setText("Parts");
        Partsbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Partsbtn2ActionPerformed(evt);
            }
        });

        tool4.add(Partsbtn2);

        maintoolbar.add(tool4);

        Reports1.setText("Reports");
        Reports1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reports1ActionPerformed(evt);
            }
        });

        tool5.add(Reports1);

        maintoolbar.add(tool5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        getContentPane().add(maintoolbar, gridBagConstraints);

        fleetMenuBar3.setBorder(new javax.swing.border.TitledBorder(null, "Fleet Management System", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 3, 11), new java.awt.Color(0, 0, 255)));
        fleetSetupmn.setText("Setup");
        fleetSetupmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fleetSetupmnActionPerformed(evt);
            }
        });

        legalstatusmnit.setText("Legal Status Setup");
        legalstatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                legalstatusmnitActionPerformed(evt);
            }
        });

        fleetSetupmn.add(legalstatusmnit);
        countrydistrictmn.setText("Country/District");
        countrydistrictmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countrydistrictmnActionPerformed(evt);
            }
        });

        countrymntfr.setText("Country");
        countrymntfr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countrymntfrActionPerformed(evt);
            }
        });

        countrydistrictmn.add(countrymntfr);
        districtsmnit.setText("Districts");
        districtsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                districtsmnitActionPerformed(evt);
            }
        });

        countrydistrictmn.add(districtsmnit);
        fleetSetupmn.add(countrydistrictmn);
        departmentmnit.setText("Department");
        departmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentmnitActionPerformed(evt);
            }
        });

        fleetSetupmn.add(departmentmnit);
        companyprofilemnit.setText("Company Profile");
        companyprofilemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyprofilemnitActionPerformed(evt);
            }
        });

        fleetSetupmn.add(companyprofilemnit);
        fleetSetupmn.add(jSeparator1);
        driveremployeemnit.setText("Driver/Employee");
        drivermnit.setText("New Drivers");
        drivermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drivermnitActionPerformed(evt);
            }
        });

        driveremployeemnit.add(drivermnit);
        Employeemnit.setText("New Employee");
        driveremployeemnit.add(Employeemnit);
        fleetSetupmn.add(driveremployeemnit);
        fleetSetupmn.add(jSeparator2);
        vehicletypemnit.setText("Vehicle Type");
        vehicletypemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicletypemnitActionPerformed(evt);
            }
        });

        fleetSetupmn.add(vehicletypemnit);
        partequptmnit.setText("Parts");
        partequptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partequptmnitActionPerformed(evt);
            }
        });

        fleetSetupmn.add(partequptmnit);
        fleetSetupmn.add(jSeparator4);
        insurancecompmnit.setText("Insurance Company");
        insurancecompmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insurancecompmnitActionPerformed(evt);
            }
        });

        fleetSetupmn.add(insurancecompmnit);
        fuelvendermnit.setText("Fuel Vender");
        fleetSetupmn.add(fuelvendermnit);
        repairvendermnit.setText("Repair Vender");
        fleetSetupmn.add(repairvendermnit);
        fleetSetupmn.add(jSeparator3);
        exitmnit.setText("EXIT");
        exitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitmnitActionPerformed(evt);
            }
        });

        fleetSetupmn.add(exitmnit);
        fleetMenuBar3.add(fleetSetupmn);
        fleetOperationsmn.setText("Operations");
        AddVehiclemnit.setText("Add New Vehicle");
        AddVehiclemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddVehiclemnitActionPerformed(evt);
            }
        });

        AddVehiclemnit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AddVehiclemnitItemStateChanged(evt);
            }
        });

        fleetOperationsmn.add(AddVehiclemnit);
        Addvehicleduplicate.setText("Add Duplicate");
        Addvehicleduplicate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddvehicleduplicateActionPerformed(evt);
            }
        });

        fleetOperationsmn.add(Addvehicleduplicate);
        Fleetmanagermn.setText("Fleet Manager");
        registrationpartimnit.setText("Registration Particulars");
        registrationpartimnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationpartimnitActionPerformed(evt);
            }
        });

        Fleetmanagermn.add(registrationpartimnit);
        purchaseinformnit.setText("Purchase info");
        Fleetmanagermn.add(purchaseinformnit);
        spescificationmnit.setText("Spescification/parts");
        Fleetmanagermn.add(spescificationmnit);
        insurancemnit.setText("Insurance");
        Fleetmanagermn.add(insurancemnit);
        loanleasemnit.setText("Loan/Lease");
        Fleetmanagermn.add(loanleasemnit);
        photomnit.setText("Photo");
        Fleetmanagermn.add(photomnit);
        notesmnit.setText("Notes");
        Fleetmanagermn.add(notesmnit);
        fleetOperationsmn.add(Fleetmanagermn);
        fleetOperationsmn.add(sepper1);
        Vehiclemn.setText("Vehicle");
        issuelworkmnit.setText("Issuel Work Order");
        issuelworkmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issuelworkmnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(issuelworkmnit);
        schedulerepairmnit.setText("Schedule Repair");
        schedulerepairmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schedulerepairmnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(schedulerepairmnit);
        Vehiclemn.add(vehiclest1);
        Maintenanceduemnit.setText("Maintenance Due");
        Maintenanceduemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaintenanceduemnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(Maintenanceduemnit);
        Vehiclemn.add(vehiclest2);
        Maintenancehistmnit.setText("Maintenance History");
        Maintenancehistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaintenancehistmnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(Maintenancehistmnit);
        tirehistmnit.setText("Tire History");
        tirehistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tirehistmnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(tirehistmnit);
        Coststatisticsmnit.setText("Cost Statistict");
        Coststatisticsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoststatisticsmnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(Coststatisticsmnit);
        Vehiclemn.add(vehiclest3);
        Currentmainstatusmnit.setText("Current Maintenance Status");
        Currentmainstatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentmainstatusmnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(Currentmainstatusmnit);
        Lastpmsetupmnit.setText("Last PM Setup");
        Lastpmsetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastpmsetupmnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(Lastpmsetupmnit);
        Vehiclemn.add(vehiclest4);
        Fuelhistorymnit.setText("Fuel History");
        Fuelhistorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FuelhistorymnitActionPerformed(evt);
            }
        });

        Vehiclemn.add(Fuelhistorymnit);
        Vehiclemn.add(vehiclest5);
        Triphist.setText("Trip History");
        Triphist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TriphistActionPerformed(evt);
            }
        });

        Vehiclemn.add(Triphist);
        fleetOperationsmn.add(Vehiclemn);
        Maintenancemn.setText("Maintenance");
        Pmcheckwizmn.setText("PM Check Wizard");
        Selectedvehiclemnit.setText("Selected Vehicle(s)");
        Pmcheckwizmn.add(Selectedvehiclemnit);
        Selecteddepmn.setText("Selected Department");
        Pmcheckwizmn.add(Selecteddepmn);
        Selectedlocmn.setText("Selected Location");
        Pmcheckwizmn.add(Selectedlocmn);
        Allvehiclemnit.setText("All Vehicles");
        Pmcheckwizmn.add(Allvehiclemnit);
        Maintenancemn.add(Pmcheckwizmn);
        Updatemetermnit.setText("Update Meter Readings");
        Updatemetermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatemetermnitActionPerformed(evt);
            }
        });

        Maintenancemn.add(Updatemetermnit);
        Maintenancemn.add(Maintenancesep1);
        Pmschedulesetupmnit.setText("PM Schedule Setup");
        Pmschedulesetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PmschedulesetupmnitActionPerformed(evt);
            }
        });

        Maintenancemn.add(Pmschedulesetupmnit);
        Pmassociatesmn.setText("PM Associates");
        Pmassociatesmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PmassociatesmnActionPerformed(evt);
            }
        });

        Maintenancemn.add(Pmassociatesmn);
        Scheduledrepairmnit.setText("Scheduled Repairs");
        Scheduledrepairmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduledrepairmnitActionPerformed(evt);
            }
        });

        Maintenancemn.add(Scheduledrepairmnit);
        Maintenancemn.add(Maintenancesep2);
        IssueWorkordermnit.setText("Issue Work Order");
        IssueWorkordermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueWorkordermnitActionPerformed(evt);
            }
        });

        Maintenancemn.add(IssueWorkordermnit);
        Workordermanagmnit.setText("Work Order Management");
        Workordermanagmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WorkordermanagmnitActionPerformed(evt);
            }
        });

        Maintenancemn.add(Workordermanagmnit);
        fleetOperationsmn.add(Maintenancemn);
        Inventorymn.setText("Inventory");
        Partsinventorymnit.setText("Parts Inventory");
        Partsinventorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PartsinventorymnitActionPerformed(evt);
            }
        });

        Inventorymn.add(Partsinventorymnit);
        Tireinventorymnit.setText("Tire Inventory");
        Tireinventorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TireinventorymnitActionPerformed(evt);
            }
        });

        Inventorymn.add(Tireinventorymnit);
        Inventorymn.add(sep1);
        Purchaseordersmnit.setText("Purchase Orders - Browse");
        Purchaseordersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseordersmnitActionPerformed(evt);
            }
        });

        Inventorymn.add(Purchaseordersmnit);
        Purchaseorderaddmnit.setText("Purchase Order - Add");
        Purchaseorderaddmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseorderaddmnitActionPerformed(evt);
            }
        });

        Inventorymn.add(Purchaseorderaddmnit);
        Inventorymn.add(sep2);
        Poreceiptbyponummnit.setText("PO Receipt - By PO #");
        Poreceiptbyponummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PoreceiptbyponummnitActionPerformed(evt);
            }
        });

        Inventorymn.add(Poreceiptbyponummnit);
        Poreceiptbypartmnit.setText("PO Receipt - By Part #");
        Poreceiptbypartmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PoreceiptbypartmnitActionPerformed(evt);
            }
        });

        Inventorymn.add(Poreceiptbypartmnit);
        Inventorymn.add(sep3);
        Adjustrecievemnit.setText("Adjust/Recieve Into Inventory");
        Adjustrecievemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdjustrecievemnitActionPerformed(evt);
            }
        });

        Inventorymn.add(Adjustrecievemnit);
        fleetOperationsmn.add(Inventorymn);
        Billingmn.setText("Billing");
        Generateinvomnit.setText("Generate Invoice");
        Generateinvomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateinvomnitActionPerformed(evt);
            }
        });

        Billingmn.add(Generateinvomnit);
        Browseinvoicesmnit.setText("Browse Invoices");
        Browseinvoicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseinvoicesmnitActionPerformed(evt);
            }
        });

        Billingmn.add(Browseinvoicesmnit);
        Billingmn.add(sepat1);
        Recordpaymentsmnit.setText("Record Payments");
        Recordpaymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordpaymentsmnitActionPerformed(evt);
            }
        });

        Billingmn.add(Recordpaymentsmnit);
        Browsepaymemnit.setText("Browse Payments");
        Browsepaymemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowsepaymemnitActionPerformed(evt);
            }
        });

        Billingmn.add(Browsepaymemnit);
        fleetOperationsmn.add(Billingmn);
        fleetMenuBar3.add(fleetOperationsmn);
        FleetUtilitiesmn.setText("Utilities");
        backgroundmnit.setText("Background Image");
        backgroundmnit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                backgroundmnitItemStateChanged(evt);
            }
        });

        FleetUtilitiesmn.add(backgroundmnit);
        fleetMenuBar3.add(FleetUtilitiesmn);
        Lookandfeellnfmn.setText("Look & Feel");
        swinglnfmnit11.setText("Metal");
        buttonGroup2.add(swinglnfmnit11);
        swinglnfmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swinglnfmnit11ActionPerformed(evt);
            }
        });

        Lookandfeellnfmn.add(swinglnfmnit11);
        winlnfmnit11.setText("Windows");
        buttonGroup2.add(winlnfmnit11);
        winlnfmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winlnfmnit11ActionPerformed(evt);
            }
        });

        Lookandfeellnfmn.add(winlnfmnit11);
        motiflnfmnit11.setText("Motif");
        buttonGroup2.add(motiflnfmnit11);
        Lookandfeellnfmn.add(motiflnfmnit11);
        macmnit11.setText("Mac OS");
        buttonGroup2.add(macmnit11);
        macmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macmnit11ActionPerformed(evt);
            }
        });

        Lookandfeellnfmn.add(macmnit11);
        skinmn1.setText("Themes");
        xpmnit11.setText("XP Luna");
        buttonGroup3.add(xpmnit11);
        skinmn1.add(xpmnit11);
        macos1mnit11.setText("Macintosh");
        buttonGroup3.add(macos1mnit11);
        skinmn1.add(macos1mnit11);
        whiltmnit11.setText("Whistler");
        buttonGroup3.add(whiltmnit11);
        skinmn1.add(whiltmnit11);
        modernmnit11.setText("Modern");
        buttonGroup3.add(modernmnit11);
        skinmn1.add(modernmnit11);
        aquamnit11.setText("Aqua");
        buttonGroup3.add(aquamnit11);
        skinmn1.add(aquamnit11);
        beosmnit11.setText("BEOS");
        buttonGroup3.add(beosmnit11);
        skinmn1.add(beosmnit11);
        bbjmnit111.setText("BBJ");
        buttonGroup3.add(bbjmnit111);
        skinmn1.add(bbjmnit111);
        Lookandfeellnfmn.add(skinmn1);
        fleetMenuBar3.add(Lookandfeellnfmn);
        FleetReportsmn.setText("Reports");
        billingmn.setText("Billing");
        invoicesoutstandingmnit.setText("Invoices (Outstanding)");
        billingmn.add(invoicesoutstandingmnit);
        invoicespaidinfullmnit.setText("Invoices (paid in full)");
        billingmn.add(invoicespaidinfullmnit);
        invoicessummaryoutstandingmnit.setText("Invoices Summary (Outstanding)");
        billingmn.add(invoicessummaryoutstandingmnit);
        invoicessummarypaidinfullmnit.setText("Invoices Summary (Paid in Full)");
        invoicessummarypaidinfullmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoicessummarypaidinfullmnitActionPerformed(evt);
            }
        });

        billingmn.add(invoicessummarypaidinfullmnit);
        paymentsrecievedmnit.setText("Payments Recieved");
        billingmn.add(paymentsrecievedmnit);
        FleetReportsmn.add(billingmn);
        employeesmn.setText("Employees");
        detailedcontactlistmnit.setText("Detailed Contact List");
        employeesmn.add(detailedcontactlistmnit);
        generalcontactlistmnit.setText("General Contact List");
        employeesmn.add(generalcontactlistmnit);
        personalinformationmnit.setText("Personal Information");
        employeesmn.add(personalinformationmnit);
        licenceinformationmnit.setText("Licence Information");
        employeesmn.add(licenceinformationmnit);
        licencerenewalsduemnit.setText("Licence Renewals Due ");
        employeesmn.add(licencerenewalsduemnit);
        certificationsmnit.setText("Certifications");
        employeesmn.add(certificationsmnit);
        certificationsrenewalsmnit.setText("Certifications Renewals");
        employeesmn.add(certificationsrenewalsmnit);
        phsicalinformationsmnit.setText("Physical Informations");
        employeesmn.add(phsicalinformationsmnit);
        physicalrenewalsduemnit.setText("Physical Renewals Due");
        employeesmn.add(physicalrenewalsduemnit);
        FleetReportsmn.add(employeesmn);
        fleetmn.setText("Fleet");
        fleetlistingmnit.setText("Fleet Listing ");
        fleetmn.add(fleetlistingmnit);
        generalmnit.setText("General");
        fleetmn.add(generalmnit);
        specificationspartsmnit.setText("Specifications/ Parts");
        fleetmn.add(specificationspartsmnit);
        purchaseinformationmnit.setText("Purchase Information");
        fleetmn.add(purchaseinformationmnit);
        registrationinformationmnit.setText("Registration Information");
        fleetmn.add(registrationinformationmnit);
        insurancermnit.setText("Insurance");
        fleetmn.add(insurancermnit);
        loanleaser.setText("Loan/ Lease");
        fleetmn.add(loanleaser);
        registrationrenewalduemnit.setText("Registration Renewal Due");
        fleetmn.add(registrationrenewalduemnit);
        stateinspectionrenewalsduemnit.setText("State Inspection Renewals Due");
        fleetmn.add(stateinspectionrenewalsduemnit);
        FleetReportsmn.add(fleetmn);
        fuelpurchasemn.setText("Fuel Purchase");
        fuelpurchaseshistorymnit.setText("Fuel Purchases History");
        fuelpurchasemn.add(fuelpurchaseshistorymnit);
        fuelcostsummarymnit.setText("Fuel Cost Summary");
        fuelpurchasemn.add(fuelcostsummarymnit);
        FleetReportsmn.add(fuelpurchasemn);
        maintanancehistorymn.setText("Maintance History");
        historyoverviewmnit.setText("History Overview");
        maintanancehistorymn.add(historyoverviewmnit);
        completehistorymnit.setText("Complete History");
        maintanancehistorymn.add(completehistorymnit);
        pmhistorymnit.setText("PM History");
        maintanancehistorymn.add(pmhistorymnit);
        repairhistorymnit.setText("Repair History");
        maintanancehistorymn.add(repairhistorymnit);
        partshistorymnit.setText("Parts History");
        maintanancehistorymn.add(partshistorymnit);
        labourhistorymnit.setText("Labour History");
        maintanancehistorymn.add(labourhistorymnit);
        externalserviceshistorymnit.setText("External services History");
        maintanancehistorymn.add(externalserviceshistorymnit);
        fuelpurchasesrmnit.setText("Fuel Purchases History");
        maintanancehistorymn.add(fuelpurchasesrmnit);
        historycostsummarymnit.setText("History cost Summary");
        maintanancehistorymn.add(historycostsummarymnit);
        vendorcostsummarymnit.setText("Vendor Cost Summary");
        maintanancehistorymn.add(vendorcostsummarymnit);
        FleetReportsmn.add(maintanancehistorymn);
        partsinventorymn.setText("Parts Inventory");
        partslistingmnit.setText("Parts Listing");
        partsinventorymn.add(partslistingmnit);
        partslistingbyvendormnit.setText("Parts Listing (by vendor)");
        partsinventorymn.add(partslistingbyvendormnit);
        partslistngcategorymnit.setText("Parts Listing (category)");
        partsinventorymn.add(partslistngcategorymnit);
        needreoderedmnit.setText("Need Reodered");
        needreoderedmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                needreoderedmnitActionPerformed(evt);
            }
        });

        partsinventorymn.add(needreoderedmnit);
        recieptsmnit.setText("Reciepts");
        partsinventorymn.add(recieptsmnit);
        partshstoryrmnit.setText("Parts History");
        partsinventorymn.add(partshstoryrmnit);
        partsusagemnit.setText("Parts Usage");
        partsinventorymn.add(partsusagemnit);
        stockvaluedetailedmnit.setText("Stock Value (Detailed)");
        partsinventorymn.add(stockvaluedetailedmnit);
        stockvaluesummarymnit.setText("Stock Value (Summary)");
        partsinventorymn.add(stockvaluesummarymnit);
        FleetReportsmn.add(partsinventorymn);
        pmsevicesmn.setText("PM Services");
        pmschedulesmnit.setText("PM Scedules");
        pmsevicesmn.add(pmschedulesmnit);
        pmlastperfomeddatamnit.setText("PM Last Performed Data");
        pmsevicesmn.add(pmlastperfomeddatamnit);
        currentpmstatusmnit.setText("Current PM Status");
        currentpmstatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentpmstatusmnitActionPerformed(evt);
            }
        });

        pmsevicesmn.add(currentpmstatusmnit);
        maintainanceduemnit.setText("Maintanance Due");
        pmsevicesmn.add(maintainanceduemnit);
        pmcoststatisticspervehicleequipmnit.setText("PM Cost Statistics- (per vehicle/equip)");
        pmsevicesmn.add(pmcoststatisticspervehicleequipmnit);
        pmcoststatisticsoveralmnit.setText("PM Cost statistics (overall)");
        pmsevicesmn.add(pmcoststatisticsoveralmnit);
        FleetReportsmn.add(pmsevicesmn);
        purchaseodersmn.setText("Purchase Orders");
        generateclosedmnit.setText("Generate -(closed)");
        purchaseodersmn.add(generateclosedmnit);
        generateoutstandingmnit.setText("Generate -(outstanding)");
        purchaseodersmn.add(generateoutstandingmnit);
        Recieptsrmnit.setText("Reciepts");
        purchaseodersmn.add(Recieptsrmnit);
        summaryclosedmnit.setText("Summary-(closed)");
        purchaseodersmn.add(summaryclosedmnit);
        summaryoutstandingmnit.setText("Summary -(outstanding)");
        purchaseodersmn.add(summaryoutstandingmnit);
        vendorsummarymnit.setText("Vendor Summary");
        vendorsummarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorsummarymnitActionPerformed(evt);
            }
        });

        purchaseodersmn.add(vendorsummarymnit);
        FleetReportsmn.add(purchaseodersmn);
        sheduledrepairsmn.setText("Scheduled Repairs");
        outstndingallvehiclemnit.setText("Outstanding -All vehicle(s)");
        sheduledrepairsmn.add(outstndingallvehiclemnit);
        outstandingselectedvehicle.setText("Outstanding Selected Vehicle (s)");
        sheduledrepairsmn.add(outstandingselectedvehicle);
        currentdueallvehiclemnit.setText("Currently Due -All vehicle");
        sheduledrepairsmn.add(currentdueallvehiclemnit);
        currentlydueselectedvehiclesmnit.setText("Currently Due Selected Vehicle (s)");
        sheduledrepairsmn.add(currentlydueselectedvehiclesmnit);
        FleetReportsmn.add(sheduledrepairsmn);
        summaryreportsmn.setText("Summary Reports");
        pmcoststatisticspervehicleequiprmnit.setText("PM Cost Statistics (per vehicle/equip)");
        summaryreportsmn.add(pmcoststatisticspervehicleequiprmnit);
        pmcoststatisticsoverallmnit.setText("PM Cost Statistics (Overall)");
        summaryreportsmn.add(pmcoststatisticsoverallmnit);
        historycostsummarurmnit.setText("History Cost Summary");
        summaryreportsmn.add(historycostsummarurmnit);
        vendorcostsummaryrmnit.setText("Vendor Cost Summary");
        summaryreportsmn.add(vendorcostsummaryrmnit);
        fuelcostsummaryrmnit.setText("Fuel Cost Summary");
        summaryreportsmn.add(fuelcostsummaryrmnit);
        workordedersummaryopenmnit.setText("Work Order Summary (open)");
        summaryreportsmn.add(workordedersummaryopenmnit);
        workordersummaryclosedmnit.setText("Work Order Summary-(closed)");
        summaryreportsmn.add(workordersummaryclosedmnit);
        fleetlistingrmnit.setText("Fleet Listing");
        summaryreportsmn.add(fleetlistingrmnit);
        FleetReportsmn.add(summaryreportsmn);
        travelmn.setText("Travel");
        triphistorymnit.setText("Trip History");
        travelmn.add(triphistorymnit);
        tripticketsmnit.setText("Trip Tickets");
        travelmn.add(tripticketsmnit);
        usagebylocdeptvehicledetailedrmnit.setText("Usage By Loc /dept/vehicle (detailed)");
        travelmn.add(usagebylocdeptvehicledetailedrmnit);
        usagebydriverdeptdetailedmnit.setText("Usage By Driver /dept (Detailed)");
        travelmn.add(usagebydriverdeptdetailedmnit);
        usagebylocdeptdriveroverviewmnit.setText("Usage By Loc/Dept / Driver (overview)");
        travelmn.add(usagebylocdeptdriveroverviewmnit);
        usagebydriveroverviewmnit.setText("Usage By Driver (Overview)");
        travelmn.add(usagebydriveroverviewmnit);
        FleetReportsmn.add(travelmn);
        tiresmn.setText("Tires");
        tiresinventorylistingallmnit.setText("Tires Inventory Listing -(All)");
        tiresmn.add(tiresinventorylistingallmnit);
        tiresinventorylistingmountedmnit.setText("Tires Inventory Listing -(Mounted)");
        tiresmn.add(tiresinventorylistingmountedmnit);
        tiresinventorylistingdismountedmnit.setText("Tires Inventory Listing -(Dismounted)");
        tiresinventorylistingdismountedmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiresinventorylistingdismountedmnitActionPerformed(evt);
            }
        });

        tiresmn.add(tiresinventorylistingdismountedmnit);
        tirehistorybyvehicleequipmentmnit.setText("Tire History -(by vehicle/equipment)");
        tiresmn.add(tirehistorybyvehicleequipmentmnit);
        tirehistorybytiremnit.setText("Tire History -(ByTire)");
        tiresmn.add(tirehistorybytiremnit);
        FleetReportsmn.add(tiresmn);
        vendorsmn.setText("Vendors");
        vendorslistingmnit.setText("Vendors Listing");
        vendorsmn.add(vendorslistingmnit);
        vendorscostsummarymnit.setText("Vendors Cost Summary ");
        vendorsmn.add(vendorscostsummarymnit);
        FleetReportsmn.add(vendorsmn);
        Workordersmnit.setText("Work Orders");
        workordersopenmnit.setText("Work Orders (Open)");
        Workordersmnit.add(workordersopenmnit);
        workorderscompletemnit.setText("Work Orders (Complete)");
        Workordersmnit.add(workorderscompletemnit);
        worksummaryopenmnit.setText("Work Summary (Open)");
        Workordersmnit.add(worksummaryopenmnit);
        worksummaryclosedmnit.setText("Work Summary (Closed)");
        Workordersmnit.add(worksummaryclosedmnit);
        FleetReportsmn.add(Workordersmnit);
        reportgeneratorrmnit.setText("Report Generator");
        FleetReportsmn.add(reportgeneratorrmnit);
        fleetMenuBar3.add(FleetReportsmn);
        FleetHelpmn.setText("Help");
        helpcontentsmnit.setText("Help Contents");
        FleetHelpmn.add(helpcontentsmnit);
        aboutmnit.setText("About");
        FleetHelpmn.add(aboutmnit);
        fleetMenuBar3.add(FleetHelpmn);
        setJMenuBar(fleetMenuBar3);

        setBounds(0, 0, 816, 300);
    }//GEN-END:initComponents

    private void invoicessummarypaidinfullmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoicessummarypaidinfullmnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_invoicessummarypaidinfullmnitActionPerformed

    private void tiresinventorylistingdismountedmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiresinventorylistingdismountedmnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_tiresinventorylistingdismountedmnitActionPerformed

    private void vendorsummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorsummarymnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_vendorsummarymnitActionPerformed

    private void currentpmstatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentpmstatusmnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_currentpmstatusmnitActionPerformed

    private void needreoderedmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_needreoderedmnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_needreoderedmnitActionPerformed

    private void winlnfmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winlnfmnit11ActionPerformed
         
        // Add your handling code here:
    }//GEN-LAST:event_winlnfmnit11ActionPerformed

    private void swinglnfmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swinglnfmnit11ActionPerformed
         
        // Add your handling code here:
    }//GEN-LAST:event_swinglnfmnit11ActionPerformed

    private void Reports1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reports1ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_Reports1ActionPerformed

    private void Partsbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Partsbtn2ActionPerformed
         javax.swing.JInternalFrame partsInvent = new PartsInventManIntfr(connectDB, pConnDB) ;
        fleetdesktop.add(partsInvent, javax.swing.JLayeredPane.DEFAULT_LAYER);
        partsInvent.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_Partsbtn2ActionPerformed

    private void Vendorbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Vendorbtn2ActionPerformed
        javax.swing.JInternalFrame vendorDBman = new VendorDBmanIntfr(connectDB, pConnDB) ;
        fleetdesktop.add(vendorDBman, javax.swing.JLayeredPane.DEFAULT_LAYER);
        vendorDBman.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_Vendorbtn2ActionPerformed

    private void Driversbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Driversbtn2ActionPerformed
         javax.swing.JInternalFrame drivermanscreen = new DrivermanscreenIntfr(connectDB, pConnDB) ;
        fleetdesktop.add(drivermanscreen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        drivermanscreen.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_Driversbtn2ActionPerformed

    private void Repairsbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Repairsbtn4ActionPerformed
         javax.swing.JInternalFrame schedrepairman = new SchedRepairmanIntfr(connectDB, pConnDB) ;
        fleetdesktop.add(schedrepairman, javax.swing.JLayeredPane.DEFAULT_LAYER);
        schedrepairman.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_Repairsbtn4ActionPerformed

    private void Pmschedrepairsbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pmschedrepairsbtn4ActionPerformed
         javax.swing.JInternalFrame Pmschedulesetup = new PmScheduleSetupIntfr(connectDB, pConnDB) ;
        fleetdesktop.add(Pmschedulesetup, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Pmschedulesetup.setVisible(true); 
        
        // Add your handling code here:
    }//GEN-LAST:event_Pmschedrepairsbtn4ActionPerformed

    private void Workordersbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Workordersbtn2ActionPerformed
       javax.swing.JInternalFrame workorderman = new WorkOrderManIntfr(connectDB, pConnDB) ;
        fleetdesktop.add(workorderman, javax.swing.JLayeredPane.DEFAULT_LAYER);
        workorderman.setVisible(true);
        
        // Add your handling code here:
    }//GEN-LAST:event_Workordersbtn2ActionPerformed

    private void EditbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditbtnActionPerformed
        
         javax.swing.JInternalFrame editVehicle = new Editvehicleintfr(connectDB, pConnDB) ;
        fleetdesktop.add(editVehicle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        editVehicle.setVisible(true); 
        
        // Add your handling code here:
    }//GEN-LAST:event_EditbtnActionPerformed

    private void BrowsepaymemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowsepaymemnitActionPerformed
        BrowsePaymentIntfr BrowsePayment = new  BrowsePaymentIntfr(connectDB,pConnDB);
        fleetdesktop.add(BrowsePayment, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            BrowsePayment.setSelected(true);
            System.out.println("Browse Payment loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_BrowsepaymemnitActionPerformed

    private void RecordpaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordpaymentsmnitActionPerformed
        AddPaymentIntfr AddPayment = new  AddPaymentIntfr(connectDB,pConnDB);
        fleetdesktop.add(AddPayment, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            AddPayment.setSelected(true);
            System.out.println("Add Payment loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_RecordpaymentsmnitActionPerformed

    private void BrowseinvoicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseinvoicesmnitActionPerformed
        BrowseInvoiceIntfr BrowseInvoice = new  BrowseInvoiceIntfr(connectDB,pConnDB);
        fleetdesktop.add(BrowseInvoice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            BrowseInvoice.setSelected(true);
            System.out.println("BrowseI nvoice loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_BrowseinvoicesmnitActionPerformed

    private void GenerateinvomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateinvomnitActionPerformed
        GenerateInvoiceIntfr GenerateInvoice = new  GenerateInvoiceIntfr(connectDB,pConnDB);
        fleetdesktop.add(GenerateInvoice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            GenerateInvoice.setSelected(true);
            System.out.println("Generate Invoice loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_GenerateinvomnitActionPerformed

    private void AdjustrecievemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdjustrecievemnitActionPerformed
        AdjustPartRcvdIntfr AdjustPart = new  AdjustPartRcvdIntfr(connectDB,pConnDB);
        fleetdesktop.add(AdjustPart, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            AdjustPart.setSelected(true);
            System.out.println("Adjust Part Receipved loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_AdjustrecievemnitActionPerformed

    private void PoreceiptbypartmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PoreceiptbypartmnitActionPerformed
       /* WorkOrderManIntfr WorkOrder = new  WorkOrderManIntfr(connectDB,pConnDB);
        fleetdesktop.add(WorkOrder, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            WorkOrder.setSelected(true);
            System.out.println("Work Order Managment loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        */// Add your handling code here:
    }//GEN-LAST:event_PoreceiptbypartmnitActionPerformed

    private void PoreceiptbyponummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PoreceiptbyponummnitActionPerformed
        OrReceivedIntfr OrReceived = new  OrReceivedIntfr(connectDB,pConnDB);
        fleetdesktop.add(OrReceived, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            OrReceived.setSelected(true);
            System.out.println("OrReceived loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_PoreceiptbyponummnitActionPerformed

    private void PurchaseorderaddmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseorderaddmnitActionPerformed
        AddPurchOrderIntfr AddPurchOrder = new  AddPurchOrderIntfr(connectDB,pConnDB);
        fleetdesktop.add(AddPurchOrder, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            AddPurchOrder.setSelected(true);
            System.out.println("AddPurchOrder loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_PurchaseorderaddmnitActionPerformed

    private void PurchaseordersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseordersmnitActionPerformed
        BrowsePuchOrdersIntfr BrowsePuchOrders = new  BrowsePuchOrdersIntfr(connectDB,pConnDB);
        fleetdesktop.add(BrowsePuchOrders, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            BrowsePuchOrders.setSelected(true);
            System.out.println("BrowsePuchOrders loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_PurchaseordersmnitActionPerformed

    private void TireinventorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TireinventorymnitActionPerformed
        WorkOrderManIntfr TireInventory = new  WorkOrderManIntfr(connectDB,pConnDB);
        fleetdesktop.add(TireInventory, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            TireInventory.setSelected(true);
            System.out.println("TireInventory loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_TireinventorymnitActionPerformed

    private void PartsinventorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PartsinventorymnitActionPerformed
        PartsInventManIntfr PartsInventMan = new  PartsInventManIntfr(connectDB,pConnDB);
        fleetdesktop.add(PartsInventMan, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            PartsInventMan.setSelected(true);
            System.out.println("PartsInventMan loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_PartsinventorymnitActionPerformed
    
    private void Addnewvehiclebtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addnewvehiclebtn2ActionPerformed
        javax.swing.JInternalFrame newVehicle = new AddNewvehicleintfr(connectDB, pConnDB) ;
        fleetdesktop.add(newVehicle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newVehicle.setVisible(true);
        
        // Add your handling code here:
    }//GEN-LAST:event_Addnewvehiclebtn2ActionPerformed
    
    private void WorkordermanagmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WorkordermanagmnitActionPerformed
        WorkOrderManIntfr WorkOrder = new  WorkOrderManIntfr(connectDB,pConnDB);
        fleetdesktop.add(WorkOrder, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            WorkOrder.setSelected(true);
            System.out.println("Work Order Managment loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_WorkordermanagmnitActionPerformed
    
    private void ScheduledrepairmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduledrepairmnitActionPerformed
        SchedRepairmanIntfr schedrepair = new  SchedRepairmanIntfr(connectDB,pConnDB);
        fleetdesktop.add(schedrepair, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            schedrepair.setSelected(true);
            System.out.println("scheduled repair loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // Add your handling code here:
    }//GEN-LAST:event_ScheduledrepairmnitActionPerformed
    
    private void PmassociatesmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PmassociatesmnActionPerformed
        PmAssociationIntfr pmAssociation = new  PmAssociationIntfr(connectDB,pConnDB);
        fleetdesktop.add(pmAssociation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            pmAssociation.setSelected(true);
            System.out.println("pmAssociation loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_PmassociatesmnActionPerformed
    
    private void PmschedulesetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PmschedulesetupmnitActionPerformed
        PmScheduleSetupIntfr pmSchsetup = new  PmScheduleSetupIntfr(connectDB,pConnDB);
        fleetdesktop.add(pmSchsetup, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            pmSchsetup.setSelected(true);
            System.out.println("pmsetuploaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // Add your handling code here:
    }//GEN-LAST:event_PmschedulesetupmnitActionPerformed
    
    private void UpdatemetermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatemetermnitActionPerformed
        UpDateMeterintfr updatemeter = new  UpDateMeterintfr(connectDB,pConnDB);
        fleetdesktop.add(updatemeter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            updatemeter.setSelected(true);
            System.out.println("update meter loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // Add your handling code here:
    }//GEN-LAST:event_UpdatemetermnitActionPerformed
    
    private void TriphistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TriphistActionPerformed
        TripHistIntfr Triphist = new  TripHistIntfr(connectDB,pConnDB);
        fleetdesktop.add(Triphist, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            Triphist.setSelected(true);
            System.out.println("trip history loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_TriphistActionPerformed
    
    private void LastpmsetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastpmsetupmnitActionPerformed
        LastPMsetupintfr lastPM = new  LastPMsetupintfr(connectDB,pConnDB);
        fleetdesktop.add(lastPM, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            lastPM.setSelected(true);
            System.out.println("LastPM loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_LastpmsetupmnitActionPerformed
    
    private void CurrentmainstatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentmainstatusmnitActionPerformed
        CurrentMaintenanceintfr currentmainte = new  CurrentMaintenanceintfr(connectDB,pConnDB);
        fleetdesktop.add(currentmainte, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            currentmainte.setSelected(true);
            System.out.println("current Maintenance status loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_CurrentmainstatusmnitActionPerformed
    
    private void CoststatisticsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoststatisticsmnitActionPerformed
        CostStatisticsintfr coststat = new  CostStatisticsintfr(connectDB,pConnDB);
        fleetdesktop.add(coststat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            coststat.setSelected(true);
            System.out.println("tirehist loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_CoststatisticsmnitActionPerformed
    
    private void tirehistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tirehistmnitActionPerformed
        TireHistoryintfr tirehist = new  TireHistoryintfr(connectDB,pConnDB);
        fleetdesktop.add(tirehist, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            tirehist.setSelected(true);
            System.out.println("tirehist loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tirehistmnitActionPerformed
    
    private void MaintenancehistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaintenancehistmnitActionPerformed
        MaintenanceHistintfr maintehist = new  MaintenanceHistintfr(connectDB,pConnDB);
        fleetdesktop.add(maintehist, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            maintehist.setSelected(true);
            System.out.println("adv loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_MaintenancehistmnitActionPerformed
    
    private void MaintenanceduemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaintenanceduemnitActionPerformed
        Maintenancedueintfr maintedue = new  Maintenancedueintfr(connectDB,pConnDB);
        fleetdesktop.add(maintedue, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            maintedue.setSelected(true);
            System.out.println("maintedue loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_MaintenanceduemnitActionPerformed
    
    private void AddvehicleduplicateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddvehicleduplicateActionPerformed
        AddDublicateintfr addnewvehicled = new  AddDublicateintfr(connectDB,pConnDB);
        fleetdesktop.add(addnewvehicled, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            addnewvehicled.setSelected(true);
            System.out.println("adddubvehi loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_AddvehicleduplicateActionPerformed
    
    private void AddVehiclemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddVehiclemnitActionPerformed
        
        
        AddNewvehicleintfr addnewvehicle = new  AddNewvehicleintfr(connectDB,pConnDB);
        fleetdesktop.add(addnewvehicle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            addnewvehicle.setSelected(true);
            System.out.println("add new vehicle loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_AddVehiclemnitActionPerformed
    
    private void AddVehiclemnitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AddVehiclemnitItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_AddVehiclemnitItemStateChanged
    
    private void IssueWorkordermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueWorkordermnitActionPerformed
        NewWorkOrderintfr issuel = new NewWorkOrderintfr(connectDB,pConnDB);
        fleetdesktop.add(issuel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            issuel.setSelected(true);
            System.out.println("new work order loaded...");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_IssueWorkordermnitActionPerformed
    
    private void backgroundmnitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_backgroundmnitItemStateChanged
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_backgroundmnitItemStateChanged
    
    private void exitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitmnitActionPerformed
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            
            this.dispose();
            
        }
        
        
        // Add your handling code here:
    }//GEN-LAST:event_exitmnitActionPerformed
    
    private void macmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macmnit11ActionPerformed
        
        // Add your handling code here:
    }//GEN-LAST:event_macmnit11ActionPerformed
    
    private void schedulerepairmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schedulerepairmnitActionPerformed
        ScheduleRepairintfr schedule = new ScheduleRepairintfr(connectDB,pConnDB);
        fleetdesktop.add(schedule, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            schedule.setSelected(true);
            System.out.println("1 loaded");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_schedulerepairmnitActionPerformed
    
    private void issuelworkmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issuelworkmnitActionPerformed
        NewWorkOrderintfr issuel1 = new NewWorkOrderintfr(connectDB,pConnDB);
        fleetdesktop.add(issuel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            issuel1.setSelected(true);
            System.out.println("newworkoder1");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_issuelworkmnitActionPerformed
    
    private void FuelhistorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FuelhistorymnitActionPerformed
        FuelHistotryintfr fuelhist = new FuelHistotryintfr(connectDB,pConnDB);
        fleetdesktop.add(fuelhist, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            fuelhist.setSelected(true);
            System.out.println("fuelhist");
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_FuelhistorymnitActionPerformed
    
    private void registrationpartimnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationpartimnitActionPerformed
        FleetManager flmanager = new FleetManager(connectDB,pConnDB);
        fleetdesktop.add(flmanager, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            flmanager.setSelected(true);
            System.out.println("fleetmanager");
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // Add your handling code here:
    }//GEN-LAST:event_registrationpartimnitActionPerformed
    
    private void insurancecompmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insurancecompmnitActionPerformed
    /*    InsurCompanyProfIntfr newinsur = new InsurCompanyProfIntfr(connectDB,pConnDB);
        fleetdesktop.add(newinsur, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            newinsur.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        */
        // Add your handling code here:
    }//GEN-LAST:event_insurancecompmnitActionPerformed
    
    private void vehicletypemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicletypemnitActionPerformed
        VehicleTypeSetupintfr typevehicle = new VehicleTypeSetupintfr(connectDB,pConnDB);
        fleetdesktop.add(typevehicle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            typevehicle.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        
        
        // Add your handling code here:
    }//GEN-LAST:event_vehicletypemnitActionPerformed
    
    private void drivermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drivermnitActionPerformed
        AddNewDriverintfr ndriver = new AddNewDriverintfr(connectDB,pConnDB);
        fleetdesktop.add(ndriver, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            ndriver.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_drivermnitActionPerformed
    
    private void companyprofilemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyprofilemnitActionPerformed
        CompanyProfIntfr companypro = new CompanyProfIntfr(connectDB,pConnDB);
        fleetdesktop.add(companypro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            companypro.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_companyprofilemnitActionPerformed
    
    private void departmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentmnitActionPerformed
        DepartmentsIntfr departe = new DepartmentsIntfr(connectDB,pConnDB);
        fleetdesktop.add(departe, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            departe.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_departmentmnitActionPerformed
    
    private void fleetSetupmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fleetSetupmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_fleetSetupmnActionPerformed
    
    private void districtsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_districtsmnitActionPerformed
        
        DistrictsIntfr distri = new DistrictsIntfr(connectDB,pConnDB);
        fleetdesktop.add(distri, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            distri.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        
        // Add your handling code here:
    }//GEN-LAST:event_districtsmnitActionPerformed
    
    private void countrymntfrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countrymntfrActionPerformed
        
        CountryIntfr countryd = new CountryIntfr(connectDB,pConnDB);
        fleetdesktop.add(countryd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            countryd.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_countrymntfrActionPerformed
    
    private void legalstatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_legalstatusmnitActionPerformed
        
        LegalStatusIntfr comp = new LegalStatusIntfr(connectDB,pConnDB);
        fleetdesktop.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_legalstatusmnitActionPerformed
    
    private void partequptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partequptmnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_partequptmnitActionPerformed
    
    private void countrydistrictmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countrydistrictmnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countrydistrictmnActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            //  this.storePreferences();
            
            this.dispose();
            
        } else {}
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
  /*      FleetMain fleetMainInstance = new FleetMain(connect2DB(), getPooledConnectionSource());
        fleetMainInstance.setExtendedState(fleetMainInstance.MAXIMIZED_BOTH);
        fleetMainInstance.setVisible(true);
    */    
    }
    
    public static org.netbeans.lib.sql.pool.PooledConnectionSource getPooledConnectionSource() {
        
        org.netbeans.lib.sql.pool.PooledConnectionSource pooledConnectionSource1 = new org.netbeans.lib.sql.pool.PooledConnectionSource();
        
        pooledConnectionSource1.setDatabase("jdbc:postgresql://localhost:5432/medic");
        
        pooledConnectionSource1.setDriver("org.postgresql.Driver");
        
        pooledConnectionSource1.setPassword("02ac219a6b011019ea966757de3451d2399ce04dd82596d3ba4266a8845ab7f80861", true);
        
        pooledConnectionSource1.setUsername("postgres");
        
        return pooledConnectionSource1;
    }
    public static java.sql.Connection connect2DB() {
        
        java.sql.Connection connDBStock = null;
        
        try {
            
            java.lang.Class.forName("org.postgresql.Driver");
            
        } catch(java.lang.ClassNotFoundException cnf) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), cnf.getMessage());
            
        }
        
        try {
            
            connDBStock = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/medic","postgres","pilsiner");
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
            
        }
        
        return connDBStock;
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem triphistorymnit;
    private javax.swing.JMenuItem departmentmnit;
    private javax.swing.JMenuItem fleetlistingrmnit;
    private javax.swing.JMenuItem pmhistorymnit;
    private javax.swing.JMenuItem partslistingbyvendormnit;
    private javax.swing.JMenuItem vehicletypemnit;
    private javax.swing.JMenuItem vendorslistingmnit;
    private javax.swing.JPanel ListPanel;
    private javax.swing.JMenuItem partshstoryrmnit;
    private javax.swing.JMenuItem vendorcostsummaryrmnit;
    private javax.swing.JMenuItem Partsinventorymnit;
    private javax.swing.JMenuItem repairvendermnit;
    private javax.swing.JMenu fuelpurchasemn;
    private javax.swing.JSeparator sepat1;
    private javax.swing.JMenuItem Selecteddepmn;
    private javax.swing.JMenuItem drivermnit;
    private javax.swing.JMenuItem photomnit;
    private javax.swing.JButton Editbtn;
    private javax.swing.JMenuItem invoicessummaryoutstandingmnit;
    private javax.swing.JMenuItem tripticketsmnit;
    private javax.swing.JMenu purchaseodersmn;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JMenu Maintenancemn;
    private javax.swing.JSplitPane FleetSplit;
    private javax.swing.JMenuItem Triphist;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JMenuItem Recieptsrmnit;
    private javax.swing.JDesktopPane fleetdesktop;
    private javax.swing.JMenuItem outstndingallvehiclemnit;
    private javax.swing.JMenuItem insurancemnit;
    private javax.swing.JButton Pmschedrepairsbtn4;
    private javax.swing.JMenu Inventorymn;
    private javax.swing.JSeparator sep3;
    private javax.swing.JMenuItem generalmnit;
    private javax.swing.JPanel FleetMainPanel;
    private javax.swing.JSeparator Maintenancesep2;
    private javax.swing.JMenuItem tirehistmnit;
    private javax.swing.JMenuItem licenceinformationmnit;
    private javax.swing.JMenuItem tirehistorybytiremnit;
    private javax.swing.JMenuItem phsicalinformationsmnit;
    private javax.swing.JMenuItem Purchaseordersmnit;
    private javax.swing.JMenuItem vendorcostsummarymnit;
    private javax.swing.JRadioButtonMenuItem macos1mnit11;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JMenu driveremployeemnit;
    private javax.swing.JMenuItem vendorsummarymnit;
    private javax.swing.JMenuItem stockvaluesummarymnit;
    private javax.swing.JMenuItem pmcoststatisticspervehicleequipmnit;
    private javax.swing.JMenuItem pmcoststatisticsoveralmnit;
    private javax.swing.JPanel fleetMainPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem summaryoutstandingmnit;
    private javax.swing.JMenuItem notesmnit;
    private javax.swing.JMenu fleetmn;
    private javax.swing.JRadioButtonMenuItem bbjmnit111;
    private javax.swing.JButton Repairsbtn4;
    private javax.swing.JMenuItem partslistingmnit;
    private javax.swing.JMenu Vehiclemn;
    private javax.swing.JMenuItem usagebydriveroverviewmnit;
    private javax.swing.JMenuItem needreoderedmnit;
    private javax.swing.JCheckBoxMenuItem macmnit11;
    private javax.swing.JMenuItem labourhistorymnit;
    private javax.swing.JMenuItem personalinformationmnit;
    private javax.swing.JMenuItem currentdueallvehiclemnit;
    private javax.swing.JMenuItem workordedersummaryopenmnit;
    private java.awt.GridBagLayout gridBagLayout1;
    private javax.swing.JMenu sheduledrepairsmn;
    private javax.swing.JMenuItem invoicessummarypaidinfullmnit;
    private javax.swing.JMenuBar fleetMenuBar3;
    private javax.swing.JMenuItem partsusagemnit;
    private javax.swing.JMenuItem invoicesoutstandingmnit;
    private javax.swing.JSeparator sep1;
    private javax.swing.JMenuItem insurancermnit;
    private javax.swing.JMenuItem tiresinventorylistingdismountedmnit;
    private javax.swing.JMenu Billingmn;
    private javax.swing.JMenuItem specificationspartsmnit;
    private javax.swing.JToolBar tool5;
    private javax.swing.JMenuItem tiresinventorylistingmountedmnit;
    private javax.swing.JCheckBoxMenuItem swinglnfmnit11;
    private javax.swing.JSeparator sep2;
    private javax.swing.JSeparator sepper1;
    private javax.swing.JMenuItem Pmschedulesetupmnit;
    private javax.swing.JButton Pmcheckbtn2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JList jList11;
    private javax.swing.JMenu employeesmn;
    private javax.swing.JMenu partsinventorymn;
    private javax.swing.JMenuItem reportgeneratorrmnit;
    private javax.swing.JMenuItem stateinspectionrenewalsduemnit;
    private javax.swing.JMenuItem Selectedvehiclemnit;
    private javax.swing.JMenuItem fuelpurchasesrmnit;
    private javax.swing.JMenuItem loanleasemnit;
    private javax.swing.JMenuItem purchaseinformationmnit;
    private javax.swing.JMenu FleetHelpmn;
    private javax.swing.JMenuItem issuelworkmnit;
    private javax.swing.JSeparator vehiclest5;
    private javax.swing.JMenuItem Scheduledrepairmnit;
    private javax.swing.JButton Vendorbtn2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JMenuItem loanleaser;
    private javax.swing.JMenuItem currentpmstatusmnit;
    private javax.swing.JMenuItem Workordermanagmnit;
    private javax.swing.JMenuItem Fuelhistorymnit;
    private javax.swing.JMenu FleetReportsmn;
    private javax.swing.JMenuItem pmlastperfomeddatamnit;
    private javax.swing.JMenuItem registrationinformationmnit;
    private javax.swing.JMenuItem backgroundmnit;
    private javax.swing.JMenuItem Browsepaymemnit;
    private javax.swing.JMenuItem worksummaryopenmnit;
    private javax.swing.JToolBar tool2;
    private javax.swing.JButton Reports1;
    private javax.swing.JToolBar tool1;
    private javax.swing.JMenuItem usagebylocdeptvehicledetailedrmnit;
    private javax.swing.JMenuItem registrationpartimnit;
    private javax.swing.JMenuItem pmschedulesmnit;
    private javax.swing.JMenuItem Purchaseorderaddmnit;
    private javax.swing.JRadioButtonMenuItem xpmnit11;
    private javax.swing.JToolBar tool4;
    private javax.swing.JButton Workordersbtn2;
    private javax.swing.JMenuItem Updatemetermnit;
    private javax.swing.JMenu countrydistrictmn;
    private javax.swing.JMenuItem companyprofilemnit;
    private javax.swing.JMenuItem usagebydriverdeptdetailedmnit;
    private javax.swing.JMenuItem Generateinvomnit;
    private javax.swing.JMenuItem worksummaryclosedmnit;
    private javax.swing.JMenu vendorsmn;
    private javax.swing.JMenu skinmn1;
    private javax.swing.JMenuItem Maintenancehistmnit;
    private javax.swing.JMenuItem outstandingselectedvehicle;
    private javax.swing.JMenuItem fuelpurchaseshistorymnit;
    private javax.swing.JToolBar maintoolbar;
    private javax.swing.JButton Deletevehiclebtn2;
    private javax.swing.JMenuItem certificationsrenewalsmnit;
    private javax.swing.JMenuItem vendorscostsummarymnit;
    private javax.swing.JMenuItem completehistorymnit;
    private javax.swing.JMenuItem currentlydueselectedvehiclesmnit;
    private javax.swing.JMenuItem insurancecompmnit;
    private javax.swing.JToolBar tool3;
    private javax.swing.JMenuItem Selectedlocmn;
    private javax.swing.JMenuItem maintainanceduemnit;
    private javax.swing.JMenuItem tiresinventorylistingallmnit;
    private javax.swing.JMenuItem licencerenewalsduemnit;
    private javax.swing.JMenu Pmcheckwizmn;
    private javax.swing.JRadioButtonMenuItem modernmnit11;
    private javax.swing.JMenuItem partshistorymnit;
    private javax.swing.JCheckBoxMenuItem motiflnfmnit11;
    private javax.swing.JMenuItem historyoverviewmnit;
    private javax.swing.JMenuItem summaryclosedmnit;
    private javax.swing.JMenuItem fleetlistingmnit;
    private javax.swing.JMenuItem detailedcontactlistmnit;
    private javax.swing.JMenuItem tirehistorybyvehicleequipmentmnit;
    private javax.swing.JMenuItem fuelcostsummarymnit;
    private javax.swing.JMenu fleetOperationsmn;
    private javax.swing.JMenuItem certificationsmnit;
    private javax.swing.JButton Driversbtn2;
    private javax.swing.JMenu FleetUtilitiesmn;
    private javax.swing.JMenuItem workordersummaryclosedmnit;
    private javax.swing.JMenuItem partequptmnit;
    private javax.swing.JMenuItem invoicespaidinfullmnit;
    private javax.swing.JMenuItem usagebylocdeptdriveroverviewmnit;
    private javax.swing.JMenuItem fuelcostsummaryrmnit;
    private javax.swing.JMenu billingmn;
    private javax.swing.JMenu Workordersmnit;
    private javax.swing.JMenuItem aboutmnit;
    private javax.swing.JMenuItem Addvehicleduplicate;
    private javax.swing.JMenuItem historycostsummarurmnit;
    private javax.swing.JMenuItem physicalrenewalsduemnit;
    private javax.swing.JMenuItem fuelvendermnit;
    private javax.swing.JSeparator vehiclest4;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JMenuItem legalstatusmnit;
    private javax.swing.JMenuItem generalcontactlistmnit;
    private javax.swing.JMenu pmsevicesmn;
    private javax.swing.JMenuItem Browseinvoicesmnit;
    private javax.swing.JMenu summaryreportsmn;
    private javax.swing.JSeparator vehiclest2;
    private javax.swing.JMenuItem workordersopenmnit;
    private javax.swing.JScrollPane listScrollPane1;
    private javax.swing.JMenuItem generateoutstandingmnit;
    private javax.swing.JMenuItem Poreceiptbypartmnit;
    private javax.swing.JButton Addnewvehiclebtn2;
    private javax.swing.JMenuItem spescificationmnit;
    private javax.swing.JMenu tiresmn;
    private javax.swing.JMenuItem Pmassociatesmn;
    private javax.swing.JSeparator vehiclest3;
    private javax.swing.JMenuItem Currentmainstatusmnit;
    private javax.swing.JRadioButtonMenuItem beosmnit11;
    private javax.swing.JMenuItem districtsmnit;
    private javax.swing.JMenu fleetSetupmn;
    private javax.swing.JMenu travelmn;
    private javax.swing.JCheckBoxMenuItem winlnfmnit11;
    private javax.swing.JMenuItem pmcoststatisticsoverallmnit;
    private javax.swing.JSeparator Maintenancesep1;
    private javax.swing.JMenuItem paymentsrecievedmnit;
    private javax.swing.JButton Partsbtn2;
    private javax.swing.JRadioButtonMenuItem whiltmnit11;
    private javax.swing.JMenu maintanancehistorymn;
    private javax.swing.JMenuItem historycostsummarymnit;
    private javax.swing.JMenuItem Allvehiclemnit;
    private javax.swing.JMenuItem Coststatisticsmnit;
    private javax.swing.JMenuItem recieptsmnit;
    private javax.swing.JMenuItem AddVehiclemnit;
    private javax.swing.JMenuItem partslistngcategorymnit;
    private javax.swing.JMenuItem IssueWorkordermnit;
    private javax.swing.JMenuItem generateclosedmnit;
    private javax.swing.JSeparator vehiclest1;
    private javax.swing.JMenuItem pmcoststatisticspervehicleequiprmnit;
    private javax.swing.JMenuItem Adjustrecievemnit;
    private javax.swing.JRadioButtonMenuItem aquamnit11;
    private javax.swing.JMenu Lookandfeellnfmn;
    private javax.swing.JMenuItem Lastpmsetupmnit;
    private javax.swing.JMenuItem Recordpaymentsmnit;
    private javax.swing.JMenuItem schedulerepairmnit;
    private javax.swing.JMenuItem workorderscompletemnit;
    private javax.swing.JMenuItem helpcontentsmnit;
    private javax.swing.JMenuItem Poreceiptbyponummnit;
    private javax.swing.JMenuItem countrymntfr;
    private javax.swing.JMenu Fleetmanagermn;
    private javax.swing.JMenuItem repairhistorymnit;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem purchaseinformnit;
    private javax.swing.JMenuItem externalserviceshistorymnit;
    private javax.swing.JMenuItem stockvaluedetailedmnit;
    private javax.swing.JMenuItem registrationrenewalduemnit;
    private javax.swing.JMenuItem Tireinventorymnit;
    private javax.swing.JMenuItem Employeemnit;
    private javax.swing.JMenuItem exitmnit;
    private javax.swing.JMenuItem Maintenanceduemnit;
    // End of variables declaration//GEN-END:variables
  
}
