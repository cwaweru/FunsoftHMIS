/*
 * 
 *
 * Created on August 4, 2011, 13:11
 */
package com.afrisoftech.votebook;

import static com.afrisoftech.hospital.HospitalMain.connectDB;
import java.awt.Color;

/**
 *
 * @author fwaweru
 */
//public class Allocationintfr extends javax.swing.JInternalFrame implements java.lang.Runnable {
public class Allocationintfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox2 = null;
    java.sql.Connection connectDB = null;
    javax.swing.table.TableModel tableModel = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    int VoteAllocation = 5856996;
   
    // java.lang.Thread getListThread;
    // boolean getList;

    public Allocationintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

//        getListThread = new java.lang.Thread(this, "Update_petty_cash");

        initComponents();

        //getList = true;

        //getListThread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        jSearchDialog3.setUndecorated(true);
        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField114, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });
        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton92.setText("Close");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Commitments and Payments Done off System");
        setPreferredSize(new java.awt.Dimension(650, 700));
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1000.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel22, gridBagConstraints);

        setBounds(0, 0, 748, 436);
    }// </editor-fold>//GEN-END:initComponents
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        /*
         * int i = jTable1.getSelectedRow(); java.lang.Object res_cmbox2 =
         * cmbox2.getSelectedItem();
         *
         * try { java.sql.Statement pstmt = connectDB.createStatement();
         * java.sql.ResultSet rs = pstmt.executeQuery("select item_code from
         * stock_item where description = '"+cmbox2.getSelectedItem()+"'");
         * while (rs.next()) jTable1.setValueAt(rs.getObject(1),i,1);
         *
         * } catch(java.sql.SQLException sqlex){
         * System.out.println(sqlex.getMessage()); }
         */
    }
    private void cmbox13MouseClicked() {

      

    }
    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        if (jTextField114.getCaretPosition() > 0) {
            jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT subitem,subitemname FROM subitems WHERE subitemname ILIKE '%" + jTextField114.getText() + "%'"));

            jSearchScrollPane3.setViewportView(jSearchTable3);
            System.out.println("Cannot sort out");

        }// Add your handling code here:
}//GEN-LAST:event_jTextField114CaretUpdate

    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        this.jTextField114.setText("");
        


        jSearchDialog3.dispose();


        // Add your handling code here:
}//GEN-LAST:event_jSearchTable3MouseClicked

    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        this.jSearchDialog3.dispose();        // Add your handling code here:
}//GEN-LAST:event_jButton92ActionPerformed

    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
//
//        double totals = java.lang.Double.parseDouble(jTextField7.getText());
//        ;
//
//        int i = 0;
//
//        for (int j = 0; j < jTable1.getRowCount(); j++) {
//
//            System.out.println(jTable1.getModel().getValueAt(j, 8).toString());
//
//            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 8).toString()) == java.lang.Boolean.FALSE) {
//
//                totals = totals - Double.parseDouble(jTable1.getModel().getValueAt(j, 6).toString());
//
//                i++;
//            }
//        }
//
//        jTextField7.setText(Double.toString(totals));
//
//        // jTextField2.setText(Integer.toString(i));

       // System.out.println(totals);

      //  System.out.println(i);

        System.out.println("This table has changed");

    }

    /*
     * public void run() {
     *
     * while (getList) {
     *
     * runGetListThread();
     *
     * try {
     *
     * Thread.currentThread().sleep(30000);
     *
     * } catch (java.lang.InterruptedException IntExec) {
     *
     * javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(),
     * "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
     *
     * }
     *
     * // getList = false;
     *
     * }
     *
     * }
     *
     * public void runGetListThread() {
     *
     * int j = 0; int i = 0; int n = 0;
     *
     *
     * float debit = 0; float credit = 0; float total = 0; float balance = 0;
     * float bd = 0; int x = 0; int b = 0; try { java.sql.Statement stmt =
     * connectDB.createStatement(); java.sql.ResultSet rset =
     * stmt.executeQuery("select sum(debit-credit) from ac_petty_cash"); while
     * (rset.next()) {
     *
     * // jTextField1.setText(rset.getObject(1).toString()); balance =
     * rset.getFloat(1); }
     *
     * java.sql.Statement stmts = connectDB.createStatement();
     * java.sql.ResultSet rsets = stmts.executeQuery("select count(purpose) from
     * ac_petty_cash_requisition where approved = true AND paid = false and
     * status ilike 'reim%'"); while (rsets.next()) { x = rsets.getInt(1);
     *
     * }
     *
     * if (x > 0) { java.sql.Statement stmta = connectDB.createStatement();
     * java.sql.ResultSet rseta = stmta.executeQuery("select sum(credit) from
     * ac_petty_cash_requisition where approved = true AND paid = false and
     * status ilike 'reim%'"); while (rseta.next()) {
     *
     * jTextField4.setText(rseta.getObject(1).toString()); debit =
     * rseta.getFloat(1); // jTextField11.setText(rset.getObject(3).toString());
     * } } else { jTextField4.setText("0.00"); debit = 0; }
     *
     * java.sql.Statement stmts1 = connectDB.createStatement();
     * java.sql.ResultSet rsets1 = stmts1.executeQuery("select count(purpose)
     * from ac_petty_cash_requisition where approved = true AND paid = false and
     * status ilike 'adva%'"); while (rsets1.next()) { b = rsets1.getInt(1);
     *
     * }
     *
     * if (b > 0) { java.sql.Statement stmt1 = connectDB.createStatement();
     * java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(credit) from
     * ac_petty_cash_requisition where approved = true AND paid = false and
     * status ilike 'adva%'"); while (rset1.next()) {
     *
     * jTextField5.setText(rset1.getObject(1).toString()); credit =
     * rset1.getFloat(1); } } else { jTextField5.setText("0.00"); credit = 0; }
     *
     * total = debit + credit; bd = balance - total; jTextField6.setText("" +
     * total + "");
     *
     * jTextField7.setText("" + bd + "");
     *
     * /* java.sql.Statement stmt2 = connectDB.createStatement();
     * java.sql.ResultSet rset2 = stmt2.executeQuery("select sum(debit - credit)
     * from ac_petty_cash"); while (rset2.next()){
     *
     * jTextField7.setText(rset2.getObject(1).toString());
     *
     * }
     *
     * } catch (java.sql.SQLException sqe) { sqe.printStackTrace(); //
     * System.out.println("Insert not successful"); } jButton31 = new
     * javax.swing.JButton();
     *
     * /* crset1.setCommand("select sum(debit) as amount from ac_petty_cash");
     * crset1.setConnectionSource(pConnDB); crset4.setCommand("");
     * crset4.setConnectionSource(pConnDB);
     *
     *
     * try {
     *
     * for (int k = 0; k < jTable1.getRowCount(); k++) { for (int r = 0; r <
     * jTable1.getColumnCount(); r++) { jTable1.getModel().setValueAt(null, k,
     * r); } }
     *
     *
     *
     * java.sql.Statement stmtTable1 = connectDB.createStatement();
     *
     * java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select
     * requisition_no,department,requisitioner,payee,reason,date_required,credit
     * as amount,status,approved::boolean from ac_petty_cash_requisition WHERE
     * approved = false ORDER BY date_required");
     *
     *
     * while (rsetTable1.next()) {
     *
     * ///jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
     * //jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
     * //jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
     *
     * i++;
     *
     * }
     *
     * } catch (java.sql.SQLException sqlExec) {
     *
     * sqlExec.printStackTrace();
     *
     * javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
     *
     * }
     *
     *
     *
     * }
     */
    /*
     * try { crset4.setCommand("select
     * requisition_no,department,requisitioner,payee,reason,date_required,credit
     * as amount,status,approved::boolean from ac_petty_cash_requisition WHERE
     * approved = false"); crset4.setConnectionSource(pConnDB);
     *
     * crset4.execute();
     *
     * // crset2.setExecuteOnLoad(true); jTable1.setModel(new
     * org.netbeans.lib.sql.models.TableModel(crset4, new
     * org.netbeans.lib.sql.models.TableModel.Column[] { new
     * org.netbeans.lib.sql.models.TableModel.Column("requisition_no", "Req.
     * No.", false), new
     * org.netbeans.lib.sql.models.TableModel.Column("department", "Department",
     * false), new
     * org.netbeans.lib.sql.models.TableModel.Column("requisitioner",
     * "Requisitioner", false), new
     * org.netbeans.lib.sql.models.TableModel.Column("payee", "Payee", false),
     * new org.netbeans.lib.sql.models.TableModel.Column("reason", "Purpose",
     * false), new
     * org.netbeans.lib.sql.models.TableModel.Column("date_required", "Date
     * Required", false), new
     * org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount", true),
     * new org.netbeans.lib.sql.models.TableModel.Column("status", "Status",
     * false), new org.netbeans.lib.sql.models.TableModel.Column("approved",
     * "Approve?", true)
     *
     * }));
     *
     * jScrollPane1.setViewportView(jTable1); // } // }
     *
     * } catch(java.sql.SQLException sqlex){
     * javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error
     * Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
     *
     * System.out.println(sqlex.getMessage());
     *
     * }
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton92;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField114;
    // End of variables declaration//GEN-END:variables
}
