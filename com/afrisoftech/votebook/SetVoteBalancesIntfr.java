/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.votebook;

import static com.afrisoftech.hospital.HospitalMain.saccopn;
import java.awt.Color;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author sytem partners
 */
public class SetVoteBalancesIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form YearlyAllocationIntFr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
     double total_amt=0.0,balance=0.0;
     int num1=0;
     Boolean check_balance=false;
    
    public SetVoteBalancesIntfr( java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
      
       connectDB = connDb;
       

        pConnDB = pconnDB;
        initComponents();
        
       
        
    }
    
    public void creatingFinancialYear(javax.swing.JTextField mm){
    
        int limit_days=30;
        int limit_mnth=6;
       
        
        try{
            //        java.sql.Statement stmt=connectDB.createStatement();
//        java.sql.ResultSet res=stmt.executeQuery("select current_date::date");
//        
//        while (res.next()){
//        java.util.Date gets=res.getDate(1);
            
            Calendar now = Calendar.getInstance();
            int year = now.get(Calendar.YEAR);
            int month = now.get(Calendar.MONTH); // Note: zero based!
            int day = now.get(Calendar.DAY_OF_MONTH);
            String financial_yr=null;
            Object yr=null,next_year=null;
         
        if(month>=limit_mnth && day>=limit_days){

             yr=year;
             int y=year+1;
             next_year=y;
            financial_yr= yr.toString()+"/"+ next_year;
             
  }
        else{
             yr=year;
             int y=year-1;
             next_year=y;
        financial_yr= next_year+"/"+ yr;
        
        }
        
        mm.setText(financial_yr);
            
        
        }
        
        catch(Exception esc){
        esc.printStackTrace();
        
        }
    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        FirstPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        financial_yrTxt = new javax.swing.JTextField();
        headCbx = new javax.swing.JComboBox();
        aieTypeCbx = new javax.swing.JComboBox();
        aieAmtTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        voteCbx = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        BudgetBalTxt = new javax.swing.JTextField();
        aienoCbx = new javax.swing.JComboBox();
        ReferenceNoTxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        QuarterBillCbx = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        BudgetBalTxt1 = new javax.swing.JTextField();
        TblPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subheadsTbl = new com.afrisoftech.dbadmin.JTable();
        actionPanel = new javax.swing.JPanel();
        yearlyAllocationBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        VoteSubHeadBalTxt = new javax.swing.JTextField();

        jSearchDialog3.setUndecorated(true);
        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField114, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });
        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton92.setText("Close");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Setting Vote Balances");
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        FirstPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Budget NO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        FirstPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Financial Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        FirstPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Budget  Amount ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        FirstPanel.add(jLabel3, gridBagConstraints);

        financial_yrTxt.setEditable(false);
        financial_yrTxt.setText(com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        FirstPanel.add(financial_yrTxt, gridBagConstraints);

        headCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                headCbxItemStateChanged(evt);
            }
        });
        headCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 20, 50);
        FirstPanel.add(headCbx, gridBagConstraints);

        aieTypeCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT classname FROM vb_class  ORDER BY 1 "));
        aieTypeCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aieTypeCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        FirstPanel.add(aieTypeCbx, gridBagConstraints);

        aieAmtTxt.setEditable(false);
        aieAmtTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aieAmtTxt.setForeground(new java.awt.Color(255, 0, 0));
        aieAmtTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                aieAmtTxtCaretUpdate(evt);
            }
        });
        aieAmtTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aieAmtTxtMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aieAmtTxtMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                aieAmtTxtMouseReleased(evt);
            }
        });
        aieAmtTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                aieAmtTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        FirstPanel.add(aieAmtTxt, gridBagConstraints);

        jLabel6.setText("Budget Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        FirstPanel.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Vote Head");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 20, 0);
        FirstPanel.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Vote");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        FirstPanel.add(jLabel8, gridBagConstraints);

        voteCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT vote  FROM votes  ORDER BY 1 "));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        FirstPanel.add(voteCbx, gridBagConstraints);

        jLabel9.setText("Budget Ref No:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        FirstPanel.add(jLabel9, gridBagConstraints);

        jLabel11.setText("Total Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        FirstPanel.add(jLabel11, gridBagConstraints);

        BudgetBalTxt.setEditable(false);
        BudgetBalTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BudgetBalTxt.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        FirstPanel.add(BudgetBalTxt, gridBagConstraints);

        aienoCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct aieno from ac_aie_allocation"));
        aienoCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aienoCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        FirstPanel.add(aienoCbx, gridBagConstraints);

        ReferenceNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        FirstPanel.add(ReferenceNoTxt, gridBagConstraints);

        jLabel18.setText("Quarter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        FirstPanel.add(jLabel18, gridBagConstraints);

        QuarterBillCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 80);
        FirstPanel.add(QuarterBillCbx, gridBagConstraints);

        jLabel12.setText("Budget  Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        FirstPanel.add(jLabel12, gridBagConstraints);

        BudgetBalTxt1.setEditable(false);
        BudgetBalTxt1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BudgetBalTxt1.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        FirstPanel.add(BudgetBalTxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(FirstPanel, gridBagConstraints);

        TblPanel.setLayout(new java.awt.GridBagLayout());

        subheadsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Subhead", "Subhead Balance", "Subhead Allocation Amt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        subheadsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subheadsTblMouseClicked(evt);
            }
        });
        subheadsTbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                subheadsTblKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(subheadsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 6.0;
        TblPanel.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 6.0;
        getContentPane().add(TblPanel, gridBagConstraints);

        actionPanel.setLayout(new java.awt.GridBagLayout());

        yearlyAllocationBtn.setText("Save Balances");
        yearlyAllocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlyAllocationBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 20);
        actionPanel.add(yearlyAllocationBtn, gridBagConstraints);

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        actionPanel.add(jButton3, gridBagConstraints);

        jButton4.setText("Remove Row");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        actionPanel.add(jButton4, gridBagConstraints);

        jLabel4.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        actionPanel.add(jLabel4, gridBagConstraints);

        VoteSubHeadBalTxt.setEditable(false);
        VoteSubHeadBalTxt.setForeground(new java.awt.Color(255, 51, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionPanel.add(VoteSubHeadBalTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(actionPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        creatingFinancialYear(financial_yrTxt);
    }//GEN-LAST:event_formInternalFrameOpened

    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        if (jTextField114.getCaretPosition() >=2) {//com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT subhead FROM subheads ORDER BY 1")
//            jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct subhead,subheadname  from subheads where srccode='"+headCbx.getSelectedItem()+"'  and subhead not in (select DISTINCT subhead from ac_aie_allocation where head='"+headCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"' and aieno='"+aienoCbx.getSelectedItem()+"') "));
//
//            jSearchScrollPane3.setViewportView(jSearchTable3);
//            System.out.println("Cannot sort out");
//            
            
            /////modified on 24th feb 2014
                     String classes=null;
             try{
          java.sql.Statement  st11= connectDB.createStatement();
       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+aieTypeCbx.getSelectedItem()+"'");
       while(ress1.next()){
        classes=ress1.getString(1);
            jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct subhead,subheadname  from subheads where srccode='"+headCbx.getSelectedItem()+"'  and subhead  in (select DISTINCT subhead from ac_aie_allocation where head='"+headCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"' and aieno='"+aienoCbx.getSelectedItem()+"') and subhead ilike '%"+jTextField114.getText()+"%' and station  ilike '%"+classes+"%' order by subhead asc "));
            jSearchScrollPane3.setViewportView(jSearchTable3);
            System.out.println("Cannot sort out");
       }
             }
             catch(Exception edr){
             edr.printStackTrace();
             
             }
            
            ///end

        }// Add your handling code here:
    }//GEN-LAST:event_jTextField114CaretUpdate

    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        
         /////checks
        try{
           subheadsTbl.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0), subheadsTbl.getSelectedRow(),0);
          
           ////modified on 24th feb 2014
            String class_vb=null;
         java.sql.Statement  st11= connectDB.createStatement();
       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+aieTypeCbx.getSelectedItem()+"'");
       while(ress1.next()){
           
        class_vb=ress1.getString(1);
       
       }
       
      double subhead_quarterly_total=0.0;
        java.sql.Statement  st2= connectDB.createStatement();
       java.sql.ResultSet res2= st2.executeQuery(" SELECT sum(subhead_quartely_amount) FROM ac_aie_allocation where aieno='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"' and head='"+headCbx.getSelectedItem()+"' and period='"+QuarterBillCbx.getSelectedItem()+"' and subhead='"+jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(),0)+"' and class='"+ class_vb+"' ");
       while(res2.next()){
             subhead_quarterly_total = res2.getDouble(1);
             subheadsTbl.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quarterly_total),subheadsTbl.getSelectedRow(),2 );
            
        
       }
           ////end
       }
       catch(Exception ed){
            ed.printStackTrace();
               
               }
        jSearchDialog3.dispose();

        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked

    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        this.jSearchDialog3.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed

    private void subheadsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subheadsTblMouseClicked
        
        if(subheadsTbl.getSelectedColumn()==0){
         System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog3.setSize(600, 200);
        jSearchDialog3.setLocation(point);
        jSearchDialog3.setVisible(true);
        }
        
       // headAmtTxt.setEnabled(false);
       Boolean check_no_amt=false; 
        
        
       
       
     //     if(Double.parseDouble(subheadsTbl.getValueAt(subheadsTbl.getSelectedRow(),1).toString().replace(",", ""))<=Double.parseDouble(subheadsTbl.getValueAt(subheadsTbl.getSelectedRow(),2).toString().replace(",", ""))){
        
        
        for(int j=0; j<subheadsTbl.getRowCount();j++){
         if(subheadsTbl.getValueAt(j,0)!=null && subheadsTbl.getValueAt(j,1)!=null){
           // if(subheadsTbl.getModel().isCellEditable(subheadsTbl.getSelectedRow(), 1)){
            
         //total_amt=total_amt+Double.parseDouble(subheadsTbl.getValueAt(j,1).toString());
             Object objs=com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(subheadsTbl, 1);
             try{
            VoteSubHeadBalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(objs.toString())));
            
             }
             catch(Exception hg){
                 hg.printStackTrace();
                 
                 
             }
                 
      
         }
        }
        
//        }
//            else{
//            JOptionPane.showMessageDialog(null,"The balances Cannot Exceed the allocated Amount", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);   
//            
//            }
        
        
        
    }//GEN-LAST:event_subheadsTblMouseClicked

    private void yearlyAllocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlyAllocationBtnActionPerformed
        ////CREATING YEARLY ALLOCATIONS
        
        
        try{
            connectDB.setAutoCommit(false);
            if(!aieAmtTxt.getText().equals("0.0")){
                if(Double.parseDouble(BudgetBalTxt1.getText().toString().replace(",", ""))>0){
               
            Boolean check_status=false;
            String  user=null;
            
            java.sql.Statement stmts = connectDB.createStatement();
            java.sql.ResultSet res=stmts.executeQuery("select current_user");
            while(res.next()){
           user= res.getString(1);
            
            }
            
            //////////getting  the date
            Date now_date=null;
            java.sql.Statement stmts1 = connectDB.createStatement();
            java.sql.ResultSet res1=stmts1.executeQuery("select current_date");
            while(res1.next()){
           now_date= res1.getDate(1);
            
            }
            int comitno = 0;
            java.sql.Statement st = connectDB.createStatement();
            java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER,NEXTVAL('comitment_no')");
            while (rs.next()) {


                user = rs.getObject(1).toString();
                comitno = rs.getInt(2);

            }
            
               String classes=null;
java.sql.Statement  st11= connectDB.createStatement();
       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+aieTypeCbx.getSelectedItem()+"'");
       while(ress1.next()){
        classes=ress1.getString(1);
      
       }
            
for(int i=0; i<subheadsTbl.getRowCount(); i++ ){
 
    ///ghjkl
//    String status=headCbx.getSelectedItem().toString()+"-"+subheadsTbl.getValueAt(i, 0).toString();
//    int count=0;
//    
//        java.sql.Statement  st11q= connectDB.createStatement();
//       java.sql.ResultSet ress1q= st11q.executeQuery("select count(vote) from ac_aie_commitment where v_class='"+classes+"' "
//               + "                          and vote='"+voteCbx.getSelectedItem().toString()+"' and head='"+headCbx.getSelectedItem().toString()+"' "
//               + "and subhead='"+subheadsTbl.getValueAt(i, 1).toString()+"' and supplier='OPENING EXPENDITURE' "
//               + "                                  and reftype='OPENING EXPENDITURE' and refno='OPENING EXPENDITURE'");
//       while(ress1q.next()){
//       count =ress1q.getInt(1);
//      
//       }
    //gfgtjhgju
  // if(count!=0){
      if(subheadsTbl.getValueAt(i, 1)!=null && subheadsTbl.getValueAt(i, 0)!=null){
          
          
    if(Double.parseDouble(subheadsTbl.getValueAt(i,1).toString().replace(",", ""))<=Double.parseDouble(subheadsTbl.getValueAt(i,2).toString().replace(",", ""))){
    
      String status=headCbx.getSelectedItem().toString()+"-"+subheadsTbl.getValueAt(i, 0).toString();
    int count=0;
    
        java.sql.Statement  st11q= connectDB.createStatement();
       java.sql.ResultSet ress1q= st11q.executeQuery("select count(*) from ac_aie_commitment where v_class='"+classes+"' "
               + "                          and vote='"+voteCbx.getSelectedItem().toString()+"' and head='"+headCbx.getSelectedItem().toString()+"' "
               + "and subhead='"+subheadsTbl.getValueAt(i, 1).toString()+"' and supplier='OPENING EXPENDITURE' "
               + "                                  and reftype='OPENING EXPENDITURE' and refno='OPENING EXPENDITURE'");
       while(ress1q.next()){
       count =ress1q.getInt(1);
      
       }
if(count==0){
      // for(int k=1;k<5;k++){
java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                           + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                           + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                            + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                            + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                            + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                    pstmt2.setObject(1, classes);
                    // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                    pstmt2.setObject(2, voteCbx.getSelectedItem());
                    pstmt2.setObject(3, headCbx.getSelectedItem());
                    pstmt2.setObject(4, headCbx.getSelectedItem());
                    pstmt2.setObject(5, subheadsTbl.getValueAt(i, 0));
                    pstmt2.setObject(6, "");
                    pstmt2.setObject(7, "OPENING EXPENDITURE");
                    pstmt2.setObject(8, "OPENING EXPENDITURE");
                    pstmt2.setObject(9, "OPENING EXPENDITURE");
                    pstmt2.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                    pstmt2.setDouble(11, Double.parseDouble(subheadsTbl.getValueAt(i,2).toString().replace(",",""))- Double.parseDouble(subheadsTbl.getValueAt(i,1).toString().replace(",","")));
                    pstmt2.setDouble(12,0.0);
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                        pstmt2.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                    pstmt2.setObject(14, "");
                    pstmt2.setObject(15, "");
                    pstmt2.setObject(16, user);
                    pstmt2.setObject(17, aienoCbx.getSelectedItem());
                    pstmt2.setObject(18, "0");
                    pstmt2.setObject(19, comitno);
                    pstmt2.setObject(20,"");
                    pstmt2.setObject(21,financial_yrTxt.getText());
                    pstmt2.setObject(22,QuarterBillCbx.getSelectedItem());
                    pstmt2.setObject(23,"OPENING EXPENDITURE");
                    pstmt2.setObject(24,"");
                    pstmt2.execute();
                    
                    
                    /////decommiting 
                             java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                           + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                           + "reftype, refno, committedon, allocated_amount, paid_amount, comtype, "
                            + "donorcode, donoritem, commited_by, aie_no,cleared,commitno, invoice_no,financial_year,period,voucher_no,payment_reason)"
                            + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                            + "?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                     pstmt21.setObject(1, classes);
                    // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                    pstmt21.setObject(2, voteCbx.getSelectedItem());
                    pstmt21.setObject(3, headCbx.getSelectedItem());
                    pstmt21.setObject(4, headCbx.getSelectedItem());
                    pstmt21.setObject(5, subheadsTbl.getValueAt(i, 0));
                    pstmt21.setObject(6, "");
                    pstmt21.setObject(7, "OPENING EXPENDITURE");
                    pstmt21.setObject(8, "OPENING EXPENDITURE");
                    pstmt21.setObject(9, "OPENING EXPENDITURE");
                    pstmt21.setTimestamp(10, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                    pstmt21.setDouble(11, 0.0);
                    pstmt21.setDouble(12,Double.parseDouble(subheadsTbl.getValueAt(i,2).toString().replace(",",""))- Double.parseDouble(subheadsTbl.getValueAt(i,1).toString().replace(",","")));
//                    if (orderPaymentCommitTable.getValueAt(i, 5).toString().startsWith("S")) {
                        pstmt21.setObject(13, "S");
//                    } else {
//                        pstmt2.setObject(13, "M");
//                    }
                    pstmt21.setObject(14, "");
                    pstmt21.setObject(15, "");
                    pstmt21.setObject(16, user);
                    pstmt21.setObject(17, aienoCbx.getSelectedItem());
                    pstmt21.setObject(18, "0");
                    pstmt21.setObject(19, comitno);
                    pstmt21.setObject(20,"");
                    pstmt21.setObject(21,financial_yrTxt.getText());
                    pstmt21.setObject(22,QuarterBillCbx.getSelectedItem());
                    pstmt21.setObject(23,"OPENING EXPENDITURE");
                    pstmt21.setObject(24,"");
                    pstmt21.executeUpdate();
        
//        String quarter=null;
//        if(k==1){  quarter="1st Quarter";  }    
//        else if(k==2){quarter="2nd Quarter";}
//        else if(k==3){quarter="3rd Quarter";}
//        else if(k==4){quarter="4th Quarter";}
//        
        
       

        
        check_status=true;
    }else{
           connectDB.rollback();
        connectDB.setAutoCommit(true);
        check_status=false;
        VoteSubHeadBalTxt.setText("");
            JOptionPane.showMessageDialog(null,"The balance for vote "+status+" is already set", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);   
             
    }
       //}
    }
    
                else{
        connectDB.rollback();
        connectDB.setAutoCommit(true);
        check_status=false;
        VoteSubHeadBalTxt.setText("");
            JOptionPane.showMessageDialog(null,"The balances Cannot Exceed the allocated Amount", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);   
            
            }
     }
//yes
//} else{
//        connectDB.rollback();
//        connectDB.setAutoCommit(true);
//        check_status=false;
//        VoteSubHeadBalTxt.setText("");
//            JOptionPane.showMessageDialog(null,"The starting balance for '"+status+"' has already been posted", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);   
//            
//            }
}

if(check_status==true){
    VoteSubHeadBalTxt.setText("");
    connectDB.commit();
    connectDB.setAutoCommit(true);
JOptionPane.showMessageDialog(null,"Balance(s)  Set Successfuly", "CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
VoteSubHeadBalTxt.setText(null);
for (int k = 0; k < subheadsTbl.getRowCount(); k++) {
                for (int r = 0; r < subheadsTbl.getColumnCount(); r++) {
                    subheadsTbl.getModel().setValueAt(null, k, r);
                }
        }

try{
////budget balance
                java.sql.Statement  st8= connectDB.createStatement();
                java.sql.ResultSet res8= st8.executeQuery("SELECT  sum(allocated_amount)  FROM ac_aie_commitment where aie_no='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"'");
                while(res8.next()){
                   BudgetBalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res8.getString(1))));
                }
                
                ////budget balance
                double total_aie_amt=0.0;
            java.sql.Statement  st9= connectDB.createStatement();
                java.sql.ResultSet res9= st9.executeQuery(" SELECT  aie_amount  FROM ac_aie_allocation where aieno='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"' group by aie_amount ");
                while(res9.next()){
                  total_aie_amt=res9.getDouble(1);
               
                
               ////start here
                String total_paid_amt=null;
        java.sql.Statement  st23= connectDB.createStatement();
       java.sql.ResultSet ress23= st23.executeQuery("SELECT sum(paid_amount)  FROM ac_aie_commitment where aie_no ilike '"+aienoCbx.getSelectedItem()+"%' and financial_year='"+financial_yrTxt.getText()+"'");
       while(ress23.next()){
       
       total_paid_amt=ress23.getString(1);
       if(total_paid_amt!=null){
     
       BudgetBalTxt1.setForeground(Color.red);
       BudgetBalTxt1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(total_aie_amt-Double.parseDouble(total_paid_amt)));
        
       }
       else{
         total_paid_amt="0.0";  
           BudgetBalTxt1.setForeground(Color.red);
       
       BudgetBalTxt1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(total_aie_amt-Double.parseDouble(total_paid_amt)));
       
       }
       
        }
                }           

}
catch(Exception egd){
egd.printStackTrace();

}


}
else{
JOptionPane.showMessageDialog(null,"Double Check Your Entries", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

}
   
                }
                else{
                 JOptionPane.showMessageDialog(null,"The Vote Head cannot be zero", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);   
                
                }
}
         
        
        else{
            JOptionPane.showMessageDialog(null,"The budgeted Amount Cannot Be zero", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);   
                }
        }
        catch(Exception est){
        est.printStackTrace();
        System.out.println(est);
        
        }
        
        
    }//GEN-LAST:event_yearlyAllocationBtnActionPerformed

    private void subheadsTblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subheadsTblKeyReleased
        //calculating the total
        
       
    }//GEN-LAST:event_subheadsTblKeyReleased

    private void aieAmtTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_aieAmtTxtCaretUpdate
//        try{
//            if(check_balance==false){
//        BudgetBalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(aieAmtTxt.getText().replace(",",""))));
//        }
//        
//        else
//        {
//           System.out.println("DO NOTHING");
//                }
//        }
//        catch(Exception dfs){
//        dfs.printStackTrace();
//        
//        }
    }//GEN-LAST:event_aieAmtTxtCaretUpdate

    private void aieAmtTxtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aieAmtTxtMouseReleased
       
    }//GEN-LAST:event_aieAmtTxtMouseReleased

    private void aieAmtTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aieAmtTxtMousePressed
       
    }//GEN-LAST:event_aieAmtTxtMousePressed

    private void aieAmtTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aieAmtTxtMouseExited
 
         if(aieAmtTxt.getText()!=null){
         try{
            aieAmtTxt.setText( com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(aieAmtTxt.getText().toString().replace(",",""))));
        }
         catch(Exception esf){
         esf.printStackTrace();
         
         }
         }
        
       

    }//GEN-LAST:event_aieAmtTxtMouseExited

    private void aieAmtTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aieAmtTxtFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_aieAmtTxtFocusLost

    private void headCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headCbxActionPerformed
//     //headCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT head FROM heads  ORDER BY 1 "));
//        ////GETTING THE HEADER BALANCE
//        try{
//            Double head_amt=0.0;
//            Double subhead_quarterly_total=0.0;
//        java.sql.Statement  st1= connectDB.createStatement();
//       java.sql.ResultSet ress= st1.executeQuery(" SELECT count(*) as num FROM ac_aie_allocation where aieno ilike '"+aienoCbx.getSelectedItem()+"%' and financial_year='"+financial_yrTxt.getText()+"' and  head='"+headCbx.getSelectedItem()+"'");
//       while(ress.next()){
//        num1=ress.getInt(1);
//       // head_amt=ress.getDouble(2);
//       }
//       String head_amt_str=null;
//        java.sql.Statement  st6= connectDB.createStatement();
//       java.sql.ResultSet ress6= st6.executeQuery(" SELECT head_amount  FROM ac_aie_allocation where aieno ilike '"+aienoCbx.getSelectedItem()+"%' and financial_year='"+financial_yrTxt.getText()+"' and  head='"+headCbx.getSelectedItem()+"' group by head_amount");
//       while(ress6.next()){
//       
//        head_amt_str=ress6.getString(1);
//       }
//       
//       
//       if(num1>=1){
//        java.sql.Statement  st2= connectDB.createStatement();
//       java.sql.ResultSet res2= st2.executeQuery(" SELECT  sum(subhead_quartely_amount)    FROM ac_aie_allocation where aieno='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"' and head='"+headCbx.getSelectedItem()+"' ");
//       while(res2.next()){
//        subhead_quarterly_total=res2.getDouble(1);
//        //fin_yr=res2.getString(2);
//         aieAmtTxt.setEnabled(false);
//         Object obj=Double.parseDouble(head_amt_str)-subhead_quarterly_total;
//        
//         VoteHeadBalTxt.setText(obj.toString());
//        
//       }
//       }
//       else{
//           if(head_amt_str!=null){
//           head_amt=0.0;
//           }
//           Object obh=head_amt;
//      
//      
//       }
//        }
//        catch(Exception edf){
//        edf.printStackTrace();
//        
//        }
        
        for (int k = 0; k < subheadsTbl.getRowCount(); k++) {
                for (int r = 0; r < subheadsTbl.getColumnCount(); r++) {
                    subheadsTbl.getModel().setValueAt(null, k, r);
                }
        }
    }//GEN-LAST:event_headCbxActionPerformed

    private void headCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_headCbxItemStateChanged
      
    }//GEN-LAST:event_headCbxItemStateChanged

    private void aieTypeCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aieTypeCbxActionPerformed
        
       try{
             headCbx.removeAllItems();
             String classes=null;
             
          java.sql.Statement  st11= connectDB.createStatement();
       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+aieTypeCbx.getSelectedItem()+"'");
       while(ress1.next()){
        classes=ress1.getString(1);
      
       
       
        java.sql.Statement  st1= connectDB.createStatement();
       java.sql.ResultSet ress= st1.executeQuery("SELECT head FROM heads where subvote ilike '%"+classes.replace(",","")+"%' order by 1");
       while(ress.next()){
        headCbx.addItem(ress.getString(1));
       // head_amt=ress.getDouble(2);
       }
        // head_amt=ress.getDouble(2);
       }
       
        }
        catch(Exception edf){
        edf.printStackTrace();
        
        }
    }//GEN-LAST:event_aieTypeCbxActionPerformed

    private void aienoCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aienoCbxActionPerformed
        ///retrieving  the aie_Ref_no
       // financial_yrTxt.setText("2014-2015");
        try{
            String total_allocations=null,total_expenses=null;
            java.sql.Statement  st2= connectDB.createStatement();
            java.sql.ResultSet res2= st2.executeQuery("SELECT distinct aie_amount,aie_reference_no   FROM ac_aie_allocation where aieno='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"' ");
            while(res2.next()){

                ReferenceNoTxt.setForeground(Color.red);
                ReferenceNoTxt.setText(res2.getString(2));
                total_allocations=res2.getString(1);
                aieAmtTxt.setForeground(Color.red);
                aieAmtTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res2.getString(1))));

                ////budget balance
                java.sql.Statement  st8= connectDB.createStatement();
                java.sql.ResultSet res8= st8.executeQuery("SELECT  sum(allocated_amount)  FROM ac_aie_commitment where aie_no='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financial_yrTxt.getText()+"'");
                while(res8.next()){
                    
                    if(res8.getString(1)!=null){
                   BudgetBalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res8.getString(1))));
                  total_expenses=res8.getString(1);
                }
                    else{
                        
                        System.out.println("DO NOTHING");
                         BudgetBalTxt.setText("0.00");
                        
                    }
                }
            }
            
            if( total_allocations==null){
            JOptionPane.showMessageDialog(null,"You need to first create some allocations");
            
            }
            else{
            Object objs=null;
                if(total_expenses==null){
                total_expenses="0";
                objs=Double.parseDouble(total_allocations)-Double.parseDouble(total_expenses);     
                BudgetBalTxt1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(objs.toString())));
                
                }
                else{
                 objs=Double.parseDouble(total_allocations)-Double.parseDouble(total_expenses);     
                BudgetBalTxt1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(objs.toString())));
                
                }
            
            }
        }
        catch(Exception esd){
            esd.printStackTrace();

        }
    }//GEN-LAST:event_aienoCbxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         int rows2Delete = subheadsTbl.getSelectedRowCount();

        int[] selectedRows = subheadsTbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) subheadsTbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) subheadsTbl.getModel();

                defTableModel.removeRow(subheadsTbl.getSelectedRow());
            }
            }
    }//GEN-LAST:event_jButton4ActionPerformed
//private void searchButton2Clicked() {
//
//        System.out.println("Showing dialog");
//
//        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
//        java.awt.Point point = this.aieNoTxt1.getLocationOnScreen();
//
//        jSearchDialog3.setSize(600, 200);
//
//        jSearchDialog3.setLocation(point);
//
//        jSearchDialog3.show();
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BudgetBalTxt;
    private javax.swing.JTextField BudgetBalTxt1;
    private javax.swing.JPanel FirstPanel;
    private javax.swing.JComboBox QuarterBillCbx;
    private javax.swing.JTextField ReferenceNoTxt;
    private javax.swing.JPanel TblPanel;
    private javax.swing.JTextField VoteSubHeadBalTxt;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JTextField aieAmtTxt;
    private javax.swing.JComboBox aieTypeCbx;
    private javax.swing.JComboBox aienoCbx;
    private javax.swing.JTextField financial_yrTxt;
    private javax.swing.JComboBox headCbx;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton92;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTable subheadsTbl;
    private javax.swing.JComboBox voteCbx;
    private javax.swing.JButton yearlyAllocationBtn;
    // End of variables declaration//GEN-END:variables
}
