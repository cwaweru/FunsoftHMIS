/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.votebook;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class headsSetupIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form headsSetupIntfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    public headsSetupIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
         connectDB = connDb;

         pConnDB = pconnDB;
        initComponents();
        jLabel12.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.afrisoftech.dbadmin.JTable();
        jPanel5 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Divisions/VoteHead Setup");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Vote");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT distinct vote FROM votes) ORDER BY 1"));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(jComboBox1, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Division", "Division Name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 7.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 80);
        jPanel3.add(jButton2, gridBagConstraints);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 80);
        jPanel3.add(jButton1, gridBagConstraints);

        jButton3.setText("Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 80);
        jPanel3.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jLabel6.setText("Budget Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel6, gridBagConstraints);

        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT distinct concat(class,'-',classname)  FROM vb_class) ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(jComboBox4, gridBagConstraints);

        jLabel12.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel12, gridBagConstraints);

        jTabbedPane1.addTab("Divisions", jPanel1);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Division");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jLabel3, gridBagConstraints);

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT distinct head FROM heads) ORDER BY 1"));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 400);
        jPanel4.add(jComboBox2, gridBagConstraints);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "VoteHead", "VoteHead Name"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        jPanel4.add(jScrollPane2, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel5.add(jButton4, gridBagConstraints);

        jButton5.setText("Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 100);
        jPanel5.add(jButton5, gridBagConstraints);

        jButton6.setText("Edit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel5.add(jButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel5, gridBagConstraints);
        jPanel4.add(jLabel4, new java.awt.GridBagConstraints());

        jLabel7.setText("Budget Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel4.add(jLabel7, gridBagConstraints);

        jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT distinct concat(class,'-',classname)  FROM vb_class) ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jComboBox5, gridBagConstraints);

        jTabbedPane1.addTab("VoteHeads", jPanel4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        try{
            for (int k = 0; k < jTable2.getRowCount(); k++) {
                for (int r = 0; r < jTable2.getColumnCount(); r++) {
                    jTable2.getModel().setValueAt(null, k, r);
                }
            }
            String class_vb=null;
            int class_index=0;
            class_index=jComboBox5.getSelectedItem().toString().indexOf("-");
            class_vb=jComboBox5.getSelectedItem().toString().substring(0, class_index);

            java.sql.PreparedStatement ed = connectDB.prepareStatement("SELECT DISTINCT subhead, subheadname FROM subheads where srccode = '"+jComboBox2.getSelectedItem().toString()+"' and station ilike '%"+class_vb+"%'  and srccode is not null order by subhead asc");
            java.sql.ResultSet rst = ed.executeQuery();
            int i =0;
            while (rst.next()){

                jTable2.setValueAt(rst.getObject(1), i, 0);
                jTable2.setValueAt(rst.getObject(2), i, 1);

                i++;
            }

            jButton5.setText("Update");

        } catch (SQLException ex) {
            Logger.getLogger(headsSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        Boolean check_insert_status=false;
        Boolean check_update=false;
        if(jButton5.getActionCommand().toString().equals("Save")){
            if(jComboBox2.getSelectedIndex()==0&&jComboBox5.getSelectedIndex()==0){
                javax.swing.JOptionPane.showMessageDialog(this, " Select the required fields first");

            }
            else{
                int v=0;

                for(int i=0; i<jTable2.getRowCount();i++){

                    if(jTable2.getValueAt(i, 0)!=null && jTable2.getValueAt(i, 1)!=null){
                        try {
                            ///trimming the budget type
                            String budget_type1=jComboBox5.getSelectedItem().toString();
                            int budg_index1=budget_type1.indexOf("-");

                            String new_joined_class=null,share_class=null;
                            int head_count=0;
                            java.sql.Statement stmtss=connectDB.createStatement();
                            java.sql.ResultSet rest=stmtss.executeQuery("SELECT count(*) as num from subheads  where  subhead='"+jTable2.getValueAt(i,0).toString()+"' and srccode='"+jComboBox2.getSelectedItem()+"' and subheadname='"+jTable2.getValueAt(i,1).toString()+"' and  srccode is not null");
                            while(rest.next()) {
                                head_count=rest.getInt("num");

                            }
                            if(head_count>=1){
                                //System.out.println("Do Nothing");
                                ///trimming the budget type
                                String new_joined_class1=null,share_class1=null;
                                java.sql.Statement stmtsf=connectDB.createStatement();
                                java.sql.ResultSet restf=stmtsf.executeQuery("SELECT station  from subheads  where  srccode='"+jComboBox2.getSelectedItem()+"' and subhead='"+jTable2.getValueAt(i,0).toString()+"' ");
                                while(restf.next()) {
                                    share_class1=restf.getString(1);

                                }

                                String budget_type4=jComboBox5.getSelectedItem().toString();
                                int budg_index4=budget_type4.indexOf("-");

                                new_joined_class1=share_class1+","+budget_type4.substring(0, budg_index4);

                                java.sql.PreparedStatement pst11 =connectDB.prepareStatement("UPDATE subheads  SET  station='"+new_joined_class1+"' where subhead='"+jTable2.getValueAt(i,0).toString()+"' ");
                                pst11.executeUpdate();
                                check_insert_status=true;

                            }
                            else{
                                ///trimming the budget type
                                String budget_type=jComboBox5.getSelectedItem().toString();
                                int budg_index=budget_type.indexOf("-");

                                java.sql.PreparedStatement pst1 =connectDB.prepareStatement("INSERT INTO subheads(subhead, srccode, subheadname, station) VALUES (?, ?, ?,?)");
                                pst1.setObject(1, jTable2.getValueAt(i, 0));
                                pst1.setObject(2, jComboBox2.getSelectedItem().toString() );
                                pst1.setObject(3, jTable2.getValueAt(i, 1));
                                pst1.setObject(4, budget_type.substring(0, budg_index));

                                pst1.executeUpdate();
                                check_insert_status=true;
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(headsSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                if(check_insert_status==true){
                    javax.swing.JOptionPane.showMessageDialog(this, " Insert Done Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);

                    for (int k = 0; k < jTable2.getRowCount(); k++) {
                        for (int r = 0; r < jTable2.getColumnCount(); r++) {
                            jTable2.getModel().setValueAt(null, k, r);
                        }
                    }
                }
                else{
                    javax.swing.JOptionPane.showMessageDialog(this, " Double Check Your Entries","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

                }

            }
        }
        else if(jButton5.getActionCommand().toString().equals("Update")){
            for(int j=0; j<jTable2.getRowCount();j++){
                if(jTable2.getValueAt(j, 0)!=null && jTable2.getValueAt(j, 1)!=null){

                    try{
                        java.sql.PreparedStatement pst1 =connectDB.prepareStatement("UPDATE  subheads  set subhead=?, srccode=?, subheadname=? where srccode='"+jComboBox2.getSelectedItem()+"'");
                        pst1.setObject(1, jTable2.getValueAt(j, 0));
                        pst1.setObject(2, jComboBox2.getSelectedItem().toString() );
                        pst1.setObject(3, jTable2.getValueAt(j, 1));

                        pst1.executeUpdate();

                        check_update=true;

                    }
                    catch(Exception esv){

                        esv.printStackTrace();

                    }

                }
            }
            if(check_update==true){
                javax.swing.JOptionPane.showMessageDialog(this, " Update Done Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                jButton5.setText("Save");
                for (int k = 0; k < jTable2.getRowCount(); k++) {
                    for (int r = 0; r < jTable2.getColumnCount(); r++) {
                        jTable2.getModel().setValueAt(null, k, r);
                    }
                }
            }
            else{
                javax.swing.JOptionPane.showMessageDialog(this, " Double Check Your Entries","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

            }
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        //  jLabel4
        try {
            // TODO add your handling code here:
            if(jComboBox2.getSelectedItem().equals("-")){
                jLabel4.setVisible(false);
            }
            java.sql.PreparedStatement get = connectDB.prepareStatement("SELECT distinct headname FROM heads where head = '"+jComboBox2.getSelectedItem().toString()+"';");
            java.sql.ResultSet done = get.executeQuery();
            while(done.next()){
                //java.lang.String head_name = done.getObject(1).toString();

                //jLabel4.setVisible(true);
                //jLabel4.setText(head_name);
            }

        } catch (SQLException ex) {
            Logger.getLogger(headsSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:

            java.sql.PreparedStatement ed = connectDB.prepareStatement("SELECT  head, headname FROM heads where vote = '"+jComboBox1.getSelectedItem().toString()+"'");
            java.sql.ResultSet rst = ed.executeQuery();
            int i =0;
            while (rst.next()){

                jTable1.setValueAt(rst.getObject(1), i, 0);
                jTable1.setValueAt(rst.getObject(2), i, 1);
                i++;
            }

        } catch (SQLException ex) {
            Logger.getLogger(headsSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Boolean check_insert_status=false;
        if(jComboBox1.getSelectedIndex()==0&&jComboBox4.getSelectedIndex()==0){
            javax.swing.JOptionPane.showMessageDialog(this, " Select the required fields first");

        }
        else{
            int v=0;

            for(int i=0; i<jTable1.getRowCount();i++){
                if(jTable1.getValueAt(i, 0)!=null && jTable1.getValueAt(i, 1)!=null){

                    try {

                        int head_count=0;
                        String share_class=null,new_joined_class=null;
                        java.sql.Statement stmtss=connectDB.createStatement();
                        java.sql.ResultSet rest=stmtss.executeQuery("SELECT count(*) as num from heads  where  head='"+jTable1.getValueAt(i,0).toString()+"' ");
                        while(rest.next()) {
                            head_count=rest.getInt("num");

                        }
                        if(head_count>=1){
                            java.sql.Statement stmtsf=connectDB.createStatement();
                            java.sql.ResultSet restf=stmtsf.executeQuery("SELECT subvote  from heads  where  head='"+jTable1.getValueAt(i,0).toString()+"' ");
                            while(restf.next()) {
                                share_class=restf.getString(1);

                            }

                            ///trimming the budget type
                            String budget_type=jComboBox4.getSelectedItem().toString();
                            int budg_index=budget_type.indexOf("-");

                            new_joined_class=share_class+","+budget_type.substring(0, budg_index);

                            java.sql.PreparedStatement pst11 =connectDB.prepareStatement("UPDATE heads  SET  subvote='"+new_joined_class+"' where head='"+jTable1.getValueAt(i,0).toString()+"' ");
                            pst11.executeUpdate();
                            check_insert_status=true;

                        }
                        else{
                            java.sql.PreparedStatement pst1 =connectDB.prepareStatement("INSERT INTO heads(\n" +
                                "            vote, subvote, head, headname)\n" +
                                "    VALUES (?, ?, ?, ?);");
                            pst1.setObject(1, jComboBox1.getSelectedItem().toString());
                            ///trimming the budget type
                            String budget_type=jComboBox4.getSelectedItem().toString();
                            int budg_index=budget_type.indexOf("-");

                            pst1.setObject(2,budget_type.substring(0, budg_index));
                            pst1.setObject(3, jTable1.getValueAt(i, 0));
                            pst1.setObject(4, jTable1.getValueAt(i, 1));

                            pst1.executeUpdate();
                            check_insert_status=true;
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(headsSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            if(check_insert_status==true){
                javax.swing.JOptionPane.showMessageDialog(this, " Insert Done Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                for (int k = 0; k < jTable1.getRowCount(); k++) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++) {
                        jTable1.getModel().setValueAt(null, k, r);
                    }
                }

            }
            else{
                javax.swing.JOptionPane.showMessageDialog(this, " Double Check Your Entries","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            // TODO add your handling code here:
            if(jComboBox1.getSelectedItem().equals("-")){
                jLabel12.setVisible(false);
            }
            java.sql.PreparedStatement get = connectDB.prepareStatement("SELECT distinct votename FROM votes where vote = '"+jComboBox1.getSelectedItem().toString()+"';");
            java.sql.ResultSet done = get.executeQuery();
            while(done.next()){
                java.lang.String vote_name = done.getObject(1).toString();

                // jLabel12.setVisible(true);
                //jLabel12.setText(vote_name);
            }

        } catch (SQLException ex) {
            Logger.getLogger(headsSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
