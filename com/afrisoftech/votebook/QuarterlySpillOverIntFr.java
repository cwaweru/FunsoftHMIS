/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.votebook;

import java.awt.Color;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author sytem partners
 */
public class QuarterlySpillOverIntFr extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuarterlySpillOverIntFr
     */
    
     java.sql.Connection connectDB = null;
     org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    // String quarter=null;
      String nextQuater=null,class_vb=null;
     
    public QuarterlySpillOverIntFr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconn) {
     
       connectDB = connDb;
        pConnDB = pconn;
        initComponents();
        
//         try {
//            java.sql.Statement pstmt = connectDB.createStatement();
//            java.sql.ResultSet rs = pstmt.executeQuery("SELECT distinct financial_yr from ac_aie_yearly_allocation");
//            while (rs.next()) {
//                 fin_yrCbx.addItem(rs.getString(1));
//               
//            }
//            
//            java.sql.Statement pstmtn = connectDB.createStatement();
//            java.sql.ResultSet rsn = pstmtn.executeQuery("SELECT quarter from quarterssetup");
//            while (rsn.next()) {
//                 quarter=rsn.getString(1);
//                 
//                 jComboBox1.setForeground(Color.red);
//                 jComboBox1.addItem(quarter);
//               
////                  Object quaters=null, mn=null;
////            ///////NEW ADDITIONS USING SUBHEADS IN THE ALLOCATION
////          //  if(!jComboBox7.getSelectedItem().equals("-")){
////         mn= quaters.toString().charAt(0);
////           int g=Integer.parseInt(mn.toString());
//           
//           
//            }
//         }
//         catch(Exception esv){
//         esv.printStackTrace();
//         System.out.println(esv.getMessage());
//         }
         
         ///////getting the current quarter 
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        headCbx = new javax.swing.JComboBox();
        aieTypeCbx = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        voteCbx = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        BudgetBalTxt = new javax.swing.JTextField();
        aienoCbx = new javax.swing.JComboBox();
        ReferenceNoTxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        QuarterBillCbx = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        BudgetBalTxt1 = new javax.swing.JTextField();
        financialPeriodCmbx = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        aieAmtTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Quartely Spill Overs ");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("AIE NO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Financial Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        headCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                headCbxItemStateChanged(evt);
            }
        });
        headCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 20, 50);
        jPanel1.add(headCbx, gridBagConstraints);

        aieTypeCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT classname FROM vb_class  ORDER BY 1 "));
        aieTypeCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aieTypeCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        jPanel1.add(aieTypeCbx, gridBagConstraints);

        jLabel6.setText("Budget Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Division");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 20, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Vote");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        voteCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT vote  FROM votes  ORDER BY 1 "));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        jPanel1.add(voteCbx, gridBagConstraints);

        jLabel9.setText("AIE Ref No:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel11.setText("Total Balance");
        jLabel11.setEnabled(false);
        jLabel11.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel11, gridBagConstraints);

        BudgetBalTxt.setEditable(false);
        BudgetBalTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BudgetBalTxt.setForeground(new java.awt.Color(255, 0, 0));
        BudgetBalTxt.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(BudgetBalTxt, gridBagConstraints);

        aienoCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT distinct aieno from ac_aie_allocation"));
        aienoCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aienoCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        jPanel1.add(aienoCbx, gridBagConstraints);

        ReferenceNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(ReferenceNoTxt, gridBagConstraints);

        jLabel18.setText("Quarter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jLabel18, gridBagConstraints);

        QuarterBillCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1st Quarter", "2nd Quarter", "3rd Quarter" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 80);
        jPanel1.add(QuarterBillCbx, gridBagConstraints);

        jLabel12.setText("AIE  Balance");
        jLabel12.setEnabled(false);
        jLabel12.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jLabel12, gridBagConstraints);

        BudgetBalTxt1.setEditable(false);
        BudgetBalTxt1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BudgetBalTxt1.setForeground(new java.awt.Color(255, 0, 0));
        BudgetBalTxt1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(BudgetBalTxt1, gridBagConstraints);

        financialPeriodCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"(SELECT '-' UNION select  distinct financial_year from ac_aie_allocation) order by 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 80);
        jPanel1.add(financialPeriodCmbx, gridBagConstraints);

        jLabel3.setText("AIE Amount ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        aieAmtTxt.setEditable(false);
        aieAmtTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aieAmtTxt.setForeground(new java.awt.Color(255, 0, 0));
        aieAmtTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                aieAmtTxtCaretUpdate(evt);
            }
        });
        aieAmtTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aieAmtTxtMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aieAmtTxtMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                aieAmtTxtMouseReleased(evt);
            }
        });
        aieAmtTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                aieAmtTxtFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        jPanel1.add(aieAmtTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Votehead", "Quarterly Allocated Amt", "Quarterly Amt Spent", "Quarterly Bal", "Amt After Spillover", "Approve Spillover"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Spill Over");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel3.add(jButton1, gridBagConstraints);

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 20);
        jPanel3.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //saving spill overs
       try{
            if(!aieAmtTxt.getText().equals("0.0")){
               
            Boolean check_status=false;
            String  user=null;
            
            java.sql.Statement stmts = connectDB.createStatement();
            java.sql.ResultSet res=stmts.executeQuery("select current_user");
            while(res.next()){
           user= res.getString(1);
            
            }
            
            //////////getting  the date
            Date now_date=null;
            java.sql.Statement stmts1 = connectDB.createStatement();
            java.sql.ResultSet res1=stmts1.executeQuery("select current_date");
            while(res1.next()){
           now_date= res1.getDate(1);
            
            }
            
for(int i=0; i<jTable1.getRowCount(); i++ ){
    
    if(jTable1.getValueAt(i, 1)!=null && jTable1.getValueAt(i, 0)!=null){
            if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 5).toString()) == java.lang.Boolean.TRUE) {

        java.sql.PreparedStatement pstmt=connectDB.prepareStatement(" INSERT INTO ac_aie_allocation(\n" +
"            aieno, vote, subvote, class, aie_amount, head, head_amount, subhead, \n" +
"            subhead_yearly_amt, subhead_quartely_amount, subitem, \n" +
"            subitem_amt, donorcode, donoritem, status, reversedby, enteredon, \n" +
"            enteredby, modifiedby, financial_year, \n" +
"            aie_reference_no, date_received, period, vote_balance)\n" +
"    VALUES (?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?)");
        pstmt.setObject(1,aienoCbx.getSelectedItem().toString());
        pstmt.setObject(2,voteCbx.getSelectedItem());
        pstmt.setObject(3,headCbx.getSelectedItem());
//        java.sql.Statement stmtss= connectDB.createStatement();
//        java.sql.ResultSet resd=stmts.executeQuery("select class from vb_class where classname='"+aieTypeCbx.getSelectedItem()+"'");
//        while(resd.next()){
//         pstmt.setObject(4,resd.getString(1));
//        }
        pstmt.setObject(4,class_vb);
         pstmt.setDouble(5,Double.parseDouble(aieAmtTxt.getText().toString().replace(",", "")));
         pstmt.setObject(6,headCbx.getSelectedItem());
         pstmt.setDouble(7,0.00);
         pstmt.setObject(8,jTable1.getValueAt(i,0));
         pstmt.setDouble(9,0.00);
         pstmt.setDouble(10,(0-Double.parseDouble(jTable1.getValueAt(i,3).toString().replace(",", ""))));
         pstmt.setObject(11,"");
         pstmt.setDouble(12,0.0);
         pstmt.setObject(13,"");
         pstmt.setObject(14,"");
         pstmt.setObject(15,"0");
         pstmt.setObject(16,"");
         pstmt.setObject(17,now_date);
         pstmt.setObject(18,user);
         
         pstmt.setObject(19,"-spillover to");
         //pstmt.setObject(20,"");
        pstmt.setObject(20,financialPeriodCmbx.getSelectedItem().toString());
        pstmt.setObject(21,ReferenceNoTxt.getText());
        pstmt.setObject(22,now_date);
        
 
        pstmt.setObject(23,QuarterBillCbx.getSelectedItem().toString());
        pstmt.setDouble(24,0.0);
      
        pstmt.executeUpdate();
        
 //credit
              java.sql.PreparedStatement pstmt4=connectDB.prepareStatement(" INSERT INTO ac_aie_allocation(\n" +
"            aieno, vote, subvote, class, aie_amount, head, head_amount, subhead, \n" +
"            subhead_yearly_amt, subhead_quartely_amount, subitem, \n" +
"            subitem_amt, donorcode, donoritem, status, reversedby, enteredon, \n" +
"            enteredby, modifiedby, financial_year, \n" +
"            aie_reference_no, date_received, period, vote_balance)\n" +
"    VALUES (?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?)");
        pstmt4.setObject(1,aienoCbx.getSelectedItem().toString());
        pstmt4.setObject(2,voteCbx.getSelectedItem());
        pstmt4.setObject(3,headCbx.getSelectedItem());
        pstmt4.setObject(4,class_vb);
         pstmt4.setDouble(5,Double.parseDouble(aieAmtTxt.getText().toString().replace(",", "")));
         pstmt4.setObject(6,headCbx.getSelectedItem());
         pstmt4.setDouble(7,0.00);
         pstmt4.setObject(8,jTable1.getValueAt(i,0));
         pstmt4.setDouble(9,0.00);
         pstmt4.setDouble(10,(Double.parseDouble(jTable1.getValueAt(i,3).toString().replace(",", ""))));
         pstmt4.setObject(11,"");
         pstmt4.setDouble(12,0.0);
         pstmt4.setObject(13,"");
         pstmt4.setObject(14,"");
         pstmt4.setObject(15,"0");
         pstmt4.setObject(16,"");
         pstmt4.setObject(17,now_date);
         pstmt4.setObject(18,user);
         
         pstmt4.setObject(19,"+spillover from");
         //pstmt.setObject(20,"");
        pstmt4.setObject(20,financialPeriodCmbx.getSelectedItem().toString());
        pstmt4.setObject(21,ReferenceNoTxt.getText());
        pstmt4.setObject(22,now_date);
        
 
        pstmt4.setObject(23,nextQuater);
        pstmt4.setDouble(24,0.0);
       
        pstmt4.executeUpdate();


        
        check_status=true;
       
   
    }else{
                System.out.println("hii mtrh");
            }  
    
    
    }   
}

if(check_status==true){
JOptionPane.showMessageDialog(null,"SpillOver Done Successfuly", "CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
  
for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
        }
//headAmtTxt.setText(null);
//headAmtTxt.setEnabled(true);
//VoteHeadBalTxt.setText(null);

////budget balance
//try{
//                java.sql.Statement  st8= connectDB.createStatement();
//                java.sql.ResultSet res8= st8.executeQuery(" SELECT  (aie_amount-sum(subhead_quartely_amount))  FROM ac_aie_allocation where aieno='"+aienoCbx.getSelectedItem().toString()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem().toString()+"' group by aie_amount ");
//                while(res8.next()){
//                   BudgetBalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res8.getString(1))));
//                }
//                
//}
//catch(Exception edf){
//edf.printStackTrace();
//
//}


}
else{
JOptionPane.showMessageDialog(null,"Double Check Your Entries", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

}

}
        else{
            JOptionPane.showMessageDialog(null,"The budgeted Amount Cannot Be zero", "ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);   
                }
        }
        catch(Exception est){
        est.printStackTrace();
        System.out.println(est);
        
        }
        
        

        
    

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
       
    }//GEN-LAST:event_formInternalFrameOpened

    private void headCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_headCbxItemStateChanged

    }//GEN-LAST:event_headCbxItemStateChanged

    private void headCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headCbxActionPerformed
      /////filling the spill over table
        try{
            
            
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
           
        if(QuarterBillCbx.getSelectedIndex()==1){
            nextQuater="2nd Quarter";
        }else if(QuarterBillCbx.getSelectedIndex()==2){
            nextQuater="3rd Quarter";
        }else if(QuarterBillCbx.getSelectedIndex()==3){
            nextQuater="4th Quarter";
        }else if(QuarterBillCbx.getSelectedIndex()==0){
            nextQuater=null;
        }
        
        
             if(QuarterBillCbx.getSelectedIndex()!=0){
             String subhead=null;
             double subhead_quat_amt=0.0;
         java.sql.Statement  st11= connectDB.createStatement();
       java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+aieTypeCbx.getSelectedItem()+"'");
       while(ress1.next()){
           
        class_vb=ress1.getString(1);
        System.err.println("class "+class_vb);
       
       }
        java.sql.Statement st15 = connectDB.createStatement();
        java.sql.ResultSet rset15 = st15.executeQuery("SELECT DISTINCT at.subhead,sum(at.subhead_quartely_amount) FROM ac_aie_allocation at, subheads sb WHERE at.aieno ='" +aienoCbx.getSelectedItem() + "' AND at.subhead = sb.subhead and at.class='"+class_vb+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and at.head=sb.srccode and at.head='"+headCbx.getSelectedItem()+"'  and  at.period='"+QuarterBillCbx.getSelectedItem()+"' GROUP BY at.subhead  ORDER BY 1 ");
          ///retrieving all subheads
        int m=0;
          while (rset15.next()) { 
               subhead_quat_amt= rset15.getDouble(2);
                subhead=rset15.getString(1);
                System.err.println("subhead "+subhead);
                jTable1.setValueAt(subhead,m, 0);
                jTable1.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_quat_amt),m,1);
         
                
                
                ////getting the amount used
                 java.sql.Statement  st90= connectDB.createStatement();
       //java.sql.ResultSet res90= st90.executeQuery(" SELECT  distinct sum(allocated_amount)   FROM ac_aie_commitment where aie_no='"+jComboBox4.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and head='"+jComboBox2.getSelectedItem()+"' and period='"+jComboBox1.getSelectedItem()+"' and subhead='"+jComboBox3.getSelectedItem()+"' ");
       double subhead_commited_total=0.0,subhead_payment_total=0.0;
       java.sql.ResultSet res90= st90.executeQuery("SELECT  distinct sum(allocated_amount)   FROM ac_aie_commitment where aie_no='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' and head='"+headCbx.getSelectedItem()+"' and period='"+QuarterBillCbx.getSelectedItem()+"' and subhead='"+subhead+"'  and vote ='"+voteCbx.getSelectedItem()+"' and v_class='"+ class_vb+"' ");
       while(res90.next()){
           if(res90.getString(1)!=null){
             subhead_commited_total = res90.getDouble(1);
             System.err.println("subhead_commited_total "+subhead_commited_total);
            
            jTable1.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total),m,2);
             
           }
             else{
              subhead_commited_total =0.0;
               System.err.println("subhead_commited_total "+subhead_commited_total);
            jTable1.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(subhead_commited_total),m,2); 
           }
           
           
       }
       /////getting the quarterly vote subhead balance
       
        System.err.println("subhead_bal "+String.valueOf(Double.parseDouble(jTable1.getValueAt(m,1).toString().replace(",",""))-Double.parseDouble(jTable1.getValueAt(m,2).toString().replace(",",""))));
   double amt= Double.parseDouble(jTable1.getValueAt(m,1).toString().replace(",",""))-Double.parseDouble(jTable1.getValueAt(m,2).toString().replace(",",""));
        jTable1.setValueAt(amt,m,3);
       
             
       
        jTable1.setValueAt(false,m, 5);
       
       
       ///end
       
                
              m++;                        
         }
          
         }
            else{
            JOptionPane.showMessageDialog(null,"You need to Select the Quarter");
            
            }
        }
        catch(Exception esdfg){
        esdfg.printStackTrace();
        
        }
        
        
        ///end 

    }//GEN-LAST:event_headCbxActionPerformed

    private void aieTypeCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aieTypeCbxActionPerformed
 if(QuarterBillCbx.getSelectedIndex()==1){
            nextQuater="2nd Quarter";
        }else if(QuarterBillCbx.getSelectedIndex()==2){
            nextQuater="3rd Quarter";
        }else if(QuarterBillCbx.getSelectedIndex()==3){
            nextQuater="4th Quarter";
        }else if(QuarterBillCbx.getSelectedIndex()==0){
            nextQuater=null;
        }
        
        try{
            headCbx.removeAllItems();
            String classes=null;

            java.sql.Statement  st11= connectDB.createStatement();
            java.sql.ResultSet ress1= st11.executeQuery("select class from vb_class where classname = '"+aieTypeCbx.getSelectedItem()+"'");
            while(ress1.next()){
                classes=ress1.getString(1);
                class_vb=ress1.getString(1);

                java.sql.Statement  st1= connectDB.createStatement();
                java.sql.ResultSet ress= st1.executeQuery("SELECT head FROM heads where subvote ilike '%"+classes.replace(",","")+"%' order by 1");
                while(ress.next()){
                    headCbx.addItem(ress.getString(1));
                    // head_amt=ress.getDouble(2);
                }
                // head_amt=ress.getDouble(2);
            }

        }
        catch(Exception edf){
            edf.printStackTrace();

        }
    }//GEN-LAST:event_aieTypeCbxActionPerformed

    private void aienoCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aienoCbxActionPerformed
        ///retrieving  the aie_Ref_no
        try{
            
            if(financialPeriodCmbx.getSelectedIndex()!=0){
            String total_allocations=null,total_expenses=null;
            java.sql.Statement  st2= connectDB.createStatement();
            java.sql.ResultSet res2= st2.executeQuery("SELECT distinct aie_amount,aie_reference_no   FROM ac_aie_allocation where aieno='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"' ");
            while(res2.next()){

                ReferenceNoTxt.setForeground(Color.red);
                ReferenceNoTxt.setText(res2.getString(2));
                total_allocations=res2.getString(1);
                aieAmtTxt.setForeground(Color.red);
                aieAmtTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res2.getString(1))));

                ////budget balance
                java.sql.Statement  st8= connectDB.createStatement();
                java.sql.ResultSet res8= st8.executeQuery("SELECT  sum(allocated_amount)  FROM ac_aie_commitment where aie_no='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"'");
                while(res8.next()){

                    if(res8.getString(1)!=null){
                        BudgetBalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(res8.getString(1))));
                        total_expenses=res8.getString(1);
                    }
                    else{

                        System.out.println("DO NOTHING");
                        BudgetBalTxt.setText("0.00");

                    }
                }
            }

            if( total_allocations==null){
                JOptionPane.showMessageDialog(null,"You need to first create some allocations");

            }
            else{
                Object objs=null;
                if(total_expenses==null){
                    total_expenses="0";
                    objs=Double.parseDouble(total_allocations)-Double.parseDouble(total_expenses);
                    BudgetBalTxt1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(objs.toString())));

                }
                else{
                    objs=Double.parseDouble(total_allocations)-Double.parseDouble(total_expenses);
                    BudgetBalTxt1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(objs.toString())));

                }

            }
            }
            else{
            JOptionPane.showMessageDialog(null,"You need to Select the financial year");
            
            }
        }
        catch(Exception esd){
            esd.printStackTrace();

        }
    }//GEN-LAST:event_aienoCbxActionPerformed

    private void aieAmtTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_aieAmtTxtCaretUpdate
        //        try{
            //            if(check_balance==false){
                //        BudgetBalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(aieAmtTxt.getText().replace(",",""))));
                //        }
            //
            //        else
            //        {
                //           System.out.println("DO NOTHING");
                //                }
            //        }
        //        catch(Exception dfs){
            //        dfs.printStackTrace();
            //
            //        }
    }//GEN-LAST:event_aieAmtTxtCaretUpdate

    private void aieAmtTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aieAmtTxtMouseExited

        if(aieAmtTxt.getText()!=null){
            try{
                aieAmtTxt.setText( com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(aieAmtTxt.getText().toString().replace(",",""))));
            }
            catch(Exception esf){
                esf.printStackTrace();

            }
        }

    }//GEN-LAST:event_aieAmtTxtMouseExited

    private void aieAmtTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aieAmtTxtMousePressed

    }//GEN-LAST:event_aieAmtTxtMousePressed

    private void aieAmtTxtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aieAmtTxtMouseReleased

    }//GEN-LAST:event_aieAmtTxtMouseReleased

    private void aieAmtTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aieAmtTxtFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_aieAmtTxtFocusLost

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        // System.out.println("fdgshtghjgn");
        //if(jTable1.getSelectedColumn()==5){
            System.out.println("fdgshtghjgn");
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5).toString()) == java.lang.Boolean.TRUE) {
                 //getting the amount allocated for next quater
                System.out.println("fdgshtghjgn"+nextQuater +"-"+class_vb);
                try{
                      java.sql.Statement  st2= connectDB.createStatement();
                            java.sql.ResultSet res2= st2.executeQuery(" SELECT  distinct sum(subhead_quartely_amount) FROM ac_aie_allocation where aieno='"+aienoCbx.getSelectedItem()+"' and financial_year='"+financialPeriodCmbx.getSelectedItem()+"'"
                                    + " and head='"+headCbx.getSelectedItem()+"' and period='"+nextQuater+"' and subhead='"+jTable1.getValueAt(jTable1.getSelectedRow(), 0)+"' and class='"+ class_vb+"' ");
                            while(res2.next()){
                                System.out.println(res2.getDouble(1));
                                 jTable1.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(res2.getDouble(1)+Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString().replace(",",""))),jTable1.getSelectedRow(),4);
                                   
                                 //fin_yr=res2.getString(2)
                            }
                }catch(Exception n){
                    n.printStackTrace();
                }
            }else{
                jTable1.setValueAt(0.00,jTable1.getSelectedRow(),4);
            }
       
        
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BudgetBalTxt;
    private javax.swing.JTextField BudgetBalTxt1;
    private javax.swing.JComboBox QuarterBillCbx;
    private javax.swing.JTextField ReferenceNoTxt;
    private javax.swing.JTextField aieAmtTxt;
    private javax.swing.JComboBox aieTypeCbx;
    private javax.swing.JComboBox aienoCbx;
    private javax.swing.JComboBox financialPeriodCmbx;
    private javax.swing.JComboBox headCbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox voteCbx;
    // End of variables declaration//GEN-END:variables
}
