/*
 * 
 *
 * Created on August 4, 2011, 13:11
 */
package com.afrisoftech.votebook;

import java.awt.Color;

/**
 *
 * @author  fwaweru
 */
//public class Allocationintfr extends javax.swing.JInternalFrame implements java.lang.Runnable {
public class CreditNoteIntfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox2 = null;
    java.sql.Connection connectDB = null;
    javax.swing.table.TableModel tableModel = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    // java.lang.Thread getListThread;
    // boolean getList;

    public CreditNoteIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

//        getListThread = new java.lang.Thread(this, "Update_petty_cash");

        initComponents();

        //getList = true;

        //getListThread.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();

        Class[] types = new Class [] {
            java.lang.Object.class , java.lang.Object.class,java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true,  false, false, false, false, true, true
        };

        ;
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        /*float debit = 0;
        float credit = 0;
        float total = 0;
        int j = 0;
        int k = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select sum(debit) from ac_petty_cash where paid = true AND description = 'Petty Cash'");
            while (rset.next()){

                jTextField1.setText(rset.getObject(1).toString());

            }

            java.sql.Statement stmts = connectDB.createStatement();
            java.sql.ResultSet rsets = stmts.executeQuery("select count(description) from ac_petty_cash where paid = true AND description !='Petty Cash'");
            while (rsets.next()){
                j = rsets.getInt(1);

            }

            if (j > 0){
                java.sql.Statement stmta = connectDB.createStatement();
                java.sql.ResultSet rseta = stmta.executeQuery("select sum(credit - debit) from ac_petty_cash where paid = true AND description !='Petty Cash'");
                while (rseta.next()){

                    jTextField4.setText(rseta.getObject(1).toString());
                    debit = rseta.getFloat(1);
                    // jTextField11.setText(rset.getObject(3).toString());
                }
            }else{
                jTextField4.setText("0.00");
                debit = 0;
            }

            java.sql.Statement stmts1 = connectDB.createStatement();
            java.sql.ResultSet rsets1 = stmts1.executeQuery("select count(description) from ac_petty_cash where paid = false");
            while (rsets1.next()){
                k = rsets1.getInt(1);

            }

            if (k > 0){
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(credit) from ac_petty_cash where paid = false");
                while (rset1.next()){

                    jTextField5.setText(rset1.getObject(1).toString());
                    credit = rset1.getFloat(1);
                }
            }else{
                jTextField5.setText("0.00");
                credit = 0;
            }

            total = debit+credit;
            jTextField6.setText(""+total+"");

            java.sql.Statement stmt2 = connectDB.createStatement();
            java.sql.ResultSet rset2 = stmt2.executeQuery("select sum(debit - credit) from ac_petty_cash");
            while (rset2.next()){

                jTextField7.setText(rset2.getObject(1).toString());

            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        */
        jButton31 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField12 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();

        jSearchDialog3.setUndecorated(true);
        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField114, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });
        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton92.setText("Close");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        jTextField113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField113ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Credit Note");
        setPreferredSize(new java.awt.Dimension(650, 700));
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('O');
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(225, 240, 240));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Supplier details here"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        tableModel = jTable1.getModel();

        tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {

            public void tableChanged(javax.swing.event.TableModelEvent evt) {

                tableModelTableChanged(evt);

            }

        });
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Supplier Code", "Ref No", "Reason", "Reference Type", "Commitment Type", "Commitment No", "Original Amt", "Amt To Credit", "Pay"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        java.lang.Object[] strCmb = {"LSO","LPO","IMPREST","OTHERS"};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Reference Type");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));

        java.lang.Object[] strCmb1 = {"SINGLE","MULTIPLE"};

        javax.swing.JComboBox cmBox1 = new javax.swing.JComboBox(strCmb1);

        javax.swing.table.TableColumn teditor1 = this.jTable1.getColumn("Commitment Type");

        teditor1.setCellEditor(new javax.swing.DefaultCellEditor(cmBox1));

        /*try {
            crset4.setCommand("select requisition_no,department,requisitioner,payee,reason,date_required,credit as amount,status,approved::boolean from ac_petty_cash_requisition WHERE approved = false");
            crset4.setConnectionSource(pConnDB);

            crset4.execute();

            // crset2.setExecuteOnLoad(true);
            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset4, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("requisition_no", "Req. No.", false),
                new org.netbeans.lib.sql.models.TableModel.Column("department", "Department", false),
                new org.netbeans.lib.sql.models.TableModel.Column("requisitioner", "Requisitioner", false),
                new org.netbeans.lib.sql.models.TableModel.Column("payee", "Payee", false),
                new org.netbeans.lib.sql.models.TableModel.Column("reason", "Purpose", false),
                new org.netbeans.lib.sql.models.TableModel.Column("date_required", "Date Required", false),
                new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount", true),
                new org.netbeans.lib.sql.models.TableModel.Column("status", "Status", false),
                new org.netbeans.lib.sql.models.TableModel.Column("approved", "Approve?", true)

            }));

            jScrollPane1.setViewportView(jTable1);
            // }
        // }

    } catch(java.sql.SQLException sqlex){
        javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

        System.out.println(sqlex.getMessage());

    }

    /*       cmbox2 = new javax.swing.JComboBox();

    try {

        crset1.setConnectionSource(pConnDB);
        crset1.execute("select description from stock_item");

        cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));

        javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Product");

        seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));

        cmbox2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                cmbox2ActionPerformed(evt);
            }
        });
    } catch(java.sql.SQLException sqlExec) {

        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }

    javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 4; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 0) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {
            if (i == 1) {
                column.setPreferredWidth(200);
            } else {
                if (i == 2) {
                    column.setPreferredWidth(50);
                }  else
                column.setPreferredWidth(50);

            }
        }
    }
    */
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jTable1KeyReleased(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    jPanel1.add(jScrollPane1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 25.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 2);
    getContentPane().add(jPanel1, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    getContentPane().add(jLabel1, gridBagConstraints);

    jLabel2.setText("Vote");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel2, gridBagConstraints);

    jTextField1.setEditable(false);
    jTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    jTextField1.setMinimumSize(new java.awt.Dimension(60, 19));
    jTextField1.setPreferredSize(new java.awt.Dimension(60, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jTextField1, gridBagConstraints);

    jLabel5.setText("Head");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel5, gridBagConstraints);

    jTextField4.setEditable(false);
    jTextField4.setFont(new java.awt.Font("Tahoma", 1, 11));
    jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField4.setText("0.00");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    getContentPane().add(jTextField4, gridBagConstraints);

    jLabel6.setText("Subhead");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel6, gridBagConstraints);

    jTextField5.setEditable(false);
    jTextField5.setFont(new java.awt.Font("Tahoma", 1, 11));
    jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField5.setText("0.00");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    getContentPane().add(jTextField5, gridBagConstraints);

    jLabel7.setText("AIE Amount");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel7, gridBagConstraints);

    jTextField6.setEditable(false);
    jTextField6.setFont(new java.awt.Font("Tahoma", 1, 11));
    jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField6.setText("0.00");
    jTextField6.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField6CaretUpdate(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    getContentPane().add(jTextField6, gridBagConstraints);

    jLabel8.setText("Payments Done");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel8, gridBagConstraints);

    jTextField7.setEditable(false);
    jTextField7.setFont(new java.awt.Font("Tahoma", 1, 11));
    jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField7.setText("0.00");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    getContentPane().add(jTextField7, gridBagConstraints);

    jButton31.setMnemonic('R');
    jButton31.setText("Refresh");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jButton31, gridBagConstraints);

    jLabel3.setText("AIE No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel3, gridBagConstraints);

    jComboBox1.setMinimumSize(new java.awt.Dimension(40, 19));
    jComboBox1.setPreferredSize(new java.awt.Dimension(40, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jComboBox1, gridBagConstraints);

    jComboBox2.setMinimumSize(new java.awt.Dimension(50, 19));
    jComboBox2.setPreferredSize(new java.awt.Dimension(50, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jComboBox2, gridBagConstraints);

    jComboBox3.setMinimumSize(new java.awt.Dimension(60, 19));
    jComboBox3.setPreferredSize(new java.awt.Dimension(60, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jComboBox3, gridBagConstraints);

    jLabel9.setText("Total Commitments");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel9, gridBagConstraints);

    jLabel4.setText("Select Aie Type...");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel4, gridBagConstraints);

    jComboBox4.setMinimumSize(new java.awt.Dimension(120, 18));
    jComboBox4.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jComboBox4, gridBagConstraints);

    jLabel10.setText("[]");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(jLabel10, gridBagConstraints);

    jLabel11.setText("[]");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(jLabel11, gridBagConstraints);

    jLabel12.setText("[]");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(jLabel12, gridBagConstraints);

    jLabel13.setText("Balance Before");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel13, gridBagConstraints);

    jLabel15.setText("Donar Item");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel15, gridBagConstraints);

    jComboBox5.setMinimumSize(new java.awt.Dimension(50, 19));
    jComboBox5.setPreferredSize(new java.awt.Dimension(50, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jComboBox5, gridBagConstraints);

    jLabel16.setText("[]");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(jLabel16, gridBagConstraints);

    jLabel17.setText("Donor Code");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel17, gridBagConstraints);

    jComboBox6.setMinimumSize(new java.awt.Dimension(40, 19));
    jComboBox6.setPreferredSize(new java.awt.Dimension(40, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jComboBox6, gridBagConstraints);

    jLabel18.setText("[]");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(jLabel18, gridBagConstraints);

    jLabel19.setText("Total Expenses");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel19, gridBagConstraints);

    jTextField9.setEditable(false);
    jTextField9.setFont(new java.awt.Font("Tahoma", 1, 11));
    jTextField9.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField9.setText("0.00");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    getContentPane().add(jTextField9, gridBagConstraints);

    jLabel20.setText("Vote Amount");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel20, gridBagConstraints);

    jTextField10.setEditable(false);
    jTextField10.setFont(new java.awt.Font("Tahoma", 1, 11));
    jTextField10.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField10.setText("0.00");
    jTextField10.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField10CaretUpdate(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    getContentPane().add(jTextField10, gridBagConstraints);

    jLabel21.setText("Sub Item");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel21, gridBagConstraints);

    jComboBox7.setMinimumSize(new java.awt.Dimension(80, 19));
    jComboBox7.setPreferredSize(new java.awt.Dimension(80, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jComboBox7, gridBagConstraints);

    jLabel22.setText("[]");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(jLabel22, gridBagConstraints);

    jLabel23.setText("[]");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel23, gridBagConstraints);

    jTextField11.setEditable(false);
    jTextField11.setFont(new java.awt.Font("Tahoma", 1, 11));
    jTextField11.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    jTextField11.setText("0.00");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    getContentPane().add(jTextField11, gridBagConstraints);

    jLabel24.setText("Amt To Pay");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    getContentPane().add(jLabel24, gridBagConstraints);

    jPanel2.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
    jPanel2.setLayout(new java.awt.GridBagLayout());

    jLabel25.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
    jPanel2.add(jLabel25, gridBagConstraints);

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel4.setLayout(new java.awt.GridBagLayout());

    jTextField12.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jTextField12, gridBagConstraints);

    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton.setToolTipText("Search");
    searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel4.add(searchButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jPanel4, gridBagConstraints);

    jLabel26.setText("Date Commited");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
    jPanel2.add(jLabel26, gridBagConstraints);

    jTextField2.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel2.add(jTextField2, gridBagConstraints);

    jLabel27.setText("Period To");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
    jPanel2.add(jLabel27, gridBagConstraints);

    jLabel28.setText("Period From");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
    jPanel2.add(jLabel28, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(datePicker1, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel2.add(datePicker2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jPanel2, gridBagConstraints);

    setBounds(0, 0, 790, 436);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        // jComboBox1.setSelectedItem(null);
        //  jTextField1.setText("");
        // this.jTextField11.setText("");// Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        /*     int i = jTable1.getSelectedRow();
        java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();
        
        try {
        java.sql.Statement pstmt = connectDB.createStatement();
        java.sql.ResultSet rs = pstmt.executeQuery("select item_code from stock_item where description = '"+cmbox2.getSelectedItem()+"'");
        while (rs.next())
        jTable1.setValueAt(rs.getObject(1),i,1);
        
        } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
        }*/
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());

        String subvote = null;
        String vbclass = null;
        String user = null;
        String vouchNo = "";
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.ResultSet rse121 = stm121.executeQuery("SELECT subvote FROM heads WHERE  vote ='" + jComboBox1.getSelectedItem() + "' AND head = '" + jComboBox2.getSelectedItem() + "'");
            while (rse121.next()) {

                subvote = rse121.getObject(1).toString();
            }

           /* java.sql.Statement ps22 = connectDB.createStatement();
            java.sql.ResultSet rs22 = ps22.executeQuery("select 'VC'||lpad(nextval('voucher_no_seq')::text,5,0::text)");
            while (rs22.next()) {
                vouchNo = rs22.getObject(1).toString();
            }*/

            java.sql.Statement stm = connectDB.createStatement();
            java.sql.ResultSet rse = stm.executeQuery("SELECT class FROM vb_class WHERE  classname ILIKE '" + jComboBox4.getSelectedItem() + "'");
            while (rse.next()) {

                vbclass = rse.getObject(1).toString();
            }

            java.sql.Statement st = connectDB.createStatement();
            java.sql.ResultSet rs = st.executeQuery("SELECT CURRENT_USER");
            while (rs.next()) {


                user = rs.getObject(1).toString();

            }
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if ((jTable1.getModel().getValueAt(i, 6) != null)) {


                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO ac_aie_commitment("
                            + "v_class, vote, subvote, head, subhead, subitem, supplier, "
                            + "reftype, refno, reversedon, allocated_amount, paid_amount, comtype, "
                            + "donorcode, donoritem, reversedby, aie_no,clearedon, cleared, commitno, voucher_no,reversefor)"
                            + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"
                            + "?, ?, ?, ?, ?, ?, ?, ?, ?)");
                    pstmt2.setObject(1, vbclass);
                    // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                    pstmt2.setObject(2, jComboBox1.getSelectedItem());
                    pstmt2.setObject(3, subvote);
                    pstmt2.setObject(4, jComboBox2.getSelectedItem());
                    pstmt2.setObject(5, jComboBox3.getSelectedItem());
                    pstmt2.setObject(6, jComboBox7.getSelectedItem());
                    pstmt2.setObject(7, jTextField12.getText());
                    pstmt2.setObject(8, jTable1.getValueAt(i, 3));
                    pstmt2.setObject(9, jTable1.getValueAt(i, 1));
                    pstmt2.setTimestamp(10, java.sql.Timestamp.valueOf(jTextField2.getText()));
                    pstmt2.setDouble(12, java.lang.Double.valueOf(jTable1.getValueAt(i, 7).toString()));
                    pstmt2.setDouble(11, 0.00);
                    if (jTable1.getValueAt(i, 4).toString().startsWith("S")) {
                        pstmt2.setObject(13, "S");
                    } else {
                        pstmt2.setObject(13, "M");
                    }
                    pstmt2.setObject(14, jComboBox6.getSelectedItem());
                    pstmt2.setObject(15, jComboBox5.getSelectedItem());
                    pstmt2.setObject(16, user);
                    pstmt2.setObject(17, jTextField1.getText().toUpperCase());
                    pstmt2.setTimestamp(18, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                    pstmt2.setObject(19, "1");
                    pstmt2.setObject(20, jTable1.getValueAt(i, 5));
                    pstmt2.setString(21, vouchNo);
                    pstmt2.setObject(22, jTable1.getValueAt(i, 2));
                    pstmt2.executeUpdate();

                }

            }

            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }

            // crset4.execute();
        } catch (java.sql.SQLException sq) {
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    private void cmbox13MouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog3.setSize(700, 200);
        jSearchDialog3.setLocation(point);
        jSearchDialog3.setVisible(true);


    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        //if (jTable1.getValueAt(jTable1.getSelectedRow(), 6)){
        {
            if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 7) == null) {
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 7);
                jTextField11.setText(java.lang.String.valueOf(totalSum));
                double aieBal = java.lang.Double.valueOf(jTextField5.getText());
            }
        }
        // }
        /*
        double aie = java.lang.Double.valueOf(jTextField6.getText());
        if (aie < 1) {
        javax.swing.JOptionPane.showMessageDialog(this, "You must input AIE amount before you proceed", "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);
        
        } else {
        String questmark = "?";
        // if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 2) == null && !(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString().equalsIgnoreCase(questmark))) {
        if (jTable1.getModel().isCellEditable(jTable1.getSelectedRow(), 0)) {
        if (jTable1.getModel().isCellEditable(jTable1.getSelectedRow(), 0) && !(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString().equalsIgnoreCase(questmark))) {
        try {
        java.sql.Statement pstmtx = connectDB.createStatement();
        // java.sql.ResultSet rs1x = pstmtx.executeQuery("SELECT product_id,product, strength,round(selling_price, 0) as selling_price, units FROM stockprices WHERE product_id ILIKE '" + jTable13.getValueAt(jTable13.getSelectedRow(), 0) + "'");
        java.sql.ResultSet rs1x = pstmtx.executeQuery("SELECT supplier_name FROM st_suppliers WHERE code ILIKE '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
        
        while (rs1x.next()) {
        jTable1.setValueAt(rs1x.getObject(1), jTable1.getSelectedRow(), 1);
        
        }
        
        // if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1) == null){
        
        //}else{
        jTable1.editCellAt(jTable1.getSelectedRow(), 4);
        //}
        } catch (java.sql.SQLException sq) {
        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        
        System.out.println(sq.getMessage());
        
        }
        
        //jTable13.getCellEditor(jTable13.getSelectedRow(), 2);
        //}
        } else {
        
        this.cmbox13MouseClicked();
        }
         */
        // }
        //  }
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased

    private void jTextField6CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField6CaretUpdate
        /*        try {
        java.sql.Statement pstmtx = connectDB.createStatement();
        // java.sql.ResultSet rs1x = pstmtx.executeQuery("SELECT product_id,product, strength,round(selling_price, 0) as selling_price, units FROM stockprices WHERE product_id ILIKE '" + jTable13.getValueAt(jTable13.getSelectedRow(), 0) + "'");
        java.sql.ResultSet rs1x = pstmtx.executeQuery("SELECT SUM(amount) FROM ac_aie_allocation WHERE aieno ILIKE '" + jTextField1.getText() + "'");
        
        while (rs1x.next()) {
        if (rs1x.getDouble(1) < 1 || rs1x.getObject(1) == null) {
        jTextField7.setText("0.00");
        } else {
        jTextField7.setText(rs1x.getString(1));
        }
        
        }
        
        } catch (java.sql.SQLException sq) {
        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        
        System.out.println(sq.getMessage());
        
        }
        //        double aieamt = java.lang.Double.valueOf(jTextField6.getText());
        //    double aiealoc = java.lang.Double.valueOf(jTextField7.getText());
        //   double aieBal = aieamt - aiealoc;
        //  jTextField4.setText(java.lang.String.valueOf(aieBal));
        // TODO add your handling code here:
         *
         */
    }//GEN-LAST:event_jTextField6CaretUpdate

    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        if (jTextField114.getCaretPosition() > 1) {
            jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT code,supplier_name FROM st_suppliers WHERE supplier_name ILIKE '%" + jTextField114.getText() + "%'"));

            jSearchScrollPane3.setViewportView(jSearchTable3);
            System.out.println("Cannot sort out");

        }// Add your handling code here:
}//GEN-LAST:event_jTextField114CaretUpdate

    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        this.jTextField114.setText("");
        jTable1.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 1), jTable1.getSelectedRow(), 1);



        jSearchDialog3.dispose();


        // Add your handling code here:
}//GEN-LAST:event_jSearchTable3MouseClicked

    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        this.jSearchDialog3.dispose();        // Add your handling code here:
}//GEN-LAST:event_jButton92ActionPerformed

    private void jTextField10CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField10CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
}//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField12.getLocationOnScreen();

        jSearchDialog2.setSize(600, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);
    }
    private void jTextField113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField113ActionPerformed
        // Add your handling code here:
}//GEN-LAST:event_jTextField113ActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (this.jTextField113.getCaretPosition() < 3) {
            System.out.print("Nothing");
        } else {

            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT refno AS reference_no,supplier,committedon::TIMESTAMP AS date,aie_no FROM ac_aie_commitment WHERE supplier ILIKE '" + jTextField113.getText() + "%' ORDER BY 1"));


            jSearchScrollPane2.setViewportView(jSearchTable2);
            System.out.println("Cannot sort out");

        } // Add your handling code here:
}//GEN-LAST:event_jTextField113CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked

        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
        jTextField12.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        //  jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT invoice_no,date as date,sum(credit-debit) as amount,0::numeric as Amt_paid, null::boolean as approve FROM ac_accounts_payable WHERE dealer ILIKE '"+jTextField9.getText()+"' AND paid = false AND approved = false AND date BETWEEN '"+jXDatePicker1.getDate()+"' AND '"+jXDatePicker2.getDate()+"' AND (transaction_type = 'INV' OR transaction_type = 'Raise Invoice' OR transaction_type = 'Stock Delivery') GROUP BY invoice_no,date,approved ORDER BY date"));


        try {
            java.sql.Statement stmtTable1x = connectDB.createStatement();

            java.sql.ResultSet rsetTable1x = stmtTable1x.executeQuery("SELECT DISTINCT v_class, vote, "
                    + " subvote, head, subhead, subitem, commitno,"
                    + " donorcode, donoritem, aie_no FROM ac_aie_commitment"
                    + " WHERE supplier = '" + jTextField12.getText() + "' AND aie_no = '" + jTextField1.getText() + "'");

            while (rsetTable1x.next()) {
                jLabel23.setText(rsetTable1x.getString(1));
                jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{rsetTable1x.getString(2)}));
                jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[]{rsetTable1x.getString(4)}));
                jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[]{rsetTable1x.getString(5)}));
                jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[]{rsetTable1x.getString(6)}));
                jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[]{rsetTable1x.getString(8)}));
                jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[]{rsetTable1x.getString(9)}));
                jTextField1.setText(rsetTable1x.getString(10));

            }

            jTextField6.setText("0.00");
            jTextField10.setText("0.00");
            jTextField7.setText("0.00");
            jTextField4.setText("0.00");
            jTextField9.setText("0.00");
            jTextField5.setText("0.00");
            jTextField11.setText("0.00");
//            jTextField8.setText("0.00");
            double expenses = 0.00;
            double commitamt = 0.00;
            double paidamt = 0.00;
            double balance = 0.00;
            double aieamt = 0.00;

            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT donor_name FROM donor_details "
                    + "WHERE donor_code = '" + jComboBox6.getSelectedItem() + "' AND votes = '" + jComboBox1.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel16.setText("[ " + rs.getString(1) + " ]");
                jLabel16.setForeground(Color.BLACK);
            }

            java.sql.Statement pstmts = connectDB.createStatement();
            java.sql.ResultSet rss = pstmts.executeQuery("SELECT DISTINCT aieno FROM ac_aie_allocation WHERE "
                    + "subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + "AND head = '" + jComboBox2.getSelectedItem() + "' AND subitem = '" + jComboBox7.getSelectedItem() + "' AND "
                    + "donorcode = '" + jComboBox6.getSelectedItem() + "' AND donoritem = '" + jComboBox5.getSelectedItem() + "'");
            while (rss.next()) {
                jTextField1.setText(rss.getString(1));
            }

            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rs1 = ps.executeQuery("SELECT DISTINCT SUM(amount) FROM ac_aie_allocation WHERE "
                    + "aieno = '" + jTextField1.getText() + "'");
            while (rs1.next()) {
                jTextField6.setText(rs1.getString(1));
            }


            java.sql.Statement pstmtsa1 = connectDB.createStatement();
            java.sql.ResultSet rssa2 = pstmtsa1.executeQuery("SELECT DISTINCT SUM(amount) FROM ac_aie_allocation WHERE "
                    + " subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + " AND head = '" + jComboBox2.getSelectedItem() + "' AND subitem = '" + jComboBox7.getSelectedItem() + "' "
                    + " AND donorcode = '" + jComboBox6.getSelectedItem() + "' AND donoritem = '" + jComboBox5.getSelectedItem() + "'"
                    + " AND aieno = '" + jTextField1.getText() + "'");
            while (rssa2.next()) {
                jTextField10.setText(rssa2.getString(1));
                aieamt = rssa2.getDouble(1);
            }
            java.sql.Statement pstmtsa = connectDB.createStatement();
            java.sql.ResultSet rssa = pstmtsa.executeQuery("SELECT DISTINCT SUM(allocated_amount-paid_amount) FROM ac_aie_commitment WHERE "
                    + " subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + " AND head = '" + jComboBox2.getSelectedItem() + "' AND subitem = '" + jComboBox7.getSelectedItem() + "' "
                    + " AND donorcode = '" + jComboBox6.getSelectedItem() + "' AND donoritem = '" + jComboBox5.getSelectedItem() + "'"
                    + " AND aie_no = '" + jTextField1.getText() + "' ");
            while (rssa.next()) {
                jTextField7.setText(rssa.getString(1));
                commitamt = rssa.getDouble(1);
            }

            java.sql.Statement pstm = connectDB.createStatement();
            java.sql.ResultSet rssa1 = pstm.executeQuery("SELECT DISTINCT SUM(paid_amount) FROM ac_aie_commitment WHERE "
                    + " subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + " AND head = '" + jComboBox2.getSelectedItem() + "' AND subitem = '" + jComboBox7.getSelectedItem() + "' "
                    + " AND donorcode = '" + jComboBox6.getSelectedItem() + "' AND donoritem = '" + jComboBox5.getSelectedItem() + "'"
                    + " AND aie_no = '" + jTextField1.getText() + "'");
            while (rssa1.next()) {
                jTextField4.setText(rssa1.getString(1));
                paidamt = rssa1.getDouble(1);
            }
            expenses = commitamt + paidamt;
            balance = aieamt - expenses;
            jTextField9.setText(java.lang.String.valueOf(expenses));
            jTextField5.setText(java.lang.String.valueOf(balance));
            pstmt.close();
            rs.close();
            pstmts.close();
            rss.close();
            ps.close();
            rs1.close();
            pstmtsa.close();
            rssa.close();
            pstmtsa1.close();
            rssa2.close();
            pstm.close();
            rssa1.close();

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }
        populateTable1(jTextField12.getText());

        this.jSearchDialog2.dispose();


        // Add your handling code here:
}//GEN-LAST:event_jSearchTable2MouseClicked
    private void populateTable1(java.lang.String inv_no) {

        int i = 0;
        int j = 0;
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT classname FROM vb_class WHERE class = '" + jLabel23.getText() + "'");
            while (rs.next()) {
                jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[]{rs.getString(1)}));
            }
            java.sql.Statement pstmt1 = connectDB.createStatement();
            java.sql.ResultSet rs1 = pstmt1.executeQuery("SELECT votename FROM votes WHERE vote = '" + jComboBox1.getSelectedItem() + "'");
            while (rs1.next()) {
                jLabel10.setText("[ " + rs1.getString(1) + " ]");
                jLabel10.setForeground(Color.BLACK);
            }
            java.sql.Statement pstmt2 = connectDB.createStatement();
            java.sql.ResultSet rs2 = pstmt2.executeQuery("SELECT headname FROM heads WHERE head = '" + jComboBox2.getSelectedItem() + "'");
            while (rs2.next()) {
                jLabel11.setText("[ " + rs2.getString(1) + " ]");
                jLabel11.setForeground(Color.BLACK);
            }
            java.sql.Statement pstmt3 = connectDB.createStatement();
            java.sql.ResultSet rs3 = pstmt3.executeQuery("SELECT subheadname FROM subheads WHERE subhead = '" + jComboBox3.getSelectedItem() + "'");
            while (rs3.next()) {
                jLabel12.setText("[ " + rs3.getString(1) + " ]");
                jLabel12.setForeground(Color.BLACK);
            }

            java.sql.Statement pstmt4 = connectDB.createStatement();
            java.sql.ResultSet rs4 = pstmt4.executeQuery("SELECT subitemname FROM subitems WHERE subitem = '" + jComboBox7.getSelectedItem() + "'");
            while (rs4.next()) {
                jLabel22.setText("[ " + rs4.getString(1) + " ]");
                jLabel22.setForeground(Color.BLACK);
            }

            java.sql.Statement pstmt5 = connectDB.createStatement();
            java.sql.ResultSet rs5 = pstmt5.executeQuery("SELECT donorname FROM vb_donors WHERE donor_code = '" + jComboBox6.getSelectedItem() + "'");
            while (rs5.next()) {
                jLabel18.setText("[ " + rs5.getString(1) + " ]");
                jLabel18.setForeground(Color.BLACK);
            }

            java.sql.Statement pstmt6 = connectDB.createStatement();
            java.sql.ResultSet rs6 = pstmt6.executeQuery("SELECT donor_name FROM donor_details "
                    + "WHERE donor_code = '" + jComboBox6.getSelectedItem() + "' AND votes = '" + jComboBox1.getSelectedItem() + "'");
            while (rs6.next()) {
                jLabel16.setText("[ " + rs6.getString(1) + " ]");
                jLabel16.setForeground(Color.BLACK);
            }
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            java.sql.Statement stmtTable1x = connectDB.createStatement();

            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT refno,reftype,comtype,commitno,SUM(allocated_amount-paid_amount),false::boolean FROM ac_aie_commitment WHERE supplier ILIKE '" + inv_no + "' AND aie_no = '" + jTextField1.getText() + "' GROUP BY 1,2,3,4 HAVING SUM(allocated_amount-paid_amount) > 0");

            while (rsetTable1.next()) {

                java.sql.ResultSet rsetTable1x = stmtTable1x.executeQuery("SELECT code FROM st_suppliers WHERE supplier_name ILIKE '" + inv_no + "'");

                while (rsetTable1x.next()) {


                    System.out.println("Working at table row " + i);
                    jTable1.setValueAt(rsetTable1x.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 4);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 5);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 6);
                    jTable1.setValueAt(rsetTable1.getObject(6), i, 8);

                    i++;
                }
            }

            //   if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 5) != null) {

            /* if (totalSum <= aieBal) {
            jTextField8.setText(java.lang.String.valueOf(aieBal - totalSum));
            
            /* } else {
            double bal = totalSum - aieBal;
            javax.swing.JOptionPane.showMessageDialog(this, "You cannot commit more than vote Balance the commitment is more by '" + bal + "'", "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);
            jTable1.setValueAt(0, jTable1.getSelectedRow(), 5);
            }
            }*/
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }


    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
}//GEN-LAST:event_jButton52ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        double floatCol21 = 0.00;
        //if (jTable1.getSelectedColumn() == 5) {
        if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 8).toString()) == java.lang.Boolean.TRUE) {
            floatCol21 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());


            // if (jTable1.getValueAt(jTable1.getSelectedRow(), 5) != null) {
            if (jTable1.getValueAt(jTable1.getSelectedRow(), 8) != null) {
                jTable1.setValueAt(new java.lang.Float(floatCol21), jTable1.getSelectedRow(), 7);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 7);
                jTextField11.setText(java.lang.String.valueOf(totalSum));
                double aieBal = java.lang.Double.valueOf(jTextField5.getText());

            }

        } else {
            if (Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 8).toString()) == java.lang.Boolean.FALSE) {

                if (jTable1.getValueAt(jTable1.getSelectedRow(), 8) != null) {
                    floatCol21 = 0.00;
                    // double calcVat = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());

                    jTable1.setValueAt(new java.lang.Float(floatCol21), jTable1.getSelectedRow(), 7);
                    /* double totalVat = 0.00;
                    jTable1.setValueAt(new java.lang.Float(floatCol21), jTable1.getSelectedRow(), 4);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 4);
                    double calcVat = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
                    if (calcVat == 0) {
                    calcVat = 0.00;
                    } else {
                    totalVat = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 6);
                    }
                    this.jTextField12.setText(java.lang.String.valueOf(totalSum));
                    this.jTextField10.setText(java.lang.String.valueOf(totalVat));
                     */
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 7);
                    jTextField11.setText(java.lang.String.valueOf(totalSum));
                    double aieBal = java.lang.Double.valueOf(jTextField5.getText());

                }
            }
            // }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {

        double totals = java.lang.Double.parseDouble(jTextField7.getText());
        ;

        int i = 0;

        for (int j = 0; j < jTable1.getRowCount(); j++) {

            System.out.println(jTable1.getModel().getValueAt(j, 8).toString());

            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 8).toString()) == java.lang.Boolean.FALSE) {

                totals = totals - Double.parseDouble(jTable1.getModel().getValueAt(j, 6).toString());

                i++;
            }
        }

        jTextField7.setText(Double.toString(totals));

        // jTextField2.setText(Integer.toString(i));

        System.out.println(totals);

        System.out.println(i);

        System.out.println("This table has changed");

    }

    /* public void run() {
    
    while (getList) {
    
    runGetListThread();
    
    try {
    
    Thread.currentThread().sleep(30000);
    
    } catch (java.lang.InterruptedException IntExec) {
    
    javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(), "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
    
    }
    
    // getList = false;
    
    }
    
    }
    
    public void runGetListThread() {
    
    int j = 0;
    int i = 0;
    int n = 0;
    
    
    float debit = 0;
    float credit = 0;
    float total = 0;
    float balance = 0;
    float bd = 0;
    int x = 0;
    int b = 0;
    try {
    java.sql.Statement stmt = connectDB.createStatement();
    java.sql.ResultSet rset = stmt.executeQuery("select sum(debit-credit) from ac_petty_cash");
    while (rset.next()) {
    
    //                jTextField1.setText(rset.getObject(1).toString());
    balance = rset.getFloat(1);
    }
    
    java.sql.Statement stmts = connectDB.createStatement();
    java.sql.ResultSet rsets = stmts.executeQuery("select count(purpose) from ac_petty_cash_requisition where approved = true AND paid = false and status ilike 'reim%'");
    while (rsets.next()) {
    x = rsets.getInt(1);
    
    }
    
    if (x > 0) {
    java.sql.Statement stmta = connectDB.createStatement();
    java.sql.ResultSet rseta = stmta.executeQuery("select sum(credit) from ac_petty_cash_requisition where approved = true AND paid = false and status ilike 'reim%'");
    while (rseta.next()) {
    
    jTextField4.setText(rseta.getObject(1).toString());
    debit = rseta.getFloat(1);
    // jTextField11.setText(rset.getObject(3).toString());
    }
    } else {
    jTextField4.setText("0.00");
    debit = 0;
    }
    
    java.sql.Statement stmts1 = connectDB.createStatement();
    java.sql.ResultSet rsets1 = stmts1.executeQuery("select count(purpose) from ac_petty_cash_requisition where approved = true AND paid = false and status ilike 'adva%'");
    while (rsets1.next()) {
    b = rsets1.getInt(1);
    
    }
    
    if (b > 0) {
    java.sql.Statement stmt1 = connectDB.createStatement();
    java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(credit) from ac_petty_cash_requisition where approved = true AND paid = false and status ilike 'adva%'");
    while (rset1.next()) {
    
    jTextField5.setText(rset1.getObject(1).toString());
    credit = rset1.getFloat(1);
    }
    } else {
    jTextField5.setText("0.00");
    credit = 0;
    }
    
    total = debit + credit;
    bd = balance - total;
    jTextField6.setText("" + total + "");
    
    jTextField7.setText("" + bd + "");
    
    /* java.sql.Statement stmt2 = connectDB.createStatement();
    java.sql.ResultSet rset2 = stmt2.executeQuery("select sum(debit - credit) from ac_petty_cash");
    while (rset2.next()){
    
    jTextField7.setText(rset2.getObject(1).toString());
    
    }
     *
    } catch (java.sql.SQLException sqe) {
    sqe.printStackTrace();
    //  System.out.println("Insert not successful");
    }
    jButton31 = new javax.swing.JButton();
    
    /*  crset1.setCommand("select sum(debit) as amount from  ac_petty_cash");
    crset1.setConnectionSource(pConnDB);
    crset4.setCommand("");
    crset4.setConnectionSource(pConnDB);
    
     *
    try {
    
    for (int k = 0; k < jTable1.getRowCount(); k++) {
    for (int r = 0; r < jTable1.getColumnCount(); r++) {
    jTable1.getModel().setValueAt(null, k, r);
    }
    }
    
    
    
    java.sql.Statement stmtTable1 = connectDB.createStatement();
    
    java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select requisition_no,department,requisitioner,payee,reason,date_required,credit as amount,status,approved::boolean from ac_petty_cash_requisition WHERE approved = false ORDER BY date_required");
    
    
    while (rsetTable1.next()) {
    
    ///jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
    //jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
    //jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
    
    i++;
    
    }
    
    } catch (java.sql.SQLException sqlExec) {
    
    sqlExec.printStackTrace();
    
    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
    
    }
    
    
    
    }*/
    /*try {
    crset4.setCommand("select requisition_no,department,requisitioner,payee,reason,date_required,credit as amount,status,approved::boolean from ac_petty_cash_requisition WHERE approved = false");
    crset4.setConnectionSource(pConnDB);
    
    crset4.execute();
    
    // crset2.setExecuteOnLoad(true);
    jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset4, new org.netbeans.lib.sql.models.TableModel.Column[] {
    new org.netbeans.lib.sql.models.TableModel.Column("requisition_no", "Req. No.", false),
    new org.netbeans.lib.sql.models.TableModel.Column("department", "Department", false),
    new org.netbeans.lib.sql.models.TableModel.Column("requisitioner", "Requisitioner", false),
    new org.netbeans.lib.sql.models.TableModel.Column("payee", "Payee", false),
    new org.netbeans.lib.sql.models.TableModel.Column("reason", "Purpose", false),
    new org.netbeans.lib.sql.models.TableModel.Column("date_required", "Date Required", false),
    new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount", true),
    new org.netbeans.lib.sql.models.TableModel.Column("status", "Status", false),
    new org.netbeans.lib.sql.models.TableModel.Column("approved", "Approve?", true)
    
    }));
    
    jScrollPane1.setViewportView(jTable1);
    // }
    // }
    
    } catch(java.sql.SQLException sqlex){
    javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
    
    System.out.println(sqlex.getMessage());
    
    }
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton31;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton92;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
