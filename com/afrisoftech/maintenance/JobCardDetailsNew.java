/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.maintenance;

/**
 *
 * @author maina
 */
public class JobCardDetailsNew extends javax.swing.JInternalFrame {

    private org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB=null;
    private java.sql.Connection connectDB=null;
    private javax.swing.JDesktopPane desktopPane=null;
    
    private String userName=null;
    private String sectionAllocated=null;
    /**
     * Creates new form JobCardDetailsNew
     */
    public JobCardDetailsNew( java.sql.Connection conn, org.netbeans.lib.sql.pool.PooledConnectionSource pConn,javax.swing.JDesktopPane desktopP) {
        
        pConnDB=pConn;
        connectDB=conn;
        desktopPane=desktopP;
        
        try{
            java.sql.Statement userStat=connectDB.createStatement();
            java.sql.ResultSet userSet=userStat.executeQuery("SELECT current_user");
            
            while(userSet.next()){
                userName=userSet.getString(1);
            }
            
            System.err.println("username = "+userName);
            
            java.sql.Statement sectStat=connectDB.createStatement();
            java.sql.ResultSet sectSet=userStat.executeQuery("SELECT section FROM  maintenance.section_allocation WHERE user_name='"+userName+"' ORDER BY row_id DESC LIMIT 1");
            
            while(sectSet.next()){
                sectionAllocated=sectSet.getString(1);
            }
            
            System.err.println("section = "+sectionAllocated);
            
        }catch(java.sql.SQLException sqle){
            sqle.printStackTrace();
        }
        
        if(!(sectionAllocated==null)){
            initComponents();
        }else{
            javax.swing.JOptionPane.showMessageDialog(this, "Please ensure your username has been registered under at least one Maintenance Section",
                    "Unauthorized Access Attempt!",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        deptRadiosbuttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        deptjTextField = new javax.swing.JTextField();
        floorjTextField = new javax.swing.JTextField();
        subjectjTextField = new javax.swing.JTextField();
        buildingjTextField = new javax.swing.JTextField();
        roomjTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        officialNamesjTextField = new javax.swing.JTextField();
        durationjTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descjTextArea = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jobCardTextField = new javax.swing.JTextField();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(20, 67), new java.awt.Dimension(32767, 32767));
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jobCardjTable = new javax.swing.JTable();
        jobCardSearchjTextField = new javax.swing.JTextField();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jLabel10 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        buttonjPanel = new javax.swing.JPanel();
        clearjButton = new javax.swing.JButton();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        assignjButton = new javax.swing.JButton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Job Card Details - "+sectionAllocated);
        setMaximumSize(new java.awt.Dimension(1000, 900));
        setMinimumSize(new java.awt.Dimension(450, 400));
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Job Card - Assign Officer"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Floor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Subject");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);

        jLabel5.setText("Building");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Room");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel6, gridBagConstraints);

        jLabel8.setText("E1 Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel8, gridBagConstraints);

        deptjTextField.setEditable(false);
        deptjTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(deptjTextField, gridBagConstraints);

        floorjTextField.setEditable(false);
        floorjTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(floorjTextField, gridBagConstraints);

        subjectjTextField.setEditable(false);
        subjectjTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(subjectjTextField, gridBagConstraints);

        buildingjTextField.setEditable(false);
        buildingjTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(buildingjTextField, gridBagConstraints);

        roomjTextField.setEditable(false);
        roomjTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(roomjTextField, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Officer's Name(s)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel7.setForeground(java.awt.Color.red);
        jLabel7.setText("Expected Duration");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel7, gridBagConstraints);

        officialNamesjTextField.setColumns(10);
        officialNamesjTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(officialNamesjTextField, gridBagConstraints);

        durationjTextField.setColumns(10);
        durationjTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(durationjTextField, gridBagConstraints);

        descjTextArea.setEditable(false);
        descjTextArea.setColumns(20);
        descjTextArea.setRows(5);
        jScrollPane1.setViewportView(descjTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jLabel9.setText("Job Card No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel3.add(jLabel9, gridBagConstraints);

        jobCardTextField.setEditable(false);
        jobCardTextField.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jobCardTextField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 51)));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jobCardjTable = new com.afrisoftech.dbadmin.JTable();
        jobCardjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jobCardjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null},
                {null,null,null,null,null,null,null}

            },

            new String[] {"Job Card ID","Department","Floor","Room","Subject","Official's Name"}

        )
    );

    //the table's model will only populate when the E1 has been approved AND when it has been registered.

    //jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, SELECT (SELECT job_card_no FROM maintenance.job_card_details WHERE e1_id='E14'),e1_id,department,floor,room,subject,(SELECT officers_assigned FROM maintenance.job_card_details WHERE e1_id='E14') FROM maintenance.e1_details
        //where e1_id='E14'
        //AND e1_id IN (SELECT e1_id FROM maintenance.e1_approved)
        //AND e1_id IN (SELECT e1_id FROM maintenance.e1_details WHERE registered='true'));

    jobCardjTable.setModel(jobCardTableDataModel("","","",""));
    jobCardjTable.getTableHeader().setReorderingAllowed(false);
    javax.swing.JTextField noCellEdit=new javax.swing.JTextField();
    noCellEdit.setEditable(false);

    for(int c=0;c<jobCardjTable.getColumnCount();c++){
        javax.swing.table.TableColumn tc = jobCardjTable.getColumn(jobCardjTable.getColumnName(c));
        tc.setCellEditor(new javax.swing.DefaultCellEditor(noCellEdit));
    }

    //seditor11.setCellEditor(new javax.swing.DefaultCellEditor(cmbox51));
    jobCardjTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jobCardjTableMouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(jobCardjTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 5.0;
    jPanel4.add(jScrollPane2, gridBagConstraints);

    jobCardSearchjTextField.setColumns(30);
    jobCardSearchjTextField.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jobCardSearchjTextFieldCaretUpdate(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel4.add(jobCardSearchjTextField, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel4.add(filler2, gridBagConstraints);

    jLabel10.setText("Filter by Job Card No, Dept, Subject or Section Assigned Duty");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    jPanel4.add(jLabel10, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(filler1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 2.0;
    jPanel2.add(jPanel4, gridBagConstraints);

    buttonjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Action Panel"));
    buttonjPanel.setLayout(new java.awt.GridBagLayout());

    clearjButton.setText("Clear Fields/Refresh Table");
    clearjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            clearjButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
    buttonjPanel.add(clearjButton, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weighty = 1.0;
    buttonjPanel.add(filler5, gridBagConstraints);

    assignjButton.setText("Assign Job Card To Officer");
    assignjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            assignjButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
    buttonjPanel.add(assignjButton, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    buttonjPanel.add(filler6, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    jPanel2.add(buttonjPanel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jPanel2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 100;
    gridBagConstraints.ipady = 100;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jPanel1, gridBagConstraints);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jobCardjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jobCardjTableMouseClicked
        // TODO add your handling code here:
        int row=jobCardjTable.getSelectedRow();
        
        
//        javax.swing.table.TableColumn tc=jTable1.getColumn(1);
//        tc.setCellEditor(null);
        jobCardTextField.setText(jobCardjTable.getValueAt(row, 0).toString());
        deptjTextField.setText(jobCardjTable.getValueAt(row, 1).toString());
        
        try{
            java.sql.Statement buildStt=connectDB.createStatement();
            java.sql.ResultSet buildRset=buildStt.executeQuery("SELECT building,description FROM maintenance.e1_details ed "
                                                                                       +"INNER JOIN maintenance.job_card_details jc ON ed.e1_id=jc.e1_id "
                                                                                       +"WHERE ed.e1_id IN (SELECT e1_id FROM maintenance.e1_approved) "
                                                                                        +"AND jc.job_card_no='"+jobCardTextField.getText()+"'");
            while(buildRset.next()){
                buildingjTextField.setText(buildRset.getString(1));
                descjTextArea.setText(buildRset.getString(2));
            }
            
        }
        catch(java.sql.SQLException sqle){
            sqle.printStackTrace();
        }
        
        
        
        floorjTextField.setText(jobCardjTable.getValueAt(row, 2).toString());
        roomjTextField.setText(jobCardjTable.getValueAt(row, 3).toString());
        subjectjTextField.setText(jobCardjTable.getValueAt(row, 4).toString());
        //officialNamesjTextField.setText(jobCardjTable.getValueAt(row, 5).toString());
       
    }//GEN-LAST:event_jobCardjTableMouseClicked

    private void jobCardSearchjTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jobCardSearchjTextFieldCaretUpdate
        // TODO add your handling code here:
        jobCardjTable.setModel(jobCardTableDataModel(jobCardSearchjTextField.getText(),jobCardSearchjTextField.getText(),jobCardSearchjTextField.getText(),jobCardSearchjTextField.getText()));
    }//GEN-LAST:event_jobCardSearchjTextFieldCaretUpdate

    private void clearjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearjButtonActionPerformed
        // TODO add your handling code here:
        jobCardTextField.setText("");
        deptjTextField.setText("");
        buildingjTextField.setText("");
        floorjTextField.setText("");
        roomjTextField.setText("");
        subjectjTextField.setText("");
        descjTextArea.setText("");
        officialNamesjTextField.setText("");
        durationjTextField.setText("");
        jobCardSearchjTextField.setText("");
        
        //refresh job card table
        String s="";
        javax.swing.table.DefaultTableModel dtm=jobCardTableDataModel(s,s,s,s);
        dtm.fireTableDataChanged();
        jobCardjTable.setModel(dtm);
    }//GEN-LAST:event_clearjButtonActionPerformed

    private void assignjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignjButtonActionPerformed
        // TODO add your handling code here:
        if(durationjTextField.getText().length()<2){
            javax.swing.JOptionPane.showMessageDialog(null, "Please specify the expected duration.",
                    "Caution Message!",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }else if (jobCardTextField.getText().length()<3){//it's assumed that clicking the table will populate this field along with all the others
            javax.swing.JOptionPane.showMessageDialog(null, "Please select a job card entry from the table.",
                    "Caution Message!",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }else if(officialNamesjTextField.getText().length()<1){
            javax.swing.JOptionPane.showMessageDialog(null, "Please specify assigned officer's name.",
                    "Caution Message!",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }else{
            try{
                java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                
                java.sql.PreparedStatement withS11Stt=connectDB.prepareStatement("UPDATE maintenance.job_card_details SET with_s11=?,expected_duration=?,time_instructed=?,irq_job_number=?,officers_assigned=? WHERE job_card_no='"+jobCardTextField.getText()+"'");
                withS11Stt.setBoolean(1, false);
                withS11Stt.setString(2, durationjTextField.getText());
                withS11Stt.setObject(3, java.sql.Timestamp.valueOf(sdf.format(new java.util.Date())));
                withS11Stt.setString(4, "N/A");
                withS11Stt.setString(5, officialNamesjTextField.getText());
                withS11Stt.executeUpdate();
            }
            catch(java.sql.SQLException sqle){
                sqle.printStackTrace();
            }
            
            javax.swing.JOptionPane.showMessageDialog(null, "Insert Successful. The report for Job Card No.: "+jobCardTextField.getText()+" will be printed shortly",
                    "Insert Successful!",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            //print job card report
            com.afrisoftech.maintenance.JobCardInterimPdf jcp=new com.afrisoftech.maintenance.JobCardInterimPdf();
            jcp.JobCardPdf(connectDB, jobCardTextField.getText());
        
            
            clearjButton.doClick();
            //clearS11jButton.doClick();
            
        }
    }//GEN-LAST:event_assignjButtonActionPerformed
    
    public javax.swing.table.DefaultTableModel s11TableDataModel(String sectAssigned){
        return com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB," SELECT job_card_no,ed.department,ed.floor,ed.room,ed.subject,section_assigned FROM maintenance.job_card_details jcd "
                                                                                                                                +"INNER JOIN maintenance.e1_details ed ON  jcd.e1_id=ed.e1_id " //JOB CARD MUST HAVE EXISTED AS AN E1 DURING IT'S EARLY STAGES
                                                                                                                                +"WHERE jcd.e1_id IN (SELECT e1_id FROM maintenance.e1_approved) "//THE E1 MUST HAVE BEEN APPROVED IN ORDER TO VIEW AS A JOB CARD
                                                                                                                              //  +"AND jcd.with_s11='true' "//MUST DISPLAY ONLY E1's WITH S11s
                                                                                                                                +"AND jcd.with_s11 IS NOT NULL "//GIVES ANY JOB CARD THE CHANCE TO ORDER BY S11 LATER
                                                                                                                                + "AND jcd.irq_job_number='N/A' "//ONLY DISPLAY JOB CARDS WHILE S11 HAS NOT YET BEEN MADE
                                                                                                                                + "AND jcd.expected_duration IS NOT NULL "//MUST HAVE EXPECTED DURATION
                                                                                                                                + "AND jcd.time_instructed IS NOT NULL "//MUST HAVE TIME WHEN OFFICERS WERE ASSIGNED JOB
                                                                                                                                + "AND jcd.completion_worker_username IS NULL "//USERNAME IS NULL LINES ENSURE TABLE DOSE NOT SHOW JOB CARDS ALREADY PAST THIS STAGE
                                                                                                                                + "AND jcd.completion_sender_username IS NULL "
                                                                                                                                + "AND jcd.completion_maintenance_username IS NULL "
                                                                                                                                + "AND section_assigned ILIKE '"+sectAssigned+"' "
                                                                                                                                +"ORDER BY job_card_no");
    }
    
    public javax.swing.table.DefaultTableModel jobCardTableDataModel(String jobCrd,String dept,String subj,String sectAssgn){
        
        sectAssgn=sectionAllocated;
        //if(jobCrd.equals(null||dept))
        return com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB," SELECT job_card_no, ed.department,ed.floor,ed.room,ed.subject,section_assigned, date_job_card_created FROM maintenance.job_card_details jcd "
                                                                                                                                +"INNER JOIN maintenance.e1_details ed ON  jcd.e1_id=ed.e1_id " //JOB CARD MUST HAVE EXISTED AS AN E1 DURING IT'S EARLY STAGES
                                                                                                                                +"WHERE jcd.e1_id IN (SELECT e1_id FROM maintenance.e1_approved) "//THE E1 MUST HAVE BEEN APPROVED IN ORDER TO VIEW AS A JOB CARD
                                                                                                                                + "AND ed.registered='true' "//E1 MUST HAVE BEEN REGISTERED
                                                                                                                                +"AND jcd.with_s11 IS NULL "//FILTERS OUT ALREADY PROCESSED JOB CARDS
                                                                                                                                +"AND section_assigned ILIKE '"+sectAssgn+"' "
                                                                                                                                + "AND (job_card_no ILIKE '"+jobCrd+"%' "
                                                                                                                                + "OR department ILIKE '%"+dept+"%' "
                                                                                                                                + "OR subject ILIKE '%"+subj+"%' )"
                                                                                                                                +"ORDER BY date_job_card_created");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignjButton;
    private javax.swing.JTextField buildingjTextField;
    private javax.swing.JPanel buttonjPanel;
    private javax.swing.JButton clearjButton;
    private javax.swing.ButtonGroup deptRadiosbuttonGroup;
    private javax.swing.JTextField deptjTextField;
    private javax.swing.JTextArea descjTextArea;
    private javax.swing.JTextField durationjTextField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JTextField floorjTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jobCardSearchjTextField;
    private javax.swing.JTextField jobCardTextField;
    private javax.swing.JTable jobCardjTable;
    private javax.swing.JTextField officialNamesjTextField;
    private javax.swing.JTextField roomjTextField;
    private javax.swing.JTextField subjectjTextField;
    // End of variables declaration//GEN-END:variables
}
