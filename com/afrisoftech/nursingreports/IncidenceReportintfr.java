/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.nursingreports;

import java.sql.Connection;

/**
 *
 * @author saqlever
 */
public class IncidenceReportintfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form IncidenceReportintfr
     */
    private static Connection connectDB;
    private String involves;
    private Object involvesWho;

    public IncidenceReportintfr(java.sql.Connection connDB) {
        connectDB = connDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        detailTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        actionTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        reportedbyTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        witnessTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        departmentComboBox = new javax.swing.JComboBox();
        patientComboBox = new javax.swing.JComboBox();
        patCheckBox = new javax.swing.JCheckBox();
        staffCheckBox = new javax.swing.JCheckBox();
        staffComboBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        victimTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Incidence Reporting");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        detailTextArea.setColumns(20);
        detailTextArea.setRows(5);
        detailTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail Of The INCIDENCE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N
        jScrollPane1.setViewportView(detailTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.9;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        actionTextArea.setColumns(20);
        actionTextArea.setRows(5);
        actionTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Action Taken", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N
        jScrollPane2.setViewportView(actionTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.9;
        getContentPane().add(jScrollPane2, gridBagConstraints);

        reportedbyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Reported By", "Personal NO.", "Unit / Dept", "Tel / Mobile NO", "Date & Time"
            }
        ));
        reportedbyTable.setRowHeight(23);
        jScrollPane3.setViewportView(reportedbyTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(jScrollPane3, gridBagConstraints);

        witnessTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Witnessed by", "Designation/ Relationship", "Personal No / ID NO", "TEL/ MOBILE", "Date & time"
            }
        ));
        witnessTable.setRowHeight(23);
        jScrollPane4.setViewportView(witnessTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(jScrollPane4, gridBagConstraints);

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Reported To", "Designation", "Personal No", "Tel no", "UNIT / DEPT", "Date & Time"
            }
        ));
        reportTable.setRowHeight(23);
        jScrollPane5.setViewportView(reportTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(jScrollPane5, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("DEPARTMENT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        departmentComboBox.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(select '0select-') union   (SELECT distinct Clinics FROM pb_clinics )union (select distinct ward_name  from hp_wards )  ORDER BY 1 asc"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(departmentComboBox, gridBagConstraints);

        patientComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Patient", "Patient-Patient", "Patient-Staff", "Relative / Client", "Other" }));
        patientComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                patientComboBoxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(patientComboBox, gridBagConstraints);

        buttonGroup1.add(patCheckBox);
        patCheckBox.setText("Patient");
        patCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                patCheckBoxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(patCheckBox, gridBagConstraints);

        buttonGroup1.add(staffCheckBox);
        staffCheckBox.setText("Staff");
        staffCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                staffCheckBoxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(staffCheckBox, gridBagConstraints);

        staffComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Staff", "staff-Staff", "Relative / Client", "Other" }));
        staffComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                staffComboBoxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(staffComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        saveButton.setText("Save....");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(saveButton, gridBagConstraints);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 300);
        jPanel2.add(clearButton, gridBagConstraints);

        jLabel1.setText("              ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        victimTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}, {null, null, null, null, null}
            },
            new String [] {
                "Name of Victim", "Personal NO.", "Unit / Dept", "Tel / Mobile NO", "Date & Time"
            }
        ));
        jScrollPane6.setViewportView(victimTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(jScrollPane6, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (departmentComboBox.getSelectedIndex() > 0) {
            if (patCheckBox.isSelected() || staffCheckBox.isSelected()) {
                if (patientComboBox.getSelectedIndex() == 5) {
                    involvesWho = patientComboBox.getSelectedItem();
                } else if (staffComboBox.getSelectedIndex() == 4) {
                    involvesWho = staffComboBox.getSelectedItem();
                }
                try {
                    connectDB.setAutoCommit(false);
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement(
                            "INSERT INTO incidence(\n"
                            + "  invoves, invoveswho,"
                            + " victims, vicperonalno, vicunit, victel, vicdate_time, "
                            + "reportedby, peronalno, unit, tel, date_time,"
                            + " incidence_detail, \n"
                            + " witnessedby, wit_relationship, wit_peronalno,  wit_tel, wit_date_time, "
                            + "actiontaken,"
                            + " reportedto, to_designation, to_peronalno, to_unit, to_tel, to_date_time,  "
                            + "comment, department, \n"
                            + " reportinguser, date)\n"
                            + "    VALUES ( ?, ?, ?, ?, ?, ?, \n"
                            + " ?, ?, ?, ?, ?, ?, ?, \n"
                            + " ?, ?,   ?, ?, \n"
                            + " ?, ?, ?, ?, ?, \n"
                            + " ?, ?, ?, ?,  ?,  current_user, localtimestamp);");
                    pstmt.setObject(1, involves);
                    pstmt.setObject(2, involvesWho);
                    pstmt.setObject(3, victimTable.getValueAt(0, 0) + "-" + victimTable.getValueAt(1, 0));
                    pstmt.setObject(4, victimTable.getValueAt(0, 1) + "-" + victimTable.getValueAt(1, 1));
                    pstmt.setObject(5, victimTable.getValueAt(0, 2) + "-" + victimTable.getValueAt(1, 2));
                    pstmt.setObject(6, victimTable.getValueAt(0, 3) + "-" + victimTable.getValueAt(1, 3));
                    pstmt.setObject(7, victimTable.getValueAt(0, 4) + "-" + victimTable.getValueAt(1, 4));
                    ////victims
                    pstmt.setObject(8, reportedbyTable.getValueAt(0, 0));
                    pstmt.setObject(9, reportedbyTable.getValueAt(0, 1));
                    pstmt.setObject(10, reportedbyTable.getValueAt(0, 2));
                    pstmt.setObject(11, reportedbyTable.getValueAt(0, 3));
                    pstmt.setObject(12, reportedbyTable.getValueAt(0, 4));
                    /////reported by
                    pstmt.setObject(13, detailTextArea.getText());
////witnesss
                    pstmt.setObject(14, witnessTable.getValueAt(0, 0));
                    pstmt.setObject(15, witnessTable.getValueAt(0, 1));
                    pstmt.setObject(16, witnessTable.getValueAt(0, 2));
                    pstmt.setObject(17, witnessTable.getValueAt(0, 3));
                    pstmt.setObject(18, witnessTable.getValueAt(0, 4));

                    pstmt.setObject(19, actionTextArea.getText());
/////reported to
                    pstmt.setObject(20, reportTable.getValueAt(0, 0));
                    pstmt.setObject(21, reportTable.getValueAt(0, 1));
                    pstmt.setObject(22, reportTable.getValueAt(0, 2));
                    pstmt.setObject(23, reportTable.getValueAt(0, 3));
                    pstmt.setObject(24, reportTable.getValueAt(0, 4));
                    pstmt.setObject(25, reportTable.getValueAt(0, 5));
                    pstmt.setObject(26, departmentComboBox.getSelectedItem());

                    connectDB.commit();
                    connectDB.setAutoCommit(true);

                    javax.swing.JOptionPane.showMessageDialog(this, " saved successfully", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } catch (java.sql.SQLException sq) {
                    sq.printStackTrace();
                    System.out.println(" error is " + sq);
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    try {
                        connectDB.rollback();
                    } catch (java.sql.SQLException sql) {
                        javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Please Select Department First", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        com.afrisoftech.lib.ClearTable.clearthisTable(reportTable);
        com.afrisoftech.lib.ClearTable.clearthisTable(reportedbyTable);
        com.afrisoftech.lib.ClearTable.clearthisTable(witnessTable);
        actionTextArea.setText(null);
        detailTextArea.setText(null);
        departmentComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void patCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_patCheckBoxItemStateChanged
        if (patCheckBox.isSelected() == Boolean.TRUE) {
            staffComboBox.setEnabled(false);
            patCheckBox.setEnabled(true);
            involves = patCheckBox.getActionCommand();
        }
    }//GEN-LAST:event_patCheckBoxItemStateChanged

    private void staffCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_staffCheckBoxItemStateChanged
        if (staffCheckBox.isSelected() == Boolean.TRUE) {
            patCheckBox.setEnabled(false);
            staffComboBox.setEnabled(true);
            involves = staffCheckBox.getActionCommand();
        }
    }//GEN-LAST:event_staffCheckBoxItemStateChanged

    private void patientComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_patientComboBoxItemStateChanged
        if (patientComboBox.getSelectedIndex() > 0) {
            if (patientComboBox.getSelectedIndex() == 5) {
                patientComboBox.setEditable(true);

            } else {
                patientComboBox.setEditable(false);
                involvesWho = patientComboBox.getSelectedItem();

            }
        }
    }//GEN-LAST:event_patientComboBoxItemStateChanged

    private void staffComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_staffComboBoxItemStateChanged
        if (staffComboBox.getSelectedIndex() > 0) {

            if (staffComboBox.getSelectedIndex() == 4) {
                staffComboBox.setEditable(true);

            } else {
                staffComboBox.setEditable(false);
                involvesWho = staffComboBox.getSelectedItem();

            }
        }
    }//GEN-LAST:event_staffComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea actionTextArea;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox departmentComboBox;
    private javax.swing.JTextArea detailTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JCheckBox patCheckBox;
    private javax.swing.JComboBox patientComboBox;
    private javax.swing.JTable reportTable;
    private javax.swing.JTable reportedbyTable;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox staffCheckBox;
    private javax.swing.JComboBox staffComboBox;
    private javax.swing.JTable victimTable;
    private javax.swing.JTable witnessTable;
    // End of variables declaration//GEN-END:variables
}
