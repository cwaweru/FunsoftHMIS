/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.laundry;
import java.awt.event.ActionEvent;
import java.beans.PropertyVetoException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author charlie
 */
public class MachineSetup extends javax.swing.JInternalFrame {

    /**
     * Creates new form MachineSetup
     */
    Connection conn;
    List<String> assetTags = new ArrayList<String>();
    String doneLoading="no";
    public MachineSetup(Connection passedConn) {
        setVisible(true);
        conn=passedConn;
        initComponents();
        try {
            machineCbx.removeAllItems();
            String sql="SELECT DISTINCT asset_name, tag_no from public.asset_registration WHERE asset_type ~* 'Plant, mach. and Equip.' "
                    + "AND issued = 'TRUE' AND  location ~*'Laundry' ORDER BY tag_no ASC";
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
ResultSet.CONCUR_UPDATABLE);
            System.out.println("here is the sql = "+ sql);
            ResultSet rs = stmt.executeQuery(sql);
            int counter=0;
           // if(rs.next())
            {
                while ( rs.next() ) {

                  machineCbx.addItem(rs.getString("asset_name"));
                    String tagNo=rs.getString("tag_no");
                    assetTags.add(tagNo);
                     System.out.println("\n here is the tagno= "+ tagNo);
                   
                    Statement stmt2 = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    String sql2 ="select tagNo, maxLoad FROM laundryEquipment WHERE tagNo LIKE '"+tagNo+"'";
                    System.out.println("here is the next sql = "+ sql2);
                    
                    ResultSet rs2 = stmt2.executeQuery(sql2);
                    if(!rs2.first()){
                        Statement stmt3= conn.createStatement();
                        System.out.println("Here is the tagNo - "+tagNo);
                        String sql3 ="INSERT INTO laundryEquipment (tagNo) VALUES ('"+tagNo+"')";
                        stmt3.executeQuery(sql3);
                    }
                     counter++;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MachineSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
            doneLoading="yes";
            ActionEvent event = new ActionEvent(this, 5, "");
           machineCbxActionPerformed(event);
            
           
machineCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(conn, "select DISTINCT asset_name from public.asset_registration "
        + "WHERE asset_type ~* 'Plant, mach. and Equip.' AND issued = 'TRUE' AND  location ~*'Laundry' ORDER by asset_name ASC"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        machineCbx = new javax.swing.JComboBox();
        txtLoad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbxType = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Machine Setup");
        setPreferredSize(new java.awt.Dimension(500, 300));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Machine");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel4, gridBagConstraints);

        machineCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(conn, "SELECT asset_name FROM public.asset_registration WHERE asset_type ~* 'Plant, mach. and Equip.' AND issued = 'TRUE' AND  location ~*'Laundry' ORDER BY asset_name"));
        machineCbx.setPreferredSize(new java.awt.Dimension(200, 20));
        machineCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                machineCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(machineCbx, gridBagConstraints);

        txtLoad.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(txtLoad, gridBagConstraints);

        jLabel7.setText("Kgs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 55, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel6.setText("Optimum Load");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel5.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel5, gridBagConstraints);

        cbxType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Washer", "Drier", "Finisher" }));
        cbxType.setPreferredSize(new java.awt.Dimension(200, 20));
        cbxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(cbxType, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.6;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setMinimumSize(new java.awt.Dimension(137, 33));
        jPanel2.setPreferredSize(new java.awt.Dimension(246, 5));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 59, 6, 0);
        jPanel2.add(saveBtn, gridBagConstraints);

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 6, 60);
        jPanel2.add(cancelBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.4;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void machineCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_machineCbxActionPerformed
        if(machineCbx.getSelectedIndex()>=0&&doneLoading.equals("yes")){
        try {
            String selectedMach=assetTags.get(machineCbx.getSelectedIndex());
            System.out.println("Selected Machine - "+selectedMach);
            Statement stmt2 = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
            ResultSet.CONCUR_UPDATABLE);
            ResultSet rs2 = stmt2.executeQuery( "SELECT DISTINCT maxLoad, type FROM laundryEquipment WHERE tagNo LIKE '"+selectedMach+"'" );
            rs2.next();
            txtLoad.setText(rs2.getString("maxload"));
            cbxType.setSelectedItem(rs2.getString("type"));
        } catch (SQLException ex) {
            Logger.getLogger(MachineSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_machineCbxActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try {
            int load=0;
            if(!txtLoad.getText().equals("")){
                load=Integer.parseInt(txtLoad.getText());
            }
            String type=(String) cbxType.getSelectedItem();
            System.out.println("Selected Type - "+type);
            String sql="UPDATE laundryequipment SET maxload='"+load+"', "
                    + "type='"+type+"' WHERE tagno='"+assetTags.get(machineCbx.getSelectedIndex())+"'";
            System.out.println(sql);
            System.out.println("Machine Selected Index - "+machineCbx.getSelectedIndex());
            System.out.println("Machine Selected TagNo - "+assetTags.get(machineCbx.getSelectedIndex()));
            Statement stmt = conn.createStatement();
            stmt.execute( sql );
            JOptionPane.showMessageDialog(null,"Changes Saved!","Success",JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MachineSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        try {
            setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MachineSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void cbxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTypeActionPerformed

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox cbxType;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox machineCbx;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField txtLoad;
    // End of variables declaration//GEN-END:variables
}
