/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.laundry;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author charlie
 */
public class CondemnedEdit extends javax.swing.JDialog {
    int totalNumRows;
    int totalNumCols;
    Connection conn;
    String[] itemCodes;
    String[] activityCodes;
    String[] issuedTo;
    private Object[][] batch;
    SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");
    SimpleDateFormat sdfForParam = new SimpleDateFormat("MMM d, yyyy");
    String doneLoading="no";
    int selectedRow=0;
    String[] condemnedId;
    String dbDate;
    

    /**
     * Creates new form ConsumablesEdit
     */
    public CondemnedEdit(java.awt.Frame parent, boolean modal, String[] params, Connection passedConn) {
        super(parent, modal);
        conn=passedConn;
        initComponents();
        txtDate.setText(params[0]);
        dbDate=params[1];
        refreshCbx();
        populateTable();
        
        
    }
    
    
    public void refreshCbx(){
        cbxItem.removeAllItems();
        try {
            String tarehe=dbDate;
            String sql="select description, item_code, buying_price from st_stock_item where sub_cat_code like 'LINEN' and item_code in (select itemcode from condemnedlinen where datefor like '"+tarehe+"' ) order by st_stock_item.description asc";
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery( sql );
            rs.last();
            itemCodes=new String[rs.getRow()];
            rs.beforeFirst();
            int r=0;
            while(rs.next()){
                cbxItem.addItem(rs.getString("description"));
                itemCodes[r]=rs.getString("item_code");
                r++;
            }
            

        } catch (SQLException ex) {
            Logger.getLogger(CondemnedLinenEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void populateTable(){
        batch = new Object[0][4];
        RefreshClientsTable();
        try {
            //here
            String sql="select st_stock_item.item_code, st_stock_item.description, st_stock_item.buying_price, condemnedlinen.qty, condemnedlinen.condemnedid\n" +
                        "from st_stock_item, condemnedlinen\n" +
                        "where st_stock_item.item_code=condemnedlinen.itemcode AND condemnedlinen.datefor like '"+dbDate+"'\n" +
                        "AND st_stock_item.sub_cat_code like 'LINEN'\n" +
                        "order by st_stock_item.description asc";
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery( sql );
            rs.last();
            totalNumRows=rs.getRow();
            batch = new Object[totalNumRows][5];
            condemnedId=new String[rs.getRow()];
            int r;
            r=0;
            rs.beforeFirst();
            while (rs.next()){
                batch[r][0]=rs.getString("description");
                batch[r][1]=rs.getString("qty");
                batch[r][2]=rs.getString("buying_price");
                Double totalVal=rs.getDouble("qty")*rs.getDouble("buying_price");
                batch[r][3]=totalVal;
                condemnedId[r]=rs.getString("condemnedid");
                r++;
                RefreshClientsTable();
            }
            

        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Error: "+ex.toString());

       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cbxItem = new javax.swing.JComboBox();
        txtQty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Condemned Linen");
        setPreferredSize(new java.awt.Dimension(968, 513));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel1, gridBagConstraints);

        txtDate.setEditable(false);
        txtDate.setColumns(15);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel1.add(txtDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.7;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Item");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel5.add(jLabel3, gridBagConstraints);

        cbxItem.setPreferredSize(new java.awt.Dimension(250, 20));
        cbxItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxItemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(cbxItem, gridBagConstraints);

        txtQty.setColumns(3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel5.add(txtQty, gridBagConstraints);

        jLabel6.setText("Units Disposed");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(jLabel6, gridBagConstraints);

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel5, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void cbxItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxItemActionPerformed
        if(cbxItem.getSelectedIndex()>-1 && doneLoading.equals("yes")){
            int indexYake=cbxItem.getSelectedIndex();
            txtQty.setText((String) jTable1.getValueAt(indexYake, 1));
        }
    }//GEN-LAST:event_cbxItemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String itemCode=itemCodes[cbxItem.getSelectedIndex()];
            int unitsIssued=Integer.parseInt(txtQty.getText());

            String sqlPrep="select current_user";
            Statement stmtPrep = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
            ResultSet rsPrep = stmtPrep.executeQuery( sqlPrep );
            rsPrep.next();
            String currentUser=rsPrep.getString("current_user");

            sqlPrep="select buying_price, units from st_stock_item where item_code like '"+itemCode+"'";
            stmtPrep = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
            rsPrep = stmtPrep.executeQuery( sqlPrep );
            rsPrep.next();
            double price=rsPrep.getDouble("buying_price");

            String tarehe=dbDate;
            Statement stmt3 = conn.createStatement();
            stmt3.execute( "update condemnedlinen set qty="+unitsIssued+", unitprice='"+price+"', condemnedby ='"+currentUser+"' where condemnedid="+condemnedId[cbxItem.getSelectedIndex()]);
            refreshCbx();
            populateTable();
            txtQty.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(CondemnedLinenEdit.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void RefreshClientsTable(){
        jTable1.setModel(new javax.swing.table.DefaultTableModel(batch,
   new String[]{"Item", "Qty", "Unit Price", "Total Value"}
)
{
         @Override
            public boolean isCellEditable(int rowIndex,int colIndex){
                
                return false;
            }   

        });
        
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        TableColumn col0=jTable1.getColumnModel().getColumn(0);
        col0.setPreferredWidth(350);
        
        
        TableColumn col1=jTable1.getColumnModel().getColumn(1);
        TableColumn col2=jTable1.getColumnModel().getColumn(2);
        TableColumn col3=jTable1.getColumnModel().getColumn(3);
        
        DefaultTableCellRenderer rrendr=new DefaultTableCellRenderer();
        rrendr.setHorizontalAlignment(JLabel.CENTER);
        rrendr.setOpaque(true);
        
        col1.setCellRenderer(rrendr);
        
        DefaultTableCellRenderer rrendr2=new DefaultTableCellRenderer();
        rrendr2.setHorizontalAlignment(JLabel.RIGHT);
        rrendr2.setOpaque(true);
        
        col2.setCellRenderer(rrendr2);
        col3.setCellRenderer(rrendr2);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables
}
