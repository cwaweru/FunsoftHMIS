/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */
package com.afrisoftech.hospayroll;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author root
 */
public class ReportSWUIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable {

    /**
     * Creates new form Members
     */
    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private javax.swing.JComboBox cmbox;

    public ReportSWUIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jLabel612 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel52 = new javax.swing.JPanel();
        jButton202 = new javax.swing.JButton();
        jButton252 = new javax.swing.JButton();
        jSeparator71 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel211 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jLabel2 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jLabel612.setText("Bank Name");

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jTextField91, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Reporting");
        setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        /*int intCheck = 0;

        try {

            java.sql.Statement stmtCheck = connectDB.createStatement();

            java.sql.ResultSet rsetCheck = stmtCheck.executeQuery("SELECT COUNT(*) FROM company_profile");

            while (rsetCheck.next()) {

                intCheck = rsetCheck.getInt(1);

            }

        } catch(java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        if (intCheck > 0) {

            jTextField2.setEditable(false);

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "MESSAGE : Company already set up!. Contact System Administrator");

        }
        */

        jPanel52.setLayout(new java.awt.GridBagLayout());

        jButton202.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        jButton202.setMnemonic('r');
        jButton202.setText("Refresh");
        jButton202.setToolTipText("Click here to clear fields");
        jButton202.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton202ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel52.add(jButton202, gridBagConstraints);

        jButton252.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14753_.GIF"))); // NOI18N
        jButton252.setMnemonic('c');
        jButton252.setText("Close");
        jButton252.setToolTipText("Click here to close window");
        jButton252.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton252ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel52.add(jButton252, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel52.add(jSeparator71, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel52.add(jLabel4, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel3.setText("Date From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(datePicker2, gridBagConstraints);

        jLabel1.setText("Date To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel9.setText("Company");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel9, gridBagConstraints);

        jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION select company_name from payroll_comsetup order by 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(jComboBox3, gridBagConstraints);

        jLabel10.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel10, gridBagConstraints);

        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION select distinct upper(category) as description from deductions_allowances    ORDER BY 1"));
        //
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(jComboBox4, gridBagConstraints);

        jButton1.setText("Load report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION select distinct upper(category) as description from deductions_allowances    ORDER BY 1"));
        //
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(jComboBox5, gridBagConstraints);

        jLabel11.setText("Organisatiion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel52.add(jPanel1, gridBagConstraints);

        jButton5.setMnemonic('R');
        jButton5.setText("RemoveRow");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        jPanel52.add(jButton5, gridBagConstraints);

        jPanel211.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter monthly adjustments here"));
        jPanel211.setLayout(new java.awt.GridBagLayout());

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "A/C No", "Staff No.", "Staff Name", "Id No", "Net Pay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setShowHorizontalLines(false);
        jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable11KeyReleased(evt);
            }
        });
        jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable11MouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(jScrollPane11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel52.add(jPanel211, gridBagConstraints);

        jLabel2.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        jPanel52.add(jLabel2, gridBagConstraints);

        jFormattedTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel52.add(jFormattedTextField1, gridBagConstraints);

        jButton2.setText("Generate Detailed");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        jPanel52.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel52, gridBagConstraints);

        setBounds(0, 0, 750, 449);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), jTable11.getSelectedRow(), 1);

        jSearchDialog.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        if (jTextField11.getCaretPosition() < 2) {

            System.out.println("Nothing");
        } else {
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select employee_no,first_name||' '||middle_name||' '||last_name AS name,department from master_file where first_name||' '||middle_name||' '||last_name ILIKE '" + jTextField11.getText() + "%' ORDER BY first_name||' '||middle_name||' '||last_name"));

            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);

        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate

    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        if (jTable11.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();
        }         // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane11.getLocationOnScreen();
        jSearchDialog.setSize(400, 200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);

    }
    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased

        double resFloat = 0.00;
        double hourRate = 0.00;
        double monthHours = 0.00;
        double basicPay = 0.00;
        //    double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());

        if (jTable11.getModel().getValueAt(jTable11.getSelectedRow(), 3) != null) {

            try {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT monthly_hours FROM master_file where employee_no ILIKE '" + jTable11.getValueAt(jTable11.getSelectedRow(), 0) + "%'");

                while (rsetTable1.next()) {
                    // hourRate = rsetTable1.getDouble(1);
                    monthHours = rsetTable1.getDouble(1);

                }

                java.sql.Statement stmtTable11 = connectDB.createStatement();
                java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT sum(amount) FROM allowances_benefits WHERE  description ILIKE 'BASIC Pay%' and staff_no ILIKE '" + jTable11.getValueAt(jTable11.getSelectedRow(), 0) + "%'");

                while (rsetTable11.next()) {
                    basicPay = rsetTable11.getDouble(1);

                }
                java.sql.Statement stmtTable111 = connectDB.createStatement();
                java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT rate FROM deductions_allowances WHERE description ILIKE '" + jTextField91.getText() + "%' AND rate >0");

                while (rsetTable111.next()) {
                    hourRate = rsetTable111.getDouble(1);

                }

            } catch (java.sql.SQLException sqlex) {
                javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            //  double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            if (hourRate > 0) {
                double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 3).toString());

                double Total = (basicPay / monthHours) * hourRate * floatCol3;

                jTable11.setValueAt(new java.lang.Double(Total), jTable11.getSelectedRow(), 2);
            }
            /*    for (int i = 0; i < jTable1.getRowCount(); i++) {
         
                if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
         
                    resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
         
         
                    // totalSum = floatTotal + resFloat;
         
                }
            }
          //  this.tableModelTableChanged();
        } */
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        //  int j = 0;
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }
        jFormattedTextField1.setText(java.lang.String.valueOf(0.00));
        int i = 0;
        jTextField91.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());

        double total = 0.00;

        try {
            // java.lang.Object listofStaffNos1[] = this.getListofStaffNos1();
            //for (int x = 0; x < listofStaffNos1.length; x++) {
            java.lang.Object listofStaffNos[] = this.getListofStaffNos();

            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.Statement stmt1x = connectDB.createStatement();
//            for (int j = 0; j < listofStaffNos.length; j++) {
            /*int staff = 0;
                    java.sql.ResultSet rSet1x = stmt1x.executeQuery("select count(ep.staff_no) from net_pay_view ep where ep.staff_no = '"+listofStaffNos[j]+"' and ep.date BETWEEN '"+datePicker1.getDate()+"' AND '"+datePicker2.getDate()+"'");
                    while (rSet1x.next()) {
                        staff = rSet1x.getInt(1);
                     
                        if(staff > 0){*/
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select upper(mf.first_name||' '||mf.middle_name||' '||last_name) as name,mf.bank,mf.branch_code,sum(ep.amount) AS net_pay,mf.bank_account_no,mf.employee_no from master_file mf, net_pay_view ep where ep.staff_no = mf.employee_no  and mf.payment_mode ='Bank Transfer' and ep.date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' group by name,mf.employee_no, mf.bank,mf.branch_code,mf.bank_account_no HAVING sum(ep.amount) > 0"));

//                java.sql.ResultSet rSet1 = stmt1.executeQuery("select mf.bank_account_no,mf.employee_no,upper(mf.first_name||' '||mf.middle_name||' '||last_name) as name,mf.id_no,sum(ep.amount) AS net_pay from master_file mf, net_pay_view ep where ep.staff_no = mf.employee_no and ep.staff_no = '"+listofStaffNos[j]+"' and mf.payment_mode ='Bank Transfer' and ep.date BETWEEN '"+datePicker1.getDate()+"' AND '"+datePicker2.getDate()+"' group by name,mf.employee_no, mf.bank,mf.id_no,mf.bank_account_no HAVING sum(ep.amount) > 0");
//                while (rSet1.next()) {
//                    jTable11.setValueAt(rSet1.getObject(1), j, 0);
//                    jTable11.setValueAt(rSet1.getObject(2), j, 1);
//                    jTable11.setValueAt(rSet1.getObject(3), j, 2);
//                    jTable11.setValueAt(rSet1.getObject(4), j, 3);
//                    jTable11.setValueAt(rSet1.getObject(5), j, 4);
//                   // jTable11.setValueAt(rSet1.getObject(6), j, 5);
//                    total = total + rSet1.getDouble(5);
//                    i++;
//                    
//                }
//            }
            total = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 3);
            jFormattedTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(total));
            // }
            //}
            //}
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
        }

        //  jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select ep.staff_no,initcap(mf.first_name||' '||mf.middle_name||' '||last_name) as name,mf.id_no,initcap(mf.bank) as bank,mf.bank_account_no,sum(ep.amount) AS net_pay from master_file mf, net_pay_view ep where ep.staff_no = mf.employee_no and ep.staff_no = '"+listofStaffNos[j]+"' and mf.payment_mode ='Bank Transfer' and ep.date BETWEEN '"+datePicker1.getDate()+"' AND '"+datePicker2.getDate()+"' group by name,ep.staff_no, mf.bank,mf.id_no,mf.bank_account_no"));
        // i++;
        //jTable11.setShowHorizontalLines(false);
        //jScrollPane11.setViewportView(jTable11);
        //   jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        //  jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    /*  public java.lang.Object[] getListofStaffNos1() {
   
        java.lang.Object[] listofStaffNos1 = null;
   
        java.util.Vector listStaffNoVector1 = new java.util.Vector(1,1);
   
   
        try {
   
            //    java.sql.Connection connDB = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");
   
            java.sql.Statement stmt1 = connectDB.createStatement();
   
            java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT np.staff_no FROM net_pay_view np WHERE np.date BETWEEN '"+datePicker1.getDate()+"' AND '"+datePicker2.getDate()+"' order by np.staff_no");
   
            while (rSet1.next()) {
   
                listStaffNoVector1.addElement(rSet1.getObject(1).toString());
                System.out.println(rSet1.getObject(1).toString());
            }
   
        }catch (java.sql.SQLException sqlExec) {
   
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
   
        }
   
        listofStaffNos1 = listStaffNoVector1.toArray();
        System.out.println("Done list of Staff Nos ...");
        System.out.println(listofStaffNos1);
   
   
        return listofStaffNos1;
   
   
   
    }*/

    public java.lang.Object[] getListofStaffNos() {

        java.lang.Object[] listofStaffNos = null;

        java.util.Vector listStaffNoVector = new java.util.Vector(1, 1);

        try {

            //    java.sql.Connection connDB = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT np.staff_no FROM net_pay_view np, master_file mf WHERE mf.employee_no = np.staff_no and mf.bank = '" + jTextField91.getText() + "' AND np.date BETWEEN '" + datePicker1.getDate() + "' AND '" + datePicker2.getDate() + "' order by np.staff_no");

            while (rSet1.next()) {

                listStaffNoVector.addElement(rSet1.getObject(1).toString());
                System.out.println(rSet1.getObject(1).toString());
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());

        }

        listofStaffNos = listStaffNoVector.toArray();
        System.out.println("Done list of Staff Nos ...");
        System.out.println(listofStaffNos);

        return listofStaffNos;

    }
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate

        // if (jCheckBox1.isSelected()){
        if (jTextField113.getCaretPosition() < 0) {

            System.out.println("Nothing");
        } else {
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT bank as bank_name from master_file WHERE (bank IS NOT NULL OR bank !='')  AND bank  ILIKE '" + jTextField113.getText() + "%' order by bank_name"));

            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);

        }

        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);

    }

    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        //        int i = jTable1.getSelectedRow();

        /* try {
          //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
          java.sql.Statement pstmt = connectDB.createStatement();
          java.sql.ResultSet rs = pstmt.executeQuery("select first_name||' '||middle_name||' '||last_name from member where m_number = '"+cmbox.getSelectedItem()+"'");
          while (rs.next()){
              //jTextField4.setText(rs.getObject(1).toString());
              jTable1.setValueAt(rs.getObject(1),i,1);
          }
      } catch(java.sql.SQLException sqlex){
          System.out.println(sqlex.getMessage());
      }
      
         */
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();

        int[] selectedRows = jTable11.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton252ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton252ActionPerformed
        setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton252ActionPerformed

    private void jButton202ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton202ActionPerformed
        //      this.jComboBox1.setSelectedItem(null);
        this.jTextField91.setText("");

        for (int j = 0; j < jTable11.getRowCount(); j++) {
            for (int l = 0; l < jTable11.getColumnCount(); l++) {
                jTable11.getModel().setValueAt(null, j, l);
            }
        }

        //     Add your handling code here:
    }//GEN-LAST:event_jButton202ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// Insurance
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Insurance")) {
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct description, '' as Insurance_1, '' as Insurance_2, '' as Insurance_3, '' as Insurance_4, '' as Insurance_5, '' as Insurance_6, '' as total FROM sacco_welfare_members where insurance = true"));
            try {
                for (int i = 0; i < jTable11.getRowCount(); i++) {
                    Double total = 0.00;
                    java.sql.Statement st311 = connectDB.createStatement();
                    java.sql.ResultSet rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Insurance 1' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and insurance= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Insurance 1' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 1);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Insurance 2' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and insurance= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Insurance 2' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 2);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Insurance 3' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and insurance= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Insurance 3' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 3);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Insurance 4' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and insurance= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Insurance 4' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 4);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Insurance 5' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and insurance= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Insurance 5' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 5);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Insurance 6' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and insurance= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Insurance 6' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 6);
                        total = total + rset311.getDouble(2);
                    }
                     jTable11.setValueAt(total, i, 7);

                }
            } catch (SQLException ex) {
                Logger.getLogger(ReportSWUIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Welfare")) {
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct description, '' as Staff_Welfare,'' as Loan_1, '' as loan_2, '' as total FROM sacco_welfare_members where welfare = true"));

            try {

                for (int i = 0; i < jTable11.getRowCount(); i++) {
                    Double total = 0.00;
                    java.sql.Statement st311 = connectDB.createStatement();
                    java.sql.ResultSet rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'staff welfare' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and welfare= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 1);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'welfare loan 1' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and welfare= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 2);
                        total = total + rset311.getDouble(2);
                    }
//                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'welfare loan 2' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and welfare= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 3);
                        total = total + rset311.getDouble(2);
                    }
                    jTable11.setValueAt(total, i, 4);
                }
            } catch (SQLException ex) {
                Logger.getLogger(ReportSWUIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Sacco")) {
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct description, '' as Loan_1, '' as loan_2,'' as loan_3,'' as loan_4,'' as interest_1,'' as interest_2,'' as interest_3,'' as co_op_shares,'' as BF, '' as total FROM sacco_welfare_members where sacco = true"));
            try {

                for (int i = 0; i < jTable11.getRowCount(); i++) {
                    Double total = 0.00;
                    java.sql.Statement st311 = connectDB.createStatement();
                    java.sql.ResultSet rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 1[P]' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 1);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 2[P]' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 2);
                        total = total + rset311.getDouble(2);
                    }
//                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 3' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 3);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 4' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and welfare= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 4);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Interest 1' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 5);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Interest 2' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 6);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Interest 3' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 7);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Co-op Shares' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 8);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Benevolent Fund' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 9);
                        total = total + rset311.getDouble(2);
                    }

                    jTable11.setValueAt(total, i, 10);
                }
            } catch (SQLException ex) {
                Logger.getLogger(ReportSWUIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Sacco")) {
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct description, '' as Loan_1, '' as loan_2,'' as loan_3,'' as loan_4,'' as interest_1,'' as interest_2,'' as interest_3,'' as co_op_shares,'' as BF, '' as total FROM sacco_welfare_members where sacco = true"));
            try {

                for (int i = 0; i < jTable11.getRowCount(); i++) {
                    Double total = 0.00;
                    java.sql.Statement st311 = connectDB.createStatement();
                    java.sql.ResultSet rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 1[P]' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 1);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 2[P]' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 2);
                        total = total + rset311.getDouble(2);
                    }
//                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 3' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 3);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Loan 4' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and welfare= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 4);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Interest 1' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 5);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Interest 2' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 6);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Interest 3' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 7);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Co-op Shares' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 8);
                        total = total + rset311.getDouble(2);
                    }

                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Benevolent Fund' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and sacco= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) =upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 9);
                        total = total + rset311.getDouble(2);
                    }

                    jTable11.setValueAt(total, i, 10);
                }
            } catch (SQLException ex) {
                Logger.getLogger(ReportSWUIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Union")) {
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct description, '' as Contribution  FROM sacco_welfare_members where unions = true"));
            try {

                for (int i = 0; i < jTable11.getRowCount(); i++) {
                    Double total = 0.00;
                    java.sql.Statement st311 = connectDB.createStatement();
                    java.sql.ResultSet rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Union Due' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and\n"
                            + "staff_no=employee_no and unions= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 1);
                        //total = total + rset311.getDouble(2);
                    }

                }
            } catch (SQLException ex) {
                Logger.getLogger(ReportSWUIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Pension")) {
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select * from funsoft_pension_report('" + datePicker1.getDate() + "','" + datePicker2.getDate() + "','" + jComboBox3.getSelectedItem().toString() + "')"));

        }else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Hire Purchase")) {
            
            jTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct description, '' as hire_purchase_1, '' as hire_purchase_2,'' as hire_purchase_3,'' as hire_purchase_4,'' as hire_purchase_5, '' as total FROM sacco_welfare_members where hire_purchase = true"));
            try {

                
                for (int i = 0; i < jTable11.getRowCount(); i++) {
                    Double total = 0.00;
                    java.sql.Statement st311 = connectDB.createStatement();
                    java.sql.ResultSet rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Hire Purchase 1' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and hire_purchase= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Hire Purchase 1' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 1);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Hire Purchase 2' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and hire_purchase= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Hire Purchase 2' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 2);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Hire Purchase 3' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and hire_purchase= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Hire Purchase 3' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 3);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Hire Purchase 4' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and hire_purchase= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Hire Purchase 4' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 4);
                        total = total + rset311.getDouble(2);
                    }
                    
                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Hire Purchase 5' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
                            + "staff_no=employee_no and hire_purchase= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Hire Purchase 5' group by 1");
                    while (rset311.next()) {
                        jTable11.setValueAt(rset311.getString(2), i, 5);
                        total = total + rset311.getDouble(2);
                    }
                    
//                    rset311 = st311.executeQuery("SELECT sacco_welfare_members.description,  sum(posting.amount)    FROM posting,sacco_welfare_members WHERE posting.description ilike 'Insurance 6' and posting.company_name ='" + jComboBox3.getSelectedItem().toString() + "' and \n"
//                            + "staff_no=employee_no and hire_purchase= true and posting.date between '" + datePicker1.getDate() + "' and '" + datePicker2.getDate() + "'  and  upper(sacco_welfare_members.description) = upper('" + jTable11.getValueAt(i, 0) + "') and sacco_welfare_members.plan ilike 'Insurance 6' group by 1");
//                    while (rset311.next()) {
//                        jTable11.setValueAt(rset311.getString(2), i, 6);
//                        total = total + rset311.getDouble(2);
//                    }
                     jTable11.setValueAt(total, i, 6);

                }
            } catch (SQLException ex) {
                Logger.getLogger(ReportSWUIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

//
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Sacco")) {
            com.afrisoftech.hospayroll.BreakDownPdf policy = new com.afrisoftech.hospayroll.BreakDownPdf();

            policy.TaxesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(), jComboBox3.getSelectedItem().toString(), jComboBox5.getSelectedItem().toString());
        }else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Insurance")) {
           com.afrisoftech.hospayroll.InsuranceBreakDownPdf policy = new com.afrisoftech.hospayroll.InsuranceBreakDownPdf();

            policy.TaxesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(), jComboBox3.getSelectedItem().toString(), jComboBox5.getSelectedItem().toString());
        
        }else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Welfare")) {
           com.afrisoftech.hospayroll.WelfareBreakDownPdf policy = new com.afrisoftech.hospayroll.WelfareBreakDownPdf();

            policy.TaxesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(), jComboBox3.getSelectedItem().toString(), jComboBox5.getSelectedItem().toString());
        
        }else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Union")) {
           com.afrisoftech.hospayroll.UnionBreakDownPdf policy = new com.afrisoftech.hospayroll.UnionBreakDownPdf();

            policy.TaxesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(), jComboBox3.getSelectedItem().toString(), jComboBox5.getSelectedItem().toString());
        
        }else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Hire Purchase")) {
           com.afrisoftech.hospayroll.HirePurchaseBreakDownPdf policy = new com.afrisoftech.hospayroll.HirePurchaseBreakDownPdf();

            policy.TaxesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker2.getDate().toLocaleString(), jComboBox3.getSelectedItem().toString(), jComboBox5.getSelectedItem().toString());
        
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Sacco")) {
            jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct description from sacco_welfare_members where sacco=true order by 1"));

        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Welfare")) {
            jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct description from sacco_welfare_members where welfare=true order by 1"));

        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Union")) {
            jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct description from sacco_welfare_members where unions=true order by 1"));

        } else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Insurance")) {
            jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct description from sacco_welfare_members where insurance=true order by 1"));
        }else if (jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Hire Purchase")) {
            jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct description from sacco_welfare_members where hire_purchase=true order by 1"));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    public void run() {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton202;
    private javax.swing.JButton jButton252;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel612;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator71;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

}
