/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */
package com.afrisoftech.hospayroll;

import java.sql.SQLException;
//import org.openide.util.Exceptions;

/**
 *
 * @author root
 */
public class StaffHistoryAnalysisIntf extends javax.swing.JInternalFrame implements java.lang.Runnable {

    /**
     * Creates new form Members
     */
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox1;
    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public StaffHistoryAnalysisIntf(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.afrisoftech.dbadmin.JTable();
        jLabel612 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Staff History Analysis");
        setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item", "Description", "Date From", "Date To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setShowHorizontalLines(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(3).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jLabel612.setText("Staff No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel612, gridBagConstraints);

        jLabel5.setText("Staff Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel5, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jTextField91, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField2, gridBagConstraints);

        jButton2.setText("Load");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel1.add(jButton2, gridBagConstraints);

        jTabbedPane1.addTab("History Analysis", jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 1209, 466);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
       jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
       jTextField91.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());

        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
                // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
        /*  private void cmbox1ActionPerformed(java.awt.event.ActionEvent evt){
        int i = jTable1.getSelectedRow();
   
        try {
   
            java.sql.Statement pstm = connectDB.createStatement();
            java.sql.ResultSet rset1 = pstm.executeQuery("select first_name||' '||middle_name||' '||last_name from master_file where employee_no = '"+cmbox1.getSelectedItem()+"'");
            while (rset1.next()){
   *
                jTable1.setValueAt(rset1.getObject(1),i,1);
            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
    }*/
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
 jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select employee_no,first_name||' '||middle_name||' '||last_name AS name,department from master_file where (first_name||' '||middle_name||' '||last_name ILIKE '" + jTextField113.getText() + "%' OR employee_no ILIKE '" + jTextField113.getText() + "%' OR id_no ILIKE '" + jTextField113.getText() + "%' ) "));

        jSearchTable2.setShowHorizontalLines(false);
        jSearchScrollPane2.setViewportView(jSearchTable2);        

        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        int j = 0;
        int i = 0;

        jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
//        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());

        /*       try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();

            //                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, amount FROM allowances_benefits where staff_no = '"+jTextField91.getText()+"' union select sacco_name,month_deduction from sacco_deductions where staff_no = '"+jTextField91.getText()+"' AND balance > 0");// AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");

            while (rsetTable1.next()) {

                System.out.println("Working at table row "+i);
                jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                //  jTable111.setValueAt(rsetTable1.getObject(3), i, 2);

                i++;

            }

            /*            crset21.setCommand("select description,amount from allowances_benefits where staff_no = '"+jTextField91.getText()+"' union select sacco_name,month_deduction from sacco_deductions where staff_no = '"+jTextField91.getText()+"'");
            crset21.setConnectionSource(pConnDB);

            crset21.execute();

            jTable1.setModel(new org.netbeans.lib.sql.models.TableModel(crset21, new org.netbeans.lib.sql.models.TableModel.Column[] {

                new org.netbeans.lib.sql.models.TableModel.Column("description", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount", true),
                // new org.netbeans.lib.sql.models.TableModel.Column("amount", "Value KShs.", false),
            }));

            jScrollPane1.setViewportView(jTable1);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }
         */
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        for (int l = 0; l < jTable2.getRowCount(); l++) {
            for (int t = 0; t < jTable2.getColumnCount(); t++) {
                jTable2.getModel().setValueAt(null, l, t);
            }
        }
        try {
            int i = 0;
            java.sql.Statement st41 = connectDB.createStatement();           
            java.sql.ResultSet rset41 = st41.executeQuery("SELECT DISTINCT description,trans_date::date,id FROM master_file_updates WHERE  staff_no = '"+jTextField91.getText()+"' AND item ='Job Group' order by id ");
            Boolean found = false;
            String date = "";
            int itemcount =0 ; 
            int startrow = 0;
            while (rset41.next()) {   
                if (itemcount == 0) jTable2.setValueAt("Job Group", i, 0);                
                jTable2.setValueAt(rset41.getString(1), i, 1);
                
                if (itemcount == 0) {
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    startrow = i;
                }
                else jTable2.setValueAt(jTable2.getValueAt(i-1, i+1), i, 2);

                jTable2.setValueAt(rset41.getString(2), i, 3);
                date = rset41.getString(2);
                i++;
                found = true;
                itemcount++ ;
            }
            
            rset41 = st41.executeQuery("SELECT DISTINCT employee_grade,date::date FROM master_file WHERE  employee_no = '"+jTextField91.getText()+"'  ");
            while (rset41.next()) {            
                if(!found) {
                    jTable2.setValueAt("Job Group", i, 0);                               
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    
                }else{
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(date, i, 2);
                    jTable2.setValueAt(rset41.getString(2),startrow , 2);
                }
                i++;
                
            }
            
            i++;
            rset41 = st41.executeQuery("SELECT DISTINCT description,trans_date::date,id FROM master_file_updates WHERE  staff_no = '"+jTextField91.getText()+"' AND item ='incremental Month' order by id ");
             found = false;
             date = "";
             itemcount =0 ; 
             startrow = 0;
            while (rset41.next()) {   
                if (itemcount == 0) jTable2.setValueAt("Incremental Month", i, 0);                
                jTable2.setValueAt(rset41.getString(1), i, 1);
                
                if (itemcount == 0) {
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    startrow = i;
                }
                else jTable2.setValueAt(jTable2.getValueAt(i-1, i+1), i, 2);

                jTable2.setValueAt(rset41.getString(2), i, 3);
                date = rset41.getString(2);
                i++;
                found = true;
                itemcount++ ;
            }
            
            rset41 = st41.executeQuery("SELECT DISTINCT inremental_month,date::date FROM master_file WHERE  employee_no = '"+jTextField91.getText()+"'  ");
            while (rset41.next()) {            
                if(!found) {
                    jTable2.setValueAt("Incremental Month", i, 0);                               
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    
                }else{
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(date, i, 2);
                    jTable2.setValueAt(rset41.getString(2),startrow , 2);
                }
                i++;
                
            }
            
            
            i++;
            rset41 = st41.executeQuery("SELECT DISTINCT description,trans_date::date,id FROM master_file_updates WHERE  staff_no = '"+jTextField91.getText()+"' AND item ='Desgination' order by id ");
             found = false;
             date = "";
             itemcount =0 ; 
             startrow = 0;
            while (rset41.next()) {   
                if (itemcount == 0) jTable2.setValueAt("Desgination", i, 0);                
                jTable2.setValueAt(rset41.getString(1), i, 1);
                
                if (itemcount == 0) {
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    startrow = i;
                }
                else jTable2.setValueAt(jTable2.getValueAt(i-1, i+1), i, 2);

                jTable2.setValueAt(rset41.getString(2), i, 3);
                date = rset41.getString(2);
                i++;
                found = true;
                itemcount++ ;
            }
            
            rset41 = st41.executeQuery("SELECT DISTINCT official_desgnation,date::date FROM master_file WHERE  employee_no = '"+jTextField91.getText()+"'  ");
            while (rset41.next()) {            
                if(!found) {
                    jTable2.setValueAt("Desgination", i, 0);                               
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    
                }else{
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(date, i, 2);
                    jTable2.setValueAt(rset41.getString(2),startrow , 2);
                }
                i++;
                
            }
            
            
            i++;
            rset41 = st41.executeQuery("SELECT DISTINCT description,trans_date::date,id FROM master_file_updates WHERE  staff_no = '"+jTextField91.getText()+"' AND item ='Department' order by id ");
             found = false;
             date = "";
             itemcount =0 ; 
             startrow = 0;
            while (rset41.next()) {   
                if (itemcount == 0) jTable2.setValueAt("Department", i, 0);                
                jTable2.setValueAt(rset41.getString(1), i, 1);
                
                if (itemcount == 0) {
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    startrow = i;
                }
                else jTable2.setValueAt(jTable2.getValueAt(i-1, i+1), i, 2);

                jTable2.setValueAt(rset41.getString(2), i, 3);
                date = rset41.getString(2);
                i++;
                found = true;
                itemcount++ ;
            }
            
            rset41 = st41.executeQuery("SELECT DISTINCT department,date::date FROM master_file WHERE  employee_no = '"+jTextField91.getText()+"'  ");
            while (rset41.next()) {            
                if(!found) {
                    jTable2.setValueAt("Department", i, 0);                               
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    
                }else{
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(date, i, 2);
                    jTable2.setValueAt(rset41.getString(2),startrow , 2);
                }
                i++;
                
            }
            
            
            
            
            
            i++;
            rset41 = st41.executeQuery("SELECT DISTINCT description,trans_date::date,id FROM master_file_updates WHERE  staff_no = '"+jTextField91.getText()+"' AND item ='Bank' order by id ");
             found = false;
             date = "";
             itemcount =0 ; 
             startrow = 0;
            while (rset41.next()) {   
                if (itemcount == 0) jTable2.setValueAt("Bank", i, 0);                
                jTable2.setValueAt(rset41.getString(1), i, 1);
                
                if (itemcount == 0) {
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    startrow = i;
                }
                else jTable2.setValueAt(jTable2.getValueAt(i-1, i+1), i, 2);

                jTable2.setValueAt(rset41.getString(2), i, 3);
                date = rset41.getString(2);
                i++;
                found = true;
                itemcount++ ;
            }
            
            rset41 = st41.executeQuery("SELECT DISTINCT bank,date::date FROM master_file WHERE  employee_no = '"+jTextField91.getText()+"'  ");
            while (rset41.next()) {            
                if(!found) {
                    jTable2.setValueAt("Bank", i, 0);                               
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    
                }else{
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(date, i, 2);
                    jTable2.setValueAt(rset41.getString(2),startrow , 2);
                }
                i++;
                
            }
            
            
            i++;
            rset41 = st41.executeQuery("SELECT DISTINCT description,trans_date::date,id FROM master_file_updates WHERE  staff_no = '"+jTextField91.getText()+"' AND item ='Account No' order by id ");
             found = false;
             date = "";
             itemcount =0 ; 
             startrow = 0;
            while (rset41.next()) {   
                if (itemcount == 0) jTable2.setValueAt("Account No", i, 0);                
                jTable2.setValueAt(rset41.getString(1), i, 1);
                
                if (itemcount == 0) {
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    startrow = i;
                }
                else jTable2.setValueAt(jTable2.getValueAt(i-1, i+1), i, 2);

                jTable2.setValueAt(rset41.getString(2), i, 3);
                date = rset41.getString(2);
                i++;
                found = true;
                itemcount++ ;
            }
            
            rset41 = st41.executeQuery("SELECT DISTINCT bank_account_no,date::date FROM master_file WHERE  employee_no = '"+jTextField91.getText()+"'  ");
            while (rset41.next()) {            
                if(!found) {
                    jTable2.setValueAt("Account No", i, 0);                               
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(rset41.getString(2), i, 2);
                    
                }else{
                    jTable2.setValueAt(rset41.getString(1), i, 1);
                    jTable2.setValueAt(date, i, 2);
                    jTable2.setValueAt(rset41.getString(2),startrow , 2);
                }
                i++;
                
            }
            
            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);

    }

    public void run() {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel612;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

}
