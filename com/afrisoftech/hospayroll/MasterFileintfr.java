/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */
package com.afrisoftech.hospayroll;

import java.sql.SQLException;
//import org.openide.util.Exceptions;

/**
 *
 * @author  root
 */
public class MasterFileintfr extends javax.swing.JInternalFrame {

    /** Creates new form Members */
    javax.swing.JSpinner beginDateSpinner = null;
    javax.swing.JSpinner endDateSpinner = null;
    javax.swing.JSpinner beginDateSpinner1 = null;
    javax.swing.JSpinner endDateSpinner1 = null;
    javax.swing.JSpinner beginDateSpinner2 = null;
    com.afrisoftech.lib.DBObject dbObject;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public MasterFileintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        dbObject = new com.afrisoftech.lib.DBObject();

        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        employeeSearchDialog = new javax.swing.JDialog();
        employeeSearchPanel = new javax.swing.JPanel();
        employeeSearchTxt = new javax.swing.JTextField();
        employeeSearchScrollPane = new javax.swing.JScrollPane();
        employeeSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        masterFileTabbedPane = new javax.swing.JTabbedPane();
        personalInformationTabbedPanel = new javax.swing.JPanel();
        Separator = new javax.swing.JSeparator();
        emplyeeDetailsPanel = new javax.swing.JPanel();
        employeeNumberLbl = new javax.swing.JLabel();
        firstNameLbl = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        dobLbl = new javax.swing.JLabel();
        idPassportLbl = new javax.swing.JLabel();
        lastNameLbl = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JTextField();
        middleNameLbl = new javax.swing.JLabel();
        middleNameTxt = new javax.swing.JTextField();
        idPassportTxt = new javax.swing.JTextField();
        nationalityLbl = new javax.swing.JLabel();
        genderSelectionPanel = new javax.swing.JPanel();
        maleChkbx = new javax.swing.JCheckBox();
        femaleChkbx = new javax.swing.JCheckBox();
        nationalityTxt = new javax.swing.JTextField();
        dobDatePicker = new com.afrisoftech.lib.DatePicker();
        searchPanel = new javax.swing.JPanel();
        employeeNumberTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        maritalStatusPanel = new javax.swing.JPanel();
        marriedChkbx = new javax.swing.JCheckBox();
        singleChkbx = new javax.swing.JCheckBox();
        staffCategoryPanel = new javax.swing.JPanel();
        staffCategoryCmbx = new javax.swing.JComboBox();
        staffCategoryLbl = new javax.swing.JLabel();
        employmentDetailsPanel = new javax.swing.JPanel();
        employmentDateLbl = new javax.swing.JLabel();
        designitionLbl = new javax.swing.JLabel();
        qualificationLbl = new javax.swing.JLabel();
        qualificationsTxt = new javax.swing.JTextField();
        departmentLbl = new javax.swing.JLabel();
        sectionLbl = new javax.swing.JLabel();
        employeeGroupLbl = new javax.swing.JLabel();
        employeeGradeLbl = new javax.swing.JLabel();
        departmentCmbx = new javax.swing.JComboBox();
        employeeGroupCmbx = new javax.swing.JComboBox();
        sectionCmbx = new javax.swing.JComboBox();
        designitionTxt = new javax.swing.JTextField();
        employeeGradeCmbx = new javax.swing.JComboBox();
        employmentDatePicker = new com.afrisoftech.lib.DatePicker();
        employeeTermsLbl = new javax.swing.JLabel();
        employeeTermsTxt = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        editBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        staffReportBtn = new javax.swing.JButton();
        spacerlabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        retireBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        paymentDetailsPanel = new javax.swing.JPanel();
        cancelBtn = new javax.swing.JButton();
        jSeparator = new javax.swing.JSeparator();
        statutoryDetailsPane = new javax.swing.JPanel();
        pinNumberLbl = new javax.swing.JLabel();
        pinNumberTxt = new javax.swing.JTextField();
        nhifNumberLbl = new javax.swing.JLabel();
        nhifNumberTxt = new javax.swing.JTextField();
        nssfNumberLbl = new javax.swing.JLabel();
        lascNumberTxt = new javax.swing.JTextField();
        lascNumberLbl = new javax.swing.JLabel();
        nssfNumberTxt = new javax.swing.JTextField();
        helbLbl = new javax.swing.JLabel();
        helbTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        basicPayLbl = new javax.swing.JLabel();
        basicPayTxt = new javax.swing.JTextField();
        taxReliefLbl = new javax.swing.JLabel();
        taxReliefTxt = new javax.swing.JTextField();
        hourlyRateLbl = new javax.swing.JLabel();
        hourlyRateTxt = new javax.swing.JTextField();
        monthlyHoursLbl = new javax.swing.JLabel();
        monthlyHoursTxt = new javax.swing.JTextField();
        bankAccountDetailsPanel = new javax.swing.JPanel();
        accountNumberLbl = new javax.swing.JLabel();
        bankNameLbl = new javax.swing.JLabel();
        bankNameCmbx = new javax.swing.JComboBox();
        accountNumberTxt = new javax.swing.JTextField();
        bankBranchlbl = new javax.swing.JLabel();
        bankCodeTxt = new javax.swing.JTextField();
        bankCodelbl = new javax.swing.JLabel();
        bankBranchTxt = new javax.swing.JTextField();
        paymentModePanel = new javax.swing.JPanel();
        cashChkbx = new javax.swing.JCheckBox();
        bankTransferChkbx = new javax.swing.JCheckBox();
        chequeChkbx = new javax.swing.JCheckBox();
        statutoryBodiesPanel = new javax.swing.JPanel();
        providentFundChkbx = new javax.swing.JCheckBox();
        nhifChkbx = new javax.swing.JCheckBox();
        unionChkbx = new javax.swing.JCheckBox();
        nssfChkbx = new javax.swing.JCheckBox();
        lascChkbx = new javax.swing.JCheckBox();
        suspendChkbx = new javax.swing.JCheckBox();
        adressDetailsTabbedPane = new javax.swing.JPanel();
        jButton20221 = new javax.swing.JButton();
        jSeparator7121 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        idDetailsPanel = new javax.swing.JPanel();
        divisionLbl = new javax.swing.JLabel();
        divisionTxt = new javax.swing.JTextField();
        districtLbl = new javax.swing.JLabel();
        districtTxt = new javax.swing.JTextField();
        locationLbl = new javax.swing.JLabel();
        locationTxt = new javax.swing.JTextField();
        addressDetailsPanel = new javax.swing.JPanel();
        physicalAddressTxt = new javax.swing.JTextField();
        physicalAddressLbl = new javax.swing.JLabel();
        telephoneNumberLbl = new javax.swing.JLabel();
        telephoneNumberTxt = new javax.swing.JTextField();
        townLbl = new javax.swing.JLabel();
        townTxt = new javax.swing.JTextField();
        estateLbl = new javax.swing.JLabel();
        estateTxt = new javax.swing.JTextField();
        mobileNumberLbl = new javax.swing.JLabel();
        mobileNumberTxt = new javax.swing.JTextField();
        staffListingPanel = new javax.swing.JPanel();
        staffListingScrollPane = new javax.swing.JScrollPane();
        staffListingTable = new com.afrisoftech.dbadmin.JXTable();
        staffListingPanel1 = new javax.swing.JPanel();
        staffListingScrollPane1 = new javax.swing.JScrollPane();
        retiredStaffListingTable = new com.afrisoftech.dbadmin.JXTable();

        employeeSearchDialog.setModal(true);
        employeeSearchDialog.setUndecorated(true);
        employeeSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        employeeSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        employeeSearchPanel.setLayout(new java.awt.GridBagLayout());

        employeeSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                employeeSearchTxtCaretUpdate(evt);
            }
        });
        employeeSearchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeSearchTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        employeeSearchPanel.add(employeeSearchTxt, gridBagConstraints);

        employeeSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        employeeSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = employeeSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        employeeSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeSearchTableMouseClicked(evt);
            }
        });
        employeeSearchScrollPane.setViewportView(employeeSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        employeeSearchPanel.add(employeeSearchScrollPane, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employeeSearchPanel.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employeeSearchDialog.getContentPane().add(employeeSearchPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Employee Register/Master File and Listing Reports");
        setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        personalInformationTabbedPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        personalInformationTabbedPanel.add(Separator, gridBagConstraints);

        /*        try {
            java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
            java.util.Date dateInstance = java.util.Calendar.getInstance().getTime();
            //        java.lang.String dateString2Parse = null;
            //        dateString2Parse = String.valueOf(dateInstance.getDate())+"-"+String.valueOf(dateInstance.getMonth()+1)+"-200"+String.valueOf(dateInstance.getYear()-100);

            java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
            System.out.println(dateFormat.format(formattedDate));
            javax.swing.SpinnerDateModel beginDate1 = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);
            //   javax.swing.SpinnerDateModel endDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);

            beginDateSpinner1 = new javax.swing.JSpinner(beginDate1);
            //     endDateSpinner = new javax.swing.JSpinner(endDate);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            emplyeeDetailsPanel.add(beginDateSpinner1, gridBagConstraints);

        } catch(java.text.ParseException parseExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), parseExec.getMessage());

        }
        **/
        emplyeeDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Employee name & other details here"));
        emplyeeDetailsPanel.setLayout(new java.awt.GridBagLayout());

        employeeNumberLbl.setText("Employee No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(employeeNumberLbl, gridBagConstraints);

        firstNameLbl.setText("First Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(firstNameLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(firstNameTxt, gridBagConstraints);

        dobLbl.setText("Date of Birth");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        emplyeeDetailsPanel.add(dobLbl, gridBagConstraints);

        idPassportLbl.setText("ID/Passport No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(idPassportLbl, gridBagConstraints);

        lastNameLbl.setText("Last Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        emplyeeDetailsPanel.add(lastNameLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(lastNameTxt, gridBagConstraints);

        middleNameLbl.setText("Middle Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        emplyeeDetailsPanel.add(middleNameLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(middleNameTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        emplyeeDetailsPanel.add(idPassportTxt, gridBagConstraints);

        nationalityLbl.setText("Nationality");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        emplyeeDetailsPanel.add(nationalityLbl, gridBagConstraints);

        genderSelectionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Gender"));
        genderSelectionPanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(maleChkbx);
        maleChkbx.setText("Male");
        maleChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        maleChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        genderSelectionPanel.add(maleChkbx, gridBagConstraints);

        buttonGroup1.add(femaleChkbx);
        femaleChkbx.setText("Female");
        femaleChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        genderSelectionPanel.add(femaleChkbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 30);
        emplyeeDetailsPanel.add(genderSelectionPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        emplyeeDetailsPanel.add(nationalityTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(dobDatePicker, gridBagConstraints);

        searchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchPanel.add(employeeNumberTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        searchPanel.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(searchPanel, gridBagConstraints);

        maritalStatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tick marital status"));
        maritalStatusPanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup4.add(marriedChkbx);
        marriedChkbx.setText("Married");
        marriedChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        maritalStatusPanel.add(marriedChkbx, gridBagConstraints);

        buttonGroup4.add(singleChkbx);
        singleChkbx.setText("Single");
        singleChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        maritalStatusPanel.add(singleChkbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 30);
        emplyeeDetailsPanel.add(maritalStatusPanel, gridBagConstraints);

        staffCategoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tick the class of staff you are dealing with"));
        staffCategoryPanel.setLayout(new java.awt.GridBagLayout());

        staffCategoryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select company_name from payroll_comsetup order by company_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        staffCategoryPanel.add(staffCategoryCmbx, gridBagConstraints);

        staffCategoryLbl.setText("Payroll Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        staffCategoryPanel.add(staffCategoryLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        emplyeeDetailsPanel.add(staffCategoryPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        personalInformationTabbedPanel.add(emplyeeDetailsPanel, gridBagConstraints);

        /*        try {
            java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
            java.util.Date dateInstance = java.util.Calendar.getInstance().getTime();
            //        java.lang.String dateString2Parse = null;
            //        dateString2Parse = String.valueOf(dateInstance.getDate())+"-"+String.valueOf(dateInstance.getMonth()+1)+"-200"+String.valueOf(dateInstance.getYear()-100);

            java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
            System.out.println(dateFormat.format(formattedDate));
            javax.swing.SpinnerDateModel beginDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);
            //   javax.swing.SpinnerDateModel endDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);

            beginDateSpinner = new javax.swing.JSpinner(beginDate);
            //     endDateSpinner = new javax.swing.JSpinner(endDate);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            employmentDetailsPanel.add(beginDateSpinner, gridBagConstraints);

        } catch(java.text.ParseException parseExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), parseExec.getMessage());

        }
        */
        employmentDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Employment details "));
        employmentDetailsPanel.setLayout(new java.awt.GridBagLayout());

        employmentDateLbl.setText("Date Employed");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(employmentDateLbl, gridBagConstraints);

        designitionLbl.setText("Official Designation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(designitionLbl, gridBagConstraints);

        qualificationLbl.setText("Qualifications");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(qualificationLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        employmentDetailsPanel.add(qualificationsTxt, gridBagConstraints);

        departmentLbl.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(departmentLbl, gridBagConstraints);

        sectionLbl.setText("Section");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(sectionLbl, gridBagConstraints);

        employeeGroupLbl.setText("Emp. Group");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(employeeGroupLbl, gridBagConstraints);

        employeeGradeLbl.setText("Emp Grade");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(employeeGradeLbl, gridBagConstraints);

        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct depart_name from pb_main_department order by 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(departmentCmbx, gridBagConstraints);

        employeeGroupCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT group_desc FROM hr.hr_job_groupings ORDER BY 1 ASC")
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        employmentDetailsPanel.add(employeeGroupCmbx, gridBagConstraints);

        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM hr.hr_sections ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(sectionCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        employmentDetailsPanel.add(designitionTxt, gridBagConstraints);

        employeeGradeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT grade_desc from hr.hr_job_grade order by 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        employmentDetailsPanel.add(employeeGradeCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employmentDetailsPanel.add(employmentDatePicker, gridBagConstraints);

        employeeTermsLbl.setText("Employment Terms");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        employmentDetailsPanel.add(employeeTermsLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        employmentDetailsPanel.add(employeeTermsTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        personalInformationTabbedPanel.add(employmentDetailsPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        editBtn.setMnemonic('E');
        editBtn.setText("Edit staff file");
        editBtn.setToolTipText("Click here to edit data");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(editBtn, gridBagConstraints);

        clearBtn.setMnemonic('l');
        clearBtn.setText("Clear form");
        clearBtn.setToolTipText("Click here to clear fields");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(clearBtn, gridBagConstraints);

        closeBtn.setMnemonic('C');
        closeBtn.setText("Close form");
        closeBtn.setToolTipText("Click here to close window");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeBtn, gridBagConstraints);

        saveBtn.setMnemonic('S');
        saveBtn.setText("Save");
        saveBtn.setToolTipText("Click here to enter data");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(saveBtn, gridBagConstraints);

        staffReportBtn.setText("Staff listing report");
        staffReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        buttonPanel.add(staffReportBtn, gridBagConstraints);

        spacerlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerlabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jLabel1, gridBagConstraints);

        retireBtn.setText("Retire staff member");
        retireBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retireBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(retireBtn, gridBagConstraints);

        jButton1.setText("Retired Staff report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        personalInformationTabbedPanel.add(buttonPanel, gridBagConstraints);

        masterFileTabbedPane.addTab("Personal Information", personalInformationTabbedPanel);

        paymentDetailsPanel.setLayout(new java.awt.GridBagLayout());

        cancelBtn.setMnemonic('n');
        cancelBtn.setText("Cancel");
        cancelBtn.setToolTipText("Click here to clear fields");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        paymentDetailsPanel.add(cancelBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        paymentDetailsPanel.add(jSeparator, gridBagConstraints);

        statutoryDetailsPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Statutory"));
        statutoryDetailsPane.setLayout(new java.awt.GridBagLayout());

        pinNumberLbl.setText("PIN No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        statutoryDetailsPane.add(pinNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        statutoryDetailsPane.add(pinNumberTxt, gridBagConstraints);

        nhifNumberLbl.setText("NHIF No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        statutoryDetailsPane.add(nhifNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        statutoryDetailsPane.add(nhifNumberTxt, gridBagConstraints);

        nssfNumberLbl.setText("NSSF No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        statutoryDetailsPane.add(nssfNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        statutoryDetailsPane.add(lascNumberTxt, gridBagConstraints);

        lascNumberLbl.setText("LASC No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        statutoryDetailsPane.add(lascNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        statutoryDetailsPane.add(nssfNumberTxt, gridBagConstraints);

        helbLbl.setText("HELB No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        statutoryDetailsPane.add(helbLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        statutoryDetailsPane.add(helbTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        paymentDetailsPanel.add(statutoryDetailsPane, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Salary details"));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        basicPayLbl.setText("Basic Pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(basicPayLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(basicPayTxt, gridBagConstraints);

        taxReliefLbl.setText("Tax Relief");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(taxReliefLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(taxReliefTxt, gridBagConstraints);

        hourlyRateLbl.setText("Hourly Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(hourlyRateLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(hourlyRateTxt, gridBagConstraints);

        monthlyHoursLbl.setText("Monthly Hours");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(monthlyHoursLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(monthlyHoursTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        paymentDetailsPanel.add(jPanel4, gridBagConstraints);

        bankAccountDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Bank & account details"));
        bankAccountDetailsPanel.setVisible(false);
        bankAccountDetailsPanel.setLayout(new java.awt.GridBagLayout());

        accountNumberLbl.setText("Personal A/C");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        bankAccountDetailsPanel.add(accountNumberLbl, gridBagConstraints);

        bankNameLbl.setText("Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        bankAccountDetailsPanel.add(bankNameLbl, gridBagConstraints);

        bankNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select bank_name ||' ' || branch as bank_name from banks_setup order by bank_name"));
        bankNameCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankNameCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bankAccountDetailsPanel.add(bankNameCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bankAccountDetailsPanel.add(accountNumberTxt, gridBagConstraints);

        bankBranchlbl.setText("Bank Branch");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        bankAccountDetailsPanel.add(bankBranchlbl, gridBagConstraints);

        bankCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bankAccountDetailsPanel.add(bankCodeTxt, gridBagConstraints);

        bankCodelbl.setText("Bank Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        bankAccountDetailsPanel.add(bankCodelbl, gridBagConstraints);

        bankBranchTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bankAccountDetailsPanel.add(bankBranchTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paymentDetailsPanel.add(bankAccountDetailsPanel, gridBagConstraints);

        paymentModePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mode of payment"));
        paymentModePanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup3.add(cashChkbx);
        cashChkbx.setText("Cash");
        cashChkbx.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cashChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        cashChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        paymentModePanel.add(cashChkbx, gridBagConstraints);

        buttonGroup3.add(bankTransferChkbx);
        bankTransferChkbx.setText("Bank Transfer");
        bankTransferChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        bankTransferChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankTransferChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        paymentModePanel.add(bankTransferChkbx, gridBagConstraints);

        buttonGroup3.add(chequeChkbx);
        chequeChkbx.setText("Cheque");
        chequeChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        paymentModePanel.add(chequeChkbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        paymentDetailsPanel.add(paymentModePanel, gridBagConstraints);

        statutoryBodiesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tick where staff is exempted"));
        statutoryBodiesPanel.setLayout(new java.awt.GridBagLayout());

        providentFundChkbx.setText("Provident Fund");
        providentFundChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        statutoryBodiesPanel.add(providentFundChkbx, gridBagConstraints);

        nhifChkbx.setText("NHIF");
        nhifChkbx.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nhifChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        statutoryBodiesPanel.add(nhifChkbx, gridBagConstraints);

        unionChkbx.setText("UNION");
        unionChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        statutoryBodiesPanel.add(unionChkbx, gridBagConstraints);

        nssfChkbx.setText("NSSF");
        nssfChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        statutoryBodiesPanel.add(nssfChkbx, gridBagConstraints);

        lascChkbx.setText("LASC");
        lascChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        statutoryBodiesPanel.add(lascChkbx, gridBagConstraints);

        suspendChkbx.setText("SUSPEND");
        suspendChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        statutoryBodiesPanel.add(suspendChkbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        paymentDetailsPanel.add(statutoryBodiesPanel, gridBagConstraints);

        masterFileTabbedPane.addTab("Payment Details", paymentDetailsPanel);

        adressDetailsTabbedPane.setLayout(new java.awt.GridBagLayout());

        jButton20221.setMnemonic('n');
        jButton20221.setText("Cancel");
        jButton20221.setToolTipText("Click here vto clear fields");
        jButton20221.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20221ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        adressDetailsTabbedPane.add(jButton20221, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        adressDetailsTabbedPane.add(jSeparator7121, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        idDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("ID Details"));
        idDetailsPanel.setLayout(new java.awt.GridBagLayout());

        divisionLbl.setText("Division");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        idDetailsPanel.add(divisionLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        idDetailsPanel.add(divisionTxt, gridBagConstraints);

        districtLbl.setText("District");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        idDetailsPanel.add(districtLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        idDetailsPanel.add(districtTxt, gridBagConstraints);

        locationLbl.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        idDetailsPanel.add(locationLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        idDetailsPanel.add(locationTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(idDetailsPanel, gridBagConstraints);

        addressDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Address Details"));
        addressDetailsPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        addressDetailsPanel.add(physicalAddressTxt, gridBagConstraints);

        physicalAddressLbl.setText("Present Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        addressDetailsPanel.add(physicalAddressLbl, gridBagConstraints);

        telephoneNumberLbl.setText("Tel. No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        addressDetailsPanel.add(telephoneNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        addressDetailsPanel.add(telephoneNumberTxt, gridBagConstraints);

        townLbl.setText("Town");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        addressDetailsPanel.add(townLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        addressDetailsPanel.add(townTxt, gridBagConstraints);

        estateLbl.setText("Estate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        addressDetailsPanel.add(estateLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        addressDetailsPanel.add(estateTxt, gridBagConstraints);

        mobileNumberLbl.setText("Mobile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        addressDetailsPanel.add(mobileNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        addressDetailsPanel.add(mobileNumberTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(addressDetailsPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        adressDetailsTabbedPane.add(jPanel6, gridBagConstraints);

        masterFileTabbedPane.addTab("Contact Address", adressDetailsTabbedPane);

        staffListingPanel.setLayout(new java.awt.GridBagLayout());

        staffListingTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT employee_no, first_name, middle_name, last_name, id_no,  pin_no, gender, department, section, date_employed, date_of_post as posting_date, official_desgnation as designation from master_file where retired = false order by employee_no"));
        staffListingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffListingTableMouseClicked(evt);
            }
        });
        staffListingScrollPane.setViewportView(staffListingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        staffListingPanel.add(staffListingScrollPane, gridBagConstraints);

        masterFileTabbedPane.addTab("Staff Register Listing", staffListingPanel);

        staffListingPanel1.setLayout(new java.awt.GridBagLayout());

        retiredStaffListingTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT employee_no, first_name, middle_name, last_name, id_no,  pin_no, gender, department, section, date_employed, date_of_post as posting_date, official_desgnation as designation, retire_date from master_file where retired = true order by employee_no"));
        retiredStaffListingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retiredStaffListingTableMouseClicked(evt);
            }
        });
        staffListingScrollPane1.setViewportView(retiredStaffListingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        staffListingPanel1.add(staffListingScrollPane1, gridBagConstraints);

        masterFileTabbedPane.addTab("Retired Staff Listing", staffListingPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(masterFileTabbedPane, gridBagConstraints);

        setBounds(0, 0, 798, 550);
    }// </editor-fold>//GEN-END:initComponents

    private void employeeSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeSearchTableMouseClicked
        // jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        employeeNumberTxt.setText(employeeSearchTable.getValueAt(employeeSearchTable.getSelectedRow(), 0).toString());
        //  jTextField3.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        editBtn.doClick();
        employeeSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_employeeSearchTableMouseClicked

    private void employeeSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_employeeSearchTxtCaretUpdate
        if (employeeSearchTxt.getCaretPosition() < 2) {

            System.out.println("Nothing");
        } else {
            employeeSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select employee_no,first_name||' '||middle_name||' '||last_name AS name,department from master_file where first_name||' '||middle_name||' '||last_name ILIKE '%" + employeeSearchTxt.getText() + "%' AND retired = false ORDER BY first_name||' '||middle_name||' '||last_name"));


            employeeSearchTable.setShowHorizontalLines(false);
            employeeSearchScrollPane.setViewportView(employeeSearchTable);


        }           // Add your handling code here:
    }//GEN-LAST:event_employeeSearchTxtCaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.firstNameTxt.getLocationOnScreen();

        employeeSearchDialog.setSize(700, 200);

        employeeSearchDialog.setLocation(point);

        employeeSearchDialog.setVisible(true);



    }  /*       private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
    int i = jTable1.getSelectedRow();



    /* try {
    //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
    java.sql.Statement pstmt = connectDB.createStatement();
    java.sql.ResultSet rs = pstmt.executeQuery("select first_name||' '||middle_name||' '||last_name from member where m_number = '"+cmbox.getSelectedItem()+"'");
    while (rs.next()){
    //jTextField4.setText(rs.getObject(1).toString());
    jTable1.setValueAt(rs.getObject(1),i,1);
    }
    } catch(java.sql.SQLException sqlex){
    System.out.println(sqlex.getMessage());
    }

     */

    //}
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.employeeSearchDialog.dispose();
    // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void cashChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashChkbxActionPerformed
        this.bankAccountDetailsPanel.setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_cashChkbxActionPerformed

    private void bankTransferChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankTransferChkbxActionPerformed
        this.bankAccountDetailsPanel.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_bankTransferChkbxActionPerformed

    private void bankNameCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankNameCmbxActionPerformed
        /*      try {
        java.sql.Statement stmt = connectDB.createStatement();
        java.sql.ResultSet rset = stmt.executeQuery("SELECT eo.description from hreducation_option eo,hreducation_specialisation es WHERE eo.sub_code = es.sub_code AND es.description = '"+jComboBox42.getSelectedItem()+"'");
        while (rset.next()){
        jTextField5.setText(rset.getObject(1).toString());
        }



        } catch (java.sql.SQLException sqe) {
        sqe.printStackTrace();
        System.out.println("Insert not successful");
        }
         */// Add your handling code here:
    }//GEN-LAST:event_bankNameCmbxActionPerformed

    private void jButton20221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20221ActionPerformed
        physicalAddressTxt.setText("");
        telephoneNumberTxt.setText("");
        townTxt.setText("");
        divisionTxt.setText("");
        mobileNumberTxt.setText("");
        estateTxt.setText("");
        locationTxt.setText("");
    //        jTextField49221.setText("");
    //        this.jComboBox5.setSelectedItem(null);
    // Add your handling code here:
    }//GEN-LAST:event_jButton20221ActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        pinNumberTxt.setText("");
        nhifNumberTxt.setText("");
        lascNumberTxt.setText("");
        nssfNumberTxt.setText("");
        employeeTermsTxt.setText("");

        helbTxt.setText("");
        basicPayTxt.setText("");
        taxReliefTxt.setText("");
        hourlyRateTxt.setText("");
        monthlyHoursTxt.setText("");
    //        jTextField5521.setText("");
    //        jTextField145.setText("");  // Add your handling code here:
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        dispose(); // Add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        employeeNumberTxt.setText("");

        this.employeeGradeCmbx.setSelectedItem(null);
        this.employeeGroupCmbx.setSelectedItem(null);
        this.departmentCmbx.setSelectedItem(null);
        this.sectionCmbx.setSelectedItem(null);
        firstNameTxt.setText("");
        designitionTxt.setText("");

        idPassportTxt.setText("");
        lastNameTxt.setText("");
        qualificationsTxt.setText("");
        middleNameTxt.setText("");
        employeeTermsTxt.setText("");

        helbTxt.setText("");
    // jTextField14.setText("");// Add your handling code here:
    }//GEN-LAST:event_clearBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // javax.swing.JFrame memb = new MasterFile(connectDB,pConnDB, jTextField91.getText());
        // memb.setVisible(true);

        String gender = null;
        String marital = null;
        String paymode = null;

        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("SELECT employee_no, first_name, middle_name, last_name, id_no," +
                    " birth_date," +
                    "nationality, trim(marital_status), trim(gender), date_employed, official_desgnation," +
                    "department, section, branch, employee_group, employee_grade," +
                    "pin_no, nhif_no, nssf_no, basic_pay, tax_relief, hourly_rate," +
                    "unused_relief, bank, bank_account_no, address, tel_no, town," +
                    "estate, mobile_no, division, district, village, lasc_no, date," +
                    "trim(payment_mode), nhifexempt, unionexempt, nssfexempt, payeexempt," +
                    "lascexempt, suspend, monthly_hours, company_name FROM master_file where employee_no = '" + employeeNumberTxt.getText() + "'");

            while (rset.next()) {
                //   jTextField91.setText(rset.getObject(1).toString());
                firstNameTxt.setText(dbObject.getDBObject(rset.getObject(2), "-"));
                middleNameTxt.setText(dbObject.getDBObject(rset.getObject(3), "-"));
                lastNameTxt.setText(dbObject.getDBObject(rset.getObject(4), "-"));
                idPassportTxt.setText(dbObject.getDBObject(rset.getObject(5), "-"));
                nationalityTxt.setText(dbObject.getDBObject(rset.getObject(7), "-"));
                gender = dbObject.getDBObject(rset.getObject(9), "-");
                marital = dbObject.getDBObject(rset.getObject(8), "-");
                paymode = dbObject.getDBObject(rset.getObject(36), "-");
                if (gender.equalsIgnoreCase("Male")) {
                    maleChkbx.setSelected(true);
                    femaleChkbx.setSelected(false);
                } else {
                    femaleChkbx.setSelected(true);
                    maleChkbx.setSelected(false);
                }
                if (marital.equalsIgnoreCase("Married")) {
                    marriedChkbx.setSelected(true);
                    singleChkbx.setSelected(false);
                } else {
                    singleChkbx.setSelected(true);
                    marriedChkbx.setSelected(false);
                }
                employmentDatePicker.setDate(rset.getDate("date_employed"));
                dobDatePicker.setDate(rset.getDate("birth_date"));
                designitionTxt.setText(dbObject.getDBObject(rset.getObject(11), "-"));

                departmentCmbx.setSelectedItem(dbObject.getDBObject(rset.getObject(12), "-"));
                sectionCmbx.setSelectedItem(dbObject.getDBObject(rset.getObject(13), "-"));
                bankBranchTxt.setText(dbObject.getDBObject(rset.getObject(14), "-"));
                employeeGroupCmbx.setSelectedItem(dbObject.getDBObject(rset.getObject(15), "-"));
                employeeGradeCmbx.setSelectedItem(dbObject.getDBObject(rset.getObject(16), "-"));
                pinNumberTxt.setText(dbObject.getDBObject(rset.getObject(17), "-"));
                nhifNumberTxt.setText(dbObject.getDBObject(rset.getObject(18), "-"));
                nssfNumberTxt.setText(dbObject.getDBObject(rset.getObject(19), "-"));

                basicPayTxt.setText(dbObject.getDBObject(rset.getObject(20), "0.00"));
                taxReliefTxt.setText(dbObject.getDBObject(rset.getObject(21), "0.00"));
                hourlyRateTxt.setText(dbObject.getDBObject(rset.getObject(22), "0.00"));
                bankNameCmbx.setSelectedItem(dbObject.getDBObject(rset.getObject(24), "-"));
                accountNumberTxt.setText(dbObject.getDBObject(rset.getObject(25), "-"));
                physicalAddressTxt.setText(dbObject.getDBObject(rset.getObject(26), "-"));

                telephoneNumberTxt.setText(dbObject.getDBObject(rset.getObject(27), "-"));
                townTxt.setText(dbObject.getDBObject(rset.getObject(28), "-"));
                estateTxt.setText(dbObject.getDBObject(rset.getObject(29), "-"));

                mobileNumberTxt.setText(dbObject.getDBObject(rset.getObject(30), "-"));
                divisionTxt.setText(dbObject.getDBObject(rset.getObject(31), "-"));
                districtTxt.setText(dbObject.getDBObject(rset.getObject(32), "-"));
                locationTxt.setText(dbObject.getDBObject(rset.getObject(33), "-"));
                lascNumberTxt.setText(dbObject.getDBObject(rset.getObject(34), "-"));

                if (paymode.equalsIgnoreCase("Cash")) {
                    cashChkbx.setSelected(true);
                    bankTransferChkbx.setSelected(false);
                    chequeChkbx.setSelected(false);
                } else {
                    if (paymode.equalsIgnoreCase("Cheque")) {
                        chequeChkbx.setSelected(true);
                        bankTransferChkbx.setSelected(false);
                        cashChkbx.setSelected(false);
                    } else {
                        bankTransferChkbx.setSelected(true);
                        chequeChkbx.setSelected(false);
                        cashChkbx.setSelected(false);
                    }
                }
                if (rset.getBoolean(37) == true) {
                    nhifChkbx.setSelected(true);
                } else {
                    nhifChkbx.setSelected(false);
                }
                if (rset.getBoolean(38) == true) {
                    unionChkbx.setSelected(true);
                } else {
                    unionChkbx.setSelected(false);
                }

                if (rset.getBoolean(39) == true) {
                    nssfChkbx.setSelected(true);
                } else {
                    nssfChkbx.setSelected(false);
                }
                if (rset.getBoolean(40) == true) {
                    providentFundChkbx.setSelected(true);
                } else {
                    providentFundChkbx.setSelected(false);
                }

                if (rset.getBoolean(41) == true) {
                    lascChkbx.setSelected(true);
                } else {
                    lascChkbx.setSelected(false);
                }
                if (rset.getBoolean(42) == true) {
                    suspendChkbx.setSelected(true);
                } else {
                    suspendChkbx.setSelected(false);
                }

                monthlyHoursTxt.setText(dbObject.getDBObject(rset.getObject(43), "0.00"));
                staffCategoryCmbx.setSelectedItem(dbObject.getDBObject(rset.getObject(44), "-"));
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);

            saveBtn.setLabel("Update");
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqe.getMessage());
            System.out.println("Insert not successful");
        }

// Add your handling code here:
    }//GEN-LAST:event_editBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);
        String selectedchkbx;
        String maritalchkbx;

        boolean nssf = false;
        boolean nhif = false;
        boolean union = false;
        boolean lasc = false;
        boolean provf = false;
        boolean suspend = false;


        if (nssfChkbx.isSelected()) {
            nssf = true;
        } else {
            nssf = false;
        }

        if (nhifChkbx.isSelected()) {
            nhif = true;
        } else {
            nhif = false;
        }
        if (unionChkbx.isSelected()) {
            union = true;
        } else {
            union = false;
        }
        if (lascChkbx.isSelected()) {
            lasc = true;
        } else {
            lasc = false;
        }

        if (providentFundChkbx.isSelected()) {
            provf = true;
        } else {
            provf = false;
        }

        if (suspendChkbx.isSelected()) {
            suspend = true;
        } else {
            suspend = false;
        }

        java.lang.String selectedchkbx1 = null;
        if (this.maleChkbx.isSelected()) {
            selectedchkbx = maleChkbx.getText();


        } else {
            // if (this.jCheckBox3.isSelected())
            selectedchkbx = femaleChkbx.getText();
        }

        if (this.marriedChkbx.isSelected()) {
            maritalchkbx = marriedChkbx.getText();


        } else // if (this.jCheckBox3.isSelected())
        {
            maritalchkbx = singleChkbx.getText();
        }


        if (this.bankTransferChkbx.isSelected()) {
            selectedchkbx1 = bankTransferChkbx.getText();

        } else if (this.cashChkbx.isSelected()) {
            selectedchkbx1 = cashChkbx.getText();
        } else if (this.chequeChkbx.isSelected()) {
            selectedchkbx1 = chequeChkbx.getText();
        }


        try {
            connectDB.setAutoCommit(false);

            if (saveBtn.getLabel().equalsIgnoreCase("Update")) {

                /*  java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("UPDATE master_file SET first_name = '"+jTextField502.getText()+"'," +
                "middle_name = '"+jTextField3.getText()+"'," +
                "last_name = '"+jTextField2.getText()+"', id_no = '"+jTextField56122.getText()+"'," +
                "birth_date = '"+datePicker1.getDate()+"', nationality = '"+jTextField12.getText()+"', marital_status = '"+maritalchkbx+"'," +
                "gender = '"+selectedchkbx+"', date_employed = '"+datePicker2.getDate()+"'," +
                "official_desgnation = '"+jTextField11.getText()+"', department = '"+jComboBox3.getSelectedItem()+"', " +
                "section = '"+jComboBox11.getSelectedItem()+"', branch = '"+jTextField9.getText()+"', employee_group = '"+jComboBox21.getSelectedItem()+"'," +
                "employee_grade = '"+jComboBox1.getSelectedItem()+"', pin_no = '"+jTextField5821.getText()+"', " +
                "nhif_no = '"+jTextField5021.getText()+"', nssf_no = '"+jTextField4921.getText()+"', basic_pay = '"+jTextField601.getText()+"'," +
                "tax_relief = '"+jTextField5411.getText()+"', hourly_rate = '"+jTextField5721.getText()+"'," +
                "bank = '"+jComboBox42.getSelectedItem()+"', bank_account_no = '"+jTextField5.getText()+"'," +
                "address = '"+jTextField58221.getText()+"', tel_no = '"+jTextField50221.getText()+"', town = '"+jTextField53221.getText()+"'," +
                "estate = '"+jTextField1.getText()+"', mobile_no = '"+jTextField6021.getText()+"', division = '"+jTextField54121.getText()+"'," +
                "district = '"+jTextField4.getText()+"', village = '"+jTextField56121.getText()+"', lasc_no = '"+jTextField5321.getText()+"', " +
                "payment_mode = '"+selectedchkbx1+"', nhifexempt = '"+nhif+"',unionexempt = '"+union+"'," +
                "nssfexempt = '"+nssf+"', payeexempt = '"+provf+"', lascexempt = '"+lasc+"', suspend = '"+suspend+"'," +
                "monthly_hours = '"+jTextField5611.getText()+"', company_name = '"+jComboBox12.getSelectedItem().toString()+"' WHERE employee_no = '"+jTextField91.getText()+"'");
                 */

                java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("UPDATE master_file SET first_name = ?," +
                        "middle_name = ?,last_name = ?, id_no = ?,birth_date = ?, nationality = ?, marital_status = ?," +
                        "gender = ?, date_employed = ?,official_desgnation = ?, department = ?, section = ?, branch = ?, " +
                        "employee_group = ?,employee_grade = ?, pin_no = ?,nhif_no = ?, nssf_no = ?, basic_pay = ?," +
                        "tax_relief = ?, hourly_rate = ?,bank = ?, bank_account_no = ?,address = ?, tel_no = ?, town = ?," +
                        "estate = ?, mobile_no = ?, division = ?,district = ?, village = ?, lasc_no = ?, payment_mode = ?, " +
                        "nhifexempt = ?,unionexempt = ?,nssfexempt = ?, payeexempt = ?, lascexempt = ?, suspend = ?," +
                        "monthly_hours = ?, company_name = ? WHERE employee_no = '" + employeeNumberTxt.getText() + "'");

                pstmtx.setString(1, firstNameTxt.getText());
                pstmtx.setString(2, middleNameTxt.getText());
                pstmtx.setString(3, lastNameTxt.getText());
                pstmtx.setString(4, idPassportTxt.getText());
                pstmtx.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dobDatePicker.getDate()));
                pstmtx.setString(6, nationalityTxt.getText());
                pstmtx.setString(7, selectedchkbx);
                pstmtx.setString(8, maritalchkbx);
                pstmtx.setDate(9, com.afrisoftech.lib.SQLDateFormat.getSQLDate(employmentDatePicker.getDate()));
                pstmtx.setString(10, designitionTxt.getText());
                pstmtx.setString(11, departmentCmbx.getSelectedItem().toString());
                pstmtx.setString(12, sectionCmbx.getSelectedItem().toString());
                pstmtx.setString(13, qualificationsTxt.getText());
                pstmtx.setString(14, employeeGroupCmbx.getSelectedItem().toString());
                pstmtx.setString(15, employeeGradeCmbx.getSelectedItem().toString());
                pstmtx.setString(16, pinNumberTxt.getText());
                pstmtx.setString(17, nhifNumberTxt.getText());
                pstmtx.setString(18, nssfNumberTxt.getText());
                pstmtx.setDouble(19, java.lang.Double.valueOf(basicPayTxt.getText()));
                pstmtx.setDouble(20, java.lang.Double.valueOf(taxReliefTxt.getText()));
                pstmtx.setDouble(21, java.lang.Double.valueOf(hourlyRateTxt.getText()));
                pstmtx.setObject(22, bankNameCmbx.getSelectedItem());
                pstmtx.setString(23, accountNumberTxt.getText());
                pstmtx.setString(24, physicalAddressTxt.getText());
                pstmtx.setString(25, telephoneNumberTxt.getText());
                pstmtx.setString(26, townTxt.getText());
                pstmtx.setString(27, estateTxt.getText());
                pstmtx.setString(28, mobileNumberTxt.getText());
                pstmtx.setString(29, divisionTxt.getText());
                pstmtx.setString(30, districtTxt.getText());
                pstmtx.setString(31, locationTxt.getText());
                pstmtx.setString(32, lascNumberTxt.getText());
                pstmtx.setString(33, selectedchkbx1);
                pstmtx.setBoolean(34, nhif);
                pstmtx.setBoolean(35, union);
                pstmtx.setBoolean(36, nssf);
                pstmtx.setBoolean(37, provf);
                pstmtx.setBoolean(38, lasc);
                pstmtx.setBoolean(39, suspend);
                pstmtx.setDouble(40, java.lang.Double.valueOf(monthlyHoursTxt.getText()));
                pstmtx.setString(41, staffCategoryCmbx.getSelectedItem().toString());
                pstmtx.executeUpdate();

                java.sql.PreparedStatement pstmtxS = connectDB.prepareStatement(" UPDATE allowances_benefits SET staff_name=?, department=?,company_name=? WHERE staff_no = '" + employeeNumberTxt.getText() + "'");

                pstmtxS.setString(1, firstNameTxt.getText() + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
                pstmtxS.setObject(2, departmentCmbx.getSelectedItem());
                pstmtxS.setObject(3, staffCategoryCmbx.getSelectedItem());
                pstmtxS.executeUpdate();

                java.sql.PreparedStatement pstmtxSs = connectDB.prepareStatement(" UPDATE posting SET staff_name=?,company_name=? WHERE staff_no = '" + employeeNumberTxt.getText() + "'");

                pstmtxSs.setString(1, firstNameTxt.getText() + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
                pstmtxSs.setObject(2, staffCategoryCmbx.getSelectedItem());
                pstmtxSs.executeUpdate();

                java.sql.PreparedStatement pstmtxSs1 = connectDB.prepareStatement(" UPDATE posting_journal SET staff_name=?, company_name=? WHERE staff_no = '" + employeeNumberTxt.getText() + "'");

                pstmtxSs1.setString(1, firstNameTxt.getText() + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
                pstmtxSs1.setObject(2, staffCategoryCmbx.getSelectedItem());
                pstmtxSs1.executeUpdate();

                java.sql.PreparedStatement ps = connectDB.prepareStatement(" UPDATE tax_card SET company_name=? WHERE staff_no = '" + employeeNumberTxt.getText() + "'");

                ps.setObject(1, staffCategoryCmbx.getSelectedItem());
                ps.executeUpdate();


                java.sql.PreparedStatement pstm = connectDB.prepareStatement("UPDATE sacco_deductions SET staff_name =?, company_name =? WHERE staff_no = '" + employeeNumberTxt.getText() + "'");

                pstm.setString(1, firstNameTxt.getText() + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
                pstm.setObject(2, staffCategoryCmbx.getSelectedItem());
                pstm.executeUpdate();
                javax.swing.JOptionPane.showMessageDialog(this, "Data updated successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                saveBtn.setLabel("Save");

            } else {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into master_file values(?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                if (employeeNumberTxt.getText().equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Enter employee no.", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                } else {
                    pstmt.setString(1, employeeNumberTxt.getText());
                }
                if (firstNameTxt.getText().equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Enter first name", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                } else {
                    pstmt.setString(2, firstNameTxt.getText());
                }

                pstmt.setString(3, middleNameTxt.getText());
                pstmt.setString(4, lastNameTxt.getText());
                pstmt.setString(5, idPassportTxt.getText());
                pstmt.setDate(6, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dobDatePicker.getDate()));
                pstmt.setString(7, nationalityTxt.getText());
                pstmt.setString(9, selectedchkbx);
                pstmt.setString(8, maritalchkbx);
                pstmt.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(employmentDatePicker.getDate()));
                pstmt.setString(11, designitionTxt.getText());
                pstmt.setString(12, departmentCmbx.getSelectedItem().toString());
                pstmt.setString(13, sectionCmbx.getSelectedItem().toString());
                pstmt.setString(14, qualificationsTxt.getText());
                pstmt.setString(15, employeeGroupCmbx.getSelectedItem().toString());
                pstmt.setString(16, employeeGradeCmbx.getSelectedItem().toString());
                pstmt.setString(17, pinNumberTxt.getText());
                pstmt.setString(18, nhifNumberTxt.getText());
                pstmt.setString(19, lascNumberTxt.getText());
                if (basicPayTxt.getText().equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Enter Basic Pay", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                } else {
                    pstmt.setDouble(20, java.lang.Double.valueOf(basicPayTxt.getText()));
                }
                if (taxReliefTxt.getText().equals("")) {
                    pstmt.setDouble(21, 0.00);
                } else {
                    pstmt.setDouble(21, java.lang.Double.valueOf(taxReliefTxt.getText()));
                }

                if (hourlyRateTxt.getText().equals("")) {
                    pstmt.setDouble(22, 0.00);
                } else {
                    pstmt.setDouble(22, java.lang.Double.valueOf(hourlyRateTxt.getText()));

                }
                // if(jTextField5611.getText().equals("")){
                pstmt.setDouble(23, 0.00);


                if (bankTransferChkbx.isSelected()) {
                    pstmt.setObject(24, bankNameCmbx.getSelectedItem());
                    pstmt.setString(25, accountNumberTxt.getText());
                } else {
                    pstmt.setString(24, "");
                    pstmt.setString(25, "");
                }
                pstmt.setString(26, physicalAddressTxt.getText());
                pstmt.setString(27, telephoneNumberTxt.getText());
                pstmt.setString(28, townTxt.getText());
                pstmt.setString(29, estateTxt.getText());
                pstmt.setString(30, mobileNumberTxt.getText());
                pstmt.setString(31, divisionTxt.getText());
                pstmt.setString(32, districtTxt.getText());
                pstmt.setString(33, locationTxt.getText());
                pstmt.setString(34, nssfNumberTxt.getText());
                pstmt.setDate(35, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                pstmt.setString(36, selectedchkbx1);
                pstmt.setBoolean(37, nhifChkbx.isSelected());
                pstmt.setBoolean(38, unionChkbx.isSelected());
                pstmt.setBoolean(39, nssfChkbx.isSelected());
                pstmt.setBoolean(40, providentFundChkbx.isSelected());
                pstmt.setBoolean(41, lascChkbx.isSelected());
                pstmt.setBoolean(42, suspendChkbx.isSelected());
                if (monthlyHoursTxt.getText().equals("")) {
                    pstmt.setDouble(43, 180);
                } else {
                    pstmt.setDouble(43, java.lang.Double.valueOf(monthlyHoursTxt.getText()));

                }
                pstmt.setString(44, staffCategoryCmbx.getSelectedItem().toString());
                // pstmt.setString(34,jTextField4921.getText());
                // jCheckBox8.isSelected()
                pstmt.executeUpdate();
                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into allowances_benefits values(?,?,?,?,?,?,?,?,?)");
                pstmt2.setString(1, employeeNumberTxt.getText());
                pstmt2.setString(2, firstNameTxt.getText() + " " + middleNameTxt.getText() + " " + lastNameTxt.getText());
                pstmt2.setObject(3, employeeGradeCmbx.getSelectedItem());
                pstmt2.setString(4, "BASIC PAY");
                pstmt2.setDouble(5, java.lang.Double.valueOf(basicPayTxt.getText()));
                pstmt2.setObject(6, departmentCmbx.getSelectedItem());
                pstmt2.setString(7, "Earning");
                pstmt2.setBoolean(8, false);
                pstmt2.setObject(9, staffCategoryCmbx.getSelectedItem());
                pstmt2.executeUpdate();
                connectDB.commit();
                connectDB.setAutoCommit(true);

                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                physicalAddressTxt.setText("");
                telephoneNumberTxt.setText("");
                townTxt.setText("");
                divisionTxt.setText("");
                mobileNumberTxt.setText("");
                estateTxt.setText("");
                locationTxt.setText("");
                pinNumberTxt.setText("");
                nhifNumberTxt.setText("");
                lascNumberTxt.setText("");
                nssfNumberTxt.setText("");
                basicPayTxt.setText("");
                taxReliefTxt.setText("");
                hourlyRateTxt.setText("");
                monthlyHoursTxt.setText("");
                employeeNumberTxt.setText("");
                employeeTermsTxt.setText("");
                helbTxt.setText("");
                this.employeeGradeCmbx.setSelectedItem(null);
                this.employeeGroupCmbx.setSelectedItem(null);
                this.departmentCmbx.setSelectedItem(null);
                this.sectionCmbx.setSelectedItem(null);
                firstNameTxt.setText("");
                designitionTxt.setText("");
                idPassportTxt.setText("");
                lastNameTxt.setText("");
                qualificationsTxt.setText("");
                middleNameTxt.setText("");
                saveBtn.setLabel("Save");
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            sq.printStackTrace();

        }


    // Add your handling code here:
    }//GEN-LAST:event_saveBtnActionPerformed

    private void employeeSearchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeSearchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeSearchTxtActionPerformed

    private void staffListingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffListingTableMouseClicked

        employeeNumberTxt.setText(this.staffListingTable.getValueAt(staffListingTable.getSelectedRow(), 0).toString());
        
        editBtn.doClick();
        
        this.masterFileTabbedPane.setSelectedIndex(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_staffListingTableMouseClicked

    private void staffReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffReportBtnActionPerformed
   masterFileTabbedPane.setSelectedIndex(3);
        com.afrisoftech.hr.StaffListPdf list = new com.afrisoftech.hr.StaffListPdf();
    list.StaffListPdf(connectDB);   
        // TODO add your handling code here:
    }//GEN-LAST:event_staffReportBtnActionPerformed

    private void retireBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retireBtnActionPerformed
              
        try{
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("update master_file set retired = ?, retire_date = ? WHERE employee_no = ?");
            pstmt.setBoolean(1, true);
            pstmt.setDate(2, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
            pstmt.setString(3, employeeNumberTxt.getText());
            pstmt.executeUpdate();
            retiredStaffListingTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT employee_no, first_name, middle_name, last_name, id_no,  pin_no, gender, department, section, date_employed, date_of_post as posting_date, official_desgnation as designation, retire_date from master_file where retired = true order by employee_no"));
            javax.swing.JOptionPane.showMessageDialog(this, firstNameTxt.getText()+" "+middleNameTxt.getText()+" "+lastNameTxt.getText()+" retired successfully from the masterfile database.");
        } catch(java.sql.SQLException ex){
            ex.printStackTrace();
        }
            
            // TODO add your handling code here:
    }//GEN-LAST:event_retireBtnActionPerformed

    private void retiredStaffListingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retiredStaffListingTableMouseClicked
      // masterFileTabbedPane.setSelectedIndex(4); // TODO add your handling code here:
    }//GEN-LAST:event_retiredStaffListingTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        masterFileTabbedPane.setSelectedIndex(4);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator Separator;
    private javax.swing.JLabel accountNumberLbl;
    private javax.swing.JTextField accountNumberTxt;
    private javax.swing.JPanel addressDetailsPanel;
    private javax.swing.JPanel adressDetailsTabbedPane;
    private javax.swing.JPanel bankAccountDetailsPanel;
    private javax.swing.JTextField bankBranchTxt;
    private javax.swing.JLabel bankBranchlbl;
    private javax.swing.JTextField bankCodeTxt;
    private javax.swing.JLabel bankCodelbl;
    private javax.swing.JComboBox bankNameCmbx;
    private javax.swing.JLabel bankNameLbl;
    private javax.swing.JCheckBox bankTransferChkbx;
    private javax.swing.JLabel basicPayLbl;
    private javax.swing.JTextField basicPayTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JCheckBox cashChkbx;
    private javax.swing.JCheckBox chequeChkbx;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JComboBox departmentCmbx;
    private javax.swing.JLabel departmentLbl;
    private javax.swing.JLabel designitionLbl;
    private javax.swing.JTextField designitionTxt;
    private javax.swing.JLabel districtLbl;
    private javax.swing.JTextField districtTxt;
    private javax.swing.JLabel divisionLbl;
    private javax.swing.JTextField divisionTxt;
    private com.afrisoftech.lib.DatePicker dobDatePicker;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JButton editBtn;
    private javax.swing.JComboBox employeeGradeCmbx;
    private javax.swing.JLabel employeeGradeLbl;
    private javax.swing.JComboBox employeeGroupCmbx;
    private javax.swing.JLabel employeeGroupLbl;
    private javax.swing.JLabel employeeNumberLbl;
    private javax.swing.JTextField employeeNumberTxt;
    private javax.swing.JDialog employeeSearchDialog;
    private javax.swing.JPanel employeeSearchPanel;
    private javax.swing.JScrollPane employeeSearchScrollPane;
    private javax.swing.JTable employeeSearchTable;
    private javax.swing.JTextField employeeSearchTxt;
    private javax.swing.JLabel employeeTermsLbl;
    private javax.swing.JTextField employeeTermsTxt;
    private javax.swing.JLabel employmentDateLbl;
    private com.afrisoftech.lib.DatePicker employmentDatePicker;
    private javax.swing.JPanel employmentDetailsPanel;
    private javax.swing.JPanel emplyeeDetailsPanel;
    private javax.swing.JLabel estateLbl;
    private javax.swing.JTextField estateTxt;
    private javax.swing.JCheckBox femaleChkbx;
    private javax.swing.JLabel firstNameLbl;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JPanel genderSelectionPanel;
    private javax.swing.JLabel helbLbl;
    private javax.swing.JTextField helbTxt;
    private javax.swing.JLabel hourlyRateLbl;
    private javax.swing.JTextField hourlyRateTxt;
    private javax.swing.JPanel idDetailsPanel;
    private javax.swing.JLabel idPassportLbl;
    private javax.swing.JTextField idPassportTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton20221;
    private javax.swing.JButton jButton52;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JSeparator jSeparator7121;
    private javax.swing.JCheckBox lascChkbx;
    private javax.swing.JLabel lascNumberLbl;
    private javax.swing.JTextField lascNumberTxt;
    private javax.swing.JLabel lastNameLbl;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JLabel locationLbl;
    private javax.swing.JTextField locationTxt;
    private javax.swing.JCheckBox maleChkbx;
    private javax.swing.JPanel maritalStatusPanel;
    private javax.swing.JCheckBox marriedChkbx;
    private javax.swing.JTabbedPane masterFileTabbedPane;
    private javax.swing.JLabel middleNameLbl;
    private javax.swing.JTextField middleNameTxt;
    private javax.swing.JLabel mobileNumberLbl;
    private javax.swing.JTextField mobileNumberTxt;
    private javax.swing.JLabel monthlyHoursLbl;
    private javax.swing.JTextField monthlyHoursTxt;
    private javax.swing.JLabel nationalityLbl;
    private javax.swing.JTextField nationalityTxt;
    private javax.swing.JCheckBox nhifChkbx;
    private javax.swing.JLabel nhifNumberLbl;
    private javax.swing.JTextField nhifNumberTxt;
    private javax.swing.JCheckBox nssfChkbx;
    private javax.swing.JLabel nssfNumberLbl;
    private javax.swing.JTextField nssfNumberTxt;
    private javax.swing.JPanel paymentDetailsPanel;
    private javax.swing.JPanel paymentModePanel;
    private javax.swing.JPanel personalInformationTabbedPanel;
    private javax.swing.JLabel physicalAddressLbl;
    private javax.swing.JTextField physicalAddressTxt;
    private javax.swing.JLabel pinNumberLbl;
    private javax.swing.JTextField pinNumberTxt;
    private javax.swing.JCheckBox providentFundChkbx;
    private javax.swing.JLabel qualificationLbl;
    private javax.swing.JTextField qualificationsTxt;
    private javax.swing.JButton retireBtn;
    private javax.swing.JTable retiredStaffListingTable;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox sectionCmbx;
    private javax.swing.JLabel sectionLbl;
    private javax.swing.JCheckBox singleChkbx;
    private javax.swing.JLabel spacerlabel;
    private javax.swing.JComboBox staffCategoryCmbx;
    private javax.swing.JLabel staffCategoryLbl;
    private javax.swing.JPanel staffCategoryPanel;
    private javax.swing.JPanel staffListingPanel;
    private javax.swing.JPanel staffListingPanel1;
    private javax.swing.JScrollPane staffListingScrollPane;
    private javax.swing.JScrollPane staffListingScrollPane1;
    private javax.swing.JTable staffListingTable;
    private javax.swing.JButton staffReportBtn;
    private javax.swing.JPanel statutoryBodiesPanel;
    private javax.swing.JPanel statutoryDetailsPane;
    private javax.swing.JCheckBox suspendChkbx;
    private javax.swing.JLabel taxReliefLbl;
    private javax.swing.JTextField taxReliefTxt;
    private javax.swing.JLabel telephoneNumberLbl;
    private javax.swing.JTextField telephoneNumberTxt;
    private javax.swing.JLabel townLbl;
    private javax.swing.JTextField townTxt;
    private javax.swing.JCheckBox unionChkbx;
    // End of variables declaration//GEN-END:variables
}
