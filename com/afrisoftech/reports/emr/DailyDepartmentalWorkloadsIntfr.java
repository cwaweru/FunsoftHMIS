/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.reports.emr;

import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author root
 */
public class DailyDepartmentalWorkloadsIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;

    /**
     * Creates new form DailyDepartmentalWorkloadsIntfr
     */
    public DailyDepartmentalWorkloadsIntfr(java.sql.Connection connDB) {

        connectDB = connDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        workloadsActionPanel = new javax.swing.JPanel();
        spacerLbl = new javax.swing.JLabel();
        generateReportBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        workloadsHeaderPanel = new javax.swing.JPanel();
        startDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        startDatePickerLbl = new javax.swing.JLabel();
        endDatePickerLbl = new javax.swing.JLabel();
        workloadsReportPanel = new javax.swing.JPanel();
        workloadsScrollPane = new javax.swing.JScrollPane();
        workloadsTable = new com.afrisoftech.dbadmin.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Departmental Workloads");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        workloadsActionPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        workloadsActionPanel.add(spacerLbl, gridBagConstraints);

        generateReportBtn.setText("Generate workloads report");
        generateReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        workloadsActionPanel.add(generateReportBtn, gridBagConstraints);

        closeBtn.setText("Close form");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        workloadsActionPanel.add(closeBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(workloadsActionPanel, gridBagConstraints);

        workloadsHeaderPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        workloadsHeaderPanel.add(startDatePicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        workloadsHeaderPanel.add(endDatePicker, gridBagConstraints);

        startDatePickerLbl.setText("Start Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        workloadsHeaderPanel.add(startDatePickerLbl, gridBagConstraints);

        endDatePickerLbl.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        workloadsHeaderPanel.add(endDatePickerLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(workloadsHeaderPanel, gridBagConstraints);

        workloadsReportPanel.setLayout(new java.awt.GridBagLayout());

        workloadsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        workloadsScrollPane.setViewportView(workloadsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        workloadsReportPanel.add(workloadsScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        getContentPane().add(workloadsReportPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed

        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    private void generateReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateReportBtnActionPerformed

        generateWorkloadsReport(startDatePicker.getDate(), endDatePicker.getDate());

        // TODO add your handling code here:
    }//GEN-LAST:event_generateReportBtnActionPerformed

    private void generateWorkloadsReport(Date startDate, Date endDate) {

        java.util.Vector columnsVector = new java.util.Vector(1, 1);

        int index = 1;

        java.util.Vector rowsVector = new java.util.Vector(1, 1);

        columnsVector.add("Index");
        columnsVector.add("Department");
        columnsVector.add("Workload/Count");

        try {

            java.sql.PreparedStatement pstmtWorkloads = connectDB.prepareStatement("SELECT clinic, count(DISTINCT patient_no) FROM hp_patient_visit WHERE clinic IS NOT NULL AND date BETWEEN ? AND ? GROUP BY 1 ORDER BY 1");
            
            pstmtWorkloads.setDate(1, com.afrisoftech.lib.SQLDateFormat.getSQLDate(startDate));
            pstmtWorkloads.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDate));
            
            java.sql.ResultSet rsetWorkloads = pstmtWorkloads.executeQuery();
            while(rsetWorkloads.next()){
                java.util.Vector rowDataVector = new java.util.Vector(1,1);
                rowDataVector.add(index);
                rowDataVector.add(rsetWorkloads.getString(1));
                rowDataVector.add(rsetWorkloads.getInt(2));
                rowsVector.add(rowDataVector);
                index++;
            }
            java.sql.PreparedStatement pstmtWorkloadsDiag = connectDB.prepareStatement("SELECT UPPER(revenue_code) as clinic, count(DISTINCT patient_no) as counts FROM pb_doctors_request WHERE revenue_code IS NOT NULL AND trans_date::date BETWEEN ? AND ? AND (revenue_code ilike '%ray%' or revenue_code ilike 'radiology' OR revenue_code ilike '%lab%' OR revenue_code ilike '%pharm%') "
                    + " GROUP BY 1 ORDER BY 1");

            pstmtWorkloadsDiag.setDate(1, com.afrisoftech.lib.SQLDateFormat.getSQLDate(startDate));
            pstmtWorkloadsDiag.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDate));
//            pstmtWorkloads.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(startDate));
//            pstmtWorkloads.setDate(4, com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDate));
            
            java.sql.ResultSet rsetWorkloadsDiag = pstmtWorkloadsDiag.executeQuery();
            
            while (rsetWorkloadsDiag.next()) {
                java.util.Vector rowDataVector = new java.util.Vector(1, 1);
                rowDataVector.add(index);
                rowDataVector.add(rsetWorkloadsDiag.getString(1));
                rowDataVector.add(rsetWorkloadsDiag.getInt(2));
                rowsVector.add(rowDataVector);
                index++;
            }

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

        }

        workloadsTable.setModel(new javax.swing.table.DefaultTableModel(rowsVector, columnsVector));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JLabel endDatePickerLbl;
    private javax.swing.JButton generateReportBtn;
    private javax.swing.JLabel spacerLbl;
    private com.afrisoftech.lib.DatePicker startDatePicker;
    private javax.swing.JLabel startDatePickerLbl;
    private javax.swing.JPanel workloadsActionPanel;
    private javax.swing.JPanel workloadsHeaderPanel;
    private javax.swing.JPanel workloadsReportPanel;
    private javax.swing.JScrollPane workloadsScrollPane;
    private javax.swing.JTable workloadsTable;
    // End of variables declaration//GEN-END:variables

}
