/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.reports.emr;

/**
 *
 * @author Charles Waweru <cwaweru@systempartners.biz>
 */
public class GISReporter extends javax.swing.JInternalFrame {

    /**
     * Creates new form GISReporter
     */
    java.sql.Connection connectDB = null;

    public GISReporter(java.sql.Connection connDB) {
        connectDB = connDB;
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) mapInternalFrame.getUI()).setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headerPanel = new javax.swing.JPanel();
        indicatorCmbx = new javax.swing.JComboBox();
        beginDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        refreshGISReportBtn = new javax.swing.JButton();
        printReportBtn = new javax.swing.JButton();
        saveReportBtn = new javax.swing.JButton();
        morbidityCmbx = new javax.swing.JComboBox();
        mapInternalFrame = new javax.swing.JInternalFrame();
        mapReportPanel = new com.roots.map.MapPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Funsoft Healthcare GIS Reporting Tool");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        headerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Indicator and Date Range"));
        headerPanel.setLayout(new java.awt.GridBagLayout());

        indicatorCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Attendance", "Morbidity", "Employee Distribution" }));
        indicatorCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Monitored Indicator"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(indicatorCmbx, gridBagConstraints);

        beginDatePicker.setBorder(javax.swing.BorderFactory.createTitledBorder("Begin Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(beginDatePicker, gridBagConstraints);

        endDatePicker.setBorder(javax.swing.BorderFactory.createTitledBorder("End Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(endDatePicker, gridBagConstraints);

        refreshGISReportBtn.setText("Refresh Report");
        refreshGISReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshGISReportBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(refreshGISReportBtn, gridBagConstraints);

        printReportBtn.setText("Print Report");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(printReportBtn, gridBagConstraints);

        saveReportBtn.setText("Save Report");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(saveReportBtn, gridBagConstraints);

        morbidityCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT initcap(disease) FROM hp_patient_diagnosis")
        );
        morbidityCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Morbidity Indicators"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(morbidityCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(headerPanel, gridBagConstraints);

        mapInternalFrame.setVisible(true);
        mapInternalFrame.getContentPane().setLayout(new java.awt.GridBagLayout());

        mapReportPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Funsoft Healthcare Geographic Information System (GIS)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 11), new java.awt.Color(102, 102, 255))); // NOI18N
        mapReportPanel.setMapPosition(new java.awt.Point(9655, 8084));
        mapReportPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapReportPanelMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        mapInternalFrame.getContentPane().add(mapReportPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        getContentPane().add(mapInternalFrame, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshGISReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshGISReportBtnActionPerformed
        // mapFrame.set
        //com.roots.map.MapPanel.TileServer tileServer = new com.roots.map.MapPanel.TileServer("maps.google.com/map", 8);
        mapReportPanel.getSearchPanel().setVisible(true);
       // mapReportPanel1.setTileServer();
        final com.roots.map.overlay.DemoGlassPane glassPane = new com.roots.map.overlay.DemoGlassPane(mapReportPanel);
        
        glassPane.addPointToMark(new java.awt.Point.Double(37.30957, -1.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(38.70957, 1.49628));
        glassPane.addPointToMark(new java.awt.Point.Double(36.30957, -2.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(38.30957, -1.59628));
        glassPane.addPointToMark(new java.awt.Point.Double(32.30957, 0.59628));
        glassPane.addPointToMark(new java.awt.Point.Double(35.10957, -1.49628));
        glassPane.addPointToMark(new java.awt.Point.Double(36.30957, -0.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(38.30957, 1.59628));
        glassPane.addPointToMark(new java.awt.Point.Double(39.00957, 5.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(37.70957, -1.49628));
        glassPane.addPointToMark(new java.awt.Point.Double(36.30957, 2.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(35.30957, 0.09628));
        glassPane.addPointToMark(new java.awt.Point.Double(37.30957, 1.79628));
        glassPane.addPointToMark(new java.awt.Point.Double(34.70957, 2.49628));
        glassPane.addPointToMark(new java.awt.Point.Double(36.30957, 2.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(38.30957, -1.59628));
        glassPane.addPointToMark(new java.awt.Point.Double(35.30957, 3.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(36.20957, 0.49628));
        glassPane.addPointToMark(new java.awt.Point.Double(34.30957, -0.29628));
        glassPane.addPointToMark(new java.awt.Point.Double(39.30957, -3.59628));

        mapInternalFrame.setGlassPane(glassPane);

        mapInternalFrame.getGlassPane().setVisible(true);

        this.validate();

        // TODO add your handling code here:
    }//GEN-LAST:event_refreshGISReportBtnActionPerformed

    private void mapReportPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapReportPanelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_mapReportPanelMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker beginDatePicker;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JComboBox indicatorCmbx;
    private javax.swing.JInternalFrame mapInternalFrame;
    private com.roots.map.MapPanel mapReportPanel;
    private javax.swing.JComboBox morbidityCmbx;
    private javax.swing.JButton printReportBtn;
    private javax.swing.JButton refreshGISReportBtn;
    private javax.swing.JButton saveReportBtn;
    // End of variables declaration//GEN-END:variables
}
