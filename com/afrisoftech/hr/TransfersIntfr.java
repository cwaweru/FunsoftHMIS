/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hr;

import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author afro
 */
public class TransfersIntfr extends javax.swing.JInternalFrame {
    java.sql.Connection connectDB = null;    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    com.afrisoftech.lib.DBObject dbObject;

    /**
     * Creates new form TransfersIntfr
     * @param connDb
     * @param pconnDB
     */
    public TransfersIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        connectDB = connDb;
        pConnDB = pconnDB;
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        initComponents();
        populateCmbox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        employeeSearchDialog = new javax.swing.JDialog();
        employeeSearchDialogPanel = new javax.swing.JPanel();
        searchEmployeeNumbTxt = new javax.swing.JTextField();
        searchEmployeeScrollPane = new javax.swing.JScrollPane();
        searchEmployeeTable = new com.afrisoftech.dbadmin.JTable();
        searchEmployeeBtn = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        searchEmployeePanel = new javax.swing.JPanel();
        employeeNumbLbl = new javax.swing.JLabel();
        nameNoSearchPanel = new javax.swing.JPanel();
        employeeNoTxt = new javax.swing.JTextField();
        nameNoSearchBtn = new javax.swing.JButton();
        currentEmployeeDetailsPanel = new javax.swing.JPanel();
        employeeDivisionTxt = new javax.swing.JTextField();
        employeeDepartmentTxt = new javax.swing.JTextField();
        employeeSectionTxt = new javax.swing.JTextField();
        employeeNameTxt = new javax.swing.JTextField();
        updateBtnPanel = new javax.swing.JPanel();
        updateBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        comboxPanel = new javax.swing.JPanel();
        divisionCmbx = new javax.swing.JComboBox();
        departmentCmbx = new javax.swing.JComboBox();
        sectionCmbx = new javax.swing.JComboBox();

        employeeSearchDialog.setModal(true);
        employeeSearchDialog.setUndecorated(true);
        employeeSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        employeeSearchDialogPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        employeeSearchDialogPanel.setLayout(new java.awt.GridBagLayout());

        searchEmployeeNumbTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchEmployeeNumbTxtCaretUpdate(evt);
            }
        });
        searchEmployeeNumbTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmployeeNumbTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        employeeSearchDialogPanel.add(searchEmployeeNumbTxt, gridBagConstraints);

        searchEmployeeTable.setToolTipText("Click on the target row to select the patient from the search.");
        searchEmployeeTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = searchEmployeeTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchEmployeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchEmployeeTableMouseClicked(evt);
            }
        });
        searchEmployeeScrollPane.setViewportView(searchEmployeeTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        employeeSearchDialogPanel.add(searchEmployeeScrollPane, gridBagConstraints);

        searchEmployeeBtn.setText("Dispose");
        searchEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmployeeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employeeSearchDialogPanel.add(searchEmployeeBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        employeeSearchDialog.getContentPane().add(employeeSearchDialogPanel, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Hospital Division, Department and Section Transfers");
        setPreferredSize(new java.awt.Dimension(650, 460));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        searchEmployeePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search for the Employee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        searchEmployeePanel.setLayout(new java.awt.GridBagLayout());

        employeeNumbLbl.setText("Employee Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        searchEmployeePanel.add(employeeNumbLbl, gridBagConstraints);

        nameNoSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nameNoSearchPanel.setLayout(new java.awt.GridBagLayout());

        employeeNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        nameNoSearchPanel.add(employeeNoTxt, gridBagConstraints);

        nameNoSearchBtn.setToolTipText("Click to Search for the Employee using Employee Number or ID");
        nameNoSearchBtn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nameNoSearchBtn.setMaximumSize(new java.awt.Dimension(74, 53));
        nameNoSearchBtn.setMinimumSize(new java.awt.Dimension(74, 53));
        nameNoSearchBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nameNoSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameNoSearchBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        nameNoSearchPanel.add(nameNoSearchBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        searchEmployeePanel.add(nameNoSearchPanel, gridBagConstraints);

        currentEmployeeDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Current Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
        currentEmployeeDetailsPanel.setLayout(new java.awt.GridBagLayout());

        employeeDivisionTxt.setEditable(false);
        employeeDivisionTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Division", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 51, 255)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 10);
        currentEmployeeDetailsPanel.add(employeeDivisionTxt, gridBagConstraints);

        employeeDepartmentTxt.setEditable(false);
        employeeDepartmentTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 51, 255)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 10);
        currentEmployeeDetailsPanel.add(employeeDepartmentTxt, gridBagConstraints);

        employeeSectionTxt.setEditable(false);
        employeeSectionTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 10);
        currentEmployeeDetailsPanel.add(employeeSectionTxt, gridBagConstraints);

        employeeNameTxt.setEditable(false);
        employeeNameTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name of Employee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        currentEmployeeDetailsPanel.add(employeeNameTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        searchEmployeePanel.add(currentEmployeeDetailsPanel, gridBagConstraints);

        updateBtnPanel.setLayout(new java.awt.GridBagLayout());

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        updateBtnPanel.add(updateBtn, gridBagConstraints);

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        updateBtnPanel.add(clearBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        searchEmployeePanel.add(updateBtnPanel, gridBagConstraints);

        comboxPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transfer Employee to Select (Division, Department & Section)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        comboxPanel.setLayout(new java.awt.GridBagLayout());

        divisionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        divisionCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Division", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 51, 255)));
        divisionCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        comboxPanel.add(divisionCmbx, gridBagConstraints);

        departmentCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        departmentCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 51, 255)));
        departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        comboxPanel.add(departmentCmbx, gridBagConstraints);

        sectionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sectionCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        comboxPanel.add(sectionCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        searchEmployeePanel.add(comboxPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        mainPanel.add(searchEmployeePanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void divisionCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionCmbxActionPerformed
        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT department FROM master_file "
            + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' ORDER BY department"));
    departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            departmentCmbxActionPerformed(evt);
        }
        });

        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM master_file "
            + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' AND department = '"+departmentCmbx.getSelectedItem()+"' ORDER BY section"));
    sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            sectionCmbxActionPerformed(evt);
        }
        });
    }//GEN-LAST:event_divisionCmbxActionPerformed

    private void departmentCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentCmbxActionPerformed
        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM master_file "
            + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' AND department = '"+departmentCmbx.getSelectedItem()+"' ORDER BY section"));
    sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            sectionCmbxActionPerformed(evt);
        }
        });
    }//GEN-LAST:event_departmentCmbxActionPerformed

    private void sectionCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionCmbxActionPerformed
        
    }//GEN-LAST:event_sectionCmbxActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        if (employeeNoTxt.getText().equals("") || employeeNameTxt.getText().equals("")  || employeeDivisionTxt.getText().equals("") 
                || employeeDepartmentTxt.getText().equals("") || employeeSectionTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Search for the Employee first.", "Empty Fields Noted", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                connectDB.setAutoCommit(false);

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE master_file"
                    + " SET division = '"+divisionCmbx.getSelectedItem().toString().trim()+"', "
                        + "department = '"+departmentCmbx.getSelectedItem().toString().trim()+"', "
                        + "section = '"+sectionCmbx.getSelectedItem().toString().trim()+"' "
                    + " WHERE employee_no = '"+employeeNoTxt.getText().trim()+"'");

                pstmt.executeUpdate();
                connectDB.commit();
                connectDB.setAutoCommit(true);

                System.out.print("\nUpdate success.");
                
                clear();
                
                JOptionPane.showMessageDialog(null, "The Employee details have been updated successfully.", "Update Success!!!", JOptionPane.INFORMATION_MESSAGE);

            } catch (java.lang.Exception sq) {

                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println("Ati What? ---> "+sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
       clear();

    }//GEN-LAST:event_clearBtnActionPerformed

    private void searchEmployeeNumbTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchEmployeeNumbTxtCaretUpdate
        if (searchEmployeeNumbTxt.getCaretPosition() < 2) {
            System.out.println("Nothing...");
        } else {
            System.out.println("Searching...");

            searchEmployeeTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,
                "SELECT employee_no, initcap(first_name) || ' '|| initcap(middle_name) || ' '|| initcap(last_name) AS employee_name, "
                + "id_no FROM master_file WHERE employee_no ILIKE '%"+searchEmployeeNumbTxt.getText()+"%' "
                + "OR id_no ILIKE '%"+searchEmployeeNumbTxt.getText()+"%' ORDER BY employee_no"));

        System.out.println("Showing...");

        searchEmployeeTable.setShowHorizontalLines(false);
        searchEmployeeTable.getColumnModel().getColumn(0).setPreferredWidth(350);
        searchEmployeeTable.getColumnModel().getColumn(1).setPreferredWidth(350);
        searchEmployeeScrollPane.setViewportView(searchEmployeeTable);
        }
    }//GEN-LAST:event_searchEmployeeNumbTxtCaretUpdate

    private void searchEmployeeNumbTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmployeeNumbTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchEmployeeNumbTxtActionPerformed

    private void searchEmployeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchEmployeeTableMouseClicked

        employeeNoTxt.setText(searchEmployeeTable.getValueAt(searchEmployeeTable.getSelectedRow(), 0).toString());
        String title = "                           (" + searchEmployeeTable.getValueAt(searchEmployeeTable.getSelectedRow(), 0)
        .toString().concat("    ").
        concat(searchEmployeeTable.getValueAt(searchEmployeeTable.getSelectedRow(), 1).toString()).concat(")");

        this.setTitle(title);

        populateBioData(searchEmployeeTable.getValueAt(searchEmployeeTable.getSelectedRow(), 0).toString());
        
        employeeSearchDialog.dispose();
    }//GEN-LAST:event_searchEmployeeTableMouseClicked

    private void searchEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmployeeBtnActionPerformed
        this.employeeSearchDialog.dispose();
    }//GEN-LAST:event_searchEmployeeBtnActionPerformed

    private void nameNoSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameNoSearchBtnActionPerformed
        employeeSearchButtonClicked();
    }//GEN-LAST:event_nameNoSearchBtnActionPerformed
    
    private void employeeSearchButtonClicked() {

        System.out.println("Showing Employee Search Dialog");
        
        java.awt.Point point = this.employeeNoTxt.getLocationOnScreen();

        employeeSearchDialog.setSize(500, 200);

        employeeSearchDialog.setLocation(point);

        employeeSearchDialog.setVisible(true);

    }
    
    public String populateBioData(String employee_no) {
         
        String text = null;
        String emp_no = "Null", emp_name = "Null", division = "NUll", department = "Null", section = "Null";
        
        try {
            connectDB.setAutoCommit(false);
            
            System.out.println("About to Get the Employee's Details");
            
            java.sql.PreparedStatement pstm = connectDB.prepareStatement("SELECT employee_no, first_name, middle_name, last_name, division, "
                    + "department, section FROM master_file WHERE employee_no = '" + employee_no + "' ");
            java.sql.ResultSet rse = pstm.executeQuery();
            
            System.out.println("To Get the Employee's Details");
            
            while (rse.next()) {
                
                System.out.println("Getting the Employee's Details");

                emp_no = dbObject.getDBObject(rse.getObject(1), " ");
                emp_name = dbObject.getDBObject(rse.getObject(2), " ").concat(" "+dbObject.getDBObject(rse.getObject(3), " ")
                        .concat(" "+dbObject.getDBObject(rse.getObject(4), " ")));
                division = dbObject.getDBObject(rse.getObject(5), " ");
                department = dbObject.getDBObject(rse.getObject(6), " ");
                section = dbObject.getDBObject(rse.getObject(7), " ");                
                

                String title = "Employee Number:- "+emp_no + "                                                         Employee Name:- " + emp_name;
                
                this.setTitle(title);
            }
            
            
            System.out.println("User Details - "+title);
            
            employeeNameTxt.setText(emp_name);
            employeeDivisionTxt.setText(division);
            employeeDepartmentTxt.setText(department);
            employeeSectionTxt.setText(section);
            
            divisionCmbx.setSelectedItem(division);
            departmentCmbx.setSelectedItem(department);
            sectionCmbx.setSelectedItem(section);
          
            System.out.println("The Employee's Details should be set!");

        } catch (SQLException es) {
            System.out.println(es);

        }
                
        return text;
    }
    
    public void clear() {
        this.setTitle("Hospital Division, Department and Section Transfers");
        employeeNoTxt.setText("");
        employeeNameTxt.setText("");
        employeeDivisionTxt.setText("");
        employeeDepartmentTxt.setText("");
        employeeSectionTxt.setText("");
        employeeNoTxt.setText("");
        populateCmbox();
    }
    
    private void populateCmbox() {
        divisionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT division FROM master_file "
                + "ORDER BY division ASC"));
        divisionCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    departmentCmbxActionPerformed(evt);
                }
            }); 
                
        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT department FROM master_file "
                + " WHERE division = '"+divisionCmbx.getSelectedItem()+"' ORDER BY department ASC"));
        departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    departmentCmbxActionPerformed(evt);
                }
            });   
        
        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM master_file "
                    + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' AND department = '"+departmentCmbx.getSelectedItem()+"' "
                    + "ORDER BY section ASC"));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sectionCmbxActionPerformed(evt);
                }
            });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JPanel comboxPanel;
    private javax.swing.JPanel currentEmployeeDetailsPanel;
    private javax.swing.JComboBox departmentCmbx;
    private javax.swing.JComboBox divisionCmbx;
    private javax.swing.JTextField employeeDepartmentTxt;
    private javax.swing.JTextField employeeDivisionTxt;
    private javax.swing.JTextField employeeNameTxt;
    private javax.swing.JTextField employeeNoTxt;
    private javax.swing.JLabel employeeNumbLbl;
    private javax.swing.JDialog employeeSearchDialog;
    private javax.swing.JPanel employeeSearchDialogPanel;
    private javax.swing.JTextField employeeSectionTxt;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton nameNoSearchBtn;
    private javax.swing.JPanel nameNoSearchPanel;
    private javax.swing.JButton searchEmployeeBtn;
    private javax.swing.JTextField searchEmployeeNumbTxt;
    private javax.swing.JPanel searchEmployeePanel;
    private javax.swing.JScrollPane searchEmployeeScrollPane;
    private javax.swing.JTable searchEmployeeTable;
    private javax.swing.JComboBox sectionCmbx;
    private javax.swing.JButton updateBtn;
    private javax.swing.JPanel updateBtnPanel;
    // End of variables declaration//GEN-END:variables
}
