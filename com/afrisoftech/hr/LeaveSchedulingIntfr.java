/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hr;

import java.beans.PropertyChangeEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Formatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author afro
 */
public class LeaveSchedulingIntfr extends javax.swing.JInternalFrame {
    com.afrisoftech.lib.DBObject dbObject;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private Object[][] batch;
    List<String> staffID = new ArrayList<String>();
    List<String> dates = new ArrayList<String>();
    List<String> times = new ArrayList<String>();
    
    String hasSections="no";
    String doneLoading="no";
    
    java.lang.String userLoggedIn;
    java.lang.String leave_code;
    java.lang.String leave_type;
    java.lang.String leavetype;
    SimpleDateFormat sdf4 = new SimpleDateFormat("EEE, MMM d yyyy");
    
        
    int r;

    /**
     * Creates new form DutyRosterIntfr
     */
    public LeaveSchedulingIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        dbObject = new com.afrisoftech.lib.DBObject();
        connectDB = connDb;
        pConnDB = pconnDB;
        
        initComponents();
        
        populateCmbox();
        populateTable();
        doneLoading="yes";
        
        
        try {                        
                java.sql.PreparedStatement pstmtUser = connectDB.prepareStatement("SELECT (SELECT upper(f_name||' '||l_name) FROM secure_menu_access "
                        + "where login_name = current_user order by 1 limit 1)");
                java.sql.ResultSet rsetUser = pstmtUser.executeQuery();

                    while (rsetUser.next()) {
                        userLoggedIn = rsetUser.getString(1);

                    }

        } catch (java.sql.SQLException SqlExec) {

            SqlExec.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), SqlExec.getMessage());

        }
       
        jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, 
                "SELECT leave_code, leave_type FROM hr.hr_leave_type"));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonsPanel = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();
        leaveCodePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        newContainerPanel = new javax.swing.JPanel();
        comboxPanel = new javax.swing.JPanel();
        divisionCmbx = new javax.swing.JComboBox();
        departmentCmbx = new javax.swing.JComboBox();
        sectionCmbx = new javax.swing.JComboBox();
        datePanel = new javax.swing.JPanel();
        dateDate = new com.afrisoftech.lib.DatePicker();
        dateLbl = new javax.swing.JLabel();
        dutyAllocationPanel = new javax.swing.JPanel();
        dutyAllocationScrollPane = new javax.swing.JScrollPane();
        dutyAllocationTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("LEAVE SCHEDULING");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        buttonsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Save & Print Buttons ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 204)));
        buttonsPanel.setLayout(new java.awt.GridBagLayout());

        saveBtn.setText("Save & Print");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        buttonsPanel.add(saveBtn, gridBagConstraints);

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        buttonsPanel.add(cancelBtn, gridBagConstraints);

        printBtn.setText("Print");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        buttonsPanel.add(printBtn, gridBagConstraints);

        leaveCodePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Code Meaning", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
        leaveCodePanel.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        leaveCodePanel.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 15.0;
        buttonsPanel.add(leaveCodePanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        getContentPane().add(buttonsPanel, gridBagConstraints);

        newContainerPanel.setLayout(new java.awt.GridBagLayout());

        comboxPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select (Division, Department & Section)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        comboxPanel.setLayout(new java.awt.GridBagLayout());

        divisionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        divisionCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Division", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 51, 255)));
        divisionCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        comboxPanel.add(divisionCmbx, gridBagConstraints);

        departmentCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        departmentCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 51, 255)));
        departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        comboxPanel.add(departmentCmbx, gridBagConstraints);

        sectionCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sectionCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        comboxPanel.add(sectionCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        newContainerPanel.add(comboxPanel, gridBagConstraints);

        datePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select the Leave Schedule Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        datePanel.setToolTipText("");
        datePanel.setLayout(new java.awt.GridBagLayout());

        this.dateDate.getDateEditor()
        .addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if(doneLoading.equals("yes")){
                    System.out.println("Yes!!!");
                    populateTable();
                } else {
                    System.out.println("No!!!");
                }
            }
        });
        dateDate.setMaxSelectableDate(new java.util.Date(253370757714000L));
        dateDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateDatePropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        datePanel.add(dateDate, gridBagConstraints);

        dateLbl.setText("Date From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        datePanel.add(dateLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        newContainerPanel.add(datePanel, gridBagConstraints);

        dutyAllocationPanel.setLayout(new java.awt.GridBagLayout());

        dutyAllocationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13"
            }
        ));
        dutyAllocationScrollPane.setViewportView(dutyAllocationTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        dutyAllocationPanel.add(dutyAllocationScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 23;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        newContainerPanel.add(dutyAllocationPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(newContainerPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void divisionCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionCmbxActionPerformed
        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT department FROM master_file "
                    + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' ORDER BY department"));
        departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    departmentCmbxActionPerformed(evt);
                }
            });

        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM master_file "
                + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' AND department = '"+departmentCmbx.getSelectedItem()+"' ORDER BY section"));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sectionCmbxActionPerformed(evt);
                }
            });
        
        populateTable();
    }//GEN-LAST:event_divisionCmbxActionPerformed

    private void departmentCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentCmbxActionPerformed
        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM master_file "
                + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' AND department = '"+departmentCmbx.getSelectedItem()+"' ORDER BY section"));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sectionCmbxActionPerformed(evt);
                }
            });
        
        populateTable();
    }//GEN-LAST:event_departmentCmbxActionPerformed

    private void sectionCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionCmbxActionPerformed
        populateTable();
    }//GEN-LAST:event_sectionCmbxActionPerformed

    private void dateDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateDatePropertyChange
        
    }//GEN-LAST:event_dateDatePropertyChange

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date date2=dateDate.getDate();
        
        
        int r2=0;
        while(r2<r){
            try {
                Statement stmt3 = connectDB.createStatement();
                for(int tempCount=1; tempCount<12; tempCount++){
                    String value=(String) dutyAllocationTable.getValueAt(r2, tempCount);
                    if(value==null){value=" ";}                    
                    
                    stmt3.execute("UPDATE hr.hr_leave_assignment" +
                                    "   SET leave = '"+value+"', leave_division = '"+divisionCmbx.getSelectedItem()+"', " +
                                    "       leave_department = '"+departmentCmbx.getSelectedItem()+"', " +
                                    "       leave_section = '"+sectionCmbx.getSelectedItem()+"', " +
                                    "       assigned_by = '"+userLoggedIn+"', " +
                                    "       leave_month = '"+tempCount+"'" +
                                    " WHERE staffid = '"+staffID.get(r2)+"'"+
                                    " AND leave_month = '"+tempCount+"'");
                    
                    System.out.println("Save Button - Update Executed!!!");
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(LeaveSchedulingIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
                r2++;
            }

        JOptionPane.showMessageDialog(null, "Leave Schedule Created and Saved Successfully!", 
                "Leave Schedule Created.", JOptionPane.INFORMATION_MESSAGE);
        
        PrintDutyRoster();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        PrintDutyRoster();
    }//GEN-LAST:event_printBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    private void populateCmbox() {
        divisionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT division FROM master_file "
                + "ORDER BY division ASC"));
        divisionCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    departmentCmbxActionPerformed(evt);
                }
            }); 
                
        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT department FROM master_file "
                + " WHERE division = '"+divisionCmbx.getSelectedItem()+"' ORDER BY department ASC"));
        departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    departmentCmbxActionPerformed(evt);
                }
            });   
        
        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT section FROM master_file "
                    + "WHERE division = '"+divisionCmbx.getSelectedItem()+"' AND department = '"+departmentCmbx.getSelectedItem()+"' "
                    + "ORDER BY section ASC"));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sectionCmbxActionPerformed(evt);
                }
            });
        
    }
    
    private void populateTable() {
        staffID.clear();
        dates.clear();
        Calendar cal = Calendar.getInstance();
        java.util.Date date=dateDate.getDate();
        cal.setTime(date);
        cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
        SimpleDateFormat sdf = new SimpleDateFormat("EEE dd");
        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
        
        
        Calendar dal = Calendar.getInstance();
        Formatter sdf3 = new Formatter();
        sdf3.format("%tl:%tM", dal, dal);
        
        String headers[]=new String[13];
        
        headers[0]="Employee Name";
        headers[1]="JAN";
        headers[2]="FEB";
        headers[3]="MAR";
        headers[4]="APR";
        headers[5]="MAY";
        headers[6]="JUN";
        headers[7]="JUL";
        headers[8]="AUG";
        headers[9]="SEP";
        headers[10]="OCT";
        headers[11]="NOV";
        headers[12]="DEC";
                
                
         
         try {
                String sql = "SELECT initcap(first_name) || ' '|| initcap(middle_name) || ' '|| initcap(last_name) AS employee_name, "
                                + "employee_no FROM master_file WHERE division = '"+divisionCmbx.getSelectedItem()+"' "
                                + "AND department = '"+departmentCmbx.getSelectedItem()+"' "
                                + "AND section = '"+sectionCmbx.getSelectedItem()+"' "
                                + "AND initcap(first_name) || ' '|| initcap(middle_name) || ' '|| initcap(last_name) NOT LIKE '' "
                                + "ORDER BY first_name ASC";
                    
                    System.out.println("Second SQL Executed!!!");
                
                
                Statement stmt = connectDB.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet rs = stmt.executeQuery(sql);
                rs.last();
                r=rs.getRow();
                batch = new Object[r][13];

                rs.beforeFirst();
                int counter=0;
                while (rs.next()) {
                    batch[counter][0]=rs.getString("employee_name");
                    staffID.add(rs.getString("employee_no"));
                    Calendar cal2 = Calendar.getInstance();
                    java.util.Date date2=dateDate.getDate();
                    cal2.setTime(date2);
                    cal2.set(Calendar.DAY_OF_WEEK, cal2.getFirstDayOfWeek());

                    int i=1;
                     do{
                         
                        String sql2="SELECT leave FROM hr.hr_leave_assignment "
                                + "WHERE staffid = '"+rs.getString("employee_no")+"' "
                                + "AND leave_month = '"+i+"' "
                                + "AND leave_division='"+divisionCmbx.getSelectedItem()+"' "
                                + "AND leave_department='"+departmentCmbx.getSelectedItem()+"' "
                                + "AND leave_section='"+sectionCmbx.getSelectedItem()+"' ";
                        
                        Statement stmt2 = connectDB.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        ResultSet rs2 = stmt2.executeQuery( sql2 );
                        rs2.last();
                        if(rs2.getRow() > 0){
                            rs2.beforeFirst();
                            rs2.next();
                            batch[counter][i]=rs2.getString("leave");
                            System.out.println("Duty has been Selected!!!");
                        
                        } else {
                            Statement stmt3 = connectDB.createStatement();
                            stmt3.execute( "INSERT INTO hr.hr_leave_assignment (staffid, leave, leave_division, leave_department, leave_section, "
                                    + "assigned_by, leave_month) "
                                    + "VALUES('"+rs.getString("employee_no")+"', ' ', '"+divisionCmbx.getSelectedItem()+"', "
                                    + "'"+departmentCmbx.getSelectedItem()+"', '"+sectionCmbx.getSelectedItem()+"', '"+userLoggedIn+"', "
                                    + "'"+i+"')" );
                            System.out.println("Rows have been added!!!");
                                
                        }
                        
                        cal2.add(Calendar.DATE, 1);
                        i++;
                     }while(i<13);
                    
                    
                    counter++;
                }

                RefreshClientsTable(headers);

                JComboBox cbx=new JComboBox();
                
                String sql2 = "SELECT leave_code FROM hr.hr_leave_type "
                    + "ORDER BY leave_code ASC";
                
                Statement stmt2 = connectDB.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet rs2 = stmt2.executeQuery(sql2);
                rs2.last();
                
                if(rs2.getRow()>0){
                    rs2.beforeFirst();
                    while(rs2.next()){
                        cbx.addItem(rs2.getString("leave_code"));
                    }
                }

                for(int p=1; p<13; p++){
                    dutyAllocationTable.getColumnModel().getColumn(p).setCellEditor(new DefaultCellEditor(cbx));
                }

            }catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Error: "+ex.toString());
           }
    }
    
    private void RefreshClientsTable(String[] headers){
        dutyAllocationTable.setModel(new javax.swing.table.DefaultTableModel(batch,
        
                new String [] {
                    headers[0], headers[1], headers[2], headers[3], headers[4], headers[5], 
                    headers[6], headers[7], headers[8], headers[9], headers[10], headers[11], 
                    headers[12]  }){});
        
        dutyAllocationTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        TableColumn col0=dutyAllocationTable.getColumnModel().getColumn(0);
        col0.setPreferredWidth(200);  
        
    }
    
    private void PrintDutyRoster() {
        com.afrisoftech.reports.HRLeaveSchedulePdf.connectDB = connectDB;
            com.afrisoftech.reports.HRLeaveSchedulePdf regForm = new com.afrisoftech.reports.HRLeaveSchedulePdf();
            regForm.generatePdf(dateDate.getDate(), sdf4.format(dateDate.getDate()), divisionCmbx.getSelectedItem().toString(), 
                    departmentCmbx.getSelectedItem().toString(), 
                    sectionCmbx.getSelectedItem().toString(), connectDB );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPanel comboxPanel;
    private com.afrisoftech.lib.DatePicker dateDate;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JPanel datePanel;
    private javax.swing.JComboBox departmentCmbx;
    private javax.swing.JComboBox divisionCmbx;
    private javax.swing.JPanel dutyAllocationPanel;
    private javax.swing.JScrollPane dutyAllocationScrollPane;
    private javax.swing.JTable dutyAllocationTable;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel leaveCodePanel;
    private javax.swing.JPanel newContainerPanel;
    private javax.swing.JButton printBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox sectionCmbx;
    // End of variables declaration//GEN-END:variables
}
