/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */

package com.afrisoftech.hr;

/**
 *
 * @author  root
 */
public class UsersetupInventoryIntfr33_1 extends javax.swing.JInternalFrame {
     
     java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
  
    
    public UsersetupInventoryIntfr33_1(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }   
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crsetusertables = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crsetdataccess = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();

        crset3.setCommand("select DISTINCT item_desc from menu_item_list WHERE app_name = 'hospital_inventory' order by item_desc");
        crset3.setConnectionSource(pConnDB);
        crset1.setCommand("select usename from pg_user where usename !='postgres' ");
        crset1.setConnectionSource(pConnDB);
        crset2.setCommand("select usename from pg_catalog.pg_user where usename !='postgres'");
        crset2.setConnectionSource(pConnDB);
        crset4.setCommand("select department_name from pb_departments order by department_name");
        crset4.setConnectionSource(pConnDB);
        crsetusertables.setCommand("select relname from pg_catalog.pg_statio_user_tables");
        crsetusertables.setConnectionSource(pConnDB);
        crsetdataccess.setCommand("select access_priv from data_access_priv");
        crsetdataccess.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("User Manager - Inventory/Pharmacy");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFont(new java.awt.Font("SansSerif", 0, 10));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jTabbedPane1.setBorder(new javax.swing.border.TitledBorder(""));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Manage activity domains"));
        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14));
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("Available Activity Domains");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif")));
        jButton1.setMnemonic('e');
        jButton1.setText("Assign Priveledges");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jSeparator1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel4, gridBagConstraints);

        jList1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList1.setModel(new org.netbeans.lib.sql.models.ListModel (crset3, "item_desc", null, null, null));
        jList1.setDragEnabled(true);
        jList1.setValueIsAdjusting(true);
        jList1.setVisibleRowCount(20);
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jList11.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList11.setDragEnabled(true);
        jList11.setValueIsAdjusting(true);
        jList11.setVisibleRowCount(20);
        jScrollPane2.setViewportView(jList11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton2, gridBagConstraints);

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton3, gridBagConstraints);

        jLabel31.setFont(new java.awt.Font("SansSerif", 1, 14));
        jLabel31.setForeground(new java.awt.Color(0, 0, 204));
        jLabel31.setText("User Assigned Domains");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel31, gridBagConstraints);

        jTabbedPane1.addTab("Access Priviledges", jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 750, 450);
    }//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    
        java.lang.Object[] listSel = null;
        
        listSel = jList11.getSelectedValues();
        
        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel)jList11.getModel();
        
        for (int i = 0; i < listSel.length; i++) {
        
        newdfListModel.removeElement(listSel[i]);
        
        }
        
        this.jList11.setModel(newdfListModel);
        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    
        java.lang.Object[] listSel = null;
        
        listSel = jList1.getSelectedValues();
        
        javax.swing.ListModel list11Model = jList11.getModel();
        
        int nofItemsList11 = list11Model.getSize();

        javax.swing.DefaultListModel newdfListModel = new javax.swing.DefaultListModel();
        
        for (int j = 0; j < list11Model.getSize(); j++) {        
        
            newdfListModel.addElement(list11Model.getElementAt(j));
            
        }
        //        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel)jList11.getModel();
        
        for (int i = 0; i < listSel.length; i++) {

           if (!newdfListModel.contains(listSel[i])) {
            
            newdfListModel.addElement(listSel[i].toString());
            
            }
        }
        
        this.jList11.setModel(newdfListModel);

        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        /* try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }
     
         try {
            java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/insurance","postgres","pilsiner");
            
            java.lang.Object[] lists = null;
            lists = jList1.getSelectedValues();
            java.lang.String[] list_str = null;
           // list_str = lists.toString();
            for (int i = 0; i < lists.length; i++){
            java.sql.PreparedStatement pstmt = con.prepareStatement("insert into ab values(?)");
            //  for (int i = 0; i < anArray.length; i++){

          //  System.out.println(lists[i].toString());
          //  list_str = lists[i].toString();  
            
                            
            pstmt.setObject(1,lists[i].toString());
             //pstmt.setString(9,jComboBox13.getSelectedItem().toString());
            
            pstmt.executeUpdate();
            }
              }   catch(java.sql.SQLException sq){
                     javax.swing.JOptionPane.showMessageDialog(this,"ERROR: "+ sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            System.out.println(sq.getMessage());
          
              } 
          */   // Add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
        java.util.Vector item2add = new java.util.Vector(5, 5);        
        
        javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();
        
        listModel = (javax.swing.DefaultListModel)jList11.getModel();
        
        java.lang.Object[] selectedValues = null;        
        
        java.util.Enumeration listEnum =  listModel.elements();
        
        while(listEnum.hasMoreElements()) {
            
                item2add.addElement(listEnum.nextElement());
                
        }
            
        selectedValues = item2add.toArray();    
  
           for (int k = 0; k < selectedValues.length; k++) {
            
            System.out.print("Values : "+"\t"+selectedValues[k]+"\t");
            
        }
       
        java.sql.Array menuSqlArray;
        
        java.lang.String str = this.getSqlString(selectedValues);
        
        //System.out.println("This the list : "+str);
        
        
        
    
     //   item2add.capacityIncrement = 20;
        
  //      for (int i = 0; i  < selectedValues.length; i++){
/*       
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }*/
/*        try {
          //  java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
           
   //         for (int i = 0; i  < selectedValues.length; i++){
            java.sql.Statement pstmt = connectDB.createStatement();
//                           java.sql.PreparedStatement pmstmt = connectDB.prepareStatement("UPDATE secure_menu_access SET menu_list = '{"+str+"}' WHERE login_name = '"+jComboBox1.getSelectedItem()+"' AND sys_name = 'hospital_inventory'");

     //       java.sql.ResultSet rs = pstmt.executeQuery("select menu_item from menu_item_list where item_desc = '"+selectedValues[i]+"'");
  
            pmstmt.executeUpdate();
 //           jLabel2.setForeground(java.awt.Color.blue);
         
 //           jLabel2.setText("Insert successful");
       //     java.sql.Array menuSqlArray= rs.getArray(1);
           
            while (rs.next()) {
            
            java.lang.String[] itemList = null;
            
            item2add.addElement(rs.getString(1));
    
                System.out.println(rs.getString(1));
                
                menuSqlArray = rs.getArray(1);
                
            //    System.out.println(menuSqlArray.getArray(1,1).toString());
                
            
  //          for (int k = 1; k < item2addObj.length; k++) {                       //   menuSqlArray= rs.getArray(1);
        //    pmstmt.(1, );
          //  pmstmt.setArray(2, menuSqlArray);
             
 
            }   

            }

    //        }
   //        java.lang.Object[] item2addObj = item2add.toArray();
           
           System.out.println("----------------------------------------------------------------");
            
  //          for (int k = 1; k < item2addObj.length; k++) {
                
    //        java.sql.PreparedStatement pmstmt = con.prepareStatement("UPDATE secure_menu_access SET menu_list = (?) WHERE login_name = '"+jComboBox1.getSelectedItem()+"'");
            
                        //   menuSqlArray= rs.getArray(1);
            
      //      pmstmt.setArray(1, menuSqlArray);
    //        System.out.println(item2addObj[k]);

     //       }
           javax.swing.JOptionPane.showMessageDialog(this, "Successfuly updated access privileges for user "+this.jComboBox1.getSelectedItem().toString()+".");
               }   catch(java.sql.SQLException sq){
                   javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());
           // sq.printStackTrace();
              }
 */
     
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton20221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20221ActionPerformed
    /*  jTextField58221.setText("");
      jTextField50221.setText(""); 
      jTextField53221.setText("");
      jTextField49221.setText("");
      jTextField6021.setText(""); 
     // jTextField4821.setText("");
      jTextField1.setText(""); 
      jTextField54121.setText("");
     // jTextField5721.setText("");
      jTextField56121.setText(""); 
     */
     // Add your handling code here:
    }//GEN-LAST:event_jButton20221ActionPerformed

    private void jButton15221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15221ActionPerformed
       // Add your handling code here:
    }//GEN-LAST:event_jButton15221ActionPerformed

         public String getSqlString(java.lang.Object[] arrayfromJList) {
             
             java.lang.String strToArray = arrayfromJList[0].toString();
             
             for (int i = 1; i <arrayfromJList.length; i++) {
                 
                 strToArray = strToArray+", "+arrayfromJList[i].toString();
                 
             }
             
             System.out.println(strToArray);
             
             return strToArray;
             
         }
            
            
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private javax.swing.JButton jButton3;
    private javax.swing.JList jList1;
    private org.netbeans.lib.sql.NBCachedRowSet crsetusertables;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JList jList11;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel4;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel3;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private javax.swing.JLabel jLabel31;
    private org.netbeans.lib.sql.NBCachedRowSet crsetdataccess;
    // End of variables declaration//GEN-END:variables
    
}
