/*
 * DefaultInternalFrame.java
 *
 * Created on May 31, 2004, 1:53 PM
 */

package com.afrisoftech.hr;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author  postgres
 */
public class CasualLevelsIntfr extends javax.swing.JInternalFrame {
    
    java.sql.Connection connectDB = null;
    
    javax.swing.table.TableModel tableModel = null;
    
    javax.swing.JSpinner beginDateSpinner = null;
    
    javax.swing.JSpinner endDateSpinner = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    /** Creates new form DefaultInternalFrame */
    public CasualLevelsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        
        
        nBCachedRowSet2.setCommand("Select distinct(division_name) from hr.hr_divisions");
        nBCachedRowSet2.setConnectionSource(pConnDB);
       
        setTitle("Casual Levels");
        Divisioncbx.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (nBCachedRowSet2, "division_name", null, null, null));
       
        
        
    }
    
    public void getData(){
        try{
            
            connectDB.setAutoCommit(false);
            
            Statement stmt = connectDB.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet srs1 = stmt.executeQuery("SELECT casual_job_id, department, casual_designation_description, renewable, maximum_tenure_period, division_name   FROM hr.hr_casual_levels inner join hr.hr_department on  hr.hr_department.department_name = hr.hr_casual_levels.department inner join hr.hr_divisions on hr.hr_divisions.division_name= hr.hr_department.remarks");
            
            
                       
            String casual_id= srs1.getString("casual_job_id");
            String division = srs1.getString("division_name");
            String department = srs1.getString("department");
            String casual_designation_description = srs1.getString("casual_designation_description");
            String renewable = srs1.getString("renewable");
            String maximum_tenure_period = srs1.getString("maximum_tenure_period");
            
            casualjobidTxt.setText(casual_id);
            Divisioncbx.setSelectedItem(division);
            departmentCbx.setSelectedItem(department);
            casualdesigdescTxt.setText(casual_designation_description);
            
            if(renewable=="false"){
                
                maxChbx.setSelected(isSelected);
            
            }
          
            maxtenureperiodTxt.setText(maximum_tenure_period);
                   
        
        }
        
        catch(SQLException err){
            
            JOptionPane.showMessageDialog(CasualLevelsIntfr.this, err.getMessage());
        
        
        
        }
 
        
    
    
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            nBCachedRowSet1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            nBCachedRowSet2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        mainPanel = new javax.swing.JPanel();
        labelPanel = new javax.swing.JPanel();
        imgPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        actionsPanel = new javax.swing.JPanel();
        newAction = new javax.swing.JButton();
        updateAction = new javax.swing.JButton();
        deleteAction = new javax.swing.JButton();
        clearAction = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();
        helpPanel = new javax.swing.JPanel();
        helpAction = new javax.swing.JButton();
        subMainPanel = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fieldsPanel = new javax.swing.JPanel();
        casualjobidLbl = new javax.swing.JLabel();
        casualjobidTxt = new javax.swing.JTextField();
        departmentLbl = new javax.swing.JLabel();
        departmentCbx = new javax.swing.JComboBox();
        casualdesignationdescriptionLbl = new javax.swing.JLabel();
        casualdesigdescTxt = new javax.swing.JTextField();
        maximumtenureperiodLbl = new javax.swing.JLabel();
        maxtenureperiodTxt = new javax.swing.JTextField();
        maxChbx = new javax.swing.JCheckBox();
        Divisionlbl = new javax.swing.JLabel();
        Divisioncbx = new javax.swing.JComboBox();
        dataPanel = new javax.swing.JPanel();
        firstAction = new javax.swing.JButton();
        previousAction = new javax.swing.JButton();
        nextAction = new javax.swing.JButton();
        lastAction = new javax.swing.JButton();

        nBCachedRowSet2.setConnectionSource(pConnDB);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Casual Levels");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        labelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        labelPanel.setLayout(new java.awt.GridBagLayout());

        imgPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        imgPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all_tracks.gif"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        imgPanel.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        labelPanel.add(imgPanel, gridBagConstraints);

        actionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        actionsPanel.setLayout(new java.awt.GridBagLayout());

        newAction.setMnemonic('w');
        newAction.setText("New");
        newAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(newAction, gridBagConstraints);

        updateAction.setMnemonic('U');
        updateAction.setText("Update");
        updateAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(updateAction, gridBagConstraints);

        deleteAction.setMnemonic('D');
        deleteAction.setText("Delete");
        deleteAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(deleteAction, gridBagConstraints);

        clearAction.setMnemonic('C');
        clearAction.setText("Get");
        clearAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(clearAction, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        actionsPanel.add(spacerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        labelPanel.add(actionsPanel, gridBagConstraints);

        helpPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Assistance"));
        helpPanel.setLayout(new java.awt.GridBagLayout());

        helpAction.setMnemonic('H');
        helpAction.setText("Help");
        helpAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionActionPerformed(evt);
            }
        });
        helpPanel.add(helpAction, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        labelPanel.add(helpPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(labelPanel, gridBagConstraints);

        subMainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        subMainPanel.setLayout(new java.awt.GridBagLayout());

        buttonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Please register your casual levels here");
        buttonPanel.add(jLabel1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        subMainPanel.add(buttonPanel, gridBagConstraints);

        fieldsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Data manipulation utility"));
        fieldsPanel.setLayout(new java.awt.GridBagLayout());

        casualjobidLbl.setText("Casual Job ID:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(casualjobidLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(casualjobidTxt, gridBagConstraints);

        departmentLbl.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(departmentLbl, gridBagConstraints);

        departmentCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(departmentCbx, gridBagConstraints);

        casualdesignationdescriptionLbl.setText("Casual Designation Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(casualdesignationdescriptionLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(casualdesigdescTxt, gridBagConstraints);

        maximumtenureperiodLbl.setText("Maximum Tenure Period (days)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(maximumtenureperiodLbl, gridBagConstraints);

        maxtenureperiodTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxtenureperiodTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(maxtenureperiodTxt, gridBagConstraints);

        maxChbx.setText("Renewable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(maxChbx, gridBagConstraints);

        Divisionlbl.setText("Division");
        fieldsPanel.add(Divisionlbl, new java.awt.GridBagConstraints());

        Divisioncbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DivisioncbxItemStateChanged(evt);
            }
        });
        Divisioncbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivisioncbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        fieldsPanel.add(Divisioncbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 20.0;
        subMainPanel.add(fieldsPanel, gridBagConstraints);

        dataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Data navagation actions"));
        dataPanel.setLayout(new java.awt.GridBagLayout());

        firstAction.setMnemonic('F');
        firstAction.setText("First");
        firstAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionActionPerformed(evt);
            }
        });
        dataPanel.add(firstAction, new java.awt.GridBagConstraints());

        previousAction.setMnemonic('P');
        previousAction.setText("Previous");
        previousAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionActionPerformed(evt);
            }
        });
        dataPanel.add(previousAction, new java.awt.GridBagConstraints());

        nextAction.setMnemonic('N');
        nextAction.setText("Next");
        nextAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionActionPerformed(evt);
            }
        });
        nextAction.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nextActionKeyPressed(evt);
            }
        });
        dataPanel.add(nextAction, new java.awt.GridBagConstraints());

        lastAction.setMnemonic('L');
        lastAction.setText("Last");
        lastAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastActionActionPerformed(evt);
            }
        });
        dataPanel.add(lastAction, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        subMainPanel.add(dataPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(subMainPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        setBounds(0, 0, 593, 300);
    }// </editor-fold>//GEN-END:initComponents
    
    private void helpActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_helpActionActionPerformed
    
    private void clearActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionActionPerformed
        // TODO add your handling code here:
        
        getData();
        
    }//GEN-LAST:event_clearActionActionPerformed
    
    private void deleteActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionActionPerformed
    
    private void updateActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionActionPerformed
        // TODO add your handling code here:
        boolean maxcb = false;
        if (maxChbx.isSelected()){
            maxcb = true;
        }else{
            
            maxcb = false;
        }
        try {
            
            connectDB.setAutoCommit(false);
            
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE hr.hr_casual_levels SET casual_job_id=?, department=?, casual_designation_description=?,renewable=?, maximum_tenure_period=? WHERE casual_job_id ="+casualjobidTxt.getText()+"");
            
            pstmt.setObject(1,casualjobidTxt.getText());
            pstmt.setObject(2,departmentCbx.getSelectedItem().toString());
            pstmt.setObject(3,casualdesigdescTxt.getText());
            int tenureperiod=Integer.parseInt(maxtenureperiodTxt.getText());
            
            pstmt.setObject(5,tenureperiod);
            pstmt.setBoolean(4,maxcb);
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this, "Data Updated successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }   catch(java.sql.SQLException sq){
            
            javax.swing.JOptionPane.showMessageDialog(this, "Data Updated  was not successfully","Error Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
        }

        
        
    }//GEN-LAST:event_updateActionActionPerformed
    
    private void newActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newActionActionPerformed
        boolean maxcb = false;
        if (maxChbx.isSelected()){
            maxcb = true;
        }else{
            
            maxcb = false;
        }
        try {
            
            connectDB.setAutoCommit(false);
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hr.hr_casual_levels (casual_job_id,department,casual_designation_description,renewable,maximum_tenure_period) values(?,?,?,?,?)");
            pstmt.setObject(1,casualjobidTxt.getText());
            pstmt.setObject(2,departmentCbx.getSelectedItem().toString());
            pstmt.setObject(3,casualdesigdescTxt.getText());
            int tenureperiod=Integer.parseInt(maxtenureperiodTxt.getText());
            pstmt.setObject(5,tenureperiod);
            pstmt.setBoolean(4,maxcb);
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_newActionActionPerformed
    
    private void lastActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastActionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastActionActionPerformed
    
    private void nextActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionActionPerformed
        // TODO add your handling code here:
        
        try {
            
            connectDB.setAutoCommit(false);
            
            Statement stmt = connectDB.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet srs1 = stmt.executeQuery("SELECT casual_job_id, department, casual_designation_description, renewable, maximum_tenure_period, division_name   FROM hr.hr_casual_levels inner join hr.hr_department on  hr.hr_department.department_name = hr.hr_casual_levels.department inner join hr.hr_divisions on hr.hr_divisions.division_name= hr.hr_department.remarks");
            
            
            if ( srs1.next() ) {
                
                
            srs1.next();
            
            String casual_id= srs1.getString("casual_job_id");
            String division = srs1.getString("division_name");
            String department = srs1.getString("department");
            String casual_designation_description = srs1.getString("casual_designation_description");
            String renewable = srs1.getString("renewable");
            String maximum_tenure_period = srs1.getString("maximum_tenure_period");
            
            casualjobidTxt.setText(casual_id);
            Divisioncbx.setSelectedItem(division);
            departmentCbx.setSelectedItem(department);
            casualdesigdescTxt.setText(casual_designation_description);
            
            if(renewable=="false"){
                
                maxChbx.setSelected(isSelected);
            
            }
          
            maxtenureperiodTxt.setText(maximum_tenure_period);
            
                
                
            }
            
            else {
                srs1.previous( );
                
                JOptionPane.showMessageDialog(CasualLevelsIntfr.this, "End of File");
                
                
            }
            
            }
        catch (SQLException err) {
            
            JOptionPane.showMessageDialog(CasualLevelsIntfr.this, err.getMessage());
            }
        
        
    }//GEN-LAST:event_nextActionActionPerformed
    
    private void previousActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_previousActionActionPerformed
    
    private void firstActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_firstActionActionPerformed

    private void departmentCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentCbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentCbxActionPerformed

    private void maxtenureperiodTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxtenureperiodTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxtenureperiodTxtActionPerformed

    private void DivisioncbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivisioncbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DivisioncbxActionPerformed

    private void DivisioncbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DivisioncbxItemStateChanged
        // TODO add your handling code here:
        
        nBCachedRowSet1.setCommand("select department_name from hr.hr_department where remarks ='"+Divisioncbx.getSelectedItem()+"'");
        System.out.println("select department_name from hr.hr_department where remarks ='"+Divisioncbx.getSelectedItem()+"'");
        nBCachedRowSet1.setConnectionSource(pConnDB);
        
        departmentCbx.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (nBCachedRowSet1, "department_name", null, null, null));

        
    }//GEN-LAST:event_DivisioncbxItemStateChanged

    private void nextActionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nextActionKeyPressed
        // TODO add your handling code here:
        
        
        try {
            
            connectDB.setAutoCommit(false);
            
            Statement stmt = connectDB.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet srs1 = stmt.executeQuery("SELECT casual_job_id, department, casual_designation_description, renewable, maximum_tenure_period, division_name   FROM hr.hr_casual_levels inner join hr.hr_department on  hr.hr_department.department_name = hr.hr_casual_levels.department inner join hr.hr_divisions on hr.hr_divisions.division_name= hr.hr_department.remarks");
            
            
            if ( srs1.next() ) {
                
                
            srs1.next();
            
            String casual_id= srs1.getString("casual_job_id");
            String division = srs1.getString("division_name");
            String department = srs1.getString("department");
            String casual_designation_description = srs1.getString("casual_designation_description");
            String renewable = srs1.getString("renewable");
            String maximum_tenure_period = srs1.getString("maximum_tenure_period");
            
            casualjobidTxt.setText(casual_id);
            Divisioncbx.setSelectedItem(division);
            departmentCbx.setSelectedItem(department);
            casualdesigdescTxt.setText(casual_designation_description);
            
            if(renewable=="false"){
                
                maxChbx.setSelected(isSelected);
            
            }
          
            maxtenureperiodTxt.setText(maximum_tenure_period);
            
                
                
            }
            
            else {
                srs1.previous( );
                
                JOptionPane.showMessageDialog(CasualLevelsIntfr.this, "End of File");
                
                
            }
            
            }
        catch (SQLException err) {
            
            JOptionPane.showMessageDialog(CasualLevelsIntfr.this, err.getMessage());
            }
        
        
        
        
    }//GEN-LAST:event_nextActionKeyPressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Divisioncbx;
    private javax.swing.JLabel Divisionlbl;
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTextField casualdesigdescTxt;
    private javax.swing.JLabel casualdesignationdescriptionLbl;
    private javax.swing.JLabel casualjobidLbl;
    private javax.swing.JTextField casualjobidTxt;
    private javax.swing.JButton clearAction;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JButton deleteAction;
    private javax.swing.JComboBox departmentCbx;
    private javax.swing.JLabel departmentLbl;
    private javax.swing.JPanel fieldsPanel;
    private javax.swing.JButton firstAction;
    private javax.swing.JButton helpAction;
    private javax.swing.JPanel helpPanel;
    private javax.swing.JPanel imgPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JButton lastAction;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JCheckBox maxChbx;
    private javax.swing.JLabel maximumtenureperiodLbl;
    private javax.swing.JTextField maxtenureperiodTxt;
    private org.netbeans.lib.sql.NBCachedRowSet nBCachedRowSet1;
    private org.netbeans.lib.sql.NBCachedRowSet nBCachedRowSet2;
    private javax.swing.JButton newAction;
    private javax.swing.JButton nextAction;
    private javax.swing.JButton previousAction;
    private javax.swing.JPanel spacerPanel;
    private javax.swing.JPanel subMainPanel;
    private javax.swing.JButton updateAction;
    // End of variables declaration//GEN-END:variables
    
}
