/*
 * HRMain.java
 *
 * Created on May 26, 2004, 6:22 PM
 */

package com.afrisoftech.kitchen;

import java.beans.PropertyVetoException;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JInternalFrame;
import java.io.IOException;
import com.afrisoftech.hospinventory.*;
import com.afrisoftech.hospayroll.*;
import com.afrisoftech.hr.SampleDbCompact;
import java.awt.Component;
import javax.help.*;
import javax.help.search.*;
import javax.swing.text.*;
/**
 *
 * @author  postgres
 */
public class KitchenMain extends javax.swing.JFrame {
    
    javax.help.HelpSet helpHS = null;
    
    javax.help.HelpBroker helpBroker;
    
    private static java.util.Properties appProp;
    
    boolean domainsReset;
    
    boolean isRunning;
    java.sql.Connection connectDB = null;
    
    javax.help.HelpSet apiHS = null;
    
    javax.help.HelpBroker apiHB = null;
    
    int DepaStaff = 1;
    int employee = 2;
    int retdate = 3;
    int absence = 4;
//    public static java.sql.Connection connectDB = null;
    
    public java.lang.String dbUserName = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pconnectDB = null;
    
    static final java.lang.String helpSetName = "EpackHimsHelp";
    
    static final java.lang.String helpSetLable = "Hospital Information Management System (HIMS)";
    private Component lmgmt;
    /** Creates new form HRMain */
    public KitchenMain() {
        
        connectDB = connect2DB();
        
        pconnectDB = getPooledConnectionSource();
        
        try {
            
            java.lang.ClassLoader classLoader = KitchenMain.class.getClassLoader();
            
            java.net.URL urlHelpSet = javax.help.HelpSet.findHelpSet(classLoader, helpSetName);
            
            helpHS = new javax.help.HelpSet(classLoader, urlHelpSet);
            
        } catch(java.lang.Exception exec) {
            
            exec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
            
        }
        
        helpBroker = helpHS.createHelpBroker();
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jToolBar3 = new javax.swing.JToolBar();
        fmgrBttn = new javax.swing.JButton();
        calcBttn = new javax.swing.JButton();
        brwsrBttn = new javax.swing.JButton();
        editButtn = new javax.swing.JButton();
        mtmediaBttn1 = new javax.swing.JButton();
        mailBttn = new javax.swing.JButton();
        mtmediaBttn = new javax.swing.JButton();
        jToolBar31 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        helpButton = new javax.swing.JButton();
        helpButton.addActionListener(new javax.help.CSH.DisplayHelpAfterTracking(helpBroker));
        jToolBar311 = new javax.swing.JToolBar();
        operationsToolBar = new javax.swing.JButton();
        pharmacyToolBar = new javax.swing.JButton();

        payrollToolBar = new javax.swing.JButton();
        reportsToolBar = new javax.swing.JButton();
        closeShift = new javax.swing.JButton();
        suspendShift = new javax.swing.JButton();
        optimizeDB = new javax.swing.JButton();
        compactDB = new javax.swing.JButton();
        backupDB = new javax.swing.JButton();
        hrMainPanel = new javax.swing.JPanel();
        KitchenDesktopPane = new javax.swing.JDesktopPane();
        hrMenuBar = new javax.swing.JMenuBar();
        hrSetupmn = new javax.swing.JMenu();
        hrOrganisationalLayoutmn = new javax.swing.JMenu();
        branchesmnit = new javax.swing.JMenuItem();
        unionmn = new javax.swing.JMenu();
        unionterminationmnit = new javax.swing.JMenuItem();
        unionauthoritymnit = new javax.swing.JMenuItem();
        jSeparator18 = new javax.swing.JSeparator();
        hrExit = new javax.swing.JMenuItem();
        hrOperationsmn = new javax.swing.JMenu();
        jSeparator7 = new javax.swing.JSeparator();
        hrUnionDetailsmnit = new javax.swing.JMenu();
        foodSchedulebtn = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        hrReportsmn = new javax.swing.JMenu();
        hrRptApplicantsmn = new javax.swing.JMenu();
        hrRptListofApplicationsmnit = new javax.swing.JMenuItem();
        hrRptApplicationQualificationmnit = new javax.swing.JMenuItem();
        hrRptApplicationProfmnit = new javax.swing.JMenuItem();
        hrRptApplicantResumemnit = new javax.swing.JMenuItem();
        hrStaffReportmn = new javax.swing.JMenu();
        hrRptStaffListingmnit = new javax.swing.JMenuItem();
        hrRptMemosmnit = new javax.swing.JMenuItem();
        hrRptEmployeeHistorymnit = new javax.swing.JMenuItem();
        hrRptStaffAttendanceReportmnit = new javax.swing.JMenuItem();
        hrRptEmployeeAccruedmnit = new javax.swing.JMenuItem();
        hrRptStaffAppraisalReportmnit = new javax.swing.JMenuItem();
        hrRptPerformancereportmnit = new javax.swing.JMenuItem();
        hrRptDepartmentsmn = new javax.swing.JMenu();
        hrRptDeptStaffmnit = new javax.swing.JMenuItem();
        hrRptDepertmentsmnit = new javax.swing.JMenuItem();
        hrListingsmn = new javax.swing.JMenu();
        hrRptRolesAndResponsibilitiesmnit = new javax.swing.JMenuItem();
        hrRptJobDesignationmnit = new javax.swing.JMenuItem();
        hrRptProfessionalQualificationmnit = new javax.swing.JMenuItem();
        hrRptBranchesmnit = new javax.swing.JMenuItem();
        hrRptBrancesmnit = new javax.swing.JMenuItem();
        hrRptInsurancePoliciesmnit = new javax.swing.JMenuItem();
        hrRptGradesmnit = new javax.swing.JMenuItem();
        hrRptHierachyLevelsmnit = new javax.swing.JMenuItem();
        hrrptLicencesmnit = new javax.swing.JMenuItem();
        hrRptEmolumentsmnit = new javax.swing.JMenuItem();
        hrRptEducationalQualificationmnit = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JSeparator();
        hrRptStaffLoansmnit = new javax.swing.JMenuItem();
        hrRptJobPostingsmnit = new javax.swing.JMenuItem();
        hrRptUnionisedStaffListsmnit = new javax.swing.JMenuItem();
        hrRptSaccosmnit = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JSeparator();
        hrRptLeaveApplicationsmnit = new javax.swing.JMenuItem();
        hrRptRetenchmentListmnit = new javax.swing.JMenuItem();
        hrRptLeaveApplicationFormmnit = new javax.swing.JMenuItem();
        hrRptRetireesListmnit = new javax.swing.JMenuItem();
        hrRptStatutoryBodiesmnit = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JSeparator();
        hrRptGrievancesReportmnit = new javax.swing.JMenuItem();
        hrRptCheckoffmnit = new javax.swing.JMenuItem();
        hrRptAppraisalformsmnit = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JSeparator();
        hrRptTasksmnit = new javax.swing.JMenuItem();
        hrRptMinutesMeetingsmnit = new javax.swing.JMenuItem();
        hrRptDemotionsmnit = new javax.swing.JMenuItem();
        hrRptPromotionsmnit = new javax.swing.JMenuItem();
        lnfmn = new javax.swing.JMenu();
        winlnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        motiflnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        macmnit1 = new javax.swing.JCheckBoxMenuItem();
        skinmn = new javax.swing.JMenu();
        xpmnit1 = new javax.swing.JRadioButtonMenuItem();
        macos1mnit1 = new javax.swing.JRadioButtonMenuItem();
        whiltmnit1 = new javax.swing.JRadioButtonMenuItem();
        modernmnit1 = new javax.swing.JRadioButtonMenuItem();
        aquamnit1 = new javax.swing.JRadioButtonMenuItem();
        beosmnit1 = new javax.swing.JRadioButtonMenuItem();
        bbjmnit11 = new javax.swing.JRadioButtonMenuItem();
        hrUtilitiesmn = new javax.swing.JMenu();
        hrExportDatamnit = new javax.swing.JMenuItem();
        hrDatabaseBackupmnit = new javax.swing.JMenuItem();
        hrValidateDatamnit = new javax.swing.JMenuItem();
        hrImportDatamnit = new javax.swing.JMenuItem();
        hrCompactDatamnit = new javax.swing.JMenuItem();
        hrDataArchivingmnit = new javax.swing.JMenuItem();
        hrDataOptimizationmnit = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JSeparator();
        hrChangeUserPasswordmnit = new javax.swing.JMenuItem();
        hrRestoreDatamnit = new javax.swing.JMenuItem();
        hrUpdateDomainsmnit = new javax.swing.JMenuItem();
        hrVerifyEmployeeDetailsmnit = new javax.swing.JMenuItem();
        jSeparator16 = new javax.swing.JSeparator();
        hrPreferencemnit = new javax.swing.JMenuItem();
        hrBackgroundImagemnit = new javax.swing.JMenuItem();
        swinglnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        hrHelpmn = new javax.swing.JMenu();
        hrmHelpmnit = new javax.swing.JMenuItem();
        hrTOCmnit = new javax.swing.JMenuItem();
        hrSystemResourcesmnit = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JSeparator();
        hrAboutHRMmnit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Maintenance Management");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jToolBar3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar3.setFloatable(false);

        fmgrBttn.setToolTipText("File Manager");
        fmgrBttn.setBorder(null);
        fmgrBttn.setBorderPainted(false);
        fmgrBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        fmgrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        fmgrBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        fmgrBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmgrBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(fmgrBttn);

        calcBttn.setToolTipText("Calculator");
        calcBttn.setBorder(null);
        calcBttn.setBorderPainted(false);
        calcBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        calcBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        calcBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        calcBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(calcBttn);

        brwsrBttn.setToolTipText("Internet browser");
        brwsrBttn.setBorder(null);
        brwsrBttn.setBorderPainted(false);
        brwsrBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        brwsrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        brwsrBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        brwsrBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brwsrBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(brwsrBttn);

        editButtn.setToolTipText("Word processor");
        editButtn.setBorder(null);
        editButtn.setBorderPainted(false);
        editButtn.setMaximumSize(new java.awt.Dimension(26, 26));
        editButtn.setMinimumSize(new java.awt.Dimension(26, 26));
        editButtn.setPreferredSize(new java.awt.Dimension(26, 26));
        editButtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtnActionPerformed(evt);
            }
        });
        jToolBar3.add(editButtn);

        mtmediaBttn1.setToolTipText("Multimedia player");
        mtmediaBttn1.setBorder(null);
        mtmediaBttn1.setBorderPainted(false);
        mtmediaBttn1.setMaximumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn1.setMinimumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn1.setPreferredSize(new java.awt.Dimension(26, 26));
        mtmediaBttn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtmediaBttn1ActionPerformed(evt);
            }
        });
        jToolBar3.add(mtmediaBttn1);

        mailBttn.setToolTipText("Email utility");
        mailBttn.setBorder(null);
        mailBttn.setBorderPainted(false);
        mailBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        mailBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mailBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        mailBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(mailBttn);

        mtmediaBttn.setToolTipText("Multimedia player");
        mtmediaBttn.setBorder(null);
        mtmediaBttn.setBorderPainted(false);
        mtmediaBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtmediaBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(mtmediaBttn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar3, gridBagConstraints);

        jToolBar31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar31.setFloatable(false);

        jPanel1.setLayout(new java.awt.GridBagLayout());
        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        jToolBar31.add(jPanel1);

        helpButton.setToolTipText("Get system help");
        helpButton.setBorder(null);
        helpButton.setBorderPainted(false);
        helpButton.setMaximumSize(new java.awt.Dimension(26, 26));
        helpButton.setMinimumSize(new java.awt.Dimension(26, 26));
        helpButton.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar31.add(helpButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar31, gridBagConstraints);

        jToolBar311.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar311.setFloatable(false);

        operationsToolBar.setToolTipText("Operations");
        operationsToolBar.setBorder(null);
        operationsToolBar.setBorderPainted(false);
        operationsToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        operationsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        operationsToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        operationsToolBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationsToolBarActionPerformed(evt);
            }
        });
        jToolBar311.add(operationsToolBar);

        pharmacyToolBar.setToolTipText("Pharmacy");
        pharmacyToolBar.setBorder(null);
        pharmacyToolBar.setBorderPainted(false);
        pharmacyToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        pharmacyToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        pharmacyToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(pharmacyToolBar);

        payrollToolBar.setToolTipText("Payroll");
        payrollToolBar.setBorder(null);
        payrollToolBar.setBorderPainted(false);
        payrollToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        payrollToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        payrollToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(payrollToolBar);

        reportsToolBar.setToolTipText("Reports");
        reportsToolBar.setBorder(null);
        reportsToolBar.setBorderPainted(false);
        reportsToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        reportsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        reportsToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(reportsToolBar);

        closeShift.setToolTipText("Close Shift");
        closeShift.setBorder(null);
        closeShift.setBorderPainted(false);
        closeShift.setMaximumSize(new java.awt.Dimension(26, 26));
        closeShift.setMinimumSize(new java.awt.Dimension(26, 26));
        closeShift.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(closeShift);

        suspendShift.setToolTipText("Suspend Shift");
        suspendShift.setBorder(null);
        suspendShift.setBorderPainted(false);
        suspendShift.setMaximumSize(new java.awt.Dimension(26, 26));
        suspendShift.setMinimumSize(new java.awt.Dimension(26, 26));
        suspendShift.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(suspendShift);

        optimizeDB.setToolTipText("DB Optimize");
        optimizeDB.setBorder(null);
        optimizeDB.setBorderPainted(false);
        optimizeDB.setMaximumSize(new java.awt.Dimension(26, 26));
        optimizeDB.setMinimumSize(new java.awt.Dimension(26, 26));
        optimizeDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(optimizeDB);

        compactDB.setToolTipText("DB Compact");
        compactDB.setBorder(null);
        compactDB.setBorderPainted(false);
        compactDB.setMaximumSize(new java.awt.Dimension(26, 26));
        compactDB.setMinimumSize(new java.awt.Dimension(26, 26));
        compactDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(compactDB);

        backupDB.setToolTipText("DB Backup");
        backupDB.setBorder(null);
        backupDB.setBorderPainted(false);
        backupDB.setMaximumSize(new java.awt.Dimension(26, 26));
        backupDB.setMinimumSize(new java.awt.Dimension(26, 26));
        backupDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(backupDB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar311, gridBagConstraints);

        hrMainPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        hrMainPanel.add(KitchenDesktopPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        getContentPane().add(hrMainPanel, gridBagConstraints);

        hrSetupmn.setText("Setup");

        hrOrganisationalLayoutmn.setText("Kitchen Setup");

        branchesmnit.setText("Kitchen Types");
        branchesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchesmnitActionPerformed(evt);
            }
        });
        hrOrganisationalLayoutmn.add(branchesmnit);

        hrSetupmn.add(hrOrganisationalLayoutmn);

        unionmn.setText("Staff Setup");

        unionterminationmnit.setText("Allocate Kitchen");
        unionterminationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unionterminationmnitActionPerformed(evt);
            }
        });
        unionmn.add(unionterminationmnit);

        unionauthoritymnit.setText("Staff Transfer");
        unionauthoritymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unionauthoritymnitActionPerformed(evt);
            }
        });
        unionmn.add(unionauthoritymnit);

        hrSetupmn.add(unionmn);
        hrSetupmn.add(jSeparator18);

        hrExit.setText("Exit");
        hrExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrExitActionPerformed(evt);
            }
        });
        hrSetupmn.add(hrExit);

        hrMenuBar.add(hrSetupmn);

        hrOperationsmn.setText("Operations");
        hrOperationsmn.add(jSeparator7);

        hrUnionDetailsmnit.setText("Supplies");

        foodSchedulebtn.setText("Food schedule");
        foodSchedulebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodSchedulebtnActionPerformed(evt);
            }
        });
        hrUnionDetailsmnit.add(foodSchedulebtn);

        jMenuItem4.setText("Cost and Balance Book");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        hrUnionDetailsmnit.add(jMenuItem4);

        jMenuItem1.setText("S11 Form");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        hrUnionDetailsmnit.add(jMenuItem1);

        jMenuItem2.setText("Approve Requisition Form");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        hrUnionDetailsmnit.add(jMenuItem2);

        hrOperationsmn.add(hrUnionDetailsmnit);

        hrMenuBar.add(hrOperationsmn);

        hrReportsmn.setText("Reports");

        hrRptApplicantsmn.setText("Applications' Reports");

        hrRptListofApplicationsmnit.setText("List of Applications");
        hrRptApplicantsmn.add(hrRptListofApplicationsmnit);

        hrRptApplicationQualificationmnit.setText("Applications by Educational Qualification");
        hrRptApplicantsmn.add(hrRptApplicationQualificationmnit);

        hrRptApplicationProfmnit.setText("Application by Professional Qualification");
        hrRptApplicantsmn.add(hrRptApplicationProfmnit);

        hrRptApplicantResumemnit.setText("Applicant Resume");
        hrRptApplicantResumemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptApplicantResumemnitActionPerformed(evt);
            }
        });
        hrRptApplicantsmn.add(hrRptApplicantResumemnit);

        hrReportsmn.add(hrRptApplicantsmn);

        hrStaffReportmn.setText("Staff Reports");

        hrRptStaffListingmnit.setText("Staff Listing");
        hrRptStaffListingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptStaffListingmnitActionPerformed(evt);
            }
        });
        hrStaffReportmn.add(hrRptStaffListingmnit);

        hrRptMemosmnit.setText("Memos");
        hrRptMemosmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptMemosmnitActionPerformed(evt);
            }
        });
        hrStaffReportmn.add(hrRptMemosmnit);

        hrRptEmployeeHistorymnit.setText("Employee History");
        hrRptEmployeeHistorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptEmployeeHistorymnitActionPerformed(evt);
            }
        });
        hrStaffReportmn.add(hrRptEmployeeHistorymnit);

        hrRptStaffAttendanceReportmnit.setText("Staff Attendance Report");
        hrRptStaffAttendanceReportmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptStaffAttendanceReportmnitActionPerformed(evt);
            }
        });
        hrStaffReportmn.add(hrRptStaffAttendanceReportmnit);

        hrRptEmployeeAccruedmnit.setText("Employee Accrued Savings");
        hrStaffReportmn.add(hrRptEmployeeAccruedmnit);

        hrRptStaffAppraisalReportmnit.setText("Staff Appraisal Report");
        hrStaffReportmn.add(hrRptStaffAppraisalReportmnit);

        hrRptPerformancereportmnit.setText("Performance Report");
        hrStaffReportmn.add(hrRptPerformancereportmnit);

        hrReportsmn.add(hrStaffReportmn);

        hrRptDepartmentsmn.setText("Departments & Sections");

        hrRptDeptStaffmnit.setText("Departmental Staff");
        hrRptDeptStaffmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptDeptStaffmnitActionPerformed(evt);
            }
        });
        hrRptDepartmentsmn.add(hrRptDeptStaffmnit);

        hrRptDepertmentsmnit.setText("Departments & Sections");
        hrRptDepartmentsmn.add(hrRptDepertmentsmnit);

        hrReportsmn.add(hrRptDepartmentsmn);

        hrListingsmn.setText("Listings");

        hrRptRolesAndResponsibilitiesmnit.setText("Roles And Responsibities");
        hrListingsmn.add(hrRptRolesAndResponsibilitiesmnit);

        hrRptJobDesignationmnit.setText("Job Designation");
        hrListingsmn.add(hrRptJobDesignationmnit);

        hrRptProfessionalQualificationmnit.setText("Professional Qualification");
        hrListingsmn.add(hrRptProfessionalQualificationmnit);

        hrRptBranchesmnit.setText("Branches");
        hrListingsmn.add(hrRptBranchesmnit);

        hrRptBrancesmnit.setText("Branches & Duty Stations");
        hrListingsmn.add(hrRptBrancesmnit);

        hrRptInsurancePoliciesmnit.setText("Insurance Policies");
        hrListingsmn.add(hrRptInsurancePoliciesmnit);

        hrRptGradesmnit.setText("Grades & Qualifications");
        hrListingsmn.add(hrRptGradesmnit);

        hrRptHierachyLevelsmnit.setText("Hierachy Levels");
        hrListingsmn.add(hrRptHierachyLevelsmnit);

        hrrptLicencesmnit.setText("Licences");
        hrListingsmn.add(hrrptLicencesmnit);

        hrRptEmolumentsmnit.setText("Emoluments & Benefits");
        hrListingsmn.add(hrRptEmolumentsmnit);

        hrRptEducationalQualificationmnit.setText("Educational Qualifications");
        hrListingsmn.add(hrRptEducationalQualificationmnit);

        hrReportsmn.add(hrListingsmn);
        hrReportsmn.add(jSeparator11);

        hrRptStaffLoansmnit.setText("Staff Loans Reports");
        hrReportsmn.add(hrRptStaffLoansmnit);

        hrRptJobPostingsmnit.setText("Job Postings");
        hrReportsmn.add(hrRptJobPostingsmnit);

        hrRptUnionisedStaffListsmnit.setText("Unionised Staff Lists");
        hrReportsmn.add(hrRptUnionisedStaffListsmnit);

        hrRptSaccosmnit.setText("Saccos & Investment Schemes");
        hrReportsmn.add(hrRptSaccosmnit);
        hrReportsmn.add(jSeparator10);

        hrRptLeaveApplicationsmnit.setText("Leave Applications");
        hrReportsmn.add(hrRptLeaveApplicationsmnit);

        hrRptRetenchmentListmnit.setText("Retrenchment List");
        hrReportsmn.add(hrRptRetenchmentListmnit);

        hrRptLeaveApplicationFormmnit.setText("Leave Application Form");
        hrReportsmn.add(hrRptLeaveApplicationFormmnit);

        hrRptRetireesListmnit.setText("Retirees List");
        hrRptRetireesListmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptRetireesListmnitActionPerformed(evt);
            }
        });
        hrReportsmn.add(hrRptRetireesListmnit);

        hrRptStatutoryBodiesmnit.setText("Statutory Bodies");
        hrRptStatutoryBodiesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrRptStatutoryBodiesmnitActionPerformed(evt);
            }
        });
        hrReportsmn.add(hrRptStatutoryBodiesmnit);
        hrReportsmn.add(jSeparator12);

        hrRptGrievancesReportmnit.setText("Grievances Reports");
        hrReportsmn.add(hrRptGrievancesReportmnit);

        hrRptCheckoffmnit.setText("Check Off Purchase Report");
        hrReportsmn.add(hrRptCheckoffmnit);

        hrRptAppraisalformsmnit.setText("Appraisal Forms");
        hrReportsmn.add(hrRptAppraisalformsmnit);
        hrReportsmn.add(jSeparator13);

        hrRptTasksmnit.setText("Tasks & Schedules");
        hrReportsmn.add(hrRptTasksmnit);

        hrRptMinutesMeetingsmnit.setText("Minutes of Meetings");
        hrReportsmn.add(hrRptMinutesMeetingsmnit);

        hrRptDemotionsmnit.setText("Demotions & Dimerits");
        hrReportsmn.add(hrRptDemotionsmnit);

        hrRptPromotionsmnit.setText("Promotions & Merits");
        hrReportsmn.add(hrRptPromotionsmnit);

        hrMenuBar.add(hrReportsmn);

        lnfmn.setText("Look & Feel");

        buttonGroup2.add(winlnfmnit1);
        winlnfmnit1.setText("Windows");
        winlnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winlnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(winlnfmnit1);

        buttonGroup2.add(motiflnfmnit1);
        motiflnfmnit1.setText("Motif");
        motiflnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motiflnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(motiflnfmnit1);

        buttonGroup2.add(macmnit1);
        macmnit1.setText("Mac OS");
        macmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(macmnit1);

        skinmn.setText("Themes");

        buttonGroup3.add(xpmnit1);
        xpmnit1.setText("XP Luna");
        xpmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xpmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(xpmnit1);

        buttonGroup3.add(macos1mnit1);
        macos1mnit1.setText("Macintosh");
        macos1mnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macos1mnit1ActionPerformed(evt);
            }
        });
        skinmn.add(macos1mnit1);

        buttonGroup3.add(whiltmnit1);
        whiltmnit1.setText("Whistler");
        whiltmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiltmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(whiltmnit1);

        buttonGroup3.add(modernmnit1);
        modernmnit1.setText("Modern");
        modernmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(modernmnit1);

        buttonGroup3.add(aquamnit1);
        aquamnit1.setText("Aqua");
        aquamnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquamnit1ActionPerformed(evt);
            }
        });
        skinmn.add(aquamnit1);

        buttonGroup3.add(beosmnit1);
        beosmnit1.setText("BEOS");
        beosmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beosmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(beosmnit1);

        buttonGroup3.add(bbjmnit11);
        bbjmnit11.setText("BBJ");
        bbjmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbjmnit11ActionPerformed(evt);
            }
        });
        skinmn.add(bbjmnit11);

        lnfmn.add(skinmn);

        hrMenuBar.add(lnfmn);

        hrUtilitiesmn.setText("Utilities");
        hrUtilitiesmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrUtilitiesmnActionPerformed(evt);
            }
        });

        hrExportDatamnit.setText("Export HRM Data");
        hrUtilitiesmn.add(hrExportDatamnit);

        hrDatabaseBackupmnit.setText("Database Backup");
        hrUtilitiesmn.add(hrDatabaseBackupmnit);

        hrValidateDatamnit.setText("Validate Data");
        hrUtilitiesmn.add(hrValidateDatamnit);

        hrImportDatamnit.setText("Import Data");
        hrUtilitiesmn.add(hrImportDatamnit);

        hrCompactDatamnit.setText("Compact Data");
        hrCompactDatamnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrCompactDatamnitActionPerformed(evt);
            }
        });
        hrUtilitiesmn.add(hrCompactDatamnit);

        hrDataArchivingmnit.setText("Data Archiving");
        hrUtilitiesmn.add(hrDataArchivingmnit);

        hrDataOptimizationmnit.setText("Data Optimization");
        hrUtilitiesmn.add(hrDataOptimizationmnit);
        hrUtilitiesmn.add(jSeparator15);

        hrChangeUserPasswordmnit.setText("Change User Password");
        hrUtilitiesmn.add(hrChangeUserPasswordmnit);

        hrRestoreDatamnit.setText("Restore Data");
        hrUtilitiesmn.add(hrRestoreDatamnit);

        hrUpdateDomainsmnit.setText("Update Domains");
        hrUtilitiesmn.add(hrUpdateDomainsmnit);

        hrVerifyEmployeeDetailsmnit.setText("Verify Employee Details");
        hrUtilitiesmn.add(hrVerifyEmployeeDetailsmnit);
        hrUtilitiesmn.add(jSeparator16);

        hrPreferencemnit.setText("HRM Preferences");
        hrUtilitiesmn.add(hrPreferencemnit);

        hrBackgroundImagemnit.setText("Background Image");
        hrUtilitiesmn.add(hrBackgroundImagemnit);

        buttonGroup2.add(swinglnfmnit1);
        swinglnfmnit1.setText("Metal");
        swinglnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swinglnfmnit1ActionPerformed(evt);
            }
        });
        hrUtilitiesmn.add(swinglnfmnit1);

        hrMenuBar.add(hrUtilitiesmn);

        hrHelpmn.setText("Help");

        hrmHelpmnit.setText("HRM Help");
        hrHelpmn.add(hrmHelpmnit);

        hrTOCmnit.setText("Table of Contents");
        hrHelpmn.add(hrTOCmnit);

        hrSystemResourcesmnit.setText("System Resources");
        hrHelpmn.add(hrSystemResourcesmnit);
        hrHelpmn.add(jSeparator14);

        hrAboutHRMmnit.setText("About HRM");
        hrAboutHRMmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrAboutHRMmnitActionPerformed(evt);
            }
        });
        hrHelpmn.add(hrAboutHRMmnit);

        hrMenuBar.add(hrHelpmn);

        setJMenuBar(hrMenuBar);

        setSize(new java.awt.Dimension(589, 404));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hrRptStaffAttendanceReportmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptStaffAttendanceReportmnitActionPerformed
   com.afrisoftech.hrlib.HrEmpAbsenceNamepanel absence = new com.afrisoftech.hrlib.HrEmpAbsenceNamepanel(this,pconnectDB,true,retdate,connectDB);
        absence.show(true);  // Add your hand     // Add your handling code here:
    }//GEN-LAST:event_hrRptStaffAttendanceReportmnitActionPerformed

    private void hrUtilitiesmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrUtilitiesmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_hrUtilitiesmnActionPerformed

    private void hrRptMemosmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptMemosmnitActionPerformed
     com.afrisoftech.hr.MemosPdf list = new com.afrisoftech.hr.MemosPdf();
    list.MemosPdf(connectDB);    // Add your handling code here:
    }//GEN-LAST:event_hrRptMemosmnitActionPerformed

    private void hrRptRetireesListmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptRetireesListmnitActionPerformed
      com.afrisoftech.hrlib.RetireDatePanel retd = new com.afrisoftech.hrlib.RetireDatePanel(this,pconnectDB,true,retdate,connectDB);
        retd.show(true);  // Add your handling code here:
    }//GEN-LAST:event_hrRptRetireesListmnitActionPerformed

    private void hrRptEmployeeHistorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptEmployeeHistorymnitActionPerformed
  com.afrisoftech.hrlib.HrEmpProfNamepanel emp = new com.afrisoftech.hrlib.HrEmpProfNamepanel(this,pconnectDB,true,employee,connectDB);
        emp.show(true);
    }//GEN-LAST:event_hrRptEmployeeHistorymnitActionPerformed

    private void hrRptApplicantResumemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptApplicantResumemnitActionPerformed
com.afrisoftech.hr.AllApplicantResumePdf app = new com.afrisoftech.hr.AllApplicantResumePdf();
    app.AllApplicantResumePdf(connectDB);              // Add your handling code here:
    }//GEN-LAST:event_hrRptApplicantResumemnitActionPerformed

    private void hrRptDeptStaffmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptDeptStaffmnitActionPerformed
        com.afrisoftech.hrlib.HrDepSelectpanel deprep = new com.afrisoftech.hrlib.HrDepSelectpanel(this,pconnectDB,true,DepaStaff,connectDB);
        deprep.show(true);
        // Add your handling code here:
    }//GEN-LAST:event_hrRptDeptStaffmnitActionPerformed

    private void hrRptStaffListingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptStaffListingmnitActionPerformed
 com.afrisoftech.hr.StaffListPdf list = new com.afrisoftech.hr.StaffListPdf();
    list.StaffListPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_hrRptStaffListingmnitActionPerformed

    private void hrRptStatutoryBodiesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRptStatutoryBodiesmnitActionPerformed
   
    // Add your handling code here:
    }//GEN-LAST:event_hrRptStatutoryBodiesmnitActionPerformed

    private void checkoffopoeratorsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoffopoeratorsmnitActionPerformed
       
    }//GEN-LAST:event_checkoffopoeratorsmnitActionPerformed
                                                                                                    
    private void hrRecruitmentProcessingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrRecruitmentProcessingmnitActionPerformed
        // com.afrisoftech.hr.RecruitmentHiringIntfr rhire = new com.afrisoftech.hr.RecruitmentHiringIntfr(connectDB,pconnectDB);
        // hrDesktopPane.add(rhire, javax.swing.JLayeredPane.DEFAULT_LAYER);
        //try {
        
        //    rhire.setSelected(true);
        // } catch(java.beans.PropertyVetoException pvt){}   // Add your handling code here:
    }//GEN-LAST:event_hrRecruitmentProcessingmnitActionPerformed
                
    private void hrResumedbmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrResumedbmnitActionPerformed
     
        // Add your handling code here:
    }//GEN-LAST:event_hrResumedbmnitActionPerformed
    
    private void hrCompactDatamnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrCompactDatamnitActionPerformed
        
        SampleDbCompact smpthr_dbcompact = new SampleDbCompact();
        
        int dbcompact_int =  javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start Compacting the database?", "System DB Compacter dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Compact DB Immediately", "Schedule DB Compacter Process", "Cancel the DB Compacter Process"}, "Schedule DB Compacter Process");
        
        switch (dbcompact_int) {
            
            case javax.swing.JOptionPane.YES_OPTION :
                
                smpthr_dbcompact.SampleDbCompact();
                
                break;
                
                
            case javax.swing.JOptionPane.NO_OPTION :
                
                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");
                
                break;
                
            case javax.swing.JOptionPane.CANCEL_OPTION :
                
                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the DB Compacter operation");
                
                break;
                
            default : ;;
            
        }
        
        smpthr_dbcompact.stop();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_hrCompactDatamnitActionPerformed
    
    private void bbjmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbjmnit11ActionPerformed
        
        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "bbjthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/bbjthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "bbjthemepack.zip");
        // TODO add your handling code here:
    }//GEN-LAST:event_bbjmnit11ActionPerformed
    
    private void beosmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beosmnit1ActionPerformed
        
        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "beosthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/beosthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "beosthemepack.zip");
        // TODO add your handling code here:
    }//GEN-LAST:event_beosmnit1ActionPerformed
    
    private void aquamnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquamnit1ActionPerformed
        
        //       this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "aquathemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/aquathemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "aquathemepack.zip");
        // TODO add your handling code here:
    }//GEN-LAST:event_aquamnit1ActionPerformed
    
    private void modernmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernmnit1ActionPerformed
        
        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "modernthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/modernthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "modernthemepack.zip");
        // TODO add your handling code here:
    }//GEN-LAST:event_modernmnit1ActionPerformed
    
    private void whiltmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiltmnit1ActionPerformed
        
        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "whistlerthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/whistlerthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "whistlerthemepack.zip");
        // TODO add your handling code here:
    }//GEN-LAST:event_whiltmnit1ActionPerformed
    
    private void macos1mnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macos1mnit1ActionPerformed
        
        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "macosthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/macosthemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "macosthemepack.zip");
        // TODO add your handling code here:
    }//GEN-LAST:event_macos1mnit1ActionPerformed
    
    private void xpmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xpmnit1ActionPerformed
        
        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "xplunathemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/xplunathemepack.zip"));
        
        appProp.setProperty("defaultlnf","com.l2fprod.gui.plaf.skin.SkinLookAndFeel");
        
        appProp.setProperty("defaulttheme", "xplunathemepack.zip");        // TODO add your handling code here:
    }//GEN-LAST:event_xpmnit1ActionPerformed
    
    private void macmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macmnit1ActionPerformed
        
        this.changeTheme("it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");        // TODO add your handling code here:
    }//GEN-LAST:event_macmnit1ActionPerformed
    
    private void motiflnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motiflnfmnit1ActionPerformed
        
        this.changeTheme("com.sun.java.swing.plaf.motif.MotifLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","com.sun.java.swing.plaf.motif.MotifLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");        // TODO add your handling code here:
    }//GEN-LAST:event_motiflnfmnit1ActionPerformed
    
    private void winlnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winlnfmnit1ActionPerformed
        
        
        //  System.setProperty("os.name", "Windows");
        
        
        this.changeTheme("com.sun.java.swing.plaf.windows.WindowsLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");        // TODO add your handling code here:
    }//GEN-LAST:event_winlnfmnit1ActionPerformed
    
    private void swinglnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swinglnfmnit1ActionPerformed
        
        this.changeTheme("javax.swing.plaf.metal.MetalLookAndFeel", null);
        
        appProp.setProperty("defaultlnf","javax.swing.plaf.metal.MetalLookAndFeel");
        
        appProp.setProperty("defaulttheme", "");
        // TODO add your handling code here:
    }//GEN-LAST:event_swinglnfmnit1ActionPerformed
    
    private void operationsToolBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationsToolBarActionPerformed
        
        // TODO add your handling code here:
    }//GEN-LAST:event_operationsToolBarActionPerformed
    
    private void mtmediaBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtmediaBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kscd");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else  {
                
                rt.exec("C:\\Program Files\\Windows Media Player\\wmplayer.exe /prefetch:1");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }         // TODO add your handling code here:
    }//GEN-LAST:event_mtmediaBttnActionPerformed
    
    private void mailBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("evolution");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            
            else {
                
                rt.exec("outlook");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }         // TODO add your handling code here:
    }//GEN-LAST:event_mailBttnActionPerformed
    
    private void mtmediaBttn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtmediaBttn1ActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kspread");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else  {
                
                rt.exec("excel");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mtmediaBttn1ActionPerformed
    
    private void editButtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kedit");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else  {
                
                rt.exec("winword");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_editButtnActionPerformed
    
    private void brwsrBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brwsrBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("netscape");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else {
                
                rt.exec("iexplore");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_brwsrBttnActionPerformed
                
    private void calcBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("kcalc");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            else  {
                
                rt.exec("calc");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
        }         // TODO add your handling code here:
    }//GEN-LAST:event_calcBttnActionPerformed
    
    private void fmgrBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmgrBttnActionPerformed
        
        java.lang.Runtime rt = java.lang.Runtime.getRuntime();
        
        
        
        try {
            
            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
                
                rt.exec("konqueror");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
            }
            else  {
                
                rt.exec("explorer");
                
                System.out.print(System.getProperty("os.name") + "  "+System.getProperty("os.version"));
                
            }
            
            
            
        } catch(IOException IOExec){
            
            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            
        }         // TODO add your handling code here:
    }//GEN-LAST:event_fmgrBttnActionPerformed
                                                                                                                
    private void hrAboutHRMmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrAboutHRMmnitActionPerformed
        com.afrisoftech.hr.AboutBoxIntfr hrAboutBox = new com.afrisoftech.hr.AboutBoxIntfr(connectDB,pconnectDB);
        KitchenDesktopPane.add(hrAboutBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            
            
            hrAboutBox.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){
            
            pvt.printStackTrace();
            
        }         // TODO add your handling code here:
    }//GEN-LAST:event_hrAboutHRMmnitActionPerformed
                
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            //  this.storePreferences();
            
            this.dispose();
            
        } else {}
    }//GEN-LAST:event_exitForm

    private void hrExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrExitActionPerformed

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

            //        this.storePreferences();

            this.dispose();

        } else {}     // Add your handling code here:
    }//GEN-LAST:event_hrExitActionPerformed

    private void unionauthoritymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unionauthoritymnitActionPerformed
        com.afrisoftech.maintenance.MaintenanceRooms lmgmt = new com.afrisoftech.maintenance.MaintenanceRooms();
        KitchenDesktopPane.add(lmgmt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            lmgmt.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}        // Add your handling code here:
    }//GEN-LAST:event_unionauthoritymnitActionPerformed

    private void unionterminationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unionterminationmnitActionPerformed
        com.afrisoftech.kitchen.AllocateStaffToKitchen lmgmt = new com.afrisoftech.kitchen.AllocateStaffToKitchen(connectDB,pconnectDB);
        KitchenDesktopPane.add(lmgmt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            lmgmt.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}   // Add your handling code here:
    }//GEN-LAST:event_unionterminationmnitActionPerformed

    private void branchesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchesmnitActionPerformed
        com.afrisoftech.kitchen.kitchenSetup branches = new com.afrisoftech.kitchen.kitchenSetup(connectDB,pconnectDB);
        KitchenDesktopPane.add(branches, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            branches.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code

    }//GEN-LAST:event_branchesmnitActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.kitchen.S11 Imgt = new com.afrisoftech.kitchen.S11(connectDB,pconnectDB);
        KitchenDesktopPane.add(Imgt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            Imgt.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        // com.afrisoftech.hospinventory.Issiuingintfr Imgt = new com.afrisoftech.hospinventory.Issiuingintfr(connectDB,pconnectDB);
        com.afrisoftech.kitchen.Costandbalancebook Imgt = new com.afrisoftech.kitchen.Costandbalancebook(connectDB,pconnectDB);

        KitchenDesktopPane.add(Imgt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            Imgt.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void foodSchedulebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodSchedulebtnActionPerformed
        com.afrisoftech.kitchen.Foodschedule Imgt = new com.afrisoftech.kitchen.Foodschedule(connectDB,pconnectDB);
        KitchenDesktopPane.add(Imgt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            Imgt.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code
    }//GEN-LAST:event_foodSchedulebtnActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        
        com.afrisoftech.kitchen.ApproveRequisitionForm Imgt = new com.afrisoftech.kitchen.ApproveRequisitionForm(connectDB,pconnectDB);
        KitchenDesktopPane.add(Imgt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            Imgt.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        KitchenMain hrMainInstance = new KitchenMain();
        hrMainInstance.setExtendedState(hrMainInstance.MAXIMIZED_BOTH);
        getPath2Acrobat();
        hrMainInstance.setVisible(true);
        
    }
    
    public static org.netbeans.lib.sql.pool.PooledConnectionSource getPooledConnectionSource() {
        
        org.netbeans.lib.sql.pool.PooledConnectionSource pooledConnectionSource1 = new org.netbeans.lib.sql.pool.PooledConnectionSource();
        
        pooledConnectionSource1.setDatabase("jdbc:postgresql://localhost:5432/funsoft");
        
        pooledConnectionSource1.setDriver("org.postgresql.Driver");
        
        pooledConnectionSource1.setPassword("02ac219a6b011019ea966757de3451d2399ce04dd82596d3ba4266a8845ab7f80861", true);
        
        pooledConnectionSource1.setUsername("postgres");
        
        return pooledConnectionSource1;
    }
    public static java.sql.Connection connect2DB() {
        
        java.sql.Connection connectDBStock = null;
        
        try {
            
            java.lang.Class.forName("org.postgresql.Driver");
            
        } catch(java.lang.ClassNotFoundException cnf) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), cnf.getMessage());
            
        }
        
        try {
            
            connectDBStock = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/funsoft","postgres","password");
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
            
        }
        
        return connectDBStock;
        
    }
    
    
    public void updateActivityDomains() {
        
        if (domainsReset) {
            
            try {
                
                java.sql.PreparedStatement pstmt_del = this.connectDB.prepareStatement("DELETE FROM menu_item_list where app_name = 'hospital_hr'");
                
                pstmt_del.execute();
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
                
            }
            
            try {
                
                java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hr.HRMain");
                
                java.lang.reflect.Field[] fieldsArray = classMain.getDeclaredFields();
                
                for (int n = 0; n  < fieldsArray.length; n++) {
                    
                    if (fieldsArray[n].getName().endsWith("mnit")) {
                        
                        
                        try {
                            
                            
                            javax.swing.JMenuItem disMenuItems = (javax.swing.JMenuItem)fieldsArray[n].get(this);
                            
                            
                            try {
                                
                                
                                Class.forName("org.postgresql.Driver");
                                
                                
                                
                            } catch (java.lang.ClassNotFoundException cnfExec) {
                                
                                
                                System.out.println("Can't locate PostgreSQL driver");
                                
                                
                            }
                            
                            try {
                                
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into menu_item_list values(?, ?, ?)");
                                
                                System.out.println("Ready to insert menu items");
                                
                                pstmt.setString(1,fieldsArray[n].getName());
                                
                                pstmt.setString(2,disMenuItems.getText());
                                
                                pstmt.setString(3,"hospital_hr");
                                
                                pstmt.executeUpdate();
                                
                            } catch(java.sql.SQLException sq){
                                
                                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                
                                System.out.println(sq.getMessage());
                                
                            }
                            
                            
                            
                        } catch(java.lang.IllegalAccessException illAcc){
                            
                            System.out.println(illAcc.getMessage());
                            
                        }
                    }
                    
                }
                
            } catch(java.lang.ClassNotFoundException clsNotFnd){
                
                javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");
                
                
            }
        }
        
    }
    public void changeThemeByUrl(java.lang.String lnf, java.net.URL themepack) {
        
        java.lang.String themepackPath = null;
        
        
        com.l2fprod.gui.plaf.skin.Skin skin = null;
        
        try {
            
            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);
            
        } catch(java.lang.Exception exec) {
            
            
        }
        
        
        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);
        
        java.awt.Component[] component_array = null;
        
        
        component_array = this.getComponents();
        
        try {
            
            try {
                
                try {
                    
                    try {
                        
                        
                        javax.swing.UIManager.setLookAndFeel(lnf);
                        
                        
                        // jToolBar1.updateUI();
                        
                        //   this.jPopupMenu1.updateUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);
                        
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());
                        
                        //         updateNewComponentsUI();
                        
                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        
                        // this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Hospital System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                        
                        
                    } catch(java.lang.ClassNotFoundException cnfExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());
                        
                    }
                    
                    
                } catch(java.lang.InstantiationException instExec) {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());
                    
                }
                
            } catch(java.lang.IllegalAccessException illegExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());
                
            }
            
        } catch(javax.swing.UnsupportedLookAndFeelException unsuppExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());
            
        }
        
    }
    
    public void changeTheme(java.lang.String lnf, java.lang.String themepack) {
        
        java.lang.String themepackPath = null;
        
        
        com.l2fprod.gui.plaf.skin.Skin skin = null;
        
        
        try {
            
            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);
            
        } catch(java.lang.Exception exec) {
            
            
        }
        
        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);
        
        java.awt.Component[] component_array = null;
        
        
        component_array = this.getComponents();
        
        try {
            
            try {
                
                try {
                    
                    try {
                        
                        
                        javax.swing.UIManager.setLookAndFeel(lnf);
                        
                        
                        //jToolBar1.updateUI();
                        
                        //   this.jPopupMenu1.updateUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);
                        
                        //                      updateNewComponentsUI();
                        
                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());
                        
                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        
                        // this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Hospital System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                        
                        
                    } catch(java.lang.ClassNotFoundException cnfExec) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());
                        
                    }
                    
                    
                } catch(java.lang.InstantiationException instExec) {
                    
                    
                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());
                    
                }
                
            } catch(java.lang.IllegalAccessException illegExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());
                
            }
            
        } catch(javax.swing.UnsupportedLookAndFeelException unsuppExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());
            
        }
        
    }
    public static java.lang.String getPath2Acrobat() {
        //        java.lang.String dbServerIp = null;
        java.lang.String acroPath = null;
        
        java.lang.String myAppFileUrl = null;
        
        myAppFileUrl =  System.getProperty("user.dir")
        
        + System.getProperty("file.separator")
        
        + "hosprop.properties";
        
        try {
            
            java.io.FileInputStream propInFile = new java.io.FileInputStream(myAppFileUrl);
            
            
            
            //       java.io.FileOutputStream propOutFile = new java.io.FileOutputStream("myapp.properties");
            
            appProp = new java.util.Properties();
            
            try {
                
                appProp.load(propInFile);
                
                //            dbServerIp = appProp.getProperty("dbServerIpAdd", "127.0.0.1");
                
                acroPath = appProp.getProperty("acrobatPath","c:/Program Files/Adobe/Acrobat 5.0/Reader/AcroRd32.exe ");
                
                //            System.out.println(dbServerIp);
                System.out.println(acroPath);
                
                //  return dbServerIp;
                
                
            } catch (java.io.IOException ioExec){
                
                System.out.println(ioExec.getMessage());
                
            }
            
            // return dbServerIp;
            
        } catch (java.lang.Exception exc){
            
            System.out.println(exc.getMessage());
            
            //    javax.swing.JOptionPane.showMessageDialog(this, "Properties file not found!");
            
        }
        
        return acroPath;
        
    }
    public void menuItemsDisabler(java.lang.Object[] menuList2Disable) {
        
        java.lang.reflect.Field[] fieldsArray = null;
        
        javax.swing.JMenuItem disMenuItems = null;
        
        
        try {
            java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hr.HRMain");
            
            try {
                
                fieldsArray = classMain.getDeclaredFields();
                
                for (int n = 0; n  < fieldsArray.length; n++) {
                    
                    if (fieldsArray[n].getName().endsWith("mnit")) {
                        
                        disMenuItems = (javax.swing.JMenuItem)fieldsArray[n].get(this);
                        
                       // System.out.println(fieldsArray[n].getName()+"\t"+"\t"+"\t"+disMenuItems.getText());
                        
                       // disMenuItems.setEnabled(false);
                        
                        disMenuItems.setVisible(false);
                        
                        for (int m = 0; m < menuList2Disable.length; m++) {
                            
                            if (fieldsArray[n].getName().equals(menuList2Disable[m])) {
                                
                                java.lang.Object obj = (java.lang.Object)fieldsArray[n];
                                
                                try{
                                    
                                    javax.swing.JMenuItem men2dis = (javax.swing.JMenuItem)fieldsArray[n].get(this);
                                    
                                    
                                    men2dis.setVisible(true);
                                    
                                } catch(java.lang.IllegalAccessException illAcc){
                                    
                                    System.out.println(illAcc.getMessage());
                                    
                                }
                                
                            }
                            
                        }
                        
                    }
                    
                }
                
                
            } catch(java.lang.IllegalAccessException illAcc){
                
                System.out.println(illAcc.getMessage());
                
            }
            
        } catch(java.lang.ClassNotFoundException clsNotFnd){
            
            javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");
            
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDesktopPane KitchenDesktopPane;
    private javax.swing.JRadioButtonMenuItem aquamnit1;
    private javax.swing.JButton backupDB;
    private javax.swing.JRadioButtonMenuItem bbjmnit11;
    private javax.swing.JRadioButtonMenuItem beosmnit1;
    private javax.swing.JMenuItem branchesmnit;
    private javax.swing.JButton brwsrBttn;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton calcBttn;
    private javax.swing.JButton closeShift;
    private javax.swing.JButton compactDB;
    private javax.swing.JButton editButtn;
    private javax.swing.JButton fmgrBttn;
    private javax.swing.JMenuItem foodSchedulebtn;
    private javax.swing.JButton helpButton;
    private javax.swing.JMenuItem hrAboutHRMmnit;
    private javax.swing.JMenuItem hrBackgroundImagemnit;
    private javax.swing.JMenuItem hrChangeUserPasswordmnit;
    private javax.swing.JMenuItem hrCompactDatamnit;
    private javax.swing.JMenuItem hrDataArchivingmnit;
    private javax.swing.JMenuItem hrDataOptimizationmnit;
    private javax.swing.JMenuItem hrDatabaseBackupmnit;
    private javax.swing.JMenuItem hrExit;
    private javax.swing.JMenuItem hrExportDatamnit;
    private javax.swing.JMenu hrHelpmn;
    private javax.swing.JMenuItem hrImportDatamnit;
    private javax.swing.JMenu hrListingsmn;
    private javax.swing.JPanel hrMainPanel;
    private javax.swing.JMenuBar hrMenuBar;
    private javax.swing.JMenu hrOperationsmn;
    private javax.swing.JMenu hrOrganisationalLayoutmn;
    private javax.swing.JMenuItem hrPreferencemnit;
    private javax.swing.JMenu hrReportsmn;
    private javax.swing.JMenuItem hrRestoreDatamnit;
    private javax.swing.JMenuItem hrRptApplicantResumemnit;
    private javax.swing.JMenu hrRptApplicantsmn;
    private javax.swing.JMenuItem hrRptApplicationProfmnit;
    private javax.swing.JMenuItem hrRptApplicationQualificationmnit;
    private javax.swing.JMenuItem hrRptAppraisalformsmnit;
    private javax.swing.JMenuItem hrRptBrancesmnit;
    private javax.swing.JMenuItem hrRptBranchesmnit;
    private javax.swing.JMenuItem hrRptCheckoffmnit;
    private javax.swing.JMenuItem hrRptDemotionsmnit;
    private javax.swing.JMenu hrRptDepartmentsmn;
    private javax.swing.JMenuItem hrRptDepertmentsmnit;
    private javax.swing.JMenuItem hrRptDeptStaffmnit;
    private javax.swing.JMenuItem hrRptEducationalQualificationmnit;
    private javax.swing.JMenuItem hrRptEmolumentsmnit;
    private javax.swing.JMenuItem hrRptEmployeeAccruedmnit;
    private javax.swing.JMenuItem hrRptEmployeeHistorymnit;
    private javax.swing.JMenuItem hrRptGradesmnit;
    private javax.swing.JMenuItem hrRptGrievancesReportmnit;
    private javax.swing.JMenuItem hrRptHierachyLevelsmnit;
    private javax.swing.JMenuItem hrRptInsurancePoliciesmnit;
    private javax.swing.JMenuItem hrRptJobDesignationmnit;
    private javax.swing.JMenuItem hrRptJobPostingsmnit;
    private javax.swing.JMenuItem hrRptLeaveApplicationFormmnit;
    private javax.swing.JMenuItem hrRptLeaveApplicationsmnit;
    private javax.swing.JMenuItem hrRptListofApplicationsmnit;
    private javax.swing.JMenuItem hrRptMemosmnit;
    private javax.swing.JMenuItem hrRptMinutesMeetingsmnit;
    private javax.swing.JMenuItem hrRptPerformancereportmnit;
    private javax.swing.JMenuItem hrRptProfessionalQualificationmnit;
    private javax.swing.JMenuItem hrRptPromotionsmnit;
    private javax.swing.JMenuItem hrRptRetenchmentListmnit;
    private javax.swing.JMenuItem hrRptRetireesListmnit;
    private javax.swing.JMenuItem hrRptRolesAndResponsibilitiesmnit;
    private javax.swing.JMenuItem hrRptSaccosmnit;
    private javax.swing.JMenuItem hrRptStaffAppraisalReportmnit;
    private javax.swing.JMenuItem hrRptStaffAttendanceReportmnit;
    private javax.swing.JMenuItem hrRptStaffListingmnit;
    private javax.swing.JMenuItem hrRptStaffLoansmnit;
    private javax.swing.JMenuItem hrRptStatutoryBodiesmnit;
    private javax.swing.JMenuItem hrRptTasksmnit;
    private javax.swing.JMenuItem hrRptUnionisedStaffListsmnit;
    private javax.swing.JMenu hrSetupmn;
    private javax.swing.JMenu hrStaffReportmn;
    private javax.swing.JMenuItem hrSystemResourcesmnit;
    private javax.swing.JMenuItem hrTOCmnit;
    private javax.swing.JMenu hrUnionDetailsmnit;
    private javax.swing.JMenuItem hrUpdateDomainsmnit;
    private javax.swing.JMenu hrUtilitiesmn;
    private javax.swing.JMenuItem hrValidateDatamnit;
    private javax.swing.JMenuItem hrVerifyEmployeeDetailsmnit;
    private javax.swing.JMenuItem hrmHelpmnit;
    private javax.swing.JMenuItem hrrptLicencesmnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar31;
    private javax.swing.JToolBar jToolBar311;
    private javax.swing.JMenu lnfmn;
    private javax.swing.JCheckBoxMenuItem macmnit1;
    private javax.swing.JRadioButtonMenuItem macos1mnit1;
    private javax.swing.JButton mailBttn;
    private javax.swing.JRadioButtonMenuItem modernmnit1;
    private javax.swing.JCheckBoxMenuItem motiflnfmnit1;
    private javax.swing.JButton mtmediaBttn;
    private javax.swing.JButton mtmediaBttn1;
    private javax.swing.JButton operationsToolBar;
    private javax.swing.JButton optimizeDB;
    private javax.swing.JButton payrollToolBar;
    private javax.swing.JButton pharmacyToolBar;
    private javax.swing.JButton reportsToolBar;
    private javax.swing.JMenu skinmn;
    private javax.swing.JButton suspendShift;
    private javax.swing.JCheckBoxMenuItem swinglnfmnit1;
    private javax.swing.JMenuItem unionauthoritymnit;
    private javax.swing.JMenu unionmn;
    private javax.swing.JMenuItem unionterminationmnit;
    private javax.swing.JRadioButtonMenuItem whiltmnit1;
    private javax.swing.JCheckBoxMenuItem winlnfmnit1;
    private javax.swing.JRadioButtonMenuItem xpmnit1;
    // End of variables declaration//GEN-END:variables
    
}
