/*
 * HRMain.java
 *
 * Created on May 26, 2004, 6:22 PM
 */

package com.afrisoftech.catering;


/**
 *
 * @author  postgres
 */
public class KitchenMain extends javax.swing.JFrame {
    
    javax.help.HelpSet helpHS = null;
    
    javax.help.HelpBroker helpBroker;
    
    boolean isRunning;
    
    javax.help.HelpSet apiHS = null;
    
    javax.help.HelpBroker apiHB = null;
    
    public static java.sql.Connection connectDB = null;
    
    public java.lang.String dbUserName = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    static final java.lang.String helpSetName = "EpackHimsHelp";
    
    static final java.lang.String helpSetLable = "Hospital Information Management System (HIMS)";
    /** Creates new form HRMain */
    public KitchenMain(java.sql.Connection connDB, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDB;
        
        pConnDB = pconnDB;
        
        try {
            
            java.lang.ClassLoader classLoader = KitchenMain.class.getClassLoader();
            
            java.net.URL urlHelpSet = javax.help.HelpSet.findHelpSet(classLoader, helpSetName);
            
            helpHS = new javax.help.HelpSet(classLoader, urlHelpSet);
            
        } catch(java.lang.Exception exec) {
            
            exec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
            
        }
        
        helpBroker = helpHS.createHelpBroker();
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jToolBar3 = new javax.swing.JToolBar();
        fmgrBttn = new javax.swing.JButton();
        calcBttn = new javax.swing.JButton();
        brwsrBttn = new javax.swing.JButton();
        editButtn = new javax.swing.JButton();
        mtmediaBttn1 = new javax.swing.JButton();
        mailBttn = new javax.swing.JButton();
        mtmediaBttn = new javax.swing.JButton();
        jToolBar31 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        helpButton = new javax.swing.JButton();
        helpButton.addActionListener(new javax.help.CSH.DisplayHelpAfterTracking(helpBroker));
        jToolBar311 = new javax.swing.JToolBar();
        operationsToolBar = new javax.swing.JButton();
        pharmacyToolBar = new javax.swing.JButton();

        payrollToolBar = new javax.swing.JButton();
        reportsToolBar = new javax.swing.JButton();
        closeShift = new javax.swing.JButton();
        suspendShift = new javax.swing.JButton();
        optimizeDB = new javax.swing.JButton();
        compactDB = new javax.swing.JButton();
        backupDB = new javax.swing.JButton();
        kitMainPanel = new javax.swing.JPanel();
        KitchenDesktopPane = new javax.swing.JDesktopPane();
        kitMenuBar = new javax.swing.JMenuBar();
        kitSetupmn = new javax.swing.JMenu();
        kitQualityIndicatorsmn = new javax.swing.JMenu();
        KPIdefinitionsmnit = new javax.swing.JMenuItem();
        qualityIndicatorsmnit = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        RoosterCriteriamnit = new javax.swing.JMenuItem();
        Staffnomnit = new javax.swing.JMenuItem();
        kitroostermnit = new javax.swing.JMenuItem();
        kithealth = new javax.swing.JMenuItem();
        kitExit = new javax.swing.JMenuItem();
        kitOperationsmn = new javax.swing.JMenu();
        hrMemosmnit = new javax.swing.JMenuItem();
        hrLeaveSchedulingmnit = new javax.swing.JMenuItem();
        hrAllocationofRolesmnit = new javax.swing.JMenuItem();
        kithealthmnit = new javax.swing.JMenuItem();
        kitReportsmn = new javax.swing.JMenu();
        hrRptStatutoryBodiesmnit = new javax.swing.JMenuItem();
        hrRptStaffLoansmnit = new javax.swing.JMenuItem();
        hrRptJobPostingsmnit = new javax.swing.JMenuItem();
        hrRptUnionisedStaffListsmnit = new javax.swing.JMenuItem();
        hrRptSaccosmnit = new javax.swing.JMenuItem();
        hrRptApplicantResumemnit = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JSeparator();
        hrRptLeaveApplicationsmnit = new javax.swing.JMenuItem();
        hrRptRetenchmentListmnit = new javax.swing.JMenuItem();
        hrRptLeaveApplicationFormmnit = new javax.swing.JMenuItem();
        hrRptRetireesListmnit = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JSeparator();
        hrRptGrievancesReportmnit = new javax.swing.JMenuItem();
        hrRptCheckoffmnit = new javax.swing.JMenuItem();
        hrRptAppraisalformsmnit = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JSeparator();
        hrRptTasksmnit = new javax.swing.JMenuItem();
        hrRptMinutesMeetingsmnit = new javax.swing.JMenuItem();
        hrRptDemotionsmnit = new javax.swing.JMenuItem();
        hrRptPromotionsmnit = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JSeparator();
        hrStaffReportmn = new javax.swing.JMenu();
        hrRptListofApplicationsmnit = new javax.swing.JMenuItem();
        hrRptApplicationQualificationmnit = new javax.swing.JMenuItem();
        hrRptApplicationProfmnit = new javax.swing.JMenuItem();
        hrRptStaffListingmnit = new javax.swing.JMenuItem();
        hrRptMemosmnit = new javax.swing.JMenuItem();
        hrRptEmployeeHistorymnit = new javax.swing.JMenuItem();
        hrRptEmployeeAccruedmnit = new javax.swing.JMenuItem();
        hrRptStaffAttendanceReportmnit = new javax.swing.JMenuItem();
        hrRptStaffAppraisalReportmnit = new javax.swing.JMenuItem();
        hrRptPerformancereportmnit = new javax.swing.JMenuItem();
        hrListingsmn = new javax.swing.JMenu();
        hrRptRolesAndResponsibilitiesmnit = new javax.swing.JMenuItem();
        hrRptJobDesignationmnit = new javax.swing.JMenuItem();
        hrRptProfessionalQualificationmnit = new javax.swing.JMenuItem();
        hrRptBranchesmnit = new javax.swing.JMenuItem();
        hrRptDepertmentsmnit = new javax.swing.JMenuItem();
        hrRptBrancesmnit = new javax.swing.JMenuItem();
        hrRptInsurancePoliciesmnit = new javax.swing.JMenuItem();
        hrRptGradesmnit = new javax.swing.JMenuItem();
        hrRptHierachyLevelsmnit = new javax.swing.JMenuItem();
        hrrptLicencesmnit = new javax.swing.JMenuItem();
        hrRptEmolumentsmnit = new javax.swing.JMenuItem();
        hrRptEducationalQualificationmnit = new javax.swing.JMenuItem();
        systemn = new javax.swing.JMenu();
        stockmnit1 = new javax.swing.JMenuItem();
        accountsmnit1 = new javax.swing.JMenuItem();
        assetmgtmnit1 = new javax.swing.JMenuItem();
        fahrmnit1 = new javax.swing.JMenuItem();
        reportsmnit1 = new javax.swing.JMenuItem();
        docsmnit1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        lnfmn = new javax.swing.JMenu();
        swinglnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        winlnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        motiflnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        macmnit1 = new javax.swing.JCheckBoxMenuItem();
        skinmn = new javax.swing.JMenu();
        xpmnit1 = new javax.swing.JRadioButtonMenuItem();
        macos1mnit1 = new javax.swing.JRadioButtonMenuItem();
        whiltmnit1 = new javax.swing.JRadioButtonMenuItem();
        modernmnit1 = new javax.swing.JRadioButtonMenuItem();
        aquamnit1 = new javax.swing.JRadioButtonMenuItem();
        beosmnit1 = new javax.swing.JRadioButtonMenuItem();
        bbjmnit11 = new javax.swing.JRadioButtonMenuItem();
        kitUtilitiesmn = new javax.swing.JMenu();
        hrExportDatamnit = new javax.swing.JMenuItem();
        hrDatabaseBackupmnit = new javax.swing.JMenuItem();
        hrValidateDatamnit = new javax.swing.JMenuItem();
        hrImportDatamnit = new javax.swing.JMenuItem();
        hrCompactDatamnit = new javax.swing.JMenuItem();
        hrDataArchivingmnit = new javax.swing.JMenuItem();
        hrDataOptimizationmnit = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JSeparator();
        hrChangeUserPasswordmnit = new javax.swing.JMenuItem();
        hrRestoreDatamnit = new javax.swing.JMenuItem();
        hrUpdateDomainsmnit = new javax.swing.JMenuItem();
        hrVerifyEmployeeDetailsmnit = new javax.swing.JMenuItem();
        jSeparator16 = new javax.swing.JSeparator();
        hrPreferencemnit = new javax.swing.JMenuItem();
        hrBackgroundImagemnit = new javax.swing.JMenuItem();
        kitHelpmn = new javax.swing.JMenu();
        hrmHelpmnit = new javax.swing.JMenuItem();
        hrTOCmnit = new javax.swing.JMenuItem();
        hrSystemResourcesmnit = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JSeparator();
        hrAboutHRMmnit = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Kitchen  Management System");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jToolBar3.setBorder(new javax.swing.border.EtchedBorder());
        jToolBar3.setFloatable(false);
        fmgrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder_open.gif")));
        fmgrBttn.setToolTipText("File Manager");
        fmgrBttn.setBorder(null);
        fmgrBttn.setBorderPainted(false);
        fmgrBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        fmgrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        fmgrBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(fmgrBttn);

        calcBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calbr1.gif")));
        calcBttn.setToolTipText("Calculator");
        calcBttn.setBorder(null);
        calcBttn.setBorderPainted(false);
        calcBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        calcBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        calcBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(calcBttn);

        brwsrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/world1.gif")));
        brwsrBttn.setToolTipText("Internet browser");
        brwsrBttn.setBorder(null);
        brwsrBttn.setBorderPainted(false);
        brwsrBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        brwsrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        brwsrBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(brwsrBttn);

        editButtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image1.gif")));
        editButtn.setToolTipText("Word processor");
        editButtn.setBorder(null);
        editButtn.setBorderPainted(false);
        editButtn.setMaximumSize(new java.awt.Dimension(26, 26));
        editButtn.setMinimumSize(new java.awt.Dimension(26, 26));
        editButtn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(editButtn);

        mtmediaBttn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/function.gif")));
        mtmediaBttn1.setToolTipText("Multimedia player");
        mtmediaBttn1.setBorder(null);
        mtmediaBttn1.setBorderPainted(false);
        mtmediaBttn1.setMaximumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn1.setMinimumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn1.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(mtmediaBttn1);

        mailBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mailbr1.gif")));
        mailBttn.setToolTipText("Email utility");
        mailBttn.setBorder(null);
        mailBttn.setBorderPainted(false);
        mailBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        mailBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mailBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(mailBttn);

        mtmediaBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/anthony-sound.gif")));
        mtmediaBttn.setToolTipText("Multimedia player");
        mtmediaBttn.setBorder(null);
        mtmediaBttn.setBorderPainted(false);
        mtmediaBttn.setMaximumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar3.add(mtmediaBttn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar3, gridBagConstraints);

        jToolBar31.setBorder(new javax.swing.border.EtchedBorder());
        jToolBar31.setFloatable(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        jToolBar31.add(jPanel1);

        helpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNT0.GIF")));
        helpButton.setToolTipText("Get system help");
        helpButton.setBorder(null);
        helpButton.setBorderPainted(false);
        helpButton.setMaximumSize(new java.awt.Dimension(26, 26));
        helpButton.setMinimumSize(new java.awt.Dimension(26, 26));
        helpButton.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar31.add(helpButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar31, gridBagConstraints);

        jToolBar311.setBorder(new javax.swing.border.EtchedBorder());
        jToolBar311.setFloatable(false);
        operationsToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/npdbr1.gif")));
        operationsToolBar.setToolTipText("Operations");
        operationsToolBar.setBorder(null);
        operationsToolBar.setBorderPainted(false);
        operationsToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        operationsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        operationsToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(operationsToolBar);

        pharmacyToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/article.gif")));
        pharmacyToolBar.setToolTipText("Pharmacy");
        pharmacyToolBar.setBorder(null);
        pharmacyToolBar.setBorderPainted(false);
        pharmacyToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        pharmacyToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        pharmacyToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(pharmacyToolBar);

        payrollToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sntc1.gif")));
        payrollToolBar.setToolTipText("Payroll");
        payrollToolBar.setBorder(null);
        payrollToolBar.setBorderPainted(false);
        payrollToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        payrollToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        payrollToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(payrollToolBar);

        reportsToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/abbr1.gif")));
        reportsToolBar.setToolTipText("Reports");
        reportsToolBar.setBorder(null);
        reportsToolBar.setBorderPainted(false);
        reportsToolBar.setMaximumSize(new java.awt.Dimension(26, 26));
        reportsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        reportsToolBar.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(reportsToolBar);

        closeShift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lock[1].gif")));
        closeShift.setToolTipText("Close Shift");
        closeShift.setBorder(null);
        closeShift.setBorderPainted(false);
        closeShift.setMaximumSize(new java.awt.Dimension(26, 26));
        closeShift.setMinimumSize(new java.awt.Dimension(26, 26));
        closeShift.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(closeShift);

        suspendShift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all_tracks.gif")));
        suspendShift.setToolTipText("Suspend Shift");
        suspendShift.setBorder(null);
        suspendShift.setBorderPainted(false);
        suspendShift.setMaximumSize(new java.awt.Dimension(26, 26));
        suspendShift.setMinimumSize(new java.awt.Dimension(26, 26));
        suspendShift.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(suspendShift);

        optimizeDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blkc1.gif")));
        optimizeDB.setToolTipText("DB Optimize");
        optimizeDB.setBorder(null);
        optimizeDB.setBorderPainted(false);
        optimizeDB.setMaximumSize(new java.awt.Dimension(26, 26));
        optimizeDB.setMinimumSize(new java.awt.Dimension(26, 26));
        optimizeDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(optimizeDB);

        compactDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dftc1.gif")));
        compactDB.setToolTipText("DB Compact");
        compactDB.setBorder(null);
        compactDB.setBorderPainted(false);
        compactDB.setMaximumSize(new java.awt.Dimension(26, 26));
        compactDB.setMinimumSize(new java.awt.Dimension(26, 26));
        compactDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(compactDB);

        backupDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save[1].gif")));
        backupDB.setToolTipText("DB Backup");
        backupDB.setBorder(null);
        backupDB.setBorderPainted(false);
        backupDB.setMaximumSize(new java.awt.Dimension(26, 26));
        backupDB.setMinimumSize(new java.awt.Dimension(26, 26));
        backupDB.setPreferredSize(new java.awt.Dimension(26, 26));
        jToolBar311.add(backupDB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar311, gridBagConstraints);

        kitMainPanel.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        kitMainPanel.add(KitchenDesktopPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        getContentPane().add(kitMainPanel, gridBagConstraints);

        kitSetupmn.setText("Setup");
        kitSetupmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitSetupmnActionPerformed(evt);
            }
        });

        kitQualityIndicatorsmn.setText("Performance Variables");
        KPIdefinitionsmnit.setText("KPI definitions");
        KPIdefinitionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPIdefinitionsmnitActionPerformed(evt);
            }
        });

        kitQualityIndicatorsmn.add(KPIdefinitionsmnit);
        qualityIndicatorsmnit.setText("Quality Indicators");
        kitQualityIndicatorsmn.add(qualityIndicatorsmnit);
        kitSetupmn.add(kitQualityIndicatorsmn);
        kitSetupmn.add(jSeparator6);
        RoosterCriteriamnit.setText("Rooster Criteria");
        RoosterCriteriamnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoosterCriteriamnitActionPerformed(evt);
            }
        });

        kitSetupmn.add(RoosterCriteriamnit);
        Staffnomnit.setText("Staff Numbers");
        Staffnomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffnomnitActionPerformed(evt);
            }
        });

        kitSetupmn.add(Staffnomnit);
        kitroostermnit.setText("Rooster");
        kitroostermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitroostermnitActionPerformed(evt);
            }
        });

        kitSetupmn.add(kitroostermnit);
        kithealth.setText("Staff Health");
        kithealth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kithealthActionPerformed(evt);
            }
        });

        kitSetupmn.add(kithealth);
        kitExit.setText("Exit");
        kitExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitExitActionPerformed(evt);
            }
        });

        kitSetupmn.add(kitExit);
        kitMenuBar.add(kitSetupmn);
        kitOperationsmn.setText("Operations");
        hrMemosmnit.setText("Memos");
        kitOperationsmn.add(hrMemosmnit);
        hrLeaveSchedulingmnit.setText("Leave Scheduling");
        kitOperationsmn.add(hrLeaveSchedulingmnit);
        hrAllocationofRolesmnit.setText("Allocation of Role/ Responsibilities");
        kitOperationsmn.add(hrAllocationofRolesmnit);
        kithealthmnit.setText("Staff Health");
        kithealthmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kithealthmnitActionPerformed(evt);
            }
        });

        kitOperationsmn.add(kithealthmnit);
        kitMenuBar.add(kitOperationsmn);
        kitReportsmn.setText("Reports");
        hrRptStatutoryBodiesmnit.setText("Statutory Bodies");
        kitReportsmn.add(hrRptStatutoryBodiesmnit);
        hrRptStaffLoansmnit.setText("Staff Loans Reports");
        kitReportsmn.add(hrRptStaffLoansmnit);
        hrRptJobPostingsmnit.setText("Job Postings");
        kitReportsmn.add(hrRptJobPostingsmnit);
        hrRptUnionisedStaffListsmnit.setText("Unionised Staff Lists");
        kitReportsmn.add(hrRptUnionisedStaffListsmnit);
        hrRptSaccosmnit.setText("Saccos & Investment Schemes");
        kitReportsmn.add(hrRptSaccosmnit);
        hrRptApplicantResumemnit.setText("Applicant Resume");
        kitReportsmn.add(hrRptApplicantResumemnit);
        kitReportsmn.add(jSeparator10);
        hrRptLeaveApplicationsmnit.setText("Leave Applications");
        kitReportsmn.add(hrRptLeaveApplicationsmnit);
        hrRptRetenchmentListmnit.setText("Retrenchment List");
        kitReportsmn.add(hrRptRetenchmentListmnit);
        hrRptLeaveApplicationFormmnit.setText("Leave Application Form");
        kitReportsmn.add(hrRptLeaveApplicationFormmnit);
        hrRptRetireesListmnit.setText("Retirees List");
        kitReportsmn.add(hrRptRetireesListmnit);
        kitReportsmn.add(jSeparator12);
        hrRptGrievancesReportmnit.setText("Grievances Reports");
        kitReportsmn.add(hrRptGrievancesReportmnit);
        hrRptCheckoffmnit.setText("Check Off Purchase Report");
        kitReportsmn.add(hrRptCheckoffmnit);
        hrRptAppraisalformsmnit.setText("Appraisal Forms");
        kitReportsmn.add(hrRptAppraisalformsmnit);
        kitReportsmn.add(jSeparator13);
        hrRptTasksmnit.setText("Tasks & Schedules");
        kitReportsmn.add(hrRptTasksmnit);
        hrRptMinutesMeetingsmnit.setText("Minutes of Meetings");
        kitReportsmn.add(hrRptMinutesMeetingsmnit);
        hrRptDemotionsmnit.setText("Demotions & Dimerits");
        kitReportsmn.add(hrRptDemotionsmnit);
        hrRptPromotionsmnit.setText("Promotions & Merits");
        kitReportsmn.add(hrRptPromotionsmnit);
        kitReportsmn.add(jSeparator11);
        hrStaffReportmn.setText("Staff Reports");
        hrRptListofApplicationsmnit.setText("List of Applications");
        hrStaffReportmn.add(hrRptListofApplicationsmnit);
        hrRptApplicationQualificationmnit.setText("Applications by Educational Qualification");
        hrStaffReportmn.add(hrRptApplicationQualificationmnit);
        hrRptApplicationProfmnit.setText("Application by Professional Qualification");
        hrStaffReportmn.add(hrRptApplicationProfmnit);
        hrRptStaffListingmnit.setText("Staff Listing");
        hrStaffReportmn.add(hrRptStaffListingmnit);
        hrRptMemosmnit.setText("Memos");
        hrStaffReportmn.add(hrRptMemosmnit);
        hrRptEmployeeHistorymnit.setText("Employee History");
        hrStaffReportmn.add(hrRptEmployeeHistorymnit);
        hrRptEmployeeAccruedmnit.setText("Employee Accrued Savings");
        hrStaffReportmn.add(hrRptEmployeeAccruedmnit);
        hrRptStaffAttendanceReportmnit.setText("Staff Attendance Report");
        hrStaffReportmn.add(hrRptStaffAttendanceReportmnit);
        hrRptStaffAppraisalReportmnit.setText("Staff Appraisal Report");
        hrStaffReportmn.add(hrRptStaffAppraisalReportmnit);
        hrRptPerformancereportmnit.setText("Performance Report");
        hrStaffReportmn.add(hrRptPerformancereportmnit);
        kitReportsmn.add(hrStaffReportmn);
        hrListingsmn.setText("Listings");
        hrRptRolesAndResponsibilitiesmnit.setText("Roles And Responsibities");
        hrListingsmn.add(hrRptRolesAndResponsibilitiesmnit);
        hrRptJobDesignationmnit.setText("Job Designation");
        hrListingsmn.add(hrRptJobDesignationmnit);
        hrRptProfessionalQualificationmnit.setText("Professional Qualification");
        hrListingsmn.add(hrRptProfessionalQualificationmnit);
        hrRptBranchesmnit.setText("Branches");
        hrListingsmn.add(hrRptBranchesmnit);
        hrRptDepertmentsmnit.setText("Departments & Sections");
        hrListingsmn.add(hrRptDepertmentsmnit);
        hrRptBrancesmnit.setText("Branches & Duty Stations");
        hrListingsmn.add(hrRptBrancesmnit);
        hrRptInsurancePoliciesmnit.setText("Insurance Policies");
        hrListingsmn.add(hrRptInsurancePoliciesmnit);
        hrRptGradesmnit.setText("Grades & Qualifications");
        hrListingsmn.add(hrRptGradesmnit);
        hrRptHierachyLevelsmnit.setText("Hierachy Levels");
        hrListingsmn.add(hrRptHierachyLevelsmnit);
        hrrptLicencesmnit.setText("Licences");
        hrListingsmn.add(hrrptLicencesmnit);
        hrRptEmolumentsmnit.setText("Emoluments & Benefits");
        hrListingsmn.add(hrRptEmolumentsmnit);
        hrRptEducationalQualificationmnit.setText("Educational Qualifications");
        hrListingsmn.add(hrRptEducationalQualificationmnit);
        kitReportsmn.add(hrListingsmn);
        kitMenuBar.add(kitReportsmn);
        systemn.setMnemonic('t');
        systemn.setText("System");
        stockmnit1.setText("Stock/Inventory");
        systemn.add(stockmnit1);
        accountsmnit1.setText("Accounts");
        systemn.add(accountsmnit1);
        assetmgtmnit1.setText("Asset Management");
        systemn.add(assetmgtmnit1);
        fahrmnit1.setText("HR/Payroll");
        systemn.add(fahrmnit1);
        reportsmnit1.setText("Reports & Utilities");
        systemn.add(reportsmnit1);
        docsmnit1.setText("Help & Docs");
        systemn.add(docsmnit1);
        systemn.add(jSeparator2);
        lnfmn.setText("Look & Feel");
        swinglnfmnit1.setText("Metal");
        buttonGroup2.add(swinglnfmnit1);
        lnfmn.add(swinglnfmnit1);
        winlnfmnit1.setText("Windows");
        buttonGroup2.add(winlnfmnit1);
        lnfmn.add(winlnfmnit1);
        motiflnfmnit1.setText("Motif");
        buttonGroup2.add(motiflnfmnit1);
        lnfmn.add(motiflnfmnit1);
        macmnit1.setText("Mac OS");
        buttonGroup2.add(macmnit1);
        lnfmn.add(macmnit1);
        skinmn.setText("Themes");
        xpmnit1.setText("XP Luna");
        buttonGroup3.add(xpmnit1);
        skinmn.add(xpmnit1);
        macos1mnit1.setText("Macintosh");
        buttonGroup3.add(macos1mnit1);
        skinmn.add(macos1mnit1);
        whiltmnit1.setText("Whistler");
        buttonGroup3.add(whiltmnit1);
        skinmn.add(whiltmnit1);
        modernmnit1.setText("Modern");
        buttonGroup3.add(modernmnit1);
        skinmn.add(modernmnit1);
        aquamnit1.setText("Aqua");
        buttonGroup3.add(aquamnit1);
        skinmn.add(aquamnit1);
        beosmnit1.setText("BEOS");
        buttonGroup3.add(beosmnit1);
        skinmn.add(beosmnit1);
        bbjmnit11.setText("BBJ");
        buttonGroup3.add(bbjmnit11);
        skinmn.add(bbjmnit11);
        lnfmn.add(skinmn);
        systemn.add(lnfmn);
        kitMenuBar.add(systemn);
        kitUtilitiesmn.setText("Utilities");
        hrExportDatamnit.setText("Export HRM Data");
        kitUtilitiesmn.add(hrExportDatamnit);
        hrDatabaseBackupmnit.setText("Database Backup");
        kitUtilitiesmn.add(hrDatabaseBackupmnit);
        hrValidateDatamnit.setText("Validate Data");
        kitUtilitiesmn.add(hrValidateDatamnit);
        hrImportDatamnit.setText("Import Data");
        kitUtilitiesmn.add(hrImportDatamnit);
        hrCompactDatamnit.setText("Compact Data");
        kitUtilitiesmn.add(hrCompactDatamnit);
        hrDataArchivingmnit.setText("Data Archiving");
        kitUtilitiesmn.add(hrDataArchivingmnit);
        hrDataOptimizationmnit.setText("Data Optimization");
        kitUtilitiesmn.add(hrDataOptimizationmnit);
        kitUtilitiesmn.add(jSeparator15);
        hrChangeUserPasswordmnit.setText("Change User Password");
        kitUtilitiesmn.add(hrChangeUserPasswordmnit);
        hrRestoreDatamnit.setText("Restore Data");
        kitUtilitiesmn.add(hrRestoreDatamnit);
        hrUpdateDomainsmnit.setText("Update Domains");
        kitUtilitiesmn.add(hrUpdateDomainsmnit);
        hrVerifyEmployeeDetailsmnit.setText("Verify Employee Details");
        kitUtilitiesmn.add(hrVerifyEmployeeDetailsmnit);
        kitUtilitiesmn.add(jSeparator16);
        hrPreferencemnit.setText("HRM Preferences");
        kitUtilitiesmn.add(hrPreferencemnit);
        hrBackgroundImagemnit.setText("Background Image");
        kitUtilitiesmn.add(hrBackgroundImagemnit);
        kitMenuBar.add(kitUtilitiesmn);
        kitHelpmn.setText("Help");
        hrmHelpmnit.setText("HRM Help");
        kitHelpmn.add(hrmHelpmnit);
        hrTOCmnit.setText("Table of Contents");
        kitHelpmn.add(hrTOCmnit);
        hrSystemResourcesmnit.setText("System Resources");
        kitHelpmn.add(hrSystemResourcesmnit);
        kitHelpmn.add(jSeparator14);
        hrAboutHRMmnit.setText("About HRM");
        hrAboutHRMmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrAboutHRMmnitActionPerformed(evt);
            }
        });

        kitHelpmn.add(hrAboutHRMmnit);
        kitMenuBar.add(kitHelpmn);
        setJMenuBar(kitMenuBar);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(646, 300));
        setLocation((screenSize.width-646)/2,(screenSize.height-300)/2);
    }//GEN-END:initComponents

    private void kithealthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kithealthActionPerformed
        com.afrisoftech.catering.HealthIntfr dismth = new com.afrisoftech.catering.HealthIntfr(connectDB,pConnDB);
        KitchenDesktopPane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            
            dismth.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){} 
        
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_kithealthActionPerformed

    private void kitroostermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitroostermnitActionPerformed
        com.afrisoftech.catering.RoosterIntfr dismth = new com.afrisoftech.catering.RoosterIntfr(connectDB,pConnDB);
        KitchenDesktopPane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            
            dismth.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){} 
        // Add your handling code here:
    }//GEN-LAST:event_kitroostermnitActionPerformed
    
    private void StaffnomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffnomnitActionPerformed
        com.afrisoftech.catering.StaffNumbersIntfr dismth = new com.afrisoftech.catering.StaffNumbersIntfr(connectDB,pConnDB);
        KitchenDesktopPane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            
            dismth.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}        // Add your handling code here:
    }//GEN-LAST:event_StaffnomnitActionPerformed
    
    private void RoosterCriteriamnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoosterCriteriamnitActionPerformed
        com.afrisoftech.catering.RoosterCritariaIntfr dismth = new com.afrisoftech.catering.RoosterCritariaIntfr(connectDB,pConnDB);
        KitchenDesktopPane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            
            dismth.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}        // Add your handling code here:
    }//GEN-LAST:event_RoosterCriteriamnitActionPerformed
    
    private void kitSetupmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitSetupmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_kitSetupmnActionPerformed
    
    private void KPIdefinitionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPIdefinitionsmnitActionPerformed
        com.afrisoftech.catering.KPIIntfr dismth = new com.afrisoftech.catering.KPIIntfr(connectDB,pConnDB);
        KitchenDesktopPane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            
            dismth.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        // Add your handling code here:
    }//GEN-LAST:event_KPIdefinitionsmnitActionPerformed
    
    private void kithealthmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kithealthmnitActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_kithealthmnitActionPerformed
    
    private void hrAboutHRMmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrAboutHRMmnitActionPerformed
/*        com.afrisoftech.hr.HrAboutBoxIntfr dismth = new com.afrisoftech.hr.HrAboutBoxIntfr(connectDB,pConnDB);
        KitchenDesktopPane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            
            dismth.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        
      */  // Add your handling code here:
    }//GEN-LAST:event_hrAboutHRMmnitActionPerformed
    
    private void kitExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitExitActionPerformed
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            //        this.storePreferences();
            
            this.dispose();
            
        } else {}     // Add your handling code here:
    }//GEN-LAST:event_kitExitActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            //  this.storePreferences();
            
            this.dispose();
            
        } else {}
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        KitchenMain hrMainInstance = new KitchenMain(connect2DB(), getPooledConnectionSource());
        hrMainInstance.setExtendedState(hrMainInstance.MAXIMIZED_BOTH);
        hrMainInstance.setVisible(true);
        
    }
    
    public static org.netbeans.lib.sql.pool.PooledConnectionSource getPooledConnectionSource() {
        
        org.netbeans.lib.sql.pool.PooledConnectionSource pooledConnectionSource1 = new org.netbeans.lib.sql.pool.PooledConnectionSource();
        
        pooledConnectionSource1.setDatabase("jdbc:postgresql://localhost:5432/medic");
        
        pooledConnectionSource1.setDriver("org.postgresql.Driver");
        
        pooledConnectionSource1.setPassword("02ac219a6b011019ea966757de3451d2399ce04dd82596d3ba4266a8845ab7f80861", true);
        
        pooledConnectionSource1.setUsername("postgres");
        
        return pooledConnectionSource1;
    }
    public static java.sql.Connection connect2DB() {
        
        java.sql.Connection connDBStock = null;
        
        try {
            
            java.lang.Class.forName("org.postgresql.Driver");
            
        } catch(java.lang.ClassNotFoundException cnf) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), cnf.getMessage());
            
        }
        
        try {
            
            connDBStock = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/medic","postgres","pilsiner");
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
            
        }
        
        return connDBStock;
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem stockmnit1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton pharmacyToolBar;
    private javax.swing.JMenuItem hrRptStaffLoansmnit;
    private javax.swing.JMenuItem hrRptTasksmnit;
    private javax.swing.JButton backupDB;
    private javax.swing.JButton compactDB;
    private javax.swing.JButton reportsToolBar;
    private javax.swing.JMenuItem hrPreferencemnit;
    private javax.swing.JMenuItem hrChangeUserPasswordmnit;
    private javax.swing.JButton optimizeDB;
    private javax.swing.JMenuItem hrRptStaffAttendanceReportmnit;
    private javax.swing.JMenuItem kithealth;
    private javax.swing.JMenuItem hrRptPerformancereportmnit;
    private javax.swing.JMenuItem hrRptHierachyLevelsmnit;
    private javax.swing.JRadioButtonMenuItem bbjmnit11;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JMenuItem hrRptApplicantResumemnit;
    private javax.swing.JMenuItem hrRptSaccosmnit;
    private javax.swing.JMenuItem hrRptApplicationQualificationmnit;
    private javax.swing.JCheckBoxMenuItem motiflnfmnit1;
    private javax.swing.JPanel kitMainPanel;
    private javax.swing.JMenuItem hrRptBrancesmnit;
    private javax.swing.JMenuItem hrRptMemosmnit;
    private javax.swing.JMenuItem hrRptRetireesListmnit;
    private javax.swing.JMenuItem hrRptListofApplicationsmnit;
    private javax.swing.JMenuItem kithealthmnit;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JMenuItem hrExportDatamnit;
    private javax.swing.JMenuItem hrValidateDatamnit;
    private javax.swing.JMenu kitHelpmn;
    private javax.swing.JButton payrollToolBar;
    private javax.swing.JButton suspendShift;
    private javax.swing.JButton helpButton;
    private javax.swing.JMenuItem hrRptEmployeeAccruedmnit;
    private javax.swing.JMenuItem hrRptAppraisalformsmnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton mtmediaBttn1;
    private javax.swing.JRadioButtonMenuItem beosmnit1;
    private javax.swing.JMenu kitOperationsmn;
    private javax.swing.JMenuItem hrDataOptimizationmnit;
    private javax.swing.JMenuItem hrRptLeaveApplicationFormmnit;
    private javax.swing.JMenuItem hrAllocationofRolesmnit;
    private javax.swing.JMenuItem hrImportDatamnit;
    private javax.swing.JMenuItem hrSystemResourcesmnit;
    private javax.swing.JToolBar jToolBar31;
    private javax.swing.JMenuItem hrRptUnionisedStaffListsmnit;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JRadioButtonMenuItem xpmnit1;
    private javax.swing.JRadioButtonMenuItem modernmnit1;
    private javax.swing.JToolBar jToolBar311;
    private javax.swing.JCheckBoxMenuItem macmnit1;
    private javax.swing.JMenuItem hrRptDepertmentsmnit;
    private javax.swing.JMenuItem accountsmnit1;
    private javax.swing.JMenuBar kitMenuBar;
    private javax.swing.JMenuItem hrUpdateDomainsmnit;
    private javax.swing.JMenu lnfmn;
    private javax.swing.JButton closeShift;
    private javax.swing.JMenuItem KPIdefinitionsmnit;
    private javax.swing.JMenuItem hrTOCmnit;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JMenuItem hrCompactDatamnit;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JMenu kitReportsmn;
    private javax.swing.JMenu kitUtilitiesmn;
    private javax.swing.JButton brwsrBttn;
    private javax.swing.JMenuItem hrRptJobDesignationmnit;
    private javax.swing.JMenuItem hrRptBranchesmnit;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JCheckBoxMenuItem winlnfmnit1;
    private javax.swing.JMenuItem hrRptGradesmnit;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JMenuItem hrRptRolesAndResponsibilitiesmnit;
    private javax.swing.JRadioButtonMenuItem whiltmnit1;
    private javax.swing.JMenuItem hrRptGrievancesReportmnit;
    private javax.swing.JDesktopPane KitchenDesktopPane;
    private javax.swing.JMenuItem hrVerifyEmployeeDetailsmnit;
    private javax.swing.JMenuItem assetmgtmnit1;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JButton mtmediaBttn;
    private javax.swing.JRadioButtonMenuItem macos1mnit1;
    private javax.swing.JMenuItem hrRptDemotionsmnit;
    private javax.swing.JMenuItem hrRptMinutesMeetingsmnit;
    private javax.swing.JMenuItem hrRptStaffListingmnit;
    private javax.swing.JMenu systemn;
    private javax.swing.JMenuItem hrRptLeaveApplicationsmnit;
    private javax.swing.JMenuItem Staffnomnit;
    private javax.swing.JRadioButtonMenuItem aquamnit1;
    private javax.swing.JMenu kitQualityIndicatorsmn;
    private javax.swing.JMenuItem hrRptStaffAppraisalReportmnit;
    private javax.swing.JMenuItem hrRptInsurancePoliciesmnit;
    private javax.swing.JMenuItem hrRptEmployeeHistorymnit;
    private javax.swing.JButton operationsToolBar;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JButton mailBttn;
    private javax.swing.JMenu kitSetupmn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton calcBttn;
    private javax.swing.JMenuItem qualityIndicatorsmnit;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JMenuItem reportsmnit1;
    private javax.swing.JMenu hrListingsmn;
    private javax.swing.JMenuItem hrmHelpmnit;
    private javax.swing.JMenuItem hrrptLicencesmnit;
    private javax.swing.JMenuItem hrDatabaseBackupmnit;
    private javax.swing.JMenuItem hrRptProfessionalQualificationmnit;
    private javax.swing.JMenuItem hrRptEducationalQualificationmnit;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JMenuItem fahrmnit1;
    private javax.swing.JMenuItem kitroostermnit;
    private javax.swing.JMenuItem hrRptEmolumentsmnit;
    private javax.swing.JMenuItem hrRptStatutoryBodiesmnit;
    private javax.swing.JMenuItem hrRptRetenchmentListmnit;
    private javax.swing.JMenuItem hrRptApplicationProfmnit;
    private javax.swing.JMenuItem docsmnit1;
    private javax.swing.JMenu hrStaffReportmn;
    private javax.swing.JMenu skinmn;
    private javax.swing.JButton fmgrBttn;
    private javax.swing.JMenuItem hrRestoreDatamnit;
    private javax.swing.JButton editButtn;
    private javax.swing.JMenuItem hrLeaveSchedulingmnit;
    private javax.swing.JMenuItem kitExit;
    private javax.swing.JMenuItem RoosterCriteriamnit;
    private javax.swing.JMenuItem hrBackgroundImagemnit;
    private javax.swing.JMenuItem hrRptCheckoffmnit;
    private javax.swing.JMenuItem hrDataArchivingmnit;
    private javax.swing.JMenuItem hrRptJobPostingsmnit;
    private javax.swing.JMenuItem hrAboutHRMmnit;
    private javax.swing.JMenuItem hrRptPromotionsmnit;
    private javax.swing.JMenuItem hrMemosmnit;
    private javax.swing.JCheckBoxMenuItem swinglnfmnit1;
    // End of variables declaration//GEN-END:variables
    
}
