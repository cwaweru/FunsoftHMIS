/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.TableModel;
import static com.afrisoftech.hospinventory.StockMain.medicdspane;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.DBObject;
import com.afrisoftech.lib.DesktopApi;
import static com.afrisoftech.lib.DesktopApi.EnumOS.linux;
import static com.afrisoftech.lib.DesktopApi.EnumOS.macos;
import static com.afrisoftech.lib.DesktopApi.EnumOS.solaris;
import static com.afrisoftech.lib.DesktopApi.EnumOS.windows;
import static com.afrisoftech.lib.DesktopApi.getOs;
import com.afrisoftech.lib.FinancialYear;
import com.afrisoftech.lib.SQLDateFormat;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Array;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import org.postgresql.largeobject.LargeObject;
import org.postgresql.largeobject.LargeObjectManager;
import javax.swing.*;

/**
 *
 * @author sytem partners
 */
public class SSOTendering extends javax.swing.JPanel {

    /**
     * Creates new form SSOTenderingProcess
     */
    Vector money = new Vector();
    JPanel MainPanellToLoad = null;

    double bid = 0.0;
    int num_val = 0;
    String pur_req = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.sql.Connection connectDB = null;
    int num_of_prs = 0;
    private int number;
    com.afrisoftech.lib.DBObject DBObject = new com.afrisoftech.lib.DBObject();
    private String item_code;
    private int counter;

    public SSOTendering(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        for (int i = 0; i < specsTbl.getRowCount(); i++) {
            specsTbl.setValueAt(i + 1, i, 0);
        }

        jLabel2.setVisible(false);
        jLabel45.setVisible(false);
        jLabel8.setVisible(false);
        jLabel56.setVisible(false);

        searchButton3.setEnabled(false);
        searchButton8.setEnabled(false);
        jButton24.setEnabled(false);
        jLabel55.setVisible(false);
        jLabel57.setVisible(false);

        ///populate current user
        try {

            java.sql.Statement pstmth = connectDB.createStatement();
            java.sql.ResultSet rsh = pstmth.executeQuery("select current_user  , header_name from pb_header");
            // java.sql.ResultSet name = pstmth.executeQuery("select header_name from pb_header");
            while (rsh.next()) {

                usernamedispatchtxt.setText(rsh.getObject(1).toString());
                usernameprocessprtxt.setText(rsh.getObject(1).toString());
                usernameopentendertxt.setText(rsh.getObject(1).toString());
                usernamereturnedtxt.setText(rsh.getObject(1).toString());
                usernamelpotxt.setText(rsh.getObject(1).toString());
                jTextPane1.setText(rsh.getObject(2).toString());
                jTextPane4.setText(rsh.getObject(2).toString());

            }

        } catch (SQLException ex) {
            Logger.getLogger(SSOTendering.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchrequisition = new javax.swing.JDialog();
        userrecordspnl = new javax.swing.JPanel();
        requisitiontxt = new javax.swing.JTextField();
        requisitionspnl = new javax.swing.JScrollPane();
        requisitiontbl = new com.afrisoftech.dbadmin.JTable();
        closebtn = new javax.swing.JButton();
        searchtender = new javax.swing.JDialog();
        tenderrecordspnl = new javax.swing.JPanel();
        tenderrecordstxt = new javax.swing.JTextField();
        tenderrecordsspnl = new javax.swing.JScrollPane();
        tenderrecordstbl = new com.afrisoftech.dbadmin.JTable();
        closebtn1 = new javax.swing.JButton();
        searchsupplier = new javax.swing.JDialog();
        searchsupplierpnl = new javax.swing.JPanel();
        searchsuppliertxt = new javax.swing.JTextField();
        searchsupplierspnl = new javax.swing.JScrollPane();
        searchsupplierstbl = new com.afrisoftech.dbadmin.JTable();
        closebtn2 = new javax.swing.JButton();
        searchtender1 = new javax.swing.JDialog();
        tenderrecordspnl1 = new javax.swing.JPanel();
        tenderrecordstxt1 = new javax.swing.JTextField();
        tenderrecordsspnl1 = new javax.swing.JScrollPane();
        tenderrecordstbl1 = new com.afrisoftech.dbadmin.JTable();
        closebtn3 = new javax.swing.JButton();
        searchsupplier1 = new javax.swing.JDialog();
        searchsupplierpnl1 = new javax.swing.JPanel();
        searchsuppliertxt1 = new javax.swing.JTextField();
        searchsupplierspnl1 = new javax.swing.JScrollPane();
        searchsupplierstbl1 = new com.afrisoftech.dbadmin.JTable();
        closebtn4 = new javax.swing.JButton();
        searchsupplier2 = new javax.swing.JDialog();
        searchsupplierpnl2 = new javax.swing.JPanel();
        searchsuppliertxt2 = new javax.swing.JTextField();
        searchsupplierspnl2 = new javax.swing.JScrollPane();
        searchsupplierstbl2 = new com.afrisoftech.dbadmin.JTable();
        closebtn5 = new javax.swing.JButton();
        searchtender2 = new javax.swing.JDialog();
        tenderrecordspnl2 = new javax.swing.JPanel();
        tenderrecordstxt2 = new javax.swing.JTextField();
        tenderrecordsspnl2 = new javax.swing.JScrollPane();
        tenderrecordstbl2 = new com.afrisoftech.dbadmin.JTable();
        closebtn6 = new javax.swing.JButton();
        searchsupplier3 = new javax.swing.JDialog();
        searchsupplierpnl3 = new javax.swing.JPanel();
        searchsuppliertxt3 = new javax.swing.JTextField();
        searchsupplierspnl3 = new javax.swing.JScrollPane();
        searchsupplierstbl3 = new com.afrisoftech.dbadmin.JTable();
        closebtn7 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser((new java.io.File(System.getProperty("images.dir"))));
        searchtender3 = new javax.swing.JDialog();
        tenderrecordspnl3 = new javax.swing.JPanel();
        tenderrecordstxt3 = new javax.swing.JTextField();
        tenderrecordsspnl3 = new javax.swing.JScrollPane();
        tenderrecordstbl3 = new com.afrisoftech.dbadmin.JTable();
        closebtn8 = new javax.swing.JButton();
        lpopasswd = new javax.swing.JDialog();
        jPanel56 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        searchsupplier4 = new javax.swing.JDialog();
        searchsupplierpnl4 = new javax.swing.JPanel();
        searchsuppliertxt4 = new javax.swing.JTextField();
        searchsupplierspnl4 = new javax.swing.JScrollPane();
        searchsupplierstbl4 = new com.afrisoftech.dbadmin.JTable();
        closebtn9 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lpopasswd1 = new javax.swing.JDialog();
        jPanel58 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPasswordField2 = new javax.swing.JPasswordField();
        searchtenderc = new javax.swing.JDialog();
        tenderrecordspnl4 = new javax.swing.JPanel();
        tenderrecordstxt4 = new javax.swing.JTextField();
        tenderrecordsspnl4 = new javax.swing.JScrollPane();
        tenderrecordstbl4 = new com.afrisoftech.dbadmin.JTable();
        closebtn10 = new javax.swing.JButton();
        searchsupplierc = new javax.swing.JDialog();
        searchsupplierpnl5 = new javax.swing.JPanel();
        searchsuppliertxt5 = new javax.swing.JTextField();
        searchsupplierspnl5 = new javax.swing.JScrollPane();
        searchsupplierstbl5 = new com.afrisoftech.dbadmin.JTable();
        closebtn11 = new javax.swing.JButton();
        passwd = new javax.swing.JDialog();
        jPanel61 = new javax.swing.JPanel();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jPasswordField5 = new javax.swing.JPasswordField();
        jButton30 = new javax.swing.JButton();
        encrptedpasswordDialog = new javax.swing.JDialog();
        jPanel62 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPasswordField4 = new javax.swing.JPasswordField();
        jPasswordField6 = new javax.swing.JPasswordField();
        jLabel61 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel63 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        deptraisingtxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        openingEnterDate = new com.afrisoftech.lib.DatePicker();
        jPanel18 = new javax.swing.JPanel();
        requistntxt = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        usernameprocessprtxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel52 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        tenderNocmbx = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        tenderTxt = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel9 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        postbtn2 = new javax.swing.JButton();
        resetbtn1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        dispatchTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel38 = new javax.swing.JPanel();
        jPanel39 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        tenderdatetxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        openingdatetxt = new javax.swing.JTextField();
        jPanel44 = new javax.swing.JPanel();
        tendernotxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        jPanel41 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        usernamedispatchtxt = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        suppliertxt = new javax.swing.JTextField();
        searchButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        biddersTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel10 = new javax.swing.JPanel();
        usernameopentendertxt = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jPanel45 = new javax.swing.JPanel();
        opentendertxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel17 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        savedocs = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        bqavailedckk = new javax.swing.JCheckBox();
        jButton14 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTextField12 = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        daysTxtf = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        bidavailedchk = new javax.swing.JCheckBox();
        jLabel23 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel47 = new javax.swing.JPanel();
        jPanel48 = new javax.swing.JPanel();
        postbtn3 = new javax.swing.JButton();
        exitbtn4 = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jPanel49 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        specsTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel50 = new javax.swing.JPanel();
        descriptionTxt = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        countryTxt = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        daysTxt = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        jPanel65 = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        itemSelectTbl = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        postbtn1 = new javax.swing.JButton();
        exitbtn2 = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new com.afrisoftech.dbadmin.JTable();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        usernamereturnedtxt = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        datePicker5 = new com.afrisoftech.lib.DatePicker();
        jPanel43 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        suppliernametxt = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        receivetendertxt = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        TechnicalEvaluationPane = new javax.swing.JPanel();
        EvaluationTypePane = new javax.swing.JPanel();
        generalEvaluationTick = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        TechnicalEvalutionMainPane = new javax.swing.JPanel();
        financialEvaluation = new javax.swing.JPanel();
        jPanel54 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new com.afrisoftech.dbadmin.JTable();
        jPanel20 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel21 = new javax.swing.JPanel();
        jTextField39 = new javax.swing.JTextField();
        searchButton5 = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable4 = new com.afrisoftech.dbadmin.JTable();
        jLabel45 = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        contract_management = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTable5 = new com.afrisoftech.dbadmin.JTable();
        jPanel51 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel59 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jPanel60 = new javax.swing.JPanel();
        jTextField6 = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jPanel55 = new javax.swing.JPanel();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        postbtn4 = new javax.swing.JButton();
        resetbtn3 = new javax.swing.JButton();
        cancelbtn3 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jButton27 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new com.afrisoftech.dbadmin.JTable();
        jPanel30 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        tenderNotxt = new javax.swing.JTextField();
        searchButton6 = new javax.swing.JButton();
        jTextField15 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jLabel34 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel36 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel36 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        datePicker6 = new com.afrisoftech.lib.DatePicker();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        usernamelpotxt = new javax.swing.JTextField();
        jPanel57 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();

        searchrequisition.setModal(true);
        searchrequisition.setUndecorated(true);
        searchrequisition.getContentPane().setLayout(new java.awt.GridBagLayout());

        userrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        userrecordspnl.setLayout(new java.awt.GridBagLayout());

        requisitiontxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                requisitiontxtCaretUpdate(evt);
            }
        });
        requisitiontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requisitiontxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        userrecordspnl.add(requisitiontxt, gridBagConstraints);

        requisitiontbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        requisitiontbl.setToolTipText("Click on the target row to select the patient from the search.");
        requisitiontbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        requisitiontbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requisitiontblMouseClicked(evt);
            }
        });
        requisitionspnl.setViewportView(requisitiontbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        userrecordspnl.add(requisitionspnl, gridBagConstraints);

        closebtn.setText("Close");
        closebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userrecordspnl.add(closebtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchrequisition.getContentPane().add(userrecordspnl, gridBagConstraints);

        searchtender.setModal(true);
        searchtender.setUndecorated(true);
        searchtender.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxtCaretUpdate(evt);
            }
        });
        tenderrecordstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl.add(tenderrecordstxt, gridBagConstraints);

        tenderrecordstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstblMouseClicked(evt);
            }
        });
        tenderrecordsspnl.setViewportView(tenderrecordstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl.add(tenderrecordsspnl, gridBagConstraints);

        closebtn1.setText("Close");
        closebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl.add(closebtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender.getContentPane().add(tenderrecordspnl, gridBagConstraints);

        searchsupplier.setModal(true);
        searchsupplier.setUndecorated(true);
        searchsupplier.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxtCaretUpdate(evt);
            }
        });
        searchsuppliertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl.add(searchsuppliertxt, gridBagConstraints);

        searchsupplierstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstblMouseClicked(evt);
            }
        });
        searchsupplierspnl.setViewportView(searchsupplierstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl.add(searchsupplierspnl, gridBagConstraints);

        closebtn2.setText("Close");
        closebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl.add(closebtn2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier.getContentPane().add(searchsupplierpnl, gridBagConstraints);

        searchtender1.setModal(true);
        searchtender1.setUndecorated(true);
        searchtender1.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl1.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt1CaretUpdate(evt);
            }
        });
        tenderrecordstxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl1.add(tenderrecordstxt1, gridBagConstraints);

        tenderrecordstbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl1.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tenderrecordstbl1MouseEntered(evt);
            }
        });
        tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl1.add(tenderrecordsspnl1, gridBagConstraints);

        closebtn3.setText("Close");
        closebtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl1.add(closebtn3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender1.getContentPane().add(tenderrecordspnl1, gridBagConstraints);

        searchsupplier1.setModal(true);
        searchsupplier1.setUndecorated(true);
        searchsupplier1.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl1.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt1CaretUpdate(evt);
            }
        });
        searchsuppliertxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl1.add(searchsuppliertxt1, gridBagConstraints);

        searchsupplierstbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl1.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl1MouseEntered(evt);
            }
        });
        searchsupplierspnl1.setViewportView(searchsupplierstbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl1.add(searchsupplierspnl1, gridBagConstraints);

        closebtn4.setText("Close");
        closebtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl1.add(closebtn4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier1.getContentPane().add(searchsupplierpnl1, gridBagConstraints);

        searchsupplier2.setModal(true);
        searchsupplier2.setUndecorated(true);
        searchsupplier2.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl2.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt2CaretUpdate(evt);
            }
        });
        searchsuppliertxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl2.add(searchsuppliertxt2, gridBagConstraints);

        searchsupplierstbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl2.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl2.setShowHorizontalLines(false);
        boolean[]  canEdit =new boolean[] {
            false

        };
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl2MouseEntered(evt);
            }
        });
        searchsupplierspnl2.setViewportView(searchsupplierstbl2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl2.add(searchsupplierspnl2, gridBagConstraints);

        closebtn5.setText("Close");
        closebtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl2.add(closebtn5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier2.getContentPane().add(searchsupplierpnl2, gridBagConstraints);

        searchtender2.setModal(true);
        searchtender2.setUndecorated(true);
        searchtender2.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl2.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt2CaretUpdate(evt);
            }
        });
        tenderrecordstxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl2.add(tenderrecordstxt2, gridBagConstraints);

        tenderrecordstbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl2.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl2MouseClicked(evt);
            }
        });
        tenderrecordsspnl2.setViewportView(tenderrecordstbl2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl2.add(tenderrecordsspnl2, gridBagConstraints);

        closebtn6.setText("Close");
        closebtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl2.add(closebtn6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender2.getContentPane().add(tenderrecordspnl2, gridBagConstraints);

        searchsupplier3.setModal(true);
        searchsupplier3.setUndecorated(true);
        searchsupplier3.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl3.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt3CaretUpdate(evt);
            }
        });
        searchsuppliertxt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl3.add(searchsuppliertxt3, gridBagConstraints);

        searchsupplierstbl3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl3.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl3.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl3MouseEntered(evt);
            }
        });
        searchsupplierspnl3.setViewportView(searchsupplierstbl3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl3.add(searchsupplierspnl3, gridBagConstraints);

        closebtn7.setText("Close");
        closebtn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl3.add(closebtn7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier3.getContentPane().add(searchsupplierpnl3, gridBagConstraints);

        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jFileChooser1, gridBagConstraints);

        searchtender3.setModal(true);
        searchtender3.setUndecorated(true);
        searchtender3.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl3.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt3CaretUpdate(evt);
            }
        });
        tenderrecordstxt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl3.add(tenderrecordstxt3, gridBagConstraints);

        tenderrecordstbl3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl3.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl3.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl3MouseClicked(evt);
            }
        });
        tenderrecordsspnl3.setViewportView(tenderrecordstbl3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl3.add(tenderrecordsspnl3, gridBagConstraints);

        closebtn8.setText("Close");
        closebtn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl3.add(closebtn8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender3.getContentPane().add(tenderrecordspnl3, gridBagConstraints);

        lpopasswd.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        lpopasswd.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel56.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Authorisation Password Here"));
        jPanel56.setAutoscrolls(true);
        jPanel56.setLayout(new java.awt.GridBagLayout());

        jButton17.setText("Generate  LPO/LSO NO   ");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton17, gridBagConstraints);

        jButton18.setText("Close Dialog");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton18, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel56.add(jPasswordField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        lpopasswd.getContentPane().add(jPanel56, gridBagConstraints);

        searchsupplier4.setModal(true);
        searchsupplier4.setUndecorated(true);
        searchsupplier4.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl4.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt4CaretUpdate(evt);
            }
        });
        searchsuppliertxt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl4.add(searchsuppliertxt4, gridBagConstraints);

        searchsupplierstbl4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl4.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl4MouseEntered(evt);
            }
        });
        searchsupplierspnl4.setViewportView(searchsupplierstbl4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl4.add(searchsupplierspnl4, gridBagConstraints);

        closebtn9.setText("Close");
        closebtn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl4.add(closebtn9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier4.getContentPane().add(searchsupplierpnl4, gridBagConstraints);

        jLabel9.setText("No Results");

        lpopasswd1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        lpopasswd1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel58.setBorder(javax.swing.BorderFactory.createTitledBorder("You Need Authorisation to complete"));
        jPanel58.setAutoscrolls(true);
        jPanel58.setLayout(new java.awt.GridBagLayout());

        jButton20.setText("Delete PDF");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel58.add(jButton20, gridBagConstraints);

        jButton21.setText("Close Dialog");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel58.add(jButton21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel58.add(jPasswordField2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        lpopasswd1.getContentPane().add(jPanel58, gridBagConstraints);

        searchtenderc.setModal(true);
        searchtenderc.setUndecorated(true);
        searchtenderc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchtendercFocusLost(evt);
            }
        });
        searchtenderc.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl4.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt4CaretUpdate(evt);
            }
        });
        tenderrecordstxt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl4.add(tenderrecordstxt4, gridBagConstraints);

        tenderrecordstbl4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl4.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl4MouseClicked(evt);
            }
        });
        tenderrecordsspnl4.setViewportView(tenderrecordstbl4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl4.add(tenderrecordsspnl4, gridBagConstraints);

        closebtn10.setText("Close");
        closebtn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl4.add(closebtn10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtenderc.getContentPane().add(tenderrecordspnl4, gridBagConstraints);

        searchsupplierc.setModal(false);
        searchsupplierc.setUndecorated(true);
        searchsupplierc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchsuppliercFocusLost(evt);
            }
        });
        searchsupplierc.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl5.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt5.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt5CaretUpdate(evt);
            }
        });
        searchsuppliertxt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl5.add(searchsuppliertxt5, gridBagConstraints);

        searchsupplierstbl5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl5.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl5.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl5MouseClicked(evt);
            }
        });
        searchsupplierspnl5.setViewportView(searchsupplierstbl5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl5.add(searchsupplierspnl5, gridBagConstraints);

        closebtn11.setText("Close");
        closebtn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl5.add(closebtn11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierc.getContentPane().add(searchsupplierpnl5, gridBagConstraints);

        passwd.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        passwd.setModal(true);
        passwd.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel61.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Authorisation Password Here"));
        jPanel61.setAutoscrolls(true);
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jButton28.setText("Approve Authorisation");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jButton28, gridBagConstraints);

        jButton29.setText("Close Dialog");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jButton29, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 50);
        jPanel61.add(jPasswordField5, gridBagConstraints);

        jButton30.setText("Change Password");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel61.add(jButton30, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        passwd.getContentPane().add(jPanel61, gridBagConstraints);

        encrptedpasswordDialog.setTitle("Changing User password");
        encrptedpasswordDialog.setModal(true);
        encrptedpasswordDialog.setResizable(false);
        encrptedpasswordDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                encrptedpasswordDialogcloseDialog(evt);
            }
        });
        encrptedpasswordDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel62.setBackground(new java.awt.Color(230, 230, 230));
        jPanel62.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel62.setLayout(new java.awt.GridBagLayout());

        jLabel58.setText("New Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(jLabel58, gridBagConstraints);

        jLabel59.setText("Retype New Pasword");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(jLabel59, gridBagConstraints);

        jLabel60.setText("Current Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(jLabel60, gridBagConstraints);

        jPasswordField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField3FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel62.add(jPasswordField3, gridBagConstraints);

        jPasswordField4.setToolTipText("Must be aleast 8 characters long.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel62.add(jPasswordField4, gridBagConstraints);

        jPasswordField6.setToolTipText("Same as \"New Password\" above.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel62.add(jPasswordField6, gridBagConstraints);

        jLabel61.setText("Limit Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(jLabel61, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel62.add(jTextField10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel62, gridBagConstraints);

        jPanel63.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel63.setLayout(new java.awt.GridBagLayout());

        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel62.setText("Change your password here.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(jLabel62, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel63, gridBagConstraints);

        jPanel64.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel64.setLayout(new java.awt.GridBagLayout());

        jButton31.setMnemonic('n');
        jButton31.setText("Cancel");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel64.add(jButton31, gridBagConstraints);

        jButton32.setMnemonic('C');
        jButton32.setText("Change Password");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel64.add(jButton32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel64, gridBagConstraints);

        setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Tender Details"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Tender Opening/Closing Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel6, gridBagConstraints);

        deptraisingtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(deptraisingtxt, gridBagConstraints);

        jTextPane1.setEditable(false);
        jTextPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer Address Here"));
        jScrollPane1.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel7.add(jScrollPane1, gridBagConstraints);

        jLabel4.setText("Dept. Raising Requisition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel4, gridBagConstraints);

        jLabel1.setText("Search Requisition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(openingEnterDate, gridBagConstraints);

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel18.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        requistntxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(requistntxt, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton4.setToolTipText("Search Patient's Name");
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel18.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(jPanel18, gridBagConstraints);

        usernameprocessprtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 30);
        jPanel7.add(usernameprocessprtxt, gridBagConstraints);

        jLabel3.setText("User");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel7.add(jLabel3, gridBagConstraints);

        jPanel52.setLayout(new java.awt.GridBagLayout());
        jPanel52.add(jLabel5, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel52, gridBagConstraints);

        jLabel68.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jLabel68, gridBagConstraints);

        tenderNocmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT DISTINCT ref_no FROM st_tenders WHERE opening_date IS NULL AND ref_no ILIKE '%/T/%' and closed= false"));
        tenderNocmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderNocmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(tenderNocmbx, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("DESCRIPTION OF TENDER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jLabel7, gridBagConstraints);

        tenderTxt.setEditable(false);
        tenderTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tenderTxt.setForeground(new java.awt.Color(102, 102, 102));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(tenderTxt, gridBagConstraints);

        jButton6.setText("Upload From Excel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel7.add(jButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel1.add(jPanel7, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Units", "Tender Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSurrendersFocusOnKeystroke(true);
        /*              try {

            crset3.setConnectionSource(pConnDB);
            crset3.execute("select department_name from pb_departments order by department_name");

            cmbox3.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "department_name", null, null,null));

            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Cost Center");

            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox3));

            //  cmbox3.addActionListener(new java.awt.event.ActionListener() {

                //  public void actionPerformed(java.awt.event.ActionEvent evt) {

                    //       cmbox3ActionPerformed(evt);
                    //  }
                //});
    } catch(java.sql.SQLException sqlExec) {

        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }
    */

    javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 4; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 1) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {
            if (i == 0) {
                column.setPreferredWidth(50);
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(50);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
    }
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane3.setViewportView(jTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel8.add(jScrollPane3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 9.0;
    jPanel1.add(jPanel8, gridBagConstraints);

    jPanel9.setLayout(new java.awt.GridBagLayout());

    jButton1.setText("Generate Tender No");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton1, gridBagConstraints);

    jButton2.setText("Remove Rows");
    jButton2.setPreferredSize(new java.awt.Dimension(178, 25));
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton2, gridBagConstraints);

    jButton3.setText("Clear");
    jButton3.setPreferredSize(new java.awt.Dimension(178, 25));
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton3, gridBagConstraints);

    jButton4.setBackground(new java.awt.Color(153, 255, 255));
    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/pdf1.jpg"))); // NOI18N
    jButton4.setText("Tender Advertisement");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jPanel9, gridBagConstraints);

    jTabbedPane1.addTab("Enter Tender Details", jPanel1);

    jPanel25.setLayout(new java.awt.GridBagLayout());

    jPanel26.setLayout(new java.awt.GridBagLayout());

    jPanel37.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel37.setLayout(new java.awt.GridBagLayout());

    postbtn2.setText("Dispatch Tender");
    postbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(postbtn2, gridBagConstraints);

    resetbtn1.setMnemonic('R');
    resetbtn1.setText("RemoveRow");
    resetbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(resetbtn1, gridBagConstraints);

    cancelbtn1.setMnemonic('l');
    cancelbtn1.setText("Clear");
    cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(cancelbtn1, gridBagConstraints);

    exitbtn1.setMnemonic('c');
    exitbtn1.setText("Close");
    exitbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(exitbtn1, gridBagConstraints);

    jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel37.add(jLabel51, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel26.add(jPanel37, gridBagConstraints);

    jPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel27.setLayout(new java.awt.GridBagLayout());

    jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    dispatchTbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity"
        }
    ));
    dispatchTbl.setNextFocusableComponent(postbtn1);
    dispatchTbl.setRowHeight(20);
    dispatchTbl.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column1 = null;
    for (int i = 0; i < 5; i++) {
        column1 = dispatchTbl.getColumnModel().getColumn(i);
        if (i == 0) {

            column1.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column1.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column1.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane11.setViewportView(dispatchTbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel27.add(jScrollPane11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel26.add(jPanel27, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel38.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel38.setLayout(new java.awt.GridBagLayout());

    jPanel39.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel39.setLayout(new java.awt.GridBagLayout());

    jLabel20.setText("Tender Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel20, gridBagConstraints);

    tenderdatetxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(tenderdatetxt, gridBagConstraints);

    jLabel21.setText("Tender Opening/Closing Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel21, gridBagConstraints);

    jLabel29.setText("Opening Date");
    jLabel29.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel29, gridBagConstraints);

    openingdatetxt.setEditable(false);
    openingdatetxt.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(openingdatetxt, gridBagConstraints);

    jPanel44.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel44.setLayout(new java.awt.GridBagLayout());

    tendernotxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel44.add(tendernotxt, gridBagConstraints);

    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton.setToolTipText("Search");
    searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel44.add(searchButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(jPanel44, gridBagConstraints);

    jLabel40.setText("Dispatch Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel40, gridBagConstraints);

    datePicker4.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(datePicker4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel38.add(jPanel39, gridBagConstraints);

    jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
    jPanel41.setLayout(new java.awt.GridBagLayout());

    jLabel42.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel41.add(jLabel42, gridBagConstraints);

    usernamedispatchtxt.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel41.add(usernamedispatchtxt, gridBagConstraints);

    jLabel41.setText("Send Tender To");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel41.add(jLabel41, gridBagConstraints);

    jPanel40.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel40.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel40.setLayout(new java.awt.GridBagLayout());

    suppliertxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel40.add(suppliertxt, gridBagConstraints);

    searchButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton8.setToolTipText("Search Patient's Name");
    searchButton8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton8.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton8.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton8ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel40.add(searchButton8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel41.add(jPanel40, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel38.add(jPanel41, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel26.add(jPanel38, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel25.add(jPanel26, gridBagConstraints);

    jTabbedPane1.addTab("Dispatch Tender", jPanel25);

    jPanel2.setLayout(new java.awt.GridBagLayout());

    biddersTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct su.code code , fu.supplier supplier  FROM st_floated_quotations fu, \n" +
        "st_suppliers su where  quotation_no ilike '" +opentendertxt.getText()+ "' and fu.supplier=su.supplier_name\n" +
        ""));

// new String [] {
    //    "SupplierID", "Supplier Name", "Tender Number", "Open Tender"
    //}

    //);
    biddersTbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            biddersTblMouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(biddersTbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    jPanel2.add(jScrollPane2, gridBagConstraints);

    jPanel10.setLayout(new java.awt.GridBagLayout());

    usernameopentendertxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 200);
    jPanel10.add(usernameopentendertxt, gridBagConstraints);

    jLabel44.setText("Select Tender");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
    jPanel10.add(jLabel44, gridBagConstraints);

    jPanel45.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel45.setLayout(new java.awt.GridBagLayout());

    opentendertxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel45.add(opentendertxt, gridBagConstraints);

    searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton1.setToolTipText("Search");
    searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel45.add(searchButton1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
    jPanel10.add(jPanel45, gridBagConstraints);

    jLabel2.setForeground(new java.awt.Color(255, 0, 51));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel10.add(jLabel2, gridBagConstraints);

    jLabel48.setText("User");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
    jPanel10.add(jLabel48, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jPanel10, gridBagConstraints);

    jPanel11.setLayout(new java.awt.GridBagLayout());

    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/refresh.jpg"))); // NOI18N
    jButton5.setText("Refresh Records");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 2.0;
    jPanel11.add(jButton5, gridBagConstraints);

    jButton7.setText("Verify List");
    jButton7.setPreferredSize(new java.awt.Dimension(170, 26));
    jButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton7ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 2.0;
    jPanel11.add(jButton7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel2.add(jPanel11, gridBagConstraints);

    jTabbedPane1.addTab("Dispatched List", jPanel2);

    jPanel3.setLayout(new java.awt.GridBagLayout());

    jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
    jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTabbedPane2MouseClicked(evt);
        }
    });

    jPanel17.setLayout(new java.awt.GridBagLayout());

    jPanel31.setLayout(new java.awt.GridBagLayout());

    jButton16.setText("Edit Data");
    jButton16.setEnabled(false);
    jButton16.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton16ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(jButton16, gridBagConstraints);

    savedocs.setText("Save  Form Details");
    savedocs.setEnabled(false);
    savedocs.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            savedocsActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(savedocs, gridBagConstraints);

    jButton15.setText("Remove Saved Docs");
    jButton15.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton15ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(jButton15, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel17.add(jPanel31, gridBagConstraints);

    jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder("Bidders' Documentation"));
    jPanel29.setLayout(new java.awt.GridBagLayout());

    jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/pdf1.jpg"))); // NOI18N
    jButton13.setText("Upload pdf");
    jButton13.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton13ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jButton13, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(bqavailedckk, gridBagConstraints);

    jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/pdf1.jpg"))); // NOI18N
    jButton14.setText("Upload  pdf");
    jButton14.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton14ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jButton14, gridBagConstraints);

    jLabel30.setForeground(new java.awt.Color(255, 0, 0));
    jLabel30.setText("Tax Certificate");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel30, gridBagConstraints);

    jLabel32.setForeground(new java.awt.Color(255, 0, 0));
    jLabel32.setText("Certificate of Incorporation");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel32, gridBagConstraints);

    jTextField13.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jTextField13, gridBagConstraints);

    jLabel28.setForeground(new java.awt.Color(255, 0, 0));
    jLabel28.setText("Business Questionnaire");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel28, gridBagConstraints);

    jLabel17.setText("tick if properly filled");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel17, gridBagConstraints);

    jTextArea3.setColumns(20);
    jTextArea3.setRows(5);
    jTextArea3.setBorder(javax.swing.BorderFactory.createTitledBorder("Comment  on Documentation"));
    jScrollPane15.setViewportView(jTextArea3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jScrollPane15, gridBagConstraints);

    jTextField12.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jTextField12, gridBagConstraints);

    jLabel64.setForeground(new java.awt.Color(255, 0, 0));
    jLabel64.setText("Bid Bond Document");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    jPanel29.add(jLabel64, gridBagConstraints);

    jTextField17.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jTextField17, gridBagConstraints);

    jButton33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/pdf1.jpg"))); // NOI18N
    jButton33.setText("Upload  pdf");
    jButton33.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton33ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jButton33, gridBagConstraints);

    jButton34.setText("Preview Document ");
    jButton34.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton34ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    jPanel29.add(jButton34, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 6.0;
    jPanel17.add(jPanel29, gridBagConstraints);

    jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Bidding Information"));
    jPanel23.setLayout(new java.awt.GridBagLayout());

    jComboBox1.setEditable(true);
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jComboBox1, gridBagConstraints);

    jLabel26.setForeground(new java.awt.Color(255, 0, 0));
    jLabel26.setText("Bank Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel26, gridBagConstraints);

    jTextField8.setEditable(false);
    jTextField8.setForeground(new java.awt.Color(255, 102, 153));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jTextField8, gridBagConstraints);

    jLabel24.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
    jLabel24.setText("(tick if availed)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel24, gridBagConstraints);

    daysTxtf.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            daysTxtfCaretUpdate(evt);
        }
    });
    daysTxtf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            daysTxtfActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(daysTxtf, gridBagConstraints);

    jLabel25.setText("Bid Ammount");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel25, gridBagConstraints);

    jLabel27.setForeground(new java.awt.Color(255, 0, 0));
    jLabel27.setText("Bid Ref No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel27, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(bidavailedchk, gridBagConstraints);

    jLabel23.setForeground(new java.awt.Color(255, 0, 0));
    jLabel23.setText("Original 1% Bid Bond Form ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel23, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jTextField14, gridBagConstraints);

    jLabel22.setForeground(new java.awt.Color(255, 0, 0));
    jLabel22.setText("1% Bid(Kshs)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel22, gridBagConstraints);

    jTextArea4.setColumns(20);
    jTextArea4.setRows(5);
    jTextArea4.setBorder(javax.swing.BorderFactory.createTitledBorder("Comments on Bidding info"));
    jScrollPane16.setViewportView(jTextArea4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jScrollPane16, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 6.0;
    jPanel17.add(jPanel23, gridBagConstraints);

    jTabbedPane2.addTab("Tender Documentation", jPanel17);

    jPanel5.setLayout(new java.awt.GridBagLayout());

    jPanel47.setLayout(new java.awt.GridBagLayout());

    jPanel48.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel48.setLayout(new java.awt.GridBagLayout());

    postbtn3.setBackground(new java.awt.Color(0, 255, 255));
    postbtn3.setText("Save Item Details");
    postbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel48.add(postbtn3, gridBagConstraints);

    exitbtn4.setBackground(new java.awt.Color(0, 255, 255));
    exitbtn4.setMnemonic('c');
    exitbtn4.setText("Remove Row(s)");
    exitbtn4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel48.add(exitbtn4, gridBagConstraints);

    jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel48.add(jLabel54, gridBagConstraints);

    jButton12.setBackground(new java.awt.Color(0, 255, 255));
    jButton12.setText("VIEW ITEM SPECS");
    jButton12.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton12ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel48.add(jButton12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 3.0;
    jPanel47.add(jPanel48, gridBagConstraints);

    jPanel49.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel49.setLayout(new java.awt.GridBagLayout());

    specsTbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    specsTbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    specsTbl.setForeground(new java.awt.Color(102, 102, 102));
    specsTbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "#", "Specs"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, true
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    specsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            specsTblMouseClicked(evt);
        }
    });
    jScrollPane9.setViewportView(specsTbl);
    if (specsTbl.getColumnModel().getColumnCount() > 0) {
        specsTbl.getColumnModel().getColumn(0).setPreferredWidth(20);
        specsTbl.getColumnModel().getColumn(1).setPreferredWidth(550);
    }

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 4.0;
    jPanel49.add(jScrollPane9, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel47.add(jPanel49, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel50.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel50.setLayout(new java.awt.GridBagLayout());

    descriptionTxt.setEditable(false);
    descriptionTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel50.add(descriptionTxt, gridBagConstraints);

    jLabel63.setBackground(new java.awt.Color(255, 0, 51));
    jLabel63.setForeground(new java.awt.Color(255, 0, 51));
    jLabel63.setText("Days to Deliver");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel50.add(jLabel63, gridBagConstraints);

    jLabel65.setBackground(new java.awt.Color(255, 0, 51));
    jLabel65.setForeground(new java.awt.Color(255, 0, 51));
    jLabel65.setText("Country Of Orign");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel50.add(jLabel65, gridBagConstraints);

    countryTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    countryTxt.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            countryTxtFocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel50.add(countryTxt, gridBagConstraints);

    jLabel66.setText("Generic Description");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 0.5;
    jPanel50.add(jLabel66, gridBagConstraints);

    daysTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    daysTxt.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            daysTxtCaretUpdate(evt);
        }
    });
    daysTxt.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            daysTxtActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel50.add(daysTxt, gridBagConstraints);

    jLabel67.setForeground(new java.awt.Color(0, 153, 153));
    jLabel67.setText("{Enter These Fields For each Item}");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel50.add(jLabel67, gridBagConstraints);

    jPanel65.setLayout(new java.awt.GridBagLayout());

    itemSelectTbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    itemSelectTbl.setForeground(new java.awt.Color(102, 102, 102));
    itemSelectTbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "Select Item", "Item_Number"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Boolean.class, java.lang.Object.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    javax.swing.table.TableColumn column111 = null;
    for (int i = 0; i < 2; i++) {
        column111 = itemSelectTbl .getColumnModel().getColumn(i);
        if (i == 1) {

            column111.setPreferredWidth(250); //sport column is bigger
        }
    }
    itemSelectTbl.setGridColor(new java.awt.Color(0, 0, 204));
    itemSelectTbl.setSelectionBackground(new java.awt.Color(153, 255, 255));
    itemSelectTbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            itemSelectTblMouseClicked(evt);
        }
    });
    jScrollPane17.setViewportView(itemSelectTbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 5.0;
    jPanel65.add(jScrollPane17, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 3.0;
    gridBagConstraints.weighty = 5.0;
    jPanel50.add(jPanel65, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel47.add(jPanel50, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel5.add(jPanel47, gridBagConstraints);

    jTabbedPane2.addTab("Product Specifications", jPanel5);

    jPanel12.setLayout(new java.awt.GridBagLayout());

    jPanel32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel32.setLayout(new java.awt.GridBagLayout());

    postbtn1.setText("Save Tender Offers ");
    postbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(postbtn1, gridBagConstraints);

    exitbtn2.setMnemonic('c');
    exitbtn2.setText("Close");
    exitbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(exitbtn2, gridBagConstraints);

    jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel32.add(jLabel52, gridBagConstraints);

    jButton8.setText("Clear");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(jButton8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 3.0;
    jPanel12.add(jPanel32, gridBagConstraints);

    jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel22.setLayout(new java.awt.GridBagLayout());

    jTable12.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null}
        },
        new String [] {
            "Item Code", "Item Description", "Units", "Qty", "Unit Price", "Remarks"
        }
    ));
    jTable12.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable12MouseClicked(evt);
        }
    });
    jScrollPane12.setViewportView(jTable12);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel22.add(jScrollPane12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 25.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel12.add(jPanel22, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel13.setLayout(new java.awt.GridBagLayout());

    jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Tender No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel14.setLayout(new java.awt.GridBagLayout());

    jTextField4.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(jTextField4, gridBagConstraints);

    jLabel11.setText("Tender Opened");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel14.add(jLabel11, gridBagConstraints);

    jLabel12.setText("Tender Closing date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel14.add(jLabel12, gridBagConstraints);

    jTextField5.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(jTextField5, gridBagConstraints);

    jLabel13.setText("Bid Amount(Kshs)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel14.add(jLabel13, gridBagConstraints);

    jTextField1.setEditable(false);
    jTextField1.setForeground(new java.awt.Color(255, 0, 51));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel14.add(jTextField1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jPanel14, gridBagConstraints);

    jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Supplier Here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel16.setLayout(new java.awt.GridBagLayout());

    jLabel14.setText("Returned on");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel16.add(jLabel14, gridBagConstraints);

    jLabel16.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel16.add(jLabel16, gridBagConstraints);

    usernamereturnedtxt.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel16.add(usernamereturnedtxt, gridBagConstraints);

    jTextPane3.setEditable(false);
    jTextPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Supplier Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jScrollPane4.setViewportView(jTextPane3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel16.add(jScrollPane4, gridBagConstraints);

    datePicker5.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel16.add(datePicker5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jPanel16, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel12.add(jPanel13, gridBagConstraints);

    jTabbedPane2.addTab("Item Pricing/Product Specs", jPanel12);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel3.add(jTabbedPane2, gridBagConstraints);

    jPanel43.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Tender Here"));
    jPanel43.setLayout(new java.awt.GridBagLayout());

    jPanel46.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 204, 204)));
    jPanel46.setLayout(new java.awt.GridBagLayout());

    jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel42.setLayout(new java.awt.GridBagLayout());

    suppliernametxt.setEditable(false);
    suppliernametxt.setForeground(new java.awt.Color(0, 51, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel42.add(suppliernametxt, gridBagConstraints);

    searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton3.setToolTipText("Search");
    searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel42.add(searchButton3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel46.add(jPanel42, gridBagConstraints);

    jLabel15.setForeground(new java.awt.Color(255, 0, 0));
    jLabel15.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 10);
    jPanel46.add(jLabel15, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 1.0;
    jPanel46.add(jLabel56, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
    jPanel43.add(jPanel46, gridBagConstraints);

    jPanel53.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 204, 204)));
    jPanel53.setLayout(new java.awt.GridBagLayout());

    jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel15.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel15.setLayout(new java.awt.GridBagLayout());

    receivetendertxt.setEditable(false);
    receivetendertxt.setForeground(new java.awt.Color(0, 51, 255));
    receivetendertxt.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            receivetendertxtActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel15.add(receivetendertxt, gridBagConstraints);

    searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton2.setToolTipText("Search Patient's Name");
    searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel15.add(searchButton2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel53.add(jPanel15, gridBagConstraints);

    jLabel10.setForeground(new java.awt.Color(255, 0, 0));
    jLabel10.setText("Tender Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel53.add(jLabel10, gridBagConstraints);

    jLabel8.setText("jLabel8");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 1.0;
    jPanel53.add(jLabel8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel43.add(jPanel53, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel3.add(jPanel43, gridBagConstraints);

    jTabbedPane1.addTab("Enter Returned Tenders", jPanel3);

    jPanel4.setLayout(new java.awt.GridBagLayout());

    jTabbedPane3.setBackground(new java.awt.Color(0, 255, 255));
    jTabbedPane3.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
    jTabbedPane3.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTabbedPane3MouseClicked(evt);
        }
    });

    TechnicalEvaluationPane.setLayout(new java.awt.GridBagLayout());

    EvaluationTypePane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    EvaluationTypePane.setLayout(new java.awt.GridBagLayout());

    generalEvaluationTick.setText("General Evaluation");
    generalEvaluationTick.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            generalEvaluationTickActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    EvaluationTypePane.add(generalEvaluationTick, gridBagConstraints);

    jCheckBox4.setText("Pharmaceuticals Evaluation");
    jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    EvaluationTypePane.add(jCheckBox4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    TechnicalEvaluationPane.add(EvaluationTypePane, gridBagConstraints);

    TechnicalEvalutionMainPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    TechnicalEvalutionMainPane.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            TechnicalEvalutionMainPaneMouseClicked(evt);
        }
    });
    TechnicalEvalutionMainPane.setLayout(new java.awt.GridBagLayout());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    TechnicalEvaluationPane.add(TechnicalEvalutionMainPane, gridBagConstraints);

    jTabbedPane3.addTab("Technical Evaluation", TechnicalEvaluationPane);

    financialEvaluation.setLayout(new java.awt.GridBagLayout());

    jPanel54.setLayout(new java.awt.GridBagLayout());

    jPanel19.setLayout(new java.awt.GridBagLayout());

    jTable3.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "Bidders", "Award"
        }
    ));
    jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable3MouseClicked(evt);
        }
    });
    jScrollPane5.setViewportView(jTable3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    jPanel19.add(jScrollPane5, gridBagConstraints);

    jPanel20.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel20.setLayout(new java.awt.GridBagLayout());

    jLabel18.setText("Tender No:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 30);
    jPanel20.add(jLabel18, gridBagConstraints);

    jLabel19.setText("Sort By");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 30);
    jPanel20.add(jLabel19, gridBagConstraints);

    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Highest Price" }));
    jComboBox2.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jComboBox2ItemStateChanged(evt);
        }
    });
    jComboBox2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel20.add(jComboBox2, gridBagConstraints);

    jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel21.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel21.setLayout(new java.awt.GridBagLayout());

    jTextField39.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel21.add(jTextField39, gridBagConstraints);

    searchButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton5.setToolTipText("Search Patient's Name");
    searchButton5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton5.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton5.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel21.add(searchButton5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel20.add(jPanel21, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel19.add(jPanel20, gridBagConstraints);

    jSplitPane1.setLeftComponent(jPanel19);

    jPanel24.setLayout(new java.awt.GridBagLayout());

    jTable4.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Item Code", "Item Description", "Date to Deliver", "Qty", "Price"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane6.setViewportView(jTable4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    jPanel24.add(jScrollPane6, gridBagConstraints);

    jLabel45.setForeground(new java.awt.Color(255, 51, 102));
    jLabel45.setText("jLabel45");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel24.add(jLabel45, gridBagConstraints);

    jSplitPane1.setRightComponent(jPanel24);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel54.add(jSplitPane1, gridBagConstraints);

    actionPanel.setLayout(new java.awt.GridBagLayout());

    jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/download.jpg"))); // NOI18N
    jButton9.setText("Done Approval");
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 120, 5, 120);
    actionPanel.add(jButton9, gridBagConstraints);

    jButton10.setText("Close Form");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 120, 5, 120);
    actionPanel.add(jButton10, gridBagConstraints);

    jButton11.setText("?Help");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 120, 5, 120);
    actionPanel.add(jButton11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel54.add(actionPanel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    financialEvaluation.add(jPanel54, gridBagConstraints);

    jTabbedPane3.addTab("Financial Evaluation/Award", financialEvaluation);

    contract_management.setEnabled(false);
    contract_management.setLayout(new java.awt.GridBagLayout());

    jScrollPane14.setBorder(javax.swing.BorderFactory.createTitledBorder("MileStones Management"));

    jTable5.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Item Description", "Quantity ", "Units", "Delivery Phases", "First Delivery Date"
        }
    ));
    javax.swing.table.TableColumn ccDateEditorw = jTable5.getColumnModel().getColumn(4
    );
    com.afrisoftech.lib.DateCellEditor ccDateCellEditorw = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), jTable5);
    ccDateEditorw.setCellEditor(ccDateCellEditorw);
    jScrollPane14.setViewportView(jTable5);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    contract_management.add(jScrollPane14, gridBagConstraints);

    jPanel51.setEnabled(false);
    jPanel51.setLayout(new java.awt.GridBagLayout());

    jLabel49.setText("Tender Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
    jPanel51.add(jLabel49, gridBagConstraints);

    jLabel46.setText("Supplier Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel51.add(jLabel46, gridBagConstraints);

    jPanel59.setLayout(new java.awt.GridBagLayout());

    jTextField3.setEditable(false);
    jTextField3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel59.add(jTextField3, gridBagConstraints);

    jButton22.setEnabled(false);
    jButton22.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton22ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weighty = 1.0;
    jPanel59.add(jButton22, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel51.add(jPanel59, gridBagConstraints);

    jPanel60.setLayout(new java.awt.GridBagLayout());

    jTextField6.setEditable(false);
    jTextField6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField6ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel60.add(jTextField6, gridBagConstraints);

    jButton23.setEnabled(false);
    jButton23.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton23ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weighty = 1.0;
    jPanel60.add(jButton23, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
    jPanel51.add(jPanel60, gridBagConstraints);

    jLabel47.setText("Bid Amount(Kshs)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 1.0;
    jPanel51.add(jLabel47, gridBagConstraints);

    jTextField7.setEditable(false);
    jTextField7.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weighty = 1.0;
    jPanel51.add(jTextField7, gridBagConstraints);

    jLabel50.setText("Performance Bond Amt");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weighty = 1.0;
    jPanel51.add(jLabel50, gridBagConstraints);

    jTextField9.setForeground(new java.awt.Color(255, 0, 0));
    jTextField9.setEnabled(false);
    jTextField9.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField9CaretUpdate(evt);
        }
    });
    jTextField9.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField9FocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weighty = 1.0;
    jPanel51.add(jTextField9, gridBagConstraints);

    jCheckBox1.setText("Tick if Document is Availed");
    jCheckBox1.setEnabled(false);
    jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jCheckBox1ItemStateChanged(evt);
        }
    });
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weighty = 1.0;
    jPanel51.add(jCheckBox1, gridBagConstraints);

    jLabel55.setText("jLabel55");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    jPanel51.add(jLabel55, gridBagConstraints);

    jLabel57.setForeground(new java.awt.Color(255, 51, 51));
    jLabel57.setText("jLabel57");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    jPanel51.add(jLabel57, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 2.0;
    contract_management.add(jPanel51, gridBagConstraints);

    jPanel55.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
    jPanel55.setLayout(new java.awt.GridBagLayout());

    jButton24.setText("Save Data");
    jButton24.setEnabled(false);
    jButton24.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton24ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel55.add(jButton24, gridBagConstraints);

    jButton25.setText("Edit");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel55.add(jButton25, gridBagConstraints);

    jButton26.setText("Help");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel55.add(jButton26, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 1.0;
    contract_management.add(jPanel55, gridBagConstraints);

    jTabbedPane3.addTab("Contract Management", contract_management);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jTabbedPane3, gridBagConstraints);

    jTabbedPane1.addTab("Evaluation& Contract", jPanel4);

    jPanel6.setLayout(new java.awt.GridBagLayout());

    jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel33.setLayout(new java.awt.GridBagLayout());

    postbtn4.setMnemonic('n');
    postbtn4.setText("Send LPO/LSO For Commitment");
    postbtn4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(postbtn4, gridBagConstraints);

    resetbtn3.setMnemonic('R');
    resetbtn3.setText("RemoveRow");
    resetbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(resetbtn3, gridBagConstraints);

    cancelbtn3.setMnemonic('l');
    cancelbtn3.setText("Clear form");
    cancelbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(cancelbtn3, gridBagConstraints);

    jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel33.add(jLabel53, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 200.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(jLabel43, gridBagConstraints);

    jButton27.setText("    View Sent LPOs/LSOs    ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(jButton27, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel6.add(jPanel33, gridBagConstraints);

    jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel28.setLayout(new java.awt.GridBagLayout());

    jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable13.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity", "Unit Price"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable13.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column3 = null;
    for (int i = 0; i < 5; i++) {
        column3 = jTable13.getColumnModel().getColumn(i);
        if (i == 0) {

            column3.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column3.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column3.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane13.setViewportView(jTable13);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel28.add(jScrollPane13, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel6.add(jPanel28, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel30.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel30.setLayout(new java.awt.GridBagLayout());

    jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel34.setLayout(new java.awt.GridBagLayout());

    jLabel31.setText("Tender No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel31, gridBagConstraints);

    jPanel35.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel35.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel35.setLayout(new java.awt.GridBagLayout());

    tenderNotxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel35.add(tenderNotxt, gridBagConstraints);

    searchButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton6.setToolTipText("Search Patient's Name");
    searchButton6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton6.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton6.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton6ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel35.add(searchButton6, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel34.add(jPanel35, gridBagConstraints);

    jTextField15.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel34.add(jTextField15, gridBagConstraints);

    jLabel33.setText("Closing Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel33, gridBagConstraints);

    jTextPane4.setEditable(false);
    jTextPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Buyer's Designation & Address"));
    jScrollPane7.setViewportView(jTextPane4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 4.0;
    jPanel34.add(jScrollPane7, gridBagConstraints);

    jLabel34.setText("Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel34, gridBagConstraints);

    jTextField16.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel34.add(jTextField16, gridBagConstraints);

    jLabel35.setText("Document Type");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel35, gridBagConstraints);

    jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "LPO", "LSO", "IMPREST", "OTHERS" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel34.add(jComboBox11, gridBagConstraints);

    jLabel36.setText("Selection Criteria");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel36, gridBagConstraints);

    jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Average Price", "Highest Price", "Delivery" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel34.add(jComboBox12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    jPanel30.add(jPanel34, gridBagConstraints);

    jPanel36.setLayout(new java.awt.GridBagLayout());

    jLabel37.setText("Date Due");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel36.add(jLabel37, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel36.add(datePicker6, gridBagConstraints);

    jLabel38.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel36.add(jLabel38, gridBagConstraints);

    jLabel39.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel36.add(jLabel39, gridBagConstraints);

    usernamelpotxt.setEditable(false);
    usernamelpotxt.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel36.add(usernamelpotxt, gridBagConstraints);

    jPanel57.setLayout(new java.awt.GridBagLayout());

    jTextField2.setEditable(false);
    jTextField2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel57.add(jTextField2, gridBagConstraints);

    jButton19.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton19ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    jPanel57.add(jButton19, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel36.add(jPanel57, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel30.add(jPanel36, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel6.add(jPanel30, gridBagConstraints);

    jTabbedPane1.addTab("Raise LPO/LSO(s)", jPanel6);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(jTabbedPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void searchquotation() {

        System.out.println("Showing dialog");

        //searchrequisition.dispose();
        java.awt.Point point = this.requistntxt.getLocationOnScreen();
        searchrequisition.setSize(400, 200);
        searchrequisition.setLocation(point);
        searchrequisition.setVisible(true);
    }

    private void searchreceivedtenders() {
        java.awt.Point point = this.receivetendertxt.getLocationOnScreen();
        searchtender1.setSize(400, 200);
        searchtender1.setLocation(point);
        searchtender1.setVisible(true);
        searchButton3.setEnabled(true);

    }

    private void searchawardedsuppliers() {
        java.awt.Point point = this.suppliernametxt.getLocationOnScreen();

        searchsupplier1.setSize(300, 200);
        searchsupplier1.setLocation(point);
        searchsupplier1.setVisible(true);

        if (jTabbedPane2.getSelectedIndex() == 2) {
            searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" + receivetendertxt.getText() + "%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier and su.opened=true and da.unit_price<1;"));

        } else {
            searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" + receivetendertxt.getText() + "%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier and su.opened=true ;"));

        }
//         searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier, quotation_date   "
//                    + "FROM st_floated_quotations WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' order by quotation_date desc;"));
//            searchsupplierstbl1.setShowHorizontalLines(false);
//            
//            searchsupplierspnl1.setViewportView(searchsupplierstbl1);

    }

    private void uploadfile() {

        com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();
        filter.addExtension("pdf");
        jFileChooser1.setFileFilter(filter);

    }

    private void searchtendertopay() {
        System.out.println("Showing dialog");

        //searchrequisition.dispose();
        java.awt.Point point = this.tenderNotxt.getLocationOnScreen();
        searchtender2.setSize(400, 200);
        searchtender2.setLocation(point);
        searchtender2.setVisible(true);

    }

    private void searchsuppliertopay() {
//    java.awt.Point point = this.jTextField93.getLocationOnScreen();
//        searchsupplier3.setSize(400, 200);
//        searchsupplier3.setLocation(point);
//        searchsupplier3.setVisible(true);
//    

    }

    private void searchtendertoaward() {
        jLabel9.setVisible(false);
        java.awt.Point point = this.jTextField39.getLocationOnScreen();
        searchtender3.setSize(400, 200);
        searchtender3.setLocation(point);
        searchtender3.setVisible(true);

    }

    private void requisitiontxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_requisitiontxtCaretUpdate
        if (this.requisitiontxt.getCaretPosition() <= 4) {
            System.out.print("Nothing");

        } else {
//            requisitiontbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT requisition_no, agenda_no, date_buyer_assigned \n" +
//"  FROM st_assign_buyers where pr_status= false order by date_buyer_assigned asc ;"));

            requisitiontbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no and  bs.assigned_by is not null and st.monthly_usage='Open Tender' and st.requisition_no ilike '%" + requisitiontxt.getText() + "%'  order by 1"));
//jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no and  bs.assigned_by is not null and st.monthly_usage='Quotation' and st.requisition_no ilike '"+jTextField111111.getText()+"%' and    (select irq_no from \n" +
//"st_item_to_quote where irq_no ilike  st.requisition_no||'%'  and tender_no ilike 'PREQ%' ) not ilike st.requisition_no||'%'  order by 1"));

            requisitiontbl.setShowHorizontalLines(false);
            requisitionspnl.setViewportView(requisitiontbl);

        }   // Add your handling code here:
    }//GEN-LAST:event_requisitiontxtCaretUpdate

    private void requisitiontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requisitiontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requisitiontxtActionPerformed

    private void requisitiontblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requisitiontblMouseClicked
        requistntxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 0).toString());
        //depttxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 3).toString());
        //grouptxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 2).toString());

        searchrequisition.dispose();
        deptraisingtxt.setText(null);
//        aienotxt.setText(null);
//        aienotxt1.setText(null);
        //clear table 
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        int j = 0;
        try {
            java.sql.Statement code = connectDB.createStatement();
            java.sql.Statement o = connectDB.createStatement();
            java.sql.Statement stmtTable111 = connectDB.createStatement();

//             java.sql.ResultSet cd = code.executeQuery("SELECT  sub_item, allocated FROM st_subitems_pr_grouping where pr_no ilike '"+requistntxt.getText().toString()+"';");
//                     while (cd.next()){   
//                          aienotxt.setText(cd.getObject(1).toString());
//                            System.out.println("let's find the code now");
//                             java.sql.ResultSet d = o.executeQuery("SELECT subitem FROM subitems where subitemname ilike '"+aienotxt.getText().toString()+"%'");
//                                  while (d.next()){
//               
//                                  aienotxt1.setText(d.getString(1).toString());
//                                  System.out.println("we have it now");
//                                    }
            //}
            java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT item_code, item_description, units, quantity, store_name  "
                    + "FROM st_receive_requisation  where  requisition_no = '" + requistntxt.getText() + "' and monthly_usage='Open Tender'  and item_code NOT IN(SELECT DISTINCT item_code FROM st_item_to_quote WHERE irq_no ilike '%" + requistntxt.getText() + "%')");

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                deptraisingtxt.setText(rsetTable111.getObject(5).toString());

                jTable1.setValueAt(rsetTable111.getObject(1), j, 0);
                jTable1.setValueAt(rsetTable111.getObject(2), j, 1);
                jTable1.setValueAt(rsetTable111.getObject(3), j, 2);
                jTable1.setValueAt(rsetTable111.getObject(4), j, 3);

                j++;
                //}
            }
            System.out.println(j);

            if (j == 0) {

                JOptionPane.showMessageDialog(this, "PR has already been Processed", "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }

        //jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT subitemname FROM subitems"));
//        
//        adduserbtn.setEnabled(false);
        //        for (int k = 0; k < jTable1.getRowCount(); k++) {
        //            for (int r = 0; r < jTable1.getColumnCount(); r++) {
        //                jTable1.getModel().setValueAt(null, k, r);
        //            }
        //        }
        //        this.populateTable22(this.jTextField39.getText().toString());

        /*
         * try { for (int j = 0; j < jTable1.getRowCount(); j++) { //
         * java.sql.Statement stmtTable111 = connectDB.createStatement(); if
         * (jTable1.getModel().getValueAt(j, 0) != null) {
         *
         * java.sql.Statement stmtTable11 = connectDB.createStatement();
         * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
         * sum(qty) FROM stock_balance_qty WHERE item_code ilike '" +
         * jTable1.getValueAt(j, 0).toString() + "' AND department ILIKE '" +
         * jComboBox2.getSelectedItem() + "' AND dates <= '" +
         * datePicker1.getDate() + "'"); java.sql.Statement stmtTable11x =
         * connectDB.createStatement(); java.sql.ResultSet rsetTable11x =
         * stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty
         * WHERE item_code ilike '" + jTable1.getValueAt(j, 0).toString() + "'
         * AND department ILIKE '" + jComboBox11.getSelectedItem() + "' AND
         * dates <= '" + datePicker1.getDate() + "'");
         *
         *
         * while (rsetTable11x.next()) { while (rsetTable11.next()) { double
         * storeBal = 0; double depBal = 0; storeBal = rsetTable11.getDouble(1);
         * depBal = rsetTable11x.getDouble(1); jTable1.setValueAt(storeBal, j,
         * 4); jTable1.setValueAt(depBal, j, 5); } } } } } catch
         * (java.sql.SQLException sqlExec) {
         *
         * javax.swing.JOptionPane.showMessageDialog(this,
         * sqlExec.getMessage()); }
         */
        // Add your handling code here:
    }//GEN-LAST:event_requisitiontblMouseClicked

    private void closebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtnActionPerformed
        searchrequisition.dispose();  // Add your handling code here:
    }//GEN-LAST:event_closebtnActionPerformed
    private void searchsuppliers() {

        java.awt.Point point = this.suppliertxt.getLocationOnScreen();
        searchsuppliertxt.setText(null);
        searchsupplierstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier FROM st_td_collection where collected=false  and tender_no ilike '%" + tendernotxt.getText().toString() + "%' order by supplier"));
        searchsupplier.setSize(270, 200);
        searchsupplier.setLocation(point);
        searchsupplier.setVisible(true);

    }

    private void searchtenders() {
        System.out.println("Showing dialog");

        //searchrequisition.dispose();
        java.awt.Point point = this.tendernotxt.getLocationOnScreen();
        searchtender.setSize(400, 200);
        searchtender.setLocation(point);
        searchtender.setVisible(true);

        //KNH/6/2014-2015
    }
    private void tenderrecordstxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxtCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else {
            tenderrecordstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT tender_no, quotation_date::date,openning_date::date FROM st_item_to_quote where "
                    + "tender_no ilike 'KNH%' and  tender_no ilike '%" + tenderrecordstxt.getText() + "%' and quotation_date is not null and tender_no not in (SELECT DISTINCT quotation_no from st_bidder_code) order by quotation_date::date desc"));
            tenderrecordstbl.setShowHorizontalLines(false);

            tenderrecordsspnl.setViewportView(tenderrecordstbl);

        }

    }//GEN-LAST:event_tenderrecordstxtCaretUpdate

    private void tenderrecordstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxtActionPerformed

    private void tenderrecordstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstblMouseClicked

        ///clear the items table
        for (int k = 0; k < dispatchTbl.getRowCount(); k++) {
            for (int r = 0; r < dispatchTbl.getColumnCount(); r++) {
                dispatchTbl.getModel().setValueAt(null, k, r);
            }
        }
        // TODO add your handling code here:
        tendernotxt.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 0).toString());
        tenderdatetxt.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 1).toString());
        //.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 2).toString());
        searchButton8.setEnabled(true);
              // searchtender.dispose();

        try {

            //populate opening date
            java.sql.Statement selectdate = connectDB.createStatement();

            java.sql.ResultSet date = selectdate.executeQuery("SELECT  openning_date FROM st_item_to_quote WHERE tender_no ILIKE '" + this.tenderrecordstxt.getText() + "%'");

            while (date.next()) {

                openingdatetxt.setText(date.getString(1));

            }
            //populating table
            int i = 0, j;
            java.sql.Statement stmtTable1 = connectDB.createStatement();

            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT item_number, item_code, item_description, units, quantity"
                    + " FROM st_item_to_quote WHERE tender_no ILIKE '" + this.tendernotxt.getText() + "%' and quantity>0");

            while (rsetTable1.next()) {

                System.out.println("Working at table row " + i);
                dispatchTbl.setValueAt(rsetTable1.getObject(1), i, 0);
                dispatchTbl.setValueAt(rsetTable1.getObject(2), i, 1);
                dispatchTbl.setValueAt(rsetTable1.getObject(3), i, 2);
                dispatchTbl.setValueAt(rsetTable1.getObject(4), i, 3);
                dispatchTbl.setValueAt(rsetTable1.getObject(5), i, 4);

                i++;

            }

        } catch (SQLException ex) {
            Logger.getLogger(SSOTendering.class.getName()).log(Level.SEVERE, null, ex);
        }

        searchtender.dispose();

    }//GEN-LAST:event_tenderrecordstblMouseClicked

    private void closebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn1ActionPerformed
        // TODO add your handling code here:
        searchtender.dispose();
    }//GEN-LAST:event_closebtn1ActionPerformed

    private void searchsuppliertxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxtCaretUpdate
        // TODO add your handling code here:
        if (this.searchsuppliertxt.getCaretPosition() > 4) {
            System.out.print("Nothing");
        } else {

            //searchsupplierstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier_name, code as account_no FROM st_suppliers where supplier_name ILIKE '%" + searchsuppliertxt.getText() + "%' order by supplier_name"));
            searchsupplierstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier FROM st_td_collection where collected=false and supplier ILIKE '" + searchsuppliertxt.getText() + "%' and tender_no ilike '%" + tendernotxt.getText().toString() + "%' order by supplier"));
            searchsupplierstbl.setShowHorizontalLines(false);
            searchsupplierspnl.setViewportView(searchsupplierstbl);
        }


    }//GEN-LAST:event_searchsuppliertxtCaretUpdate

    private void searchsuppliertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxtActionPerformed

    private void searchsupplierstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstblMouseClicked

        // TODO add your handling code here:
        suppliertxt.setText(searchsupplierstbl.getValueAt(searchsupplierstbl.getSelectedRow(), 0).toString());

        searchsupplier.dispose();

    }//GEN-LAST:event_searchsupplierstblMouseClicked

    private void closebtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn2ActionPerformed
        // TODO add your handling code here:
        searchsupplier.dispose();
    }//GEN-LAST:event_closebtn2ActionPerformed

    private void tenderrecordstxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt1CaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt1.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else // '" +tenderrecordstxt1.getText()+"%'
        {
            tenderrecordstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  DISTINCT te.tender, da.quotation_date, openning_date FROM st_tender_suppliers te, st_floated_quotations da where quotation_no ilike '%T%' and  da.quotation_no =te.tender and quotation_no  ilike '" + tenderrecordstxt1.getText() + "%'"));
            tenderrecordstbl1.setShowHorizontalLines(false);

            tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        }


    }//GEN-LAST:event_tenderrecordstxt1CaretUpdate

    private void tenderrecordstxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt1ActionPerformed

    private void tenderrecordstbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl1MouseClicked
        // TODO add your handling code here:

        receivetendertxt.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 0).toString());
        jTextField5.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 1).toString());
        jTextField4.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 2).toString());

        ClearTable.clearthisTable(jTable12);

        suppliernametxt.setText(null);

        try {

//                 //populate suppliers searchtable   
//               //  if(jTabbedPane2.getSelectedIndex()==2){
//                 searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier and su.opened=true;"));
//                 searchsupplierstbl1.setShowHorizontalLines(false);
//                 searchsupplierspnl1.setViewportView(searchsupplierstbl1);
//                // }
//                 //else{
//                 
//                  searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier and su.opened=true ;"));
//                 
//               //  }
            searchButton3.setEnabled(true);
            searchtender1.dispose();

            //Populatin itemNo
            java.sql.Statement populateitems = connectDB.createStatement();

            java.sql.ResultSet rsetTable1 = populateitems.executeQuery("SELECT DISTINCT item_code, item_description FROM st_floated_quotations WHERE quotation_no = '" + receivetendertxt.getText() + "' ");
            int i = 0;
            while (rsetTable1.next()) {

                System.out.println("Working at table row " + i);

                itemSelectTbl.getModel().setValueAt(rsetTable1.getObject(1), i, 1);

                i++;

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_tenderrecordstbl1MouseClicked

    private void closebtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn3ActionPerformed
        // TODO add your handling code here:

        searchtender1.dispose();
    }//GEN-LAST:event_closebtn3ActionPerformed

    private void searchsuppliertxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt1CaretUpdate
        // TODO add your handling code here:
        if (this.searchsuppliertxt1.getCaretPosition() > 4) {
//            System.out.print("Nothing");
//
//        } else
//            
//        { //'" +receivetendertxt.getText()+"%'
            //searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier "));
            searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" + receivetendertxt.getText() + "%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier and and su.supplier_name ilike '" + searchsuppliertxt1.getText() + "%' and su.opened=true and da.unit_price<1;"));
            searchsupplierstbl1.setShowHorizontalLines(false);

            searchsupplierspnl1.setViewportView(searchsupplierstbl1);

        }


    }//GEN-LAST:event_searchsuppliertxt1CaretUpdate

    private void searchsuppliertxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt1ActionPerformed

    private void searchsupplierstbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl1MouseClicked

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(SELECT '-' UNION SELECT distinct bank_name from st_suppliers where supplier_name ilike '" + suppliernametxt.getText().trim() + "%' )   ORDER BY 1"));
        // TODO add your handling code here:
        suppliernametxt.setText(searchsupplierstbl1.getValueAt(searchsupplierstbl1.getSelectedRow(), 0).toString());

        // clear table
        for (int k = 0; k < jTable12.getRowCount(); k++) {
            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                jTable12.getModel().setValueAt(null, k, r);
            }
        }
//         ClearTable.clearthisTable(itemSelectTbl);
        try {

            int i = 0, j = 0;
            java.sql.Statement populateitems = connectDB.createStatement();

            java.sql.ResultSet rsetTable1 = populateitems.executeQuery("SELECT distinct item_code, item_description, units, quantity,unit_price FROM st_floated_quotations WHERE "
                    + "quotation_no ilike '" + this.receivetendertxt.getText() + "%' and supplier ilike '" + this.suppliernametxt.getText() + "%'");

            while (rsetTable1.next()) {

                System.out.println("Working at table row " + i);

                jTable12.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable12.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable12.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable12.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable12.setValueAt(rsetTable1.getObject(5), i, 4);

//                    jTable6.setValueAt(rsetTable1.getObject(1), j, 0);
//                    jTable6.setValueAt(rsetTable1.getObject(2), j, 1);
//                    jTable6.setValueAt(false,j, 5);
//                    itemSelectTbl.setValueAt(rsetTable1.getObject(0), i, 1);
                i++;
                j++;

                jLabel8.setVisible(true);
                jLabel8.setText("Items On Tender: " + i);
            }
            //  populate the supplier address
            java.sql.Statement supplieradd = connectDB.createStatement();
            java.sql.ResultSet rsetTable111 = supplieradd.executeQuery("SELECT  "
                    + "concat (supplier_name,  ' ' ,  town, '-', country) FROM st_suppliers  where  supplier_name = '" + suppliernametxt.getText() + "'  ");

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                jTextPane3.setText(rsetTable111.getObject(1).toString());
                //}
            }

            //total bid
            java.sql.Statement sum = connectDB.createStatement();
            java.sql.ResultSet computetotal = sum.executeQuery("SELECT  bid_amount::double precision  as total_price FROM st_floated_quotation_docs where tender_no='" + receivetendertxt.getText().toString() + "' and  supplier_name = '" + suppliernametxt.getText().toString() + "'");
            // SELECT sum(quantity*unit_price) as total_price FROM st_floated_quotations where quotation_no= 'T13' and supplier ilike 'ALPH%'
            while (computetotal.next()) {

                jTextField1.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(computetotal.getDouble(1)));

            }

        } catch (SQLException ex) {
            Logger.getLogger(SSOTendering.class.getName()).log(Level.SEVERE, null, ex);
        }
        searchsupplier1.dispose();
    }//GEN-LAST:event_searchsupplierstbl1MouseClicked

    private void closebtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn4ActionPerformed
        // TODO add your handling code here:
        searchsupplier1.dispose();
    }//GEN-LAST:event_closebtn4ActionPerformed

    private void searchsupplierstbl1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl1MouseEntered
    private void opentender() {

        java.awt.Point point = this.opentendertxt.getLocationOnScreen();
        searchsupplier2.setSize(400, 200);
        searchsupplier2.setLocation(point);
        searchsupplier2.setVisible(true);
    }
    private void searchsuppliertxt2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt2CaretUpdate
        // TODO add your handling code here:
        if (this.searchsuppliertxt2.getCaretPosition() > 5) {
            System.out.print("Searching...");
//
//        } else
//            
//        {
            searchsupplierstbl2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT distinct quotation_no FROM st_floated_quotations where  quotation_no ilike '%" + searchsuppliertxt2.getText() + "%' "));
            searchsupplierstbl2.setShowHorizontalLines(false);

            searchsupplierspnl2.setViewportView(searchsupplierstbl2);

        }

    }//GEN-LAST:event_searchsuppliertxt2CaretUpdate

    private void searchsuppliertxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt2ActionPerformed

    private void searchsupplierstbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl2MouseClicked
        // TODO add your handling code here:
        opentendertxt.setText(searchsupplierstbl2.getValueAt(searchsupplierstbl2.getSelectedRow(), 0).toString());
        biddersTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct su.code code , fu.supplier supplier, false RETURNED  FROM st_floated_quotations fu, \n"
                + "st_suppliers su where  quotation_no ilike '" + opentendertxt.getText() + "' and fu.supplier=su.supplier_name\n"
                + "and ordered=false"));

        jLabel2.setVisible(true);
        jLabel2.setText("TOTAL NUMBER OF APPLICANTS: " + biddersTbl.getRowCount());

        searchsupplier2.dispose();
    }//GEN-LAST:event_searchsupplierstbl2MouseClicked

    private void searchsupplierstbl2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl2MouseEntered

    private void closebtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn5ActionPerformed
        // TODO add your handling code here:
        searchsupplier2.dispose();

    }//GEN-LAST:event_closebtn5ActionPerformed

    private void tenderrecordstxt2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt2CaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt2.getCaretPosition() > 4) {
            System.out.print("Nothing");

//        } else
//            
//        {
//            //tenderrecordstbl2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT quotation_no, supplier FROM st_orders where quotation_no ilike '" +tenderrecordstxt2.getText().toString()+"%' and quotation_no ilike 'TN%' and ordered = false "));
            tenderrecordstbl2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct a.quotation_no Tender_No from st_orders a, st_floated_quotations b WHERE a.quotation_no ilike '%T%' and a.quotation_no=b.quotation_no and a.ordered =false and b.ordered=true  and a.quotation_no ilike '%" + tenderrecordstxt2.getText() + "%' "));

            tenderrecordstbl2.setShowHorizontalLines(false);

            tenderrecordsspnl2.setViewportView(tenderrecordstbl2);

        }


    }//GEN-LAST:event_tenderrecordstxt2CaretUpdate

    private void tenderrecordstxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt2ActionPerformed

    private void tenderrecordstbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl2MouseClicked
        // TODO add your handling code here:
        tenderNotxt.setText(tenderrecordstbl2.getValueAt(tenderrecordstbl2.getSelectedRow(), 0).toString());
       // jTextField2.setText(tenderrecordstbl2.getValueAt(tenderrecordstbl2.getSelectedRow(), 1).toString());

        // SELECT distinct quotation_no, buyer_details, quotation_date, openning_date, item_code, item_description,units, quantity,unit_price,days_to_deliver, brand, country_origin, remarks FROM st_floated_quotations where quotation_no ilike '' and supplier ilike ''and ordered = true and unit_price >0.00 order by quotation_no desc ;
        searchsupplierstbl4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_orders WHERE quotation_no ILIKE '" + tenderNotxt.getText().toString() + "%' and ordered=false"));
        searchsupplierstbl4.setShowHorizontalLines(true);
        searchsupplierspnl4.setViewportView(searchsupplierstbl4);

        searchtender2.dispose();


    }//GEN-LAST:event_tenderrecordstbl2MouseClicked

    private void closebtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn6ActionPerformed
        // TODO add your handling code here:
        searchtender2.dispose();
    }//GEN-LAST:event_closebtn6ActionPerformed

    private void searchsuppliertxt3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt3CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt3CaretUpdate

    private void searchsuppliertxt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt3ActionPerformed

    private void searchsupplierstbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl3MouseClicked

    private void searchsupplierstbl3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl3MouseEntered

    private void closebtn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn7ActionPerformed
        // TODO add your handling code here:
        searchsupplier3.dispose();
    }//GEN-LAST:event_closebtn7ActionPerformed

    private void tenderrecordstxt3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt3CaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt3.getCaretPosition() < 4) {
            System.out.print("Nothing");

        } else {
//            tenderrecordstbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct quotation_no TENDER_NO FROM st_floated_quotations"
//                    + " where unit_price  >0.00 and quotation_no ILIKE '%" + tenderrecordstxt3.getText() + "%'  and ordered = false and quotation_no ilike '%TN%' "));
//           
            tenderrecordstbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct quotation_no  as Tender_No   FROM st_technical_evaluation where approved=true and quotation_no ilike 'TN%' and quotation_no not in (select distinct quotation_no from st_orders) and quotation_no ilike '%" + tenderrecordstxt3.getText() + "%'"));
            tenderrecordstbl3.setShowHorizontalLines(false);

            tenderrecordsspnl3.setViewportView(tenderrecordstbl3);

//            int n=0, m=0;
//            if(tenderrecordstbl3.getValueAt(n, m)==null){
//            java.awt.Point p = tenderrecordsspnl3.getLocationOnScreen();
//            jLabel9.setVisible(true);
//            jLabel9.setLocation(p);
//            }
        }


    }//GEN-LAST:event_tenderrecordstxt3CaretUpdate

    private void tenderrecordstxt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt3ActionPerformed

    private void tenderrecordstbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl3MouseClicked
        // TODO add your handling code here:

         // try {
        try {
            //java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct b.code  , a.supplier  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.quotation_no = '"+tendernotxt1.getText().toString()+"' and te.");

            //java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct b.code,false award  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and supplier_name  in (select supplier from st_technical_evaluation  where quotation_no = '"+jTextField39.getText().toString()+"' and approved=true ) and a.quotation_no='"+jTextField39.getText().toString()+"'");
            for (int k = 0; k < jTable4.getModel().getRowCount(); k++) {
                for (int r = 0; r < jTable4.getModel().getColumnCount(); r++) {
                    jTable4.getModel().setValueAt(null, k, r);
                }
            }

            for (int k = 0; k < jTable3.getModel().getRowCount(); k++) {
                for (int r = 0; r < jTable3.getModel().getColumnCount(); r++) {
                    jTable3.getModel().setValueAt(null, k, r);
                }
            }

            jTextField39.setText(tenderrecordstbl3.getValueAt(tenderrecordstbl3.getSelectedRow(), 0).toString());
            searchtender3.dispose();

            java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total   FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 1");
            ResultSet aa = cde.executeQuery();
            int i = 0;
            while (aa.next()) {
                jTable3.setValueAt(aa.getObject(1).toString(), i, 0);
                jTable3.setValueAt(false, i, 1);
                //jTable3.setValueAt(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(Double.parseDouble(aa.getObject(2).toString())),i, 1);

                i++;

            }

//            jLabel45.setText("this form has only bidders who passed the Technical evaluation; ONLY "+i+ "  bidders are visible for technical evaluation");
//            jLabel45.setForeground(Color.red);
//            jLabel45.setVisible(true);
            //this.closebtnt.doClick();
        } catch (Exception ex) {
            ex.printStackTrace();

        }


    }//GEN-LAST:event_tenderrecordstbl3MouseClicked

    private void closebtn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn8ActionPerformed
        // TODO add your handling code here:
        searchtender3.dispose();
    }//GEN-LAST:event_closebtn8ActionPerformed
    private void deletepdfs() {

        try {
              // TODO add your handling code here:
            //        com.afrisoftech.hospinventory.criteria a = new com.afrisoftech.hospinventory.criteria(new javax.swing.JFrame(),true,tenderNo,connectDB,null);
            //         a.setLocation(450,250);
            //        a.setVisible(true);
            if (receivetendertxt.getText().isEmpty() || suppliernametxt.getText().isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Both tender number and supplier must be selected", "Caution Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                java.sql.Statement user = connectDB.createStatement();
                java.sql.ResultSet getuser = user.executeQuery("select current_user");
                while (getuser.next()) {
                    Object usr = getuser.getObject(1).toString();

                    //  com.afrisoftech.hospinventory.deletepdfs a = new com.afrisoftech.hospinventory.deletepdfs(null, true, usr,receivetendertxt.getText().toString(),suppliernametxt.getText().toString());
                    com.afrisoftech.hospinventory.deletepdfs a = new com.afrisoftech.hospinventory.deletepdfs(new javax.swing.JFrame(), true, usr, receivetendertxt.getText().toString(), suppliernametxt.getText().toString(), connectDB, null);
                    a.setLocation(300, 300);
                    a.setVisible(true);
                    a.setModal(true);
                }
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        java.lang.String access_code = null;
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("select accessobject from defined_contribution");

            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                access_code = rset.getObject(1).toString();
            }

            if (jPasswordField1.getText().equals(access_code)) {
                jButton18.doClick();
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker6.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker6.getDate().before(periodFrom) || datePicker6.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (jTable13.isEditing()) {
                        jTable13.getCellEditor().stopCellEditing();
                    }

                    String oder_no = null;

                    double quantity = 0.00;

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);

                    System.out.println(datenowSql.toString());
//registering savepointr
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    //begin insert-orderno generation
                    try {
                        String order_no1 = null;
                        java.sql.Date current_date = null;
                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select date_part('year',now())|| lpad('" + order_no1 + "',6,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            oder_no = rs1.getObject(1).toString();
                        }

                        System.out.println("" + oder_no + "");
                        //insert into db

                        java.lang.Boolean checker = true;
                        String unallocateditems = " ";

                        for (int h = 0; h < jTable13.getRowCount(); h++) {
                            if (jTable13.getValueAt(h, 2) != null) {

                                /////generating an LPO NUMBER
                                java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE st_orders SET  order_no ='" + oder_no + "',criteria='" + jComboBox12.getSelectedItem().toString() + "',doc_type='" + jComboBox11.getSelectedItem() + "',gross_value='" + java.lang.Double.valueOf(jTable13.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(h, 4).toString()) + "',net_value='" + java.lang.Double.valueOf(jTable13.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(h, 4).toString()) + "',date_due='" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker6.getDate()) + "' WHERE quotation_no='" + tenderNotxt.getText() + "' and code='" + jTable13.getValueAt(h, 1).toString() + "' and item='" + jTable13.getValueAt(h, 2).toString() + "' and supplier='" + jTextField2.getText() + "'");
                                pstmt8121.executeUpdate();

                                checker = true;
                            }
                        }

             // System.out.println("The value for checker is "+checker);
                        if (checker == false) {

                            javax.swing.JOptionPane.showMessageDialog(this, "Double Check your Entries  ", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                        } else {
//                   
//                   
//                      for (int i = 0; i < jTable13.getRowCount(); i++) {
//                            if (jTable13.getModel().getValueAt(i, 1) != null) {
//                                
//                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("UPDATE st_orders set"
//                                            + " gross_value='"+java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString())+"'"
//                                            + ",net_value='"+java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString())+"'"
//                                            + ",ordered=true, order_no='"+oder_no+"', "
//                                            + "date_due='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker6.getDate())+"'"
//                                            + ",date='"+current_date+"' , item_strength='n/a' ,"
//                                            + "doc_type='"+jComboBox11.getSelectedItem()+"', criteria='"+jComboBox12.getSelectedItem().toString()+"' "
//                                            + "where quotation_no='"+jTextField40.getText().toString()+"' "
//                                            + "and supplier='"+jTextField2.getText().toString()+"' and item='"+jTable13.getValueAt(i, 2).toString()+"'");
//
//
//
//                                   
//
//                                    pstmt2.executeUpdate();
//
//                                    System.out.println("sonice");
//                                   
//
//
//                                    
////                                    java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField40.getText() + "'");
////                                    pstmt31.executeUpdate();
//
////                                    java.sql.PreparedStatement pstmtCommit2Votebook = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField40.getText() + "'");
////                                    pstmtCommit2Votebook.executeUpdate();
//
//                                    
//                                    com.afrisoftech.lib.VoteBook.setVoteBalance(connectDB,
//                                        com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(i, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(i, 4).toString()) * Double.parseDouble(jTable13.getValueAt(i, 5).toString()),
//                                        com.afrisoftech.lib.VoteBook.getVote(connectDB, jTable13.getValueAt(i, 2).toString(),
//                                        com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)),
//                                        com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB), jTable13.getValueAt(i, 2).toString());
//                                    
////                                         } 
//                                  
//                            }
                            connectDB.commit();
                            connectDB.setAutoCommit(true);

                            String raised_lpo_lso = jComboBox11.getSelectedItem() + "-" + oder_no;
                            java.sql.PreparedStatement pr_progress = connectDB.prepareStatement("UPDATE st_pr_progress SET raise_lpo_lso='" + raised_lpo_lso + "' where   approved_by_tc='" + tenderNotxt.getText() + "' ");

                            pr_progress.executeUpdate();

                            javax.swing.JOptionPane.showMessageDialog(this, "You have generated an " + jComboBox11.getSelectedItem() + " (" + oder_no + " ) successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                            for (int k = 0; k < jTable13.getRowCount(); k++) {
                                for (int r = 0; r < jTable13.getColumnCount(); r++) {
                                    jTable13.getModel().setValueAt(null, k, r);
                                }
                            }

//                        if (jComboBox11.getSelectedItem().toString().equalsIgnoreCase("LSO")) {
//                            com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf();
//
//                            policy.LsoMtrhPdf(connectDB, jTextField2.getText(), oder_no);
//                            // com.afrisoftech.hospinventory.LsoPdf policy = new com.afrisoftech.hospinventory.LsoPdf();
//
//                            // policy.LsoPdf(connectDB, jTextField93.getText(), oder_no);
//                        } else {
//
//                            com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf();
//
//                            policy.LpoMtrhPdf(connectDB, jTextField2.getText(), oder_no);
//                            //com.afrisoftech.hospinventory.LpoPdf policy = new com.afrisoftech.hospinventory.LpoPdf();
//
//                            //policy.LpoPdf(connectDB, jTextField93.getText(), oder_no);
//                        }
                            this.postbtn3.setEnabled(false);

                        }

                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

//                        jLabel7.setForeground(java.awt.Color.red);
                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            sql.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());

                    }
                }

            } else {
                jButton18.doClick();
                javax.swing.JOptionPane.showMessageDialog(this, "You must input the authorised pass key to approve", "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        this.lpopasswd.dispose();
    }//GEN-LAST:event_jButton18ActionPerformed
    private void searchsuppliertoaward() {
        java.awt.Point point = this.jLabel38.getLocationOnScreen();
        searchsupplier4.setSize(400, 200);
        searchsupplier4.setLocation(point);
        searchsupplier4.setVisible(true);

    }
    private void searchsuppliertxt4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt4CaretUpdate
        // TODO add your handling code here:

        if (searchsuppliertxt4.getCaretPosition() > 2) {
            searchsupplierstbl4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_orders WHERE quotation_no ILIKE '" + tenderNotxt.getText().toString() + "%' and ordered=false  ORDER BY 1"));
            searchsupplierstbl4.setShowHorizontalLines(true);
            searchsupplierspnl4.setViewportView(searchsupplierstbl4);
        }


    }//GEN-LAST:event_searchsuppliertxt4CaretUpdate

    private void searchsuppliertxt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt4ActionPerformed

    private void searchsupplierstbl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl4MouseClicked
        // TODO add your handling code here:
        jTextField2.setText(searchsupplierstbl4.getValueAt(searchsupplierstbl4.getSelectedRow(), 0).toString());

        //populate table
        try {

            //populating table
            int i = 0, j = 0;
            String r = jTextField2.getText().toString();
            String e = tenderNotxt.getText().toString();
            ///SELECT  distinct a.code, a.item, b.quotation_date, b.openning_date , b.units, b.quantity,b.unit_price  FROM st_orders a, st_floated_quotations b where b.quotation_no=a.quotation_no and b.supplier=a.supplier and a.code=b.item_code and a.quotation_no = 'TNo139' and b.supplier='C-MEHTA & CO. LIMITED'  and a.ordered = false group by a.code, a.item, b.quotation_date, b.openning_date , b.units, b.quantity,b.unit_price
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT  distinct a.code, b.item_description, b.quotation_date, b.openning_date , b.units, a.quantity,b.unit_price  FROM st_orders a, st_floated_quotations b "
                    + "where  b.supplier=a.supplier and a.code=b.item_code and b.quotation_no=a.quotation_no and b.quotation_no = '" + e + "' and b.supplier='" + r + "'  and a.ordered = false and a.order_no is null group by a.code, b.item_description, b.quotation_date, b.openning_date , b.units, a.quantity,b.unit_price,a.order_no ");
            int checker = 0;
            while (rsetTable1.next()) {

                System.out.println("Working at table row " + i);

                jTextField15.setText(rsetTable1.getObject(3).toString());
                jTextField16.setText(rsetTable1.getObject(4).toString());

                jTable13.setValueAt(i + 1, i, 0);

                jTable13.setValueAt(rsetTable1.getObject(1), i, 1);
                jTable13.setValueAt(rsetTable1.getObject(2), i, 2);
                jTable13.setValueAt(rsetTable1.getObject(5), i, 3);
                jTable13.setValueAt(rsetTable1.getObject(6), i, 4);
                jTable13.setValueAt(rsetTable1.getObject(7), i, 5);

//                    jTable13.setValueAt(rsetTable1.getObject(11),i, 7);
//                    jTable13.setValueAt(rsetTable1.getObject(12),i, 8);
//                    jTable13.setValueAt(rsetTable1.getObject(13),i, 9);
                i++;

                checker++;

            }
            System.out.println(checker);
            if (checker <= 0) {

                JOptionPane.showMessageDialog(null, "Item(s) Already Ordered", "ERROR MESSAGE!", JOptionPane.ERROR_MESSAGE);

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        searchsupplier4.dispose();
    }//GEN-LAST:event_searchsupplierstbl4MouseClicked

    private void searchsupplierstbl4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl4MouseEntered

    private void closebtn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn9ActionPerformed
        // TODO add your handling code here:
        searchsupplier4.dispose();
    }//GEN-LAST:event_closebtn9ActionPerformed

    private void tenderrecordstbl1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstbl1MouseEntered

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        lpopasswd1.dispose();
        java.lang.String access_code = null;
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("select accessobject from defined_contribution");

            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                access_code = rset.getObject(1).toString();
            }

            if (jPasswordField1.getText().equals(access_code)) {
                jButton21.doClick();

                deletepdfs();
            } else {
                jButton21.doClick();
                javax.swing.JOptionPane.showMessageDialog(this, "you are not authorised to delete a pdf");
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }


    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:

        //        if (jTabbedPane1.getSelectedIndex()==3){
        //        if (receivetendertxt.getText()==null) {
        //            searchButton3.setEnabled(false);
        //
        //        }
        //        else if (receivetendertxt.getText()!=null) {
        //            searchButton3.setEnabled(true);
        //        }}
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        searchsuppliertoaward();

    }//GEN-LAST:event_jButton19ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void searchButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton6ActionPerformed
        //searchButton13Clicked();         // TODO add your handling code here:

        searchtendertopay();
    }//GEN-LAST:event_searchButton6ActionPerformed

    private void cancelbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn3ActionPerformed
        // TODO add your handling code here:
        jComboBox11.setSelectedIndex(0);

        jComboBox12.setSelectedIndex(0);

        tenderNotxt.setText(null);

        jTextField16.setText(null);

        jTextField15.setText(null);

        jTextField2.setText(null);

        for (int k = 0; k < jTable13.getModel().getRowCount(); k++) {
            for (int r = 0; r < jTable13.getModel().getColumnCount(); r++) {
                jTable13.getModel().setValueAt(null, k, r);
            }
        }

    }//GEN-LAST:event_cancelbtn3ActionPerformed

    private void resetbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn3ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = jTable13.getSelectedRowCount();

        int[] selectedRows = jTable13.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable13.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable13.getModel();

                defTableModel.removeRow(jTable13.getSelectedRow());
            }
        }
    }//GEN-LAST:event_resetbtn3ActionPerformed

    private void postbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn4ActionPerformed
        //javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        //searchrequisition.dispose();
        // java.awt.Point point = jLabel35.getLocationOnScreen();
        passwd.setSize(400, 200);
        passwd.setLocation(350, 230);
        //passwd.setLocation(point);
        passwd.setVisible(true);
        jPasswordField5.setText(null);

    }//GEN-LAST:event_postbtn4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            connectDB.setAutoCommit(false);
            String units = null, b = null;
            Boolean check_insert = false;

            // for (int i = 0; i < jTable3.getRowCount(); i++) {
            String s = jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 1).toString();
            System.out.println("mimi" + s);
            if (s.toString() == "true") {
                    // lineNumber = lineNumber + 1;

                    //  java.sql.PreparedStatement save = connectDB.prepareStatement("UPDATE st_floated_quotations"
                // UPDATE st_floated_quotations SET  ordered=true WHERE supplier ilike '' and quotation_no ilike ''
                System.out.println("mimi" + s);

                try {
                    String n = jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString();
                    java.sql.PreparedStatement tafta = connectDB.prepareStatement("select supplier_name from st_suppliers where code='" + n + "'");
                    ResultSet sawa = tafta.executeQuery();
                    while (sawa.next()) {
                        b = sawa.getObject(1).toString();
                                //java.sql.PreparedStatement ok= connectDB.prepareStatement("");

                    }
                    int k = 0;
                    String sup_name = null;
                    for (int p = 0; p < jTable4.getModel().getRowCount(); p++) {
//                                java.sql.PreparedStatement save1 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered=true WHERE supplier ilike '" +jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString()+"' and quotation_no ilike '"+jTextField39.getText().toString()+"' and  item_description = '"+jTable4.getModel().getValueAt(p, 1).toString()+"' ");
//                                save1.executeUpdate();
//                            }

                        java.sql.PreparedStatement save1 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered=true WHERE supplier = '" + b + "' and quotation_no ilike '" + jTextField39.getText().toString() + "' and  item_description = '" + jTable4.getModel().getValueAt(p, 1).toString() + "' ");
                        save1.executeUpdate();
                    }
                    System.out.println("nimeupdate");

                    String financial_yr = creatingFinancialYear();
                    String head = null, subhead = null, dated = null, dept = null, req_no = null;
                    //insert records for lpo (ordering)
                    int j;
                    for (int i = 0; i < jTable4.getModel().getRowCount(); i++) {
                                ////getting the units

                        java.sql.Statement pstmtgg12 = connectDB.createStatement();
                        java.sql.ResultSet rs1sgg12 = pstmtgg12.executeQuery("SELECT units from st_stock_item  where item_code='" + jTable4.getValueAt(i, 0).toString() + "' UNION select units_rate from services_list where service_code='" + jTable4.getValueAt(i, 0).toString() + "'"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");
                        /////getting the ordering department

                        while (rs1sgg12.next()) {

                            units = rs1sgg12.getString(1);
                        }

                        java.sql.Statement st31 = connectDB.createStatement();
                        java.sql.ResultSet rset31 = st31.executeQuery("SELECT supplier_name from st_suppliers where code='" + jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString() + "'");

                        while (rset31.next()) {
                            sup_name = rset31.getString(1);
                        }

                        java.sql.Statement pstmtgg128 = connectDB.createStatement();
                        java.sql.ResultSet rs1sgg128 = pstmtgg128.executeQuery("select DISTINCT irq_no  from st_item_to_quote where  tender_no='" + jTextField39.getText() + "'"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");
                        while (rs1sgg128.next()) {
                            pur_req = rs1sgg128.getString(1);

                        }

                        int req_index = pur_req.indexOf("-");
                        String req = pur_req.substring(0, req_index);

                        java.sql.Statement pstmtgg1 = connectDB.createStatement();
                        java.sql.ResultSet rs1sgg1 = pstmtgg1.executeQuery("select distinct store_name,requisition_no from st_receive_requisation where requisition_no ilike 'PRQ%' and requisition_no ='" + req + "'");

                                /////getting the ordering department
                        while (rs1sgg1.next()) {
                            dept = rs1sgg1.getString(1);
                            req_no = rs1sgg1.getString(2);
                        }

                        java.sql.PreparedStatement savelpo = connectDB.prepareStatement("INSERT INTO st_orders (quotation_no, supplier, criteria, item, quantity, unit_price, units,code,ordering_store, requisition_no)"
                                + " VALUES (?,?,?,?,?,?,?,?,?,?)");

                        savelpo.setObject(1, jTextField39.getText().toString());
                        savelpo.setObject(2, sup_name);
                        savelpo.setObject(3, jComboBox2.getSelectedItem().toString());
                        savelpo.setObject(4, jTable4.getModel().getValueAt(i, 1).toString());
                        savelpo.setDouble(5, Double.parseDouble(jTable4.getModel().getValueAt(i, 2).toString()));
                        savelpo.setDouble(6, Double.parseDouble(jTable4.getModel().getValueAt(i, 3).toString().replace(",", "")));

                        savelpo.setObject(7, units);
                        savelpo.setObject(8, jTable4.getModel().getValueAt(i, 0));
                        //savelpo.setObject(9, jTable4.getModel().getValueAt(i,0));
                        savelpo.setObject(9, dept);
                        savelpo.setObject(10, req_no);

                        savelpo.executeUpdate();

//                                ////getting the votes
//                                 java.sql.Statement stmtsss = connectDB.createStatement();
//                                            java.sql.ResultSet resss= stmtsss.executeQuery("SELECT  head,subhead  FROM st_procurement_plan where item_code='"+jTable4.getModel().getValueAt(i, 0)+"' and item_description='"+jTable4.getModel().getValueAt(i, 1)+"' and financial_year='"+financial_yr+"'");
//                                            while(resss.next()){
//                                            head=resss.getString(1);
//                                            subhead=resss.getString(2);
//
//                                                   }
//                                            
//                                            java.sql.PreparedStatement pstmtf = connectDB.prepareStatement("UPDATE st_item_to_quote   SET   vote=?, head=?, subhead=?,donor_code=?,sub_item_desc=?,donor_item=?,sub_item=? WHERE item_code='"+jTable4.getValueAt(i,0).toString()+"' and item_description='"+jTable4.getValueAt(i,1).toString()+"' and  tender_no='"+jTextField39.getText()+"'");
//                                  pstmtf.setObject(1,"01"); 
//                                  pstmtf.setObject(2,head);
//                                  pstmtf.setObject(3,subhead);
//                                  pstmtf.setObject(4,dated);
//                                  pstmtf.setObject(5,jTable4.getValueAt(i, 0));
//                                  pstmtf.setObject(6,"TRUE");
//                                  pstmtf.setObject(7,jTable4.getValueAt(i, 4));
//                                  pstmtf .executeUpdate();
                        check_insert = true;

                    }

                    System.out.println("nimeuptena");

                    if (check_insert == true) {
                        String awarding = "Awarded to " + sup_name;
                        JOptionPane.showMessageDialog(null, "Supplier Awarded Successfully");
                        java.sql.PreparedStatement pr_progress = connectDB.prepareStatement("UPDATE st_pr_progress SET evaluation=now()::date,awarding='" + awarding + "' where   approved_by_tc='" + jTextField39.getText() + "' ");

                        pr_progress.executeUpdate();
                        connectDB.commit();
                        connectDB.setAutoCommit(true);

//                            javax.swing.JOptionPane.showMessageDialog(this, "Supplier Awarded Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
//                           
//                         
//                          
//                                
//                             
//                                String awarding="Awarded to "+sup_name;
//                                 JOptionPane.showMessageDialog(null,"Supplier Awarded Successfully");
//                                  java.sql.PreparedStatement pr_progress= connectDB.prepareStatement("UPDATE st_pr_progress SET evaluation=now()::date,awarding='"+awarding+"' where   approved_by_tc='" + jTextField39.getText()+"' ");
//            
//                                 pr_progress.executeUpdate();
                        for (int k1 = 0; k1 < jTable4.getModel().getRowCount(); k1++) {
                            for (int r = 0; r < jTable4.getModel().getColumnCount(); r++) {
                                jTable4.getModel().setValueAt(null, k1, r);
                            }
                        }

                        for (int k1 = 0; k1 < jTable3.getModel().getRowCount(); k1++) {
                            for (int r = 0; r < jTable3.getModel().getColumnCount(); r++) {
                                jTable3.getModel().setValueAt(null, k1, r);
                            }
                        }

                    }
                } catch (SQLException n) {
                    Logger.getLogger(SSOTendering.class.getName()).log(Level.SEVERE, null, n);
                }

            } else {
                int i = 0;
                javax.swing.JOptionPane.showMessageDialog(this, "PLEASE SELECT AWARD CHECKBOX for " + jTable3.getModel().getValueAt(jTable3.getSelectedRow(), i).toString() + " TO PROCEED", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (SQLException ex) {
            Logger.getLogger(SSOTendering.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton9ActionPerformed
    public String creatingFinancialYear() {
        String financial_yr = null;
        int limit_days = 30;
        int limit_mnth = 6;

        try {
            //        java.sql.Statement stmt=connectDB.createStatement();
//        java.sql.ResultSet res=stmt.executeQuery("select current_date::date");
//        
//        while (res.next()){
//        java.util.Date gets=res.getDate(1);

            Calendar now = Calendar.getInstance();
            int year = now.get(Calendar.YEAR);
            int month = now.get(Calendar.MONTH); // Note: zero based!
            int day = now.get(Calendar.DAY_OF_MONTH);

            Object yr = null, next_year = null;

            if (month >= limit_mnth && day >= limit_days) {

                yr = year;
                int y = year + 1;
                next_year = y;
                financial_yr = yr.toString() + "/" + next_year;

            } else {
                yr = year;
                int y = year - 1;
                next_year = y;
                financial_yr = next_year + "/" + yr;

            }

       // mm.setText(financial_yr);
        } catch (Exception esc) {
            esc.printStackTrace();

        }
        return financial_yr;

    }
    private void searchButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton5ActionPerformed
        // searchButton13Clicked();
        searchtendertoaward();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton5ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked

        // TODO add your handling code here:
        //
//        String a =  jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString();
//
//        jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  item_code, item_description, quantity,(quantity*unit_price) total_price  FROM st_floated_quotations where unit_price>0.00 and quotation_no ilike '"+jTextField39.getText().toString()+"' and supplier =(select supplier_name from st_suppliers where code='"+a.toString()+"' )"));
//        jTable4.setShowHorizontalLines(false);
//        jTable4.getModel().isCellEditable(jTable4.getRowCount(), jTable4.getColumnCount());
//
//        jScrollPane6.setViewportView(jTable4);
        String jk = jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString();

        for (int xc = 0; xc < jTable3.getModel().getRowCount(); xc++) {
            if (Boolean.valueOf(jTable3.getModel().getValueAt(xc, 1).toString()) == Boolean.TRUE) {
                num_val = xc;

                System.out.println("NUM VALUES in " + num_val);

            }

        }
        System.out.println("NUM VALUES " + num_val);
        if (num_val == 0) {
            //jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  item_code, item_description, days_to_deliver, quantity, unit_price,discount,vat,(quantity*unit_price) total_price,discount,vat,(quantity*unit_price)-((discount+vat)*0.01)*(quantity*unit_price) as netvalue  FROM st_floated_quotations where unit_price>0.00 and quotation_no='"+jTextField39.getText().toString()+"' and supplier =(select supplier_name from st_suppliers where code='"+a.toString()+"' ) "));
            jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  item_code, item_description, quantity,(quantity*unit_price) total_price  FROM st_floated_quotations where unit_price>0.00 and quotation_no ilike '" + jTextField39.getText().toString() + "' and supplier =(select supplier_name from st_suppliers where code='" + jk.toString() + "' )"));
            jTable4.setShowHorizontalLines(false);
        //jTable4.getModel().isCellEditable(jTable4.getRowCount(), jTable4.getColumnCount());

            jScrollPane6.setViewportView(jTable4);
        } else if (num_val >= 1) {

            JOptionPane.showMessageDialog(null, "You Cannot Award more than one  Bidders at The Same Time", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            jTable3.getModel().setValueAt(false, num_val, 1);

            num_val = 0;
            //jScrollPane8.setViewportView(jTable3);
        }


    }//GEN-LAST:event_jTable3MouseClicked

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox4.isSelected()) {
//javax.swing.JOptionPane.showMessageDialog(this, "Coming Soon!");

            jCheckBox4.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void generalEvaluationTickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generalEvaluationTickActionPerformed
        ////check the Tabbed Pane clicked
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        JInternalFrame KickOlson = null;

        JInternalFrame KickOlsonAgain = null;

        MainPanellToLoad = new JPanel();
        jSplitPane1.setDividerLocation(84);
        KickOlson = (JInternalFrame) new SSOTechEvaluation(connectDB, null);
        KickOlson.setVisible(true);
        TechnicalEvalutionMainPane.removeAll();
        TechnicalEvalutionMainPane.setLayout(new java.awt.BorderLayout());
        TechnicalEvalutionMainPane.add(KickOlson, java.awt.BorderLayout.CENTER);
        TechnicalEvalutionMainPane.updateUI();
        System.out.println("I Kicked OLson");

        MainPanellToLoad = new JPanel();
        jSplitPane1.setDividerLocation(84);
        KickOlsonAgain = (JInternalFrame) new SSOTechEvaluation(connectDB, null);
        KickOlsonAgain.setVisible(true);
        financialEvaluation.removeAll();
        financialEvaluation.setLayout(new java.awt.BorderLayout());
        financialEvaluation.add(KickOlsonAgain, java.awt.BorderLayout.CENTER);
        financialEvaluation.updateUI();
        System.out.println("I Kicked Olson Again");

        MainPanellToLoad = new JPanel();
        jSplitPane1.setDividerLocation(84);
        MainPanellToLoad = (JPanel) new ContractPanel(connectDB, null);
        //KickOlson.setVisible(true);
        contract_management.removeAll();
        contract_management.setLayout(new java.awt.BorderLayout());
        contract_management.add(MainPanellToLoad, java.awt.BorderLayout.CENTER);
        contract_management.updateUI();
        System.out.println("Sorry Olson");

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));


    }//GEN-LAST:event_generalEvaluationTickActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchreceivedtenders();         // TODO add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

//GEN-FIRST:event_searchButton3ActionPerformed
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        searchawardedsuppliers();

    }
//GEN-LAST:event_searchButton3ActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // TODO add your handling code here:
//                if (jTabbedPane2.getSelectedIndex()==1){
//                      jLabel8.setText(null);
//                    //clear the supplier name
//                    suppliernametxt.setText(null);
//            
//                    //clear the supplier address
//                      jTextPane3.setText(null);
//            
//                     for (int k = 0; k < jTable12.getRowCount(); k++) {
//                            for (int r = 0; r < jTable12.getColumnCount(); r++) {
//                                    jTable12.getModel().setValueAt(null, k, r);
//                                }
//                        }
//            
//            
//                    }
        //
        //        if(jTabbedPane2.getSelectedIndex()==2)
        //        {
        //
        //           jLabel8.setText(null);
        //          //clear the supplier name
        //          suppliernametxt.setText(null);
        //
        //          //clear the supplier address
        //          jTextPane3.setText(null);
        //          //clear the table
        //          for (int k = 0; k < jTable12.getRowCount(); k++) {
        //            for (int r = 0; r < jTable12.getColumnCount(); r++) {
        //                jTable12.getModel().setValueAt(null, k, r);
        //            }
        //        }
        //        }
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable12MouseClicked
        //        // TODO add your handling code here:
        //        if (jTable12.getValueAt(jTable12.getSelectedRow(), 5)==true){
        //
        //            javax.swing.table.DefaultTableModel defTableModel4 = (javax.swing.table.DefaultTableModel) jTable12.getModel();
        //
        //             defTableModel4.removeRow(jTable12.getSelectedRow());
        //
        //
        //
        //        }
    }//GEN-LAST:event_jTable12MouseClicked

    private void exitbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn2ActionPerformed

    private void postbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn1ActionPerformed
        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < jTable12.getRowCount(); i++) {
                if (jTable12.getModel().getValueAt(i, 1) != null) {

                    java.sql.PreparedStatement save = connectDB.prepareStatement("UPDATE st_floated_quotations SET unit_price=?,remarks=? WHERE quotation_no = '" + receivetendertxt.getText().toString() + "' AND supplier = '" + suppliernametxt.getText().toString() + "' AND item_code ilike '%" + jTable12.getValueAt(i, 0).toString() + "%'");

                    save.setDouble(1, Double.parseDouble(jTable12.getValueAt(i, 4).toString()));
                    save.setObject(2, DBObject.getDBObject(jTable12.getValueAt(i, 5).toString(), "-"));
//                         save.setDouble(3,Double.parseDouble(jTable12.getValueAt(i, 6).toString()));
                    save.executeUpdate();

                }
            }

            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Supplier Information Entered Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" + receivetendertxt.getText() + "%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier and su.opened=true and da.unit_price<1;"));

            com.afrisoftech.hospinventory.mtrhreports.TendersReceivedMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.TendersReceivedMtrhPdf();

            policy.TendersReceivedMtrhPdf(connectDB, receivetendertxt.getText(), suppliernametxt.getText());

            suppliernametxt.setText(null);
            //receivetendertxt.setText(null);
            jTextField4.setText(null);
            jTextField5.setText(null);
            jTextField1.setText(null);
            for (int k = 0; k < jTable12.getRowCount(); k++) {
                for (int r = 0; r < jTable12.getColumnCount(); r++) {
                    jTable12.getModel().setValueAt(null, k, r);
                }
            }

        } catch (Exception sq) {
            javax.swing.JOptionPane.showMessageDialog(this, "ensure you fill all entries", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            System.out.println(sq.getMessage());
        }
    }//GEN-LAST:event_postbtn1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {

            if (descriptionTxt.getText().length() < 1) {
                JOptionPane.showMessageDialog(this, "Select A Tender Item First", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                ClearTable.clearthisTable(specsTbl);
            }

            int i = 0, j = 0;
            java.sql.Statement load = connectDB.createStatement();
            java.sql.ResultSet loadn = load.executeQuery(" SELECT DISTINCT capacity_limit FROM st_product_list where supplier ='" + suppliernametxt.getText().toString() + "' and fob='" + receivetendertxt.getText().toString() + "' AND description ='" + descriptionTxt.getText() + "'");
            while (loadn.next()) {
                specsTbl.setValueAt(i + 1, i, 1);
                specsTbl.setValueAt(loadn.getObject(1), i, 1);

                i++;
                //    jTextPane2.setText(loadn.getObject(6).toString());
            }

            java.sql.Statement load1 = connectDB.createStatement();
            java.sql.ResultSet loadn2 = load1.executeQuery(" SELECT days_to_deliver, country_origin from st_floated_quotations  WHERE quotation_no = '" + receivetendertxt.getText() + "' AND supplier = '" + suppliernametxt.getText() + "' AND item_code = '" + itemSelectTbl.getValueAt(itemSelectTbl.getSelectedRow(), 1).toString() + "'");
            int l = 0;
            while (loadn2.next()) {

                daysTxt.setText(loadn2.getObject(1).toString());
                countryTxt.setText(loadn2.getObject(2).toString());

                //    jTextPane2.setText(loadn.getObject(6).toString());
            }
        } //
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void exitbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn4ActionPerformed
        // TODO add your handling code here:
        ClearTable.removeSelectedRows(specsTbl);
    }//GEN-LAST:event_exitbtn4ActionPerformed

    private void postbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn3ActionPerformed
        // TODO add your handling code here:
//Boolean check_update=false;

        if (receivetendertxt.getText() != null || suppliernametxt.getText() != null) {

            try {
                connectDB.setAutoCommit(false);

              //  for (int i = 0; i < specsTbl.getRowCount(); i++) {
                //    if (specsTbl.getModel().getValueAt(i, 1) != null) {if (Boolean.valueOf(specsTbl.getModel().getValueAt(i, 5).toString()) == java.lang.Boolean.TRUE) {
                java.sql.PreparedStatement save = connectDB.prepareStatement("UPDATE st_floated_quotations SET days_to_deliver=?, country_origin=? WHERE quotation_no = '" + receivetendertxt.getText() + "' AND supplier = '" + suppliernametxt.getText() + "' AND item_code = '" + itemSelectTbl.getValueAt(itemSelectTbl.getSelectedRow(), 1).toString() + "'");

                save.setInt(1, Integer.parseInt(daysTxt.getText().toString()));
                save.setObject(2, countryTxt.getText());

                save.executeUpdate();

                    //}
                //}
                //} 
                java.sql.PreparedStatement save1 = connectDB.prepareStatement("INSERT INTO st_product_list (fob, supplier,   item_code, description,credit_period, user_name, financial_year,capacity_limit) VALUES (?, ?, ?, ?, ?, ?, ?, ?);");
                for (int i = 0; i < specsTbl.getRowCount(); i++) {
                    if (specsTbl.getModel().getValueAt(i, 1) != null) {

                        save1.setObject(1, receivetendertxt.getText());
                        save1.setObject(2, suppliernametxt.getText());
                        save1.setObject(3, itemSelectTbl.getValueAt(itemSelectTbl.getSelectedRow(), 1));
                        save1.setObject(4, descriptionTxt.getText());
                        save1.setObject(5, daysTxt.getText());
                        save1.setObject(6, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
                        save1.setObject(7, com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
                        save1.setObject(8, specsTbl.getValueAt(i, 1));
                        save1.executeUpdate();

                    }
                }

                javax.swing.JOptionPane.showMessageDialog(this, "Supplier Products' Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                ClearTable.clearthisTable(specsTbl);
                connectDB.commit();
                connectDB.setAutoCommit(true);
            } catch (SQLException ex) {
                try {
                    connectDB.rollback();
                    ex.printStackTrace();
                } catch (SQLException ex1) {
                    ex1.printStackTrace();
                }

            }

        } else {

            javax.swing.JOptionPane.showMessageDialog(this, "Tender No and Supplier Must Be Selected");

        }

        postbtn3.setLabel("Save Item Details");

    }//GEN-LAST:event_postbtn3ActionPerformed

    private void daysTxtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysTxtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daysTxtfActionPerformed

    private void daysTxtfCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_daysTxtfCaretUpdate
        // TODO add your handling code here:
        if (this.daysTxtf.getCaretPosition() >= 1) {
            System.out.print("Nothing");
            try {
                int d = Integer.parseInt(daysTxtf.getText());

                daysTxtf.requestFocusInWindow();
                Double bid = Double.parseDouble(daysTxtf.getText().toString()) * 100;
                // Object bidv= bid;
                jTextField8.setText(bid.toString());
            } catch (Exception u) {
                JOptionPane.showMessageDialog(this, "Incorrect Data Type! Numbers Only!", "Wrong Value Entered", JOptionPane.ERROR_MESSAGE);
                daysTxtf.requestFocusInWindow();
                daysTxtf.setText(null);
                jTextField8.setText(null);
                daysTxtf.requestFocusInWindow();
                return;

            }

        } else {

            daysTxtf.requestFocusInWindow();
            daysTxtf.setText(null);
            jTextField8.setText(null);
            //checktype
            //                 tenderrecordstxt3.addKeyListener(new KeyAdapter() {
            //
            //                  @Override
            //                  public void keyPressed(KeyEvent e)
            //                  {
            //                  int key = e.getKeyCode();
            //                   /* Restrict input to only integers */
            //                if (key < 96 && key > 105)
            //                {
            //                   tenderrecordstxt3.setText(null);
            //                  }
            //                else{
            //                     Double bid = Double.parseDouble(daysTxtf.getText().toString())*100;
            //                     Object bidv= bid;
            //                    jTextField8.setText(bid.toString());
            //
            //
            //                     }
            //                  }
            //
            //
            //
            //
            //                 });

            System.out.println("manze jo");

        }

    }//GEN-LAST:event_daysTxtfCaretUpdate

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:

        uploadfile();
        int returnVal = jFileChooser1.showOpenDialog(this);
        System.out.println("sasa hii" + returnVal);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File doc2 = jFileChooser1.getSelectedFile();

            String pic2 = doc2.getName();
            String picp2 = doc2.getAbsolutePath();

            jTextField12.setText(pic2);

            System.out.println("umeupload" + pic2.toString());

            jTextField13.setText(pic2);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:

        uploadfile();
        int returnVal = jFileChooser1.showOpenDialog(this);
        System.out.println("sasa hii" + returnVal);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File doc = jFileChooser1.getSelectedFile();

            String pic = doc.getName();
            String picp = doc.getAbsolutePath();

            jTextField12.setText(picp.toString());

            System.out.println("umeupload" + pic.toString());

            //                      File taxcert =null;
            //
            //                    try{
            //                      taxcert = new File(pic);
            //
            //                      FileInputStream fis;
            //
            //                      fis = new FileInputStream(pic);
            //
            //                     System.out.println("eh jo niko mbele");
            //                    }
            //                    catch(Exception up){
            //                        JOptionPane.showMessageDialog(null, up.getMessage());
            //
            //                    }
        }

        

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        if (receivetendertxt.getText().isEmpty() || suppliernametxt.getText().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Both tender number and supplier must be selected", "Caution Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                java.sql.Statement user = connectDB.createStatement();
                java.sql.ResultSet getuser = user.executeQuery("select current_user");
                while (getuser.next()) {
                    Object usr = getuser.getObject(1).toString();

                    com.afrisoftech.hospinventory.deletepdfs a = new com.afrisoftech.hospinventory.deletepdfs(new javax.swing.JFrame(), true, usr, receivetendertxt.getText().toString(), suppliernametxt.getText().toString(), connectDB, null);
                    java.awt.Point p = daysTxtf.getLocationOnScreen();
                    a.setLocation(p);
                    a.setVisible(true);
                    a.setModal(true);
                }

            } catch (Exception ex1) {

                ex1.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void savedocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savedocsActionPerformed
        try {

            java.sql.Statement time = connectDB.createStatement();
            java.sql.ResultSet gettime = time.executeQuery("select to_char(current_timestamp, 'YYYY-MM-DD HH24:MI')");

            java.sql.Statement user = connectDB.createStatement();

            File doc = jFileChooser1.getSelectedFile();
            String picp = doc.getAbsolutePath();

            File taxcert = new File(picp);

            FileInputStream fis;
            java.io.StringReader bis;

            fis = new FileInputStream(taxcert);

            System.out.println("eh jo niko mbele");

            //  PreparedStatement ps = conn.prepareStatement("INSERT INTO images VALUES (?, ?)");
            java.sql.PreparedStatement ps = connectDB.prepareStatement("INSERT INTO st_floated_quotation_docs(bid_bond, bid_ref_no, bank_name, business_questionnaire, tax_cert, entered_by, supplier_name, bid_amount, documentation_info, bidding_info, tender_no) VALUES (?,?,?,?,?,?,?,?,?,?,?);");
            //pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(tenderdatetxt.getText())))
            // ps.setString(1, file.getName());
            if (daysTxtf.getText().toString() != null) {
                ps.setObject(1, daysTxtf.getText().toString());
            } else {
                ps.setObject(1, "n/a");
            }

            ps.setObject(2, jTextField14.getText().toString());

            ps.setObject(3, jComboBox1.getSelectedItem().toString());

            if (bqavailedckk.isSelected()) {

                ps.setObject(4, "business questionnaire duly filled");
            } else {
                ps.setObject(4, "n/a, check documentation ");

            }

            ps.setBinaryStream(5, fis, (int) taxcert.length());

            java.sql.ResultSet getuser = user.executeQuery("select current_user");
            while (getuser.next()) {
                Object usr = getuser.getObject(1).toString();
                ps.setObject(6, usr);
            }
            ps.setObject(7, suppliernametxt.getText().toString());

            if (jTextField8.getText().toString() != null) {
                ps.setObject(8, jTextField8.getText().toString());
            } else {
                ps.setObject(8, "n/a");
            }

            if (jTextArea3.getText().toString() != null) {
                ps.setObject(9, jTextArea3.getText().toString());
            } else {
                ps.setObject(9, "n/a");
            }

            if (jTextArea4.getText().toString() != null) {
                ps.setObject(10, jTextArea4.getText().toString());
            } else {
                ps.setObject(10, "n/a");
            }

            ps.setObject(11, receivetendertxt.getText().toString());

            //  ps.setBinaryStream(2, fis, (int)file.length());
            // ps.setObject(3, tme);
            ps.executeUpdate();
            System.out.println("eh manze niko mbele");
            javax.swing.JOptionPane.showMessageDialog(this, "   Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            //jLabel55.setText(picp);
            //ps.close();
            fis.close();
            //toa report
            connectDB.commit();
            String supplier = suppliernametxt.getText().toString();

            com.afrisoftech.hospinventory.mtrhreports.taxcertPDF policy = new com.afrisoftech.hospinventory.mtrhreports.taxcertPDF();
            policy.taxcert(connectDB, supplier);

            daysTxtf.setText(null);
            suppliernametxt.setText(null);
            jTextField8.setText(null);
            jTextField14.setText(null);
            jTextField12.setText(null);
            jTextField13.setText(null);
            jTextArea4.setText(null);
            jTextArea3.setText(null);
        } catch (Exception ex) {
            try {
                connectDB.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(SSOTendering.class.getName()).log(Level.SEVERE, null, ex1);
            }
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "   Please check your entries ", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }

        // TODO add your handling code here:

    }//GEN-LAST:event_savedocsActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
  // if(Desktop.isDesktopSupported()){

        try {

         //0722642466
            if (receivetendertxt.getText().length() > 0 || suppliernametxt.getText().length() > 0) {

                java.io.InputStream fetch = null;
                java.sql.PreparedStatement doc = connectDB.prepareStatement("select tax_cert from st_floated_quotation_docs where supplier_name = '" + suppliernametxt.getText().toString() + "' and tender_no ='" + receivetendertxt.getText().toString() + "' ");
                ResultSet b = doc.executeQuery();

                while (b.next()) {
                    //byte[] c = b.getBytes(1);
                    String a = b.getClob(1).toString();
                    System.out.println(fetch.toString());

                }
                File taxcert = new File("java.pdf");
                java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();

                byte[] cbuf = new byte[100000];

                try {
                    for (int readNum; (readNum = fetch.read(cbuf)) != -1;) {
                        bos.write(cbuf, 0, readNum);
                        System.out.println("hii ni" + readNum + "bytes");
                    }
                    System.out.println("Byte array nayo  =" + bos);
                } catch (IOException ex) {
                    ex.printStackTrace();
                }

                byte[] bytes = bos.toByteArray();

                try {
                    FileWriter someFile = new FileWriter("/home/saleem/Desktop/taxcert.pdf");//File taxcert = new File("/home/saleem/Desktop/taxcert.pdf");
                    java.io.BufferedWriter fos = new java.io.BufferedWriter(someFile);
                    String content = "my pdf\n i have tried";
                    // fos.write(content.getBytes());
                    fos.flush();

                    Desktop.getDesktop().open(taxcert);
                    // com.afrisoftech.lib.DesktopApi.open(taxcert);
                    fos.close();

             // Desktop.getDesktop().open(taxcert);
                } catch (Exception e) {
                }

            } else {

                javax.swing.JOptionPane.showMessageDialog(this, "Supplier and Tender No Must Be Selected");

            }

        } //     catch(IOException ex){
        //     ex.printStackTrace();
        //     
        //     
        //     }
        catch (SQLException ex) {
            ex.printStackTrace();
        }

//   else{
//        
//       
//       
//       String s = System.getProperty("os.name").toLowerCase(); 
//        javax.swing.JOptionPane.showMessageDialog(this, s+ ": Not Supported In This Platform Yet");
//         
//     
//   }

    }//GEN-LAST:event_jButton16ActionPerformed

    private static void logOut(String msg) {
        System.out.println(msg);
    }

    private static String[] prepareCommand(String command, String args, String file) {

        List<String> parts = new ArrayList<String>();
        parts.add(command);

        if (args != null) {
            for (String s : args.split(" ")) {
                s = String.format(s, file); // put in the filename thing

                parts.add(s.trim());
            }
        }

        return parts.toArray(new String[parts.size()]);
    }

    //determine the os
//    public static DesktopApi.EnumOS getOs() {
//
//        String s = System.getProperty("os.name").toLowerCase();
//        
//        if (s.contains("win")) {
//            return DesktopApi.EnumOS.windows;
//        }
//
//        if (s.contains("mac")) {
//            return DesktopApi.EnumOS.macos;
//        }
//
//        if (s.contains("solaris")) {
//            return DesktopApi.EnumOS.solaris;
//        }
//
//        if (s.contains("sunos")) {
//            return DesktopApi.EnumOS.solaris;
//        }
//
//        if (s.contains("linux")) {
//            return DesktopApi.EnumOS.linux;
//        }
//
//        if (s.contains("unix")) {
//            return DesktopApi.EnumOS.linux;
//        } else {
//            return DesktopApi.EnumOS.unknown;
//        }
//    }
//    
//    
//    
//    //get the opsys
//     public static enum EnumOS {
//        linux, macos, solaris, unknown, windows;
//
//        public boolean isLinux() {
//
//            return this == linux || this == solaris;
//        }
//
//
//        public boolean isMac() {
//
//            return this == macos;
//        }
//
//
//        public boolean isWindows() {
//
//            return this == windows;
//        }
//     }
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        //  int i=0;

        for (int i = 0; i < biddersTbl.getRowCount(); i++) {
            //Object b = jTable2.getModel().getValueAt(i, 2).toString();

           // System.out.println("mmmmm"+b);
            if (biddersTbl.getModel().getValueAt(i, 2) == java.lang.Boolean.TRUE) {
                //  SSOQuotation 

                try {
//st_tender_suppliers --tender --supplier_name
                    java.sql.PreparedStatement flag = connectDB.prepareStatement("UPDATE st_tender_suppliers SET opened=true , opened_by='" + usernameopentendertxt.getText() + "' "
                            + "WHERE tender = '" + opentendertxt.getText().toString() + "' and supplier_name ilike '" + biddersTbl.getModel().getValueAt(i, 1) + "'  ;");    //AND supplier_name ilike '"+jTable2.getModel().getValueAt(i, 1).toString()+"'

                    flag.executeUpdate();

                } catch (SQLException ex) {
                    ex.printStackTrace();
                }

            }
        }

        javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully for " + opentendertxt.getText(), "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
//         for (int k = 0; k < biddersTbl.getRowCount(); k++ ) {
//                for (int r = 0; r < biddersTbl.getColumnCount(); r++ ) {
//                    biddersTbl.getModel().setValueAt(null,k,r);
//                }}
        ClearTable.clearthisTable(biddersTbl);

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        biddersTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct su.code code , fu.supplier supplier, false RETURNED  FROM st_floated_quotations fu, \n"
                + "st_suppliers su where  quotation_no ilike '" + opentendertxt.getText() + "' and fu.supplier=su.supplier_name\n"
                + "and ordered=false"));

        jLabel2.setVisible(true);
        jLabel2.setText("TOTAL NUMBER OF APPLICANTS: " + biddersTbl.getRowCount());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        // TODO add your handling code here:
        opentender();
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void biddersTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_biddersTblMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_biddersTblMouseClicked

    private void searchButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton8ActionPerformed
        searchsuppliers();
    }//GEN-LAST:event_searchButton8ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchtenders();

    }//GEN-LAST:event_searchButtonActionPerformed

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
        //this.dispose();        // Add your handling code here:
    }//GEN-LAST:event_exitbtn1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        for (int k = 0; k < dispatchTbl.getRowCount(); k++) {
            for (int r = 0; r < dispatchTbl.getColumnCount(); r++) {
                dispatchTbl.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void resetbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn1ActionPerformed
        int rows2Delete = dispatchTbl.getSelectedRowCount();

        int[] selectedRows = dispatchTbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) dispatchTbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) dispatchTbl.getModel();

                defTableModel.removeRow(dispatchTbl.getSelectedRow());
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_resetbtn1ActionPerformed

    private void postbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn2ActionPerformed
        if (suppliertxt.getText().equalsIgnoreCase("")) {
            javax.swing.JOptionPane.showMessageDialog(this, "You Need to select a supplier", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                connectDB.setAutoCommit(false);

                for (int i = 0; i < dispatchTbl.getRowCount(); i++) {
                    if (dispatchTbl.getModel().getValueAt(i, 0) != null) {

                        // lineNumber = lineNumber + 1;
                        System.out.println(counter + "Occurences of the supplier");

                        //   if(counter>0){
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_floated_quotations("
                                + " buyer_details, quotation_date, openning_date, item_code, item_description, "
                                + " units, quantity, item_number, quotation_no,supplier)"
                                + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                        pstmt.setObject(1, jTextPane1.getText());
                        pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(tenderdatetxt.getText())));
                        pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(openingdatetxt.getText())));
                        pstmt.setObject(4, dispatchTbl.getValueAt(i, 1).toString());
                        pstmt.setObject(5, dispatchTbl.getValueAt(i, 2).toString());
                        pstmt.setObject(6, dispatchTbl.getValueAt(i, 3).toString());
                        pstmt.setDouble(7, java.lang.Double.valueOf(dispatchTbl.getValueAt(i, 4).toString()));
                        pstmt.setInt(8, java.lang.Integer.valueOf(dispatchTbl.getValueAt(i, 0).toString()));
                        pstmt.setObject(9, tendernotxt.getText());
                        pstmt.setObject(10, suppliertxt.getText());

                        pstmt.executeUpdate();

                    //////////////////getting the tender no
                        // }
                    }

                    java.sql.PreparedStatement done = connectDB.prepareStatement("UPDATE st_td_collection SET collected=true WHERE supplier='" + suppliertxt.getText().toString() + "' and tender_no ilike '%" + tendernotxt.getText().toString() + "'");
                    done.executeUpdate();

                }
                java.sql.PreparedStatement suppr = connectDB.prepareStatement("INSERT INTO st_tender_suppliers (tender, supplier_name) VALUES (?,?)");
                suppr.setObject(1, tendernotxt.getText());
                suppr.setObject(2, suppliertxt.getText());
                    //                     suppr.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(datePicker4.getDate().toString())));
                //datePicker4
                suppr.executeUpdate();

                try {
                    String to_Address = null;
                    java.sql.Statement stsmtss = connectDB.createStatement();
                    java.sql.ResultSet ress = stsmtss.executeQuery("SELECT distinct email_address from st_suppliers where supplier_name='" + suppliertxt.getText() + "' group by code,supplier_name");

                    while (ress.next()) {
                        if (ress.getString(1).length() > 0 && !ress.getString(1).equals("-") && !ress.getString(1).equals("''")) {
                            to_Address = ress.getString(1);

//&&!res.getString(1).equals("-")
                            System.out.println("MMMMMMMMM hhh" + ress.getString(1));
                            javax.swing.JOptionPane.showMessageDialog(this, "Dispatch Done Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                            com.afrisoftech.hospinventory.mtrhreports.TendersSentMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.TendersSentMtrhPdf();

                            policy.TendersSentMtrhPdf(connectDB, tendernotxt.getText(), suppliertxt.getText());
                            connectDB.setAutoCommit(false);
                            connectDB.commit();
                            connectDB.setAutoCommit(true);

                        } else {
                            to_Address = null;

                            JOptionPane.showMessageDialog(null, "THE SUPPLIER NEEDS TO HAVE THE EMAIL ADDRESS SETUP!", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                            connectDB.setAutoCommit(false);
                            connectDB.rollback();
                            connectDB.setAutoCommit(true);
                        }
                        System.out.println("THE TO ADDRESS IS MMM " + to_Address);

                    }

                } catch (Exception esd) {
                    esd.printStackTrace();
                    esd.getMessage();

                }

//----------------------        
           // javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
//            com.afrisoftech.hospinventory.mtrhreports.TendersSentMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.TendersSentMtrhPdf();
//
//            policy.TendersSentMtrhPdf(connectDB, tendernotxt.getText(), suppliertxt.getText());
            } catch (java.sql.SQLException sq) {
                try {
                    connectDB.rollback();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
        }
    }//GEN-LAST:event_postbtn2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
        requistntxt.setText(null);
        deptraisingtxt.setText(null);
        // jTextPane1.setText(null);
        //          jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        //
        //jComboBox4.addActionListener(new java.awt.event.ActionListener() {
        //    public void actionPerformed(java.awt.event.ActionEvent evt) {
        //        jComboBox4ActionPerformed(evt);
        //    }
        //});
        //aienotxt.setText(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        String tenderNo = null;

        //generating tenderno
        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }

        System.out.println("yy");

        int lineNumber = 0;
        try {
            connectDB.setAutoCommit(false);

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT '" + FinancialYear.getCompanyInitials(connectDB).toUpperCase() + "' || '/T/'  || NEXTVAL('tender_no_seq')||'/" + FinancialYear.getActiveFinancialYear(connectDB) + "'");
            while (rsetf.next()) {
                tenderNo = rsetf.getString(1);
            }

            System.out.println(tenderNo);
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i, 0) != null) {
                    lineNumber = lineNumber + 1;
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_item_to_quote(\n"
                            + "            buyer_details, quotation_date, openning_date, item_code, item_description, \n"
                            + "            units, quantity, time_saved, item_number, item_serial, tender_no, \n"
                            + "            vote_class, vote, head, subhead, sub_item, sub_item_desc, donor_code, \n"
                            + "            donor_item, aie_no, department, irq_no)\n"
                            + "    VALUES (?, ?, ?, ?, ?, \n"
                            + "            ?, ?, ?, ?, ?, ?, \n"
                            + "            ?, ?, ?, ?, ?, ?, ?, \n"
                            + "            ?, ?, ?, ?)");

                    pstmt.setObject(1, jTextPane1.getText());
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(openingEnterDate.getDate()));
                    pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(openingEnterDate.getDate()));
                    pstmt.setObject(4, jTable1.getValueAt(i, 0).toString());
                    pstmt.setObject(5, jTable1.getValueAt(i, 1).toString().toUpperCase());
                    pstmt.setObject(6, jTable1.getValueAt(i, 2).toString());
                    pstmt.setDouble(7, java.lang.Double.valueOf(jTable1.getValueAt(i, 3).toString()));
                    pstmt.setTimestamp(8, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                    pstmt.setObject(9, lineNumber);
                    pstmt.setObject(10, 2);
                    pstmt.setObject(11, tenderNocmbx.getSelectedItem().toString().toUpperCase());
                    pstmt.setObject(12, null);
                    pstmt.setObject(13, null);
                    pstmt.setObject(14, null);
                    pstmt.setObject(15, null);
                    pstmt.setObject(16, null);
                    pstmt.setObject(17, null);
                    pstmt.setObject(18, null);
                    pstmt.setObject(19, null);
                    pstmt.setObject(20, null);
                    pstmt.setObject(21, null);
                    pstmt.setObject(22, requistntxt.getText() + "-" + tenderNocmbx.getSelectedItem().toString().toUpperCase());
                    //System.out.println(dateSpinner.getValue().toString());

                    pstmt.executeUpdate();

                }
            }
                // com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf();
// //////updating the progress tracker
//        java.sql.PreparedStatement pr_progress= connectDB.prepareStatement("UPDATE st_pr_progress SET approved_by_tc='"+tenderNo+"' where   purchase_req ilike '" + requistntxt.getText()+"%' ");
//            
//             pr_progress.executeUpdate();
            // policy.QuotationsMtrhPdf(connectDB, tenderNo);

            ///check if the prs in st_pr_progress
            PreparedStatement pst = connectDB.prepareStatement("UPDATE st_tenders SET  opening_date=? WHERE ref_no= '" + tenderNocmbx.getSelectedItem() + "'");

            //pst.setObject(1, tenderItemstbl.getValueAt(i, 0));
            pst.setDate(1, SQLDateFormat.getSQLDate(openingEnterDate.getDate()));

            pst.executeUpdate();

            java.sql.Statement stmtfg = connectDB.createStatement();
            java.sql.ResultSet rsetfg = stmtfg.executeQuery("select count(*) from st_pr_progress where purchase_req ilike '" + requistntxt.getText() + "%' and  approved_by_tc='-' ");
            while (rsetfg.next()) {

                num_of_prs = rsetfg.getInt(1);
            }
            if (num_of_prs == 1) {

                java.sql.PreparedStatement pr_progress = connectDB.prepareStatement("UPDATE st_pr_progress SET approved_by_tc='" + tenderNo + "' where   purchase_req ilike '" + requistntxt.getText() + "%' ");

                pr_progress.executeUpdate();

            } else if (num_of_prs > 1 || num_of_prs == 0) {
                java.sql.Statement stmtfh = connectDB.createStatement();
                java.sql.ResultSet rsetfh = stmtfh.executeQuery("select distinct purchase_req, dept_approval, forward_to_cso, determine_mode_of_pur, assign_buyer from st_pr_progress where purchase_req ilike '" + requistntxt.getText() + "%' and  approved_by_tc!='-' ");
                while (rsetfh.next()) {
                    for (int j = 0; j < 1; j++) {

                        //num_of_prs=rsetfg.getInt(1);
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_pr_progress (purchase_req, dept_approval, forward_to_cso, determine_mode_of_pur, assign_buyer,approved_by_tc)  VALUES (?, ?, ?,?,?,?)");
                        pstmt.setObject(1, rsetfh.getString(1));
                        pstmt.setObject(2, rsetfh.getString(2));
                        pstmt.setObject(3, rsetfh.getString(3));
                        pstmt.setObject(4, rsetfh.getString(4));
                        pstmt.setObject(5, rsetfh.getString(5));
                        pstmt.setObject(6, tenderNo);
                        pstmt.executeUpdate();

                    }
                }

            }
           // }

//            java.sql.Statement flag=connectDB.createStatement();
//            java.sql.ResultSet le =flag.executeQuery("UPDATE st_assign_buyers SET  pr_status=true WHERE requisition_no ='"+requistntxt.getText().toString()+"';");
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully for " + tenderNocmbx.getSelectedItem().toString().toUpperCase(), "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            tenderNocmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT ref_no FROM st_tenders WHERE opening_date IS NULL AND ref_no ILIKE '%" + com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB) + "'"));

            for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }
            requistntxt.setText(null);
            deptraisingtxt.setText(null);
        } catch (Exception l) {
            l.printStackTrace();
            System.out.println(l.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {

            //this.cmbox11MouseClicked();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        // searchButton13Clicked();         // TODO add your handling code here:

        searchquotation();
    }//GEN-LAST:event_searchButton4ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if (jComboBox2.getSelectedIndex() == 1) {
                   //select supplier_name from st_suppliers where code='"+a.toString()+"'
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 asc"));
            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 3 asc"));
            jTable3.setShowHorizontalLines(false);
            jScrollPane5.setViewportView(jTable3);
            // jLabel2.setText(null);
        } else if (jComboBox2.getSelectedIndex() == 2) {
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 desc"));
            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 3 desc"));
            jTable3.setShowHorizontalLines(false);
            jScrollPane5.setViewportView(jTable3);
            // jLabel2.setText(null);
        } else {

            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total   FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 1"));
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, a.quantity*a.unit_price Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no='"+jTextField39.getText().toString()+"' and a.supplier= b.supplier   and b.approved = true group by a.supplier,a.quantity*a.unit_price "));
            jTable3.setShowHorizontalLines(false);
            jScrollPane5.setViewportView(jTable3);

        }

    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = jTextField3.getLocationOnScreen();
        searchtenderc.setSize(400, 200);
        searchtenderc.setLocation(p);
        searchtenderc.setVisible(true);

    }//GEN-LAST:event_jButton22ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = jTextField6.getLocationOnScreen();
        searchsupplierc.setSize(400, 200);
        searchsupplierc.setLocation(p);
        searchsupplierc.setVisible(true);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            jButton24.setEnabled(true);
        } else {
            jButton24.setEnabled(false);
        }

    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void tenderrecordstxt4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt4CaretUpdate
        // TODO add your handling code here:
        if (tenderrecordstxt4.getCaretPosition() == 0) {

        } else {
            tenderrecordstbl4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT quotation_no FROM st_orders WHERE quotation_no ILIKE '" + tenderrecordstxt4.getText().toString() + "%' and ordered=false  ORDER BY 1"));
            tenderrecordstbl4.setShowHorizontalLines(true);
            tenderrecordsspnl4.setViewportView(tenderrecordstbl4);

        }
    }//GEN-LAST:event_tenderrecordstxt4CaretUpdate

    private void tenderrecordstxt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt4ActionPerformed

    private void tenderrecordstbl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl4MouseClicked
        // TODO add your handling code here:
        jLabel55.setText(null);
        jTextField3.setText(tenderrecordstbl4.getModel().getValueAt(tenderrecordstbl4.getSelectedRow(), 0).toString());
        searchsupplierstbl5.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct supplier,  sum(quantity*unit_price)::integer from st_orders where quotation_no = '" + jTextField3.getText().toString() + "'  AND ordered = false group by 1  "));
        this.searchtenderc.dispose();

    }//GEN-LAST:event_tenderrecordstbl4MouseClicked

    private void closebtn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn10ActionPerformed
        // TODO add your handling code here:
        this.searchtenderc.dispose();
    }//GEN-LAST:event_closebtn10ActionPerformed

    private void searchsuppliertxt5CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt5CaretUpdate
        // TODO add your handling code here:
        searchsupplierstbl5.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct supplier,  sum(quantity*unit_price)::integer from st_orders where quotation_no = '" + jTextField3.getText().toString() + "' AND supplier ilike '" + jTextField6.getText() + "%' AND ordered = false group by 1"));
    }//GEN-LAST:event_searchsuppliertxt5CaretUpdate

    private void searchsuppliertxt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt5ActionPerformed

    private void searchsupplierstbl5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl5MouseClicked
        // TODO add your handling code here:
        jTextField6.setText(searchsupplierstbl5.getModel().getValueAt(searchsupplierstbl5.getSelectedRow(), 0).toString());
        jTable5.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select item ITEM_DESC,quantity,units,item_strength,''DELIVERY_PHASES,''FIRST_DELIVERY_DATE from st_orders where quotation_no= '" + jTextField3.getText() + "' and supplier='" + jTextField6.getText() + "' "));

        jTextField7.setText(searchsupplierstbl5.getModel().getValueAt(searchsupplierstbl5.getSelectedRow(), 1).toString());

        if (jTextField7.getText().length() > 0) {

            Double a = Double.parseDouble(jTextField7.getText().toString());
            try {
                java.sql.PreparedStatement s = connectDB.prepareStatement("SELECT replace(cash_words('" + jTextField7.getText() + "'::money),'dollars','Kenya Shillings')");
                ResultSet t = s.executeQuery();
                while (t.next()) {
                    jLabel55.setVisible(true);
                    jLabel55.setText(t.getObject(1).toString());

                }

            } catch (Exception g) {
                g.printStackTrace();
            }

            Double b = (a * 0.05);

            try {
                java.sql.PreparedStatement f = connectDB.prepareStatement("SELECT replace(cash_words('" + b + "'::money),'dollars','Kenya Shillings')");
                ResultSet t = f.executeQuery();
                while (t.next()) {
                    jLabel57.setVisible(true);
                    jLabel57.setText(t.getObject(1).toString());

                }

            } catch (Exception d) {
                d.printStackTrace();
            }

       // com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(b);
            jTextField9.setText("Kshs  " + com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(b).toString());
        } else {
            jTextField9.setText("");
        }

        this.searchsupplierc.dispose();
        //
    }//GEN-LAST:event_searchsupplierstbl5MouseClicked

    private void closebtn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn11ActionPerformed
        // TODO add your handling code here:
        this.searchsupplierc.dispose();
    }//GEN-LAST:event_closebtn11ActionPerformed

    private void searchtendercFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchtendercFocusLost
        // TODO add your handling code here:
        this.searchtenderc.dispose();
    }//GEN-LAST:event_searchtendercFocusLost

    private void searchsuppliercFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchsuppliercFocusLost
        // TODO add your handling code here:
        this.searchsupplierc.dispose();
    }//GEN-LAST:event_searchsuppliercFocusLost

    private void jTextField9CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField9CaretUpdate
//        // TODO add your handling code here:
//        if(jTextField9.getCaretPosition()==0){
//            
//           jLabel57.setVisible(false); 
//        }
//        else{
//            try{
//        java.sql.PreparedStatement f = connectDB.prepareStatement("SELECT replace(cash_words('"+jTextField9.getText()+"'::money),'dollars','Kenya Shillings')");
//        ResultSet t = f.executeQuery();
//        while (t.next()){
//            jLabel57.setVisible(true);
//            jLabel57.setText(t.getObject(1).toString());
//        
//        }
//        
//        }
//        catch(Exception d){
//        d.printStackTrace();
//        }
//        
//        
//        
//        }
    }//GEN-LAST:event_jTextField9CaretUpdate

    private void jTextField9FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField9FocusLost
//        // TODO add your handling code here:
//        if(jTextField9.getText().length()==0){
//            Double b= Double.parseDouble(jTextField9.getText().toString());
//        jTextField9.setText("Kshs  "+com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(b).toString());
//        
//        }
    }//GEN-LAST:event_jTextField9FocusLost

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        try {
            // TODO add your handling code here:
            connectDB.setAutoCommit(false);

            java.sql.PreparedStatement save = connectDB.prepareStatement("INSERT INTO st_contract_mgt(tender_no, supplier, item_desc, quantity, units, delivery_phases)"
                    + " VALUES (?, ?, ?, ?, ?, ?);");

            for (int i = 0; i < jTable5.getModel().getRowCount(); i++) {
                if (jTable5.getModel().getValueAt(i, 0) != null) {
                    save.setObject(1, jTextField3.getText().toString());
                    save.setObject(2, jTextField6.getText().toString());
                    save.setObject(3, jTable5.getModel().getValueAt(i, 0));
                    save.setObject(4, jTable5.getModel().getValueAt(i, 1));
                    save.setObject(5, jTable5.getModel().getValueAt(i, 2));
                    save.setObject(6, jTable5.getModel().getValueAt(i, 3));
            //save.setObject(7, "");

                    save.executeUpdate();
                }
            }

            java.sql.PreparedStatement save2 = connectDB.prepareStatement("UPDATE st_floated_quotation_docs SET performance_bond= '" + jTextField9.getText().toString() + "' WHERE supplier_name='" + jTextField6.getText().toString() + "' and tender_no='" + jTextField3.getText().toString() + "'");

            save2.executeUpdate();

            connectDB.commit();
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Successful");

        } catch (SQLException ex) {
            ex.printStackTrace();
            try {
                connectDB.rollback();
            } catch (SQLException ex1) {
                ex1.printStackTrace();
            }
        }


    }//GEN-LAST:event_jButton24ActionPerformed

    private void TechnicalEvalutionMainPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TechnicalEvalutionMainPaneMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TechnicalEvalutionMainPaneMouseClicked

    private void specsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_specsTblMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_specsTblMouseClicked

    private void receivetendertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivetendertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receivetendertxtActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
//      if(jComboBox2.getSelectedIndex()==1)
//               {
//                   //select supplier_name from st_suppliers where code='"+a.toString()+"'
//                  //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 asc"));
//                   jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, a.quantity*a.unit_price Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no='"+jTextField39.getText().toString()+"' and a.supplier= b.supplier   and b.approved = true group by a.supplier,a.quantity*a.unit_price order by 3 asc"));
//                   jTable3.setShowHorizontalLines(false);                
//                  jScrollPane8.setViewportView(jTable3);
//                  jLabel2.setText(null);
//               }
//               else if(jComboBox2.getSelectedIndex()==2){
//                  //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 desc"));
//                   jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, a.quantity*a.unit_price Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no='"+jTextField39.getText().toString()+"' and a.supplier= b.supplier   and b.approved = true group by a.supplier,a.quantity*a.unit_price order by 3 desc"));
//                   jTable3.setShowHorizontalLines(false);                
//                  jScrollPane8.setViewportView(jTable3);    
//                  jLabel2.setText(null);
//               }
//               else{
//               
//                  jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false award FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ='"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true"));
//                   //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, a.quantity*a.unit_price Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no='"+jTextField39.getText().toString()+"' and a.supplier= b.supplier   and b.approved = true group by a.supplier,a.quantity*a.unit_price "));
//                   jTable3.setShowHorizontalLines(false);                
//                  jScrollPane8.setViewportView(jTable3);
//               
//                  
//               }

        if (jComboBox2.getSelectedIndex() == 1) {
                   //select supplier_name from st_suppliers where code='"+a.toString()+"'
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 asc"));
            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 3 asc"));
            jTable3.setShowHorizontalLines(false);
            jScrollPane5.setViewportView(jTable3);
            // jLabel2.setText(null);
        } else if (jComboBox2.getSelectedIndex() == 2) {
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 desc"));
            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 3 desc"));
            jTable3.setShowHorizontalLines(false);
            jScrollPane5.setViewportView(jTable3);
            // jLabel2.setText(null);
        } else {

            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total   FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 1"));
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, a.quantity*a.unit_price Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no='"+jTextField39.getText().toString()+"' and a.supplier= b.supplier   and b.approved = true group by a.supplier,a.quantity*a.unit_price "));
            jTable3.setShowHorizontalLines(false);
            jScrollPane5.setViewportView(jTable3);

        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:

        String currentUser = null;
        java.lang.String access_code = null, units = null;
        String dept = null, req_no = null;
        try {

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.PreparedStatement pstmtsd = connectDB.prepareStatement("select authorisation from secure_levels_access where  login_username='" + currentUser + "' and menu_access='Tendering' and authorisation='" + md5(jPasswordField5.getText()) + "'");

            java.sql.ResultSet rsetsd = pstmtsd.executeQuery();
            while (rsetsd.next()) {
                access_code = rsetsd.getObject(1).toString();
            }

            if (md5(jPasswordField5.getText()).equals(access_code)) {
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker6.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker6.getDate().before(periodFrom) || datePicker6.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (jTable13.isEditing()) {
                        jTable13.getCellEditor().stopCellEditing();
                    }

                    String oder_no = null;

                    double quantity = 0.00;

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);

                    System.out.println(datenowSql.toString());
//registering savepointr
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    //begin insert-orderno generation
                    try {
                        String order_no1 = null;
                        java.sql.Date current_date = null;
                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select date_part('year',now())|| lpad('" + order_no1 + "',6,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            oder_no = rs1.getObject(1).toString();
                        }

                        System.out.println("" + oder_no + "");
                        //insert into db

                        java.lang.Boolean checker = true;
                        String unallocateditems = " ";

                        if (!jComboBox11.getSelectedItem().toString().equals("-")) {

                            for (int h = 0; h < jTable13.getRowCount(); h++) {
                                if (jTable13.getValueAt(h, 2) != null) {

                                    /////generating an LPO NUMBER
                                    java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE st_orders SET  order_no ='" + oder_no + "',criteria='" + jComboBox12.getSelectedItem().toString() + "',doc_type='" + jComboBox11.getSelectedItem() + "',gross_value='" + java.lang.Double.valueOf(jTable13.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(h, 4).toString()) + "',net_value='" + java.lang.Double.valueOf(jTable13.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(h, 4).toString()) + "',date_due='" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker6.getDate()) + "' WHERE quotation_no='" + tenderNotxt.getText() + "' and code='" + jTable13.getValueAt(h, 1).toString() + "' and item='" + jTable13.getValueAt(h, 2).toString() + "' and supplier='" + jTextField2.getText() + "'");
                                    pstmt8121.executeUpdate();

                                    checker = true;
                                }
                            }

                            if (checker == false) {
                                javax.swing.JOptionPane.showMessageDialog(this, "Double Check your Entries  ", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                                passwd.dispose();
                            } else {

                                TenderTrack.TrackTable(connectDB, "raise_lpo_lso", oder_no + "-" + com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase() + "(" + com.afrisoftech.lib.UserName.getServerDate(connectDB) + ")", tenderNotxt.getText());
                                connectDB.commit();
                                connectDB.setAutoCommit(true);

                                javax.swing.JOptionPane.showMessageDialog(this, "You have generated an " + jComboBox11.getSelectedItem() + " (" + oder_no + " ) successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                passwd.dispose();
                                jTextField2.setText(null);
                                for (int k = 0; k < jTable13.getRowCount(); k++) {
                                    for (int r = 0; r < jTable13.getColumnCount(); r++) {
                                        jTable13.getModel().setValueAt(null, k, r);
                                    }
                                }

                                this.postbtn3.setEnabled(false);

                            }
                        } else {
                            javax.swing.JOptionPane.showMessageDialog(this, "You need to Select the Document Type  ", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                            passwd.dispose();
                        }
             // System.out.println("The value for checker is "+checker);

                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

//                        jLabel7.setForeground(java.awt.Color.red);
                        try {
                            connectDB.rollback();
                        } catch (java.sql.SQLException sql) {
                            sql.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());

                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "You dont have the permission to Raise an LPO/LSO Number", "WARNING", JOptionPane.ERROR_MESSAGE);
                passwd.dispose();

            }
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        this.passwd.dispose();
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
        encrptedpasswordDialog.setSize(400, 200);
        encrptedpasswordDialog.setLocation(350, 230);
        //passwd.setLocation(point);
        encrptedpasswordDialog.setVisible(true);

        passwd.dispose();
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jPasswordField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField3FocusLost

        java.lang.String currPassWord = null, currentUser = null;

        currPassWord = this.jPasswordField3.getText();
        int nums = 0, num2 = 0;

        try {
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtsd = connectDB.createStatement();

            java.sql.ResultSet rsetsd = stmtsd.executeQuery("SELECT count(*) from secure_levels_access where  login_username='" + currentUser + "' and menu_access='Tendering'");

            while (rsetsd.next()) {
                num2 = rsetsd.getInt(1);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='" + md5(jPasswordField3.getText()) + "' and  login_username='" + currentUser + "' and menu_access='Tendering'");

            while (rsets.next()) {
                nums = rsets.getInt(1);

            }

            if (nums == 0 && !jPasswordField3.getText().equals("nothing")) {

                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "You have typed your current password incorrectly");
                jPasswordField3.setText(null);
                //       jPasswordField1.grabFocus();

            } else if (nums == 1 && !jPasswordField3.getText().equals("nothing") && num2 >= 1) {

                jButton32.setText("Change Password");

            } else if (nums == 0 && jPasswordField3.getText().equals("nothing") && num2 != 1) {
                System.out.println("DO NOTHING");
            } else if (nums == 0 && jPasswordField3.getText().equals("nothing") && num2 == 1) {
                javax.swing.JOptionPane.showMessageDialog(null, "You already have an existing password", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                jPasswordField3.setText(null);

            }

            if (jPasswordField3.getText().equals("nothing")) {

                jButton32.setText("Set Password");

            }

        } catch (Exception efg) {
            efg.printStackTrace();

        }

        // Add your handling code here:
    }//GEN-LAST:event_jPasswordField3FocusLost

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed

        encrptedpasswordDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed

        java.lang.String currPassWord = null;

        currPassWord = this.jPasswordField3.getText();

        java.lang.String currentUser = null;
        int num = 0, num_user = 0;
        String fullname = null, group = null;

        /////getting the current password
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtSS = connectDB.createStatement();

            java.sql.ResultSet rsetSS = stmtSS.executeQuery("SELECT CONCAT(f_name,' ',l_name) ,group_name from secure_menu_access where login_name='" + currentUser + "'");

            while (rsetSS.next()) {

                fullname = rsetSS.getString(1);
                group = rsetSS.getString(2);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='" + md5(jPasswordField2.getText()) + "' and  login_username='" + currentUser + "' and menu_access='Tendering'");

            while (rsets.next()) {
                num = rsets.getInt(1);

            }

            java.sql.Statement stmtsg = connectDB.createStatement();

            java.sql.ResultSet rsetsg = stmtsg.executeQuery("SELECT count(*) from secure_levels_access where   login_username='" + currentUser + "' and menu_access='Tendering'");

            while (rsetsg.next()) {
                num_user = rsetsg.getInt(1);

            }
            if (checkPasswordModality() == true) {

                if (jButton32.getActionCommand().equals("Set Password")) {

                    if (num == 0 && num_user == 0) {
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO secure_levels_access(login_username, login_name, group_name, authorisation,menu_access,limit_amount) VALUES (?, ?, ?, ?,?,?)");
                        pstmt2.setObject(1, currentUser);
                        // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                        pstmt2.setObject(2, fullname);
                        pstmt2.setObject(3, group);
                        pstmt2.setObject(4, md5(jPasswordField4.getText()));
                        pstmt2.setObject(5, "Tendering");
                        pstmt2.setDouble(6, Double.parseDouble(jTextField10.getText()));
                        pstmt2.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Password Created Successfully", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);
                        jPasswordField5.setText(null);
                        jPasswordField6.setText(null);
                        jTextField10.setText(null);

                    }
                } else {

                    if (num == 1 && num_user == 1) {
                        java.sql.PreparedStatement pstmts = connectDB.prepareStatement("UPDATE secure_levels_access set authorisation='" + md5(jPasswordField6.getText()) + "' where authorisation='" + md5(jPasswordField3.getText()) + "' and login_username='" + currentUser + "' and menu_access='Tendering'");
                        pstmts.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Password Changed Successfully", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);
                        jPasswordField5.setText(null);
                        jPasswordField6.setText(null);
                        jTextField10.setText(null);
                    } else {
                        jButton32.setText("Set Password");

                    }
                }
                //            if(num_user>=1&&num==1){
                //             JOptionPane.showMessageDialog(null,"Password Changed Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                //
                //            }
            } else {
                JOptionPane.showMessageDialog(null, "Password Mismatch", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                jPasswordField3.setText(null);
                jPasswordField4.setText(null);
            }
        } catch (Exception dfg) {
            dfg.printStackTrace();

        }
    }//GEN-LAST:event_jButton32ActionPerformed
    public Boolean checkPasswordModality() {
        Boolean modality = false;
        if (jPasswordField4.getText().equals(jPasswordField6.getText())) {
            modality = true;

        } else {
            modality = false;
        }

        return modality;

    }

    public static String md5(String input) {

        String md5 = null;

        if (null == input) {
            return null;
        }

        try {

            //Create MessageDigest object for MD5
            MessageDigest digest = MessageDigest.getInstance("MD5");

            //Update input string in message digest
            digest.update(input.getBytes(), 0, input.length());

            //Converts message digest value in base 16 (hex)
            md5 = new BigInteger(1, digest.digest()).toString(16);

        } catch (NoSuchAlgorithmException e) {

            e.printStackTrace();
        }
        return md5;
    }
    private void encrptedpasswordDialogcloseDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_encrptedpasswordDialogcloseDialog
        setVisible(false);
        encrptedpasswordDialog.dispose();
    }//GEN-LAST:event_encrptedpasswordDialogcloseDialog

    private void jTabbedPane3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane3MouseClicked
        // TODO add your handling code here:
        if (jTabbedPane3.getSelectedIndex() == 2) {

            generalEvaluationTick.doClick();

        }
    }//GEN-LAST:event_jTabbedPane3MouseClicked

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton33ActionPerformed

    private void itemSelectTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemSelectTblMouseClicked
        TableModel.TableGroupedBooleanColumn(itemSelectTbl, 0);
        if (itemSelectTbl.getValueAt(itemSelectTbl.getSelectedRow(), 1) != null) {
            item_code = itemSelectTbl.getValueAt(itemSelectTbl.getSelectedRow(), 1).toString();

            try {

                //Populatin itemDesc
                java.sql.Statement populateitems = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = populateitems.executeQuery("SELECT DISTINCT item_code, item_description FROM st_floated_quotations WHERE quotation_no = '" + receivetendertxt.getText() + "' and item_code ='" + item_code + "' ");
                int i = 0;
                while (rsetTable1.next()) {

                    descriptionTxt.setText(rsetTable1.getString(2));

                    i++;

                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }

        }

    }//GEN-LAST:event_itemSelectTblMouseClicked

    private void daysTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysTxtActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

    }//GEN-LAST:event_daysTxtActionPerformed

    private void daysTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_daysTxtCaretUpdate
        // TODO add your handling code here:
        if (this.daysTxt.getCaretPosition() >= 1) {
            System.out.print("Nothing");
            try {
                int d = Integer.parseInt(daysTxt.getText());

                daysTxt.requestFocusInWindow();

            } catch (Exception u) {
                JOptionPane.showMessageDialog(this, "Incorrect Data Type! Numbers Only!", "Wrong Value Entered", JOptionPane.ERROR_MESSAGE);
                daysTxt.requestFocusInWindow();
                daysTxt.setText(null);

                daysTxt.requestFocusInWindow();
                return;

            }

        } else {

            daysTxt.requestFocusInWindow();
            daysTxt.setText(null);

            System.out.println("manze jo");

        }
    }//GEN-LAST:event_daysTxtCaretUpdate

    private void countryTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryTxtFocusLost
        // TODO add your handling code here:
        if (countryTxt.getText().length() > 0) {

            countryTxt.setText(countryTxt.getText().toString());

        }
    }//GEN-LAST:event_countryTxtFocusLost

    private void tenderNocmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderNocmbxActionPerformed
        // TODO add your handling code here:
        tenderTxt.setText(com.afrisoftech.lib.GetItemInfo.getITenderDesc(tenderNocmbx.getSelectedItem().toString(), connectDB));
    }//GEN-LAST:event_tenderNocmbxActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        javax.swing.JInternalFrame dismth = new ManualTendersIntfr(connectDB, null, 3);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setSize(medicdspane.getSize());
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton34ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EvaluationTypePane;
    private javax.swing.JPanel TechnicalEvaluationPane;
    public static javax.swing.JPanel TechnicalEvalutionMainPane;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JCheckBox bidavailedchk;
    private javax.swing.JTable biddersTbl;
    private javax.swing.JCheckBox bqavailedckk;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JButton cancelbtn3;
    private javax.swing.JButton closebtn;
    private javax.swing.JButton closebtn1;
    private javax.swing.JButton closebtn10;
    private javax.swing.JButton closebtn11;
    private javax.swing.JButton closebtn2;
    private javax.swing.JButton closebtn3;
    private javax.swing.JButton closebtn4;
    private javax.swing.JButton closebtn5;
    private javax.swing.JButton closebtn6;
    private javax.swing.JButton closebtn7;
    private javax.swing.JButton closebtn8;
    private javax.swing.JButton closebtn9;
    private javax.swing.JPanel contract_management;
    private javax.swing.JTextField countryTxt;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private com.afrisoftech.lib.DatePicker datePicker5;
    private com.afrisoftech.lib.DatePicker datePicker6;
    private javax.swing.JTextField daysTxt;
    private javax.swing.JTextField daysTxtf;
    private javax.swing.JTextField deptraisingtxt;
    private javax.swing.JTextField descriptionTxt;
    private javax.swing.JTable dispatchTbl;
    private javax.swing.JDialog encrptedpasswordDialog;
    private javax.swing.JButton exitbtn1;
    private javax.swing.JButton exitbtn2;
    private javax.swing.JButton exitbtn4;
    private javax.swing.JPanel financialEvaluation;
    private javax.swing.JCheckBox generalEvaluationTick;
    private javax.swing.JTable itemSelectTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JPasswordField jPasswordField5;
    private javax.swing.JPasswordField jPasswordField6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JDialog lpopasswd;
    private javax.swing.JDialog lpopasswd1;
    private com.afrisoftech.lib.DatePicker openingEnterDate;
    private javax.swing.JTextField openingdatetxt;
    private javax.swing.JTextField opentendertxt;
    private javax.swing.JDialog passwd;
    private javax.swing.JButton postbtn1;
    private javax.swing.JButton postbtn2;
    private javax.swing.JButton postbtn3;
    private javax.swing.JButton postbtn4;
    private javax.swing.JTextField receivetendertxt;
    private javax.swing.JScrollPane requisitionspnl;
    private javax.swing.JTable requisitiontbl;
    private javax.swing.JTextField requisitiontxt;
    private javax.swing.JTextField requistntxt;
    private javax.swing.JButton resetbtn1;
    private javax.swing.JButton resetbtn3;
    private javax.swing.JButton savedocs;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JButton searchButton5;
    private javax.swing.JButton searchButton6;
    private javax.swing.JButton searchButton8;
    private javax.swing.JDialog searchrequisition;
    private javax.swing.JDialog searchsupplier;
    private javax.swing.JDialog searchsupplier1;
    private javax.swing.JDialog searchsupplier2;
    private javax.swing.JDialog searchsupplier3;
    private javax.swing.JDialog searchsupplier4;
    private javax.swing.JDialog searchsupplierc;
    private javax.swing.JPanel searchsupplierpnl;
    private javax.swing.JPanel searchsupplierpnl1;
    private javax.swing.JPanel searchsupplierpnl2;
    private javax.swing.JPanel searchsupplierpnl3;
    private javax.swing.JPanel searchsupplierpnl4;
    private javax.swing.JPanel searchsupplierpnl5;
    private javax.swing.JScrollPane searchsupplierspnl;
    private javax.swing.JScrollPane searchsupplierspnl1;
    private javax.swing.JScrollPane searchsupplierspnl2;
    private javax.swing.JScrollPane searchsupplierspnl3;
    private javax.swing.JScrollPane searchsupplierspnl4;
    private javax.swing.JScrollPane searchsupplierspnl5;
    private javax.swing.JTable searchsupplierstbl;
    private javax.swing.JTable searchsupplierstbl1;
    private javax.swing.JTable searchsupplierstbl2;
    private javax.swing.JTable searchsupplierstbl3;
    private javax.swing.JTable searchsupplierstbl4;
    private javax.swing.JTable searchsupplierstbl5;
    private javax.swing.JTextField searchsuppliertxt;
    private javax.swing.JTextField searchsuppliertxt1;
    private javax.swing.JTextField searchsuppliertxt2;
    private javax.swing.JTextField searchsuppliertxt3;
    private javax.swing.JTextField searchsuppliertxt4;
    private javax.swing.JTextField searchsuppliertxt5;
    private javax.swing.JDialog searchtender;
    private javax.swing.JDialog searchtender1;
    private javax.swing.JDialog searchtender2;
    private javax.swing.JDialog searchtender3;
    private javax.swing.JDialog searchtenderc;
    private javax.swing.JTable specsTbl;
    private javax.swing.JTextField suppliernametxt;
    private javax.swing.JTextField suppliertxt;
    private javax.swing.JComboBox tenderNocmbx;
    private javax.swing.JTextField tenderNotxt;
    private javax.swing.JTextField tenderTxt;
    private javax.swing.JTextField tenderdatetxt;
    private javax.swing.JTextField tendernotxt;
    private javax.swing.JPanel tenderrecordspnl;
    private javax.swing.JPanel tenderrecordspnl1;
    private javax.swing.JPanel tenderrecordspnl2;
    private javax.swing.JPanel tenderrecordspnl3;
    private javax.swing.JPanel tenderrecordspnl4;
    private javax.swing.JScrollPane tenderrecordsspnl;
    private javax.swing.JScrollPane tenderrecordsspnl1;
    private javax.swing.JScrollPane tenderrecordsspnl2;
    private javax.swing.JScrollPane tenderrecordsspnl3;
    private javax.swing.JScrollPane tenderrecordsspnl4;
    private javax.swing.JTable tenderrecordstbl;
    private javax.swing.JTable tenderrecordstbl1;
    private javax.swing.JTable tenderrecordstbl2;
    private javax.swing.JTable tenderrecordstbl3;
    private javax.swing.JTable tenderrecordstbl4;
    private javax.swing.JTextField tenderrecordstxt;
    private javax.swing.JTextField tenderrecordstxt1;
    private javax.swing.JTextField tenderrecordstxt2;
    private javax.swing.JTextField tenderrecordstxt3;
    private javax.swing.JTextField tenderrecordstxt4;
    private javax.swing.JTextField usernamedispatchtxt;
    private javax.swing.JTextField usernamelpotxt;
    private javax.swing.JTextField usernameopentendertxt;
    private javax.swing.JTextField usernameprocessprtxt;
    private javax.swing.JTextField usernamereturnedtxt;
    private javax.swing.JPanel userrecordspnl;
    // End of variables declaration//GEN-END:variables
}
