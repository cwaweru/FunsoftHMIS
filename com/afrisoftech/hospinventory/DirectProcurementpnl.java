/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.TableModel;
import static com.afrisoftech.hospinventory.AwardApprovalsIntfr.connectDB;
import com.afrisoftech.lib.ClearTable;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import org.openide.util.Exceptions;

/**
 *
 * @author sytem partners
 */
public class DirectProcurementpnl extends javax.swing.JPanel {

    /**
     * Creates new form CsoForwadingOperations
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private boolean JOptionCheck;
    private Double bprice;
    private Object SelectedPR;
    private Object agendaNo;
    private String header;

    public DirectProcurementpnl(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        refreshTable2();
//        WaitingPRsThread wprs = new WaitingPRsThread();
////        wprs.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchItems = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        searchSupplier = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        searchsuppTxt = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton51 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Save1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        remarksTxtpn = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        reqDateTxt = new javax.swing.JTextField();
        agendatxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        supplEmailtxt = new javax.swing.JTextField();
        reqdatepicer = new com.afrisoftech.lib.DatePicker();
        jPanel62 = new javax.swing.JPanel();
        supplTxt = new javax.swing.JTextField();
        tenderSearchbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        suppCodeTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        deptRaising = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        receivnCmbx = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        PurchaseItemsTbl1 = new com.afrisoftech.dbadmin.JTable();
        jPanel19 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        agDatetxt1 = new javax.swing.JTextField();
        DueDateTxt1 = new javax.swing.JTextField();
        agNotxt1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        prqNotxt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        userTxt1 = new javax.swing.JTextField();
        jLabel113 = new javax.swing.JLabel();
        agDatetxt2 = new javax.swing.JTextField();
        jPanel42 = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        agendaTxtarea1 = new javax.swing.JTextPane();
        NoreqPane1 = new javax.swing.JPanel();
        approvalLbl1 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        agendaTbl1 = new com.afrisoftech.dbadmin.JTable();
        jButton1 = new javax.swing.JButton();

        searchItems.setModal(true);
        searchItems.setUndecorated(true);
        searchItems.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jSearchPanel.add(jButton9, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchItems.getContentPane().add(jSearchPanel, gridBagConstraints);

        searchSupplier.setModal(true);
        searchSupplier.setUndecorated(true);
        searchSupplier.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        searchsuppTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(searchsuppTxt, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton51.setText("Close");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchSupplier.getContentPane().add(jSearchPanel1, gridBagConstraints);

        setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        Save1.setMnemonic('s');
        Save1.setText("Send Supplier Pricing For Approval");
        Save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(Save1, gridBagConstraints);

        cancelbtn1.setMnemonic('l');
        cancelbtn1.setText("Clear Form");
        cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(cancelbtn1, gridBagConstraints);

        exitbtn1.setMnemonic('c');
        exitbtn1.setText("Close Form");
        exitbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(exitbtn1, gridBagConstraints);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Brief remarks", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 51, 102)));

        remarksTxtpn.setForeground(new java.awt.Color(0, 0, 204));
        remarksTxtpn.setText("-");
        jScrollPane2.setViewportView(remarksTxtpn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Item Description", "Units", "Quantity Required", "Price", "Total Value", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = itemsTbl.getColumnModel().getColumn(i);
            if (i == 1) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 6) {
                    column.setPreferredWidth(300);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }
        itemsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTblMouseClicked(evt);
            }
        });
        itemsTbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemsTblKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(itemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("All Fields in red must be duly filled"));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1.setLayout(jPanel1Layout);

        jLabel4.setText("Agenda Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel111.setText("Logged In user");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel111, gridBagConstraints);

        jLabel5.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel5, gridBagConstraints);

        reqDateTxt.setEditable(false);
        reqDateTxt.setText(com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(reqDateTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(agendatxt, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("e-mail address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        supplEmailtxt.setEditable(false);
        supplEmailtxt.setForeground(new java.awt.Color(0, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(supplEmailtxt, gridBagConstraints);

        reqdatepicer.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(reqdatepicer, gridBagConstraints);

        jPanel62.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel62.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel62.setLayout(new java.awt.GridBagLayout());

        supplTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(supplTxt, gridBagConstraints);

        tenderSearchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        tenderSearchbtn.setToolTipText("Search");
        tenderSearchbtn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tenderSearchbtn.setMaximumSize(new java.awt.Dimension(74, 53));
        tenderSearchbtn.setMinimumSize(new java.awt.Dimension(74, 53));
        tenderSearchbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tenderSearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderSearchbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel62.add(tenderSearchbtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jPanel62, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("Supplier Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);

        suppCodeTxt.setEditable(false);
        suppCodeTxt.setForeground(new java.awt.Color(0, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(suppCodeTxt, gridBagConstraints);

        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("User Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        deptRaising.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' union select distinct initcap(depart_name) from pb_main_department order by 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(deptRaising, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setText("Receiving Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        receivnCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(select'-' union select distinct store_name from st_main_stores) order by 1") );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(receivnCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        jPanel2.add(jPanel1, gridBagConstraints);

        jTabbedPane1.addTab("Enter Items to purchase ", jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel14.setLayout(new java.awt.GridBagLayout());

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jPanel16.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel16.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel16.setRequestFocusEnabled(false);
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel18.setLayout(new java.awt.GridBagLayout());

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        PurchaseItemsTbl1.setForeground(new java.awt.Color(0, 0, 0));
        PurchaseItemsTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Bidder", "Item Desc", "Unit", "Quantity", "Unit Price", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column1 = null;
        for (int i = 0; i < 4; i++) {
            column1 = PurchaseItemsTbl1.getColumnModel().getColumn(i);
            if (i == 0) {

                column1.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column1.setPreferredWidth(200);
                } else {
                    //if (i == 2) {
                        column1.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }
        PurchaseItemsTbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PurchaseItemsTbl1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(PurchaseItemsTbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel18.add(jScrollPane5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel16.add(jPanel18, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel19.setBackground(new java.awt.Color(204, 255, 204));
        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel8.setForeground(new java.awt.Color(0, 51, 204));
        jLabel8.setText("Agenda Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel8, gridBagConstraints);

        jLabel112.setForeground(new java.awt.Color(0, 51, 204));
        jLabel112.setText("Posted By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel112, gridBagConstraints);

        agDatetxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(agDatetxt1, gridBagConstraints);

        DueDateTxt1.setEditable(false);
        DueDateTxt1.setBackground(new java.awt.Color(204, 255, 204));
        DueDateTxt1.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(DueDateTxt1, gridBagConstraints);

        agNotxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(agNotxt1, gridBagConstraints);

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("PRQ Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel9, gridBagConstraints);

        prqNotxt.setEditable(false);
        prqNotxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        prqNotxt.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(prqNotxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jSeparator2, gridBagConstraints);

        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("Entered By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel10, gridBagConstraints);

        userTxt1.setEditable(false);
        userTxt1.setText(com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(userTxt1, gridBagConstraints);

        jLabel113.setForeground(new java.awt.Color(0, 51, 204));
        jLabel113.setText("Date Posted");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel113, gridBagConstraints);

        agDatetxt2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(agDatetxt2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel16.add(jPanel19, gridBagConstraints);

        jPanel42.setBackground(new java.awt.Color(204, 204, 255));
        jPanel42.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel42.setLayout(new java.awt.GridBagLayout());

        jScrollPane22.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        agendaTxtarea1.setEditable(false);
        agendaTxtarea1.setBackground(new java.awt.Color(204, 204, 255));
        agendaTxtarea1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jScrollPane22.setViewportView(agendaTxtarea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jScrollPane22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel16.add(jPanel42, gridBagConstraints);

        NoreqPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 0, 51), null, null));
        NoreqPane1.setLayout(new java.awt.GridBagLayout());

        approvalLbl1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        approvalLbl1.setForeground(new java.awt.Color(255, 0, 51));
        approvalLbl1.setText("No: Of Agendas Awaiting Approval");
        NoreqPane1.add(approvalLbl1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(NoreqPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel16, gridBagConstraints);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agendas Awaiting Approval", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel20.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel20.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        jScrollPane6.setMinimumSize(new java.awt.Dimension(250, 100));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(250, 100));

        agendaTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "AGENDA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        agendaTbl1.setMinimumSize(new java.awt.Dimension(90, 34));
        agendaTbl1.setPreferredSize(new java.awt.Dimension(90, 750));
        agendaTbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agendaTbl1MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(agendaTbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jScrollPane6, gridBagConstraints);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel20.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel14, gridBagConstraints);

        jTabbedPane1.addTab("View Agendas awaiting approval", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jTabbedPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
 private void refreshTable2() {

        agendaTbl1.setModel(TableModel.createTableVectors(connectDB, "SELECT DISTINCT requisition_no,terms agenda_no from st_receive_requisation WHERE (requisition_no ilike '%PRQ%' or requisition_no ILIKE '%SRQ%') and (monthly_usage ilike 'Q%' or monthly_usage ilike 'T%' or monthly_usage ilike '%P%') and terms!='-' and approval_status=false "));
        // agendaTbl1.setModel(TableModel.createTableVectors(connectDB, "SELECT DISTINCT requisition_no,agenda_no from st_receive_requisation WHERE (requisition_no ilike '%PRQ%' or requisition_no ILIKE 'SRQ%') and (monthly_usage ilike 'Q%' or monthly_usage ilike 'T%' or monthly_usage ilike '%P%') and agenda_no!='-' and mode_of_purchase_approved=false "));

    }
 class WaitingPRsThread extends Thread {

        public WaitingPRsThread() {
        }

        public void run() {
            while (true) {
                refreshTable2();
                try {
                    Thread.sleep(30000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();

                    //Logger.getLogger(VitalSignRecIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    private void Save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save1ActionPerformed

        // Add your handling code here:
        String description = null;
        String code = null;
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String transNo = null;
        String transNo1 = null;
        String glType = null;
        String user = null;

        String glCode = null;
        String units = null;
        double usage = 0.00;

        com.afrisoftech.lib.DBObject DBObject = new com.afrisoftech.lib.DBObject();

        try {

//            connectDB.setAutoCommit(false);
            java.sql.Statement ps = connectDB.createStatement();

            java.sql.ResultSet rs2 = ps.executeQuery("select 'DPRQ'||lpad(nextval('proc_req_no_seq')::text,6,0::TEXT)");
            while (rs2.next()) {
                transNo = rs2.getObject(1).toString();
                // jTextField362.setText(transNo);

            }

             java.sql.PreparedStatement headr = connectDB.prepareStatement("select header_name from pb_header");
            ResultSet pop = headr.executeQuery();
            while (pop.next()) {

                
                header=(pop.getObject(1).toString());
            }

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_receive_requisation VALUES(?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

            for (int i = 0; i < itemsTbl.getRowCount(); i++) {

                if (itemsTbl.getModel().getValueAt(i, 0) != null && itemsTbl.getModel().getValueAt(i, 3) != null) {
                    //usage

                    bprice = Double.valueOf(itemsTbl.getValueAt(i, 4).toString());

                    JOptionCheck = true;
                    pstmt.setObject(1, "");
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reqdatepicer.getDate()));
                    pstmt.setObject(3, deptRaising.getSelectedItem().toString());
                    ////description
                    pstmt.setObject(4, itemsTbl.getValueAt(i, 1).toString());
                    pstmt.setObject(5, itemsTbl.getValueAt(i, 2).toString());
                    ///qty
                    pstmt.setDouble(6, Double.parseDouble(itemsTbl.getValueAt(i, 3).toString()));

                    pstmt.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reqdatepicer.getDate()));
                    pstmt.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reqdatepicer.getDate()));
                    // pstmt.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                    pstmt.setObject(9, true);
                    pstmt.setBoolean(10, true);
                    pstmt.setObject(11, "URGENT");
                    //requisition no
                    pstmt.setString(12, transNo);
                    ////price
                    int l = 0;
                    pstmt.setDouble(13, Double.valueOf(bprice.toString()));

                    pstmt.setString(14, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
                    pstmt.setObject(15, receivnCmbx.getSelectedItem().toString());
                    pstmt.setDouble(16, 0.00);
                    pstmt.setDouble(17, 0.0);
                    pstmt.setBoolean(18, false);
                    pstmt.setString(19, transNo + "-" + com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
                    pstmt.setObject(20, supplTxt.getText());
                    pstmt.setTimestamp(21, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                    pstmt.setObject(22, "");
                    pstmt.setString(23, remarksTxtpn.getText());
                    pstmt.setDouble(24, 0);
                    //remarks
                    String terms = null;
                   // if (itemsTbl.getValueAt(i, 5) == null) {
                        terms = agendatxt.getText();
                        pstmt.setObject(25, terms);
//                    } else {
//                        remark = itemsTbl.getValueAt(i, 5).toString();
//                        pstmt.setObject(25, remark);
//                    }
//                    /////end of remarks

                    pstmt.setDouble(26, 0);
                    pstmt.setObject(27, "");
                    pstmt.setObject(28, "");
                    pstmt.setObject(29, itemsTbl.getValueAt(i, 0).toString());
                    pstmt.setDouble(30, 0);
                    pstmt.setDouble(31, 0);
                    pstmt.setObject(32, "");
                    pstmt.setObject(33, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                    pstmt.setObject(34, "DIRECT PURCHASE");
                    pstmt.setObject(35, "Direct Pr");
                    pstmt.setObject(36, false);
                    // pstmt.setObject(36,"");
                    pstmt.setBoolean(37, true);

                    pstmt.setBoolean(38, true);
                    pstmt.setObject(39, null);
                    pstmt.setBoolean(40, false);
                    pstmt.setObject(41, agendatxt.getText());

                    //                 pstmt.setObject(36,n);
                    pstmt.executeUpdate();
                    
                    
                    
                    
                    
                     java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("INSERT INTO st_item_to_quote("
                                + "buyer_details, quotation_date, openning_date, item_code, item_description, "
                                + "units, quantity,time_saved, item_number,item_serial,tender_no,vote_class, vote, head, subhead, sub_item,"
                                + " sub_item_desc, donor_code, donor_item, aie_no,department, irq_no)"
                                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "
                                + "?, ?, ?, ?, ?, ?, ?,?,?)");
                        pstmt1.setObject(1, header);
                        pstmt1.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reqdatepicer.getDate()));
                        pstmt1.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reqdatepicer.getDate()));
                        pstmt1.setObject(4, itemsTbl.getValueAt(i, 0).toString());
                        pstmt1.setObject(5, itemsTbl.getValueAt(i, 1).toString().toUpperCase());
                        pstmt1.setObject(6, itemsTbl.getValueAt(i, 2).toString());
                        pstmt1.setDouble(7, java.lang.Double.valueOf(itemsTbl.getValueAt(i, 3).toString()));
                        pstmt1.setTimestamp(8, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmt1.setObject(9, i);
                        pstmt1.setObject(10, 2);
                        pstmt1.setObject(11, "T"+transNo);
                        pstmt1.setObject(12, null);
                        pstmt1.setObject(13, null);
                        pstmt1.setObject(14, null);
                        pstmt1.setObject(15, null);
                        pstmt1.setObject(16, null);
                        pstmt1.setObject(17, null);
                        pstmt1.setObject(18, null);
                        pstmt1.setObject(19, null);
                        pstmt1.setObject(20, null);
                        pstmt1.setObject(21, null);
                        pstmt1.setObject(22, transNo + "-" + "T"+transNo);
                        //System.out.println(dateSpinner.getValue().toString());

                        pstmt1.executeUpdate();

                }

                // jProgressBar1.setValue(jProgressBar1.getMaximum());
            }

            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Requisition No. is '" + transNo + "'", "Comfirmation", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            ClearTable.clearthisTable(itemsTbl);
            com.afrisoftech.lib.GetItemInfo.updateTrail("Generated Direct Procurement Request " + transNo, connectDB);
//            connectDB.commit();
//            connectDB.setAutoCommit(true);

            

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            sq.printStackTrace();
//            try {
//                connectDB.rollback();
//            } catch (java.sql.SQLException sql) {
//                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
//            }
        }

    }//GEN-LAST:event_Save1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        ClearTable.clearthisTable(itemsTbl);
//SupplierTxt.
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
        this.setVisible(false);//dispose();
    }//GEN-LAST:event_exitbtn1ActionPerformed

    private void itemsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTblMouseClicked

        if (itemsTbl.getSelectedColumn() == 0) {
            System.out.println("Showing dialog");

            //SearchTenderLpo.dispose();
            java.awt.Point point = this.jScrollPane1.getLocationOnScreen();

            searchItems.setSize(jScrollPane1.getWidth() * 3 / 4, 200);

            searchItems.setLocation(point);
            searchItems.setVisible(true);
        }
    }//GEN-LAST:event_itemsTblMouseClicked

    private void tenderSearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderSearchbtnActionPerformed
        // TODO add your handling code here:
        // if(prqTxt.getText().length()>0){

        System.out.println("Showing dialog");

        //SearchTenderLpo.dispose();
        java.awt.Point point = this.supplTxt.getLocationOnScreen();

        searchSupplier.setSize(400, 200);

        searchSupplier.setLocation(point);
        searchSupplier.setVisible(true);
        //       }
        //       else{   JOptionPane.showMessageDialog(this, "To Raise a purchase Order You Need To select a requisition for order");}
    }//GEN-LAST:event_tenderSearchbtnActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if (this.jTextField111.getCaretPosition() < 1) {
            System.out.print("Nothing");
        } else {
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select item_code,description,strength,units,buying_price as price FROM st_stock_item WHERE description ILIKE '%" + jTextField111.getText() + "%' and department ilike '%" + receivnCmbx.getSelectedItem() + "%'  ORDER BY 1"));

            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");

        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        double balance = 0.00;
//"select item_code,description,strength,units,buying_price 
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), itemsTbl.getSelectedRow(), 0);
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), itemsTbl.getSelectedRow(), 1);
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3), itemsTbl.getSelectedRow(), 2);
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4), itemsTbl.getSelectedRow(), 4);
        // itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4), itemsTbl.getSelectedRow(), 6);
        // itemsTbl.setValueAt(0.00, itemsTbl.getSelectedRow(), 8);

//searchItems.dispose();
        searchItems.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        searchItems.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void searchsuppTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppTxtCaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select supplier_name,code,CASE WHEN email_address IS NULL OR email_address = '' THEN '-' ELSE email_address END AS email_address from st_suppliers where supplier_name ILIKE '%" + searchsuppTxt.getText().toString() + "%' ORDER BY 1"));

        jSearchTable1.setShowHorizontalLines(false);
        jSearchScrollPane1.setViewportView(jSearchTable1);     // Add your handling code here:
    }//GEN-LAST:event_searchsuppTxtCaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        supplTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        suppCodeTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        supplEmailtxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        searchSupplier.dispose();

    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        searchSupplier.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void itemsTblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsTblKeyReleased
        // TODO add your handling code here:
        Double price = 0.0, qty = 0.0, value = 0.0;
        if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 0) != null && itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 3) != null) {

            price = Double.valueOf(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 4).toString());
            qty = Double.valueOf(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 3).toString());

            value = price * qty;

            itemsTbl.setValueAt(value, itemsTbl.getSelectedRow(), 5);

            if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 0) == null) {
                itemsTbl.setValueAt('-', itemsTbl.getSelectedRow(), 6);
            }

        }


    }//GEN-LAST:event_itemsTblKeyReleased

    private void PurchaseItemsTbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PurchaseItemsTbl1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PurchaseItemsTbl1MouseClicked

    private void agendaTbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendaTbl1MouseClicked
        // TODO add your handling code here:

        SelectedPR = agendaTbl1.getValueAt(agendaTbl1.getSelectedRow(), 0);
        agendaNo = agendaTbl1.getValueAt(agendaTbl1.getSelectedRow(), 1);
        prqNotxt.setText((String) SelectedPR);
        agNotxt1.setText((String) agendaNo);
        PurchaseItemsTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT item_code, item_description, units,quantity,price,price*quantity TOTAL , monthly_usage Mode_of_Purchase, FALSE AS approve FROM st_receive_requisation WHERE requisition_no='" + SelectedPR + "'"));
    }//GEN-LAST:event_agendaTbl1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        try {
//            // TODO add your handling code here:
//            WaitingPRsThread.sleep(30000);
//        } catch (InterruptedException ex) {
//            Exceptions.printStackTrace(ex);
//        }
//        
        refreshTable2();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DueDateTxt1;
    private javax.swing.JPanel NoreqPane1;
    private javax.swing.JTable PurchaseItemsTbl1;
    private javax.swing.JButton Save1;
    private javax.swing.JTextField agDatetxt1;
    private javax.swing.JTextField agDatetxt2;
    private javax.swing.JTextField agNotxt1;
    private javax.swing.JTable agendaTbl1;
    private javax.swing.JTextPane agendaTxtarea1;
    private javax.swing.JTextField agendatxt;
    private javax.swing.JLabel approvalLbl1;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JComboBox deptRaising;
    public static javax.swing.JButton exitbtn1;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField prqNotxt;
    private javax.swing.JComboBox receivnCmbx;
    private javax.swing.JTextPane remarksTxtpn;
    private javax.swing.JTextField reqDateTxt;
    private com.afrisoftech.lib.DatePicker reqdatepicer;
    private javax.swing.JDialog searchItems;
    private javax.swing.JDialog searchSupplier;
    private javax.swing.JTextField searchsuppTxt;
    private javax.swing.JTextField suppCodeTxt;
    private javax.swing.JTextField supplEmailtxt;
    private javax.swing.JTextField supplTxt;
    private javax.swing.JButton tenderSearchbtn;
    private javax.swing.JTextField userTxt1;
    // End of variables declaration//GEN-END:variables
}
