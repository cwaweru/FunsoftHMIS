/*
 * Requisitions.java
 *
 * Created on April 22, 2003, 5:12 PM
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.setFixedColumns;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.DBObject;
import com.afrisoftech.lib.ObjectSerialization;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author root
 */
public class RcvBranchRequisintfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox2 = null;
    javax.swing.JComboBox cmBox1 = null;
    javax.swing.JComboBox cmbox3 = null;
    javax.swing.JComboBox cmbox4 = null;
    java.io.File filePortrait = null;
    javax.swing.JSpinner dateSpinner = null;
    javax.swing.JSpinner dateSpinner1 = null;

    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public RcvBranchRequisintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        setFixedColumns.DisallowReordering(itemSearchtbl);

        recipientStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' union select distinct stores from store_allocation where user_name ilike current_user and type ilike 'Raise Requisitions'"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        itemsearchdialog = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        itemsearchcaret = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        itemSearchtbl = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        previousIRQDialog = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        removeRowBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        recipientStoreCmbx = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        issuingStoreCmbx = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel61 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        prvsIRQTxt = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jLabel112 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel42 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        postbtn1 = new javax.swing.JButton();
        resetbtn1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();

        itemsearchdialog.setModal(true);
        itemsearchdialog.setUndecorated(true);
        itemsearchdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        itemsearchcaret.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemsearchcaretCaretUpdate(evt);
            }
        });
        itemsearchcaret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsearchcaretActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(itemsearchcaret, gridBagConstraints);

        itemSearchtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        itemSearchtbl.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        itemSearchtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemSearchtblMouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(itemSearchtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        itemsearchdialog.getContentPane().add(jSearchPanel1, gridBagConstraints);

        previousIRQDialog.setModal(true);
        previousIRQDialog.setUndecorated(true);
        previousIRQDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField11111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton511.setText("Close");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        previousIRQDialog.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Raise Branch Requisitions (S11 Vouchers)");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        postbtn.setMnemonic('s');
        postbtn.setText("Save S11 request voucher");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(postbtn, gridBagConstraints);

        resetbtn.setText("Reset form");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(resetbtn, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear form");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(cancelbtn, gridBagConstraints);

        exitbtn.setMnemonic('c');
        exitbtn.setText("Close form");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel5, gridBagConstraints);

        removeRowBtn.setMnemonic('r');
        removeRowBtn.setText("Remove row");
        removeRowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(removeRowBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel4.add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Strength", "Units Pack", "Qty", "Unit Price", "Store Bal.", "Total Value", "Reorder"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 9; i++) {
            column = itemsTbl.getColumnModel().getColumn(i);
            if (i == 1) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 0) {
                    column.setPreferredWidth(100);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(150);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }

        /*cmBox1 = new javax.swing.JComboBox(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select  initcap(description) as description from st_main_category order by description"));

        javax.swing.table.TableColumn teditor1 = this.jTable1.getColumn("Category");

        teditor1.setCellEditor(new javax.swing.DefaultCellEditor(cmBox1));
        cmBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String branch = null;

                try {

                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("SELECT cos_account FROM pb_main_department2 where depart_name ilike '"+recipientStoreCmbx.getSelectedItem()+"' and classification ilike '"+cmBox1.getSelectedItem()+"'");// WHERE depart_name ilike '"+cmBox1.getSelectedItem()+"'");
                    while (rset.next()){
                        branch = rset.getObject(1).toString();
                        itemsTbl.setValueAt(branch,itemsTbl.getSelectedRow(), 8);
                    }

                    rset.close();
                    stmt.close();

                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    System.out.println("Insert not successful");
                }

                cmBox1ActionPerformed(evt);
            }

        });*/
        itemsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTblMouseClicked(evt);
            }
        });
        itemsTbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemsTblKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(itemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel4.add(jPanel2, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBackground(new java.awt.Color(255, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pls note that items to requisition must be registered first."));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Received Requisitions ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 20);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel1.add(jTextField1, gridBagConstraints);

        jLabel21.setText("Department Raising  Req.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 20);
        jPanel1.add(jLabel21, gridBagConstraints);

        recipientStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT store_name FROM st_stores ORDER BY 1"));
        recipientStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recipientStoreCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel1.add(recipientStoreCmbx, gridBagConstraints);

        jLabel3.setText("Store To Requisition from");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 20);
        jPanel1.add(jLabel3, gridBagConstraints);

        issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct initcap(store_name)  FROM st_main_stores union select distinct initcap(store_name) from st_stores ORDER BY 1 ASC"));
        issuingStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issuingStoreCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel1.add(issuingStoreCmbx, gridBagConstraints);

        jLabel1.setText("Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jTextField361.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField361, gridBagConstraints);

        prvsIRQTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        prvsIRQTxt.setToolTipText("Search");
        prvsIRQTxt.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        prvsIRQTxt.setMaximumSize(new java.awt.Dimension(74, 53));
        prvsIRQTxt.setMinimumSize(new java.awt.Dimension(74, 53));
        prvsIRQTxt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        prvsIRQTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prvsIRQTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel61.add(prvsIRQTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jPanel61, gridBagConstraints);

        jLabel6.setText("Previous IRQ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 28, 0, 0);
        jPanel6.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel6, gridBagConstraints);

        datePicker2.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(datePicker2, gridBagConstraints);

        jCheckBox4.setText("Register new Item");
        jCheckBox4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox4.setEnabled(false);
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jCheckBox4, gridBagConstraints);

        jLabel9.setText("Suggested Supplier");
        jLabel9.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker3, gridBagConstraints);

        jLabel112.setText("Requisition Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel112, gridBagConstraints);

        jLabel4.setText("Date Due");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel4, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Check balances");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jCheckBox1, gridBagConstraints);

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel42.setLayout(new java.awt.GridBagLayout());

        jTextField9.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setEnabled(false);
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel42, gridBagConstraints);

        jComboBox3.setEditable(true);
        jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' as supplier_name union all SELECT distinct supplier_name FROM st_suppliers where (supplier_name is not null or supplier_name != '') ORDER BY supplier_name"));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jComboBox3, gridBagConstraints);

        buttonGroup2.add(jCheckBox2);
        jCheckBox2.setText("Normal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jCheckBox2, gridBagConstraints);

        buttonGroup2.add(jCheckBox3);
        jCheckBox3.setText("Urgent");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jCheckBox3, gridBagConstraints);

        buttonGroup2.add(jCheckBox5);
        jCheckBox5.setText("Emergency");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jCheckBox5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel4.add(jPanel1, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Remarks Here"));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jScrollPane21.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane21.setViewportView(jTextPane4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jScrollPane21, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField2.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 1.0;
        jPanel41.add(jTextField2, gridBagConstraints);

        jLabel7.setText("Total               ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        jPanel41.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Terms of Payment            ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel41.add(jLabel8, gridBagConstraints);

        jComboBox4.setEditable(true);
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "CASH ON DELIVERY", "CHEQUE ON DELIVERY", "CREDIT" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel41.add(jComboBox4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel4.add(jPanel41, gridBagConstraints);

        jTabbedPane1.addTab("Product In The Catalog", jPanel4);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel31.setLayout(new java.awt.GridBagLayout());

        postbtn1.setMnemonic('s');
        postbtn1.setText("Register New Items");
        postbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(postbtn1, gridBagConstraints);

        resetbtn1.setText("Reset");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(resetbtn1, gridBagConstraints);

        cancelbtn1.setMnemonic('l');
        cancelbtn1.setText("Clear");
        cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(cancelbtn1, gridBagConstraints);

        exitbtn1.setMnemonic('c');
        exitbtn1.setText("Close");
        exitbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(exitbtn1, gridBagConstraints);

        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(jLabel51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel5.add(jPanel31, gridBagConstraints);

        jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cost Center", "Item Description", "Units", "Quantity", "Date Due", "Allocate Stock Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable11.setShowHorizontalLines(false);
        cmbox4 = new javax.swing.JComboBox();

        cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_stores order by store_name asc"));

        javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

        seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

        for (int i = 0; i < 3; i++) {
            column = jTable11.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }
        jScrollPane11.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel21.add(jScrollPane11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel5.add(jPanel21, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
        dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel11.add(dateSpinner1, gridBagConstraints);
        /*     gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jTextField1, gridBagConstraints);
        */
        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel11.setText("Requisation Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(datePicker1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel5.add(jPanel11, gridBagConstraints);

        jTabbedPane1.addTab("-", jPanel5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 1275, 593);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        this.postbtn.setEnabled(true);

        /*       for (int k = 0; k < jTable1.getRowCount(); k++ ) {
         for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
         jTable1.getModel().setValueAt(null,k,r);
         }
         }
         double quantityToOrder = 0.00;
         double ReoderLevel = 0.00;
         double sumQty = 0.00;
         try {
         java.lang.Object[] listofAct = this.getListofActivities();
         for (int i = 0; i < listofAct.length; i++){
         java.sql.Statement st32 = connectDB.createStatement();
         java.sql.ResultSet rset11 = st32.executeQuery("select description,units,quantity_toorder from st_stock_item WHERE description ILIKE '%"+listofAct[i]+"%' AND quantity_toorder > 0");
         while (rset11.next()) {
  
         //   System.out.println("Working at table row "+i);
         jTable1.setValueAt(rset11.getObject(1), i, 0);
         jTable1.setValueAt(rset11.getObject(2), i, 1);
         jTable1.setValueAt(rset11.getObject(3), i, 2);
  
         i++;
  
         }
  
  
         }
         for (int i = 0; i < jTable1.getRowCount(); i++) {
  
         if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
  
         java.sql.Statement st321 = connectDB.createStatement();
         java.sql.ResultSet rset111 = st321.executeQuery("select price from st_product_list WHERE description ILIKE '%"+jTable1.getValueAt(i,0).toString()+"%' AND supplier = '"+jComboBox1.getSelectedItem().toString()+"'");
         while (rset111.next()) {
  
         jTable1.setValueAt(rset111.getObject(1), i, 3);
         }
  
         }
         }
  
         for (int k = 0; k < jTable1.getRowCount(); k++) {
  
         if (jTable1.getModel().getValueAt(k, 0) != null) {
         double qtyReq = java.lang.Double.parseDouble(jTable1.getValueAt(k, 2).toString());
         double qtyReq1 = java.lang.Double.parseDouble(jTable1.getValueAt(k, 3).toString());
         jTable1.setValueAt(new java.lang.Double(qtyReq*qtyReq1), k, 4);
         }
         }
         java.sql.Statement pstmt = connectDB.createStatement();
  
         java.sql.ResultSet rs = pstmt.executeQuery("select current_user");
         while (rs.next()){
  
         jTextField9.setText(rs.getObject(1).toString());
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
         }
         */
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
// jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (jTextField113.getCaretPosition() < 3) {
            System.out.println("Nothing");
        } else {
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier_name, code as account_no from st_suppliers where supplier_name ILIKE '" + jTextField113.getText() + "%' order by supplier_name"));

            /*      //   searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 100 order by second_name");
             searchRowSet2.execute("SELECT supplier_name, code as account_no from st_suppliers where supplier_name ILIKE '"+jTextField113.getText()+"%' order by supplier_name");
           
             jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
             new org.netbeans.lib.sql.models.TableModel.Column("supplier_name", "Supplier", false),
             new org.netbeans.lib.sql.models.TableModel.Column("account_no", "A/C No.", false)
             //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
             //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
             }));
             */
            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);

        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        //    for (int k = 0; k < jSearchTable2.getRowCount(); k++ ) {
        //      for (int r = 0; r < jSearchTable2.getColumnCount(); r++ ) {
        //          jSearchTable2.getModel().setValueAt(null,k,r);
        //      }
        //  }
        // this.jTextField113.setText("");
        searchButtonClicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);

    }
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void itemsTblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsTblKeyReleased
        if (itemsTbl.getModel().getValueAt(itemsTbl.getSelectedRow(), 4) != null) {
            if (itemsTbl.getSelectedColumn() == itemsTbl.getSelectedColumn()) {
                double qty = java.lang.Float.parseFloat(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 4).toString());
                double price = java.lang.Float.parseFloat(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 5).toString());
                //  double units = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());

                double total = qty * price;
                itemsTbl.setValueAt(total, itemsTbl.getSelectedRow(), 7);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(itemsTbl, 7);
                jTextField2.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                // jTextField4.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                //  double discount = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 6);

            }

        }
// TODO add your handling code here:
    }//GEN-LAST:event_itemsTblKeyReleased

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        previousIRQDialog.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTextField361.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        //    jTextField361.setText(itemSearchtbl.getValueAt(itemSearchtbl.getSelectedRow(), 1).toString());
        previousIRQDialog.dispose();
//        for (int k = 0; k < itemsTbl.getRowCount(); k++ ) {
//            for (int r = 0; r < itemsTbl.getColumnCount(); r++ ) {
//                itemsTbl.getModel().setValueAt(null,k,r);
//            }
//        }
//        
        ClearTable.clearthisTable(itemsTbl);
        int k = 0;
        com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct item_code, item_description,strength, units, quantity,price,balance,(quantity*price*units::numeric)::numeric(15,2),reason FROM st_receive_requisation WHERE requisition_no ilike '" + jTextField361.getText() + "' order by item_description");

        this.postbtn.setEnabled(true);
        //this.populateTable11(this.jTextField361.getText());  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    private void populateTable11(java.lang.String patient_no) {
//        int i = 0;
//        try {
//            
//            //   for (int i = 0; i < jTable1.getRowCount(); i++ ) {
//            //       if (jTable1.getModel().getValueAt(i,0) != null){
//            
//            java.sql.Statement stmtTable = connectDB.createStatement();
//            
//            java.sql.ResultSet rsetTable = stmtTable.executeQuery("SELECT distinct item_code, item_description,strength, units, quantity,price,balance,(quantity*price*units::numeric)::numeric(15,2),reason FROM st_receive_requisation WHERE requisition_no ilike '"+jTextField361.getText()+"' order by item_description");
//            //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText().equalsIgnoreCase(jTextField1.getText())+"' and item = '"+jTable1.getValueAt(k,0).toString()+"'");
//            //,(quantity*price*units::numeric)::numeric(15,2)

        com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct item_code, item_description,strength, units, quantity,price,balance,(quantity*price*units::numeric)::numeric(15,2),reason FROM st_receive_requisation WHERE requisition_no ilike '" + jTextField361.getText() + "' order by item_description");
//            while (rsetTable.next()) {
//                
//                itemsTbl.setValueAt(rsetTable.getObject(1), i, 0);
//                itemsTbl.setValueAt(rsetTable.getObject(2), i, 1);
//                itemsTbl.setValueAt(DBObject.getDBObject(rsetTable.getObject(3), "-"), i, 2);
//                itemsTbl.setValueAt(rsetTable.getObject(4), i, 3);
//                
//                itemsTbl.setValueAt(rsetTable.getObject(6), i, 6);
//                
//                itemsTbl.setValueAt(rsetTable.getObject(2), i, 3);
//                itemsTbl.setValueAt(rsetTable.getObject(6), i, 4);
//                
//                
//                jTextPane4.setText(rsetTable.getString(7));
//                //  jTable1.setValueAt("0.00", i, 5);
//                // jTable1.setValueAt(rsetTable.getObject(5), i, 6);
//                //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
//                
//                i++;
//                
//            }

//        } catch(java.sql.SQLException sqlExec) {
//            
//            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
//            sqlExec.printStackTrace();
//            
//        }
    }
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
// int j = 0;
        // try {
        //  java.sql.Statement stmt = connectDB.createStatement();
        // java.sql.ResultSet rset = stmt.executeQuery("SELECT count(requisition_no) FROM st_receive_requisation WHERE requisition_no ilike 'PRQ%' and processed = false");

        //   while (rset.next()) {
        //      j = rset.getInt(1);
        //  }
        //  if (j > 0){
        jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct requisition_no as Req_No from st_receive_requisation where requisition_no ILIKE '" + jTextField11111.getText().toString() + "%' and (requisition_no ilike 'IRQ%') ORDER BY requisition_no"));
        //   }
     /*   try {
         searchRowSet1.execute("select distinct order_no as scheme,(supplier) as name from st_orders where order_no ILIKE '"+jTextField1111.getText().toString()+"%' ORDER BY order_no");
      
         itemSearchtbl.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
         new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Order No.", false),
         new org.netbeans.lib.sql.models.TableModel.Column("name", "Supplier", false),
         // new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
         }));
         */

        //   } catch(java.sql.SQLException sqlExec) {
        //      javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        //   }
        jSearchTable11.setShowHorizontalLines(false);
        jSearchScrollPane11.setViewportView(jSearchTable11);

// Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate

    private void prvsIRQTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prvsIRQTxtActionPerformed
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(requisition_no) FROM st_receive_requisation WHERE (requisition_no ilike 'IRQ%' OR requisition_no ilike 'SRQ%') and processed = false");

            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0) {

                searchButton11Clicked();
            } else {
                System.out.println("There are no pending requistions for the selected Department");
            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

// Add your handling code here:
    }//GEN-LAST:event_prvsIRQTxtActionPerformed
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        previousIRQDialog.dispose();
        java.awt.Point point = this.jTextField361.getLocationOnScreen();

        previousIRQDialog.setSize(400, 200);

        previousIRQDialog.setLocation(point);
        previousIRQDialog.setVisible(true);

    }
    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        com.afrisoftech.hospinventory.StockGroupsintfr other = new StockGroupsintfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void issuingStoreCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issuingStoreCmbxActionPerformed
        /*       if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("CLINICAL STORE")){
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select store_name from st_stores order by store_name asc");
         while (rs.next()){
         //   jTable1.setValueAt(rs.getObject(1),i,1);
         jComboBox1.setSelectedItem(rs.getString(1));
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
 
         }
         } else{
 
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select department_name from pb_departments order by department_name asc");
         while (rs.next()){
         //   jTable1.setValueAt(rs.getObject(1),i,1);
         jComboBox1.setSelectedItem(rs.getString(1));
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
 
         }
 
         }
         */
// Add your handling code here:
    }//GEN-LAST:event_issuingStoreCmbxActionPerformed

    private void recipientStoreCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recipientStoreCmbxActionPerformed
        /*      if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Main Store")){
 
         crset31.setCommand("select store_name from st_stores order by store_name asc");
         try {
         crset31.execute();
 
         jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset31, "store_name", null, null, null));
         }catch (java.sql.SQLException sql){}
 
         } else{
         crset31.setCommand("select department_name from pb_departments order by department_name asc");
         try {
         crset31.execute();
 
         jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset31, "store_name", null, null, null));
 
 
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());
 
         }
 
 
         }*/ // Add your handling code here:
    }//GEN-LAST:event_recipientStoreCmbxActionPerformed

    private void removeRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowBtnActionPerformed
        int rows2Delete = itemsTbl.getSelectedRowCount();

        int[] selectedRows = itemsTbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                defTableModel.removeRow(itemsTbl.getSelectedRow());
            }
            if (itemsTbl.getModel().getValueAt(itemsTbl.getSelectedRow(), 4) != null) {
                if (itemsTbl.getSelectedColumn() == itemsTbl.getSelectedColumn()) {
                    double qty = java.lang.Float.parseFloat(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 4).toString());
                    double price = java.lang.Float.parseFloat(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 5).toString());
                    double units = java.lang.Float.parseFloat(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 3).toString());

                    double total = qty * price * units;
                    itemsTbl.setValueAt(total, itemsTbl.getSelectedRow(), 7);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(itemsTbl, 7);
                    jTextField2.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    // jTextField4.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    //  double discount = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable1, 6);

                }

            }
        }        // Add your handling code here:
    }//GEN-LAST:event_removeRowBtnActionPerformed

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.itemsearchdialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void itemSearchtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemSearchtblMouseClicked
        double bal = 0.00;

        itemsTbl.setValueAt(itemSearchtbl.getValueAt(itemSearchtbl.getSelectedRow(), 1), itemsTbl.getSelectedRow(), 1);
        itemsTbl.setValueAt(itemSearchtbl.getValueAt(itemSearchtbl.getSelectedRow(), 3), itemsTbl.getSelectedRow(), 3);
        itemsTbl.setValueAt(itemSearchtbl.getValueAt(itemSearchtbl.getSelectedRow(), 0), itemsTbl.getSelectedRow(), 0);
        itemsTbl.setValueAt(itemSearchtbl.getValueAt(itemSearchtbl.getSelectedRow(), 2), itemsTbl.getSelectedRow(), 2);

        itemsTbl.setValueAt(itemSearchtbl.getValueAt(itemSearchtbl.getSelectedRow(), 4), itemsTbl.getSelectedRow(), 5);
        itemsTbl.setValueAt(java.lang.String.valueOf("0.00"), itemsTbl.getSelectedRow(), 8);
        if (this.jCheckBox1.isSelected()) {
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select sum(QTY) from stock_balance_qty  WHERE item_code ILIKE '" + itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 0) + "' AND department ilike '" + issuingStoreCmbx.getSelectedItem() + "'");
                while (rs.next()) {

                    bal = rs.getDouble(1);
                    itemsTbl.setValueAt(java.lang.String.valueOf(bal), itemsTbl.getSelectedRow(), 6);
                    //jComboBox1.setSelectedItem(rs.getString(1));
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());

            }
        } else {
            itemsTbl.setValueAt(java.lang.String.valueOf("0.00"), itemsTbl.getSelectedRow(), 6);
        }

        int j = 0;

        if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 2) == null) {

            itemsTbl.setValueAt("-", itemsTbl.getSelectedRow(), 2);

        }

        if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 3) == null) {

            itemsTbl.setValueAt("-", itemsTbl.getSelectedRow(), 3);

        }

        itemsearchdialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_itemSearchtblMouseClicked

    private void itemsearchcaretCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemsearchcaretCaretUpdate
        // itemSearchtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct item_code,description,strength,units,buying_price FROM st_stock_item WHERE description ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox2.getSelectedItem().toString()+"%' union all select distinct item_code,description,strength,units,buying_price FROM st_stock_item_others WHERE description ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox2.getSelectedItem().toString()+"%' ORDER BY description"));

        if (itemsearchcaret.getCaretPosition() < 4) {
            System.out.println("Nothing");
        } else {

            itemSearchtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct item_code,description,strength,units,buying_price FROM st_stock_item WHERE (description ILIKE '%" + itemsearchcaret.getText() + "%' OR item_code ILIKE '%" + itemsearchcaret.getText() + "%') AND department ILIKE '" + issuingStoreCmbx.getSelectedItem() + "'    UNION  select distinct product_id,product,strength,units,selling_price FROM st_stock_prices WHERE product ILIKE '%" + itemsearchcaret.getText() + "%' AND department ILIKE '" + issuingStoreCmbx.getSelectedItem() + "' ORDER BY 1"));

            jSearchScrollPane1.setViewportView(itemSearchtbl);

        }

        /*   if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("main store")){
         if(this.jTextField1111.getCaretPosition() < 2){
         System.out.print("Nothing");
         }else{
         
         itemSearchtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct product,units,selling_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox1.getSelectedItem().toString()+"%' ORDER BY product"));
         jSearchScrollPane1.setViewportView(itemSearchtbl);
         System.out.println("Cannot sort out");
         
         }
         }else{
         if(this.jTextField1111.getCaretPosition() < 2){
         System.out.print("Nothing");
         }else{
         itemSearchtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct description,units,buying_price FROM st_stock_item WHERE description ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox2.getSelectedItem().toString()+"%' ORDER BY description"));
         jSearchScrollPane1.setViewportView(itemSearchtbl);
         System.out.println("Cannot sort out");
         
         }
         }*/
        // Add your handling code here:
    }//GEN-LAST:event_itemsearchcaretCaretUpdate

    private void itemsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTblMouseClicked
        if (itemsTbl.getSelectedColumn() == 0) {

            this.cmbox11MouseClicked();
        }           // Add your handling code here:

        // Add your handling code here:
    }//GEN-LAST:event_itemsTblMouseClicked
    private void cmbox11MouseClicked() {
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        itemsearchdialog.setSize(800, 200);
        itemsearchdialog.setLocation(point);
        itemsearchdialog.setVisible(true);
        itemsearchcaret.setText(null);
    }

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
        this.setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_exitbtn1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtn1ActionPerformed
    /* private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
     cmbox2 = new javax.swing.JComboBox();
 
     int i = jTable1.getSelectedRow();
     //   java.lang.Object res_cmbox2 = cmbox3.getSelectedItem();
 
     //  if (!(jTable1.getValueAt(i,0).toString().equals(null))){
     try {
 
     crset1.setConnectionSource(pConnDB);
     crset1.execute("select description from st_stock_item where department = '"+jTable1.getValueAt(i,0).toString()+"' ORDER By description");
 
     cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));
 
     javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Item Description");
 
     seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));
 
     cmbox2.addActionListener(new java.awt.event.ActionListener() {
 
     public void actionPerformed(java.awt.event.ActionEvent evt) {
 
     cmbox2ActionPerformed(evt);
     }
     });
     } catch(java.sql.SQLException sqlExec) {
 
     javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
 
     }
     //  }
     }*/
    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        for (int k = 0; k < itemsTbl.getRowCount(); k++) {
            for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
                itemsTbl.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked

        javax.swing.JFileChooser chooserPortrait = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));

        com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();

        filter.addExtension("req");

        filter.setDescription("Requisition Files");

        chooserPortrait.setFileFilter(filter);

        int returnVal = chooserPortrait.showOpenDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            System.out.println("You chose to open this file: "
                    + chooserPortrait.getSelectedFile().getName());

            filePortrait = chooserPortrait.getSelectedFile();

            this.jTextField1.setText(filePortrait.getName());

            processBrRequisitionFile(filePortrait);
        }

        // Add your handling code here:
    }//GEN-LAST:event_jTextField1MouseClicked

    private void postbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn1ActionPerformed
        javax.swing.JInternalFrame dismth = new StockGroupsintfr(connectDB, pConnDB);
        this.getParent().add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_postbtn1ActionPerformed

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed

        if (!recipientStoreCmbx.getSelectedItem().toString().equalsIgnoreCase("-") && !com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()).before(com.afrisoftech.lib.ServerTime.getSQLDate(connectDB))) {

            System.out.println(jTextField1.getText());
            String description = null;
            String code = null;
            String Stock = null;
            String actCode = null;
            String accountCode = null;
            String transNo = null;
            String transNo2 = null;
            String transNo1 = null;
            String glType = null;
            String user = null;
            String userName = null;
            String glCode = null;
            String units = null;
            String ChkBx = null;
            /*if(this.jCheckBox1.isSelected()){
             ChkBx = this.jCheckBox1.getText();
             }else{
             if(this.jCheckBox2.isSelected()){
             ChkBx = this.jCheckBox2.getText();
             }else{
             ChkBx = this.jCheckBox3.getText();
             }
             }
             */
            ChkBx = "Urgent";
            try {

                connectDB.setAutoCommit(false);

                java.sql.Statement pst2 = connectDB.createStatement();
                java.sql.ResultSet rs = pst2.executeQuery("select current_user");
                while (rs.next()) {
                    userName = rs.getString(1);
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rs2 = ps.executeQuery("select 'IRQ'||lpad(nextval('req_no_seq')::text,7,'0'::text)");
                while (rs2.next()) {
                    transNo = rs2.getObject(1).toString();
                }

                // 
                java.lang.String item = null;

                for (int i = 0; i < itemsTbl.getRowCount(); i++) {
                    if (itemsTbl.getModel().getValueAt(i, 2) != null) {
                        if (itemsTbl.getModel().getValueAt(i, 7) == null) {
                            javax.swing.JOptionPane.showMessageDialog(this, "You must Tab for every Item");

                        } else {

                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_receive_requisation VALUES(?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

                            pstmt.setObject(1, jTextField1.getText());
                            pstmt.setObject(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                            pstmt.setObject(3, recipientStoreCmbx.getSelectedItem());
                            pstmt.setObject(4, itemsTbl.getValueAt(i, 1).toString());
                            pstmt.setObject(5, itemsTbl.getValueAt(i, 3).toString());
                            pstmt.setDouble(6, java.lang.Double.valueOf(itemsTbl.getValueAt(i, 4).toString()));//*java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                            //pstmt.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,4).toString())*java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                            pstmt.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                            pstmt.setDate(8, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                            //pstmt.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                            pstmt.setBoolean(9, false);
                            pstmt.setBoolean(10, false);
                            pstmt.setObject(11, ChkBx);
                            pstmt.setString(12, transNo);
                            pstmt.setDouble(13, java.lang.Double.valueOf(itemsTbl.getValueAt(i, 5).toString()));//java.lang.Double.valueOf(jTable1.getValueAt(i,3).toString()));
                            pstmt.setString(14, userName);
                            pstmt.setObject(15, issuingStoreCmbx.getSelectedItem());
                            pstmt.setDouble(16, 0.00);
                            pstmt.setDouble(17, java.lang.Double.valueOf(itemsTbl.getValueAt(i, 6).toString()));
                            pstmt.setBoolean(18, false);
                            pstmt.setString(19, "-");
                            // pstmt.setObject(20,jComboBox3.getSelectedItem());
                            pstmt.setObject(20, jTextField9.getText());

                            pstmt.setTimestamp(21, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                            pstmt.setString(22, transNo);
                            pstmt.setString(23, jTextPane4.getText());
                            pstmt.setDouble(24, 0.00);
                            pstmt.setObject(25, jComboBox4.getSelectedItem());
                            pstmt.setDouble(26, java.lang.Double.valueOf(itemsTbl.getValueAt(i, 8).toString()));

                            pstmt.setObject(27, "");
                            pstmt.setObject(28, "");
                            pstmt.setObject(29, itemsTbl.getValueAt(i, 0).toString());
                            pstmt.setDouble(30, 0.00);
                            pstmt.setDouble(31, 0.00);
                            pstmt.setObject(32, itemsTbl.getValueAt(i, 2).toString());

                            pstmt.executeUpdate();
                        }
                    } else {
                        //cancelbtn.doClick();
                        // javax.swing.JOptionPane.showMessageDialog(this, "You cant o on every Entry of an Item");

                    }
                }

                connectDB.commit();
                connectDB.setAutoCommit(true);
                jLabel5.setForeground(java.awt.Color.blue);

                java.sql.Statement ps3 = connectDB.createStatement();
                java.sql.ResultSet rs23 = ps3.executeQuery("select requisition_no from st_receive_requisation where requisition_no ilike '" + transNo + "'");
                while (rs23.next()) {
                    transNo2 = rs23.getObject(1).toString();
                }

                javax.swing.JOptionPane.showMessageDialog(this, "S11 Requisition Voucher No. [" + transNo2 + "] generated successfully.", "Confirmation for successful S11 Voucher", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField1.setText("0.00");
                com.afrisoftech.hospinventory.mtrhreports.InternalReqMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.InternalReqMtrhPdf();

                policy.InternalReqMtrhPdf(connectDB, recipientStoreCmbx.getSelectedItem().toString(), transNo);

//                com.afrisoftech.hospinventory.InternalReqPdf policy = new com.afrisoftech.hospinventory.InternalReqPdf();
//
//                policy.InternalReqPdf(connectDB, recipientStoreCmbx.getSelectedItem().toString(), transNo2);
           // com.afrisoftech.hospinventory.InternalReqPdf policy = new com.afrisoftech.hospinventory.InternalReqPdf();

                //policy.InternalReqPdf(connectDB,jComboBox1.getSelectedItem().toString(),transNo);
                for (int k = 0; k < itemsTbl.getRowCount(); k++) {
                    for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
                        itemsTbl.getModel().setValueAt(null, k, r);
                    }
                }

            } catch (java.sql.SQLException sq) {
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select department raising S11 requisition \nIf not available seek assistance from system administrator.\nYou may also need to ensure that date due is later than requisition date.", "Error", JOptionPane.ERROR_MESSAGE);

        }

        // Add your handling code here:
    }//GEN-LAST:event_postbtnActionPerformed

    private void itemsearchcaretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsearchcaretActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsearchcaretActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        // TODO add your handling code here:
        // defaultCloseOperation();
        xmlSerializing();


    }//GEN-LAST:event_resetbtnActionPerformed

    public void xmlSerializing() {

        //ObjectSerialization serializer = new ObjectSerialization();
        //String[] table_contents = itemsTbl.getModel().getValueAt(i, j);
        // DefaultTableModel myTableData =(DefaultTableModel)itemsTbl.getModel();
        try {
            ObjectSerialization.serializeObjectToXML("[" + com.afrisoftech.lib.UserName.getLoginName(connectDB) + "_" + com.afrisoftech.lib.ServerTime.serverDate(connectDB).toString() + "].req", this.itemsTbl.getModel());
        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(RcvBranchRequisintfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void defaultCloseOperation() {

        java.io.File requisFile;

        java.io.FileOutputStream requistOutStream;

        java.io.ObjectOutputStream requisObjStream;

        try {

            //if (querykiwiTextPanel.getText().toCharArray().length > 0) {
            requisFile = java.io.File.createTempFile(com.afrisoftech.lib.UserName.getLoginName(connectDB) + "_" + com.afrisoftech.lib.ServerTime.serverDate(connectDB).toString(), ".req", new java.io.File(System.getProperty("user.dir")));

            System.out.println("[" + com.afrisoftech.lib.UserName.getLoginName(connectDB).toUpperCase() + "_" + com.afrisoftech.lib.ServerTime.serverDate(connectDB).toString() + "].req");
            //          requisFile.deleteOnExit();

            requistOutStream = new java.io.FileOutputStream(requisFile);

            requisObjStream = new java.io.ObjectOutputStream(requistOutStream);

            requisObjStream.writeObject(itemsTbl.getModel());

            requisObjStream.flush();

            //   itemsTbl.se
//            } else {
//                
//                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Can't serialize an empty query!", "Warning on empty query", javax.swing.JOptionPane.ERROR_MESSAGE);
//                
//            }
            //            requisObjStream.writeObject(jTable11);
        } catch (java.io.IOException IOexec) {

            javax.swing.JOptionPane.showMessageDialog(this, IOexec.getMessage());
            IOexec.printStackTrace();

        }

    }

    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        int i = itemsTbl.getSelectedRow();
        java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();

        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select units from st_stock_item where description = '" + cmbox2.getSelectedItem() + "'");
            while (rs.next()) {
                itemsTbl.setValueAt(rs.getObject(1), i, 2);
            }

        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
    }

    private void cmBox1ActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void processBrRequisitionFile(java.io.File filePortrait2Process) {

        this.invalidate();

        try {

            try {

                java.io.FileInputStream requisFileIOStream = new java.io.FileInputStream(filePortrait2Process);

                System.out.println(requisFileIOStream.read());

                java.io.ObjectInputStream requisObjInStream = new java.io.ObjectInputStream(requisFileIOStream);

                javax.swing.JTable requisTable = (javax.swing.JTable) requisObjInStream.readObject();

                javax.swing.JTable requisTable2 = (javax.swing.JTable) requisObjInStream.readObject();

                //  jScrollPane1.setViewportView(requisTable);
                jScrollPane1.setViewportView(requisTable2);

                itemsTbl.setModel(requisTable2.getModel());

                //jTable11.setModel(requisTable2.getModel());
                this.validate();

            } catch (java.lang.ClassNotFoundException cnfExec) {

                javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());

            }

        } catch (java.io.IOException ioExec) {

            javax.swing.JOptionPane.showMessageDialog(this, ioExec.getMessage());

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JButton exitbtn;
    private javax.swing.JButton exitbtn1;
    private javax.swing.JComboBox issuingStoreCmbx;
    private javax.swing.JTable itemSearchtbl;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JTextField itemsearchcaret;
    private javax.swing.JDialog itemsearchdialog;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton91;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField361;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JButton postbtn;
    private javax.swing.JButton postbtn1;
    private javax.swing.JDialog previousIRQDialog;
    private javax.swing.JButton prvsIRQTxt;
    private javax.swing.JComboBox recipientStoreCmbx;
    private javax.swing.JButton removeRowBtn;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton resetbtn1;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

}
