/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */
package com.afrisoftech.hospinventory;

/**
 *
 * @author root
 */
public class OrderingConsIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form countryintfr
     */
    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public OrderingConsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        saveDataBtn = new javax.swing.JButton();
        editDataBtn = new javax.swing.JButton();
        clearFormBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        reorderlevelConstantsPanel = new javax.swing.JPanel();
        averageDaysLbl = new javax.swing.JLabel();
        movingAverageDaysTxt = new javax.swing.JTextField();
        leadTimeLbl = new javax.swing.JLabel();
        orderLeadTimeTxt = new javax.swing.JTextField();
        reorderBufferDaysLbl = new javax.swing.JLabel();
        bufferStockDaysTxt = new javax.swing.JTextField();
        expiryThresholdLbl = new javax.swing.JLabel();
        expiryThreshHoldDaysTxt = new javax.swing.JTextField();
        helpBtn = new javax.swing.JButton();
        spacerlabel = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Inventory : Re-Order Level Constants");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        saveDataBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        saveDataBtn.setMnemonic('O');
        saveDataBtn.setText("Save Data");
        saveDataBtn.setToolTipText("Click here to enter data");
        saveDataBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveDataBtnMouseClicked(evt);
            }
        });
        saveDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(saveDataBtn, gridBagConstraints);

        editDataBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif"))); // NOI18N
        editDataBtn.setMnemonic('E');
        editDataBtn.setText("Edit");
        editDataBtn.setToolTipText("Click here to edit");
        editDataBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editDataBtnMouseClicked(evt);
            }
        });
        editDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDataBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(editDataBtn, gridBagConstraints);

        clearFormBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        clearFormBtn.setMnemonic('l');
        clearFormBtn.setText("Clear");
        clearFormBtn.setToolTipText("Click here to clear fields");
        clearFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBtnActionPerformed(evt);
            }
        });
        clearFormBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearFormBtnMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(clearFormBtn, gridBagConstraints);

        closeFormBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
        closeFormBtn.setMnemonic('C');
        closeFormBtn.setText("Close");
        closeFormBtn.setToolTipText("Click here to close");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        closeFormBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeFormBtnMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(closeFormBtn, gridBagConstraints);

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(statusLabel, gridBagConstraints);

        reorderlevelConstantsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Avg & lead time Constants  here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10))); // NOI18N
        reorderlevelConstantsPanel.setLayout(new java.awt.GridBagLayout());

        averageDaysLbl.setText("Average (Days)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        reorderlevelConstantsPanel.add(averageDaysLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 49);
        reorderlevelConstantsPanel.add(movingAverageDaysTxt, gridBagConstraints);

        leadTimeLbl.setText("Lead Time (Days)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        reorderlevelConstantsPanel.add(leadTimeLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        reorderlevelConstantsPanel.add(orderLeadTimeTxt, gridBagConstraints);

        reorderBufferDaysLbl.setText("Re-Order Level (Days)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        reorderlevelConstantsPanel.add(reorderBufferDaysLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 48);
        reorderlevelConstantsPanel.add(bufferStockDaysTxt, gridBagConstraints);

        expiryThresholdLbl.setText("Expiry Threshold (Days)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        reorderlevelConstantsPanel.add(expiryThresholdLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 49);
        reorderlevelConstantsPanel.add(expiryThreshHoldDaysTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        getContentPane().add(reorderlevelConstantsPanel, gridBagConstraints);

        helpBtn.setMnemonic('H');
        helpBtn.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(helpBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(spacerlabel, gridBagConstraints);

        setBounds(0, 0, 600, 350);
    }// </editor-fold>//GEN-END:initComponents

    private void saveDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataBtnActionPerformed
        try {
            java.sql.PreparedStatement pstmt311z = connectDB.prepareStatement("delete from st_ordering_constants");
            pstmt311z.executeUpdate();

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into st_ordering_constants values(?, ?, ?, ?)");
            if (movingAverageDaysTxt.getText().length() < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "You must enter average period in days", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else {
                pstmt.setDouble(1, java.lang.Double.valueOf(movingAverageDaysTxt.getText()));
            }
            if (orderLeadTimeTxt.getText().length() < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "You must enter lead time in days", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else {
                pstmt.setDouble(2, java.lang.Double.valueOf(orderLeadTimeTxt.getText()));
            }
            if (bufferStockDaysTxt.getText().length() < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "You must enter re-order level lead time in days", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else {
                pstmt.setDouble(3, java.lang.Double.valueOf(bufferStockDaysTxt.getText()));
            }
            if (expiryThreshHoldDaysTxt.getText().length() > 0) {
                pstmt.setInt(4, Integer.parseInt(expiryThreshHoldDaysTxt.getText()));
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "You must expiry threshold lead time in days", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
            pstmt.executeUpdate();
            statusLabel.setForeground(java.awt.Color.blue);
            statusLabel.setText("Inventory re-order control indicators registered successfully.");
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sq.getMessage());
            statusLabel.setForeground(java.awt.Color.red);
            statusLabel.setText("ERROR: Please check your entries and try again");
        } // Add your handling code here:
    }//GEN-LAST:event_saveDataBtnActionPerformed

    private void editDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDataBtnActionPerformed
        try {

            java.sql.Statement pstmt1 = connectDB.createStatement();
            java.sql.ResultSet rs1 = pstmt1.executeQuery("select average_day,lead_time,reorder_level,expiry_days from st_ordering_constants"); 

            while (rs1.next()) {
                movingAverageDaysTxt.setText(String.valueOf(Integer.getInteger(rs1.getString(1))));
                orderLeadTimeTxt.setText(String.valueOf(Integer.getInteger(rs1.getString(2))));
                bufferStockDaysTxt.setText(String.valueOf(Integer.getInteger(rs1.getString(3))));
                expiryThreshHoldDaysTxt.setText(String.valueOf(Integer.getInteger(rs1.getString(4))));
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sq.getMessage());
            statusLabel.setForeground(java.awt.Color.red);
            statusLabel.setText("Sorry. Select not Done");
        }
        //   javax.swing.JFrame country = new OrderingConstants(connectDB, pConnDB) ;
        // country.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_editDataBtnActionPerformed

    private void clearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBtnActionPerformed
        movingAverageDaysTxt.setText("");
        orderLeadTimeTxt.setText("");    // Add your handling code here:
    }//GEN-LAST:event_clearFormBtnActionPerformed

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void saveDataBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDataBtnMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_saveDataBtnMouseClicked

    private void editDataBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editDataBtnMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_editDataBtnMouseClicked

    private void clearFormBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearFormBtnMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_clearFormBtnMouseClicked

    private void closeFormBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeFormBtnMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_closeFormBtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel averageDaysLbl;
    private javax.swing.JTextField bufferStockDaysTxt;
    private javax.swing.JButton clearFormBtn;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JButton editDataBtn;
    private javax.swing.JTextField expiryThreshHoldDaysTxt;
    private javax.swing.JLabel expiryThresholdLbl;
    private javax.swing.JButton helpBtn;
    private javax.swing.JLabel leadTimeLbl;
    private javax.swing.JTextField movingAverageDaysTxt;
    private javax.swing.JTextField orderLeadTimeTxt;
    private javax.swing.JLabel reorderBufferDaysLbl;
    private javax.swing.JPanel reorderlevelConstantsPanel;
    private javax.swing.JButton saveDataBtn;
    private javax.swing.JLabel spacerlabel;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

}
