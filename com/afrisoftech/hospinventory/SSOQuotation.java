/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.SQLDateFormat;
import com.afrisoftech.lib.TableColumnTotal;
import com.afrisoftech.lib.UserName;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sytem partners
 */
public class SSOQuotation extends javax.swing.JPanel {

    /**
     * Creates new form SSOQuotationProcess
     */
    int num_val = 0;
    int num_of_prs = 0;
    String pur_req = null;
    JPanel MainPanellToLoad = null;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    Vector money = new Vector();

    public SSOQuotation(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        try {
            connectDB = connDb;

            pConnDB = pconnDB;

            initComponents();

            WaitingPatientsThread waitingPatientsThread = new WaitingPatientsThread();

            waitingPatientsThread.start();

            java.sql.PreparedStatement headr = connectDB.prepareStatement("select header_name from pb_header");
            ResultSet pop = headr.executeQuery();
            while (pop.next()) {

                jTextPane1.setText(pop.getObject(1).toString());
                jTextPane2.setText(pop.getObject(1).toString());
                jTextPane3.setText(pop.getObject(1).toString());
                jTextPane4.setText(pop.getObject(1).toString());
            }
        } catch (SQLException ex) {
            Logger.getLogger(SSOQuotation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton43 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        dispatchQs = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        searchquottxt = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        supplier2dispatch = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jLabel39 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        receiveRFPs = new javax.swing.JDialog();
        jSearchPanel4 = new javax.swing.JPanel();
        jTextField1113 = new javax.swing.JTextField();
        jSearchScrollPane4 = new javax.swing.JScrollPane();
        jSearchTable4 = new com.afrisoftech.dbadmin.JTable();
        jButton44 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jSearchDialog5 = new javax.swing.JDialog();
        jSearchPanel5 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane5 = new javax.swing.JScrollPane();
        jSearchTable5 = new com.afrisoftech.dbadmin.JTable();
        jButton45 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        searchPR = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField111111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton5111 = new javax.swing.JButton();
        jSearchDialog112 = new javax.swing.JDialog();
        jSearchPanel112 = new javax.swing.JPanel();
        jTextField111112 = new javax.swing.JTextField();
        jSearchScrollPane112 = new javax.swing.JScrollPane();
        jSearchTable112 = new com.afrisoftech.dbadmin.JTable();
        jButton5112 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel6 = new javax.swing.JPanel();
        jTextField115 = new javax.swing.JTextField();
        jSearchScrollPane6 = new javax.swing.JScrollPane();
        jSearchTable6 = new com.afrisoftech.dbadmin.JTable();
        jButton46 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        QuotationFinEvaluationSbx = new javax.swing.JDialog();
        tenderrecordspnlt = new javax.swing.JPanel();
        tenderrecordstxtt = new javax.swing.JTextField();
        tenderrecordsspnlt = new javax.swing.JScrollPane();
        tenderrecordstblt = new com.afrisoftech.dbadmin.JTable();
        closebtnt = new javax.swing.JButton();
        jSearchDialog13 = new javax.swing.JDialog();
        jSearchPanel7 = new javax.swing.JPanel();
        jTextField1114 = new javax.swing.JTextField();
        jSearchScrollPane7 = new javax.swing.JScrollPane();
        jSearchTable7 = new com.afrisoftech.dbadmin.JTable();
        jButton47 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jSearchDialog14 = new javax.swing.JDialog();
        jSearchPanel8 = new javax.swing.JPanel();
        jTextField1115 = new javax.swing.JTextField();
        jSearchScrollPane8 = new javax.swing.JScrollPane();
        jSearchTable8 = new com.afrisoftech.dbadmin.JTable();
        jButton48 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        searchtorder = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1118 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton61 = new javax.swing.JButton();
        searchtorder1 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField1119 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton62 = new javax.swing.JButton();
        passwd = new javax.swing.JDialog();
        jPanel56 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPasswordField5 = new javax.swing.JPasswordField();
        jButton12 = new javax.swing.JButton();
        encrptedpasswordDialog = new javax.swing.JDialog();
        jPanel25 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPasswordField4 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        postbtn1 = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        openingdpckr = new com.afrisoftech.lib.DatePicker();
        floatedDate = new com.afrisoftech.lib.DatePicker();
        jPanel10 = new javax.swing.JPanel();
        prno = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        quoteNocmbx = new javax.swing.JComboBox();
        jPanel37 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        postbtn2 = new javax.swing.JButton();
        resetbtn1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        quotation_notxt = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        jPanel15 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        supplTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        postbtn3 = new javax.swing.JButton();
        resetbtn2 = new javax.swing.JButton();
        cancelbtn2 = new javax.swing.JButton();
        exitbtn2 = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new com.afrisoftech.dbadmin.JTable();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jTextField38 = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jLabel17 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        datePicker5 = new com.afrisoftech.lib.DatePicker();
        jLabel19 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        supplieerTxt = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        postbtn4 = new javax.swing.JButton();
        resetbtn3 = new javax.swing.JButton();
        cancelbtn3 = new javax.swing.JButton();
        exitbtn3 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        itemsTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel29 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        TenderNoTxt = new javax.swing.JTextField();
        searchButton6 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jLabel25 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel35 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        datePicker6 = new com.afrisoftech.lib.DatePicker();
        jLabel29 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        suppliertxt = new javax.swing.JTextField();
        searchButton7 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        TechnicalEvaluationPane = new javax.swing.JPanel();
        EvaluationTypePane = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        TechnicalEvalutionMainPane = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        actionPanel = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        MainPanel = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel39 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable3 = new com.afrisoftech.dbadmin.JTable();
        jPanel40 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel44 = new javax.swing.JPanel();
        jTextField39 = new javax.swing.JTextField();
        searchButton5 = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable4 = new com.afrisoftech.dbadmin.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel3.add(jTextField1112, gridBagConstraints);

        jSearchTable3.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable3.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });
        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton43.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton43, gridBagConstraints);

        jButton53.setText("Close");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton53, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel3, gridBagConstraints);

        dispatchQs.setModal(true);
        dispatchQs.setUndecorated(true);
        dispatchQs.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        searchquottxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchquottxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(searchquottxt, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton41, gridBagConstraints);

        jButton51.setText("Close");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dispatchQs.getContentPane().add(jSearchPanel1, gridBagConstraints);

        supplier2dispatch.setModal(true);
        supplier2dispatch.setUndecorated(true);
        supplier2dispatch.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        supplier2dispatch.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setTitle("Approve LPO/LSO");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setLocationByPlatform(true);
        jDialog1.setMinimumSize(new java.awt.Dimension(300, 150));
        jDialog1.setModal(true);
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel39.setText("Authorising Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jLabel39, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jDialog1.getContentPane().add(jPasswordField1, gridBagConstraints);

        jButton1.setText("Generate an LPO/LSO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jDialog1.getContentPane().add(jButton2, gridBagConstraints);

        receiveRFPs.setModal(true);
        receiveRFPs.setUndecorated(true);
        receiveRFPs.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel4.setLayout(new java.awt.GridBagLayout());

        jTextField1113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel4.add(jTextField1113, gridBagConstraints);

        jSearchTable4.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable4MouseClicked(evt);
            }
        });
        jSearchScrollPane4.setViewportView(jSearchTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel4.add(jSearchScrollPane4, gridBagConstraints);

        jButton44.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton44, gridBagConstraints);

        jButton54.setText("Close");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton54, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        receiveRFPs.getContentPane().add(jSearchPanel4, gridBagConstraints);

        jSearchDialog5.setModal(true);
        jSearchDialog5.setUndecorated(true);
        jSearchDialog5.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel5.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel5.add(jTextField114, gridBagConstraints);

        jSearchTable5.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable5.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable5MouseClicked(evt);
            }
        });
        jSearchScrollPane5.setViewportView(jSearchTable5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel5.add(jSearchScrollPane5, gridBagConstraints);

        jButton45.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton45, gridBagConstraints);

        jButton55.setText("Close");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton55, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog5.getContentPane().add(jSearchPanel5, gridBagConstraints);

        searchPR.setModal(true);
        searchPR.setUndecorated(true);
        searchPR.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jTextField111111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel111.add(jTextField111111, gridBagConstraints);

        jSearchTable111.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable111.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });
        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton5111.setText("Close");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchPR.getContentPane().add(jSearchPanel111, gridBagConstraints);

        jSearchDialog112.setModal(true);
        jSearchDialog112.setUndecorated(true);
        jSearchDialog112.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel112.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel112.setLayout(new java.awt.GridBagLayout());

        jTextField111112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111112CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel112.add(jTextField111112, gridBagConstraints);

        jSearchTable112.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable112.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable112.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable112MouseClicked(evt);
            }
        });
        jSearchScrollPane112.setViewportView(jSearchTable112);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel112.add(jSearchScrollPane112, gridBagConstraints);

        jButton5112.setText("Close");
        jButton5112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel112.add(jButton5112, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog112.getContentPane().add(jSearchPanel112, gridBagConstraints);

        jSearchDialog3.setModal(true);
        jSearchDialog3.setUndecorated(true);
        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField115.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField115CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel6.add(jTextField115, gridBagConstraints);

        jSearchTable6.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable6.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable6MouseClicked(evt);
            }
        });
        jSearchScrollPane6.setViewportView(jSearchTable6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel6.add(jSearchScrollPane6, gridBagConstraints);

        jButton46.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel6.add(jButton46, gridBagConstraints);

        jButton56.setText("Close");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel6.add(jButton56, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel6, gridBagConstraints);

        QuotationFinEvaluationSbx.setModal(true);
        QuotationFinEvaluationSbx.setUndecorated(true);
        QuotationFinEvaluationSbx.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnlt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnlt.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxtt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxttCaretUpdate(evt);
            }
        });
        tenderrecordstxtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnlt.add(tenderrecordstxtt, gridBagConstraints);

        tenderrecordstblt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstblt.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstblt.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstblt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbltMouseClicked(evt);
            }
        });
        tenderrecordsspnlt.setViewportView(tenderrecordstblt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnlt.add(tenderrecordsspnlt, gridBagConstraints);

        closebtnt.setText("Close");
        closebtnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtntActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnlt.add(closebtnt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        QuotationFinEvaluationSbx.getContentPane().add(tenderrecordspnlt, gridBagConstraints);

        jSearchDialog13.setModal(true);
        jSearchDialog13.setUndecorated(true);
        jSearchDialog13.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel7.setLayout(new java.awt.GridBagLayout());

        jTextField1114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel7.add(jTextField1114, gridBagConstraints);

        jSearchTable7.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable7.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable7MouseClicked(evt);
            }
        });
        jSearchScrollPane7.setViewportView(jSearchTable7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel7.add(jSearchScrollPane7, gridBagConstraints);

        jButton47.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel7.add(jButton47, gridBagConstraints);

        jButton57.setText("Close");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel7.add(jButton57, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog13.getContentPane().add(jSearchPanel7, gridBagConstraints);

        jSearchDialog14.setModal(true);
        jSearchDialog14.setUndecorated(true);
        jSearchDialog14.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel8.setLayout(new java.awt.GridBagLayout());

        jTextField1115.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1115CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel8.add(jTextField1115, gridBagConstraints);

        jSearchTable8.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable8.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable8MouseClicked(evt);
            }
        });
        jSearchScrollPane8.setViewportView(jSearchTable8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel8.add(jSearchScrollPane8, gridBagConstraints);

        jButton48.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel8.add(jButton48, gridBagConstraints);

        jButton58.setText("Close");
        jButton58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton58ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel8.add(jButton58, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog14.getContentPane().add(jSearchPanel8, gridBagConstraints);

        searchtorder.setModal(true);
        searchtorder.setUndecorated(true);
        searchtorder.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField1118.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1118CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField1118, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton61.setText("Close");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton61, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtorder.getContentPane().add(jSearchPanel11, gridBagConstraints);

        searchtorder1.setModal(true);
        searchtorder1.setUndecorated(true);
        searchtorder1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        jTextField1119.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1119CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel12.add(jTextField1119, gridBagConstraints);

        jSearchTable12.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable12.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });
        jSearchScrollPane12.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton62.setText("Close");
        jButton62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton62ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton62, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtorder1.getContentPane().add(jSearchPanel12, gridBagConstraints);

        passwd.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        passwd.setModal(true);
        passwd.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel56.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Authorisation Password Here"));
        jPanel56.setAutoscrolls(true);
        jPanel56.setLayout(new java.awt.GridBagLayout());

        jButton17.setText("Approve Authorisation");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton17, gridBagConstraints);

        jButton18.setText("Close Dialog");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton18, gridBagConstraints);

        jPasswordField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 50);
        jPanel56.add(jPasswordField5, gridBagConstraints);

        jButton12.setText("Change Password");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel56.add(jButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        passwd.getContentPane().add(jPanel56, gridBagConstraints);

        encrptedpasswordDialog.setTitle("Changing User password");
        encrptedpasswordDialog.setModal(true);
        encrptedpasswordDialog.setResizable(false);
        encrptedpasswordDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                encrptedpasswordDialogcloseDialog(evt);
            }
        });
        encrptedpasswordDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel25.setBackground(new java.awt.Color(230, 230, 230));
        jPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel25.setLayout(new java.awt.GridBagLayout());

        jLabel21.setText("New Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel25.add(jLabel21, gridBagConstraints);

        jLabel22.setText("Retype New Pasword");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel25.add(jLabel22, gridBagConstraints);

        jLabel33.setText("Current Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel25.add(jLabel33, gridBagConstraints);

        jPasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel25.add(jPasswordField2, gridBagConstraints);

        jPasswordField3.setToolTipText("Must be aleast 8 characters long.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel25.add(jPasswordField3, gridBagConstraints);

        jPasswordField4.setToolTipText("Same as \"New Password\" above.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel25.add(jPasswordField4, gridBagConstraints);

        jLabel3.setText("Limit Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel25.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel25.add(jTextField2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel25, gridBagConstraints);

        jPanel26.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel26.setLayout(new java.awt.GridBagLayout());

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Change your password here.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(jLabel34, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel26, gridBagConstraints);

        jPanel36.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel36.setLayout(new java.awt.GridBagLayout());

        jButton7.setMnemonic('n');
        jButton7.setText("Cancel");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel36.add(jButton7, gridBagConstraints);

        jButton8.setMnemonic('C');
        jButton8.setText("Change Password");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel36.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        encrptedpasswordDialog.getContentPane().add(jPanel36, gridBagConstraints);

        setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel6.setAutoscrolls(true);
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(new java.awt.GridBagLayout());

        postbtn1.setMnemonic('P');
        postbtn1.setText("Float Quotation");
        postbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(postbtn1, gridBagConstraints);

        resetbtn.setMnemonic('R');
        resetbtn.setText("RemoveRow");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(resetbtn, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(cancelbtn, gridBagConstraints);

        exitbtn.setMnemonic('C');
        exitbtn.setText("Close");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel7.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel6.add(jPanel7, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Item Description", "Units", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setNextFocusableComponent(postbtn1);
        jTable1.setRowHeight(20);
        jTable1.setSurrendersFocusOnKeystroke(true);

        /*              try {

            crset3.setConnectionSource(pConnDB);
            crset3.execute("select department_name from pb_departments order by department_name");

            cmbox3.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "department_name", null, null,null));

            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Cost Center");

            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox3));

            //  cmbox3.addActionListener(new java.awt.event.ActionListener() {

                //  public void actionPerformed(java.awt.event.ActionEvent evt) {

                    //       cmbox3ActionPerformed(evt);
                    //  }
                //});
    } catch(java.sql.SQLException sqlExec) {

        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }
    */

    javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 4; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 1) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {
            if (i == 0) {
                column.setPreferredWidth(50);
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(50);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
    }
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel8.add(jScrollPane1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel6.add(jPanel8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 9.0;
    jPanel1.add(jPanel6, gridBagConstraints);

    jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Restricted Tender Details"));
    jPanel9.setLayout(new java.awt.GridBagLayout());

    jLabel6.setForeground(new java.awt.Color(255, 0, 51));
    jLabel6.setText("Quotation Opening/Closing date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel9.add(jLabel6, gridBagConstraints);

    jTextField6.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jPanel9.add(jTextField6, gridBagConstraints);

    jLabel8.setText("Quotation Date(*Date quotation was floated)");
    jLabel8.setPreferredSize(new java.awt.Dimension(1000, 500));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel9.add(jLabel8, gridBagConstraints);

    jTextPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer Address Here"));
    jScrollPane3.setViewportView(jTextPane1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
    jPanel9.add(jScrollPane3, gridBagConstraints);

    jLabel4.setForeground(new java.awt.Color(255, 0, 51));
    jLabel4.setText("Dept. Raising PR");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel9.add(jLabel4, gridBagConstraints);

    jLabel1.setForeground(new java.awt.Color(255, 0, 51));
    jLabel1.setText("Search PR");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel9.add(jLabel1, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel9.add(openingdpckr, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel9.add(floatedDate, gridBagConstraints);

    jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel10.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel10.setLayout(new java.awt.GridBagLayout());

    prno.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel10.add(prno, gridBagConstraints);

    searchButton1.setToolTipText("Search Patient's Name");
    searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    jPanel10.add(searchButton1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
    jPanel9.add(jPanel10, gridBagConstraints);

    jLabel7.setForeground(new java.awt.Color(255, 0, 51));
    jLabel7.setText("Quotation");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    jPanel9.add(jLabel7, gridBagConstraints);

    quoteNocmbx.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    quoteNocmbx.setForeground(new java.awt.Color(0, 51, 255));
    quoteNocmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT DISTINCT ref_no FROM st_tenders WHERE  ref_no ILIKE '%/Q/%' and closed= false "));
    quoteNocmbx.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            quoteNocmbxItemStateChanged(evt);
        }
    });
    quoteNocmbx.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            quoteNocmbxActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel9.add(quoteNocmbx, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    jPanel1.add(jPanel9, gridBagConstraints);

    jPanel37.setLayout(new java.awt.GridBagLayout());

    jScrollPane2.setBackground(new java.awt.Color(102, 255, 204));
    jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Requisitions assigned to "+UserName.getLoginName(connectDB)));
    jScrollPane2.setForeground(new java.awt.Color(0, 0, 0));

    jTable2.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
    jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no and  bs.assigned_by is not null and st.monthly_usage='Quotation' and st.mode_of_purchase_approved=true and bs.buyer=current_user and st.mode_of_purchase_approved=true and st.requisition_no not IN (select  DISTINCT substring (IRQ_NO ,1 ,9) from st_item_to_quote )  order by 1"));
    jTable2.setGridColor(new java.awt.Color(0, 0, 204));
    jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable2MouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(jTable2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(jScrollPane2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jPanel37, gridBagConstraints);

    jTabbedPane1.addTab("Enter Quotation Details", jPanel1);

    jPanel2.setLayout(new java.awt.GridBagLayout());

    jPanel11.setLayout(new java.awt.GridBagLayout());

    jPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel31.setLayout(new java.awt.GridBagLayout());

    postbtn2.setText("Dispatch quotations");
    postbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(postbtn2, gridBagConstraints);

    resetbtn1.setMnemonic('R');
    resetbtn1.setText("RemoveRow");
    resetbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(resetbtn1, gridBagConstraints);

    cancelbtn1.setMnemonic('l');
    cancelbtn1.setText("Clear");
    cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(cancelbtn1, gridBagConstraints);

    exitbtn1.setMnemonic('c');
    exitbtn1.setText("Close");
    exitbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(exitbtn1, gridBagConstraints);

    jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel31.add(jLabel51, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel11.add(jPanel31, gridBagConstraints);

    jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel21.setLayout(new java.awt.GridBagLayout());

    jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable11.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity"
        }
    ));
    jTable11.setNextFocusableComponent(postbtn1);
    jTable11.setRowHeight(20);
    jTable11.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column1 = null;
    for (int i = 0; i < 5; i++) {
        column1 = jTable11.getColumnModel().getColumn(i);
        if (i == 0) {

            column1.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column1.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column1.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane11.setViewportView(jTable11);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel21.add(jScrollPane11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel11.add(jPanel21, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jTextField9, gridBagConstraints);
    */
    jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel12.setLayout(new java.awt.GridBagLayout());

    jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel13.setLayout(new java.awt.GridBagLayout());

    jLabel9.setText("Quotation No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel13.add(jLabel9, gridBagConstraints);

    jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel14.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel14.setLayout(new java.awt.GridBagLayout());

    quotation_notxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(quotation_notxt, gridBagConstraints);

    searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton2.setToolTipText("Search Patient's Name");
    searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel14.add(searchButton2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel13.add(jPanel14, gridBagConstraints);

    jTextField1.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jTextField1, gridBagConstraints);

    jLabel10.setText("Quotation Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel13.add(jLabel10, gridBagConstraints);

    jLabel11.setText("Opening Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel13.add(jLabel11, gridBagConstraints);

    jTextField4.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jTextField4, gridBagConstraints);

    jLabel12.setText("Dispatch Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel13.add(jLabel12, gridBagConstraints);

    datePicker4.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel13.add(datePicker4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel12.add(jPanel13, gridBagConstraints);

    jPanel15.setLayout(new java.awt.GridBagLayout());

    jLabel13.setText("Send Quotation To");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel15.add(jLabel13, gridBagConstraints);

    jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel41.setLayout(new java.awt.GridBagLayout());

    supplTxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel41.add(supplTxt, gridBagConstraints);

    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton.setToolTipText("Search");
    searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel41.add(searchButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel15.add(jPanel41, gridBagConstraints);

    jLabel14.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel15.add(jLabel14, gridBagConstraints);

    jTextField9.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel15.add(jTextField9, gridBagConstraints);

    jTextPane2.setEditable(false);
    jTextPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
    jScrollPane4.setViewportView(jTextPane2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    jPanel15.add(jScrollPane4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel12.add(jPanel15, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel11.add(jPanel12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jPanel11, gridBagConstraints);

    jTabbedPane1.addTab("Dispatch Quotation", jPanel2);

    jPanel3.setLayout(new java.awt.GridBagLayout());

    jPanel16.setLayout(new java.awt.GridBagLayout());

    jPanel32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel32.setLayout(new java.awt.GridBagLayout());

    postbtn3.setText("Save quotation offers and pricing");
    postbtn3.setPreferredSize(new java.awt.Dimension(1000, 500));
    postbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(postbtn3, gridBagConstraints);

    resetbtn2.setMnemonic('R');
    resetbtn2.setText("RemoveRow");
    resetbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(resetbtn2, gridBagConstraints);

    cancelbtn2.setMnemonic('l');
    cancelbtn2.setText("Clear");
    cancelbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(cancelbtn2, gridBagConstraints);

    exitbtn2.setMnemonic('c');
    exitbtn2.setText("Close");
    exitbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(exitbtn2, gridBagConstraints);

    jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel32.add(jLabel52, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel16.add(jPanel32, gridBagConstraints);

    jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel22.setLayout(new java.awt.GridBagLayout());

    jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable12.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity", "Unit Price", "Delivery days(numeric)", "Remarks"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, true, true, true
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable12.setNextFocusableComponent(postbtn1);
    jTable12.setRowHeight(20);
    jTable12.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    /*javax.swing.table.TableColumn column24 = null;
    for (int i = 0; i < 10; i++) {
        column24 = jTable12.getColumnModel().getColumn(i);
        if (i == 0) {

            column24.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column24.setPreferredWidth(200);
            } else {
                //if (i == 2) {
                    column24.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }*/
    jScrollPane12.setViewportView(jTable12);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel22.add(jScrollPane12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel16.add(jPanel22, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jTextField9, gridBagConstraints);
    */
    jPanel17.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel17.setLayout(new java.awt.GridBagLayout());

    jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel18.setLayout(new java.awt.GridBagLayout());

    jLabel15.setText("Quotation No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel18.add(jLabel15, gridBagConstraints);

    jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel19.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel19.setLayout(new java.awt.GridBagLayout());

    jTextField38.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel19.add(jTextField38, gridBagConstraints);

    searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton3.setToolTipText("Search Patient's Name");
    searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel19.add(searchButton3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel18.add(jPanel19, gridBagConstraints);

    jTextField5.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel18.add(jTextField5, gridBagConstraints);

    jLabel16.setText("Quotation Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel18.add(jLabel16, gridBagConstraints);

    jTextPane3.setEditable(false);
    jTextPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
    jScrollPane5.setViewportView(jTextPane3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel18.add(jScrollPane5, gridBagConstraints);

    jLabel17.setText("Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel18.add(jLabel17, gridBagConstraints);

    jTextField8.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel18.add(jTextField8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel17.add(jPanel18, gridBagConstraints);

    jPanel20.setLayout(new java.awt.GridBagLayout());

    jLabel18.setText("Returned on");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel20.add(jLabel18, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel20.add(datePicker5, gridBagConstraints);

    jLabel19.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel20.add(jLabel19, gridBagConstraints);

    jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel42.setLayout(new java.awt.GridBagLayout());

    supplieerTxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel42.add(supplieerTxt, gridBagConstraints);

    searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton4.setToolTipText("Search");
    searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel42.add(searchButton4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel20.add(jPanel42, gridBagConstraints);

    jLabel20.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel20.add(jLabel20, gridBagConstraints);

    jTextField10.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel20.add(jTextField10, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel17.add(jPanel20, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel16.add(jPanel17, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel3.add(jPanel16, gridBagConstraints);

    jTabbedPane1.addTab("Recieve Returned RFPs", jPanel3);

    jPanel5.setLayout(new java.awt.GridBagLayout());

    jPanel27.setLayout(new java.awt.GridBagLayout());

    jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel33.setLayout(new java.awt.GridBagLayout());

    postbtn4.setText("Send LPO/LSO for Approvals");
    postbtn4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(postbtn4, gridBagConstraints);

    resetbtn3.setMnemonic('R');
    resetbtn3.setText("RemoveRow");
    resetbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(resetbtn3, gridBagConstraints);

    cancelbtn3.setMnemonic('l');
    cancelbtn3.setText("Clear form");
    cancelbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(cancelbtn3, gridBagConstraints);

    exitbtn3.setMnemonic('c');
    exitbtn3.setText("Close form");
    exitbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(exitbtn3, gridBagConstraints);

    jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel33.add(jLabel53, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 200.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(jLabel43, gridBagConstraints);

    jButton3.setText("View Sent LPOs/LSOs");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(jButton3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel27.add(jPanel33, gridBagConstraints);

    jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel28.setLayout(new java.awt.GridBagLayout());

    jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity", "Unit Price", "Value"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    itemsTbl.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column3 = null;
    for (int i = 0; i < 5; i++) {
        column3 = itemsTbl.getColumnModel().getColumn(i);
        if (i == 0) {

            column3.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column3.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column3.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    itemsTbl.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            itemsTblKeyReleased(evt);
        }
    });
    jScrollPane13.setViewportView(itemsTbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel28.add(jScrollPane13, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel27.add(jPanel28, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jTextField9, gridBagConstraints);
    */
    jPanel29.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel29.setLayout(new java.awt.GridBagLayout());

    jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel30.setLayout(new java.awt.GridBagLayout());

    jLabel23.setText("Quotation No/Tender No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel30.add(jLabel23, gridBagConstraints);

    jPanel34.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel34.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel34.setLayout(new java.awt.GridBagLayout());

    TenderNoTxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel34.add(TenderNoTxt, gridBagConstraints);

    searchButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton6.setToolTipText("Search Patient's Name");
    searchButton6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton6.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton6.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton6ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel34.add(searchButton6, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel30.add(jPanel34, gridBagConstraints);

    jTextField11.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel30.add(jTextField11, gridBagConstraints);

    jLabel24.setText("Quotation Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel30.add(jLabel24, gridBagConstraints);

    jTextPane4.setEditable(false);
    jTextPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
    jScrollPane7.setViewportView(jTextPane4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel30.add(jScrollPane7, gridBagConstraints);

    jLabel25.setText("Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel30.add(jLabel25, gridBagConstraints);

    jTextField12.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel30.add(jTextField12, gridBagConstraints);

    jLabel26.setText("Document Type");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel30.add(jLabel26, gridBagConstraints);

    jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LPO", "LSO" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel30.add(jComboBox11, gridBagConstraints);

    jLabel27.setText("Selection Criteria");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel30.add(jLabel27, gridBagConstraints);

    jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Average Price", "Highest Price", "Delivery" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel30.add(jComboBox12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    jPanel29.add(jPanel30, gridBagConstraints);

    jPanel35.setLayout(new java.awt.GridBagLayout());

    jLabel28.setText("Date Due");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel35.add(jLabel28, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel35.add(datePicker6, gridBagConstraints);

    jLabel29.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel35.add(jLabel29, gridBagConstraints);

    jPanel43.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel43.setLayout(new java.awt.GridBagLayout());

    suppliertxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel43.add(suppliertxt, gridBagConstraints);

    searchButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton7.setToolTipText("Search");
    searchButton7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton7.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton7.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton7ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel43.add(searchButton7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel35.add(jPanel43, gridBagConstraints);

    jLabel30.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel35.add(jLabel30, gridBagConstraints);

    jTextField13.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel35.add(jTextField13, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jPanel35, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel27.add(jPanel29, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel5.add(jPanel27, gridBagConstraints);

    jTabbedPane1.addTab("Raise LPO/LSO", jPanel5);

    jPanel4.setLayout(new java.awt.GridBagLayout());

    jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
    jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTabbedPane2MouseClicked(evt);
        }
    });

    TechnicalEvaluationPane.setLayout(new java.awt.GridBagLayout());

    EvaluationTypePane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    EvaluationTypePane.setLayout(new java.awt.GridBagLayout());

    buttonGroup1.add(jCheckBox1);
    jCheckBox1.setText("General Evaluation");
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    EvaluationTypePane.add(jCheckBox1, gridBagConstraints);

    buttonGroup1.add(jCheckBox2);
    jCheckBox2.setText("Pharmaceuticals Evaluation");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    EvaluationTypePane.add(jCheckBox2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    TechnicalEvaluationPane.add(EvaluationTypePane, gridBagConstraints);

    TechnicalEvalutionMainPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    TechnicalEvalutionMainPane.setLayout(new java.awt.GridBagLayout());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    TechnicalEvaluationPane.add(TechnicalEvalutionMainPane, gridBagConstraints);

    jTabbedPane2.addTab("Technical Evaluation", TechnicalEvaluationPane);

    jPanel38.setLayout(new java.awt.GridBagLayout());

    actionPanel.setLayout(new java.awt.GridBagLayout());

    jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/download.jpg"))); // NOI18N
    jButton9.setText("Done Approval");
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    actionPanel.add(jButton9, gridBagConstraints);

    jButton10.setText("Close Form");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    actionPanel.add(jButton10, gridBagConstraints);

    jButton11.setText("?Help");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    actionPanel.add(jButton11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel38.add(actionPanel, gridBagConstraints);

    MainPanel.setLayout(new java.awt.GridBagLayout());

    jPanel39.setLayout(new java.awt.GridBagLayout());

    jTable3.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "Bidders", "Award"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Boolean.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable3MouseClicked(evt);
        }
    });
    jScrollPane8.setViewportView(jTable3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    jPanel39.add(jScrollPane8, gridBagConstraints);

    jPanel40.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel40.setLayout(new java.awt.GridBagLayout());

    jLabel31.setText("Quotation No:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 30);
    jPanel40.add(jLabel31, gridBagConstraints);

    jLabel32.setText("Sort Criteria");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 30);
    jPanel40.add(jLabel32, gridBagConstraints);

    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Highest Price" }));
    jComboBox2.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jComboBox2ItemStateChanged(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel40.add(jComboBox2, gridBagConstraints);

    jPanel44.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel44.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel44.setLayout(new java.awt.GridBagLayout());

    jTextField39.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel44.add(jTextField39, gridBagConstraints);

    searchButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton5.setToolTipText("Search Patient's Name");
    searchButton5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton5.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton5.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel44.add(searchButton5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel40.add(jPanel44, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel39.add(jPanel40, gridBagConstraints);

    jSplitPane1.setLeftComponent(jPanel39);

    jPanel24.setLayout(new java.awt.GridBagLayout());

    jTable4.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Item Code", "Item Description", "Qty", "Price"
        }
    ));
    jScrollPane6.setViewportView(jTable4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel24.add(jScrollPane6, gridBagConstraints);

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(255, 0, 0));
    jLabel2.setText("Total Price");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    jPanel24.add(jLabel2, gridBagConstraints);

    jSplitPane1.setRightComponent(jPanel24);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    MainPanel.add(jSplitPane1, gridBagConstraints);

    jPanel23.setLayout(new java.awt.GridBagLayout());
    MainPanel.add(jPanel23, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 10.0;
    jPanel38.add(MainPanel, gridBagConstraints);

    jTabbedPane2.addTab("Financial Evaluation", jPanel38);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jTabbedPane2, gridBagConstraints);

    jTabbedPane1.addTab(".", jPanel4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(jTabbedPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    class WaitingPatientsThread extends Thread {

        public WaitingPatientsThread() {
        }

        public void run() {
            while (true) {
                refresh();
                try {
                    Thread.sleep(30000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();

                    //Logger.getLogger(VitalSignRecIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void refresh() {

        if (com.afrisoftech.lib.GetItemInfo.procSuperuser(com.afrisoftech.lib.UserName.getLoginName(connectDB), connectDB) == true) {
            jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no  and st.monthly_usage ilike 'Quotation' and st.mode_of_purchase_approved=true and bs.buyer ILIKE current_user and  bs.pr_floated=false order by 1"));
        } else {
            jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no  and st.monthly_usage ilike 'Quotation' and st.mode_of_purchase_approved=true and bs.pr_floated=false order by 1"));
        }
    }
    private void postbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn1ActionPerformed

        if (SQLDateFormat.getSQLDate(openingdpckr.getDate()).toString() == SQLDateFormat.getSQLDate(floatedDate.getDate()).toString()) {

            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "You are floating a quotation with the same opening date as quotation date . Continue ?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

                save();

                //}
            }
        } else {

            save();

            // }
        }

        //}
        // Add your handling code here:
    }//GEN-LAST:event_postbtn1ActionPerformed
    private void save() {

        int exitOption2 = javax.swing.JOptionPane.showConfirmDialog(this, "You are floating a quotation '" + quoteNocmbx.getSelectedItem().toString().toUpperCase() + "' for items in \n requisition '" + prno.getText() + "' \n You CANNOT Reverse This Action. Continue ?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption2 == javax.swing.JOptionPane.YES_OPTION) {

            java.util.Date periodFrom = null;
            java.util.Date periodTo = null;
            String quoteNo = null;

            try {

                java.sql.Statement stmtf = connectDB.createStatement();
                java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup");
                while (rsetf.next()) {
                    periodFrom = rsetf.getDate(1);
                    periodTo = rsetf.getDate(2);
                }

//                    } catch (java.sql.SQLException sq) {
//                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
//                        System.out.println(sq.getMessage());
//            
//                    }
                if (openingdpckr.getDate().before(periodFrom) || openingdpckr.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (jTable1.isEditing()) {
                        jTable1.getCellEditor().stopCellEditing();
                    }

                }

                int lineNumber = 0;
                //  try {
                connectDB.setAutoCommit(false);

//            java.sql.Statement stmtf1 = connectDB.createStatement();
//            java.sql.ResultSet rsetf1 = stmtf1.executeQuery("SELECT 'QNo'||NEXTVAL('quotation_no_seq')");
//            while (rsetf1.next()) {
//                quoteNo = rsetf1.getString(1);
//            }
                quoteNo = quoteNocmbx.getSelectedItem().toString().toUpperCase();

                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    if (jTable1.getModel().getValueAt(i, 0) != null && !quoteNo.equalsIgnoreCase("-")) {
                        lineNumber = lineNumber + 1;
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_item_to_quote("
                                + "buyer_details, quotation_date, openning_date, item_code, item_description, "
                                + "units, quantity,time_saved, item_number,item_serial,tender_no,vote_class, vote, head, subhead, sub_item,"
                                + " sub_item_desc, donor_code, donor_item, aie_no,department, irq_no)"
                                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "
                                + "?, ?, ?, ?, ?, ?, ?,?,?)");
                        pstmt.setObject(1, jTextPane1.getText());
                        pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(floatedDate.getDate()));
                        pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(openingdpckr.getDate()));
                        pstmt.setObject(4, jTable1.getValueAt(i, 0).toString());
                        pstmt.setObject(5, jTable1.getValueAt(i, 1).toString().toUpperCase());
                        pstmt.setObject(6, jTable1.getValueAt(i, 2).toString());
                        pstmt.setDouble(7, java.lang.Double.valueOf(jTable1.getValueAt(i, 3).toString()));
                        pstmt.setTimestamp(8, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmt.setObject(9, lineNumber);
                        pstmt.setObject(10, 2);
                        pstmt.setObject(11, quoteNo);
                        pstmt.setObject(12, null);
                        pstmt.setObject(13, null);
                        pstmt.setObject(14, null);
                        pstmt.setObject(15, null);
                        pstmt.setObject(16, null);
                        pstmt.setObject(17, null);
                        pstmt.setObject(18, null);
                        pstmt.setObject(19, null);
                        pstmt.setObject(20, null);
                        pstmt.setObject(21, null);
                        pstmt.setObject(22, prno.getText() + "-" + quoteNo);
                        //System.out.println(dateSpinner.getValue().toString());

                        pstmt.executeUpdate();

                    }
                }

                //////updating the progress tracker
                //    jTextField7.setText(quoteNo);
                ///check if the prs in st_pr_progress
                java.sql.Statement stmtfg = connectDB.createStatement();
                java.sql.ResultSet rsetfg = stmtfg.executeQuery("select count(*) from st_pr_progress where purchase_req ilike '" + prno.getText() + "%' and  approved_by_tc='-' ");
                while (rsetfg.next()) {

                    num_of_prs = rsetfg.getInt(1);
                }
                if (num_of_prs == 1) {

                    java.sql.PreparedStatement pr_progress = connectDB.prepareStatement("UPDATE st_pr_progress SET approved_by_tc='" + quoteNo + "' where   purchase_req ilike '" + prno.getText() + "%' ");

                    pr_progress.executeUpdate();

                } else if (num_of_prs > 1 || num_of_prs == 0) {
                    java.sql.Statement stmtfh = connectDB.createStatement();
                    java.sql.ResultSet rsetfh = stmtfh.executeQuery("select distinct purchase_req,  dept_approval, forward_to_cso, determine_mode_of_pur, assign_buyer from st_pr_progress where purchase_req ilike '" + prno.getText() + "%' and  approved_by_tc!='-' ");
                    while (rsetfh.next()) {
                        for (int j = 0; j < 1; j++) {

                            //num_of_prs=rsetfg.getInt(1);
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_pr_progress (purchase_req, dept_approval, forward_to_cso, determine_mode_of_pur, assign_buyer,approved_by_tc)  VALUES (?, ?, ?,?,?,?)");
                            pstmt.setObject(1, rsetfh.getString(1));
                            pstmt.setObject(2, rsetfh.getString(2));
                            pstmt.setObject(3, rsetfh.getString(3));
                            pstmt.setObject(4, rsetfh.getString(4));
                            pstmt.setObject(5, rsetfh.getString(5));
                            pstmt.setObject(6, quoteNo);
                            pstmt.executeUpdate();

                            System.out.println("Done men");

                        }
                    }

                }

                java.sql.PreparedStatement settingpr_status = connectDB.prepareStatement("UPDATE st_assign_buyers SET pr_floated=true where  requisition_no='" + prno.getText() + "' ");

                settingpr_status.executeUpdate();

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_tenders set opening_date=? where ref_no=?");
                pstmt.setObject(1, SQLDateFormat.getSQLDate(openingdpckr.getDate()));
                pstmt.setObject(2, quoteNo);
                pstmt.executeUpdate();

                connectDB.commit();
                connectDB.setAutoCommit(true);

                javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully for:  " + quoteNo + "", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf();
                policy.QuotationsMtrhPdf(connectDB, quoteNo);

                for (int k = 0; k < jTable1.getRowCount(); k++) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++) {
                        jTable1.getModel().setValueAt(null, k, r);
                    }
                }

                prno.setText(null);
                jTextField6.setText(null);

            } catch (java.sql.SQLException sq) {
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
        }
    }
    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_resetbtnActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        setVisible(false);

// Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {

            //this.cmbox11MouseClicked();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        if (!quoteNocmbx.getSelectedItem().toString().equalsIgnoreCase("-")) {
            searchButton11Clicked();
        } else {
            JOptionPane.showMessageDialog(this, "Select Quotation No first");
        }
// Add your handling code here:
        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton12Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.jTextField38.getLocationOnScreen();

        receiveRFPs.setSize(400, 200);

        receiveRFPs.setLocation(point);
        receiveRFPs.setVisible(true);

    }

    private void searchButton1Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.quotation_notxt.getLocationOnScreen();

        dispatchQs.setSize(330, 200);

        dispatchQs.setLocation(point);
        dispatchQs.setVisible(true);

    }

    private void searchButton3Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.supplieerTxt.getLocationOnScreen();

        jSearchDialog3.setSize(300, 200);

        jSearchDialog3.setLocation(point);
        jSearchDialog3.setVisible(true);

    }

    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.supplTxt.getLocationOnScreen();

        supplier2dispatch.setSize(300, 200);

        supplier2dispatch.setLocation(point);
        supplier2dispatch.setVisible(true);

    }

    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        searchPR.dispose();
        java.awt.Point point = this.prno.getLocationOnScreen();

        searchPR.setSize(400, 200);

        searchPR.setLocation(point);
        searchPR.setVisible(true);

    }

    private int getCount(String tender, String supplier) {
        int count = 0;
        try {

            PreparedStatement pst = connectDB.prepareStatement("select count(*) from st_floated_quotations where quotation_no='" + quotation_notxt.getText() + "' and supplier ilike '" + supplTxt.getText() + "'");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {
                count = rset.getInt(1);
            }

        } catch (SQLException ex) {
            Logger.getLogger(SSOQuotation.class.getName()).log(Level.SEVERE, null, ex);
        }
        return count;
    }
    private void postbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn2ActionPerformed

        if (supplTxt.getText().equalsIgnoreCase("") || getCount(quotation_notxt.getText(), supplTxt.getText()) > 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Either the supplier field has missing data or you're just about to duplicate a dispatch", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                connectDB.setAutoCommit(false);

                for (int i = 0; i < jTable11.getRowCount(); i++) {
                    if (jTable11.getModel().getValueAt(i, 0) != null) {
                        // lineNumber = lineNumber + 1;
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_floated_quotations("
                                + " buyer_details, quotation_date, openning_date, item_code, item_description, "
                                + " units, quantity, item_number, quotation_no,supplier)"
                                + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                        pstmt.setObject(1, jTextPane2.getText());
                        pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField1.getText())));
                        pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField4.getText())));
                        pstmt.setObject(4, jTable11.getValueAt(i, 1).toString());
                        pstmt.setObject(5, jTable11.getValueAt(i, 2).toString());
                        pstmt.setObject(6, jTable11.getValueAt(i, 3).toString());
                        pstmt.setDouble(7, java.lang.Double.valueOf(jTable11.getValueAt(i, 4).toString()));
                        pstmt.setInt(8, java.lang.Integer.valueOf(jTable11.getValueAt(i, 0).toString()));
                        pstmt.setObject(9, quotation_notxt.getText());
                        pstmt.setObject(10, supplTxt.getText());

                        pstmt.executeUpdate();

                        /////insert into tender suppliers 
                        java.sql.PreparedStatement suppr = connectDB.prepareStatement("INSERT INTO st_tender_suppliers (tender, supplier_name) VALUES (?,?)");
                        suppr.setObject(1, quotation_notxt.getText());
                        suppr.setObject(2, supplTxt.getText());

                        suppr.executeUpdate();

                    }
                }

                connectDB.commit();
                connectDB.setAutoCommit(true);

                String to_Address = null;
                try {
                    java.sql.Statement stsmts = connectDB.createStatement();
                    java.sql.ResultSet res = stsmts.executeQuery("SELECT distinct email_address from st_suppliers where supplier_name='" + supplTxt.getText() + "' group by code,supplier_name");

                    while (res.next()) {
                        if (res.getString(1) != null && !res.getString(1).equals("-")) {
                            to_Address = res.getString(1);

                            com.afrisoftech.hospinventory.mtrhreports.QuotationsSentMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsSentMtrhPdf();

                            policy.QuotationsSentMtrhPdf(connectDB, quotation_notxt.getText(), supplTxt.getText());

                            javax.swing.JOptionPane.showMessageDialog(this, "Dispatch Done Successfully Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            to_Address = null;

                            JOptionPane.showMessageDialog(null, "THE SUPPLIER NEEDS TO HAVE THE EMAIL ADDRESS SETUP!", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);

                        }
                        System.out.println("THE TO ADDRESS IS " + to_Address);

                    }
                } catch (Exception esd) {
                    esd.printStackTrace();
                    esd.getMessage();

                }

//jTextField91.setText(null);
            } catch (java.sql.SQLException sq) {
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
            }
        }// Add your handling code here:
    }//GEN-LAST:event_postbtn2ActionPerformed

    private void resetbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn1ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();

        int[] selectedRows = jTable11.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_resetbtn1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
        //this.dispose();        // Add your handling code here:
    }//GEN-LAST:event_exitbtn1ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton1Clicked();        // Add your handling code here:
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        for (int k = 0; k < jSearchTable2.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable2.getColumnCount(); r++) {
                jSearchTable2.getModel().setValueAt(null, k, r);
            }
        }
        this.jTextField113.setText("");
        searchButton2Clicked();

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date,supplier FROM st_floated_quotations WHERE quotation_no ILIKE '" + jTextField1112.getText().toString() + "%'  ORDER BY 1"));
        jSearchTable3.setShowHorizontalLines(true);
        jSearchScrollPane3.setViewportView(jSearchTable3);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate

    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        //        jTextField37.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0).toString());
        //        jTextField3.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 1).toString());
        //        jTextField92.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 2).toString());
        //        for (int k = 0; k < jTable12.getRowCount(); k++) {
        //            for (int r = 0; r < jTable12.getColumnCount(); r++) {
        //                jTable12.getModel().setValueAt(null, k, r);
        //            }
        //        }
        //
        //        int j = 0;
        //        int i = 0;
        //
        //        try {
        //            java.sql.Statement stmtTable11 = connectDB.createStatement();
        //
        //            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(quotation_no)  FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField37.getText() + "' AND supplier ILIKE '" + this.jTextField92.getText() + "' ");
        //
        //            while (rsetTable11.next()) {
        //                j = rsetTable11.getInt(1);
        //            }
        //            java.sql.Statement stmtTable11X = connectDB.createStatement();
        //
        //            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
        //                + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField37.getText() + "'  AND supplier ILIKE '" + this.jTextField92.getText() + "'");
        //
        //            while (rsetTable11X.next()) {
        //                jTextPane3.setText(rsetTable11X.getString(1));
        //                jTextField4.setText(rsetTable11X.getString(2));
        //            }
        //
        //            if (j > 0) {
        //                java.sql.Statement stmtTable1 = connectDB.createStatement();
        //
        //                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT DISTINCT item_number, item_code, item_description, units, quantity"
        //                    + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField37.getText() + "%'  "
        //                    + " AND supplier ILIKE '" + this.jTextField92.getText() + "' ORDER BY 1");
        //
        //                while (rsetTable1.next()) {
        //
        //                    System.out.println("Working at table row " + i);
        //                    jTable12.setValueAt(rsetTable1.getObject(1), i, 0);
        //                    jTable12.setValueAt(rsetTable1.getObject(2), i, 1);
        //                    jTable12.setValueAt(rsetTable1.getObject(3), i, 2);
        //                    jTable12.setValueAt(rsetTable1.getObject(4), i, 3);
        //                    jTable12.setValueAt(rsetTable1.getObject(5), i, 4);
        //
        //                    i++;
        //
        //                }
        //
        //            }
        //        } catch (java.sql.SQLException sqlExec) {
        //
        //            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        //
        //        }
        //
        //        //        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        //        jSearchDialog11.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        this.jSearchDialog11.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton53ActionPerformed

    private void searchquottxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchquottxtCaretUpdate

        if (searchquottxt.getCaretPosition() >= 3) {
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(tender_no) AS quotation_no, quotation_date FROM st_item_to_quote WHERE tender_no ILIKE '%Q%' AND tender_no ILIKE '%" + searchquottxt.getText().toString() + "%'  ORDER BY 1"));

            jSearchTable1.setShowHorizontalLines(false);
            jSearchScrollPane1.setViewportView(jSearchTable1);
        }

    }//GEN-LAST:event_searchquottxtCaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        quotation_notxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        //  jTextField1.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }

        int j = 0;
        int i = 0;

        try {

            java.sql.Statement pstmth = connectDB.createStatement();

            java.sql.ResultSet rsh = pstmth.executeQuery("select current_user");
            while (rsh.next()) {

                jTextField9.setText(rsh.getObject(1).toString());
            }

            java.sql.Statement stmtTable11 = connectDB.createStatement();

            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(tender_no)  FROM st_item_to_quote WHERE tender_no ILIKE '" + this.quotation_notxt.getText() + "'");

            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details,quotation_date, openning_date"
                    + " FROM st_item_to_quote WHERE tender_no ILIKE '" + this.quotation_notxt.getText() + "%'");

            while (rsetTable11X.next()) {
                //    jTextPane2.setText(rsetTable11X.getString(1));
                jTextField1.setText(rsetTable11X.getString(2));
                jTextField4.setText(rsetTable11X.getString(3));
                // jTextField2.setText(rsetTable11X.getString(2));
            }

            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT item_number, item_code, item_description, units, quantity"
                        + " FROM st_item_to_quote WHERE tender_no ILIKE '" + this.quotation_notxt.getText() + "%'");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable1.getObject(5), i, 4);

                    i++;

                }

            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        //        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        dispatchQs.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        dispatchQs.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (jTextField113.getCaretPosition() < 4) {
            System.out.println("Nothing");
        } else {
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier_name, code as account_no FROM st_suppliers where supplier_name ILIKE '%" + jTextField113.getText() + "%' order by supplier_name"));

            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);

        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        // jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        supplTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        // jTextField92.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        supplier2dispatch.dispose();
        try {
            java.sql.Statement pstmt = connectDB.createStatement();

            java.sql.ResultSet rs = pstmt.executeQuery("select current_user");
            while (rs.next()) {

                jTextField9.setText(rs.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        } // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.supplier2dispatch.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        java.lang.String access_code = null;
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("select accessobject from defined_contribution");

            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                access_code = rset.getObject(1).toString();
            }

            if (jPasswordField1.getText().equals(access_code)) {
                jButton2.doClick();
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker6.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker6.getDate().before(periodFrom) || datePicker6.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (itemsTbl.isEditing()) {
                        itemsTbl.getCellEditor().stopCellEditing();
                    }

                    String oder_no = null;

                    double quantity = 0.00;

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);

                    System.out.println(datenowSql.toString());
//registering savepointr
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    //begin insert-orderno generation
                    try {
                        String order_no1 = null;
                        java.sql.Date current_date = null;
                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select date_part('year',now())|| lpad('" + order_no1 + "',6,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            oder_no = rs1.getObject(1).toString();
                        }

                        System.out.println("" + oder_no + "");
                        //insert into db

                        java.lang.Boolean checker = true;
                        String unallocateditems = " ";

                        for (int h = 0; h < itemsTbl.getRowCount(); h++) {
                            if (itemsTbl.getValueAt(h, 2) != null) {

                                /////generating an LPO NUMBER
                                java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE st_orders SET  order_no ='" + oder_no + "',criteria='" + jComboBox12.getSelectedItem().toString() + "',doc_type='" + jComboBox11.getSelectedItem() + "',gross_value='" + java.lang.Double.valueOf(itemsTbl.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(itemsTbl.getValueAt(h, 4).toString()) + "',net_value='" + java.lang.Double.valueOf(itemsTbl.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(itemsTbl.getValueAt(h, 4).toString()) + "',date_due='" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker6.getDate()) + "' WHERE quotation_no='" + TenderNoTxt.getText() + "' and code='" + itemsTbl.getValueAt(h, 1).toString() + "' and item='" + itemsTbl.getValueAt(h, 2).toString() + "' and supplier='" + suppliertxt.getText() + "'");
                                pstmt8121.executeUpdate();

                                checker = true;
                            }
                        }

                        System.out.println("The value for checker is " + checker);

                        if (checker == false) {

                            javax.swing.JOptionPane.showMessageDialog(this, "Double Check your Entries  ", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                        } else {
//                   
//                   
//                      for (int i = 0; i < jTable13.getRowCount(); i++) {
//                            if (jTable13.getModel().getValueAt(i, 1) != null) {
//                                
//                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("UPDATE st_orders set"
//                                            + " gross_value='"+java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString())+"'"
//                                            + ",net_value='"+java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString())+"'"
//                                            + ",ordered=true, "
//                                            + "date_due='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker6.getDate())+"'"
//                                            + ",date=now()::date , item_strength='n/a' ,"
//                                            + "doc_type='"+jComboBox11.getSelectedItem()+"', criteria='"+jComboBox12.getSelectedItem().toString()+"' "
//                                            + "where quotation_no='"+jTextField40.getText().toString()+"' "
//                                            + "and supplier='"+jTextField93.getText().toString()+"' and item='"+jTable13.getValueAt(i, 2).toString()+"'");
//
//                                   
//
//                                    pstmt2.executeUpdate();
//
//                                    System.out.println("sonice");
//                                   
//
//
//                                    
////                                    java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField40.getText() + "'");
////                                    pstmt31.executeUpdate();
//
////                                    java.sql.PreparedStatement pstmtCommit2Votebook = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField40.getText() + "'");
////                                    pstmtCommit2Votebook.executeUpdate();
//
//                                    
////                                    com.afrisoftech.lib.VoteBook.setVoteBalance(connectDB,
////                                        com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(i, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(i, 4).toString()) * Double.parseDouble(jTable13.getValueAt(i, 5).toString()),
////                                        com.afrisoftech.lib.VoteBook.getVote(connectDB, jTable13.getValueAt(i, 2).toString(),
////                                        com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)),
////                                        com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB), jTable13.getValueAt(i, 2).toString());
////                                    
//                                         } 

                            // }
                            ////updating the progress tracker
                            String raised_lpo_lso = jComboBox11.getSelectedItem() + "-" + oder_no;
                            java.sql.PreparedStatement pr_progress = connectDB.prepareStatement("UPDATE st_pr_progress SET raise_lpo_lso='" + raised_lpo_lso + "' where   approved_by_tc='" + TenderNoTxt.getText() + "' ");

                            pr_progress.executeUpdate();

                            connectDB.commit();
                            connectDB.setAutoCommit(true);

                            javax.swing.JOptionPane.showMessageDialog(this, "You have generated an " + jComboBox11.getSelectedItem() + " (" + oder_no + " ) successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                            for (int k = 0; k < itemsTbl.getRowCount(); k++) {
                                for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
                                    itemsTbl.getModel().setValueAt(null, k, r);
                                }
                            }

//                        if (jComboBox11.getSelectedItem().toString().equalsIgnoreCase("LSO")) {
//                            com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf();
//
//                            policy.LsoMtrhPdf(connectDB, jTextField93.getText(), oder_no);
//                            // com.afrisoftech.hospinventory.LsoPdf policy = new com.afrisoftech.hospinventory.LsoPdf();
//
//                            // policy.LsoPdf(connectDB, jTextField93.getText(), oder_no);
//                        } else {
//
//                            com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf();
//
//                            policy.LpoMtrhPdf(connectDB, jTextField93.getText(), oder_no);
//                            //com.afrisoftech.hospinventory.LpoPdf policy = new com.afrisoftech.hospinventory.LpoPdf();
//
//                            //policy.LpoPdf(connectDB, jTextField93.getText(), oder_no);
//                        }
                            this.postbtn3.setEnabled(false);

                        }

                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            sql.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());

                    }
                }

            } else {
                jButton2.doClick();
                javax.swing.JOptionPane.showMessageDialog(this, "You must input the authorised pass key to approve", "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jDialog1.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1113CaretUpdate
        if (jTextField1113.getCaretPosition() >= 3) {
            jSearchTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date,openning_date FROM st_floated_quotations WHERE quotation_no ILIKE '%" + jTextField1113.getText().toString() + "%'  and quotation_no ilike '%Q%'  AND ordered = false and quotation_no IN (SELECT DISTINCT ref_no from st_tenders where opening_date::date >= current_date ) ORDER BY 1"));

            jSearchTable4.setShowHorizontalLines(true);
            jSearchScrollPane4.setViewportView(jSearchTable4);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1113CaretUpdate

    private void jSearchTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable4MouseClicked

        jTextField38.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 0).toString());
        supplieerTxt.setText(null);

        for (int k = 0; k < jTable12.getRowCount(); k++) {
            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                jTable12.getModel().setValueAt(null, k, r);
            }
        }

        int j = 0;
        int i = 0;

        try {

            java.sql.Statement pstmth = connectDB.createStatement();

            java.sql.ResultSet rsh = pstmth.executeQuery("select current_user");
            while (rsh.next()) {

                jTextField10.setText(rsh.getObject(1).toString());
            }

            java.sql.Statement stmtTable11 = connectDB.createStatement();

            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(quotation_no)  FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "' and ordered =false");

            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details,quotation_date, openning_date"
                    + " FROM st_item_to_quote WHERE tender_no ILIKE '" + this.jTextField38.getText() + "%'");

            while (rsetTable11X.next()) {
                jTextPane3.setText(rsetTable11X.getString(1));
                jTextField5.setText(rsetTable11X.getString(2));
                jTextField8.setText(rsetTable11X.getString(3));
                // jTextField2.setText(rsetTable11X.getString(2));
            }

            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT item_number, item_code, item_description, units, quantity"
                        + " FROM st_item_to_quote WHERE tender_no ILIKE '" + this.jTextField38.getText() + "%'");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable12.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable12.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable12.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable12.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable12.setValueAt(rsetTable1.getObject(5), i, 4);

                    i++;
                }

            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        this.receiveRFPs.dispose();
        //        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable4MouseClicked

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        this.receiveRFPs.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        if (jTextField114.getCaretPosition() < 1) {
            System.out.println("Nothing");
        } else {
            jSearchTable5.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_floated_quotations WHERE supplier ILIKE '%" + jTextField114.getText() + "%' AND quotation_no = '" + jTextField1113.getText() + "' ORDER BY supplier"));
            jSearchTable5.setShowHorizontalLines(false);
            jSearchScrollPane5.setViewportView(jSearchTable5);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField114CaretUpdate

    private void jSearchTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable5MouseClicked
        //        jTextField93.setText(jSearchTable5.getValueAt(jSearchTable5.getSelectedRow(), 0).toString());
        //        for (int k = 0; k < jTable13.getRowCount(); k++) {
        //            for (int r = 0; r < jTable13.getColumnCount(); r++) {
        //                jTable13.getModel().setValueAt(null, k, r);
        //            }
        //        }
        //
        //        int j = 0;
        //        int i = 0;
        //
        //        try {
        //            java.sql.Statement stmtTable11X = connectDB.createStatement();
        //
        //            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
        //                + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "'");
        //
        //            while (rsetTable11X.next()) {
        //                jTextPane4.setText(rsetTable11X.getString(1));
        //                //jTextField4.setText(rsetTable11X.getString(2));
        //            }
        //            /*
        //            * java.sql.Statement stmtTable11 = connectDB.createStatement();
        //            *
        //            * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
        //                * count(quotation_no) FROM st_floated_quotations WHERE quotation_no
        //                * ILIKE '" + this.jTextField37.getText() + "' AND supplier ILIKE '"
        //                * + this.jTextField92.getText() + "' ");
        //            *
        //            * while (rsetTable11.next()) { j = rsetTable11.getInt(1); }
        //            * java.sql.Statement stmtTable11X = connectDB.createStatement();
        //            *
        //            * java.sql.ResultSet rsetTable11X =
        //            * stmtTable11X.executeQuery("SELECT buyer_details, openning_date" +
        //                * " FROM st_floated_quotations WHERE quotation_no ILIKE '" +
        //                * this.jTextField37.getText() + "' AND supplier ILIKE '" +
        //                * this.jTextField92.getText() + "'");
        //            *
        //            * while (rsetTable11X.next()) {
        //                * jTextPane3.setText(rsetTable11X.getString(1));
        //                * jTextField4.setText(rsetTable11X.getString(2)); }
        //            *
        //            * if (j > 0) {
        //                */
        //                java.sql.Statement stmtTable1 = connectDB.createStatement();
        //
        //                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT DISTINCT item_number, item_code, item_description, units, quantity"
        //                    + ",unit_price, days_to_deliver, brand, country_origin, remarks"
        //                    + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "%'  "
        //                    + " AND supplier ILIKE '" + this.jTextField93.getText() + "' ORDER BY 1");
        //
        //                while (rsetTable1.next()) {
        //
        //                    System.out.println("Working at table row " + i);
        //                    jTable13.setValueAt(rsetTable1.getObject(1), i, 0);
        //                    jTable13.setValueAt(rsetTable1.getObject(2), i, 1);
        //                    jTable13.setValueAt(rsetTable1.getObject(3), i, 2);
        //                    jTable13.setValueAt(rsetTable1.getObject(4), i, 3);
        //                    jTable13.setValueAt(rsetTable1.getObject(5), i, 4);
        //                    jTable13.setValueAt(rsetTable1.getObject(6), i, 5);
        //                    jTable13.setValueAt(rsetTable1.getObject(7), i, 6);
        //                    jTable13.setValueAt(rsetTable1.getObject(8), i, 7);
        //                    jTable13.setValueAt(rsetTable1.getObject(9), i, 8);
        //                    jTable13.setValueAt(rsetTable1.getObject(10), i, 9);
        //
        //                    i++;
        //
        //                }
        //
        //                // }
        //        } catch (java.sql.SQLException sqlExec) {
        //
        //            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        //
        //        }
        //
        //        //        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        //        jSearchDialog5.dispose();          // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable5MouseClicked

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
        this.jSearchDialog5.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton55ActionPerformed

    private void jTextField111111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111111CaretUpdate
        if (this.jTextField111111.getCaretPosition() <= 6) {
            System.out.print("Nothing");
        } else {

            // jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT requisition_no FROM st_assign_buyers where pr_status= false and mode_of_purchase= 'Quotation' order by date_buyer_assigned asc "));
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no and  bs.assigned_by is not null and st.monthly_usage='Quotation' and bs.buyer=current_user and st.requisition_no ilike '%" + jTextField111111.getText() + "%'  order by 1"));
            System.err.println("SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no and  bs.assigned_by is not null and st.monthly_usage='Quotation' and bs.buyer=current_user and st.requisition_no ilike '%" + jTextField111111.getText() + "%'  order by 1");
//jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no and  bs.assigned_by is not null and st.monthly_usage='Quotation' and st.requisition_no ilike '"+jTextField111111.getText()+"%' and    (select irq_no from \n" +
//"st_item_to_quote where irq_no ilike  st.requisition_no||'%'  and tender_no ilike 'PREQ%' ) not ilike st.requisition_no||'%'  order by 1"));
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);

        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField111111CaretUpdate

    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked

        prno.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 0).toString());

        populate(prno.getText());

        searchPR.dispose();

        //    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked

    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
        searchPR.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5111ActionPerformed

    private void postbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn3ActionPerformed
        if (jTextField38.getText().equalsIgnoreCase("") || supplieerTxt.getText().equalsIgnoreCase("")) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ensure that you that you have Selected all the Details", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                connectDB.setAutoCommit(false);

                for (int i = 0; i < jTable12.getRowCount(); i++) {
                    if (jTable12.getModel().getValueAt(i, 0) != null) {
                        // lineNumber = lineNumber + 1;

                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_floated_quotations"
                                + " SET unit_price=?,remarks=? ,days_to_deliver =? WHERE "
                                + " quotation_no = '" + jTextField38.getText() + "'"
                                + " AND supplier = '" + supplieerTxt.getText() + "' AND item_code = '" + jTable12.getValueAt(i, 1).toString() + "'");

                        pstmt.setDouble(1, java.lang.Double.valueOf(jTable12.getValueAt(i, 5).toString()));

                        if (jTable12.getValueAt(i, 7).toString() == null) {
                            pstmt.setObject(2, "-");
                        } else {
                            pstmt.setObject(2, jTable12.getValueAt(i, 7).toString());
                        }
                        pstmt.setDouble(3, Double.parseDouble(jTable12.getValueAt(i, 6).toString()));
//                    pstmt.setDouble(7, Double.parseDouble(jTable12.getValueAt(i, 7).toString()));
                        pstmt.executeUpdate();

                    }
                }

                javax.swing.JOptionPane.showMessageDialog(this, supplieerTxt.getText() + "'s Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                java.sql.PreparedStatement pstmts11 = connectDB.prepareStatement("UPDATE st_tender_suppliers SET  opened=true WHERE tender='" + jTextField38.getText() + "' and supplier_name='" + supplieerTxt.getText() + "'");
                pstmts11.executeUpdate();

                com.afrisoftech.hospinventory.mtrhreports.QuotationsReceivedMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsReceivedMtrhPdf();

                policy.QuotationsReceivedMtrhPdf(connectDB, jTextField38.getText(), supplieerTxt.getText());

                connectDB.commit();
                connectDB.setAutoCommit(true);

                jTextField38.setText(null);
                supplieerTxt.setText(null);
                jTextField8.setText(null);
                jTextField5.setText(null);
                for (int k = 0; k < jTable12.getRowCount(); k++) {
                    for (int r = 0; r < jTable12.getColumnCount(); r++) {
                        jTable12.getModel().setValueAt(null, k, r);
                    }
                }

            } catch (java.sql.SQLException sq) {
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                sq.printStackTrace();
                System.out.println(sq.getMessage());
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_postbtn3ActionPerformed

    private void resetbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetbtn2ActionPerformed

    private void cancelbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn2ActionPerformed
        // TODO add your handling code here:
        jTextField38.setText(null);
        supplieerTxt.setText(null);
        jTextField8.setText(null);
        jTextField5.setText(null);
        for (int k = 0; k < jTable12.getRowCount(); k++) {
            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                jTable12.getModel().setValueAt(null, k, r);
            }
        }
    }//GEN-LAST:event_cancelbtn2ActionPerformed

    private void exitbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn2ActionPerformed

    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButton12Clicked();         // TODO add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        searchButton3Clicked();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed

    private void jTextField111112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111112CaretUpdate
        if (this.jTextField111111.getCaretPosition() < 2) {
            System.out.print("Nothing");
        } else {
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                    + "DISTINCT requisition_no as rq_number,(date) as date, store_name,cost_center FROM st_receive_requisation "
                    + "WHERE requisition_no ILIKE '" + jTextField111111.getText().toString() + "%' AND "
                    //+ "cost_center ilike '" + this.jComboBox11.getSelectedItem().toString() + "%' AND "
                    //+ "store_name ilike '" + this.jComboBox2.getSelectedItem().toString() + "%'  AND "
                    + "(quantity-qty_issued) > 0 ORDER BY requisition_no"));
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);

        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField111112CaretUpdate

    private void jSearchTable112MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable112MouseClicked
        //        jTextField39.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 0).toString());
        //
        //        jSearchDialog111.dispose();
        //        for (int k = 0; k < jTable1.getRowCount(); k++) {
        //            for (int r = 0; r < jTable1.getColumnCount(); r++) {
        //                jTable1.getModel().setValueAt(null, k, r);
        //            }
        //        }
        //        this.populateTable22(this.jTextField39.getText().toString());
        //
        //        /*
        //        * try { for (int j = 0; j < jTable1.getRowCount(); j++) { //
        //            * java.sql.Statement stmtTable111 = connectDB.createStatement(); if
        //            * (jTable1.getModel().getValueAt(j, 0) != null) {
        //                *
        //                * java.sql.Statement stmtTable11 = connectDB.createStatement();
        //                * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
        //                    * sum(qty) FROM stock_balance_qty WHERE item_code ilike '" +
        //                    * jTable1.getValueAt(j, 0).toString() + "' AND department ILIKE '" +
        //                    * jComboBox2.getSelectedItem() + "' AND dates <= '" +
        //                    * datePicker1.getDate() + "'"); java.sql.Statement stmtTable11x =
        //                * connectDB.createStatement(); java.sql.ResultSet rsetTable11x =
        //                * stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty
        //                    * WHERE item_code ilike '" + jTable1.getValueAt(j, 0).toString() + "'
        //                    * AND department ILIKE '" + jComboBox11.getSelectedItem() + "' AND
        //                    * dates <= '" + datePicker1.getDate() + "'");
        //                    *
        //                    *
        //                    * while (rsetTable11x.next()) { while (rsetTable11.next()) { double
        //                        * storeBal = 0; double depBal = 0; storeBal = rsetTable11.getDouble(1);
        //                        * depBal = rsetTable11x.getDouble(1); jTable1.setValueAt(storeBal, j,
        //                            * 4); jTable1.setValueAt(depBal, j, 5); } } } } } catch
        //    * (java.sql.SQLException sqlExec) {
        //        *
        //        * javax.swing.JOptionPane.showMessageDialog(this,
        //            * sqlExec.getMessage()); }
        //    */
        //    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable112MouseClicked

    private void jButton5112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5112ActionPerformed
        searchPR.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5112ActionPerformed
    private void searchButton13Clicked() {

        java.awt.Point p = this.TenderNoTxt.getLocationOnScreen();
        searchtorder.setLocation(p);
        searchtorder.setSize(400, 300);
        searchtorder.setVisible(true);
        searchtorder.setModal(false);

    }

    private void searchButtonClicked5() {
        java.awt.Point p = this.suppliertxt.getLocationOnScreen();
        searchtorder1.setLocation(p);
        searchtorder1.setSize(400, 300);
        searchtorder1.setVisible(true);
        searchtorder1.setModal(false);
    }
    private void searchButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton5ActionPerformed
        System.out.println("Showing dialog");

        java.awt.Point point = this.jTextField39.getLocationOnScreen();

        QuotationFinEvaluationSbx.setSize(400, 200);

        QuotationFinEvaluationSbx.setLocation(point);
        QuotationFinEvaluationSbx.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton5ActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        ////check the Tabbed Pane clicked
        if (jTabbedPane2.getSelectedIndex() == 2) {

            MainPanellToLoad = new JPanel();
            jSplitPane1.setDividerLocation(84);
            MainPanellToLoad = (JPanel) new UniversalDashboard(connectDB, null);
            TechnicalEvalutionMainPane.removeAll();
            TechnicalEvalutionMainPane.setLayout(new java.awt.BorderLayout());
            TechnicalEvalutionMainPane.add(MainPanellToLoad, java.awt.BorderLayout.CENTER);
            TechnicalEvalutionMainPane.updateUI();

        }
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        ////check the Tabbed Pane clicked
        MainPanellToLoad = new JPanel();
        jSplitPane1.setDividerLocation(84);
        MainPanellToLoad = (JPanel) new quotationsEvalpnl(connectDB, null);
        TechnicalEvalutionMainPane.removeAll();
        TechnicalEvalutionMainPane.setLayout(new java.awt.BorderLayout());
        TechnicalEvalutionMainPane.add(MainPanellToLoad, java.awt.BorderLayout.CENTER);
        TechnicalEvalutionMainPane.updateUI();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField115CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField115CaretUpdate
        if (jTextField115.getCaretPosition() >= 4) {
            System.out.println("Nothing");
        } else {
            jSearchTable6.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier,openning_date  FROM  st_floated_quotations  WHERE quotation_no ilike '" + jTextField38.getText() + "%' order by 1"));

            jSearchTable6.setShowHorizontalLines(false);
            jSearchScrollPane6.setViewportView(jSearchTable6);

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField115CaretUpdate

    private void jSearchTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable6MouseClicked
        supplieerTxt.setText(jSearchTable6.getValueAt(jSearchTable6.getSelectedRow(), 0).toString());
        // jTextField92.setText(jSearchTable6.getValueAt(jSearchTable6.getSelectedRow(), 0).toString());
        jSearchDialog3.dispose();
        try {
            java.sql.Statement pstmt = connectDB.createStatement();

            java.sql.ResultSet rs = pstmt.executeQuery("select current_user");
            while (rs.next()) {

                jTextField10.setText(rs.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable6MouseClicked

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton56ActionPerformed
        jSearchDialog3.dispose();
    }//GEN-LAST:event_jButton56ActionPerformed

    private void tenderrecordstxttCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxttCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxtt.getCaretPosition() < 4) {
            System.out.print("Nothing");

        } else {
            tenderrecordstblt.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct quotation_no  as Quotation_No   FROM st_technical_evaluation where approved=true and quotation_no ilike 'Q%' and quotation_no not in (select distinct quotation_no from st_orders) and quotation_no ilike '%" + tenderrecordstxtt.getText() + "%'"));
            //nb: cert_of_incorp is not null
            tenderrecordstblt.setShowHorizontalLines(false);

            tenderrecordsspnlt.setViewportView(tenderrecordstblt);

        }
    }//GEN-LAST:event_tenderrecordstxttCaretUpdate

    private void tenderrecordstxttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxttActionPerformed

    private void tenderrecordstbltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbltMouseClicked
        // TODO add your handling code here:

        jTextField39.setText(tenderrecordstblt.getValueAt(tenderrecordstblt.getSelectedRow(), 0).toString());
        for (int k = 0; k < jTable1.getModel().getRowCount(); k++) {
            for (int r = 0; r < jTable1.getModel().getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        for (int k = 0; k < jTable3.getModel().getRowCount(); k++) {
            for (int r = 0; r < jTable3.getModel().getColumnCount(); r++) {
                jTable3.getModel().setValueAt(null, k, r);
            }
        }

        try {
            //java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct b.code  , a.supplier  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.quotation_no = '"+tendernotxt1.getText().toString()+"' and te.");

            //java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct b.code,false award  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and supplier_name  in (select supplier from st_technical_evaluation  where quotation_no = '"+jTextField39.getText().toString()+"' and approved=true ) and a.quotation_no='"+jTextField39.getText().toString()+"'");
//            java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price)  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='"+jTextField39.getText().toString()+"' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='"+jTextField39.getText().toString()+"' group by b.code order by 3 asc");
//            ResultSet a = cde.executeQuery();
//            int i= 0;
//            while (a.next()){
//                jTable3.setValueAt(a.getString(1), i, 0);
//                jTable3.setValueAt(a.getBoolean(2),i, 1);
//                jTable3.setValueAt(a.getString(3), i, 2);
//
//                i++;
//            }
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price)  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='"+jTextField39.getText().toString()+"' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='"+jTextField39.getText().toString()+"' group by b.code order by 1 asc"));
            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total   FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 1"));
//            jLabel1.setText("this form has only bidders who passed the Technical evaluation; ONLY "+i+ "  bidders are visible for technical evaluation");
//            jLabel1.setForeground(Color.red);
//            jLabel1.setVisible(true);

            this.closebtnt.doClick();
        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }//GEN-LAST:event_tenderrecordstbltMouseClicked

    private void closebtntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtntActionPerformed
        // TODO add your handling code here:
        QuotationFinEvaluationSbx.dispose();
    }//GEN-LAST:event_closebtntActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        ////populating the products table
        // TODO add your handling code here:
        //
        String jk = jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString();

        for (int xc = 0; xc < jTable3.getModel().getRowCount(); xc++) {
            if (Boolean.valueOf(jTable3.getModel().getValueAt(xc, 1).toString()) == Boolean.TRUE) {
                num_val = xc;

                System.out.println("NUM VALUES in " + num_val);

            }

        }
        System.out.println("NUM VALUES " + num_val);
        if (num_val == 0) {
            //jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  item_code, item_description, days_to_deliver, quantity, unit_price,discount,vat,(quantity*unit_price) total_price,discount,vat,(quantity*unit_price)-((discount+vat)*0.01)*(quantity*unit_price) as netvalue  FROM st_floated_quotations where unit_price>0.00 and quotation_no='"+jTextField39.getText().toString()+"' and supplier =(select supplier_name from st_suppliers where code='"+a.toString()+"' ) "));
            jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  item_code, item_description, quantity,(quantity*unit_price) total_price  FROM st_floated_quotations where unit_price>0.00 and quotation_no ilike '" + jTextField39.getText().toString() + "' and supplier =(select supplier_name from st_suppliers where code='" + jk.toString() + "' )"));
            jTable4.setShowHorizontalLines(false);
            //jTable4.getModel().isCellEditable(jTable4.getRowCount(), jTable4.getColumnCount());

            jScrollPane6.setViewportView(jTable4);
        } else if (num_val >= 1) {

            JOptionPane.showMessageDialog(null, "You Cannot Award more than one  Bidders at The Same Time", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            jTable3.getModel().setValueAt(false, num_val, 1);

            num_val = 0;
            //jScrollPane8.setViewportView(jTable3);
        }

    }//GEN-LAST:event_jTable3MouseClicked

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
//       SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price),sum(a.quantity*a.unit_price)-((sum(0.01*a.discount)*sum(a.quantity*a.unit_price))+(sum(0.01*a.vat)*sum(a.quantity*a.unit_price)))  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='QNo80' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='QNo80' group by b.code order by 3 desc
        if (jComboBox2.getSelectedIndex() == 1) {

            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 3 asc "));
            jTable3.setShowHorizontalLines(false);
            jScrollPane8.setViewportView(jTable3);

        } else if (jComboBox2.getSelectedIndex() == 2) {
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"' and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 desc"));
            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total  FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 3 desc"));
            jTable3.setShowHorizontalLines(false);
            jScrollPane8.setViewportView(jTable3);
            jLabel2.setText(null);
        } else {

            jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct b.code,false award ,sum(a.quantity*a.unit_price) as Total   FROM st_floated_quotations a, st_suppliers b , st_technical_evaluation te where a.supplier=b.supplier_name and a.supplier=te.supplier and a.supplier  in (select supplier from st_technical_evaluation  where quotation_no ='" + jTextField39.getText().toString() + "' and approved=true ) and a.quotation_no=te.quotation_no and a.quotation_no='" + jTextField39.getText().toString() + "' group by b.code order by 1"));
            //jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct (select code from st_suppliers m where m.supplier_name=a.supplier), false Award, a.quantity*a.unit_price Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no='"+jTextField39.getText().toString()+"' and a.supplier= b.supplier   and b.approved = true group by a.supplier,a.quantity*a.unit_price "));
            jTable3.setShowHorizontalLines(false);
            jScrollPane8.setViewportView(jTable3);

        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged
    public String creatingFinancialYear() {
        String financial_yr = null;
        int limit_days = 30;
        int limit_mnth = 6;

        try {
            //        java.sql.Statement stmt=connectDB.createStatement();
//        java.sql.ResultSet res=stmt.executeQuery("select current_date::date");
//        
//        while (res.next()){
//        java.util.Date gets=res.getDate(1);

            Calendar now = Calendar.getInstance();
            int year = now.get(Calendar.YEAR);
            int month = now.get(Calendar.MONTH); // Note: zero based!
            int day = now.get(Calendar.DAY_OF_MONTH);

            Object yr = null, next_year = null;

            if (month >= limit_mnth && day >= limit_days) {

                yr = year;
                int y = year + 1;
                next_year = y;
                financial_yr = yr.toString() + "/" + next_year;

            } else {
                yr = year;
                int y = year - 1;
                next_year = y;
                financial_yr = next_year + "/" + yr;

            }

            // mm.setText(financial_yr);
        } catch (Exception esc) {
            esc.printStackTrace();

        }
        return financial_yr;

    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {
            Boolean check_insert = false;
            connectDB.setAutoCommit(false);
            String order_no1 = null, order_no = null, units = null;
            java.sql.Date current_date = null;
            // for (int i = 0; i < jTable3.getRowCount(); i++) {
            String s = jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 1).toString();
            System.out.println("mimi" + s);
            if (Boolean.valueOf(jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 1).toString()) == Boolean.TRUE) {
                    // lineNumber = lineNumber + 1;

                //  java.sql.PreparedStatement save = connectDB.prepareStatement("UPDATE st_floated_quotations"
                // UPDATE st_floated_quotations SET  ordered=true WHERE supplier ilike '' and quotation_no ilike ''
                System.out.println("mimi" + s);

                try {
                    int k = 0;
                    String b = null;
                    String n = jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString();
                    java.sql.PreparedStatement tafta = connectDB.prepareStatement("select supplier_name from st_suppliers where code='" + n + "'");
                    ResultSet sawa = tafta.executeQuery();
                    while (sawa.next()) {
                        b = sawa.getObject(1).toString();
                        //java.sql.PreparedStatement ok= connectDB.prepareStatement("");

                    }
                    for (int p = 0; p < jTable4.getModel().getRowCount(); p++) {
                        java.sql.PreparedStatement save1 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered=true WHERE supplier = '" + b + "' and quotation_no ilike '" + jTextField39.getText().toString() + "' and  item_description = '" + jTable4.getModel().getValueAt(p, 1).toString() + "' ");
                        save1.executeUpdate();
                    }
                    System.out.println("nimeupdate");
                    try {

                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select date_part('year',now())|| lpad('" + order_no1 + "',6,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            order_no = rs1.getObject(1).toString();
                        }
                    } catch (Exception est) {
                        est.printStackTrace();
                        System.out.println(est.getMessage());
                    }

                    //insert records for lpo (ordering)
                    int j;
                    String sup_name = null;
                    for (int i = 0; i < jTable4.getModel().getRowCount(); i++) {
                        String financial_yr = creatingFinancialYear();
                        String head = null, subhead = null, dated = null, dept = null, req_no = null;

                        ////awarding a  prequalified supplier
                        java.sql.Statement stmtssss = connectDB.createStatement();
                        java.sql.ResultSet ressss = stmtssss.executeQuery("SELECT  now()::date");
                        while (ressss.next()) {
                            dated = ressss.getString(1);

                        }

                        java.sql.Statement pstmtgg12 = connectDB.createStatement();
                        java.sql.ResultSet rs1sgg12 = pstmtgg12.executeQuery("select DISTINCT irq_no  from st_item_to_quote where  tender_no='" + jTextField39.getText() + "'"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");
                        while (rs1sgg12.next()) {
                            pur_req = rs1sgg12.getString(1);

                        }

                        int req_index = pur_req.indexOf("-");
                        String req = pur_req.substring(0, req_index);

                        java.sql.Statement pstmtgg1 = connectDB.createStatement();
                        java.sql.ResultSet rs1sgg1 = pstmtgg1.executeQuery("select store_name,requisition_no from st_receive_requisation where (requisition_no ilike 'PRQ%' or requisition_no ilike 'SRQ%') and requisition_no ='" + req + "'");

                        /////getting the ordering department
                        while (rs1sgg1.next()) {
                            dept = rs1sgg1.getString(1);
                            req_no = rs1sgg1.getString(2);
                        }

                        ////getting the units
                        java.sql.Statement pstmtgg124 = connectDB.createStatement();
                        java.sql.ResultSet rs1sgg124 = pstmtgg124.executeQuery("SELECT units from st_stock_item  where item_code='" + jTable4.getValueAt(i, 0).toString() + "' UNION select units_rate from services_list where service_code='" + jTable4.getValueAt(i, 0).toString() + "'"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");
                        /////getting the ordering department

                        while (rs1sgg124.next()) {

                            units = rs1sgg124.getString(1);
                        }

                        ///end
                        /////generating lpo/lso number
                        java.sql.PreparedStatement savelpo = connectDB.prepareStatement("INSERT INTO st_orders (quotation_no, supplier, criteria, item, quantity, unit_price,units,code,ordering_store, requisition_no)"
                                + " VALUES (?,?,?,?,?,?,?,?,?,?)");

                        java.sql.Statement st31 = connectDB.createStatement();
                        java.sql.ResultSet rset31 = st31.executeQuery("SELECT supplier_name from st_suppliers where code='" + jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString() + "'");

                        while (rset31.next()) {
                            sup_name = rset31.getString(1);
                        }

                        savelpo.setObject(1, jTextField39.getText().toString());
                        savelpo.setObject(2, sup_name);
                        savelpo.setObject(3, jComboBox2.getSelectedItem().toString());
                        savelpo.setObject(4, jTable4.getModel().getValueAt(i, 1).toString());
                        savelpo.setObject(5, jTable4.getModel().getValueAt(i, 2));
                        savelpo.setObject(6, jTable4.getModel().getValueAt(i, 3));
                        //savelpo.setObject(7, jTable4.getModel().getValueAt(i,2));
                        savelpo.setObject(7, units);
                        savelpo.setObject(8, jTable4.getModel().getValueAt(i, 0));
                        savelpo.setObject(9, dept);
                        savelpo.setObject(10, req_no);

                        savelpo.executeUpdate();

                        ////updating st_item_to_quote
                        /////get the votes affected by the item in the procurement
//                                            java.sql.Statement stmtsss = connectDB.createStatement();
//                                            java.sql.ResultSet resss= stmtsss.executeQuery("SELECT  head,subhead  FROM st_procurement_plan where item_code='"+jTable4.getModel().getValueAt(i, 0)+"' and item_description='"+jTable4.getModel().getValueAt(i, 1)+"' and financial_year='"+financial_yr+"'");
//                                            while(resss.next()){
//                                            head=resss.getString(1);
//                                            subhead=resss.getString(2);
//
//                                                   }
//                                  java.sql.PreparedStatement pstmtf = connectDB.prepareStatement("UPDATE st_item_to_quote   SET   vote=?, head=?, subhead=?,donor_code=?,sub_item_desc=?,donor_item=?,sub_item=? WHERE item_code='"+jTable4.getValueAt(i,0).toString()+"' and item_description='"+jTable4.getValueAt(i,1).toString()+"' and  tender_no='"+jTextField39.getText()+"'");
//                                  pstmtf.setObject(1,"01"); 
//                                  pstmtf.setObject(2,head);
//                                  pstmtf.setObject(3,subhead);
//                                  pstmtf.setObject(4,dated);
//                                  pstmtf.setObject(5,jTable4.getValueAt(i, 0));
//                                  pstmtf.setObject(6,"TRUE");
//                                  pstmtf.setObject(7,jTable4.getValueAt(i, 4));
//                                  pstmtf .executeUpdate();
                        check_insert = true;

                    }

                    System.out.println("nimeuptena");

                    if (check_insert == true) {

                        String awarding = "Awarded to " + sup_name;
                        JOptionPane.showMessageDialog(null, "Supplier Awarded Successfully");
                        java.sql.PreparedStatement pr_progress = connectDB.prepareStatement("UPDATE st_pr_progress SET evaluation=now()::date,awarding='" + awarding + "' where   approved_by_tc='" + jTextField39.getText() + "' ");

                        pr_progress.executeUpdate();
                        connectDB.commit();
                        connectDB.setAutoCommit(true);

                    }
                    for (int l = 0; l < jTable4.getRowCount(); l++) {
                        for (int r = 0; r < jTable4.getColumnCount(); r++) {
                            jTable4.getModel().setValueAt(null, l, r);
                        }
                    }

                    for (int t = 0; t < jTable3.getRowCount(); t++) {
                        for (int r = 0; r < jTable3.getColumnCount(); r++) {
                            jTable3.getModel().setValueAt(null, t, r);
                        }
                    }

                } catch (Exception n) {
                    n.printStackTrace();
                    System.out.println("Error " + n);
                }

            } else {
                int i = 0;
                javax.swing.JOptionPane.showMessageDialog(this, "PLEASE SELECT AWARD CHECKBOX for " + jTable3.getModel().getValueAt(jTable3.getSelectedRow(), i).toString() + " TO PROCEED", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (SQLException ex) {
            Logger.getLogger(SSOTendering.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField1114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1114CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1114CaretUpdate

    private void jSearchTable7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable7MouseClicked

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton57ActionPerformed

    private void jTextField1115CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1115CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1115CaretUpdate

    private void jSearchTable8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable8MouseClicked

    private void jButton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton58ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton58ActionPerformed

    private void postbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn4ActionPerformed
        System.out.println(md5("salim"));
        // this.jDialog1.setVisible(true);
        passwd.setSize(400, 200);
        passwd.setLocation(350, 230);
        //passwd.setLocation(point);
        passwd.setVisible(true);
        jPasswordField5.setText(null);
    }//GEN-LAST:event_postbtn4ActionPerformed

    private void resetbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn3ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = itemsTbl.getSelectedRowCount();

        int[] selectedRows = itemsTbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                defTableModel.removeRow(itemsTbl.getSelectedRow());
            }
        }

    }//GEN-LAST:event_resetbtn3ActionPerformed

    private void cancelbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelbtn3ActionPerformed

    private void exitbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn3ActionPerformed

    private void searchButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton6ActionPerformed
        searchButton13Clicked();         // TODO add your handling code here:
    }//GEN-LAST:event_searchButton6ActionPerformed

    private void searchButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton7ActionPerformed
        searchButtonClicked5();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton7ActionPerformed

    private void jTextField1118CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1118CaretUpdate
        // TODO add your handling code here:
        if (jTextField1118.getCaretPosition() > 3) {
//            System.out.println("Nothing");
//        } else {
            jSearchTable11.setShowHorizontalLines(false);
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct quotation_no Quotation_No from st_orders WHERE quotation_no ilike '%/Q/%' and quotation_no ilike '%" + jTextField1118.getText() + "%'"));
            jSearchScrollPane11.setViewportView(jSearchTable11);
        }
    }//GEN-LAST:event_jTextField1118CaretUpdate

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        // TODO add your handling code here:
        TenderNoTxt.setText(jSearchTable11.getModel().getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        this.searchtorder.dispose();
        jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct supplier from st_orders where quotation_no='" + TenderNoTxt.getText() + "' "));


    }//GEN-LAST:event_jSearchTable11MouseClicked

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        // TODO add your handling code here:
        this.searchtorder.dispose();
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jTextField1119CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1119CaretUpdate
        // TODO add your handling code here:
        if (jTextField1119.getCaretPosition() < 2) {
            System.out.println();
        } else {
            jSearchTable12.setShowHorizontalLines(false);
            jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct supplier from st_orders where quotation_no= '" + TenderNoTxt.getText() + "' and supplier ilike '%" + jTextField1115.getText() + "%' "));
            jSearchScrollPane12.setViewportView(jSearchTable12);
        }

    }//GEN-LAST:event_jTextField1119CaretUpdate

    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        // TODO add your handling code here:
        suppliertxt.setText(jSearchTable12.getModel().getValueAt(jSearchTable12.getSelectedRow(), 0).toString());

        //populate table
        try {

            //populating table
            int i = 0, j = 0;
            String r = suppliertxt.getText().toString();
            String e = TenderNoTxt.getText().toString();

            java.sql.Statement stmtTable1 = connectDB.createStatement();
//            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT  distinct a.code, b.item_description, b.quotation_date, b.openning_date , b.units, b.quantity,b.unit_price  FROM st_orders a, st_floated_quotations b "
//                + "where b.quotation_no=a.quotation_no and  b.quotation_no = '"+e+"' and b.supplier='"+r+"'  and a.ordered = false ");
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT  distinct code, item, units, quantity,unit_price  FROM st_orders "
                    + "where  quotation_no = '" + e + "' and supplier='" + r + "'  and order_no is null  ");

            while (rsetTable1.next()) {

                System.out.println("Working at table row " + i);

                //jTextField11.setText(rsetTable1.getObject(3).toString());
                //jTextField12.setText(rsetTable1.getObject(4).toString());
                itemsTbl.setValueAt(i + 1, i, 0);

                itemsTbl.setValueAt(rsetTable1.getObject(1), i, 1);
                itemsTbl.setValueAt(rsetTable1.getObject(2), i, 2);
                itemsTbl.setValueAt(rsetTable1.getObject(3), i, 3);
                itemsTbl.setValueAt(rsetTable1.getObject(4), i, 4);
                itemsTbl.setValueAt(rsetTable1.getObject(5), i, 5);

                i++;

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        this.searchtorder1.dispose();
    }//GEN-LAST:event_jSearchTable12MouseClicked

    private void jButton62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton62ActionPerformed
        // TODO add your handling code here:
        this.searchtorder1.dispose();
    }//GEN-LAST:event_jButton62ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:

        String currentUser = null;
        java.lang.String access_code = null, units = null;
        String dept = null, req_no = null;
        try {

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.PreparedStatement pstmtsd = connectDB.prepareStatement("select authorisation from secure_levels_access where  login_username='" + currentUser + "' and menu_access='Quotation' and authorisation='" + md5(jPasswordField5.getText()) + "'");

            java.sql.ResultSet rsetsd = pstmtsd.executeQuery();
            while (rsetsd.next()) {
                access_code = rsetsd.getObject(1).toString();
            }

            if (md5(jPasswordField5.getText()).equals(access_code)) {
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker6.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker6.getDate().before(periodFrom) || datePicker6.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (itemsTbl.isEditing()) {
                        itemsTbl.getCellEditor().stopCellEditing();
                    }

                    String oder_no = null;

                    double quantity = 0.00;

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);

                    System.out.println(datenowSql.toString());
//registering savepointr
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    //begin insert-orderno generation
                    try {
                        String order_no1 = null;
                        java.sql.Date current_date = null;
                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select lpad ('" + order_no1 + "',10,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            oder_no = rs1.getObject(1).toString();
                        }

                        System.out.println("" + oder_no + "");
                        //insert into db

                        java.lang.Boolean checker = true;
                        String unallocateditems = " ";

                        if (jComboBox11.getSelectedIndex() != 0) {
                            for (int h = 0; h < itemsTbl.getRowCount(); h++) {
                                if (itemsTbl.getValueAt(h, 2) != null) {

                                    /////generating an LPO NUMBER
                                    java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE st_orders SET  order_no ='" + oder_no + "',criteria='" + jComboBox12.getSelectedItem().toString() + "',doc_type='" + jComboBox11.getSelectedItem() + "',gross_value='" + java.lang.Double.valueOf(itemsTbl.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(itemsTbl.getValueAt(h, 4).toString()) + "',net_value='" + java.lang.Double.valueOf(itemsTbl.getValueAt(h, 5).toString()) * java.lang.Double.valueOf(itemsTbl.getValueAt(h, 4).toString()) + "',date_due='" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker6.getDate()) + "' WHERE quotation_no='" + TenderNoTxt.getText() + "' and code='" + itemsTbl.getValueAt(h, 1).toString() + "' and item ilike '" + itemsTbl.getValueAt(h, 2).toString() + "' and supplier ILIKE '" + suppliertxt.getText() + "'");
                                    pstmt8121.executeUpdate();

                                    java.sql.PreparedStatement savelpo1 = connectDB.prepareStatement("INSERT INTO st_recommendation(supplier, quotation_no,supplier_code , discount_rate, item_code,description, unit, price, vat, date,\n"
                                            + "  user_name, financial_year,ordered_qty)\n"
                                            + "    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );");

                                    savelpo1.setObject(1, suppliertxt.getText().toUpperCase());
                                    savelpo1.setObject(2, TenderNoTxt.getText());
                                    savelpo1.setObject(3, h);
                                    savelpo1.setObject(4, 0.0);
                                    savelpo1.setObject(5, itemsTbl.getValueAt(h, 1));
                                    savelpo1.setObject(6, itemsTbl.getValueAt(h, 2));
                                    savelpo1.setObject(7, itemsTbl.getValueAt(h, 3));
                                    savelpo1.setObject(8, itemsTbl.getValueAt(h, 5));
                                    savelpo1.setObject(9, 0.00);
                                    savelpo1.setObject(10, com.afrisoftech.lib.ServerTime.getSQLTimeStamp(connectDB));
                                    savelpo1.setObject(11, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
                                    savelpo1.setObject(12, com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
                                    //select units, item_code from stockitem where description ='AMOXICILLIN 250MG CAPSULES'
                                    savelpo1.setObject(13, Double.valueOf(itemsTbl.getValueAt(h, 4).toString()));
                                    savelpo1.executeUpdate();

                                    checker = true;
                                }
                            }

                            System.out.println("The value for checker is " + checker);

                            if (checker == false) {

                                javax.swing.JOptionPane.showMessageDialog(this, "Double Check your Entries  ", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                            } else {

                                ////updating the progress tracker
                                String raised_lpo_lso = jComboBox11.getSelectedItem() + "-" + oder_no;
//                        java.sql.PreparedStatement pr_progress= connectDB.prepareStatement("UPDATE st_pr_progress SET raise_lpo_lso='"+raised_lpo_lso+"' where   approved_by_tc='" + jTextField40.getText()+"' ");
//            
//                                 pr_progress.executeUpdate();
                                TenderTrack.TrackTable(connectDB, "raise_lpo_lso", oder_no + "-" + com.afrisoftech.lib.UserName.getLoginName(connectDB) + "(" + com.afrisoftech.lib.UserName.getServerDate(connectDB) + ")", TenderNoTxt.getText());

                                connectDB.commit();
                                connectDB.setAutoCommit(true);

                                javax.swing.JOptionPane.showMessageDialog(this, "You have generated an " + jComboBox11.getSelectedItem() + " (" + oder_no + " ) successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                                Double totalLPOamount = TableColumnTotal.getTableColumnTotal(itemsTbl, 6);

//                                if (totalLPOamount < getLimitCSO()) {
//
//                                    java.sql.PreparedStatement pr_order = connectDB.prepareStatement("UPDATE st_orders SET chief_approval=TRUE WHERE order_no='" + oder_no + "' AND   quotation_no='" + TenderNoTxt.getText() + "' AND supplier ='" + suppliertxt.getText() + "'  ");
//                                    pr_order.executeUpdate();
//                                }
//
//                                if (totalLPOamount < getLimitSAD()) {
//
//                                    java.sql.PreparedStatement pr_order = connectDB.prepareStatement("UPDATE st_orders SET sad_approval=TRUE WHERE order_no='" + oder_no + "' AND   quotation_no='" + TenderNoTxt.getText() + "' AND supplier ='" + suppliertxt.getText() + "'  ");
//                                    pr_order.executeUpdate();
//                                }
                                passwd.dispose();
                                for (int k = 0; k < itemsTbl.getRowCount(); k++) {
                                    for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
                                        itemsTbl.getModel().setValueAt(null, k, r);
                                    }
                                }

                                this.postbtn3.setEnabled(false);

                            }

                        } else {
                            javax.swing.JOptionPane.showMessageDialog(this, "You Need to choose the document Type", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            passwd.dispose();
                        }
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            sql.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());

                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "You dont have the permission to Raise an LPO/LSO Number", "WARNING", JOptionPane.ERROR_MESSAGE);
                passwd.dispose();
                jButton2.doClick();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButton17ActionPerformed
    private Double getLimitCSO() {
        Double limit = 0.0;
        try {
            PreparedStatement pst = connectDB.prepareStatement(" SELECT distinct csolimit from st_stock_control");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {
                limit = rset.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderingTenderItemsintfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        return limit;
    }

    private Double getLimitSAD() {
        Double limit = 0.0;
        try {
            PreparedStatement pst = connectDB.prepareStatement(" SELECT distinct sadlimit from st_stock_control");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {
                limit = rset.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderingTenderItemsintfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        return limit;
    }

    public Boolean checkPasswordModality() {
        Boolean modality = false;
        if (jPasswordField3.getText().equals(jPasswordField4.getText())) {
            modality = true;

        } else {
            modality = false;
        }

        return modality;

    }

    public static String md5(String input) {

        String md5 = null;

        if (null == input) {
            return null;
        }

        try {

            //Create MessageDigest object for MD5
            MessageDigest digest = MessageDigest.getInstance("MD5");

            //Update input string in message digest
            digest.update(input.getBytes(), 0, input.length());

            //Converts message digest value in base 16 (hex)
            md5 = new BigInteger(1, digest.digest()).toString(16);

        } catch (NoSuchAlgorithmException e) {

            e.printStackTrace();
        }
        return md5;
    }
    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        this.passwd.dispose();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        encrptedpasswordDialog.setSize(400, 200);
        encrptedpasswordDialog.setLocation(350, 230);
        //passwd.setLocation(point);
        encrptedpasswordDialog.setVisible(true);

        passwd.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jPasswordField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusLost

        java.lang.String currPassWord = null, currentUser = null;

        currPassWord = this.jPasswordField2.getText();
        int nums = 0, num2 = 0;

        try {
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtsd = connectDB.createStatement();

            java.sql.ResultSet rsetsd = stmtsd.executeQuery("SELECT count(*) from secure_levels_access where  login_username='" + currentUser + "' and menu_access='Quotation'");

            while (rsetsd.next()) {
                num2 = rsetsd.getInt(1);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='" + md5(jPasswordField2.getText()) + "' and  login_username='" + currentUser + "' and menu_access='Quotation'");

            while (rsets.next()) {
                nums = rsets.getInt(1);

            }

            if (nums == 0 && !jPasswordField2.getText().equals("nothing")) {

                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "You have typed your current password incorrectly");
                jPasswordField2.setText(null);
                //       jPasswordField1.grabFocus();

            } else if (nums == 1 && !jPasswordField2.getText().equals("nothing") && num2 >= 1) {

                jButton8.setText("Change Password");

            } else if (nums == 0 && jPasswordField2.getText().equals("nothing") && num2 != 1) {
                System.out.println("DO NOTHING");
            } else if (nums == 0 && jPasswordField2.getText().equals("nothing") && num2 == 1) {
                javax.swing.JOptionPane.showMessageDialog(null, "You already have an existing password", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                jPasswordField2.setText(null);

            }

            if (jPasswordField2.getText().equals("nothing")) {

                jButton8.setText("Set Password");

            }

        } catch (Exception efg) {
            efg.printStackTrace();

        }

        // Add your handling code here:
    }//GEN-LAST:event_jPasswordField2FocusLost

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        encrptedpasswordDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        java.lang.String currPassWord = null;

        currPassWord = this.jPasswordField1.getText();

        java.lang.String currentUser = null;
        int num = 0, num_user = 0;
        String fullname = null, group = null;

        /////getting the current password
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT CURRENT_USER");

            while (rset1.next()) {

                currentUser = rset1.getString(1);

            }

            java.sql.Statement stmtSS = connectDB.createStatement();

            java.sql.ResultSet rsetSS = stmtSS.executeQuery("SELECT CONCAT(f_name,' ',l_name) ,group_name from secure_menu_access where login_name='" + currentUser + "'");

            while (rsetSS.next()) {

                fullname = rsetSS.getString(1);
                group = rsetSS.getString(2);

            }

            java.sql.Statement stmts = connectDB.createStatement();

            java.sql.ResultSet rsets = stmts.executeQuery("SELECT count(*) from secure_levels_access where authorisation='" + md5(jPasswordField2.getText()) + "' and  login_username='" + currentUser + "' and menu_access='Quotation'");

            while (rsets.next()) {
                num = rsets.getInt(1);

            }

            java.sql.Statement stmtsg = connectDB.createStatement();

            java.sql.ResultSet rsetsg = stmtsg.executeQuery("SELECT count(*) from secure_levels_access where   login_username='" + currentUser + "' and menu_access='Quotation'");

            while (rsetsg.next()) {
                num_user = rsetsg.getInt(1);

            }
            if (checkPasswordModality() == true) {

                if (jButton8.getActionCommand().equals("Set Password")) {

                    if (num == 0 && num_user == 0) {
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO secure_levels_access(login_username, login_name, group_name, authorisation,menu_access,limit_amount) VALUES (?, ?, ?, ?,?,?)");
                        pstmt2.setObject(1, currentUser);
                        // pstmt2.setObject(1, jTextField1.getText().toUpperCase());
                        pstmt2.setObject(2, fullname);
                        pstmt2.setObject(3, group);
                        pstmt2.setObject(4, md5(jPasswordField4.getText()));
                        pstmt2.setObject(5, "Quotation");
                        pstmt2.setDouble(6, Double.parseDouble(jTextField2.getText()));
                        pstmt2.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Password Created Successfully", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField2.setText(null);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);
                        jTextField2.setText(null);

                    }
                } else {

                    if (num == 1 && num_user == 1) {
                        java.sql.PreparedStatement pstmts = connectDB.prepareStatement("UPDATE secure_levels_access set authorisation='" + md5(jPasswordField4.getText()) + "' where authorisation='" + md5(jPasswordField2.getText()) + "' and login_username='" + currentUser + "' and menu_access='Quotation'");
                        pstmts.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Password Changed Successfully", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                        jPasswordField2.setText(null);
                        jPasswordField3.setText(null);
                        jPasswordField4.setText(null);
                    } else {
                        jButton8.setText("Set Password");

                    }
                }
                //            if(num_user>=1&&num==1){
                //             JOptionPane.showMessageDialog(null,"Password Changed Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                //
                //            }
            } else {
                JOptionPane.showMessageDialog(null, "Password Mismatch", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                jPasswordField3.setText(null);
                jPasswordField4.setText(null);
            }
        } catch (Exception dfg) {
            dfg.printStackTrace();

        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void encrptedpasswordDialogcloseDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_encrptedpasswordDialogcloseDialog
        setVisible(false);
        encrptedpasswordDialog.dispose();
    }//GEN-LAST:event_encrptedpasswordDialogcloseDialog

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        if (jTabbedPane1.getSelectedIndex() == 4) {
            jTabbedPane1.setSelectedIndex(3);
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jPasswordField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField5ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jPasswordField5ActionPerformed

    private void quoteNocmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quoteNocmbxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_quoteNocmbxActionPerformed

    private void quoteNocmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_quoteNocmbxItemStateChanged

        java.sql.Date odate = null;
        try {
            // TODO add your handling code here:
            java.sql.Statement stmtfg = connectDB.createStatement();
            java.sql.ResultSet rsetfg = stmtfg.executeQuery("select  opening_date from st_tenders where ref_no ilike '" + quoteNocmbx.getSelectedItem() + "%' and  opening_date is not null ");
            while (rsetfg.next()) {

                odate = rsetfg.getDate(1);

            }
        } catch (SQLException ex) {
            Logger.getLogger(SSOQuotation.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }

        if (odate != null) {
            openingdpckr.setDate(odate);
            openingdpckr.setEnabled(false);
        } else {
            openingdpckr.setEnabled(true);
            openingdpckr.setDate(floatedDate.getDate());

        }

    }//GEN-LAST:event_quoteNocmbxItemStateChanged

    private void itemsTblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsTblKeyReleased
        // TODO add your handling code here:
        if (itemsTbl.getModel().getValueAt(itemsTbl.getSelectedRow(), 0) != null) {

            double qty = java.lang.Float.parseFloat(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 4).toString());
            double price = java.lang.Float.parseFloat(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 5).toString());
            double total = qty * price;
            itemsTbl.setValueAt(total, itemsTbl.getSelectedRow(), 6);
        }
    }//GEN-LAST:event_itemsTblKeyReleased

    private void populate(String prq) {
        int j = 0;
        try {

            for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }

            java.sql.Statement stmtTable111 = connectDB.createStatement();
            java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT item_code, item_description, units, quantity,store_name  FROM st_receive_requisation  where  requisition_no = '" + prno.getText().toString() + "' and monthly_usage='Quotation'  and item_code not in (select distinct item_code from st_item_to_quote where tender_no ilike '" + quoteNocmbx.getSelectedItem() + "')");

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                jTable1.setValueAt(rsetTable111.getObject(1), j, 0);
                jTable1.setValueAt(rsetTable111.getObject(2), j, 1);
                jTable1.setValueAt(rsetTable111.getObject(3), j, 2);
                jTable1.setValueAt(rsetTable111.getObject(4), j, 3);
                jTextField6.setText(rsetTable111.getObject(5).toString());

                j++;
                //}
            }
            if (j < 1) {

                JOptionPane.showMessageDialog(this, "Items on PR exhausted");
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }

    }
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        if (!quoteNocmbx.getSelectedItem().toString().equalsIgnoreCase("-")) {
            prno.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());
            populate(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());
        } else {
            JOptionPane.showMessageDialog(this, "Select Quotation No first");
        }

    }//GEN-LAST:event_jTable2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EvaluationTypePane;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JDialog QuotationFinEvaluationSbx;
    private javax.swing.JPanel TechnicalEvaluationPane;
    public static javax.swing.JPanel TechnicalEvalutionMainPane;
    private javax.swing.JTextField TenderNoTxt;
    private javax.swing.JPanel actionPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JButton cancelbtn2;
    private javax.swing.JButton cancelbtn3;
    private javax.swing.JButton closebtnt;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private com.afrisoftech.lib.DatePicker datePicker5;
    private com.afrisoftech.lib.DatePicker datePicker6;
    private javax.swing.JDialog dispatchQs;
    private javax.swing.JDialog encrptedpasswordDialog;
    private javax.swing.JButton exitbtn;
    private javax.swing.JButton exitbtn1;
    private javax.swing.JButton exitbtn2;
    private javax.swing.JButton exitbtn3;
    private com.afrisoftech.lib.DatePicker floatedDate;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton5112;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JPasswordField jPasswordField5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog112;
    private javax.swing.JDialog jSearchDialog13;
    private javax.swing.JDialog jSearchDialog14;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JDialog jSearchDialog5;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel112;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JPanel jSearchPanel4;
    private javax.swing.JPanel jSearchPanel5;
    private javax.swing.JPanel jSearchPanel6;
    private javax.swing.JPanel jSearchPanel7;
    private javax.swing.JPanel jSearchPanel8;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane112;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JScrollPane jSearchScrollPane4;
    private javax.swing.JScrollPane jSearchScrollPane5;
    private javax.swing.JScrollPane jSearchScrollPane6;
    private javax.swing.JScrollPane jSearchScrollPane7;
    private javax.swing.JScrollPane jSearchScrollPane8;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable112;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JTable jSearchTable4;
    private javax.swing.JTable jSearchTable5;
    private javax.swing.JTable jSearchTable6;
    private javax.swing.JTable jSearchTable7;
    private javax.swing.JTable jSearchTable8;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111111;
    private javax.swing.JTextField jTextField111112;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField1114;
    private javax.swing.JTextField jTextField1115;
    private javax.swing.JTextField jTextField1118;
    private javax.swing.JTextField jTextField1119;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField115;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private com.afrisoftech.lib.DatePicker openingdpckr;
    private javax.swing.JDialog passwd;
    private javax.swing.JButton postbtn1;
    private javax.swing.JButton postbtn2;
    private javax.swing.JButton postbtn3;
    private javax.swing.JButton postbtn4;
    private javax.swing.JTextField prno;
    private javax.swing.JTextField quotation_notxt;
    private javax.swing.JComboBox quoteNocmbx;
    private javax.swing.JDialog receiveRFPs;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton resetbtn1;
    private javax.swing.JButton resetbtn2;
    private javax.swing.JButton resetbtn3;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JButton searchButton5;
    private javax.swing.JButton searchButton6;
    private javax.swing.JButton searchButton7;
    private javax.swing.JDialog searchPR;
    private javax.swing.JTextField searchquottxt;
    private javax.swing.JDialog searchtorder;
    private javax.swing.JDialog searchtorder1;
    private javax.swing.JTextField supplTxt;
    private javax.swing.JTextField supplieerTxt;
    private javax.swing.JDialog supplier2dispatch;
    private javax.swing.JTextField suppliertxt;
    private javax.swing.JPanel tenderrecordspnlt;
    private javax.swing.JScrollPane tenderrecordsspnlt;
    private javax.swing.JTable tenderrecordstblt;
    private javax.swing.JTextField tenderrecordstxtt;
    // End of variables declaration//GEN-END:variables
}
