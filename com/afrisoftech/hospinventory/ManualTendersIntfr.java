/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.TableModel;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.GetItemInfo;
import com.afrisoftech.lib.SQLDateFormat;
import java.awt.Color;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author saleem
 */
public class ManualTendersIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form TenderAdIntfr
     */
    JComboBox cmbox51 = new JComboBox();
    JComboBox cmbox52 = new JComboBox();
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.sql.Connection connectDB = null;
    private int count;
    private String tenderno;
    private int occurences;
    private int no;
    private int editclicked;
    private int offset;
    private int limit;

    public ManualTendersIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB, int opens) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
        if (opens == 3) {
            jTabbedPane1.setSelectedIndex(3);
        } else {
            if (opens == 0) {
                jTabbedPane1.setSelectedIndex(0);
            } else {
                jTabbedPane1.setSelectedIndex(2);

            }
        }

        cmbox51.setModel(supplierCmbx.getModel());
        cmbox52.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT DISTINCT bulk_supply_unit FROM st_packing "));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchtender1 = new javax.swing.JDialog();
        tenderrecordspnl1 = new javax.swing.JPanel();
        tenderrecordstxt1 = new javax.swing.JTextField();
        tenderrecordsspnl1 = new javax.swing.JScrollPane();
        tenderrecordstbl1 = new com.afrisoftech.dbadmin.JTable();
        closebtn2 = new javax.swing.JButton();
        searchtender = new javax.swing.JDialog();
        tenderrecordspnl = new javax.swing.JPanel();
        tenderrecordstxt = new javax.swing.JTextField();
        tenderrecordsspnl = new javax.swing.JScrollPane();
        tenderrecordstbl = new com.afrisoftech.dbadmin.JTable();
        closebtn1 = new javax.swing.JButton();
        uploadItemsDialog = new javax.swing.JDialog();
        tenderrecordspnl2 = new javax.swing.JPanel();
        itemsuploadtxt = new javax.swing.JTextField();
        tenderrecordsspnl2 = new javax.swing.JScrollPane();
        itemsuploadtbl = new com.afrisoftech.dbadmin.JTable();
        closebtn3 = new javax.swing.JButton();
        awardItemsDialog = new javax.swing.JDialog();
        tenderrecordspnl3 = new javax.swing.JPanel();
        itemsuploadtxt1 = new javax.swing.JTextField();
        tenderrecordsspnl3 = new javax.swing.JScrollPane();
        itemsuploadtbl1 = new com.afrisoftech.dbadmin.JTable();
        closebtn4 = new javax.swing.JButton();
        servOrgoods = new javax.swing.ButtonGroup();
        quotOrTenderno = new javax.swing.ButtonGroup();
        ExceluploadDialog = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        searchUnits = new javax.swing.JDialog();
        tenderrecordspnl4 = new javax.swing.JPanel();
        tenderrecordstxt2 = new javax.swing.JTextField();
        tenderrecordsspnl4 = new javax.swing.JScrollPane();
        unitsTbl = new com.afrisoftech.dbadmin.JTable();
        closebtn5 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tendersGenerationtbl = new javax.swing.JTable();
        savetDbtn = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        finYrtxt = new javax.swing.JTextField();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        initialsTxt = new javax.swing.JTextField();
        tenderChk = new javax.swing.JCheckBox();
        rfqChk = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tenderItemstable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        saveButntender = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        prvsbtn = new javax.swing.JButton();
        nxtbtn = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        storecmbx = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        tenderTxt = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        categoryccmbx = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        tendeDescTxt = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        editBtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        rmvRow = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        supplierCmbx = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        tenderNumbertxt = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        descriptionAwardtxt = new javax.swing.JTextField();
        supplierCodetxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        awardItemstbl = new javax.swing.JTable();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        tenderedTxt = new javax.swing.JLabel();
        previewUploadBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        decisionTxt = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        searchtender1.setModal(true);
        searchtender1.setUndecorated(true);
        searchtender1.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl1.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt1CaretUpdate(evt);
            }
        });
        tenderrecordstxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl1.add(tenderrecordstxt1, gridBagConstraints);

        tenderrecordstbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl1.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl1MouseClicked(evt);
            }
        });
        tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl1.add(tenderrecordsspnl1, gridBagConstraints);

        closebtn2.setText("Close");
        closebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl1.add(closebtn2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender1.getContentPane().add(tenderrecordspnl1, gridBagConstraints);

        searchtender.setModal(true);
        searchtender.setUndecorated(true);
        searchtender.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxtCaretUpdate(evt);
            }
        });
        tenderrecordstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl.add(tenderrecordstxt, gridBagConstraints);

        tenderrecordstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstblMouseClicked(evt);
            }
        });
        tenderrecordsspnl.setViewportView(tenderrecordstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl.add(tenderrecordsspnl, gridBagConstraints);

        closebtn1.setText("Close");
        closebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl.add(closebtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender.getContentPane().add(tenderrecordspnl, gridBagConstraints);

        uploadItemsDialog.setModal(true);
        uploadItemsDialog.setUndecorated(true);
        uploadItemsDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl2.setLayout(new java.awt.GridBagLayout());

        itemsuploadtxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemsuploadtxtCaretUpdate(evt);
            }
        });
        itemsuploadtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsuploadtxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl2.add(itemsuploadtxt, gridBagConstraints);

        itemsuploadtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        itemsuploadtbl.setToolTipText("Click on the target row to select the patient from the search.");
        itemsuploadtbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        itemsuploadtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsuploadtblMouseClicked(evt);
            }
        });
        tenderrecordsspnl2.setViewportView(itemsuploadtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl2.add(tenderrecordsspnl2, gridBagConstraints);

        closebtn3.setText("Close");
        closebtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl2.add(closebtn3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        uploadItemsDialog.getContentPane().add(tenderrecordspnl2, gridBagConstraints);

        awardItemsDialog.setModal(true);
        awardItemsDialog.setUndecorated(true);
        awardItemsDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl3.setLayout(new java.awt.GridBagLayout());

        itemsuploadtxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemsuploadtxt1CaretUpdate(evt);
            }
        });
        itemsuploadtxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsuploadtxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl3.add(itemsuploadtxt1, gridBagConstraints);

        itemsuploadtbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        itemsuploadtbl1.setToolTipText("Click on the target row to select the patient from the search.");
        itemsuploadtbl1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        itemsuploadtbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsuploadtbl1MouseClicked(evt);
            }
        });
        tenderrecordsspnl3.setViewportView(itemsuploadtbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl3.add(tenderrecordsspnl3, gridBagConstraints);

        closebtn4.setText("Close");
        closebtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl3.add(closebtn4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        awardItemsDialog.getContentPane().add(tenderrecordspnl3, gridBagConstraints);

        ExceluploadDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ExceluploadDialog.getContentPane().add(jScrollPane3, gridBagConstraints);

        jButton17.setText("jButton17");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        ExceluploadDialog.getContentPane().add(jButton17, gridBagConstraints);

        jButton18.setText("jButton18");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        ExceluploadDialog.getContentPane().add(jButton18, gridBagConstraints);

        searchUnits.setModal(true);
        searchUnits.setUndecorated(true);
        searchUnits.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl4.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt2CaretUpdate(evt);
            }
        });
        tenderrecordstxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl4.add(tenderrecordstxt2, gridBagConstraints);

        unitsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        unitsTbl.setToolTipText("Click on the target row to select the patient from the search.");
        unitsTbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        unitsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unitsTblMouseClicked(evt);
            }
        });
        tenderrecordsspnl4.setViewportView(unitsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl4.add(tenderrecordsspnl4, gridBagConstraints);

        closebtn5.setText("Close");
        closebtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl4.add(closebtn5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchUnits.getContentPane().add(tenderrecordspnl4, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Manual Tenders Data Entry");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setBackground(new java.awt.Color(153, 255, 204));

        jPanel8.setLayout(new java.awt.GridBagLayout());

        tendersGenerationtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tender Number(e.g 1,2,3)", "Description Of Tender", "Activate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tendersGenerationtbl.getTableHeader().setResizingAllowed(false);
        tendersGenerationtbl.getTableHeader().setReorderingAllowed(false);
        javax.swing.table.TableColumn column11 = null;
        for (int i = 0; i < 3; i++) {
            column11= tendersGenerationtbl.getColumnModel().getColumn(i);
            if (i == 1) {

                column11.setPreferredWidth(350); //sport column is bigger
            }
        }
        jScrollPane4.setViewportView(tendersGenerationtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jScrollPane4, gridBagConstraints);

        savetDbtn.setBackground(new java.awt.Color(0, 255, 204));
        savetDbtn.setText("Save Details For Financial Yr");
        savetDbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savetDbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(savetDbtn, gridBagConstraints);

        jButton5.setBackground(new java.awt.Color(0, 255, 204));
        jButton5.setText("Edit Financial Year Tenders");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jButton5, gridBagConstraints);

        jButton6.setBackground(new java.awt.Color(0, 255, 204));
        jButton6.setText("       Remove Row        ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jButton6, gridBagConstraints);

        jLabel3.setText("Financial Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weighty = 0.3;
        jPanel8.add(jLabel3, gridBagConstraints);

        finYrtxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        finYrtxt.setForeground(new java.awt.Color(102, 102, 102));
        finYrtxt.setText(com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.3;
        jPanel8.add(finYrtxt, gridBagConstraints);

        jCheckBox4.setText("Tick All");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel8.add(jCheckBox4, gridBagConstraints);

        jLabel4.setText("Company Initials");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel8.add(jLabel4, gridBagConstraints);

        initialsTxt.setEditable(false);
        initialsTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        initialsTxt.setForeground(new java.awt.Color(255, 0, 153));
        initialsTxt.setText(com.afrisoftech.lib.FinancialYear.getCompanyInitials(connectDB).toUpperCase());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(initialsTxt, gridBagConstraints);

        quotOrTenderno.add(tenderChk);
        tenderChk.setForeground(new java.awt.Color(153, 0, 0));
        tenderChk.setSelected(true);
        tenderChk.setText("Generate Tender Number     ");
        jPanel8.add(tenderChk, new java.awt.GridBagConstraints());

        quotOrTenderno.add(rfqChk);
        rfqChk.setForeground(new java.awt.Color(153, 0, 0));
        rfqChk.setText("Generate Quotation Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel8.add(rfqChk, gridBagConstraints);

        jTabbedPane1.addTab("Tender Number Generation", jPanel8);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("You can change the units of issue by clicking on the relevant column to change"));

        tenderItemstable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tenderItemstable.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tenderItemstable.setForeground(new java.awt.Color(102, 102, 102));
        tenderItemstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Code", "Description", "Awarded Units", "Tender Quantity", "Save"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tenderItemstable.setGridColor(new java.awt.Color(0, 51, 204));
        tenderItemstable.setSelectionBackground(new java.awt.Color(153, 255, 204));
        tenderItemstable.getTableHeader().setReorderingAllowed(false);
        javax.swing.table.TableColumn column111 = null;
        for (int i = 0; i < 4; i++) {
            column111 = tenderItemstable.getColumnModel().getColumn(i);
            if (i == 1) {

                column111.setPreferredWidth(350); //sport column is bigger
            } else {
                if(i==0){
                    column111.setPreferredWidth(100);
                }
                else
                column111.setPreferredWidth(250);

            }
        }
        tenderItemstable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderItemstableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tenderItemstable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        saveButntender.setText("Save Data");
        saveButntender.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        saveButntender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButntenderActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(saveButntender, gridBagConstraints);

        jButton4.setText("   Edit Entries   ");
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton4, gridBagConstraints);

        jButton1.setText("Remove Item(s)");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton3.setText("Reset Table");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton3, gridBagConstraints);

        prvsbtn.setBackground(new java.awt.Color(204, 204, 204));
        prvsbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PREV1.GIF"))); // NOI18N
        prvsbtn.setEnabled(false);
        prvsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prvsbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);
        jPanel1.add(prvsbtn, gridBagConstraints);

        nxtbtn.setBackground(new java.awt.Color(204, 204, 204));
        nxtbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NEXT1.GIF"))); // NOI18N
        nxtbtn.setEnabled(false);
        nxtbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nxtbtn.setPreferredSize(new java.awt.Dimension(95, 25));
        nxtbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nxtbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);
        jPanel1.add(nxtbtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jPanel1, gridBagConstraints);

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Search Tender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel15.add(jLabel5, gridBagConstraints);

        storecmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct  upper(store_name) as store_name from st_main_stores ORDER BY 1"));
        storecmbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                storecmbxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(storecmbx, gridBagConstraints);

        jLabel6.setText("Store/Dept Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel15.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Item Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel15.add(jLabel7, gridBagConstraints);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        tenderTxt.setEditable(false);
        tenderTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tenderTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(tenderTxt, gridBagConstraints);

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel16.add(jButton7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel15.add(jPanel16, gridBagConstraints);

        categoryccmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        categoryccmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryccmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel15.add(categoryccmbx, gridBagConstraints);

        jLabel8.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel15.add(jLabel8, gridBagConstraints);

        tendeDescTxt.setEditable(false);
        tendeDescTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(tendeDescTxt, gridBagConstraints);

        jCheckBox1.setText("List Category Items");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel15.add(jCheckBox1, gridBagConstraints);

        jCheckBox3.setText("Tick All entered values");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(jCheckBox3, gridBagConstraints);

        jButton2.setText("Excel Upload");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        jPanel15.add(jButton2, gridBagConstraints);

        servOrgoods.add(jCheckBox5);
        jCheckBox5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox5.setForeground(new java.awt.Color(255, 0, 102));
        jCheckBox5.setText("Service Items");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(jCheckBox5, gridBagConstraints);

        servOrgoods.add(jCheckBox6);
        jCheckBox6.setSelected(true);
        jCheckBox6.setText("Goods");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel15.add(jCheckBox6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel15, gridBagConstraints);

        jTabbedPane1.addTab("Entering Tender Items", jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel9.setLayout(new java.awt.GridBagLayout());
        jPanel3.add(jPanel9, new java.awt.GridBagConstraints());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Set Awarded items here"));
        jPanel5.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jLabel2, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        editBtn.setBackground(new java.awt.Color(153, 255, 204));
        editBtn.setMnemonic('e');
        editBtn.setText("View Entered Items");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(editBtn, gridBagConstraints);

        savebtn.setBackground(new java.awt.Color(153, 255, 204));
        savebtn.setMnemonic('s');
        savebtn.setText("Save Awarded Items");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(savebtn, gridBagConstraints);

        rmvRow.setBackground(new java.awt.Color(153, 255, 204));
        rmvRow.setMnemonic('r');
        rmvRow.setText("Remove Row");
        rmvRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvRowActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(rmvRow, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Search Tender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel10, gridBagConstraints);

        supplierCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct  upper(supplier_name) as bidder from st_suppliers ORDER BY 1"));
        supplierCmbx.setEnabled(false);
        supplierCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel17.add(supplierCmbx, gridBagConstraints);

        jLabel12.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel12, gridBagConstraints);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        tenderNumbertxt.setEditable(false);
        tenderNumbertxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(tenderNumbertxt, gridBagConstraints);

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel18.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel17.add(jPanel18, gridBagConstraints);

        jLabel14.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel14, gridBagConstraints);

        descriptionAwardtxt.setEditable(false);
        descriptionAwardtxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel17.add(descriptionAwardtxt, gridBagConstraints);

        supplierCodetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(supplierCodetxt, gridBagConstraints);

        jLabel15.setText("Supplier Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel17, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1.Enter \"Awarded Quantity\" and \"Suppl.Unit Price\"    2.'Tab' on the selected row    3.TICK on the column \"Save\"(mandatory)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DialogInput", 1, 12), new java.awt.Color(255, 0, 51))); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        awardItemstbl.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        awardItemstbl.setForeground(new java.awt.Color(102, 102, 102));
        awardItemstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Description", "Awarded Units", "Max Tender Quantity", "Awarded Quantity", "Balance(Unawarded_qty))", "Suppl.Unit Price", "Total", "Supplier", "Save"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, false, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        awardItemstbl.setRowHeight(28);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 6; i++) {
            column = awardItemstbl.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(50); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);

                }

            }

            if(i==7){

                awardItemstbl.setForeground(Color.RED);

            }
        }

        cmbox51.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                cmbox51ActionPerformed(evt);
            }
        });

        cmbox52.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                cmbox52ActionPerformed(evt);
            }
        });

        javax.swing.table.TableColumn teditor2 = this.awardItemstbl.getColumn("Supplier");
        teditor2.setCellEditor(new javax.swing.DefaultCellEditor(cmbox51));

        javax.swing.table.TableColumn teditor3 = this.awardItemstbl.getColumn("Awarded Units");
        teditor3.setCellEditor(new javax.swing.DefaultCellEditor(cmbox52));
        awardItemstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                awardItemstblMouseClicked(evt);
            }
        });
        awardItemstbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                awardItemstblKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(awardItemstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jScrollPane2, gridBagConstraints);

        jCheckBox2.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBox2.setText("Tick All Entered values");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel4.add(jCheckBox2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 10.0;
        jPanel5.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        jTabbedPane1.addTab("Entering Awarded Tender items", jPanel3);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Tendered Items"), "Tendered Items"));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jButton9.setText("Tendered Items");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jButton9, gridBagConstraints);

        tenderedTxt.setText("filepath/tofile/file.xls");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(tenderedTxt, gridBagConstraints);

        previewUploadBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/up-arrow.gif"))); // NOI18N
        previewUploadBtn.setText("Preview & Upload");
        previewUploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewUploadBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(previewUploadBtn, gridBagConstraints);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ensure Your Excel format is as  shown", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Abyssinica SIL", 1, 12), new java.awt.Color(255, 0, 51))); // NOI18N

        jTable3.setBackground(new java.awt.Color(204, 204, 255));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item code", "Description", "Units of issue", "Required_qty", "Tender/Quotation_no"
            }
        ));
        jScrollPane6.setViewportView(jTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jScrollPane6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel10, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Tender decision"));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jButton11.setText("Tender Decision");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton11, gridBagConstraints);

        decisionTxt.setText("filepath/tofile/file.xls");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(decisionTxt, gridBagConstraints);

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/up-arrow.gif"))); // NOI18N
        jButton19.setText("Preview & Upload");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton19, gridBagConstraints);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ensure Your Excel format is as  shown", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Abyssinica SIL", 1, 12), new java.awt.Color(255, 0, 51))); // NOI18N

        jTable2.setBackground(new java.awt.Color(204, 204, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Item code", "Description", "Units of issue", "Qty Awarded", "Unit_Price", "Supplier_Awarded", "Tender/quotation_no"
            }
        ));
        jScrollPane5.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(5).setHeaderValue("Supplier_Awarded");
            jTable2.getColumnModel().getColumn(6).setHeaderValue("Tender/quotation_no");
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jScrollPane5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel11, gridBagConstraints);

        jTabbedPane1.addTab("Direct Upload From Excel", jPanel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
     private void ShowVisibleQueryItems(Integer offset) {

        try {
            System.out.println("SELECT DISTINCT item_code, item_description,units,quantity FROM st_item_to_quote where tender_no ='" + tenderTxt.getText() + "' order by 1 limit " + tenderItemstable.getRowCount() + " OFFSET " + offset + "  ");
            PreparedStatement pst = connectDB.prepareStatement("SELECT DISTINCT item_code, item_description,units,quantity FROM st_item_to_quote where tender_no ='" + tenderTxt.getText() + "' order by 1 limit " + tenderItemstable.getRowCount() + " OFFSET " + offset + "  ");
            ResultSet rset = pst.executeQuery();
            int i = 0;
            while (rset.next()) {
                tenderItemstable.setValueAt(rset.getObject(1), i, 0);
                tenderItemstable.setValueAt(rset.getObject(2), i, 1);
                tenderItemstable.setValueAt(rset.getObject(3), i, 2);
                tenderItemstable.setValueAt(rset.getDouble(4), i, 3);
                tenderItemstable.setValueAt(false, i, 4);

                i++;
            }

        } catch (SQLException ex) {
            Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        editclicked = 1;
        offset = 0;
        limit = 35;
        ClearTable.clearthisTable(tenderItemstable);
        ShowVisibleQueryItems(offset);
        // prvsbtn.setEnabled(true);
        nxtbtn.setEnabled(true);
    }//GEN-LAST:event_jButton4ActionPerformed

//    private void refreshTable(){
//    try {
//            // PreparedStatement getTenders = connectDB.prepareStatement("SELECT DISTINCT tender_no,openning_date FROM st_item_to_quote WHERE tender_no NOT IN (SELECT DISTINCT ref_no FROM st_tenders)");
//             PreparedStatement getTenders = connectDB.prepareStatement("SELECT DISTINCT ref_no,opening_date,description FROM st_tenders where ref_no NOT IN (SELECT DISTINCT quotation_no FROM st_floated_quotations ) and bid_bond IS NULL");
//             
//             ResultSet gettinTenders = getTenders.executeQuery();
//             int i =0;
//             while(gettinTenders.next()){
//             
//             
//             tenderItemstable.setValueAt(gettinTenders.getObject(1), i, 0);
//             tenderItemstable.setValueAt(gettinTenders.getDate(2), i, 1);
//             tenderItemstable.setValueAt(gettinTenders.getObject(3), i, 2);
//             
//             i++;
//             
//             
//             
//             }
//             
//             
//             
//             
//             
//             
//         } catch (SQLException ex) {
//             Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
//         }
//      
//      
//      
//      
//      
//      
//    
//    
//    
//    
//    
//    
//    
//    
//    
//    
//    }
    private void saveButntenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButntenderActionPerformed
        // TODO add your handling code here:

        nxtbtn.setEnabled(false);
        prvsbtn.setEnabled(false);
        for (int i = 0; i < tenderItemstable.getRowCount(); i++) {
            if (tenderItemstable.getValueAt(i, 0) != null && tenderItemstable.getModel().getValueAt(i, 4) == java.lang.Boolean.TRUE) {

                if (editclicked == 1) {
                    try {
                        PreparedStatement pst = connectDB.prepareStatement("update st_item_to_quote set quantity='" + java.lang.Double.valueOf(tenderItemstable.getValueAt(i, 3).toString()) + "' WHERE tender_no= '" + tenderTxt.getText().toString().toUpperCase() + "' and item_code='" + tenderItemstable.getValueAt(i, 0).toString() + "'");
                        pst.executeUpdate();

                    } catch (SQLException ex) {
                        Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else {
                    try {
                        PreparedStatement ps = connectDB.prepareStatement("SELECT COUNT(DISTINCT item_code) FROM st_item_to_quote WHERE tender_no= '" + tenderTxt.getText().toString().toUpperCase() + "' and item_code='" + tenderItemstable.getValueAt(i, 0).toString() + "'");
                        ResultSet rset = ps.executeQuery();
                        while (rset.next()) {

                            no = rset.getInt(1);

                        }
//43504 gar001
                        if (no == 0) {

                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_item_to_quote(\n"
                                    + "            buyer_details, quotation_date, openning_date, item_code, item_description, \n"
                                    + "            units, quantity, time_saved, item_number, item_serial, tender_no, \n"
                                    + "            vote_class, vote, head, subhead, sub_item, sub_item_desc, donor_code, \n"
                                    + "            donor_item, aie_no, department, irq_no)\n"
                                    + "    VALUES (?, ?, ?, ?, ?, \n"
                                    + "            ?, ?, ?, ?, ?, ?, \n"
                                    + "            ?, ?, ?, ?, ?, ?, ?, \n"
                                    + "            ?, ?, ?, ?)");

                            pstmt.setObject(1, com.afrisoftech.lib.GetInstitutionInfo.HeaderName(connectDB));
                            pstmt.setDate(2, null);
                            pstmt.setDate(3, null);
                            pstmt.setObject(4, tenderItemstable.getValueAt(i, 0).toString());
                            pstmt.setObject(5, tenderItemstable.getValueAt(i, 1).toString().toUpperCase());
                            pstmt.setObject(6, tenderItemstable.getValueAt(i, 2).toString());
                            pstmt.setDouble(7, java.lang.Double.valueOf(tenderItemstable.getValueAt(i, 3).toString()));
                            pstmt.setTimestamp(8, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt.setObject(9, i + 1);
                            pstmt.setObject(10, 2);
                            pstmt.setObject(11, tenderTxt.getText().toString().toUpperCase());
                            pstmt.setObject(12, null);
                            pstmt.setObject(13, null);
                            pstmt.setObject(14, null);
                            pstmt.setObject(15, null);
                            pstmt.setObject(16, null);
                            pstmt.setObject(17, null);
                            pstmt.setObject(18, null);
                            pstmt.setObject(19, null);
                            pstmt.setObject(20, null);
                            pstmt.setObject(21, null);
                            pstmt.setObject(22, "manual_tender");
                            //System.out.println(dateSpinner.getValue().toString());

                            pstmt.executeUpdate();

                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
                        javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }

            }

        }
        JOptionPane.showMessageDialog(this, "Transaction Completed Successfully", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
        ClearTable.clearthisTable(tenderItemstable);
        editclicked = 0;
    // TenderAdvertisementPDF policy = new TenderAdvertisementPDF();
//     policy.TenderAdvertisementPDF(connectDB, SQLDateFormat.getSQLDate(datePicker2.getDate()).toString());
        //saveButntender.setLabel("Save& Print Tender Advertisement");


    }//GEN-LAST:event_saveButntenderActionPerformed

    private void tenderItemstableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderItemstableMouseClicked
        // TODO add your handling code here:
        if (tenderItemstable.getSelectedColumn() == 0) {

            java.awt.Point p = jScrollPane1.getLocationOnScreen();
            uploadItemsDialog.setLocation(p);
            uploadItemsDialog.setSize(jScrollPane1.getWidth() * 3 / 4, 200);
            uploadItemsDialog.setVisible(true);
            itemsuploadtxt.setText(null);

        }
        else if (tenderItemstable.getSelectedColumn() == 2) {

            java.awt.Point p = jScrollPane1.getLocationOnScreen();
            searchUnits.setLocation(p);
            searchUnits.setSize(jScrollPane1.getWidth() * 3 / 4, 200);
            searchUnits.setVisible(true);

        }
    }//GEN-LAST:event_tenderItemstableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        ClearTable.removeSelectedRows(tenderItemstable);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());
        //updating
//elc0569
        try {
            connectDB.setAutoCommit(false);
            for (int i = 0; i < awardItemstbl.getRowCount(); i++) {
                if (awardItemstbl.getModel().getValueAt(i, 0) != null && awardItemstbl.getModel().getValueAt(i, 7) != null && awardItemstbl.getModel().getValueAt(i, 9) != null) {

                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_floated_quotations("
                            + " buyer_details, quotation_date, openning_date, item_code, item_description, "
                            + " units, quantity, item_number, quotation_no,supplier,unit_price,remarks,country_origin)"
                            + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");

                    pstmt.setObject(1, "-");
                    pstmt.setDate(2, null);
                    pstmt.setDate(3, null);
                    pstmt.setObject(4, awardItemstbl.getValueAt(i, 0).toString());
                    pstmt.setObject(5, awardItemstbl.getValueAt(i, 1).toString());
                    pstmt.setObject(6, awardItemstbl.getValueAt(i, 2).toString());
                    pstmt.setDouble(7, java.lang.Double.valueOf(awardItemstbl.getValueAt(i, 4).toString()));
                    pstmt.setInt(8, i + 1);
                    pstmt.setObject(9, tenderNumbertxt.getText());
                    //pstmt.setObject(10, supplierCmbx.getSelectedItem());
                    pstmt.setObject(10, awardItemstbl.getValueAt(i, 8).toString().toUpperCase());
                    pstmt.setDouble(11, java.lang.Double.valueOf(awardItemstbl.getValueAt(i, 6).toString()));
                    pstmt.setObject(12, "-");
                    pstmt.setObject(13, "-");
                    pstmt.executeUpdate();

                    java.sql.PreparedStatement savelpo = connectDB.prepareStatement("INSERT INTO st_orders(quotation_no, supplier, criteria, item, quantity, unit_price, days_to_deliver,units,code)"
                            + " VALUES (?,?,?,?,?,?,?,?,?);");

                    savelpo.setObject(1, tenderNumbertxt.getText().toString());
                    savelpo.setObject(2, awardItemstbl.getValueAt(i, 8).toString());
                    savelpo.setObject(3, "Lowest Price");
                    savelpo.setObject(4, awardItemstbl.getValueAt(i, 1));
                    savelpo.setObject(5, Double.valueOf(awardItemstbl.getValueAt(i, 4).toString()));
                    savelpo.setObject(6, Double.valueOf(awardItemstbl.getValueAt(i, 6).toString()));
                    savelpo.setObject(7, 0.00);
                    //select units, item_code from stockitem where description ='AMOXICILLIN 250MG CAPSULES'
                    savelpo.setObject(8, awardItemstbl.getValueAt(i, 2));
                    savelpo.setObject(9, awardItemstbl.getValueAt(i, 0));

                    savelpo.executeUpdate();

                    java.sql.PreparedStatement update_code = connectDB.prepareStatement("INSERT INTO st_recommendation( supplier,  quotation_no, item_code, description, unit, price, user_name, quantity, supplier_code, remarks, financial_approved,approved_fin_by,financial_date)\n"
                            + "    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?); ");

                    update_code.setObject(1, awardItemstbl.getValueAt(i, 8).toString().toUpperCase());
                    update_code.setObject(2, tenderNumbertxt.getText().toUpperCase());
                    update_code.setObject(3, awardItemstbl.getValueAt(i, 0));
                    update_code.setObject(4, awardItemstbl.getValueAt(i, 1));
                    update_code.setObject(5, awardItemstbl.getValueAt(i, 2));
                    update_code.setDouble(6, Double.valueOf(awardItemstbl.getValueAt(i, 6).toString()));
                    update_code.setObject(7, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
                    update_code.setObject(8, Double.valueOf(awardItemstbl.getValueAt(i, 4).toString()));
                    update_code.setObject(9, supplierCodetxt.getText());
                    update_code.setObject(10, awardItemstbl.getModel().getValueAt(i, 8));
                    update_code.setObject(11, true);
                    update_code.setObject(12, "-");
                    update_code.setObject(13, com.afrisoftech.lib.UserName.getServerDate(connectDB));

                    update_code.executeUpdate();

                    java.sql.PreparedStatement suppr = connectDB.prepareStatement("INSERT INTO st_tender_suppliers (tender, supplier_name, opened, opened_by) VALUES (?, ?, ?, ?)");
                    suppr.setObject(1, tenderNumbertxt.getText());
                    suppr.setObject(2, awardItemstbl.getValueAt(i, 8).toString());
                    suppr.setBoolean(3, true);
                    suppr.setObject(4, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());

                    suppr.executeUpdate();

                }
            }

            JOptionPane.showMessageDialog(this, "Data saved Successfully", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
//            connectDB.setAutoCommit(true);
            connectDB.commit();
            supplierCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct  initcap(supplier_name) as bidder from st_suppliers ORDER BY 1"));

            ClearTable.clearthisTable(awardItemstbl);

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "ERROR: " + sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            jLabel2.setForeground(java.awt.Color.red);
            jLabel2.setText("Sorry. Data not saved");
        }
        // Add your handling code here:
    }//GEN-LAST:event_savebtnActionPerformed

    private void rmvRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvRowActionPerformed
        ClearTable.removeSelectedRows(awardItemstbl);      // Add your handling code here:
    }//GEN-LAST:event_rmvRowActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (tenderNumbertxt.getText().length() > 0) {

            com.afrisoftech.hospinventory.TenderScheduleReportPDF policy = new com.afrisoftech.hospinventory.TenderScheduleReportPDF();

            policy.TenderScheduleReportPDF(connectDB, tenderNumbertxt.getText());

        } else {

            JOptionPane.showMessageDialog(this, "Tender No is Not Entered", "Error", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_editBtnActionPerformed

    private void tenderrecordstxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt1CaretUpdate
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (this.tenderrecordstxt1.getCaretPosition() > 2) {
            System.out.print("Got Results");

//        } else
//
//        {
            tenderrecordstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT ref_no,description FROM st_tenders  where "
                    + "   ref_no ilike '%" + tenderrecordstxt1.getText() + "%'  order by 1 desc;"));
            tenderrecordstbl1.setShowHorizontalLines(false);

            tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        }

    }//GEN-LAST:event_tenderrecordstxt1CaretUpdate

    private void tenderrecordstxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt1ActionPerformed

    private void tenderrecordstbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl1MouseClicked
        try {
            // TODO add your handling code here:
            tenderTxt.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 0).toString());

            // ClearTable.clearthisTable(biderCodetbl);
            tendeDescTxt.setText(com.afrisoftech.lib.GetItemInfo.getITenderDesc(tenderTxt.getText(), connectDB));

        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(SSOTenderEvaluationIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        searchtender1.dispose();
    }//GEN-LAST:event_tenderrecordstbl1MouseClicked

    private void closebtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn2ActionPerformed
        // TODO add your handling code here:
        this.searchtender1.dispose();
    }//GEN-LAST:event_closebtn2ActionPerformed

    private void tenderrecordstxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxtCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt.getCaretPosition() > 3) {
//            System.out.print("Nothing");
//
//        } else
//
//        {
            tenderrecordstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT tender_no Tender_No FROM st_item_to_quote where "
                    + " tender_no ilike '%" + tenderrecordstxt.getText() + "%'  order by 1 desc;"));
            tenderrecordstbl.setShowHorizontalLines(false);

            tenderrecordsspnl.setViewportView(tenderrecordstbl);

        }
    }//GEN-LAST:event_tenderrecordstxtCaretUpdate

    private void tenderrecordstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxtActionPerformed

    private void tenderrecordstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstblMouseClicked

//tendernotxt.setText((String) tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 0));
        tenderNumbertxt.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 0).toString());

        searchtender.dispose();

        descriptionAwardtxt.setText(com.afrisoftech.lib.GetItemInfo.getITenderDesc(tenderNumbertxt.getText(), connectDB));


    }//GEN-LAST:event_tenderrecordstblMouseClicked

    private void closebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn1ActionPerformed
        // TODO add your handling code here:
        searchtender.dispose();

    }//GEN-LAST:event_closebtn1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //setVisible(false);
        ClearTable.clearthisTable(tenderItemstable);

        nxtbtn.setEnabled(false);
        prvsbtn.setEnabled(false);
        editclicked = 0;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void savetDbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savetDbtnActionPerformed
        // TODO add your handling code here:
        int exitOption;
        if (tenderChk.isSelected()) {
            exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you Sure To " + tenderChk.getText() + "(s)", "CONFIRMATION", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        } else {
            exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you Sure To " + rfqChk.getText() + "(s)", "CONFIRMATION", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        }

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            int insert_status = 0;
            if (savetDbtn.getLabel().toString().equalsIgnoreCase("Save Details For Financial Yr")) {

                for (int i = 0; i < tendersGenerationtbl.getRowCount(); i++) {

                    if (tendersGenerationtbl.getValueAt(i, 0) != null && tendersGenerationtbl.getModel().getValueAt(i, 2) == java.lang.Boolean.TRUE) {

                        //      tenderno = initialsTxt.getText() + "/T/" + tendersGenerationtbl.getValueAt(i, 0) + "/" + finYrtxt.getText();
                        if (tenderChk.isSelected()) {
                            tenderno = initialsTxt.getText() + "/T/" + tendersGenerationtbl.getValueAt(i, 0) + "/" + finYrtxt.getText();
                        } else if (rfqChk.isSelected()) {
                            tenderno = initialsTxt.getText() + "/Q/" + tendersGenerationtbl.getValueAt(i, 0) + "/" + finYrtxt.getText();

                        }

                        try {
                            PreparedStatement pstcOUNT = connectDB.prepareStatement("SELECT count (distinct ref_no) FROM st_tenders where ref_no ilike '%" + tenderno + "%'");
                            ResultSet rsetCount = pstcOUNT.executeQuery();
                            while (rsetCount.next()) {

                                occurences = rsetCount.getInt(1);
                            }

                            System.out.println("Occurences are " + occurences);
                            if (occurences < 1) {
                                PreparedStatement pst = connectDB.prepareStatement("INSERT INTO st_tenders (ref_no, description) VALUES (?, ?);");

                                //0710 431 152
                                pst.setObject(1, tenderno);
                                pst.setObject(2, tendersGenerationtbl.getValueAt(i, 1));

                                pst.executeUpdate();
                                System.err.println(tenderno);

                                GetItemInfo.updateTrail("Generated a tender/quotation_no " + tenderno, connectDB);

                                //connectDB.commit();
                            } else {

                                insert_status = 1;
                                JOptionPane.showMessageDialog(this, "Tender Already Inserted For Financial Year");
                            }

                        } catch (SQLException ex) {
                            Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
                            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

                        }
                    }

                }
                if (insert_status == 0) {
                    JOptionPane.showMessageDialog(this, "Tender Number(s) Inserted Succesfully", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);

                    ClearTable.clearthisTable(tendersGenerationtbl);

//        refreshTable();
                } else {

                    JOptionPane.showMessageDialog(this, "Transaction Aborted for Existing Values", "Check your entries", JOptionPane.INFORMATION_MESSAGE);

                }

            }
        }
    }//GEN-LAST:event_savetDbtnActionPerformed

    private void storecmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_storecmbxItemStateChanged
        // TODO add your handling code here:
        categoryccmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT sub_cat_code FROM st_stock_item WHERE department ilike '" + storecmbx.getSelectedItem().toString() + "' "));
    }//GEN-LAST:event_storecmbxItemStateChanged
    private String getsupplierCode(String supplier) {
        String code = "-";
        try {
            PreparedStatement pst = connectDB.prepareStatement("select distinct code,email_address from st_suppliers where initcap(supplier_name)='" + supplierCmbx.getSelectedItem() + "'");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {

                code = rset.getString(1);

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        return code;
    }
    private void supplierCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierCmbxActionPerformed
        // TODO add your handling code here:
        supplierCodetxt.setText(getsupplierCode(cmbox51.getSelectedItem().toString()));
    }//GEN-LAST:event_supplierCmbxActionPerformed

    private void cmbox51ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        // supplierCodetxt.setText(getsupplierCode(supplierCmbx.getSelectedItem().toString()));
        if (CheckDoubleAward(tenderNumbertxt.getText(), cmbox51.getSelectedItem().toString(), awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 1).toString()) > 0) {
            JOptionPane.showMessageDialog(this, "The item has already been awarded to M/s" + supplierCmbx.getSelectedItem().toString() + "\n Please contact Your team leader", "Error-check", JOptionPane.ERROR_MESSAGE);
            ClearTable.removeSelectedRows(awardItemstbl);

        }
    }
    
       private void cmbox52ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
//        // supplierCodetxt.setText(getsupplierCode(supplierCmbx.getSelectedItem().toString()));
//        if (CheckDoubleAward(tenderNumbertxt.getText(), cmbox51.getSelectedItem().toString(), awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 1).toString()) > 0) {
//            JOptionPane.showMessageDialog(this, "The item has already been awarded to M/s" + supplierCmbx.getSelectedItem().toString() + "\n Please contact Your team leader", "Error-check", JOptionPane.ERROR_MESSAGE);
//            ClearTable.removeSelectedRows(awardItemstbl);

       // }
    }
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        java.awt.Point p = tenderTxt.getLocationOnScreen();
        searchtender1.setLocation(p);
        searchtender1.setSize(tenderTxt.getWidth(), 200);
        searchtender1.setVisible(true);
        tenderrecordstxt1.setText(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void itemsuploadtxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemsuploadtxtCaretUpdate
        // TODO add your handling code here:
        if (itemsuploadtxt.getCaretPosition() > 3) {

            if (jCheckBox5.isSelected()) {

                itemsuploadtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct service_code,service,units_rate from services_list where service ilike '" + itemsuploadtxt.getText() + "%' and department ilike '" + storecmbx.getSelectedItem() + "'  order by 1 "));

            } else {
                itemsuploadtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct item_code,description,units FROM st_stock_item where description ilike '" + itemsuploadtxt.getText() + "%' and department ilike '" + storecmbx.getSelectedItem() + "' and sub_cat_code ilike '" + categoryccmbx.getSelectedItem() + "' order by 1 "));
            }

        }
    }//GEN-LAST:event_itemsuploadtxtCaretUpdate

    private void itemsuploadtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsuploadtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsuploadtxtActionPerformed

    private void itemsuploadtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsuploadtblMouseClicked
        // TODO add your handling code here:
        tenderItemstable.setValueAt(itemsuploadtbl.getValueAt(itemsuploadtbl.getSelectedRow(), 0), tenderItemstable.getSelectedRow(), 0);
        tenderItemstable.setValueAt(itemsuploadtbl.getValueAt(itemsuploadtbl.getSelectedRow(), 1), tenderItemstable.getSelectedRow(), 1);
        tenderItemstable.setValueAt(itemsuploadtbl.getValueAt(itemsuploadtbl.getSelectedRow(), 2), tenderItemstable.getSelectedRow(), 2);
        uploadItemsDialog.dispose();
    }//GEN-LAST:event_itemsuploadtblMouseClicked

    private void closebtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn3ActionPerformed
        // TODO add your handling code here:
        uploadItemsDialog.dispose();
    }//GEN-LAST:event_closebtn3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = tenderNumbertxt.getLocationOnScreen();
        searchtender.setLocation(p);
        searchtender.setSize(tenderNumbertxt.getWidth(), 200);
        searchtender.setVisible(true);
        tenderrecordstxt.setText(null);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void awardItemstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_awardItemstblMouseClicked
        // TODO add your handling code here:
        itemsuploadtxt1.setText("");
        if (awardItemstbl.getSelectedColumn() == 0) {
            //StockMain;
            java.awt.Point p = jScrollPane2.getLocationOnScreen();
            awardItemsDialog.setLocation(p);
            awardItemsDialog.setSize(jScrollPane2.getWidth() * 3 / 4, 200);
            awardItemsDialog.setVisible(true);
            //itemsuploadtxt1.setText(null);
        } 


    }//GEN-LAST:event_awardItemstblMouseClicked

    private void itemsuploadtxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemsuploadtxt1CaretUpdate
        // TODO add your handling code here:
        if (itemsuploadtxt1.getCaretPosition() > 3) {

            itemsuploadtbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct item_code,item_description,units,quantity from st_item_to_quote where (item_description ilike '" + itemsuploadtxt1.getText() + "%' or item_code ilike '" + itemsuploadtxt1.getText() + "%') and tender_no ='" + tenderNumbertxt.getText() + "' order by 1 "));

        }
    }//GEN-LAST:event_itemsuploadtxt1CaretUpdate

    private void itemsuploadtxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsuploadtxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsuploadtxt1ActionPerformed
    private Integer CheckDoubleAward(String tender, String supplier, String item) {
        int countOccurences = 0;

        try {
            java.sql.PreparedStatement pst = connectDB.prepareStatement("select count(distinct item) FROM st_orders where quotation_no = '" + tender + "'  and supplier ilike '" + supplier + "' and item ilike '%" + item + "%' and order_no IS NULL ");
            java.sql.ResultSet rsetqty = pst.executeQuery();
            while (rsetqty.next()) {

                countOccurences = rsetqty.getInt(1);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        return countOccurences;
    }
    private void itemsuploadtbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsuploadtbl1MouseClicked
        // TODO add your handling code here:

        awardItemstbl.setValueAt(itemsuploadtbl1.getValueAt(itemsuploadtbl1.getSelectedRow(), 0), awardItemstbl.getSelectedRow(), 0);
        awardItemstbl.setValueAt(itemsuploadtbl1.getValueAt(itemsuploadtbl1.getSelectedRow(), 1), awardItemstbl.getSelectedRow(), 1);
        awardItemstbl.setValueAt(itemsuploadtbl1.getValueAt(itemsuploadtbl1.getSelectedRow(), 2), awardItemstbl.getSelectedRow(), 2);
        awardItemstbl.setValueAt(itemsuploadtbl1.getValueAt(itemsuploadtbl1.getSelectedRow(), 3), awardItemstbl.getSelectedRow(), 3);
        // uploadItemsDialog.dispose();

        Double qty = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 3).toString());
        Double bal = qty - (getAwardedQty(tenderNumbertxt.getText(), awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 1).toString()));

        awardItemstbl.setValueAt(bal, awardItemstbl.getSelectedRow(), 5);
        /*Precaution: Checking whether the item is entered for the selected supplier **/
        if (CheckDoubleAward(tenderNumbertxt.getText(), supplierCmbx.getSelectedItem().toString(), awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 1).toString()) > 0) {
            JOptionPane.showMessageDialog(this, "The item has already been awarded to M/s" + supplierCmbx.getSelectedItem().toString() + "\n Please contact Your team leader", "Error-check", JOptionPane.ERROR_MESSAGE);
            ClearTable.removeSelectedRows(awardItemstbl);

        }
        //this.awardItemsDialog.dispose();
        awardItemsDialog.dispose();


    }//GEN-LAST:event_itemsuploadtbl1MouseClicked

    private void closebtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn4ActionPerformed
        // TODO add your handling code here:
        this.awardItemsDialog.dispose();
    }//GEN-LAST:event_closebtn4ActionPerformed

    private java.lang.Double getAwardedQty(java.lang.String Tender_no, java.lang.String Item_desc) {
        Double qty_ordered = 0.00;
        try {
            java.sql.PreparedStatement pst = connectDB.prepareStatement("select SUM(quantity) FROM st_orders where quotation_no = '" + Tender_no + "'  and item ilike '%" + Item_desc + "%' and order_no IS NULL ");
            java.sql.ResultSet rsetqty = pst.executeQuery();
            while (rsetqty.next()) {

                qty_ordered = rsetqty.getDouble(1);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        return qty_ordered;

    }
    private void awardItemstblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_awardItemstblKeyReleased
        // TODO add your handling code here:

        //String item
        Double qty = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 3).toString());
        Double qty_to_award = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 4).toString());
        Double unit_price = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 6).toString());

        Double bal = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 5).toString());

        if (bal > 0 && bal >= qty_to_award) {

            //awardItemstbl.setValueAt(bal, awardItemstbl.getSelectedRow(), 5);
            awardItemstbl.setValueAt(qty_to_award * unit_price, awardItemstbl.getSelectedRow(), 7);

        } else {

            JOptionPane.showMessageDialog(this, "Item quantities Fully Exhausted or \n The Quantities you inserted exceed maximum tender qty", "Contact Your Team leader", JOptionPane.ERROR_MESSAGE);

            // ClearTable.removeSelectedRows(awardItemstbl);
            awardItemstbl.setValueAt(null, awardItemstbl.getSelectedRow(), 7);
            awardItemstbl.setValueAt(null, awardItemstbl.getSelectedRow(), 4);

        }


    }//GEN-LAST:event_awardItemstblKeyReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (!categoryccmbx.getSelectedItem().toString().equalsIgnoreCase("-")) {
            try {
                PreparedStatement pst = connectDB.prepareStatement("select distinct item_code,description, units FROM st_stock_item where  department ilike '" + storecmbx.getSelectedItem() + "' and sub_cat_code ilike '" + categoryccmbx.getSelectedItem() + "' AND  description NOT IN (SELECT DISTINCT item_description FROM st_item_to_quote where tender_no ='" + tenderTxt.getText() + "') order by 1 limit 35");
                ResultSet rset = pst.executeQuery();

                int i = 0;
                while (rset.next()) {
                    tenderItemstable.setValueAt(rset.getObject(1), i, 0);
                    tenderItemstable.setValueAt(rset.getObject(2), i, 1);
                    tenderItemstable.setValueAt(rset.getObject(3), i, 2);

                    i++;
                    System.err.println("We are at row " + i);
                    //   jTextField1.setText("Items on the Table: "+i);
                }

            } catch (SQLException ex) {
                Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void categoryccmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryccmbxActionPerformed
        // TODO add your handling code here:
        jCheckBox1.doClick();
    }//GEN-LAST:event_categoryccmbxActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < awardItemstbl.getRowCount(); i++) {
            if (awardItemstbl.getModel().getValueAt(i, 0) != null && awardItemstbl.getModel().getValueAt(i, 7) != null) {

                awardItemstbl.setValueAt(true, i, 9);

            }

        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void nxtbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nxtbtnActionPerformed
        // TODO add your handling code here:
        offset = offset + tenderItemstable.getRowCount();

        ClearTable.clearthisTable(tenderItemstable);
        ShowVisibleQueryItems(offset);

        prvsbtn.setEnabled(true);
    }//GEN-LAST:event_nxtbtnActionPerformed

    private void prvsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prvsbtnActionPerformed
        // TODO add your handling code here:
        if (offset > 0) {
            offset = offset - tenderItemstable.getRowCount();

            ClearTable.clearthisTable(tenderItemstable);
            ShowVisibleQueryItems(offset);
        } else {

            JOptionPane.showMessageDialog(this, "Reached The End");
            prvsbtn.setEnabled(false);
        }
    }//GEN-LAST:event_prvsbtnActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < tenderItemstable.getRowCount(); i++) {
            if (tenderItemstable.getModel().getValueAt(i, 0) != null && tenderItemstable.getModel().getValueAt(i, 2) != null && tenderItemstable.getModel().getValueAt(i, 3) != null) {

                tenderItemstable.setValueAt(true, i, 4);

            }

        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton2ActionPerformed

    private void tenderTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderTxtActionPerformed

    private void previewUploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewUploadBtnActionPerformed

        if (!tenderedTxt.getText().equalsIgnoreCase("filepath/tofile/file.xls")) {
            final String quail = "st_item_to_quote";
            final String quail2 = tenderedTxt.getText();

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    final ExceluploadDialog dialog = new ExceluploadDialog(new javax.swing.JFrame(), true, connectDB, quail, quail2);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            dialog.dispose();
                        }
                    });
                    dialog.setVisible(true);
                }
            });
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a file to upload", "Caution", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_previewUploadBtnActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:

        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser(System.getProperty("Excel.dir"));

        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files (*.xls)", "xls");

        fileChooser.setFileFilter(filter);

        fileChooser.showOpenDialog(this);

        tenderedTxt.setText(fileChooser.getSelectedFile().getPath());

        System.setProperty("Excel.dir", fileChooser.getSelectedFile().getParent());
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
        jButton3.doClick();
        storecmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' union select distinct initcap(depart_name) from pb_main_department order by 1"));
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
        storecmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT distinct  upper(store_name) as store_name from st_main_stores ORDER BY 1"));
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        if (!decisionTxt.getText().equalsIgnoreCase("filepath/tofile/file.xls")) {
            final String quail = "decision";
            final String quail2 = decisionTxt.getText();

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    final ExceluploadDialog dialog = new ExceluploadDialog(new javax.swing.JFrame(), true, connectDB, quail, quail2);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            dialog.dispose();
                        }
                    });
                    dialog.setVisible(true);
                }
            });

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a file to upload", "Caution", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser(System.getProperty("Excel.dir"));

        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files (*.xls)", "xls");

        fileChooser.setFileFilter(filter);

        fileChooser.showOpenDialog(this);

        // logoPreviewLbl.setIcon(new javax.swing.ImageIcon(fileChooser.getSelectedFile().getPath()));
        //fileChooser.getSelectedFile().getParent()+"/"+
        decisionTxt.setText(fileChooser.getSelectedFile().getPath());

        System.setProperty("Excel.dir", fileChooser.getSelectedFile().getParent());
    }//GEN-LAST:event_jButton11ActionPerformed

    private void tenderrecordstxt2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt2CaretUpdate
        // TODO add your handling code here:
        unitsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT '-' UNION SELECT DISTINCT bulk_supply_unit FROM st_packing "));

    }//GEN-LAST:event_tenderrecordstxt2CaretUpdate

    private void tenderrecordstxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt2ActionPerformed

    private void unitsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unitsTblMouseClicked
        // TODO add your handling code here:
        tenderItemstable.setValueAt(unitsTbl.getValueAt(unitsTbl.getSelectedRow(), 0), tenderItemstable.getSelectedRow(), 2);
        closebtn5.doClick();
    }//GEN-LAST:event_unitsTblMouseClicked

    private void closebtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn5ActionPerformed
        // TODO add your handling code here:
        searchUnits.dispose();
    }//GEN-LAST:event_closebtn5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ExceluploadDialog;
    private javax.swing.JDialog awardItemsDialog;
    private javax.swing.JTable awardItemstbl;
    private javax.swing.JComboBox categoryccmbx;
    private javax.swing.JButton closebtn1;
    private javax.swing.JButton closebtn2;
    private javax.swing.JButton closebtn3;
    private javax.swing.JButton closebtn4;
    private javax.swing.JButton closebtn5;
    private javax.swing.JLabel decisionTxt;
    private javax.swing.JTextField descriptionAwardtxt;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField finYrtxt;
    private javax.swing.JTextField initialsTxt;
    private javax.swing.JTable itemsuploadtbl;
    private javax.swing.JTable itemsuploadtbl1;
    private javax.swing.JTextField itemsuploadtxt;
    private javax.swing.JTextField itemsuploadtxt1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton nxtbtn;
    private javax.swing.JButton previewUploadBtn;
    private javax.swing.JButton prvsbtn;
    private javax.swing.ButtonGroup quotOrTenderno;
    private javax.swing.JCheckBox rfqChk;
    private javax.swing.JButton rmvRow;
    private javax.swing.JButton saveButntender;
    private javax.swing.JButton savebtn;
    private javax.swing.JButton savetDbtn;
    private javax.swing.JDialog searchUnits;
    private javax.swing.JDialog searchtender;
    private javax.swing.JDialog searchtender1;
    private javax.swing.ButtonGroup servOrgoods;
    private javax.swing.JComboBox storecmbx;
    private javax.swing.JComboBox supplierCmbx;
    private javax.swing.JTextField supplierCodetxt;
    private javax.swing.JTextField tendeDescTxt;
    private javax.swing.JCheckBox tenderChk;
    private javax.swing.JTable tenderItemstable;
    private javax.swing.JTextField tenderNumbertxt;
    private javax.swing.JTextField tenderTxt;
    private javax.swing.JLabel tenderedTxt;
    private javax.swing.JPanel tenderrecordspnl;
    private javax.swing.JPanel tenderrecordspnl1;
    private javax.swing.JPanel tenderrecordspnl2;
    private javax.swing.JPanel tenderrecordspnl3;
    private javax.swing.JPanel tenderrecordspnl4;
    private javax.swing.JScrollPane tenderrecordsspnl;
    private javax.swing.JScrollPane tenderrecordsspnl1;
    private javax.swing.JScrollPane tenderrecordsspnl2;
    private javax.swing.JScrollPane tenderrecordsspnl3;
    private javax.swing.JScrollPane tenderrecordsspnl4;
    private javax.swing.JTable tenderrecordstbl;
    private javax.swing.JTable tenderrecordstbl1;
    private javax.swing.JTextField tenderrecordstxt;
    private javax.swing.JTextField tenderrecordstxt1;
    private javax.swing.JTextField tenderrecordstxt2;
    private javax.swing.JTable tendersGenerationtbl;
    private javax.swing.JTable unitsTbl;
    private javax.swing.JDialog uploadItemsDialog;
    // End of variables declaration//GEN-END:variables
}
