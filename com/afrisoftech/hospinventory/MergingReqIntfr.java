/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class MergingReqIntfr extends javax.swing.JInternalFrame {
    javax.swing.JComboBox cmbox2 =null;
    java.sql.Connection connectDB = null;
    
    com.afrisoftech.lib.DBObject dbObject;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public MergingReqIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new com.afrisoftech.dbadmin.JTable();
        jButton522 = new javax.swing.JButton();
        jSearchDialog221 = new javax.swing.JDialog();
        jSearchPanel221 = new javax.swing.JPanel();
        jTextField11321 = new javax.swing.JTextField();
        jSearchScrollPane221 = new javax.swing.JScrollPane();
        jSearchTable221 = new com.afrisoftech.dbadmin.JTable();
        jButton5221 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel61 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jPanel411 = new javax.swing.JPanel();
        jTextField911 = new javax.swing.JTextField();
        searchButton11 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField71 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton11 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();

        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });

        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setMnemonic('l');
        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        jSearchDialog221.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog221.setModal(true);
        jSearchDialog221.setUndecorated(true);
        jSearchPanel221.setLayout(new java.awt.GridBagLayout());

        jSearchPanel221.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField11321.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11321CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel221.add(jTextField11321, gridBagConstraints);

        jSearchTable221.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable221.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable221.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable221MouseClicked(evt);
            }
        });

        jSearchScrollPane221.setViewportView(jSearchTable221);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel221.add(jSearchScrollPane221, gridBagConstraints);

        jButton5221.setMnemonic('l');
        jButton5221.setText("Close");
        jButton5221.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5221ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel221.add(jButton5221, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog221.getContentPane().add(jSearchPanel221, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Merging Requisition");
        setPreferredSize(new java.awt.Dimension(650, 700));
        setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 4;
        getContentPane().add(jLabel5, gridBagConstraints);

        jTabbedPane1.setBackground(new java.awt.Color(194, 235, 153));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBackground(new java.awt.Color(255, 204, 204));
        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Requisition Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(0, 0, 255)));
        jLabel31.setText("Req. No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel31, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jTextField91, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jPanel41, gridBagConstraints);

        jLabel12.setText("Store Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel12, gridBagConstraints);

        jLabel42.setText("Store Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel42, gridBagConstraints);

        jTextField13.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jTextField13, gridBagConstraints);

        jPanel411.setLayout(new java.awt.GridBagLayout());

        jPanel411.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField911.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel411.add(jTextField911, gridBagConstraints);

        searchButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton11.setToolTipText("Search");
        searchButton11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton11.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton11.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel411.add(searchButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jPanel411, gridBagConstraints);

        jLabel13.setText("Req. No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel31.add(jLabel13, gridBagConstraints);

        jTextField71.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jTextField71, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Departmental Req.(IRQ)");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel31.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Procurement Req. (PRQ/SRQ)");
        jCheckBox2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel31.add(jCheckBox2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel61.add(jPanel31, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(210, 214, 237));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton11.setMnemonic('O');
        jButton11.setText("Merge Req");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton11, gridBagConstraints);

        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton41, gridBagConstraints);

        jButton51.setMnemonic('h');
        jButton51.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel61.add(jPanel11, gridBagConstraints);

        jTabbedPane1.addTab("Merge Req.", jPanel61);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 667, 205);
    }// </editor-fold>//GEN-END:initComponents

    private void jSearchTable221MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable221MouseClicked
       int i = 0;
        
        //this.jTextField31.setText("");
        
      //  jTextField81.setText("");
        
        String code = null;
       // jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
        jTextField71.setText(jSearchTable221.getValueAt(jSearchTable221.getSelectedRow(), 1).toString());
        jTextField911.setText(jSearchTable221.getValueAt(jSearchTable221.getSelectedRow(), 0).toString());
       // jTextField61.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jSearchDialog221.dispose();
      /*  try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance from ac_debtors where invoice_no ='"+jTextField911.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
               // jTextField71.setText(rset.getObject(1).toString());
                //jTextField81.setText(rset.getObject(2).toString());
                //jTextField41.setText(rset.getObject(3).toString());
                //jTextField21.setText(rset.getObject(4).toString());
                jTextField15.setText(rset.getObject(5).toString());
                
                
            }
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("SELECT not successful");
        }
      //  this.populateTable11(this.jTextField91.getText());
double floatDeduct = java.lang.Double.parseDouble(jTextField15.getText());
        double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
       
       double netPay = floatTotal + floatDeduct;
            this.jTextField14.setText(java.lang.String.valueOf(netPay));
        */
        jSearchDialog221.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable221MouseClicked

    private void jButton5221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5221ActionPerformed
      jSearchDialog221.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5221ActionPerformed

    private void jTextField11321CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11321CaretUpdate
       if(this.jTextField11321.getCaretPosition() < 2){
            System.out.print("Nothing");
        }else{
           if(jCheckBox1.isSelected()){
              jSearchTable221.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct requisition_no,cost_center from st_receive_requisAtion  where requisition_no ILIKE '"+jTextField11321.getText()+"%' AND requisition_no ILIKE 'IRQ%' order by requisition_no"));
          
        
                jSearchScrollPane221.setViewportView(jSearchTable221);
            
           }else{
             jSearchTable221.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct requisition_no,cost_center from st_receive_requisAtion  where requisition_no ILIKE '"+jTextField11321.getText()+"%' AND requisition_no ILIKE 'PRQ%' order by requisition_no"));
          
        
                jSearchScrollPane221.setViewportView(jSearchTable221);
                System.out.println("Cannot sort out");
        }
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField11321CaretUpdate

    private void searchButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton11ActionPerformed
       searchButton221Clicked();         // Add your handling code here:
      // Add your handling code here:
    }//GEN-LAST:event_searchButton11ActionPerformed
  
    private void searchButton221Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField911.getLocationOnScreen();
        
        jSearchDialog221.setSize(400,200);
        
        jSearchDialog221.setLocation(point);
        
        jSearchDialog221.setVisible(true);
    }
    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        int i = 0;
        
        //this.jTextField31.setText("");
        
        jTextField91.setText("");
        
        String code = null;
       // jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
        jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        //jTextField61.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jSearchDialog22.dispose();
       /* try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance from ac_debtors where invoice_no ='"+jTextField91.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField71.setText(rset.getObject(1).toString());
                jTextField81.setText(rset.getObject(2).toString());
                jTextField41.setText(rset.getObject(3).toString());
                jTextField21.setText(rset.getObject(4).toString());
                jTextField31.setText(rset.getObject(5).toString());
                
                
            }
            
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        */
      //  this.populateTable11(this.jTextField91.getText());

        
        jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
  /* private void populateTable11(java.lang.String patient_no1) {
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '"+patient_no1+"'");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,debit from hp_patient_card where invoice_no = '"+patient_no1+"' AND debit >0 order by date::date");
                
                while (rsetTable11.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable11.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable11.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable11.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable11.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                
                
                
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Cannot Retrive Data ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
    }
    
   */
    
    
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        jSearchDialog22.dispose();// Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed

    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(this.jTextField1132.getCaretPosition() < 2){
            System.out.print("Nothing");
        }else{
             if(jCheckBox1.isSelected()){
              jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct requisition_no,cost_center from st_receive_requisAtion  where requisition_no ILIKE '"+jTextField1132.getText()+"%' AND requisition_no ILIKE 'IRQ%' order by requisition_no"));
          
        
                jSearchScrollPane22.setViewportView(jSearchTable22);
            
           }else{
             jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct requisition_no,cost_center from st_receive_requisAtion  where requisition_no ILIKE '"+jTextField1132.getText()+"%' AND (requisition_no ILIKE 'PRQ%' or requisition_no ILIKE 'PRQ%') order by requisition_no"));
          
        
                jSearchScrollPane22.setViewportView(jSearchTable22);
                System.out.println("Cannot sort out");
        }
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton22Clicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton22Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog22.setSize(400,200);
        
        jSearchDialog22.setLocation(point);
        
        jSearchDialog22.setVisible(true);
    }
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
 setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String receiptNo = null;
        String actCode = null;
        String glCode = null;
        String bankAcc = null;
        String glCode1 = null;
        String bankAcc1 = null;
        String transNo = null;
        String payMode = null;
        String patCat = null;
        String patientAcc = null;
        String cardNo = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String actNames = null;
        String user = null;
        String actNames1 = null;
        String actCode1 = null;
        String invoiceNo = null;
        
        
        
        
        //invoiceNo = this.jTextField9.getText();
        
        //  try {
        //      connectDB.setAutoCommit(false);
        
        //      java.sql.Statement stm1 = connectDB.createStatement();
        
        
        
        try {
            connectDB.setAutoCommit(false);
            
               
          /*  java.sql.PreparedStatement pstmt3w = connectDB.prepareStatement("delete from ac_debtors  WHERE invoice_no = '"+jTextField911.getText()+"'");
            pstmt3w.executeUpdate();
            java.sql.Statement stm1 = connectDB.createStatement();
          /*   for (int p = 0; p < jTable11.getRowCount(); p++){
                
                
                if (jTable11.getModel().getValueAt(p,0) != null){
                    java.sql.PreparedStatement pstmt31w = connectDB.prepareStatement("delete from ac_ledger WHERE transaction_no = '"+jTable11.getModel().getValueAt(p,2).toString()+"'");
                    pstmt31w.executeUpdate();
                }
             }
            
           
            java.sql.Statement pss12 = connectDB.createStatement();
            java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            while (rsts11.next())
                actCode = rsts11.getObject(1).toString();
            actNames = rsts11.getObject(2).toString();
            
            java.sql.Statement pss11 = connectDB.createStatement();
            java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
            while (rsts1.next())
                actCode1 = rsts1.getObject(1).toString();
            actNames1 = rsts1.getObject(2).toString();
            user = rsts1.getObject(3).toString();
            
          /*  for (int i = 0; i < jTable11.getRowCount(); i++){
                
                
                if (jTable11.getModel().getValueAt(i,0) != null){
                    
                    java.sql.Statement pssq = connectDB.createStatement();
                    java.sql.ResultSet rse121 = pssq.executeQuery("select main_service,gl_account from pb_operating_parameters where service_type ILIKE '"+jTable11.getModel().getValueAt(i,1).toString()+"%' union select department,gl_code from st_stock_prices where product ILIKE '"+jTable11.getModel().getValueAt(i,1).toString()+"%'");
                    while (rse121.next())
                     glCode = dbObject.getDBObject(rse121.getObject(1), "-");//rse121.getObject(1).toString();
                     glCode1 = dbObject.getDBObject(rse121.getObject(2), "-");
                  
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                    pstmt.setString(1,jTextField101.getText());
                    pstmt.setObject(2,jTable11.getValueAt(i,1).toString());
                    pstmt.setString(3,"");
                    pstmt.setString(4,"Scheme");
                    pstmt.setString(5,jTable11.getValueAt(i,2).toString());
                    pstmt.setString(7,jTextField71.getText());
                    pstmt.setString(6,"");
                    pstmt.setString(8,"");
                    pstmt.setString(9,jTextField41.getText());
                    pstmt.setString(10,null);
                    pstmt.setString(11,"");
                    pstmt.setObject(12,jTable11.getValueAt(i,4).toString());
                    pstmt.setString(13,"00");
                    pstmt.setObject(14,jTable11.getValueAt(i,0).toString());
                    pstmt.setObject(15,actCode);
                    pstmt.setString(16,glCode);
                    pstmt.setObject(17,jTable11.getValueAt(i,3).toString());
                    pstmt.setObject(18,jTextField121.getText());
                    pstmt.setString(19,"true");
                    pstmt.setString(20,"Receipts");
                    pstmt.setString(21,"true");
                    pstmt.setString(22,actNames);
                    pstmt.setString(23,jTextField91.getText());
                    pstmt.setString(24,user);
                    pstmt.setString(25,"");
                    pstmt.setString(26,"OP");
                    
                    pstmt.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt2.setObject(1,glCode1);
                    pstmt2.setObject(2,glCode);
                    pstmt2.setString(3,jTextField101.getText());
                    pstmt2.setString(4,jTextField13.getText());
                    pstmt2.setString(5,"");
                    pstmt2.setString(6,cardNo);
                    pstmt2.setString(7,cardName);
                    pstmt2.setString(8,"");
                    pstmt2.setString(9,isurer);
                    pstmt2.setString(10,"");
                    pstmt2.setString(11,"");
                    pstmt2.setString(12,"");
                    pstmt2.setString(13,"");
                    pstmt2.setString(14,jTable11.getValueAt(i,1).toString());
                    pstmt2.setString(15,"Revenue");
                    pstmt2.setString(16,"0.00");
                    pstmt2.setObject(17,jTable11.getValueAt(i,4).toString());
                    pstmt2.setObject(18,jTable11.getValueAt(i,0).toString());
                    pstmt2.setString(19,jTable11.getValueAt(i,2).toString());
                    pstmt2.setString(20,"false");
                    pstmt2.setString(21,"false");
                    pstmt2.setString(22,"false");
                    pstmt2.setString(23,user);
                    pstmt2.executeUpdate();
                    
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt1.setString(1,jTextField101.getText());
                    pstmt1.setObject(2,jTable11.getValueAt(i,1).toString());
                    pstmt1.setString(3,"");
                    pstmt1.setString(4,"Scheme");
                    pstmt1.setString(5,jTable11.getValueAt(i,2).toString());
                    pstmt1.setString(7,jTextField71.getText());
                    pstmt1.setString(6,"");
                    pstmt1.setString(8,"");
                    pstmt1.setString(9,jTextField41.getText());
                    pstmt1.setString(10,null);
                    pstmt1.setString(11,"");
                    pstmt1.setObject(13,jTable11.getValueAt(i,4).toString());
                    pstmt1.setString(12,"00");
                    pstmt1.setObject(14,jTable11.getValueAt(i,0).toString());
                    pstmt1.setObject(15,actCode);
                    pstmt1.setString(16,glCode);
                    pstmt1.setObject(17,jTable11.getValueAt(i,3).toString());
                    pstmt1.setObject(18,jTextField121.getText());
                    pstmt1.setString(19,"true");
                    pstmt1.setString(20,"Receipts");
                    pstmt1.setString(21,"true");
                    pstmt1.setString(22,actNames);
                    pstmt1.setString(23,jTextField91.getText());
                    pstmt1.setString(24,user);
                    pstmt1.executeUpdate();
                  
                }
            }
            
            
        /*    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
            pstmt.setObject(1,actCode1);
            pstmt.setString(4,jTextField10.getText());
            pstmt.setObject(3,jTextField1.getText());
            pstmt.setString(2,jTextField4.getText());
            pstmt.setString(5,jTextField7.getText());
            pstmt.setString(6,"");
            if(this.jTextField8.getText().equals(null) ||this.jTextField8.getText().equals("-")){
                javax.swing.JOptionPane.showMessageDialog(this,"Account NO. MISSING !!!","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }else{
                pstmt.setString(7,jTextField8.getText());
            }
            pstmt.setString(8,"");
            pstmt.setString(9,"");
            pstmt.setString(10,jTextField2.getText());
            pstmt.setString(11,transNo);
            pstmt.setString(12,"Raise Invoice");
            pstmt.setString(13,jTextField3.getText());
            pstmt.setObject(14,"00");
            pstmt.setObject(15,jTable1.getValueAt(0,0).toString());
         
            pstmt.setObject(16,jTextField10.getText());
            pstmt.setString(17,actNames1);
            pstmt.setBoolean(18,true);
            pstmt.setBoolean(19,true);
            pstmt.setString(20,user);
            pstmt.setString(21,"");
            pstmt.setString(22,jTextField3.getText());
            pstmt.setString(23,"false");
         
            pstmt.executeUpdate();
         **/
            
            java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE st_receive_requisation set old_req_no = requisition_no, requisition_no = '"+jTextField91.getText()+"',cost_center = '"+jTextField13.getText()+"' WHERE requisition_no = '"+jTextField911.getText()+"' and (quantity-qty_issued) >0 ");
            pstmt22.executeUpdate();
           // java.sql.PreparedStatement pstmt222 = connectDB.prepareStatement("UPDATE hp_patient_card set date = '"+jTextField61.getText()+"',invoice_no = '"+jTextField91.getText()+"' WHERE invoice_no = '"+jTextField911.getText()+"'");
           // pstmt222.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
           // invoiceNo = jTextField91.getText();
            
            //FinalInvoiceByinvPdf policy = new FinalInvoiceByinvPdf();
            //policy.FinalInvoiceByinvPdf(connectDB,invoiceNo,invoiceNo);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Data Inserted Successfully ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
           
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
                    private void searchButton11aClicked() {
        
     /*   System.out.println("Showing dialog");
        
        jSearchDialog11.dispose();
     //   java.awt.Point point = this.jTextField7.getLocationOnScreen();
        
        jSearchDialog11.setSize(400,200);
        
        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);
      */
    }
          /*  private void populateTable2(java.lang.String patient_no) {
   
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
   
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(patient_no) FROM hp_patient_card WHERE patient_no = '"+patient_no+"' AND paid = false");
   
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
   
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date::date as date,service,dosage as quantity,debit-credit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND payment_mode = 'Scheme'");
   
                while (rsetTable1.next()) {
   
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    //   jTable11.setValueAt(rsetTable1.getObject(5), i, 4);
   
                    i++;
   
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
   
        } catch(java.sql.SQLException sqlExec) {
   
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
   
        }
   
   
    }
   
   */
      
           private void populateTable1(java.lang.String patient_no) {
     /*   for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '"+patient_no+"'");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                
                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,debit from hp_patient_card where invoice_no = '"+patient_no+"' AND debit >0 order by date::date");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    i++;
                    
                }
                
                
                
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Cannot Retrive Data ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
       
      */ 
    }
    
      
    
    
            //    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
       /* java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
        
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select item_code,units from st_stock_item where description = '"+selectedGuaran+"'");
                while (rs.next())
                    jTable1.setValueAt(rs.getObject(1),i,1);
                jTable1.setValueAt(rs.getObject(2),i,2);
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
        
            }
        */
    //}
    //   }
            
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton5221;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel411;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JDialog jSearchDialog221;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jSearchPanel221;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JScrollPane jSearchScrollPane221;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTable jSearchTable221;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTextField jTextField11321;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField911;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton11;
    // End of variables declaration//GEN-END:variables
    
}
