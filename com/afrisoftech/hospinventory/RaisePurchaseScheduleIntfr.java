/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.DBAllObjects;
import com.afrisoftech.lib.DBObject;
import java.awt.Color;
import java.awt.Desktop;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class RaisePurchaseScheduleIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form RaiseExternalPrInfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    Boolean JOptionCheck = false;
    String userName = null;
    private int maxIndex;
    private int index1;

    public RaisePurchaseScheduleIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        String title = "Raising a schedule for purchase";

        setTitle("TRANSACTION TYPE:" + title);
        duedateDatepckr.setDate(null);
        userTxt.setText(com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        itemsToorder = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        itemsTxt = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        externalprtbl = new com.afrisoftech.dbadmin.JTable();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        deptRaising = new javax.swing.JComboBox();
        receivnCmbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        userTxt = new javax.swing.JTextField();
        duedateDatepckr = new com.afrisoftech.lib.DatePicker();
        reqdatepicer = new com.afrisoftech.lib.DatePicker();
        jPanel11 = new javax.swing.JPanel();
        servicesPrqChbx = new javax.swing.JCheckBox();
        goodsPrqChbx = new javax.swing.JCheckBox();

        itemsToorder.setModal(true);
        itemsToorder.setUndecorated(true);
        itemsToorder.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        itemsTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemsTxtCaretUpdate(evt);
            }
        });
        itemsTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(itemsTxt, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        itemsToorder.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        jTextField11111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField11111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton511.setText("Close");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1000, 500));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());
        jPanel4.add(jPanel1, new java.awt.GridBagConstraints());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        postbtn.setBackground(new java.awt.Color(0, 204, 204));
        postbtn.setMnemonic('s');
        postbtn.setText("             Save           ");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(postbtn, gridBagConstraints);

        cancelbtn.setBackground(new java.awt.Color(0, 204, 204));
        cancelbtn.setMnemonic('l');
        cancelbtn.setText("     Clear Table    ");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(cancelbtn, gridBagConstraints);

        exitbtn.setBackground(new java.awt.Color(0, 204, 204));
        exitbtn.setMnemonic('c');
        exitbtn.setText("Close Form");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel5, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setMnemonic('r');
        jButton1.setText("    Remove Row    ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        jPanel4.add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        externalprtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Units", "Quantity", "Stock Balance", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        externalprtbl.getTableHeader().setReorderingAllowed(false);
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = externalprtbl.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }

        externalprtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                externalprtblMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                externalprtblMouseReleased(evt);
            }
        });
        externalprtbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                externalprtblKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(externalprtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel4.add(jPanel2, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder("Reason for Purchase"));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jScrollPane21.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane21.setViewportView(jTextPane4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jScrollPane21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jProgressBar1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        jPanel4.add(jPanel41, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Requisition Details"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("DEPARTMENT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel5.add(jLabel3, gridBagConstraints);

        deptRaising.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        deptRaising.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' union select distinct initcap(depart_name) from pb_main_department order by 1"));
        deptRaising.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptRaisingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 100);
        jPanel5.add(deptRaising, gridBagConstraints);

        receivnCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(select store_name from st_main_stores  ) order by 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 100);
        jPanel5.add(receivnCmbx, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("*Receiving Store ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel5.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel5, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Due Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel4, gridBagConstraints);

        jLabel8.setText("Entered By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel8, gridBagConstraints);

        jLabel111.setText("Requisition Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel111, gridBagConstraints);

        userTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel7.add(userTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(duedateDatepckr, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(reqdatepicer, gridBagConstraints);

        jPanel11.setBackground(new java.awt.Color(204, 255, 204));
        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 153, 153), null));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(servicesPrqChbx);
        servicesPrqChbx.setText("PRQ FOR SERVICES");
        servicesPrqChbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                servicesPrqChbxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(servicesPrqChbx, gridBagConstraints);

        buttonGroup1.add(goodsPrqChbx);
        goodsPrqChbx.setSelected(true);
        goodsPrqChbx.setText("PRQ FOR GOODS");
        goodsPrqChbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                goodsPrqChbxItemStateChanged(evt);
            }
        });
        goodsPrqChbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goodsPrqChbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(goodsPrqChbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel6, gridBagConstraints);

        jTabbedPane1.addTab("Products In The Catalog", jPanel4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed

        String description = null;
        String code = null;
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String transNo = null;
        String transNo1 = null;
        String glType = null;
        String user = null;

        String glCode = null;
        String units = null;
        double usage = 0.00;

        com.afrisoftech.lib.DBObject DBObject = new com.afrisoftech.lib.DBObject();

        try {

            connectDB.setAutoCommit(false);
            java.sql.Statement ps = connectDB.createStatement();
            if (goodsPrqChbx.isSelected()) {
                java.sql.ResultSet rs2 = ps.executeQuery("select 'PSC'||lpad(nextval('req_schedule')::text,6,0::TEXT)");
                while (rs2.next()) {
                    transNo = rs2.getObject(1).toString();
                    //jTextField362.setText(transNo);
                }
            } else {
                java.sql.ResultSet rs2 = ps.executeQuery("select 'SSC'||lpad(nextval('req_schedule')::text,6,0::TEXT)");
                while (rs2.next()) {
                    transNo = rs2.getObject(1).toString();
                    // jTextField362.setText(transNo);
                }
            }
//            java.sql.PreparedStatement h = connectDB.prepareStatement(user);
//            java.sql.ResultSet m = h.executeQuery();
//              while (m.next())
//            
//              {
//              java.lang.String a = m.getObject(1).toString();
//              }
            java.lang.Thread thread1 = null;

            jProgressBar1.setStringPainted(true);
            //           jProgressBar1.setString(user);
            //jProgressBar1.setValue(0);

            int j = 0;
            if (externalprtbl.getModel().getValueAt(j, 0) != null) {

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_purchase_schedule(\n"
                        + "            cost_center, store_name, item_code,item_description,  units, \n"
                        + "            quantity, price, order_by, date, requisition_no, user_name, stock_bal, \n"
                        + "            aie_holder, approved, processed,  remarks)\n"
                        + "    VALUES (?, ?, ?, ?, ?, \n"
                        + "            ?, ?, ?, ?, ?, ?, ?, \n"
                        + "            ?, ?, ?, ?);");

                index1 = 0;
                maxIndex = externalprtbl.getRowCount();
                for (int i = 0; i < externalprtbl.getRowCount(); i++) {

                    index1++;

                    jProgressBar1.setString(String.valueOf(index1));
                    if (index1 < maxIndex) {
                        jProgressBar1.setValue(index1);
                        index1++;
                    } else {
                        jProgressBar1.setValue(maxIndex);

                    }

                    //JOptionCheck=true;
                    if (externalprtbl.getModel().getValueAt(i, 0) != null && externalprtbl.getModel().getValueAt(i, 3) != null) {
                        //usage

                        java.sql.PreparedStatement pst1 = connectDB.prepareStatement("SELECT (sum(qty)::NUMERIC(15,0))/3 AS usage FROM stock_balance_qty where department = '" + deptRaising.getSelectedItem().toString().toUpperCase() + "' AND item_code = '" + externalprtbl.getValueAt(i, 0) + "' AND dates BETWEEN (current_date-90) AND current_date");
                        ResultSet rset2 = pst1.executeQuery();
                        while (rset2.next()) {
                            usage = rset2.getDouble(1);
                            System.out.println(externalprtbl.getModel().getValueAt(i, 1) + "  " + usage);
                        }

                        JOptionCheck = true;

                        pstmt.setObject(1, deptRaising.getSelectedItem().toString());
                        pstmt.setObject(2, receivnCmbx.getSelectedItem().toString());
                        pstmt.setObject(3, externalprtbl.getValueAt(i, 0).toString());
                        ////description
                        pstmt.setObject(4, externalprtbl.getValueAt(i, 1).toString());
                        pstmt.setObject(5, externalprtbl.getValueAt(i, 2).toString());
                        ///qty
                        pstmt.setDouble(6, Double.parseDouble(externalprtbl.getValueAt(i, 3).toString()));

                        if (goodsPrqChbx.isSelected()) {
                            java.sql.PreparedStatement search = connectDB.prepareStatement("SELECT  buying_price FROM st_stock_item where description ilike '" + externalprtbl.getValueAt(i, 1) + "' limit 1;");
                            java.sql.ResultSet tafta = search.executeQuery();
                            while (tafta.next()) {
                                String bprice = DBObject.getDBObject(tafta.getObject(1), "0.0");
                                System.err.println("Price " + bprice);
                                pstmt.setDouble(7, Double.valueOf(bprice.toString()));
                            }
                        } else {

                            java.sql.PreparedStatement search2 = connectDB.prepareStatement("SELECT DISTINCT unit_price FROM services_list  where service ilike '" + externalprtbl.getValueAt(i, 1) + "' limit 1;");
                            java.sql.ResultSet tafta = search2.executeQuery();
                            while (tafta.next()) {
                                String bprice = DBObject.getDBObject(tafta.getObject(1), "0.0");
                                System.err.println("Price " + bprice);
                                pstmt.setDouble(7, Double.valueOf(bprice.toString()));
                            }
                        }

                        pstmt.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(duedateDatepckr.getDate()));
                        pstmt.setDate(9, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reqdatepicer.getDate()));

                        pstmt.setObject(10, transNo);

                        pstmt.setObject(11, com.afrisoftech.lib.UserName.getUserName(connectDB));

                        pstmt.setDouble(12, Double.parseDouble(externalprtbl.getValueAt(i, 4).toString()));

                        pstmt.setString(13, "");
                        pstmt.setObject(14, false);
                        pstmt.setObject(15, false);
                        pstmt.setObject(16, externalprtbl.getValueAt(i, 5).toString());

                        pstmt.executeUpdate();

                    } else {
                        if (i == 0) {
                            JOptionPane.showMessageDialog(null, "Enter all the Highlighted values in the Table");
                        }

                    }
                    jProgressBar1.setValue(jProgressBar1.getMaximum());
                }

                com.afrisoftech.lib.GetItemInfo.updateTrail("Generated an External PR " + transNo, connectDB);

                connectDB.commit();
                connectDB.setAutoCommit(true);

                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Requisition No. is '" + transNo + "'", "Comfirmation", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                goodsPrqChbx.setSelected(true);

            }
        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            sq.printStackTrace();
            System.out.println(sq.getMessage());
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_postbtnActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        for (int k = 0; k < externalprtbl.getRowCount(); k++) {
            for (int r = 0; r < externalprtbl.getColumnCount(); r++) {
                externalprtbl.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int rows2Delete = externalprtbl.getSelectedRowCount();

        int[] selectedRows = externalprtbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) externalprtbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) externalprtbl.getModel();

                defTableModel.removeRow(externalprtbl.getSelectedRow());
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void externalprtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_externalprtblMouseClicked
        if (externalprtbl.getSelectedColumn() == 0) {

            this.cmbox11MouseClicked();
        }

        // Add your handling code here:
    }//GEN-LAST:event_externalprtblMouseClicked

    private void externalprtblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_externalprtblKeyReleased

        double bal = 0.00;
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select sum(QTY) from stock_balance_qty  WHERE item_code = '" + externalprtbl.getValueAt(externalprtbl.getSelectedRow(), 0) + "' AND department ILIKE '" + deptRaising.getSelectedItem().toString().toUpperCase() + "'");
            while (rs.next()) {

                bal = rs.getDouble(1);
                externalprtbl.setValueAt(java.lang.String.valueOf(bal), externalprtbl.getSelectedRow(), 4);
                //jComboBox1.setSelectedItem(rs.getString(1));
            }
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());

        }
    }//GEN-LAST:event_externalprtblKeyReleased

    private void deptRaisingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptRaisingActionPerformed

        // Add your handling code here:
    }//GEN-LAST:event_deptRaisingActionPerformed
    private void cmboxMouseClicked() {
//        System.out.println("Showing dialog");
////        java.awt.Point point = jTextField361.getLocationOnScreen();
//        jSearchDialog11.setSize(350, 200);
//        jSearchDialog11.setLocation(point);
//        jSearchDialog11.setVisible(true);
    }
    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void itemsTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemsTxtCaretUpdate
//        if (FormalCbx.isSelected()){
//
//            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT item_code, item_desc, units, unit_price FROM st_procurement_items WHERE item_desc ILIKE '%" + jTextField1111.getText() + "%' ORDER BY item_desc"));
//
//        }
//        else {
        if (goodsPrqChbx.isSelected() == true) {
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT item_code,description,units,buying_price,reorder_level FROM st_stock_item WHERE (description ILIKE '%" + itemsTxt.getText() + "%' OR item_code ILIKE '%" + itemsTxt.getText() + "%') AND department ILIKE '" + receivnCmbx.getSelectedItem().toString() + "' ORDER BY description"));
            jSearchScrollPane1.setViewportView(jSearchTable1);
        } //you can change this query up here
        else if (servicesPrqChbx.isSelected() == true) {
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT service_code, service, units_rate, unit_price,specification  FROM services_list WHERE service ILIKE '%" + itemsTxt.getText() + "%'  and department='" + deptRaising.getSelectedItem() + "'  ORDER BY service_code asc"));
            //SELECT DISTINCT service_code, service, specification  FROM services_list WHERE service ILIKE '%" + jTextField1111.getText() + "%'  and department='"+jComboBox2.getSelectedItem()+"'  ORDER BY service_code asc

            jSearchScrollPane1.setViewportView(jSearchTable1);

        }

        // Add your handling code here:
    }//GEN-LAST:event_itemsTxtCaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        double bal = 0.00;

        externalprtbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0), externalprtbl.getSelectedRow(), 0);
        externalprtbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1), externalprtbl.getSelectedRow(), 1);
        externalprtbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2), externalprtbl.getSelectedRow(), 2);
        // externalprtbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 4), externalprtbl.getSelectedRow(), 4);

        itemsToorder.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.itemsToorder.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void itemsTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsTxtActionPerformed

    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        // int j = 0;
        // try {
        //  java.sql.Statement stmt = connectDB.createStatement();
        // java.sql.ResultSet rset = stmt.executeQuery("SELECT count(requisition_no) FROM st_receive_requisation WHERE requisition_no ilike 'PRQ%' and processed = false");

        //   while (rset.next()) {
        //      j = rset.getInt(1);
        //  }
        //  if (j > 0){
        jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct requisition_no as Req_No from st_receive_requisation where requisition_no ILIKE '" + jTextField11111.getText().toString() + "%' and (requisition_no ilike 'PRQ%' OR requisition_no ilike 'SRQ%') AND analysed=FALSE ORDER BY requisition_no"));
                //   }
            /*   try {
         searchRowSet1.execute("select distinct order_no as scheme,(supplier) as name from st_orders where order_no ILIKE '"+jTextField1111.getText().toString()+"%' ORDER BY order_no");

         jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
         new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Order No.", false),
         new org.netbeans.lib.sql.models.TableModel.Column("name", "Supplier", false),
         // new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
         }));
         */

        //   } catch(java.sql.SQLException sqlExec) {
        //      javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        //   }
        jSearchTable11.setShowHorizontalLines(false);
        jSearchScrollPane11.setViewportView(jSearchTable11);

        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate

    private void jTextField11111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11111ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11111ActionPerformed

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
//        if (jTabbedPane1.getSelectedIndex() == 0) {
//            jTextField361.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
//            //    jTextField361.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
//            jSearchDialog11.dispose();
//            for (int k = 0; k < externalprtbl.getRowCount(); k++) {
//                for (int r = 0; r < externalprtbl.getColumnCount(); r++) {
//                    externalprtbl.getModel().setValueAt(null, k, r);
//                }
//            }
//
//            int k = 0;
//
//            this.postbtn.setEnabled(true);
//            this.populateTable11(this.jTextField361.getText());
//        }// Add your handling code here:
//        else if (jTabbedPane1.getSelectedIndex() == 1) {
//
//            jTextField362.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
//            jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, " select distinct item_description from st_receive_requisation where  requisition_no='" + jTextField362.getText() + "' order by 1 "));
//            this.jSearchDialog11.dispose();
//
//        }
    }//GEN-LAST:event_jSearchTable11MouseClicked
    private void populateTable11(java.lang.String patient_no) {
        int i = 0;
        try {

            //   for (int i = 0; i < jTable1.getRowCount(); i++ ) {
            //       if (jTable1.getModel().getValueAt(i,0) != null){
            java.sql.Statement stmtTable = connectDB.createStatement();

//            java.sql.ResultSet rsetTable = stmtTable.executeQuery("SELECT item_description,units,quantity::numeric,price,(quantity*price::numeric)::numeric(15,2),balance,reason FROM st_receive_requisation WHERE requisition_no ilike '" + jTextField361.getText() + "' order by item_description");
//            //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText().equalsIgnoreCase(jTextField1.getText())+"' and item = '"+jTable1.getValueAt(k,0).toString()+"'");
//
//            while (rsetTable.next()) {
//                java.sql.Statement stmtTable1 = connectDB.createStatement();
//                java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("SELECT item_code FROM st_stock_item where description='" + rsetTable.getObject(1).toString() + "' ");
//
//                externalprtbl.setValueAt(rsetTable.getObject(1), i, 1);
//                externalprtbl.setValueAt(rsetTable.getObject(2), i, 2);
//                externalprtbl.setValueAt(rsetTable.getObject(3), i, 3);
//                externalprtbl.setValueAt(rsetTable.getObject(7), i, 5);
//                externalprtbl.setValueAt(rsetTable.getObject(6), i, 4);
//                while (rsetTablex.next()) {
//                    externalprtbl.setValueAt(rsetTablex.getObject(1), i, 0);
//                }
//                jTextPane4.setText(rsetTable.getString(7));
//                //  jTable1.setValueAt("0.00", i, 5);
//                // jTable1.setValueAt(rsetTable.getObject(5), i, 6);
//                //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
//
//                i++;
//
//            }

            /*
             java.sql.Statement stmtTablez = connectDB.createStatement();
            
             java.sql.ResultSet rsetTablez = stmtTablez.executeQuery("SELECT DISTINCT cost_center FROM st_receive_requisation WHERE requisition_no ilike '"+jTextField361.getText()+"'");
             while (rsetTablez.next()) {
             jTextField10.setText(rsetTablez.getObject(1).toString());
             }
             */
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }
    }

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog11.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        goodsPrqChbx.setSelected(true);
        // requistnCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(select store_name from st_main_stores where code ilike '%M%'  union select '-') order by 1"));
    }//GEN-LAST:event_formInternalFrameOpened

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
//        if (jTabbedPane1.getSelectedIndex() == 1) {
//            try {
//                if (jTextField362.getText().isEmpty()) {
//                    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-"}));
//                } else {
//                    jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, " select distinct item_description from st_receive_requisation where  requisition_no='" + jTextField362.getText() + "' order by 1 "));
//
//                }
//
//            } catch (Exception ex) {
//                ex.printStackTrace();
//            }
//
//        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked
    private void cleartbl() {
//        for (int k = 0; k < specsTbl.getRowCount(); k++) {
//            for (int r = 0; r < specsTbl.getColumnCount(); r++) {
//                specsTbl.getModel().setValueAt(null, k, r);
//            }
//        }

    }
    private void externalprtblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_externalprtblMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_externalprtblMouseReleased

    private void servicesPrqChbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_servicesPrqChbxItemStateChanged
        // TODO add your handling code here:
        if (servicesPrqChbx.isSelected() == true) {
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT item_code,description,units,buying_price,reorder_level FROM st_stock_item WHERE description ILIKE '%" + itemsTxt.getText() + "%' AND department ILIKE '" + receivnCmbx.getSelectedItem().toString() + "' ORDER BY description"));
            //        }
            jSearchScrollPane1.setViewportView(jSearchTable1);

        } else {
        }

    }//GEN-LAST:event_servicesPrqChbxItemStateChanged

    private void goodsPrqChbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goodsPrqChbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goodsPrqChbxActionPerformed

    private void goodsPrqChbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_goodsPrqChbxItemStateChanged
        // TODO add your handling code here:
        if (goodsPrqChbx.isSelected() == true) {

            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT a.item_code,a.description,a.units,a.buying_price,a.reorder_level FROM st_stock_item a, st_procurement_plan b where a.description = b.item_description and b.financial_year = '2013/2014'"));
            jSearchScrollPane1.setViewportView(jSearchTable1);

        } else {
        }

    }//GEN-LAST:event_goodsPrqChbxItemStateChanged
    private void cmbox11MouseClicked() {
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        itemsToorder.setSize(600, 200);
        itemsToorder.setLocation(point);
        itemsToorder.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JComboBox deptRaising;
    private com.afrisoftech.lib.DatePicker duedateDatepckr;
    public static javax.swing.JButton exitbtn;
    private javax.swing.JTable externalprtbl;
    private javax.swing.JCheckBox goodsPrqChbx;
    private javax.swing.JDialog itemsToorder;
    private javax.swing.JTextField itemsTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton91;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JButton postbtn;
    private javax.swing.JComboBox receivnCmbx;
    private com.afrisoftech.lib.DatePicker reqdatepicer;
    private javax.swing.JCheckBox servicesPrqChbx;
    private javax.swing.JTextField userTxt;
    // End of variables declaration//GEN-END:variables
}
