/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import static com.afrisoftech.hospinventory.StockMain.connectDB;
import static com.afrisoftech.hospinventory.StockMain.medicdspane;
import com.afrisoftech.lib.GetItemInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
//

/**
 *
 * @author Charles
 */
public class MergeInventoryItemsIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    private int count1;
    private int nextVal;
    private int val;

    /**
     * Creates new form MergeInventoryItemsIntfr
     */
    public MergeInventoryItemsIntfr(java.sql.Connection connDB) {

        connectDB = connDB;

        initComponents();
        refresh();
        calculator();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchitem1dlg = new javax.swing.JDialog();
        tenderrecordspnl1 = new javax.swing.JPanel();
        castxt = new javax.swing.JTextField();
        tenderrecordsspnl1 = new javax.swing.JScrollPane();
        castbl = new com.afrisoftech.dbadmin.JTable();
        closebtn2 = new javax.swing.JButton();
        searchitem1dlg1 = new javax.swing.JDialog();
        tenderrecordspnl2 = new javax.swing.JPanel();
        trontxt = new javax.swing.JTextField();
        tenderrecordsspnl2 = new javax.swing.JScrollPane();
        trontbl = new com.afrisoftech.dbadmin.JTable();
        closebtn3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        originalNameLabel = new javax.swing.JLabel();
        originalCodeLable = new javax.swing.JLabel();
        targetItemCodeLbel = new javax.swing.JLabel();
        targetItemNameLabel = new javax.swing.JLabel();
        originalItemCodeTxt = new javax.swing.JTextField();
        targetItemCodeTxt = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        metatrontxt = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        castielletxt = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        spacerLabel = new javax.swing.JLabel();
        mergeItemsBtn = new javax.swing.JButton();
        clearFormBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        items_tbl = new com.afrisoftech.dbadmin.JTable();
        jButton1 = new javax.swing.JButton();
        refreshbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pendTxt = new javax.swing.JTextField();
        seltxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        typedesc = new javax.swing.JTextField();

        searchitem1dlg.setModal(true);
        searchitem1dlg.setUndecorated(true);
        searchitem1dlg.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl1.setLayout(new java.awt.GridBagLayout());

        castxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                castxtCaretUpdate(evt);
            }
        });
        castxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                castxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl1.add(castxt, gridBagConstraints);

        castbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        castbl.setToolTipText("Click on the target row to select the patient from the search.");
        castbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        castbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                castblMouseClicked(evt);
            }
        });
        tenderrecordsspnl1.setViewportView(castbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl1.add(tenderrecordsspnl1, gridBagConstraints);

        closebtn2.setText("Close");
        closebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl1.add(closebtn2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchitem1dlg.getContentPane().add(tenderrecordspnl1, gridBagConstraints);

        searchitem1dlg1.setModal(true);
        searchitem1dlg1.setUndecorated(true);
        searchitem1dlg1.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl2.setLayout(new java.awt.GridBagLayout());

        trontxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                trontxtCaretUpdate(evt);
            }
        });
        trontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trontxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl2.add(trontxt, gridBagConstraints);

        trontbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        trontbl.setToolTipText("Click on the target row to select the patient from the search.");
        trontbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        trontbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trontblMouseClicked(evt);
            }
        });
        tenderrecordsspnl2.setViewportView(trontbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl2.add(tenderrecordsspnl2, gridBagConstraints);

        closebtn3.setText("Close");
        closebtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl2.add(closebtn3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchitem1dlg1.getContentPane().add(tenderrecordspnl2, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Merge Inventory Items - (Merges transactions of 2 similar items into *Target Name and Code) ");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        originalNameLabel.setText("Original Item Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(originalNameLabel, gridBagConstraints);

        originalCodeLable.setText("Original Item Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(originalCodeLable, gridBagConstraints);

        targetItemCodeLbel.setText("Target Item Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(targetItemCodeLbel, gridBagConstraints);

        targetItemNameLabel.setText("Target Item Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(targetItemNameLabel, gridBagConstraints);

        originalItemCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        mainPanel.add(originalItemCodeTxt, gridBagConstraints);

        targetItemCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        mainPanel.add(targetItemCodeTxt, gridBagConstraints);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        metatrontxt.setEditable(false);
        metatrontxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        metatrontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metatrontxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(metatrontxt, gridBagConstraints);

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel16.add(jButton7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(jPanel16, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        castielletxt.setEditable(false);
        castielletxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        castielletxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                castielletxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(castielletxt, gridBagConstraints);

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel17.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(jPanel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel1.add(mainPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerLabel, gridBagConstraints);

        mergeItemsBtn.setText("Merge Items");
        mergeItemsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeItemsBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(mergeItemsBtn, new java.awt.GridBagConstraints());

        clearFormBtn.setText("Clear Form");
        clearFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(clearFormBtn, new java.awt.GridBagConstraints());

        closeFormBtn.setText("Close Form");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(closeFormBtn, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(buttonPanel, gridBagConstraints);

        jTabbedPane1.addTab("Merge Descriptions", jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        items_tbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct trim(code) as code, trim(item) as item_name,'' as CORRECT_NAME, false as confirm,'' as funsoft_code  from st_orders where upper(item) not in (select distinct upper(description) from st_stock_item) order by 1"));
        //cmbox51.addActionListener(new java.awt.event.ActionListener() {

            //         public void actionPerformed(java.awt.event.ActionEvent evt) {

                //            cmbox51ActionPerformed(evt);
                //      }
            // });

    //javax.swing.table.TableColumn teditor2 = this.supplierTbl.getColumn("CORRECT_NAME");
    //teditor2.setCellEditor(new javax.swing.DefaultCellEditor(cmbox51));
    items_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            items_tblMouseClicked(evt);
        }
        public void mousePressed(java.awt.event.MouseEvent evt) {
            items_tblMousePressed(evt);
        }
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            items_tblMouseReleased(evt);
        }
    });
    jScrollPane1.setViewportView(items_tbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jScrollPane1, gridBagConstraints);

    jButton1.setText("Match Selected Records");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jButton1, gridBagConstraints);

    refreshbtn.setText("Refresh");
    refreshbtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            refreshbtnActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(refreshbtn, gridBagConstraints);

    jLabel1.setText("Pending entries");
    jPanel2.add(jLabel1, new java.awt.GridBagConstraints());

    jLabel2.setText("Selected Entries");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jLabel2, gridBagConstraints);

    pendTxt.setEditable(false);
    pendTxt.setText("0");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(pendTxt, gridBagConstraints);

    seltxt.setEditable(false);
    seltxt.setText("0");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(seltxt, gridBagConstraints);

    jButton2.setText("New Item");
    jButton2.setEnabled(false);
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    jPanel2.add(jButton2, gridBagConstraints);

    typedesc.setText("Type item description or code here and press enter...");
    typedesc.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            typedescCaretUpdate(evt);
        }
    });
    typedesc.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            typedescMouseClicked(evt);
        }
    });
    typedesc.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            typedescActionPerformed(evt);
        }
    });
    typedesc.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            typedescKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            typedescKeyTyped(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel2.add(typedesc, gridBagConstraints);

    jTabbedPane1.addTab("Match Tender Awards with existing Stock Item Descriptions", jPanel2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jTabbedPane1, gridBagConstraints);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed

        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void mergeItemsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeItemsBtnActionPerformed
        // TODO add your handling code here:
        if (metatrontxt.getText().length() > 1) {
            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you Sure To Change [" + castielletxt.getText() + "] To\n [" + metatrontxt.getText() + "] ? This update is irreversible", "CONFIRMATION", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                try {
                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
                    //
                    java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("UPDATE st_stock_item SET item_code = '" + targetItemCodeTxt.getText() + "',description = '" + metatrontxt.getText() + "' WHERE item_code = '" + originalItemCodeTxt.getText() + "'  and  description = '" + castielletxt.getText() + "'");
                    pstmt3.executeUpdate();

                    java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_stock_prices SET product_id = '" + targetItemCodeTxt.getText() + "',product = '" + metatrontxt.getText() + "' WHERE product_id = '" + originalItemCodeTxt.getText() + "'  and product = '" + castielletxt.getText() + "'");
                    pstmt31.executeUpdate();
                    //pstmt.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_sub_stores SET item_code = '" + targetItemCodeTxt.getText() + "',item = '" + metatrontxt.getText() + "' WHERE item_code = '" + originalItemCodeTxt.getText() + "' AND item ILIKE '" + castielletxt.getText() + "' ");
                    pstmt31.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_stock_cardex SET item_code = '" + targetItemCodeTxt.getText() + "',item = '" + metatrontxt.getText() + "' WHERE item_code = '" + originalItemCodeTxt.getText() + "' AND item ILIKE '" + castielletxt.getText() + "' ");
                    pstmt31.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_stock_count SET product_code = '" + targetItemCodeTxt.getText() + "',description = '" + metatrontxt.getText() + "' WHERE product_code = '" + originalItemCodeTxt.getText() + "' AND description ILIKE '" + castielletxt.getText() + "'");
                    pstmt31.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_receive_requisation SET item_code = '" + targetItemCodeTxt.getText() + "',item_description = '" + metatrontxt.getText() + "' WHERE item_code = '" + originalItemCodeTxt.getText() + "' AND item_description ILIKE '" + castielletxt.getText() + "'");
                    pstmt31.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_item_to_quote SET item_code = '" + targetItemCodeTxt.getText() + "',item_description = '" + metatrontxt.getText() + "' WHERE item_code = '" + originalItemCodeTxt.getText() + "' AND item_description ILIKE '" + castielletxt.getText() + "'");
                    pstmt31.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_orders SET code = '" + targetItemCodeTxt.getText() + "',item = '" + metatrontxt.getText() + "' WHERE code = '" + originalItemCodeTxt.getText() + "' AND item ILIKE '" + castielletxt.getText() + "'");
                    pstmt31.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_recommendation SET item_code = '" + targetItemCodeTxt.getText() + "', description = '" + metatrontxt.getText() + "' WHERE item_code = '" + originalItemCodeTxt.getText() + "' AND description ILIKE '" + castielletxt.getText() + "'");
                    pstmt31.executeUpdate();

                    pstmt31 = connectDB.prepareStatement("UPDATE st_floated_quotations SET item_code = '" + targetItemCodeTxt.getText() + "',item_description = '" + metatrontxt.getText() + "' WHERE item_code = '" + originalItemCodeTxt.getText() + "' AND item_description ILIKE '" + castielletxt.getText() + "'");
                    pstmt31.executeUpdate();

                    System.err.println("This is of import");

                    PreparedStatement pst = connectDB.prepareStatement("SELECT DISTINCT item_code,oid from st_stock_item where item_code in (select item_code from st_stock_item group by 1 having count(item_code) > 1) and description in (select description from st_stock_item group by 1 having count(description) > 1) and item_code='" + targetItemCodeTxt.getText() + "' order by 2 limit 1");
                    ResultSet rset = pst.executeQuery();
                    String oid = "-";
                    while (rset.next()) {

                        oid = rset.getString(2);

                    }

                    java.sql.PreparedStatement pstmduplicate = connectDB.prepareStatement("DELETE FROM st_stock_item WHERE item_code = '" + targetItemCodeTxt.getText() + "' AND description = '" + metatrontxt.getText() + "' AND oid !='" + oid + "'");
                    pstmduplicate.executeUpdate();

                    GetItemInfo.updateTrail("Change of item description [" + castielletxt.getText() + "] To [" + metatrontxt.getText() + "] ", connectDB);

                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

                    JOptionPane.showMessageDialog(this, "Items merged succesfully");

                    connectDB.commit();
                    clearFormBtn.doClick();

//                    javax.swing.JInternalFrame dismth = new com.afrisoftech.hospinventory.AmmendMainStockCategoryintfr(connectDB, null);
//                    medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
//                    try {
//                        dismth.setSelected(true);
//                    } catch (java.beans.PropertyVetoException pvt) {
//                    }
                } catch (SQLException ex) {
                    Logger.getLogger(MergeInventoryItemsIntfr.class.getName()).log(Level.SEVERE, null, ex);
                    ex.printStackTrace();
                    System.err.println("Hello, boys!");
                    try {
                        connectDB.rollback();
                    } catch (SQLException ex1) {
                        Logger.getLogger(MergeInventoryItemsIntfr.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                }
            }
        }
    }//GEN-LAST:event_mergeItemsBtnActionPerformed

    private void metatrontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metatrontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metatrontxtActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        java.awt.Point p = metatrontxt.getLocationOnScreen();
        searchitem1dlg1.setLocation(p);
        searchitem1dlg1.setSize(metatrontxt.getWidth(), 200);
        searchitem1dlg1.setVisible(true);
        castxt.setText(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void castielletxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_castielletxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_castielletxtActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = castielletxt.getLocationOnScreen();
        searchitem1dlg.setLocation(p);
        searchitem1dlg.setSize(metatrontxt.getWidth(), 200);
        searchitem1dlg.setVisible(true);
        castxt.setText(null);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void castxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_castxtCaretUpdate
        // TODO add your handling code here:
        // TODO add your handling code here:

        if (this.castxt.getCaretPosition() > 1) {
            System.out.print("Got Results");

            if (jTabbedPane1.getSelectedIndex() == 0) {
                castbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select item_code,description,sub_cat_code FROM st_stock_item WHERE description ILIKE '%" + castxt.getText() + "%'  order by description"));
                castbl.setShowHorizontalLines(false);
            } else {

                castbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select item_code,description,sub_cat_code FROM st_stock_item WHERE (description ILIKE '%" + castxt.getText() + "%' or item_code ilike '" + items_tbl.getValueAt(items_tbl.getSelectedRow(), 0) + "'  or item_code ilike '%" + castxt.getText() + "%' )  order by description"));
                castbl.setShowHorizontalLines(false);
            }

            tenderrecordsspnl1.setViewportView(castbl);

        }
    }//GEN-LAST:event_castxtCaretUpdate

    private void castxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_castxtActionPerformed
        // TODO add your handling code here:
        //0240940
    }//GEN-LAST:event_castxtActionPerformed

    private void castblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_castblMouseClicked
        try {
            // TODO add your handling code here:
            if (jTabbedPane1.getSelectedIndex() == 0) {
                originalItemCodeTxt.setText(castbl.getValueAt(castbl.getSelectedRow(), 0).toString());

                castielletxt.setText(castbl.getValueAt(castbl.getSelectedRow(), 1).toString());
            } else {
                items_tbl.setValueAt(castbl.getValueAt(castbl.getSelectedRow(), 1).toString(), items_tbl.getSelectedRow(), 2);
                items_tbl.setValueAt(true, items_tbl.getSelectedRow(), 3);
                items_tbl.setValueAt(castbl.getValueAt(castbl.getSelectedRow(), 0).toString(), items_tbl.getSelectedRow(), 4);
                calculator();
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(SSOTenderEvaluationIntfr.class.getName()).log(Level.ALL.SEVERE, null, ex);
        }
        searchitem1dlg.dispose();
    }//GEN-LAST:event_castblMouseClicked

    private void closebtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn2ActionPerformed
        // TODO add your handling code here:
        this.searchitem1dlg.dispose();
    }//GEN-LAST:event_closebtn2ActionPerformed

    private void trontxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_trontxtCaretUpdate
        // TODO add your handling code here:
        if (this.trontxt.getCaretPosition() > 2) {
            System.out.print("Do you wanna know a story");

            trontbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select item_code,description,sub_cat_code FROM st_stock_item WHERE description ILIKE '%" + trontxt.getText() + "%'  order by description"));
            trontbl.setShowHorizontalLines(false);

            tenderrecordsspnl2.setViewportView(trontbl);

        }
    }//GEN-LAST:event_trontxtCaretUpdate

    private void trontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trontxtActionPerformed

    private void trontblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trontblMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            targetItemCodeTxt.setText(trontbl.getValueAt(trontbl.getSelectedRow(), 0).toString());

            metatrontxt.setText(trontbl.getValueAt(trontbl.getSelectedRow(), 1).toString());

            // ClearTable.clearthisTable(biderCodetbl);
//            tendeDescTxt.setText(com.afrisoftech.lib.GetItemInfo.getITenderDesc(tenderTxt.getText(), connectDB));
        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(SSOTenderEvaluationIntfr.class.getName()).log(Level.ALL.SEVERE, null, ex);
        }
        searchitem1dlg1.dispose();
    }//GEN-LAST:event_trontblMouseClicked

    private void closebtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closebtn3ActionPerformed

    private void clearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBtnActionPerformed
        // TODO add your handling code here:
        castielletxt.setText(null);
        originalItemCodeTxt.setText(null);
        metatrontxt.setText(null);
        targetItemCodeTxt.setText(null);
    }//GEN-LAST:event_clearFormBtnActionPerformed

    private void items_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_items_tblMouseClicked
        // TODO add your handling code here:
        if (items_tbl.getSelectedColumn() == 2) {
            java.awt.Point p = jScrollPane1.getLocationOnScreen();
            searchitem1dlg.setLocation(p);
            searchitem1dlg.setSize(jScrollPane1.getWidth() * 1 / 2, 200);
            searchitem1dlg.setVisible(true);
            castxt.setText(null);

//            if (jTabbedPane1.getSelectedIndex() == 1) {
//                castxt.setText(items_tbl.getValueAt(items_tbl.getSelectedRow(), 0).toString());
//            }
        }
    }//GEN-LAST:event_items_tblMouseClicked

    private void items_tblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_items_tblMousePressed
        // TODO add your handling code here:
//        if (items_tbl.getSelectedColumn() == 4) {
//            if (items_tbl.getModel().getValueAt(items_tbl.getSelectedRow(), 4) == Boolean.FALSE) {
//                System.out.println("true so execute");
//                items_tbl.setValueAt(items_tbl.getModel().getValueAt(items_tbl.getSelectedRow(), 1).toString().replace("M/S", "").trim(), items_tbl.getSelectedRow(), 2);
//
//                items_tbl.setValueAt(false, items_tbl.getSelectedRow(), 3);
//
//            } else {
//
//                System.out.println("false so no execute");
//                items_tbl.setValueAt(null, items_tbl.getSelectedRow(), 2);
//                items_tbl.setValueAt(false, items_tbl.getSelectedRow(), 3);
//
//            }
//        } else 
        if (items_tbl.getSelectedColumn() == 3) {
            calculator();
            items_tbl.setValueAt(null, items_tbl.getSelectedRow(), 4);
            items_tbl.setValueAt(null, items_tbl.getSelectedRow(), 2);

        }

    }//GEN-LAST:event_items_tblMousePressed

    private void items_tblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_items_tblMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_items_tblMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        count1 = 0;
        nextVal = 0;
        try {

            for (int i = 0; i < items_tbl.getRowCount(); i++) {
                connectDB.setAutoCommit(false);

                if (items_tbl.getValueAt(i, 3) == Boolean.TRUE) {

                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_orders SET item =?,code=?  WHERE trim(item) ilike ?  ");

                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 4));
                    pstmt.setObject(3, items_tbl.getValueAt(i, 1));

                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_recommendation SET description = ?,item_code=? WHERE trim(description) ilike ? ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 4));
                    pstmt.setObject(3, items_tbl.getValueAt(i, 1));

                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_floated_quotations SET item_description = ?, item_code=? WHERE trim(item_description) ilike ? ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 4));
                    pstmt.setObject(3, items_tbl.getValueAt(i, 1));

                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_item_to_quote SET item_description = ?,item_code=? WHERE trim(item_description) ilike ? ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 4));
                    pstmt.setObject(3, items_tbl.getValueAt(i, 1));

                    pstmt = connectDB.prepareStatement("UPDATE st_receive_requisation SET item_description = ? , item_code=? WHERE trim(item_description) ilike ? and requisition_no NOT LIKE 'IRQ%' ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 4));
                    pstmt.setObject(3, items_tbl.getValueAt(i, 1));

                    pstmt.executeUpdate();

                    connectDB.setAutoCommit(true);
                    connectDB.commit();

                }

                count1++;

            }
        } catch (SQLException ex) {
                        ex.printStackTrace();             //ex.printStackTrace();
        }

        refreshbtn.doClick();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed
        // TODO add your handling code here:
        refresh();
        calculator();
    }//GEN-LAST:event_refreshbtnActionPerformed

    private void refresh() {

        items_tbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct trim(code) as code, trim(item) as item_name,'' as CORRECT_NAME, false as confirm,'' as funsoft_code  from st_orders where upper(item) not in (select distinct upper(description) from st_stock_item) order by 1"));

        for (int i = 0; i < items_tbl.getRowCount(); i++) {
            items_tbl.setValueAt(false, i, 3);
            // items_tbl.setValueAt(false, i, 4);
        }
    }

    private void calculator() {
        int count = 0;
        pendTxt.setText(String.valueOf(items_tbl.getRowCount()));

        for (int i = 0; i < items_tbl.getRowCount(); i++) {
            if (items_tbl.getValueAt(i, 3) == Boolean.TRUE) {
                count++;
            }
        }
        val = count;

        seltxt.setText(String.valueOf(val));
    }

    private java.lang.Boolean RecordExists(String item) {
        Boolean status = false;
        try {

            java.sql.Statement pss = connectDB.createStatement();
            java.sql.ResultSet rsts = pss.executeQuery("SELECT  DISTINCT CASE WHEN '" + item.trim().toUpperCase() + "' "
                    + "IN (SELECT distinct trim(UPPER(description)) from st_stock_item) "
                    + "THEN TRUE ELSE FALSE "
                    + "END AS status from st_stock_item order by 1 limit  1 ");
            while (rsts.next()) {
                // rsts.getObject(1).toString();

                status = rsts.getBoolean(1);
            }

        } catch (SQLException ex) {
                        ex.printStackTrace();             //ex.printStackTrace();
        }
        return status;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        count1 = 0;
        nextVal = 0;

        try {
            for (int i = 0; i < items_tbl.getRowCount(); i++) {
                nextVal = 0;
                if (items_tbl.getValueAt(i, 3) == Boolean.TRUE && RecordExists(items_tbl.getValueAt(i, 2).toString()) == false) {

                    java.sql.Statement pss = connectDB.createStatement();
                    java.sql.ResultSet rsts = pss.executeQuery("select nextval('creditors_seq')");
                    while (rsts.next()) {
                        // rsts.getObject(1).toString();

                        val = rsts.getInt(1);
                    }
                    nextVal = val;
                    java.sql.PreparedStatement pst = connectDB.prepareStatement("INSERT INTO "
                            + "st_suppliers(code,supplier_name,short_name,date,gl_code)\n"
                            + "VALUES(?,?,?,?,?)");
                    pst.setObject(1, "CR" + nextVal);
                    pst.setObject(2, items_tbl.getValueAt(i, 1));
                    pst.setObject(3, items_tbl.getValueAt(i, 1));
                    pst.setObject(4, com.afrisoftech.lib.UserName.getServerDate(connectDB));
                    pst.setObject(5, "300-70700-30001");
                    pst.executeUpdate();

                    System.err.println("Done, details below:\n"
                            + "currval was [" + (val - 1) + "] \n nextval used[" + nextVal + "]\n For supplier " + items_tbl.getValueAt(i, 1));

                    ///updating existing
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_orders SET item =?  WHERE trim(item) ilike ?  ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 1));
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_recommendation SET description = ? WHERE trim(description) ilike ? ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 1));
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_floated_quotations SET item_description = ? WHERE trim(item_description) ilike ? ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 1));
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_item_to_quote SET item_description = ? WHERE trim(item_description) ilike ? ");
                    pstmt.setObject(1, items_tbl.getValueAt(i, 2));
                    pstmt.setObject(2, items_tbl.getValueAt(i, 1));
                    pstmt.executeUpdate();
                }

                connectDB.setAutoCommit(true);
                connectDB.commit();
                count1++;
            }
            refresh();
            calculator();
        } catch (SQLException ex) {
                        ex.printStackTrace();             //ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void typedescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typedescActionPerformed
        // TODO add your handling code here:
       
       
    }//GEN-LAST:event_typedescActionPerformed

    private void typedescCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_typedescCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_typedescCaretUpdate

    private void typedescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typedescKeyReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_typedescKeyReleased

    private void typedescKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typedescKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == java.awt.event.KeyEvent.VK_ENTER) {

            items_tbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct trim(code) as code, trim(item) as item_name,'' as CORRECT_NAME, false as confirm,'' as funsoft_code  from st_orders"
                    + " where  (code ILIKE '%" + typedesc.getText() + "%' OR item ILIKE '%" + typedesc.getText() + "%' ) order by 1"));
        }
    }//GEN-LAST:event_typedescKeyTyped

    private void typedescMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_typedescMouseClicked
        // TODO add your handling code here:
         if(typedesc.getText().contains("press enter")){
           typedesc.setText("");
        }
    }//GEN-LAST:event_typedescMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTable castbl;
    private javax.swing.JTextField castielletxt;
    private javax.swing.JTextField castxt;
    private javax.swing.JButton clearFormBtn;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JButton closebtn2;
    private javax.swing.JButton closebtn3;
    private javax.swing.JTable items_tbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton mergeItemsBtn;
    private javax.swing.JTextField metatrontxt;
    private javax.swing.JLabel originalCodeLable;
    private javax.swing.JTextField originalItemCodeTxt;
    private javax.swing.JLabel originalNameLabel;
    private javax.swing.JTextField pendTxt;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JDialog searchitem1dlg;
    private javax.swing.JDialog searchitem1dlg1;
    private javax.swing.JTextField seltxt;
    private javax.swing.JLabel spacerLabel;
    private javax.swing.JLabel targetItemCodeLbel;
    private javax.swing.JTextField targetItemCodeTxt;
    private javax.swing.JLabel targetItemNameLabel;
    private javax.swing.JPanel tenderrecordspnl1;
    private javax.swing.JPanel tenderrecordspnl2;
    private javax.swing.JScrollPane tenderrecordsspnl1;
    private javax.swing.JScrollPane tenderrecordsspnl2;
    private javax.swing.JTable trontbl;
    private javax.swing.JTextField trontxt;
    private javax.swing.JTextField typedesc;
    // End of variables declaration//GEN-END:variables
}
