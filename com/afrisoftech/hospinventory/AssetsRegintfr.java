/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */
package com.afrisoftech.hospinventory;

import static com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField13;
import static com.afrisoftech.hospinventory.PatientsBillingIntfr_.mainItemstbl;
import static com.afrisoftech.hospinventory.PatientsBillingIntfr_.patientNumberTxt;
import static com.afrisoftech.hospinventory.PatientsBillingIntfr_.transNo;
import net.sourceforge.barbecue.BarcodeFactory;
import net.sourceforge.barbecue.Barcode;
import net.sourceforge.barbecue.BarcodeException;
import net.sourceforge.barbecue.output.OutputException;


import java.awt.image.BufferedImage;

import net.sourceforge.barbecue.BarcodeImageHandler;

import javax.swing.*;
import java.io.File;
import java.lang.reflect.Method;
import java.awt.*;
import java.sql.SQLException;
import org.openide.util.Exceptions;

/**
 *
 * @author root
 */
public class AssetsRegintfr extends javax.swing.JInternalFrame implements java.lang.Runnable {

    /**
     * Creates new form Members
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.awt.GridBagConstraints gridBagConstraints1;
    private static final String[] barcodeData = {
        "Code128", "Creates a Code 128 barcode that dynamically switches between character sets to "
        + "give the smallest possible encoding. This will encode  all numeric characters, "
        + "upper and lower case alpha characters and control characters  from the standard "
        + "ASCII character set. The size of the barcode created will be the  smallest possible "
        + "for the given data, and use of this \"optimal\" encoding will  generally give smaller "
        + "barcodes than any of the other 3 \"vanilla\" encodings.",
        "Code128A", "Creates a Code 128 barcode using the A character set. This will encode  all numeric characters, upper case alpha characters and control characters  from the standard ASCII character set. The Code 128 barcode supports on-the-fly  character set changes using the appropriate code change symbol. The type A barcode  also supports a one character 'shift' to set B.",
        "Code128B", "Creates a Code 128 barcode using the B character set. This will encode  all numeric characters and upper and lower case alpha characters  from the standard ASCII character set. The Code 128 barcode supports on-the-fly  character set changes using the appropriate code change symbol. The type B barcode  also supports a one character 'shift' to set A.",
        "Code128C", "Creates a Code 128 barcode using the C character set. This will encode  only numeric characters in a double density format (e.g. 1 digit in the barcode  encodes two digits in the data). The Code 128 barcode supports on-the-fly  character set changes using the appropriate code change symbol. No shifts are  possible with the type C barcode.",
        "EAN128", "Creates an EAN128 barcode",
        "GlobalTradeItemNumber", "Creates a Global Treade Item Number (GTIN) based on the UCC/EAN 128 symbology.",
        "SCC14ShippingCode", "Creates an SCC-14 shipping code number based on the UCC/EAN 128 symbology.",
        "ShipmentIdentificationNumber", "Creates a shipment identification number based on the UCC/EAN 128 symbology.",
        "SSCC18", "Creates an SSCC-18 number based on the UCC/EAN 128 symbology.",
        "UCC128", "Creates a UCC 128 barcode. This will encode numeric characters and must  include the correct application identifier for the application domain in which  you wish to use the barcode.",
        "USPS", "Creates a US Postal Service barcode based on the UCC/EAN 128 symbology.",
        /*"Code39", "Creates a Code 39 barcode.",
         "Codabar", "Creates a Codabar barcode.",*/
        "PDF417", "Creates a PDF417 (2 dimensional) barcode."
    };
    Barcode barcode = null;

    public AssetsRegintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        java.lang.Thread assetListing = new java.lang.Thread(this, "Asset Link Thread");

        assetListing.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        assetSearchDialog = new javax.swing.JDialog();
        assetSearchPanel = new javax.swing.JPanel();
        searchByTagNumberTxt = new javax.swing.JTextField();
        assetSearchScrollPane = new javax.swing.JScrollPane();
        assetSearchTable = new com.afrisoftech.dbadmin.JTable();
        searchDialogDisposeBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        assetHolderSearchDialog = new javax.swing.JDialog();
        assetHolderSearchPanel = new javax.swing.JPanel();
        searchAssetHolderTxt = new javax.swing.JTextField();
        assetHolderSearchScrollPane = new javax.swing.JScrollPane();
        assetHolderSearchTable = new com.afrisoftech.dbadmin.JTable();
        searchDialogDisposeBtn1 = new javax.swing.JButton();
        assetTabbedPane = new javax.swing.JTabbedPane();
        assetListingPanel = new javax.swing.JPanel();
        assetListingJcrl = new javax.swing.JScrollPane();
        assetListTbl = new com.afrisoftech.dbadmin.JTable();
        refreshBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        assetMainPanel = new javax.swing.JPanel();
        assetSeparator = new javax.swing.JSeparator();
        assetDetailsPanel = new javax.swing.JPanel();
        assetTypeLbl = new javax.swing.JLabel();
        assetMakeLbl = new javax.swing.JLabel();
        assetMakeTxt = new javax.swing.JTextField();
        yearofManufactureLbl = new javax.swing.JLabel();
        yearofManufactureTxt = new javax.swing.JTextField();
        manufacturerLbl = new javax.swing.JLabel();
        manufacturerTxt = new javax.swing.JTextField();
        countryofOriginLbl = new javax.swing.JLabel();
        tagNumberLbl = new javax.swing.JLabel();
        tagNumberTxt = new javax.swing.JTextField();
        modelNumberLbl = new javax.swing.JLabel();
        modelNumberTxt = new javax.swing.JTextField();
        serialNumberLbl = new javax.swing.JLabel();
        serialNumberTxt = new javax.swing.JTextField();
        depreciationRateLbl = new javax.swing.JLabel();
        depreciationRateTxt = new javax.swing.JTextField();
        assetTypeCmbx = new javax.swing.JComboBox();
        dateofPurchaseLbl = new javax.swing.JLabel();
        dateofPurchasePicker = new com.afrisoftech.lib.DatePicker();
        assetNameLbl = new javax.swing.JLabel();
        assetNameTxt = new javax.swing.JTextField();
        assetValueLbl = new javax.swing.JLabel();
        assetValueTxt = new javax.swing.JTextField();
        invoiceNumberLbl = new javax.swing.JLabel();
        invoiceNumberSearchPanel = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        invoiceNumberTxt = new javax.swing.JTextField();
        barcodeTypeLbl = new javax.swing.JLabel();
        barcodeTypeCmbx = new JComboBox(getBarcodeTypes());
        barCodePanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        lpoNumberLbl = new javax.swing.JLabel();
        lpoNumberTxt = new javax.swing.JTextField();
        quotationNumberLbl = new javax.swing.JLabel();
        quotationNumberTxt = new javax.swing.JTextField();
        departmentLbl = new javax.swing.JLabel();
        countryofOriginCmbx = new javax.swing.JComboBox();
        departmentCmbx = new javax.swing.JComboBox();
        invoiceNumberSearchPanel1 = new javax.swing.JPanel();
        searchButton1 = new javax.swing.JButton();
        assetHolderTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        depreciationCategoryLbl = new javax.swing.JLabel();
        depreciationCategoryCmbx = new javax.swing.JComboBox();
        jPanel22 = new javax.swing.JPanel();
        jLabel6222 = new javax.swing.JLabel();
        supplierNameTxt = new javax.swing.JTextField();
        jLabel6422 = new javax.swing.JLabel();
        jLabel662 = new javax.swing.JLabel();
        supplierTelephoneTxt = new javax.swing.JTextField();
        jLabel572213 = new javax.swing.JLabel();
        supplierEmailTxt = new javax.swing.JTextField();
        jLabel642212 = new javax.swing.JLabel();
        supplierLocationTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierAddressTxt = new javax.swing.JTextPane();
        jLabel60221 = new javax.swing.JLabel();
        warrantyTxt = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        refreshFormBtn = new javax.swing.JButton();
        registerAssetsBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        otherAssetDetailsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        registrationNumberTxt = new javax.swing.JTextField();
        storeNameLbl = new javax.swing.JLabel();
        storeNameTxt = new javax.swing.JTextField();
        itemCodeLbl = new javax.swing.JLabel();
        itemCodeTxt = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel21 = new javax.swing.JPanel();
        jLabel6221 = new javax.swing.JLabel();
        vehicleEngineCapacityTxt = new javax.swing.JTextField();
        jLabel6421 = new javax.swing.JLabel();
        vehicleCarryingCapacityTxt = new javax.swing.JTextField();
        jLabel661 = new javax.swing.JLabel();
        vehicleEngineNumberTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        assetLocationCmbx = new javax.swing.JComboBox();
        jPanel41 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        serviceProviderEmailTxt = new javax.swing.JTextField();
        serviceProviderTelephoneTxt = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        serviceProviderNameTxt = new javax.swing.JTextField();
        jScrollPane21 = new javax.swing.JScrollPane();
        serviceProviderAddressTxt = new javax.swing.JTextPane();
        jLabel91 = new javax.swing.JLabel();
        jLabel602 = new javax.swing.JLabel();
        serviceProviderContactPersonTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        maintenanceScheduleTxt = new javax.swing.JTextField();
        serviceDatePicker = new com.afrisoftech.lib.DatePicker();
        jLabel21 = new javax.swing.JLabel();
        registeredAssetListingPanel = new javax.swing.JPanel();
        registeredRefreshBtn = new javax.swing.JButton();
        closeBtn1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        registeredAssetListingJcrl = new javax.swing.JScrollPane();
        registeredAssetListTbl = new com.afrisoftech.dbadmin.JTable();
        removeAssetBtn = new javax.swing.JButton();
        depreciationSchedulePanel = new javax.swing.JPanel();
        depreciationScheduleJcrl = new javax.swing.JScrollPane();
        depreciationScheduleTbl = new com.afrisoftech.dbadmin.JTable();
        depreciationParametersPanel = new javax.swing.JPanel();
        depreciationAssetTypeLbl = new javax.swing.JLabel();
        depreciationAssetTypeCmbx = new javax.swing.JComboBox();
        depreciationDatePicker = new com.afrisoftech.lib.DatePicker();
        depreciationDatePickerLbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        depreciateAssetsBtn = new javax.swing.JButton();
        depreciationCloseBtn = new javax.swing.JButton();
        removeAssetBtn1 = new javax.swing.JButton();

        assetSearchDialog.setModal(true);
        assetSearchDialog.setUndecorated(true);
        assetSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        assetSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        assetSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchByTagNumberTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchByTagNumberTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        assetSearchPanel.add(searchByTagNumberTxt, gridBagConstraints);

        assetSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        assetSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assetSearchTableMouseClicked(evt);
            }
        });
        assetSearchScrollPane.setViewportView(assetSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        assetSearchPanel.add(assetSearchScrollPane, gridBagConstraints);

        searchDialogDisposeBtn.setText("Dispose");
        searchDialogDisposeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDialogDisposeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetSearchPanel.add(searchDialogDisposeBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetSearchDialog.getContentPane().add(assetSearchPanel, gridBagConstraints);

        jLabel9.setText("Email");

        assetHolderSearchDialog.setModal(true);
        assetHolderSearchDialog.setUndecorated(true);
        assetHolderSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        assetHolderSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        assetHolderSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchAssetHolderTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchAssetHolderTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        assetHolderSearchPanel.add(searchAssetHolderTxt, gridBagConstraints);

        assetHolderSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        assetHolderSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assetHolderSearchTableMouseClicked(evt);
            }
        });
        assetHolderSearchScrollPane.setViewportView(assetHolderSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        assetHolderSearchPanel.add(assetHolderSearchScrollPane, gridBagConstraints);

        searchDialogDisposeBtn1.setText("Dispose");
        searchDialogDisposeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDialogDisposeBtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetHolderSearchPanel.add(searchDialogDisposeBtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetHolderSearchDialog.getContentPane().add(assetHolderSearchPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Asset Registration/Management form");
        setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        assetListingPanel.setLayout(new java.awt.GridBagLayout());

        assetListingJcrl.setBorder(javax.swing.BorderFactory.createTitledBorder("Item List"));
        assetListingJcrl.setPreferredSize(new java.awt.Dimension(100, 427));

        assetListTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assetListTblMouseClicked(evt);
            }
        });
        assetListingJcrl.setViewportView(assetListTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        assetListingPanel.add(assetListingJcrl, gridBagConstraints);

        refreshBtn.setText("Refesh Asset List");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetListingPanel.add(refreshBtn, gridBagConstraints);

        closeBtn.setText("Close Form");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetListingPanel.add(closeBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        assetListingPanel.add(jLabel12, gridBagConstraints);

        assetTabbedPane.addTab("List of Assets to register", assetListingPanel);

        assetMainPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        assetMainPanel.add(assetSeparator, gridBagConstraints);

        assetDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Main Details"));
        assetDetailsPanel.setLayout(new java.awt.GridBagLayout());

        assetTypeLbl.setText("Asset Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(assetTypeLbl, gridBagConstraints);

        assetMakeLbl.setText("Asset Make");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(assetMakeLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assetDetailsPanel.add(assetMakeTxt, gridBagConstraints);

        yearofManufactureLbl.setText("Year of Manf.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(yearofManufactureLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assetDetailsPanel.add(yearofManufactureTxt, gridBagConstraints);

        manufacturerLbl.setText("Manufacturer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(manufacturerLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assetDetailsPanel.add(manufacturerTxt, gridBagConstraints);

        countryofOriginLbl.setText("Country of Origin");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(countryofOriginLbl, gridBagConstraints);

        tagNumberLbl.setText("Tag No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(tagNumberLbl, gridBagConstraints);

        tagNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tagNumberTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assetDetailsPanel.add(tagNumberTxt, gridBagConstraints);

        modelNumberLbl.setText("Model No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(modelNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assetDetailsPanel.add(modelNumberTxt, gridBagConstraints);

        serialNumberLbl.setText("Serial No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(serialNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assetDetailsPanel.add(serialNumberTxt, gridBagConstraints);

        depreciationRateLbl.setText("Deprec. Rate(%)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(depreciationRateLbl, gridBagConstraints);

        depreciationRateTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        depreciationRateTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        depreciationRateTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assetDetailsPanel.add(depreciationRateTxt, gridBagConstraints);

        assetTypeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select activity from pb_activity where main_category iLIKE '%Fixed Asset%' AND activity not ilike '%depreciation%' order by activity"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(assetTypeCmbx, gridBagConstraints);

        dateofPurchaseLbl.setText("Date of Purchase");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(dateofPurchaseLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        assetDetailsPanel.add(dateofPurchasePicker, gridBagConstraints);

        assetNameLbl.setText("Asset Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(assetNameLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(assetNameTxt, gridBagConstraints);

        assetValueLbl.setText("Asset Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(assetValueLbl, gridBagConstraints);

        assetValueTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        assetValueTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        assetValueTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        assetDetailsPanel.add(assetValueTxt, gridBagConstraints);

        invoiceNumberLbl.setText("Invoice/Asset File No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(invoiceNumberLbl, gridBagConstraints);

        invoiceNumberSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        invoiceNumberSearchPanel.setMinimumSize(new java.awt.Dimension(34, 47));
        invoiceNumberSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        invoiceNumberSearchPanel.add(searchButton, gridBagConstraints);

        invoiceNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        invoiceNumberSearchPanel.add(invoiceNumberTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(invoiceNumberSearchPanel, gridBagConstraints);

        barcodeTypeLbl.setText("Barcode Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(barcodeTypeLbl, gridBagConstraints);

        barcodeTypeCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeTypeCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(barcodeTypeCmbx, gridBagConstraints);

        barCodePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Panel for bar-codes"));
        barCodePanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane4.setViewportView(jTextPane3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        barCodePanel.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        assetDetailsPanel.add(barCodePanel, gridBagConstraints);

        lpoNumberLbl.setText("LPO No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(lpoNumberLbl, gridBagConstraints);

        lpoNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(lpoNumberTxt, gridBagConstraints);

        quotationNumberLbl.setText("Quotation No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(quotationNumberLbl, gridBagConstraints);

        quotationNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(quotationNumberTxt, gridBagConstraints);

        departmentLbl.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(departmentLbl, gridBagConstraints);

        countryofOriginCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT country_name FROM pb_country ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(countryofOriginCmbx, gridBagConstraints);

        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT depart_name FROM pb_main_department ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(departmentCmbx, gridBagConstraints);

        invoiceNumberSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        invoiceNumberSearchPanel1.setMinimumSize(new java.awt.Dimension(34, 47));
        invoiceNumberSearchPanel1.setLayout(new java.awt.GridBagLayout());

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        invoiceNumberSearchPanel1.add(searchButton1, gridBagConstraints);

        assetHolderTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        invoiceNumberSearchPanel1.add(assetHolderTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(invoiceNumberSearchPanel1, gridBagConstraints);

        jLabel1.setText("Asset Holder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(jLabel1, gridBagConstraints);

        depreciationCategoryLbl.setText("Depreciation Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assetDetailsPanel.add(depreciationCategoryLbl, gridBagConstraints);

        depreciationCategoryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT name FROM pb_depreciation_rates ORDER By 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetDetailsPanel.add(depreciationCategoryCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 10);
        assetMainPanel.add(assetDetailsPanel, gridBagConstraints);

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter purchase details here"));
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel6222.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel22.add(jLabel6222, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(supplierNameTxt, gridBagConstraints);

        jLabel6422.setText("Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel22.add(jLabel6422, gridBagConstraints);

        jLabel662.setText("Supplier Telephone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel22.add(jLabel662, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(supplierTelephoneTxt, gridBagConstraints);

        jLabel572213.setText("Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel22.add(jLabel572213, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel22.add(supplierEmailTxt, gridBagConstraints);

        jLabel642212.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel22.add(jLabel642212, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel22.add(supplierLocationTxt, gridBagConstraints);

        jScrollPane1.setViewportView(supplierAddressTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(jScrollPane1, gridBagConstraints);

        jLabel60221.setText("Guarantee/Warranty");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel22.add(jLabel60221, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel22.add(warrantyTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 10);
        assetMainPanel.add(jPanel22, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jLabel5, gridBagConstraints);

        refreshFormBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        refreshFormBtn.setMnemonic('n');
        refreshFormBtn.setText("Refresh");
        refreshFormBtn.setToolTipText("Click here to clear fields");
        refreshFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(refreshFormBtn, gridBagConstraints);

        registerAssetsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        registerAssetsBtn.setMnemonic('s');
        registerAssetsBtn.setText("Register Asset");
        registerAssetsBtn.setToolTipText("Click here to enter data");
        registerAssetsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerAssetsBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(registerAssetsBtn, gridBagConstraints);

        cancelBtn.setMnemonic('n');
        cancelBtn.setText("Cancel");
        cancelBtn.setToolTipText("Click here vto clear fields");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(cancelBtn, gridBagConstraints);

        editBtn.setMnemonic('E');
        editBtn.setText("Edit");
        editBtn.setToolTipText("Click here to edit data");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(editBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assetMainPanel.add(buttonPanel, gridBagConstraints);

        assetTabbedPane.addTab("Asset Main Details", assetMainPanel);

        otherAssetDetailsPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        otherAssetDetailsPanel.add(jLabel2, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Motor Vehicle Details"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel15.setText("Registration No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel15, gridBagConstraints);

        jLabel3.setText("Fuel Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(registrationNumberTxt, gridBagConstraints);

        storeNameLbl.setText("Store Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(storeNameLbl, gridBagConstraints);

        storeNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(storeNameTxt, gridBagConstraints);

        itemCodeLbl.setText("Item Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(itemCodeLbl, gridBagConstraints);

        itemCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(itemCodeTxt, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Petrol", "Diesel", "Electric", "Hybrid", "Hydrogen", "Gasoline", "Oil" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        otherAssetDetailsPanel.add(jPanel1, gridBagConstraints);

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter specifications here"));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel6221.setText("Engine Capacity(cc).");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel21.add(jLabel6221, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 60);
        jPanel21.add(vehicleEngineCapacityTxt, gridBagConstraints);

        jLabel6421.setText("Carrying/Load Capacity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel21.add(jLabel6421, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 60);
        jPanel21.add(vehicleCarryingCapacityTxt, gridBagConstraints);

        jLabel661.setText("Engine No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel21.add(jLabel661, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 10);
        jPanel21.add(vehicleEngineNumberTxt, gridBagConstraints);

        jLabel4.setText("Asset Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel21.add(jLabel4, gridBagConstraints);

        assetLocationCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT department_name FROM pb_departments ORDER BY 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(assetLocationCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        otherAssetDetailsPanel.add(jPanel21, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder("Service Provider details"));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jLabel61.setText("Service Provider Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel41.add(jLabel61, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel41.add(serviceProviderEmailTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel41.add(serviceProviderTelephoneTxt, gridBagConstraints);

        jLabel71.setText("Servicing Provider Telephone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel41.add(jLabel71, gridBagConstraints);

        jLabel81.setText("Service Provider Adress");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jLabel81, gridBagConstraints);

        serviceProviderNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceProviderNameTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(serviceProviderNameTxt, gridBagConstraints);

        jScrollPane21.setViewportView(serviceProviderAddressTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jScrollPane21, gridBagConstraints);

        jLabel91.setText("Service Provider Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jLabel91, gridBagConstraints);

        jLabel602.setText("Contact Person");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jLabel602, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(serviceProviderContactPersonTxt, gridBagConstraints);

        jLabel10.setText("Maintenance Schedule");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel41.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel41.add(maintenanceScheduleTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel41.add(serviceDatePicker, gridBagConstraints);

        jLabel21.setText("Replacement Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel41.add(jLabel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        otherAssetDetailsPanel.add(jPanel41, gridBagConstraints);

        assetTabbedPane.addTab("OtherAsset Details", otherAssetDetailsPanel);

        registeredAssetListingPanel.setLayout(new java.awt.GridBagLayout());

        registeredRefreshBtn.setText("Refresh Registered Asset List");
        registeredRefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registeredRefreshBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        registeredAssetListingPanel.add(registeredRefreshBtn, gridBagConstraints);

        closeBtn1.setText("Close Form");
        closeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        registeredAssetListingPanel.add(closeBtn1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        registeredAssetListingPanel.add(jLabel13, gridBagConstraints);

        registeredAssetListingJcrl.setBorder(javax.swing.BorderFactory.createTitledBorder("List of registered assets"));
        registeredAssetListingJcrl.setPreferredSize(new java.awt.Dimension(100, 427));

        registeredAssetListTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT asset_file_no, tag_no, asset_name, make, model, serial_registration_no, current_holder, location, asset_value as purchase_value, depreciated_value FROM asset_registration ORDER BY 1"));
        registeredAssetListTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registeredAssetListTblMouseClicked(evt);
            }
        });
        registeredAssetListingJcrl.setViewportView(registeredAssetListTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        registeredAssetListingPanel.add(registeredAssetListingJcrl, gridBagConstraints);

        removeAssetBtn.setText("Remove asset");
        removeAssetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAssetBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        registeredAssetListingPanel.add(removeAssetBtn, gridBagConstraints);

        assetTabbedPane.addTab("List of registered assets", registeredAssetListingPanel);

        depreciationSchedulePanel.setLayout(new java.awt.GridBagLayout());

        depreciationScheduleJcrl.setBorder(javax.swing.BorderFactory.createTitledBorder("Depreciation schedule"));
        depreciationScheduleJcrl.setPreferredSize(new java.awt.Dimension(100, 427));

        depreciationScheduleTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                depreciationScheduleTblMouseClicked(evt);
            }
        });
        depreciationScheduleJcrl.setViewportView(depreciationScheduleTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        depreciationSchedulePanel.add(depreciationScheduleJcrl, gridBagConstraints);

        depreciationParametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Depreciation Parameters"));
        depreciationParametersPanel.setLayout(new java.awt.GridBagLayout());

        depreciationAssetTypeLbl.setText("Asset Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        depreciationParametersPanel.add(depreciationAssetTypeLbl, gridBagConstraints);

        depreciationAssetTypeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select name from pb_depreciation_rates order by 1"));
        depreciationAssetTypeCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depreciationAssetTypeCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        depreciationParametersPanel.add(depreciationAssetTypeCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        depreciationParametersPanel.add(depreciationDatePicker, gridBagConstraints);

        depreciationDatePickerLbl.setText("Date of depreciation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        depreciationParametersPanel.add(depreciationDatePickerLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        depreciationSchedulePanel.add(depreciationParametersPanel, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel14, gridBagConstraints);

        depreciateAssetsBtn.setText("Depreciate Assets");
        depreciateAssetsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depreciateAssetsBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(depreciateAssetsBtn, gridBagConstraints);

        depreciationCloseBtn.setText("Close Form");
        depreciationCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depreciationCloseBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(depreciationCloseBtn, gridBagConstraints);

        removeAssetBtn1.setText("Remove asset");
        removeAssetBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAssetBtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(removeAssetBtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        depreciationSchedulePanel.add(jPanel2, gridBagConstraints);

        assetTabbedPane.addTab("Depreciation Schedule", depreciationSchedulePanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        getContentPane().add(assetTabbedPane, gridBagConstraints);

        setBounds(0, 0, 816, 493);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshFormBtnActionPerformed
        this.getContentPane().removeAll();

        this.initComponents();       // Add your handling code here:
    }//GEN-LAST:event_refreshFormBtnActionPerformed

    private void registerAssetsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerAssetsBtnActionPerformed

        java.sql.Savepoint assetRegistrationSavePoint = null;
        try {
            connectDB.setAutoCommit(false);
            if (registerAssetsBtn.getText().equalsIgnoreCase("Register Asset")) {
                assetRegistrationSavePoint = connectDB.setSavepoint("ASSET_REGISTRATION");
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO asset_registration("
                        + " asset_name, make, serial_registration_no, manufacturer, model,"
                        + " mafg_year, country_of_origin, supplier, supp_address, supp_tel, "
                        + " supp_email, tag_no, location, serv_name, serv_address, serv_email, "
                        + " contact, serv_tel, maint_schedule, gurantee, capacity_cc, carrying_capacity, "
                        + " engine_no, depreciation, year_of_purchase, asset_type, asset_value, "
                        + " replacement_date, barcode_no, invoice_no, issued,lpo_no,quotation_no,"
                        + "dept_requested, registration_no, current_holder, depreciation_category)"
                        + " VALUES (?, ?, ?, ?, ?,"
                        + "  ?, ?, ?, ?, ?, "
                        + "  ?, ?, ?, ?, ?, ?, "
                        + "  ?, ?, ?, ?, ?, ?, "
                        + "  ?, ?, ?, ?, ?,"
                        + "  ?, ?, ?, ?, ?, ?, ?, ?, ?,?) ");

                pstmt.setString(1, assetNameTxt.getText());
                pstmt.setString(2, assetMakeTxt.getText());
                pstmt.setString(3, serialNumberTxt.getText());
                pstmt.setString(4, manufacturerTxt.getText());
                pstmt.setString(5, modelNumberTxt.getText());
                pstmt.setString(6, yearofManufactureTxt.getText());
                pstmt.setString(7, countryofOriginCmbx.getSelectedItem().toString());
                if (supplierNameTxt.getText().equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Enter Supplier details", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                } else {
                    pstmt.setString(8, supplierNameTxt.getText());
                }
                pstmt.setString(9, supplierAddressTxt.getText());
                pstmt.setString(10, supplierTelephoneTxt.getText());
                pstmt.setString(11, supplierEmailTxt.getText());
                String tagNo1 = null;
                if (tagNumberTxt.getText().isEmpty()) {
                    tagNo1 = com.afrisoftech.lib.DateLables.getDateLabel();

                    pstmt.setString(12, tagNo1);
                } else {
                    pstmt.setString(12, tagNumberTxt.getText());
                }
                pstmt.setObject(13, assetLocationCmbx.getSelectedItem());
                pstmt.setString(14, serviceProviderNameTxt.getText());
                pstmt.setString(15, serviceProviderAddressTxt.getText());
                pstmt.setString(16, serviceProviderEmailTxt.getText());
                pstmt.setString(17, serviceProviderContactPersonTxt.getText());
                pstmt.setString(18, serviceProviderTelephoneTxt.getText());
                pstmt.setString(19, maintenanceScheduleTxt.getText());
                pstmt.setString(20, warrantyTxt.getText());
                pstmt.setString(21, "");
                pstmt.setString(22, "");
                pstmt.setString(23, "");
                pstmt.setDouble(24, java.lang.Double.valueOf(depreciationRateTxt.getText()));

                pstmt.setDate(25, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateofPurchasePicker.getDate()));
                if (assetTypeCmbx.getSelectedItem() == null) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Enter Asset Name,Supplier,make,registration no etc", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                } else {
                    pstmt.setString(26, assetTypeCmbx.getSelectedItem().toString());
                }
                pstmt.setDouble(27, java.lang.Double.valueOf(assetValueTxt.getText()));
                pstmt.setDate(28, null);
                pstmt.setString(29, barcode.toString());
                pstmt.setString(30, invoiceNumberTxt.getText());
                pstmt.setBoolean(31, false);
                pstmt.setString(32, lpoNumberTxt.getText());
                pstmt.setString(33, quotationNumberTxt.getText());
                pstmt.setString(34, departmentCmbx.getSelectedItem().toString());
                pstmt.setString(35, registrationNumberTxt.getText());
                pstmt.setString(36, assetHolderTxt.getText());
                pstmt.setObject(37, depreciationCategoryCmbx.getSelectedItem());
                System.out.print(barcode.toString());

                pstmt.executeUpdate();
                java.sql.Statement pss = connectDB.createStatement();
                String tagNo = null;
                if (tagNumberTxt.getText().isEmpty()) {
                    java.sql.ResultSet rsts = pss.executeQuery("select asset_file_no::varchar FROM asset_registration WHERE tag_no = '" + tagNo1 + "'");
                    while (rsts.next()) {
                        tagNo = rsts.getObject(1).toString();
                    }
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE asset_registration set tag_no = 'AST'||lpad('" + tagNo + "',8,'0'::varchar) WHERE tag_no = '" + tagNo1 + "'");
                    pstmt1.executeUpdate();
                }
                //    javax.swing.JOptionPane.showMessageDialog(this, "Asset registration successful", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                if (!storeNameTxt.getText().isEmpty()) {
                    String transNo = null;
                    java.sql.Statement ps = connectDB.createStatement();
                    java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                    while (rst.next()) {
                        transNo = rst.getObject(1).toString();
                    }
                    String stockCode = null;
                    java.sql.Statement pst21c = connectDB.createStatement();
                    java.sql.ResultSet rs11c = pst21c.executeQuery("select stock_code from pb_departments where department_name ilike '" + storeNameTxt.getText() + "'");
                    while (rs11c.next()) {
                        stockCode = rs11c.getObject(1).toString();
                    }
                    System.out.println("Stock gl account : [" + stockCode + "]");
                    // Accounting for the sales of inventory on the sales ledger in ac_ledger (credit income account)
                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                    pstmt2.setObject(1, com.afrisoftech.lib.GLCodesFactory.getGlCode(connectDB, assetTypeCmbx.getSelectedItem().toString()));
                    pstmt2.setString(2, assetTypeCmbx.getSelectedItem().toString());
                    pstmt2.setString(3, "");
                    pstmt2.setString(4, supplierNameTxt.getText());
                    pstmt2.setString(5, "ASSET REGISTRATION FROM STORES");
                    pstmt2.setString(6, "");
                    pstmt2.setString(7, "");
                    pstmt2.setString(8, "IP");
                    pstmt2.setString(9, "");
                    pstmt2.setString(10, "");
                    pstmt2.setString(11, "");
                    pstmt2.setString(12, "");
                    pstmt2.setString(13, "");
                    pstmt2.setString(14, assetNameTxt.getText());
                    pstmt2.setString(15, "ASSET_REGISTRATION");
                    pstmt2.setDouble(16, Double.parseDouble(assetValueTxt.getText()));
                    pstmt2.setDouble(17, 0.00);
                    pstmt2.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstmt2.setString(19, transNo);
                    pstmt2.setBoolean(20, false);
                    pstmt2.setBoolean(21, false);
                    pstmt2.setBoolean(22, false);
                    pstmt2.setString(23, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                    pstmt2.executeUpdate();

                    // Crediting the Inventory account in the st_stock_cardex (credit inventory/stock account) for the issued asset items
                    java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("INSERT INTO st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt1a.setString(1, null);
                    pstmt1a.setObject(3, assetNameTxt.getText());
                    pstmt1a.setObject(2, storeNameTxt.getText());
                    pstmt1a.setDate(4, null);
                    pstmt1a.setDouble(5, Double.parseDouble(assetValueTxt.getText()));
                    pstmt1a.setDouble(6, 0.00);
                    pstmt1a.setObject(7, "");
                    pstmt1a.setObject(8, "");
                    pstmt1a.setString(9, null);
                    pstmt1a.setString(10, null);
                    pstmt1a.setDouble(11, 0.00);
                    pstmt1a.setDouble(12, 0.00);
                    pstmt1a.setDouble(13, 0.00);
                    pstmt1a.setString(14, "");
                    pstmt1a.setString(15, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                    pstmt1a.setString(16, "");
                    pstmt1a.setString(17, null);
                    pstmt1a.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstmt1a.setObject(19, storeNameTxt.getText());
                    pstmt1a.setString(20, "Issuing");
                    pstmt1a.setDouble(21, 0.00);
                    pstmt1a.setString(23, stockCode);
                    pstmt1a.setDouble(22, 0.00);
                    pstmt1a.setString(24, "");
                    pstmt1a.setObject(25, storeNameTxt.getText());
                    pstmt1a.setString(26, transNo);
                    pstmt1a.setDouble(27, 1);
                    pstmt1a.setString(28, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                    pstmt1a.setBoolean(29, false);
                    pstmt1a.setDouble(30, 0.00);
                    pstmt1a.setDate(31, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstmt1a.setString(32, itemCodeTxt.getText());
                    pstmt1a.setString(33, "");
                    pstmt1a.executeUpdate();

                    // Reduce stock levels in table st_sub_stores
                    java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt33.setObject(1, storeNameTxt.getText());
                    pstmt33.setObject(2, assetNameTxt.getText());
                    pstmt33.setDouble(3, 0.00);
                    pstmt33.setDouble(4, 1);
                    pstmt33.setDouble(7, 0.00);
                    pstmt33.setDouble(5, Double.parseDouble(assetValueTxt.getText()));
                    pstmt33.setDouble(6, Double.parseDouble(assetValueTxt.getText()));
                    pstmt33.setDate(10, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                    pstmt33.setString(8, transNo);
                    pstmt33.setObject(9, "");
                    pstmt33.setString(11, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                    pstmt33.setString(12, "");
                    pstmt33.setObject(13, storeNameTxt.getText());
                    pstmt33.setString(14, invoiceNumberTxt.getText() + " " + departmentCmbx.getSelectedItem());
                    pstmt33.setDouble(15, Double.parseDouble(assetValueTxt.getText()));
                    pstmt33.setObject(17, "");
                    pstmt33.setObject(16, itemCodeTxt.getText());
                    pstmt33.executeUpdate();

                }

            } else {
                java.sql.PreparedStatement pstmtUpdate = connectDB.prepareStatement("UPDATE asset_registration"
                        + "   SET asset_name=?, make=?, serial_registration_no=?, manufacturer=?, "
                        + "       model=?, mafg_year=?, country_of_origin=?, supplier=?, supp_address=?, "
                        + "       supp_tel=?, supp_email=?, tag_no=?, location=?, serv_name=?, "
                        + "       serv_address=?, serv_email=?, contact=?, serv_tel=?, maint_schedule=?, "
                        + "       gurantee=?, capacity_cc=?, carrying_capacity=?, engine_no=?, "
                        + "       depreciation=?, year_of_purchase=?, asset_type=?, asset_value=?, "
                        + "       replacement_date=?, barcode_no=?, invoice_no=?, issued=?, lpo_no=?, "
                        + "       quotation_no=?, dept_requested=?, registration_no=?, "
                        + "       current_holder=?, depreciation_category = ?"
                        + " WHERE asset_file_no::varchar = ?");
                pstmtUpdate.setString(1, assetNameTxt.getText());
                pstmtUpdate.setString(2, assetMakeTxt.getText());
                pstmtUpdate.setString(3, serialNumberTxt.getText());
                pstmtUpdate.setString(4, manufacturerTxt.getText());
                pstmtUpdate.setString(5, modelNumberTxt.getText());
                pstmtUpdate.setString(6, yearofManufactureTxt.getText());
                pstmtUpdate.setString(7, countryofOriginCmbx.getSelectedItem().toString());
                if (supplierNameTxt.getText().equals("")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Enter Supplier details", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                } else {
                    pstmtUpdate.setString(8, supplierNameTxt.getText());
                }
                pstmtUpdate.setString(9, supplierAddressTxt.getText());
                pstmtUpdate.setString(10, supplierTelephoneTxt.getText());
                pstmtUpdate.setString(11, supplierEmailTxt.getText());
                String tagNo1 = null;
                if (tagNumberTxt.getText().isEmpty()) {
                    tagNo1 = com.afrisoftech.lib.DateLables.getDateLabel();

                    pstmtUpdate.setString(12, tagNo1);
                } else {
                    pstmtUpdate.setString(12, tagNumberTxt.getText());
                }
                pstmtUpdate.setObject(13, assetLocationCmbx.getSelectedItem());
                pstmtUpdate.setString(14, serviceProviderNameTxt.getText());
                pstmtUpdate.setString(15, serviceProviderAddressTxt.getText());
                pstmtUpdate.setString(16, serviceProviderEmailTxt.getText());
                pstmtUpdate.setString(17, serviceProviderContactPersonTxt.getText());
                pstmtUpdate.setString(18, serviceProviderTelephoneTxt.getText());
                pstmtUpdate.setString(19, maintenanceScheduleTxt.getText());
                pstmtUpdate.setString(20, warrantyTxt.getText());
                pstmtUpdate.setString(21, "");
                pstmtUpdate.setString(22, "");
                pstmtUpdate.setString(23, "");
                pstmtUpdate.setDouble(24, java.lang.Double.valueOf(depreciationRateTxt.getText()));

                pstmtUpdate.setDate(25, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dateofPurchasePicker.getDate()));
                if (assetTypeCmbx.getSelectedItem() == null) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Enter Asset Name,Supplier,make,registration no etc", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                } else {
                    pstmtUpdate.setString(26, assetTypeCmbx.getSelectedItem().toString());
                }
                pstmtUpdate.setDouble(27, java.lang.Double.valueOf(assetValueTxt.getText()));
                pstmtUpdate.setDate(28, null);
                pstmtUpdate.setString(29, barcode.toString());
                pstmtUpdate.setString(30, invoiceNumberTxt.getText());
                pstmtUpdate.setBoolean(31, false);
                pstmtUpdate.setString(32, lpoNumberTxt.getText());
                pstmtUpdate.setString(33, quotationNumberTxt.getText());
                pstmtUpdate.setString(34, departmentCmbx.getSelectedItem().toString());
                pstmtUpdate.setString(35, registrationNumberTxt.getText());
                pstmtUpdate.setString(36, assetHolderTxt.getText());
                pstmtUpdate.setObject(37, depreciationCategoryCmbx.getSelectedItem());
                pstmtUpdate.setString(38, invoiceNumberTxt.getText());
                pstmtUpdate.executeUpdate();

            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Asset registration successful", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sq.getMessage());
            sq.printStackTrace();
            try {
                connectDB.rollback(assetRegistrationSavePoint);
            } catch (SQLException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                Exceptions.printStackTrace(ex);
            }
            jLabel2.setForeground(java.awt.Color.red);
            jLabel2.setText("ERROR! Please double check your entries");
        }
        registerAssetsBtn.setText("Register Asset");
        // Add your handling code here:
    }//GEN-LAST:event_registerAssetsBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        /*      jTextField58221.setText("");
         jTextField50221.setText("");
         jTextField53221.setText("");
         jTextField49221.setText("");
         jTextField6021.setText("");
         // jTextField4821.setText("");
         jTextField1.setText("");
         jTextField54121.setText("");
         // jTextField5721.setText("");
         jTextField56121.setText("");
         */
        this.getContentPane().removeAll();
        this.initComponents();
        // Add your handling code here:
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_editBtnActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();
        // Add your handling code here:
}//GEN-LAST:event_searchButtonActionPerformed

    private void searchByTagNumberTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchByTagNumberTxtCaretUpdate
        assetSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                + "DISTINCT asset_file_no, tag_no, asset_name, make, model, serial_registration_no, "
                + "registration_no, location FROM asset_registration  WHERE asset_name"
                + " ILIKE '%" + searchByTagNumberTxt.getText() + "%' or"
                + " tag_no ILIKE '%" + searchByTagNumberTxt.getText() + "%' or "
                + " asset_file_no::VARCHAR ILIKE '%" + searchByTagNumberTxt.getText() + "%' ORDER BY 1"));
        assetSearchScrollPane.setViewportView(assetSearchTable);
}//GEN-LAST:event_searchByTagNumberTxtCaretUpdate

    private void assetSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assetSearchTableMouseClicked
        java.sql.PreparedStatement pstmtRetrieveAssetInfo;
        try {
            pstmtRetrieveAssetInfo = connectDB.prepareStatement("SELECT asset_name, make, "
                    + "       serial_registration_no, manufacturer, model, "
                    + "       mafg_year, country_of_origin, supplier, supp_address, supp_tel, "
                    + "       supp_email, tag_no, location, serv_name, serv_address, serv_email, "
                    + "       contact, serv_tel, maint_schedule, gurantee, capacity_cc, carrying_capacity, "
                    + "       engine_no, depreciation, year_of_purchase, asset_type, asset_value, "
                    + "       replacement_date, barcode_no, invoice_no, issued, lpo_no, quotation_no, "
                    + "       dept_requested, registration_no, user_name, registration_time, "
                    + "       asset_file_no, current_holder, depreciation_category "
                    + "  FROM asset_registration WHERE asset_file_no = ? ");
            pstmtRetrieveAssetInfo.setInt(1, Integer.parseInt(assetSearchTable.getValueAt(assetSearchTable.getSelectedRow(), 0).toString()));
            java.sql.ResultSet rsetRetrieveAssetInfo = pstmtRetrieveAssetInfo.executeQuery();
            while (rsetRetrieveAssetInfo.next()) {
                invoiceNumberTxt.setText(String.valueOf(rsetRetrieveAssetInfo.getInt("asset_file_no")));
                assetTypeCmbx.setSelectedItem(rsetRetrieveAssetInfo.getObject("asset_name"));
                departmentCmbx.setSelectedItem(rsetRetrieveAssetInfo.getObject("dept_requested"));
                lpoNumberTxt.setText(rsetRetrieveAssetInfo.getString("lpo_no"));
                quotationNumberTxt.setText(rsetRetrieveAssetInfo.getString("quotation_no"));
                assetNameTxt.setText(rsetRetrieveAssetInfo.getString("asset_name"));
                countryofOriginCmbx.setSelectedItem(rsetRetrieveAssetInfo.getObject("country_of_origin"));
                assetMakeTxt.setText(rsetRetrieveAssetInfo.getString("make"));
                yearofManufactureTxt.setText(rsetRetrieveAssetInfo.getString("manufacturer"));
                depreciationRateTxt.setText(String.valueOf(rsetRetrieveAssetInfo.getDouble("depreciation")));
                modelNumberTxt.setText(rsetRetrieveAssetInfo.getString("model"));
                serialNumberTxt.setText(rsetRetrieveAssetInfo.getString("serial_registration_no"));
                tagNumberTxt.setText(rsetRetrieveAssetInfo.getString("tag_no"));
                barcodeTypeCmbx.setSelectedIndex(0);
                manufacturerTxt.setText(rsetRetrieveAssetInfo.getString("manufacturer"));
                assetValueTxt.setText(String.valueOf(rsetRetrieveAssetInfo.getDouble("asset_value")));
                dateofPurchasePicker.setDate(rsetRetrieveAssetInfo.getDate("year_of_purchase"));
                supplierNameTxt.setText(rsetRetrieveAssetInfo.getString("supplier"));
                supplierTelephoneTxt.setText(rsetRetrieveAssetInfo.getString("supp_tel"));
                supplierAddressTxt.setText(rsetRetrieveAssetInfo.getString("supp_address"));
                supplierEmailTxt.setText(rsetRetrieveAssetInfo.getString("supp_email"));
                warrantyTxt.setText(rsetRetrieveAssetInfo.getString("gurantee"));
                supplierLocationTxt.setText(rsetRetrieveAssetInfo.getString("location"));
                registrationNumberTxt.setText(rsetRetrieveAssetInfo.getString("registration_no"));
                // vehicleFuelTypeTxt.setText(rsetRetrieveAssetInfo.getString("supp_tel"));
                vehicleEngineCapacityTxt.setText(rsetRetrieveAssetInfo.getString("capacity_cc"));
                vehicleCarryingCapacityTxt.setText(rsetRetrieveAssetInfo.getString("carrying_capacity"));
                vehicleEngineNumberTxt.setText(rsetRetrieveAssetInfo.getString("engine_no"));
                depreciationCategoryCmbx.setSelectedItem(rsetRetrieveAssetInfo.getString("depreciation_category"));

            }
            registerAssetsBtn.setText("Update Asset Register");
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Exceptions.printStackTrace(ex);
        }
        this.assetSearchDialog.dispose();

        // TODO add your handling code here:
}//GEN-LAST:event_assetSearchTableMouseClicked
    private void populateTable2(java.lang.String patient_no) {

        int i = 0;
        int j = 0;
        try {

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT department FROM st_item_to_quote WHERE quotation_no = '" + quotationNumberTxt.getText() + "'");

            //while (rset1.next()) {
            //    departmentTxt.setText(rset1.getString(1));
            //}
            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(item_code) FROM st_stock_cardex WHERE invoice_no = '" + patient_no + "'");

            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT item_code,item,quantity_received FROM st_stock_cardex WHERE invoice_no ='" + invoiceNumberTxt.getText() + "' ORDER BY 2");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    assetListTbl.setValueAt(rsetTable1.getObject(1), i, 0);
                    assetListTbl.setValueAt(rsetTable1.getObject(2), i, 1);
                    assetListTbl.setValueAt(rsetTable1.getObject(3), i, 2);

                    i++;

                }

            }



        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }


    }
    private void searchDialogDisposeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDialogDisposeBtnActionPerformed
        assetSearchDialog.dispose();  // Add your handling code here:
}//GEN-LAST:event_searchDialogDisposeBtnActionPerformed

    private void assetListTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assetListTblMouseClicked

        //patientNumberTxt.setText(patientListTbl.getValueAt(patientListTbl.getSelectedRow(), 0).toString());
        supplierNameTxt.setText(assetListTbl.getValueAt(assetListTbl.getSelectedRow(), 2).toString());
        invoiceNumberTxt.setText(assetListTbl.getValueAt(assetListTbl.getSelectedRow(), 3).toString());
        assetNameTxt.setText(assetListTbl.getValueAt(assetListTbl.getSelectedRow(), 1).toString());
        storeNameTxt.setText(assetListTbl.getValueAt(assetListTbl.getSelectedRow(), 8).toString());
        itemCodeTxt.setText(assetListTbl.getValueAt(assetListTbl.getSelectedRow(), 0).toString());
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();

        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

        sdf.applyPattern("yyyy-MM-dd");
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT "
                    + "price_per_item,date FROM st_stock_cardex WHERE invoice_no = ? AND "
                    + "item_code = ? ");

            pstmt.setString(1, invoiceNumberTxt.getText());
            pstmt.setString(2, assetListTbl.getValueAt(assetListTbl.getSelectedRow(), 0).toString());

            java.sql.ResultSet rset = pstmt.executeQuery();

            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("SELECT "
                    + "tel1||' '||tel2,email_address,postal_address,locality FROM st_suppliers WHERE supplier_name ILIKE ? ");

            pstmt1.setString(1, supplierNameTxt.getText());
            //pstmt.setString(2, patientListTbl.getValueAt(patientListTbl.getSelectedRow(), 0).toString());

            java.sql.ResultSet rset1 = pstmt1.executeQuery();
            while (rset.next()) {
                assetValueTxt.setText(rset.getString(1));
                try {
                    dateofPurchasePicker.setDate(sdf.parse(rset.getDate(2).toString()));

                } catch (java.text.ParseException pe) {
                    pe.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
                }
                // datePicker1.setDate(rset.getDate(1));
            }

            while (rset1.next()) {
                supplierTelephoneTxt.setText(rset1.getString(1));
                supplierEmailTxt.setText(rset1.getString(2));
                supplierAddressTxt.setText(rset1.getString(3));
                supplierLocationTxt.setText(rset1.getString(4));
            }
        } catch (java.sql.SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace();
        }
        barcodeTypeCmbx.setSelectedIndex(1);
        // TODO add your handling code here:
}//GEN-LAST:event_assetListTblMouseClicked

    private void barcodeTypeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeTypeCmbxActionPerformed

        barcodeSelected();
        // TODO add your handling code here:
}//GEN-LAST:event_barcodeTypeCmbxActionPerformed

    private void tagNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tagNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tagNumberTxtActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed

        this.refreshAssetList();
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void registeredAssetListTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registeredAssetListTblMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_registeredAssetListTblMouseClicked

    private void registeredRefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registeredRefreshBtnActionPerformed

        registeredAssetListTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT asset_file_no, tag_no, asset_name, make, model, serial_registration_no, current_holder, location, asset_value FROM asset_registration ORDER BY 1"));
        // TODO add your handling code here:
    }//GEN-LAST:event_registeredRefreshBtnActionPerformed

    private void closeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeBtn1ActionPerformed

    private void removeAssetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAssetBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeAssetBtnActionPerformed

    private void serviceProviderNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceProviderNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceProviderNameTxtActionPerformed

    private void depreciateAssetsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depreciateAssetsBtnActionPerformed

        java.sql.Savepoint assetRegistrationSavePoint = null;
        try {
            connectDB.setAutoCommit(false);
            for (int i = 0; i < depreciationScheduleTbl.getRowCount(); i++) {
                // Get a transaction number to identify the transaction
                String transNo = null;
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                while (rst.next()) {
                    transNo = rst.getObject(1).toString();
                }
                // Accounting for the asset depreciation on the accumulated asset depreciation ledger in ac_ledger (accumulated asset depreciation account)
                java.sql.PreparedStatement pstmtDepreciation = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                pstmtDepreciation.setObject(1, depreciationScheduleTbl.getValueAt(i, 5));
                pstmtDepreciation.setString(2, com.afrisoftech.lib.GLCodesFactory.getActivityDescription(connectDB, depreciationScheduleTbl.getValueAt(i, 5).toString()));
                pstmtDepreciation.setString(3, depreciationScheduleTbl.getValueAt(i, 0).toString());
                pstmtDepreciation.setString(4, depreciationScheduleTbl.getValueAt(i, 1).toString());
                pstmtDepreciation.setString(5, "ASSET DEPRECIATION");
                pstmtDepreciation.setString(6, "");
                pstmtDepreciation.setString(7, "");
                pstmtDepreciation.setString(8, "");
                pstmtDepreciation.setString(9, "");
                pstmtDepreciation.setString(10, "");
                pstmtDepreciation.setString(11, "");
                pstmtDepreciation.setString(12, "");
                pstmtDepreciation.setString(13, "");
                pstmtDepreciation.setString(14, depreciationScheduleTbl.getValueAt(i, 1).toString());
                pstmtDepreciation.setString(15, "FIXED_ASSET_DEPRECIATION");
                pstmtDepreciation.setDouble(16, 0.00);
                pstmtDepreciation.setDouble(17, Double.parseDouble(depreciationScheduleTbl.getValueAt(i, 4).toString()));
                pstmtDepreciation.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(depreciationDatePicker.getDate()));
                pstmtDepreciation.setString(19, transNo);
                pstmtDepreciation.setBoolean(20, false);
                pstmtDepreciation.setBoolean(21, false);
                pstmtDepreciation.setBoolean(22, false);
                pstmtDepreciation.setString(23, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                pstmtDepreciation.executeUpdate();

                // Accounting for the depreciation charge ledger in ac_ledger (dpreciation charge account)
                java.sql.PreparedStatement pstmtDepreciationCharge = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                pstmtDepreciationCharge.setObject(1, depreciationScheduleTbl.getValueAt(i, 6));
                pstmtDepreciationCharge.setString(2, com.afrisoftech.lib.GLCodesFactory.getActivityDescription(connectDB, depreciationScheduleTbl.getValueAt(i, 6).toString()));
                pstmtDepreciationCharge.setString(3, depreciationScheduleTbl.getValueAt(i, 0).toString());
                pstmtDepreciationCharge.setString(4, depreciationScheduleTbl.getValueAt(i, 1).toString());
                pstmtDepreciationCharge.setString(5, "ASSET DEPRECIATION");
                pstmtDepreciationCharge.setString(6, "");
                pstmtDepreciationCharge.setString(7, "");
                pstmtDepreciationCharge.setString(8, "IP");
                pstmtDepreciationCharge.setString(9, "");
                pstmtDepreciationCharge.setString(10, "");
                pstmtDepreciationCharge.setString(11, "");
                pstmtDepreciationCharge.setString(12, "");
                pstmtDepreciationCharge.setString(13, "");
                pstmtDepreciationCharge.setString(14, depreciationScheduleTbl.getValueAt(i, 1).toString());
                pstmtDepreciationCharge.setString(15, "ASSET_DEPRECIATION_CHARGE");
                pstmtDepreciationCharge.setDouble(16, Double.parseDouble(depreciationScheduleTbl.getValueAt(i, 4).toString()));
                pstmtDepreciationCharge.setDouble(17, 0.00);
                pstmtDepreciationCharge.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(depreciationDatePicker.getDate()));
                pstmtDepreciationCharge.setString(19, transNo);
                pstmtDepreciationCharge.setBoolean(20, false);
                pstmtDepreciationCharge.setBoolean(21, false);
                pstmtDepreciationCharge.setBoolean(22, false);
                pstmtDepreciationCharge.setString(23, com.afrisoftech.lib.UserName.getLoginName(connectDB));
                pstmtDepreciationCharge.executeUpdate();
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Asset depreciation successful", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sq.getMessage());
            sq.printStackTrace();
            try {
                connectDB.rollback(assetRegistrationSavePoint);
            } catch (SQLException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                Exceptions.printStackTrace(ex);
            }
            jLabel2.setForeground(java.awt.Color.red);
            jLabel2.setText("ERROR! Please double check your entries");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_depreciateAssetsBtnActionPerformed

    private void depreciationCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depreciationCloseBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depreciationCloseBtnActionPerformed

    private void depreciationScheduleTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_depreciationScheduleTblMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_depreciationScheduleTblMouseClicked

    private void removeAssetBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAssetBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeAssetBtn1ActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed

        System.out.println("Showing dialog");

        java.awt.Point point = this.assetHolderTxt.getLocationOnScreen();

        assetHolderSearchDialog.setSize(800, 200);

        assetHolderSearchDialog.setLocation(point);

        assetHolderSearchDialog.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void searchAssetHolderTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchAssetHolderTxtCaretUpdate

        assetHolderSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT employee_no, first_name||' '||middle_name||' '||last_name FROM master_file WHERE employee_no ilike '%" + searchAssetHolderTxt.getText() + "%' or first_name||' '||middle_name||' '||last_name ilike '%" + searchAssetHolderTxt.getText() + "%'"));
        // TODO add your handling code here:
    }//GEN-LAST:event_searchAssetHolderTxtCaretUpdate

    private void assetHolderSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assetHolderSearchTableMouseClicked

        assetHolderTxt.setText(assetHolderSearchTable.getValueAt(assetHolderSearchTable.getSelectedRow(), 0).toString());

        assetHolderSearchDialog.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_assetHolderSearchTableMouseClicked

    private void searchDialogDisposeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDialogDisposeBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchDialogDisposeBtn1ActionPerformed

    private void depreciationAssetTypeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depreciationAssetTypeCmbxActionPerformed

        this.depreciationScheduleTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                + " asset_file_no, asset_name, asset_value, asset_value*(SELECT rate FROM pb_depreciation_rates "
                + "WHERE pb_depreciation_rates.name = asset_registration.depreciation_category)/100"
                + " as annual_depreciation_amount, asset_value*(SELECT rate FROM pb_depreciation_rates "
                + "WHERE pb_depreciation_rates.name = asset_registration.depreciation_category)/100/4 "
                + "as quarterly_depreciation_amount, (SELECT code FROM pb_depreciation_rates WHERE "
                + "pb_depreciation_rates.name = asset_registration.depreciation_category) as acumulated_depreciation_acc,"
                + " (SELECT depreciation_code FROM pb_depreciation_rates WHERE pb_depreciation_rates.name "
                + "= asset_registration.depreciation_category) as depreciation_charge_acc FROM asset_registration WHERE "
                + "depreciation_category = '" + depreciationAssetTypeCmbx.getSelectedItem() + "' ORDER BY 1"));
        // TODO add your handling code here:
    }//GEN-LAST:event_depreciationAssetTypeCmbxActionPerformed
    private void searchButtonClicked2() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.invoiceNumberTxt.getLocationOnScreen();

        assetSearchDialog.setSize(800, 200);

        assetSearchDialog.setLocation(point);

        assetSearchDialog.setVisible(true);

    }

    public void usingBarbecueAsSwingComponent() {
        JPanel panel = new JPanel();

        // Always get a Barcode from the BarcodeFactory

        try {
            barcode = BarcodeFactory.createCode128B(assetNameTxt.getText() + " " + tagNumberTxt.getText());
        } catch (BarcodeException e) {
            // Error handling
        }

        /* Because Barcode extends Component, you can use it just like any other
         * Swing component. In this case, we can add it straight into a panel
         * and it will be drawn and layed out according to the layout of the panel.
         */

        //  jScrollPane1.setViewportView(barcode);


    }

    public void drawingBarcodeDirectToGraphics() throws BarcodeException, OutputException {
        // Always get a Barcode from the BarcodeFactory
        barcode = BarcodeFactory.createCode128B("My Barcode");

        // We are created an image from scratch here, but for printing in Java, your
        // print renderer should have a Graphics internally anyway
        BufferedImage image = new BufferedImage(500, 500, BufferedImage.TYPE_BYTE_GRAY);
        // We need to cast the Graphics from the Image to a Graphics2D - this is OK
        Graphics2D g = (Graphics2D) image.getGraphics();

        // Barcode supports a direct draw method to Graphics2D that lets you position the
        // barcode on the canvas
        barcode.invalidate();
        barcode.draw(g, 10, 56);
        barcode.validate();
    }

    public void outputtingBarcodeAsPNG() throws BarcodeException {
        // get a Barcode from the BarcodeFactory
        barcode = BarcodeFactory.createCode128B("My Barcode");

        try {
            File f = new File("mybarcode.png");

            // Let the barcode image handler do the hard work
            BarcodeImageHandler.savePNG(barcode, f);
        } catch (Exception e) {
            // Error handling here
        }
    }

    private String[] getBarcodeTypes() {
        String[] result = new String[barcodeData.length / 2];
        for (int i = 0; i < barcodeData.length; i += 2) {
            result[i / 2] = barcodeData[i];
        }
        return result;
    }

    private void barcodeSelected() {
        try {
            syncBarcode();
        } catch (BarcodeException e) {
            throw new RuntimeException(e.getMessage());
        }
    }

    private void setBarcode(final Barcode bar) {


        /*
         if(barcodePanel.getComponentCount() > 0) {
         Rectangle existingBounds = ((Barcode) barcodePanel.getComponent(0)).getBounds();
         barcodePanel.removeAll();
         barcodePanel.add(bar);
         Rectangle newBounds = ((Barcode) bar).getBounds();
         existingBounds.add(newBounds);
         barcodePanel.repaint(existingBounds);
         } else {
         barcodePanel.add(bar);
         barcodePanel.revalidate();
         }
         *
         */
        jScrollPane4.setViewportView(bar);
    }

    private void syncBarcode() throws BarcodeException {
        String currentValue = barcodeTypeCmbx.getSelectedItem().toString();//(String) barcodeSelection.getSelectedItem();
        String barcodeText = assetNameTxt.getText() + " " + tagNumberTxt.getText(); //dataField.getText();

        if ((barcodeText == null) || (barcodeText.length() == 0)) {
            barcodeText = " ";
        }

        /* boolean appIDVisible= currentValue.equals("UCC128");
         if(appIDVisible != appIDTextField.isVisible()) {
         appIDTextField.setVisible(appIDVisible);
         appIDLabel.setVisible(appIDVisible);
         }
         */
        if (currentValue.equals("UCC128")) {
            barcode = BarcodeFactory.createUCC128(currentValue/*appIDTextField.getText()*/, barcodeText);
            setBarcode(barcode);
        } else if (currentValue.equals("Code39")) {
            barcode = BarcodeFactory.createCode39(barcodeText, true);
            setBarcode(barcode);
        } else {
            try {
                Class factory = net.sourceforge.barbecue.BarcodeFactory.class;
                Method createMethod = factory.getMethod("create" + currentValue, new Class[]{"".getClass()});
                System.out.print("Method Generated : " + createMethod.toString());
                Object result = createMethod.invoke(null, new Object[]{barcodeText});
                System.out.print("Barcode Generated : " + result.toString());
                barcode = (Barcode) result;
                setBarcode(barcode);
            } catch (NoSuchMethodException e) {
                throw new RuntimeException(e.getMessage());
            } catch (IllegalAccessException e) {
                throw new RuntimeException(e.getMessage());
            } catch (java.lang.reflect.InvocationTargetException e) {
                throw new RuntimeException(e.getMessage());
            }
        }
    }

    public void run() {
        while (true) {
            assetListTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT"
                    + " item_code, item, supplier, invoice_no, debit::numeric(13,2) as total_cost_amount,"
                    + " (quantity_received - sub_store_receiving) as qty, (debit/quantity_received)::numeric(13,2) as unit_cost,"
                    + "  (select sum(receiving - issuing) from st_sub_stores where st_sub_stores.item_code = st_stock_cardex.item_code"
                    + "   and st_sub_stores.store_name ilike st_stock_cardex.store) as remaining_items, store FROM st_stock_cardex "
                    + "    WHERE item_code ilike 'cap%' and order_no is not null and debit-credit > 0.00 and "
                    + "    (select sum(receiving - issuing) from st_sub_stores where st_sub_stores.item_code = "
                    + "    st_stock_cardex.item_code and st_sub_stores.store_name ilike st_stock_cardex.store) > 0 ORDER BY 2"));
            try {

                Thread.currentThread().sleep(600000);
            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void refreshAssetList() {
        assetListTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT"
                + " item_code, item, supplier, invoice_no, debit::numeric(13,2) as total_cost_amount,"
                + " (quantity_received - sub_store_receiving) as qty, (debit/quantity_received)::numeric(13,2) as unit_cost,"
                + "  (select sum(receiving - issuing) from st_sub_stores where st_sub_stores.item_code = st_stock_cardex.item_code"
                + "   and st_sub_stores.store_name ilike st_stock_cardex.store) as remaining_items, store FROM st_stock_cardex "
                + "    WHERE item_code ilike 'cap%' and order_no is not null and debit-credit > 0.00 and "
                + "    (select sum(receiving - issuing) from st_sub_stores where st_sub_stores.item_code = "
                + "    st_stock_cardex.item_code and st_sub_stores.store_name ilike st_stock_cardex.store) > 0 ORDER BY 2"));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel assetDetailsPanel;
    private javax.swing.JDialog assetHolderSearchDialog;
    private javax.swing.JPanel assetHolderSearchPanel;
    private javax.swing.JScrollPane assetHolderSearchScrollPane;
    private javax.swing.JTable assetHolderSearchTable;
    private javax.swing.JTextField assetHolderTxt;
    private javax.swing.JTable assetListTbl;
    private javax.swing.JScrollPane assetListingJcrl;
    private javax.swing.JPanel assetListingPanel;
    private javax.swing.JComboBox assetLocationCmbx;
    private javax.swing.JPanel assetMainPanel;
    private javax.swing.JLabel assetMakeLbl;
    private javax.swing.JTextField assetMakeTxt;
    private javax.swing.JLabel assetNameLbl;
    private javax.swing.JTextField assetNameTxt;
    private javax.swing.JDialog assetSearchDialog;
    private javax.swing.JPanel assetSearchPanel;
    private javax.swing.JScrollPane assetSearchScrollPane;
    private javax.swing.JTable assetSearchTable;
    private javax.swing.JSeparator assetSeparator;
    private javax.swing.JTabbedPane assetTabbedPane;
    private javax.swing.JComboBox assetTypeCmbx;
    private javax.swing.JLabel assetTypeLbl;
    private javax.swing.JLabel assetValueLbl;
    private javax.swing.JTextField assetValueTxt;
    private javax.swing.JPanel barCodePanel;
    private javax.swing.JComboBox barcodeTypeCmbx;
    private javax.swing.JLabel barcodeTypeLbl;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton closeBtn1;
    private javax.swing.JComboBox countryofOriginCmbx;
    private javax.swing.JLabel countryofOriginLbl;
    private javax.swing.JLabel dateofPurchaseLbl;
    private com.afrisoftech.lib.DatePicker dateofPurchasePicker;
    private javax.swing.JComboBox departmentCmbx;
    private javax.swing.JLabel departmentLbl;
    private javax.swing.JButton depreciateAssetsBtn;
    private javax.swing.JComboBox depreciationAssetTypeCmbx;
    private javax.swing.JLabel depreciationAssetTypeLbl;
    private javax.swing.JComboBox depreciationCategoryCmbx;
    private javax.swing.JLabel depreciationCategoryLbl;
    private javax.swing.JButton depreciationCloseBtn;
    private com.afrisoftech.lib.DatePicker depreciationDatePicker;
    private javax.swing.JLabel depreciationDatePickerLbl;
    private javax.swing.JPanel depreciationParametersPanel;
    private javax.swing.JLabel depreciationRateLbl;
    private javax.swing.JTextField depreciationRateTxt;
    private javax.swing.JScrollPane depreciationScheduleJcrl;
    private javax.swing.JPanel depreciationSchedulePanel;
    private javax.swing.JTable depreciationScheduleTbl;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel invoiceNumberLbl;
    private javax.swing.JPanel invoiceNumberSearchPanel;
    private javax.swing.JPanel invoiceNumberSearchPanel1;
    private javax.swing.JTextField invoiceNumberTxt;
    private javax.swing.JLabel itemCodeLbl;
    private javax.swing.JTextField itemCodeTxt;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel572213;
    private javax.swing.JLabel jLabel602;
    private javax.swing.JLabel jLabel60221;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel6221;
    private javax.swing.JLabel jLabel6222;
    private javax.swing.JLabel jLabel6421;
    private javax.swing.JLabel jLabel6422;
    private javax.swing.JLabel jLabel642212;
    private javax.swing.JLabel jLabel661;
    private javax.swing.JLabel jLabel662;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JLabel lpoNumberLbl;
    private javax.swing.JTextField lpoNumberTxt;
    private javax.swing.JTextField maintenanceScheduleTxt;
    private javax.swing.JLabel manufacturerLbl;
    private javax.swing.JTextField manufacturerTxt;
    private javax.swing.JLabel modelNumberLbl;
    private javax.swing.JTextField modelNumberTxt;
    private javax.swing.JPanel otherAssetDetailsPanel;
    private javax.swing.JLabel quotationNumberLbl;
    private javax.swing.JTextField quotationNumberTxt;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton refreshFormBtn;
    private javax.swing.JButton registerAssetsBtn;
    private javax.swing.JTable registeredAssetListTbl;
    private javax.swing.JScrollPane registeredAssetListingJcrl;
    private javax.swing.JPanel registeredAssetListingPanel;
    private javax.swing.JButton registeredRefreshBtn;
    private javax.swing.JTextField registrationNumberTxt;
    private javax.swing.JButton removeAssetBtn;
    private javax.swing.JButton removeAssetBtn1;
    private javax.swing.JTextField searchAssetHolderTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField searchByTagNumberTxt;
    private javax.swing.JButton searchDialogDisposeBtn;
    private javax.swing.JButton searchDialogDisposeBtn1;
    private javax.swing.JLabel serialNumberLbl;
    private javax.swing.JTextField serialNumberTxt;
    private com.afrisoftech.lib.DatePicker serviceDatePicker;
    private javax.swing.JTextPane serviceProviderAddressTxt;
    private javax.swing.JTextField serviceProviderContactPersonTxt;
    private javax.swing.JTextField serviceProviderEmailTxt;
    private javax.swing.JTextField serviceProviderNameTxt;
    private javax.swing.JTextField serviceProviderTelephoneTxt;
    private javax.swing.JLabel storeNameLbl;
    private javax.swing.JTextField storeNameTxt;
    private javax.swing.JTextPane supplierAddressTxt;
    private javax.swing.JTextField supplierEmailTxt;
    private javax.swing.JTextField supplierLocationTxt;
    private javax.swing.JTextField supplierNameTxt;
    private javax.swing.JTextField supplierTelephoneTxt;
    private javax.swing.JLabel tagNumberLbl;
    private javax.swing.JTextField tagNumberTxt;
    private javax.swing.JTextField vehicleCarryingCapacityTxt;
    private javax.swing.JTextField vehicleEngineCapacityTxt;
    private javax.swing.JTextField vehicleEngineNumberTxt;
    private javax.swing.JTextField warrantyTxt;
    private javax.swing.JLabel yearofManufactureLbl;
    private javax.swing.JTextField yearofManufactureTxt;
    // End of variables declaration//GEN-END:variables
}
