/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.TableColumnTotal;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author System Partners
 */
public class ChiefApprovalIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form SuppliesGuyApprovalintfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    String lpo = null, supplier = null, prq_new = null;
    int rowselect = 0;
    String prq_no = null;

    public ChiefApprovalIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        ApprovalTblscr = new javax.swing.JScrollPane();
        ApprovalTbl = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        lpoTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        TenderTxt = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        SupplierTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TenderTxt1 = new javax.swing.JTextField();
        jLabel113 = new javax.swing.JLabel();
        lpoTxt1 = new javax.swing.JTextField();
        jLabel114 = new javax.swing.JLabel();
        lpoTxt2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Save = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chief_tbl = new com.afrisoftech.dbadmin.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chief_reject_tbl = new com.afrisoftech.dbadmin.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CHIEF PROCUREMENT OFFICER  APPROVAL ");
        setPreferredSize(new java.awt.Dimension(739, 413));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select LPO/LSO here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel7.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel7.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false and order_no is not null group by supplier,order_no  order by order_no"));
        ApprovalTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApprovalTblMouseClicked(evt);
            }
        });
        ApprovalTblscr.setViewportView(ApprovalTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel7.add(ApprovalTblscr, gridBagConstraints);

        jLabel3.setText("Search");
        jPanel7.add(jLabel3, new java.awt.GridBagConstraints());

        jTextField1.setForeground(new java.awt.Color(255, 51, 0));
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 102, 102), null, null));
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel7.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel111.setText("Agenda No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel111, gridBagConstraints);

        lpoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(lpoTxt, gridBagConstraints);

        jLabel1.setText("Requisitioning Dept");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        TenderTxt.setEditable(false);
        TenderTxt.setForeground(new java.awt.Color(0, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(TenderTxt, gridBagConstraints);

        jLabel112.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel112, gridBagConstraints);

        SupplierTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(SupplierTxt, gridBagConstraints);

        jLabel2.setText("Contract No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        TenderTxt1.setEditable(false);
        TenderTxt1.setForeground(new java.awt.Color(0, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(TenderTxt1, gridBagConstraints);

        jLabel113.setText("LPO/LSO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel113, gridBagConstraints);

        lpoTxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(lpoTxt1, gridBagConstraints);

        jLabel114.setText("LPO/LSO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel114, gridBagConstraints);

        lpoTxt2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(lpoTxt2, gridBagConstraints);
        jPanel1.add(jPanel2, new java.awt.GridBagConstraints());

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButton3.setText("View PRQs");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 100);
        jPanel6.add(jButton3, gridBagConstraints);

        jButton4.setText("View Contract Details");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 100);
        jPanel6.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        Save.setMnemonic('s');
        Save.setText("    Save    ");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(Save, gridBagConstraints);

        resetbtn.setText("Refresh");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(resetbtn, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(cancelbtn, gridBagConstraints);

        exitbtn.setMnemonic('c');
        exitbtn.setText("View Pending LPOs/LSOs");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(exitbtn, gridBagConstraints);

        jButton1.setMnemonic('r');
        jButton1.setText("Reject Item");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel3.add(jPanel4, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Items In the LPO/LSO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 51, 255)));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        chief_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date Of Award", "Type", "Item Code", "Item", "QTY", "Price/Item", "Total", "Approve Item"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chief_tbl.setGridColor(new java.awt.Color(204, 204, 255));
        //this.procurementPlanTbl.getColumnModel().getColumn(i).setCellEditor(new javax.swing.DefaultCellEditor((javax.swing.JComboBox)new com.afrisoftech.lib.DatePicker()));
        chief_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chief_tblMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chief_tblMouseReleased(evt);
            }
        });
        chief_tbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                chief_tblKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(chief_tbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane1, gridBagConstraints);

        jCheckBox1.setText("Tick All");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rejected Items In the LPO/LSO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        chief_reject_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date Of Award", "Type", "Item Code", "Item", "QTY", "Price/Item", "Total", "Approve Item"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chief_reject_tbl.setGridColor(new java.awt.Color(204, 204, 255));
        //this.procurementPlanTbl.getColumnModel().getColumn(i).setCellEditor(new javax.swing.DefaultCellEditor((javax.swing.JComboBox)new com.afrisoftech.lib.DatePicker()));
        chief_reject_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chief_reject_tblMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chief_reject_tblMouseReleased(evt);
            }
        });
        chief_reject_tbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                chief_reject_tblKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(chief_reject_tbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel3.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void PopulatereceivedItems() {
// v.removeAllElements();

        for (int k = 0; k < chief_tbl.getRowCount(); k++) {
            for (int r = 0; r < chief_tbl.getColumnCount(); r++) {
                chief_tbl.getModel().setValueAt(null, k, r);
            }
        }

        try {
            java.sql.Statement pstmtSupplier = connectDB.createStatement();

            try {

                int k = 0;
                java.sql.ResultSet rsetSupplier = pstmtSupplier.executeQuery("SELECT  supplier as supplier_name,"
                        + "(select summer from funsoft_link_grn (order_no,invoice_no,item,item_code)) as quantity_received,"
                        + " order_no as LPO_LSO_NO, delivery_note_no, invoice_no,item,store as receiving_store,item_code "
                        + " from st_stock_cardex where approved=false and supplies=false and (grn_no!='rejected' or grn_no is null) and chairperson=false and technical=false and invoice_no in "
                        + "(select invoice_no from st_stock_cardex where approved=false and (grn_no!='rejected' or grn_no is null) and supplies=false and chairperson=false and technical=false and "
                        + " order_no= '" + lpo + "') and "
                        + "order_no= '" + lpo + "' "
                        + " group by 5,1,2,3,4,6,7,8 having sum(debit-quantity_ordered) > 0 order by item");

                while (rsetSupplier.next()) {

                    // grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(3), k, 1);
                    chief_tbl.setValueAt(rsetSupplier.getObject(6), k, 2);
                    chief_tbl.setValueAt(false, k, 6);
                    chief_tbl.setValueAt(rsetSupplier.getObject(2), k, 4);
                    chief_tbl.setValueAt(rsetSupplier.getObject(4), k, 1);

                    String name = rsetSupplier.getString(6);
                    String correct_name = name;

                    if (correct_name.contains("'")) {
                        correct_name = name.substring(0, name.indexOf("'"));
                    } else if (!correct_name.contains("'")) {
                        correct_name = name;
                    }

                    java.sql.Statement pstmtSupplierDate = connectDB.createStatement();
                    java.sql.ResultSet rsetSupplierDate = pstmtSupplierDate.executeQuery(""
                            + "SELECT  date,sum(debit-quantity_ordered) as reversed_qty,price_per_item FROM st_stock_cardex  where "
                            + " approved=false and supplies=false and chairperson=false and (grn_no!='rejected' or grn_no is null) and technical=false and order_no='" + rsetSupplier.getObject(3) + "' "
                            + " and invoice_no='" + rsetSupplier.getObject(5) + "' and supplier ='" + rsetSupplier.getObject(1) + "' and item_code='" + rsetSupplier.getObject(8) + "' "
                            + " and item ilike'%" + correct_name + "%' and store ilike '" + rsetSupplier.getObject(7) + "' "
                            + "                             group by date,price_per_item ");

                    if (rsetSupplierDate.next()) {
                        chief_tbl.setValueAt(rsetSupplierDate.getObject(1), k, 0);

                        chief_tbl.setValueAt(rsetSupplierDate.getObject(3), k, 3);
                    }

                    java.sql.Statement pstmtdebit = connectDB.createStatement();
                    java.sql.ResultSet rsetdebit = pstmtdebit.executeQuery(""
                            + "SELECT  sum(debit-quantity_ordered) as reversed_qty FROM st_stock_cardex  where "
                            + " approved=false and supplies=false and chairperson=false and (grn_no!='rejected' or grn_no is null) and technical=false and order_no='" + rsetSupplier.getObject(3) + "' "
                            + " and invoice_no='" + rsetSupplier.getObject(5) + "' and supplier ='" + rsetSupplier.getObject(1) + "'  and item_code='" + rsetSupplier.getObject(8) + "' "
                            + " and item ilike'%" + correct_name + "%' and store ilike '" + rsetSupplier.getObject(7) + "' "
                            + "                            ");

                    if (rsetdebit.next()) {

                        chief_tbl.setValueAt(rsetdebit.getObject(1), k, 5);

                    }

                    k = k + 1;

                }
            } catch (Exception r) {
                r.printStackTrace();
            }

//            java.sql.PreparedStatement pstmtSuppliercode = connectDB.prepareStatement("SELECT code FROM st_suppliers WHERE supplier_name = '" + grnDetailsTable.getValueAt(grnDetailsTable.getSelectedRow(), 0) + "'");
//
//            java.sql.ResultSet rsetSuppliercode = pstmtSuppliercode.executeQuery();
//
//            while (rsetSuppliercode.next()) {
//                supplierCodeTxt.setText(rsetSuppliercode.getString(1));
//            }
        } catch (Exception y) {
            y.printStackTrace();
            System.out.println(y);
        }

    }

    private void refresh() {

        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false and order_no is not null group by supplier,order_no  order by order_no"));

    }
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        String users = null, user = null;
        String correct_name = null;
        Boolean check_update = false, check_activation = false;
        try {
            java.sql.Statement pst2v = connectDB.createStatement();
            java.sql.ResultSet rsv = pst2v.executeQuery("select current_user");
            if (rsv.next()) {
                users = rsv.getObject(1).toString();
                // Stock = rs.getObject(2).toString();
            }
            java.sql.Statement pst2v3 = connectDB.createStatement();
            java.sql.ResultSet rsv3 = pst2v3.executeQuery("select distinct concat(f_name,' ',l_name) as name from secure_menu_access where login_name='" + users + "'");
            if (rsv3.next()) {
                user = rsv3.getObject(1).toString();
                // Stock = rs.getObject(2).toString();
            }
            correct_name = user;

            if (correct_name.contains("'")) {
                correct_name = user.substring(0, user.indexOf("'"));
            } else if (!correct_name.contains("'")) {
                correct_name = user;
            }

            System.out.println("the user name is" + user);
        } catch (Exception userex) {
            System.out.println("user error is " + userex);
        }

        try {
            //connectDB.setAutoCommit(false);   

            if (Save.getText().equals("Save")) {
                for (int k = 0; k < chief_tbl.getRowCount(); k++) {
                    if (chief_tbl.getValueAt(k, 0) != null) {
                        if (Boolean.valueOf(chief_tbl.getValueAt(k, 10).toString()) == java.lang.Boolean.TRUE) {

                            String comment;
                            if (chief_tbl.getValueAt(k, 9) == null) {
                                comment = "";
                            } else {
                                comment = chief_tbl.getValueAt(k, 9).toString();
                            }

                            java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement(""
                                //    + "update st_orders set  aie_holder_approval=true, aie_holder='" + correct_name + "', aie_holder_date=now(), aie_holder_remark='" + comment + "' where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false  and approval_rejected is null  and order_no='" + lpo + "' and item ='" + chief_tbl.getModel().getValueAt(k, 2).toString() + "' and code='" + chief_tbl.getModel().getValueAt(k, 1).toString() + "'");
                                   + "update st_orders set  aie_holder_approval=true, aie_holder='" + correct_name + "', aie_holder_date=now(), aie_holder_remark='" + comment + "' where  order_no='" + lpo + "'  and code='" + chief_tbl.getModel().getValueAt(k, 1).toString() + "'");
                            //        java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE ac_ledger SET reconciled = true WHERE cheque_no ILIKE '" + grn2PayablesLinkingTable.getValueAt(i, 1).toString() + "' AND dealer ilike '" + supplierNameTxt.getText().toString() + "' and date = '" + grn2PayablesLinkingTable.getValueAt(i, 0).toString() + "' and transaction_no = '" + grn2PayablesLinkingTable.getValueAt(i, 4).toString() + "'");

                            System.out.println("update st_orders set  aie_holder_approval=true, aie_holder='" + correct_name + "', aie_holder_date=now(), aie_holder_remark='" + comment + "' where  order_no='" + lpo + "'  and code='" + chief_tbl.getModel().getValueAt(k, 1).toString() + "'");
                            
                            pstmt81212.executeUpdate();
                            check_update = true;
                        }
                    }
                }

                if (check_update == true) {
                    connectDB.setAutoCommit(false);

                    TenderTrack.TrackTable(connectDB, "aie_approval", com.afrisoftech.lib.UserName.getLoginName(connectDB) + "-" + com.afrisoftech.lib.UserName.getServerDate(connectDB), TenderTxt.getText());
                    Double totalLPOamount = TableColumnTotal.getTableColumnTotal(chief_tbl, 7);
                   //skip the Chief approval

                    if (totalLPOamount < getLimitCSO()) {

                        java.sql.PreparedStatement pr_order = connectDB.prepareStatement("UPDATE st_orders SET chief_approval=TRUE WHERE order_no='" + lpoTxt1.getText() + "' AND   quotation_no='" + TenderTxt.getText() + "' AND supplier ='" + SupplierTxt.getText() + "'  ");
                        pr_order.executeUpdate();
                    }

                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    javax.swing.JOptionPane.showMessageDialog(this, " Approval Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    cancelbtn.doClick();
                    //ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false  group by supplier,order_no  order by order_no"));
                    refresh();
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Check Your Entries", "ERROR MESSAGE!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    connectDB.setAutoCommit(false);
                    connectDB.rollback();
                    connectDB.setAutoCommit(true);
                }
                // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, lpoNumberTxt.getText(), commentsTxt.getText(), "EXPENDITURE_EXAMINATION", "EXPENDITURE_VOTEBOOK");
            } //////activating a rejected item
            else if (Save.getText().equals("Activate Item(s)")) {
                for (int j = 0; j < chief_reject_tbl.getRowCount(); j++) {
                    if (chief_reject_tbl.getValueAt(j, 0) != null) {
                        if (Boolean.valueOf(chief_reject_tbl.getValueAt(j, 10).toString()) == java.lang.Boolean.TRUE) {

                            String comment;
//                if(aie_reject_tbl.getValueAt(j, 9)==null ){
//                     comment="";
//                }else{
//                    comment=aie_reject_tbl.getValueAt(j, 9).toString();
//                }
                            comment = null;

                            java.sql.PreparedStatement pstmt812123 = connectDB.prepareStatement("update st_orders set approval_rejected=null  where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false  and approval_rejected ilike '%chief%' and quotation_no='" + TenderTxt.getText() + "' and order_no='" + lpo + "' and item ='" + chief_reject_tbl.getModel().getValueAt(j, 2).toString() + "' and code='" + chief_reject_tbl.getModel().getValueAt(j, 1).toString() + "'");
                            //        java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE ac_ledger SET reconciled = true WHERE cheque_no ILIKE '" + grn2PayablesLinkingTable.getValueAt(i, 1).toString() + "' AND dealer ilike '" + supplierNameTxt.getText().toString() + "' and date = '" + grn2PayablesLinkingTable.getValueAt(i, 0).toString() + "' and transaction_no = '" + grn2PayablesLinkingTable.getValueAt(i, 4).toString() + "'");

                            pstmt812123.executeUpdate();
                            check_activation = true;
                        }
                    }
                }

                if (check_activation == true) {
                    connectDB.setAutoCommit(false);
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    javax.swing.JOptionPane.showMessageDialog(this, "Activation Done  Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    cancelbtn.doClick();
                    ClearTable.clearthisTable(chief_reject_tbl);
                    //ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false  group by supplier,order_no  order by order_no"));
                    refresh();
                    Save.setText("Save");
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Check Your Entries", "ERROR MESSAGE!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    connectDB.setAutoCommit(false);
                    connectDB.rollback();
                    connectDB.setAutoCommit(true);
                }

            }

            ////
        } catch (SQLException ex) {
            Logger.getLogger(ChiefApprovalIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveActionPerformed
    private Double getLimitCSO() {
        Double limit = 0.0;
        try {
            PreparedStatement pst = connectDB.prepareStatement("SELECT distinct csolimit from st_stock_control");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {
                limit = rset.getDouble(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderingTenderItemsintfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        return limit;
    }
    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        //ADDING ITEMS
        cancelbtn.doClick();
        //ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false  group by supplier,order_no  order by order_no"));
        refresh();
    }//GEN-LAST:event_resetbtnActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        SupplierTxt.setText(null);
        lpoTxt.setText(null);

        TenderTxt.setText(null);
        TenderTxt1.setText(null);

        for (int k = 0; k < ApprovalTbl.getRowCount(); k++) {
            for (int r = 0; r < ApprovalTbl.getColumnCount(); r++) {
                ApprovalTbl.getModel().setValueAt(null, k, r);
            }
        }

        for (int k = 0; k < chief_tbl.getRowCount(); k++) {
            for (int r = 0; r < chief_tbl.getColumnCount(); r++) {
                chief_tbl.getModel().setValueAt(null, k, r);
            }
        }
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed

    }//GEN-LAST:event_exitbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String users = null, user = null;
        String correct_name = null;
        Boolean check_update = false;
        try {
            java.sql.Statement pst2v = connectDB.createStatement();
            java.sql.ResultSet rsv = pst2v.executeQuery("select current_user");
            if (rsv.next()) {
                users = rsv.getObject(1).toString();
                // Stock = rs.getObject(2).toString();
            }
            java.sql.Statement pst2v3 = connectDB.createStatement();
            java.sql.ResultSet rsv3 = pst2v3.executeQuery("select distinct concat(f_name,' ',l_name) as name from secure_menu_access where login_name='" + users + "'");
            if (rsv3.next()) {
                user = rsv3.getObject(1).toString();
                // Stock = rs.getObject(2).toString();
            }
            correct_name = user;

            if (correct_name.contains("'")) {
                correct_name = user.substring(0, user.indexOf("'"));
            } else if (!correct_name.contains("'")) {
                correct_name = user;
            }

            System.out.println("the user name is" + user);
        } catch (Exception userex) {
            System.out.println("user error is " + userex);
        }

        try {
            connectDB.setAutoCommit(false);
            for (int k = 0; k < chief_tbl.getRowCount(); k++) {
                if (chief_tbl.getValueAt(k, 0) != null) {
                    if (Boolean.valueOf(chief_tbl.getModel().getValueAt(k, 10).toString()) == java.lang.Boolean.TRUE) {

                        String comment;
                        if (chief_tbl.getValueAt(k, 9) == null) {
                            comment = "";
                        } else {
                            comment = chief_tbl.getValueAt(k, 9).toString();
                        }

                        java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement(""
                                + "update st_orders set aie_holder_approval=true,aie_holder='" + correct_name + "',aie_holder_date=now(),aie_rejected_remark='" + comment + "',approval_rejected='aie' where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false   and quotation_no='" + TenderTxt.getText() + "' and order_no='" + lpo + "' and item ='" + chief_tbl.getModel().getValueAt(k, 2).toString() + "' and code='" + chief_tbl.getModel().getValueAt(k, 1).toString() + "'");
                        //        java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE ac_ledger SET reconciled = true WHERE cheque_no ILIKE '" + grn2PayablesLinkingTable.getValueAt(i, 1).toString() + "' AND dealer ilike '" + supplierNameTxt.getText().toString() + "' and date = '" + grn2PayablesLinkingTable.getValueAt(i, 0).toString() + "' and transaction_no = '" + grn2PayablesLinkingTable.getValueAt(i, 4).toString() + "'");

                        pstmt81212.executeUpdate();
                        check_update = true;
                    }
                }
            }

            if (check_update == true) {
                connectDB.setAutoCommit(false);
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Rejection Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                cancelbtn.doClick();
                //ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false  group by supplier,order_no  order by order_no"));
                refresh();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Check Your Entries", "ERROR MESSAGE!", javax.swing.JOptionPane.ERROR_MESSAGE);
                connectDB.setAutoCommit(false);
                connectDB.rollback();
                connectDB.setAutoCommit(true);
            }
            // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, lpoNumberTxt.getText(), commentsTxt.getText(), "EXPENDITURE_EXAMINATION", "EXPENDITURE_VOTEBOOK");

        } catch (SQLException ex) {
            Logger.getLogger(ChiefApprovalIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chief_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chief_tblMouseClicked
        Save.setText("Save");
//        if (grn2PayablesLinkingTable.getSelectedColumn() == 9) // jCheckBox2.setSelected(false);
//        {
//            linkGRNToCreditorBtn.setEnabled(false);
//        }
//        {
//            Double totalAmnt = 0.0, qtytotal = 0.0;
//            if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.TRUE) {
//                totalAmnt = 0.0;
//                qtytotal = 0.0;
//                if (v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
//                    //  v.remove(grn2PayablesLinkingTable.getSelectedRow());
//                } else if (!v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
//                    v.add(grn2PayablesLinkingTable.getSelectedRow());
//                }
//            } else if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.FALSE) {
//                totalAmnt = 0.0;
//                qtytotal = 0.0;
//                v.remove(grn2PayablesLinkingTable.getSelectedRow());
//            }
//
//            for (int i = 0; i < v.size(); i++) {
//                Double total = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 7).toString());
//                totalAmnt = totalAmnt + total;
//                Double totals = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 6).toString());
//                qtytotal = qtytotal + totals;
//
//            }
//
//            System.out.println(totalAmnt);
//            totalGrnAmountTxt.setText(totalAmnt.toString());
//            qtyTtField.setText(qtytotal.toString());
//
//        }

    }//GEN-LAST:event_chief_tblMouseClicked

    private void chief_tblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chief_tblMouseReleased
//        if (grn2PayablesLinkingTable.getSelectedColumn() == 1) {
//
//            if (grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1) != null) {
//
//                java.awt.Point point = this.lpoNumberTxt.getLocationOnScreen();
//
//                jSearchDialog2.setSize(900, 200);
//
//                jSearchDialog2.setLocation(point);
//
//                jSearchDialog2.setVisible(true);
//
//                orderNumberTxt.grabFocus();
//
//                orderNumberTxt.setText(grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1).toString());
//            }
//        }        // TODO add your handling code here:
    }//GEN-LAST:event_chief_tblMouseReleased

    private void chief_tblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chief_tblKeyReleased
        /*     double resFloat = 0.00;
         //  double totalSum = 0.00;
         double floatTotal = java.lang.Double.parseDouble(jTextField1.getText());

         if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {
         double amtToalloc = java.lang.Double.parseDouble(jTextField2.getText());
         double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());

         double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
         double balance = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());

         if (floatCol3 <= amtToalloc && amtToalloc >= 0){

         double resVal =floatCol2 - floatCol3;

         jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
         } else
         if (floatCol3 > amtToalloc && amtToalloc > 0){
         javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the amount to allocate","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         }

         this.tableModelTableChanged();
         }else
         if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) == null) {
         jTable1.setValueAt(new java.lang.Double(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()), jTable1.getSelectedRow(), 5);
         this.tableModelTableChanged();
         }
         */
        // Add your handling code here:
    }//GEN-LAST:event_chief_tblKeyReleased

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:

    }//GEN-LAST:event_formInternalFrameOpened

    private void ApprovalTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApprovalTblMouseClicked
        try {
            SupplierTxt.setText(null);
            lpoTxt.setText(null);

            TenderTxt.setText(null);
            TenderTxt1.setText(null);
            connectDB.setAutoCommit(false);
            ClearTable.clearthisTable(chief_tbl);

            //////Fill the PR table and other details
            rowselect = ApprovalTbl.getSelectedRow();

            lpo = ApprovalTbl.getValueAt(rowselect, 0).toString();
            supplier = ApprovalTbl.getValueAt(rowselect, 1).toString();
            SupplierTxt.setText(supplier);
            lpoTxt1.setText(lpo);

            java.sql.Statement stmtss = connectDB.createStatement();
            java.sql.ResultSet rsets = stmtss.executeQuery("SELECT distinct ordering_store,quotation_no,requisition_no FROM st_orders WHERE order_no ='" + lpo + "' and  dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false");

            while (rsets.next()) {
                TenderTxt.setText(rsets.getString(2));
                TenderTxt1.setText(rsets.getString(1));
                // prq_no=rsets.getString(3);

            }

            /////getting the agenda FOR AWARD OF TENDER
            java.sql.Statement agenda = connectDB.createStatement();
            java.sql.ResultSet rset3 = agenda.executeQuery("SELECT distinct agenda_no from st_recommendation where quotation_no ILIKE '" + TenderTxt.getText() + "' and agenda_no IS NOT NULL");

            while (rset3.next()) {

                lpoTxt.setText(rset3.getString(1));;

            }

            /////getting the PRQ
//            java.sql.Statement stmtss1 = connectDB.createStatement();
//            java.sql.ResultSet rsets1 = stmtss1.executeQuery("SELECT distinct q.irq_no  FROM st_orders o,st_item_to_quote q where o.order_no='" + lpo + "' and  q.tender_no='" + TenderTxt.getText() + "' and q.tender_no=o.quotation_no and o.item=q.item_description");
//
//            while (rsets1.next()) {
//
//                prq_no = rsets1.getString(1);
//
//            }
//            prq_new = prq_no.substring(0, prq_no.indexOf("-"));
//
//            System.out.println("THE PR IS " + prq_new);
            chief_tbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct o.date_due,o.code,o.item,o.item_strength,o.units, o.quantity, o.unit_price,o.net_value,chief_remark  Chief_Remark,null Remarks,false Approve  FROM st_orders o,st_item_to_quote q where o.order_no='" + lpo + "' and  q.tender_no='" + TenderTxt.getText() + "' and o.dispatch=false and o.ordered=false and o.chief_approval=true and o.aie_holder_approval=false and o.sad_approval=false  and o.miu_approval=false and o.approval_rejected is null"));
            //aie_reject_tbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT o.date_due,o.code,o.item,o.item_strength,o.units, o.quantity, o.unit_price,o.net_value,chief_remark  Chief_Rejection,null Remarks,false Activate  FROM st_orders o,st_item_to_quote q where o.order_no='"+lpo+"' and  q.tender_no='"+TenderTxt.getText()+"' and o.dispatch=false and o.ordered=false and o.chief_approval=true and o.aie_holder_approval=false and o.sad_approval=false  and o.miu_approval=false and o.approval_rejected='chief'"));
            chief_reject_tbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct o.date_due,o.code,o.item,o.item_strength,o.units, o.quantity, o.unit_price,o.net_value,chief_rejected_remark  Chief_Rejection,null Remarks,false Activate  FROM st_orders o,st_item_to_quote q where o.order_no='" + lpo + "' and  q.tender_no ilike '" + TenderTxt.getText() + "' and  o.approval_rejected='chief' and o.chief_approval=true and o.aie_holder_approval=false"));
            connectDB.commit();
            connectDB.setAutoCommit(true);

            //PopulatereceivedItems();
        } catch (SQLException ex) {
            Logger.getLogger(AIEOffApprovalIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ApprovalTblMouseClicked

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        ////
        if (jTextField1.getCaretPosition() > 3) {
            // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' and (order_no ilike '%"+jTextField1.getText()+"%' OR  supplier ILIKE '%"+jTextField1.getText()+"%') group by supplier,order_no  order by supplier_name"));
            ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false  and  (order_no ilike '%" + jTextField1.getText() + "%' OR  supplier ILIKE '%" + jTextField1.getText() + "%')  group by supplier,order_no  order by supplier "));
            //ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false and order_no is not null group by supplier,order_no  order by order_no"));
        } else if (jTextField1.getCaretPosition() == 0) {

            ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_orders st where dispatch=false and ordered=false and chief_approval=true and aie_holder_approval=false and sad_approval=false  and miu_approval=false   group by supplier,order_no  order by supplier"));
        }


    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.hospinventory.mtrhreports.PurchaseReqFormMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.PurchaseReqFormMtrhPdf();
        policy.PurchaseReqFormMtrhPdf(connectDB, "", prq_new);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void chief_reject_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chief_reject_tblMouseClicked
        // TODO add your handling code here:
        Save.setText("Activate Item(s)");

    }//GEN-LAST:event_chief_reject_tblMouseClicked

    private void chief_reject_tblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chief_reject_tblMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_chief_reject_tblMouseReleased

    private void chief_reject_tblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chief_reject_tblKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_chief_reject_tblKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.hospinventory.mtrhreports.TendersReceivedMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.TendersReceivedMtrhPdf();

        policy.TendersReceivedMtrhPdf(connectDB, TenderTxt.getText(), SupplierTxt.getText());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < chief_tbl.getRowCount(); i++) {
            if (jCheckBox1.isSelected()) {
                chief_tbl.setValueAt(true, i, 10);
                jCheckBox1.setText("Un-Tick All");
            } else {
                chief_tbl.setValueAt(false, i, 10);
                jCheckBox1.setText("Tick All");
            }
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ApprovalTbl;
    private javax.swing.JScrollPane ApprovalTblscr;
    private javax.swing.JButton Save;
    private javax.swing.JTextField SupplierTxt;
    private javax.swing.JTextField TenderTxt;
    private javax.swing.JTextField TenderTxt1;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JTable chief_reject_tbl;
    private javax.swing.JTable chief_tbl;
    public static javax.swing.JButton exitbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField lpoTxt;
    private javax.swing.JTextField lpoTxt1;
    private javax.swing.JTextField lpoTxt2;
    private javax.swing.JButton resetbtn;
    // End of variables declaration//GEN-END:variables
}
