/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author System Partners
 */
    
public class StockRecIntFr extends javax.swing.JInternalFrame {

    /**
     * Creates new form StockAnalysisIntFr
     */
    java.sql.Connection connectDB = null;
    com.afrisoftech.lib.DBObject dbObject;
    public StockRecIntFr(java.sql.Connection connDb) {

        dbObject = new com.afrisoftech.lib.DBObject();
        connectDB = connDb;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        storeCmbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        reconcileDtpckr = new com.afrisoftech.lib.DatePicker();
        centralStorerbtn = new javax.swing.JRadioButton();
        subStorebtn = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        storeGLtxt = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Stock Reconciliation");
        setToolTipText("");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Sub store here"));
        jPanel1.setAutoscrolls(true);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(" Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        storeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select stores from store_allocation where user_name = current_user"));
        storeCmbx.setEnabled(false);
        storeCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(storeCmbx, gridBagConstraints);

        jLabel2.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        reconcileDtpckr.setDate(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(reconcileDtpckr, gridBagConstraints);

        centralStorerbtn.setText("Central Store");
        centralStorerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centralStorerbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(centralStorerbtn, gridBagConstraints);

        subStorebtn.setText("Sub Store");
        subStorebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subStorebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(subStorebtn, gridBagConstraints);

        jLabel5.setText("INVENTORY CODE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        storeGLtxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        storeGLtxt.setText(com.afrisoftech.lib.GetItemInfo.getStoreMainGL(storeCmbx.getSelectedItem().toString(), connectDB));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(storeGLtxt, gridBagConstraints);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Diff");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jRadioButton1, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Expired");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jRadioButton2, gridBagConstraints);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Damaged");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jRadioButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter items & their balances"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('O');
        jButton1.setText("Save");
        jButton1.setToolTipText("click to store data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        jButton5.setMnemonic('r');
        jButton5.setText("Remove Row");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jButton5, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("click to clear fields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click to close");
        jButton4.setSelected(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void storeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeCmbxActionPerformed

       
        /*    crset1.setCommand("select distinct item_description FROM receive_requisation WHERE cost_center = '"+jComboBox1.getSelectedItem()+"' AND issiued = false");
        crset1.setConnectionSource(pConnDB);

        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel (crset1, "item_description", null, null, null));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Item description");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
        });

        */
        // Add your handling code here:
    }//GEN-LAST:event_storeCmbxActionPerformed

    private void centralStorerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centralStorerbtnActionPerformed
        //  jComboBox1.setM

//        if(!jButton1.isEnabled())
//        jButton1.setEnabled(true);

        storeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select stores from store_allocation where user_name = current_user and type ilike 'stock recon%'"));
        storeCmbx.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeCmbxActionPerformed(evt);
            }
        });
        // Add your handling code here:
    }//GEN-LAST:event_centralStorerbtnActionPerformed

    private void subStorebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subStorebtnActionPerformed
//        if(!jButton1.isEnabled())
//        jButton1.setEnabled(true);

        storeCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select stores from store_allocation where user_name = current_user"));

        //jComboBox1.setSelectedIndex(1);
        // com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select stores from store_allocation where user_name = current_user")
        storeCmbx.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeCmbxActionPerformed(evt);
            }
        });     // Add your handling code here:
    }//GEN-LAST:event_subStorebtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try{
           String transNo = null,user=null; 
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst = ps11.executeQuery("select nextval('transaction_no_seq'),current_user");
                while (rst.next()) {
                    rst.getObject(1).toString();

                    transNo = rst.getObject(1).toString();
                    user = rst.getObject(2).toString();
                }
          for (int i = 0; i < jTable1.getRowCount(); i++) {
              if(Boolean.parseBoolean(jTable1.getValueAt(i, 9).toString())==true){
            String actCode = null;
            String accountCode = null;
            String accountCoded =null;
            String glTyped =null,Stock=null;
            
                  double pkge = 0;
                     double price = 0.00;    
                        double quantity = Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString());
                        double amount=0.00;
                            java.sql.Statement pst21r = connectDB.createStatement();
                               
                                java.sql.ResultSet rstrs = pst21r.executeQuery("SELECT packaging FROM stockitem st WHERE st.item_code = '" + jTable1.getValueAt(i, 0).toString() + "'");
                                while (rstrs.next()) {
                                    pkge = rstrs.getDouble(1);
                                }
                  
                  
                   java.sql.Statement pstmt6 = connectDB.createStatement();
                            java.sql.ResultSet rs6 = pstmt6.executeQuery("select item_code,buying_price,strength FROM stockitem where item_code ilike '" + jTable1.getValueAt(i, 0) + "'");
                            while (rs6.next()) {
                                
                                //  comp = rs6.getDouble(2);
                                if (pkge == 1) {
                                    price = rs6.getDouble(2);
                                } else {
                                    price = rs6.getDouble(2) / pkge;
                                }
                               
                            }
                             amount=quantity*price;
//                  java.sql.Statement pst1i = connectDB.createStatement();
//                java.sql.ResultSet rs1i = pst1i.executeQuery("select code,activity from pb_activity where activity_category ILIKE 'GRN'");
//                while (rs1i.next()) {
//                    accountCoded = rs1i.getObject(1).toString();
//                    glTyped = rs1i.getObject(2).toString();
//                }
                java.sql.Statement pst2 = connectDB.createStatement();
                java.sql.ResultSet rs = pst2.executeQuery("select code,activity from pb_activity where department='INV'");
                while (rs.next()) {
//                    actCode = rs.getObject(1).toString();
//                    Stock = rs.getObject(2).toString();
                     accountCoded = rs.getObject(1).toString();
                    glTyped = rs.getObject(2).toString();
                }
                  
                 
                             java.sql.PreparedStatement pstmtCardex = connectDB.prepareStatement("insert into st_stock_cardex values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                    pstmtCardex.setString(1, null);
                                        pstmtCardex.setObject(3, jTable1.getValueAt(i, 1) + " " + jTable1.getValueAt(i, 2));
                                        pstmtCardex.setString(2, storeCmbx.getSelectedItem().toString());
                                        pstmtCardex.setDate(4, null);
                                        pstmtCardex.setDouble(11, (quantity * -1));
                                        pstmtCardex.setDouble(6, price);
                                        pstmtCardex.setObject(7,jTable1.getValueAt(i, 3));
                                        pstmtCardex.setObject(8, "");
                                        pstmtCardex.setObject(9, null);
                                        pstmtCardex.setString(10, null);
                                        if(quantity<0){
                                           pstmtCardex.setDouble(5, 0-(price*quantity));
                                           pstmtCardex.setDouble(21, 0.00);
                                           pstmtCardex.setDouble(22, 0-(price*quantity));
                                        }else{
                                           pstmtCardex.setDouble(5, 0.00);
                                           pstmtCardex.setDouble(21, price*quantity);
                                           pstmtCardex.setDouble(22, 0.00);
                                        }
                                        
                                        pstmtCardex.setDouble(12, 0.00);
                                        pstmtCardex.setDouble(13, 0.00);
                                        pstmtCardex.setString(14, "-");
                                        pstmtCardex.setString(15, "-");
                                        pstmtCardex.setString(16, "");
                                        pstmtCardex.setString(17, null);
                                        pstmtCardex.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reconcileDtpckr.getDate()));
                                        pstmtCardex.setString(19, storeCmbx.getSelectedItem().toString());
                                        //pstmtCardex.setString(20, "Stock_System_Balance_At:"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(reconcileDtpckr.getDate()));
                                        pstmtCardex.setString(20, "StockBalance");
                                        
                                        
                                        pstmtCardex.setString(23, storeGLtxt.getText());
                                        pstmtCardex.setString(24, "");
                                        pstmtCardex.setString(25, storeCmbx.getSelectedItem().toString());
                                        pstmtCardex.setString(26, transNo);
                                        pstmtCardex.setDouble(27, 0.00);
                                        pstmtCardex.setString(28, user);
                                        pstmtCardex.setBoolean(29, false);
                                        pstmtCardex.setObject(30, 0.00);
                                        pstmtCardex.setObject(31, null);
                                        pstmtCardex.setObject(32, jTable1.getValueAt(i, 0));
                                        pstmtCardex.setObject(33, "");
                                        pstmtCardex.setObject(34, "");
                                        pstmtCardex.executeUpdate();

                                        
                                        
                java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                pstmt1q1.setObject(1, accountCoded);
                pstmt1q1.setString(2, glTyped);
                pstmt1q1.setString(3, "");
                pstmt1q1.setString(4, "");
                pstmt1q1.setString(6, "");
                pstmt1q1.setString(5, "Stock count");
                pstmt1q1.setString(7, "");
                pstmt1q1.setString(8, "");
                pstmt1q1.setString(9, "");
                pstmt1q1.setString(10, "");
                pstmt1q1.setString(11, "");
                pstmt1q1.setString(12, "");
                pstmt1q1.setString(13, "");
                pstmt1q1.setString(14, glTyped);
                pstmt1q1.setString(15, "stock count");
                if(quantity<0){
                    pstmt1q1.setDouble(17, 0.00);
                    pstmt1q1.setDouble(16, 0-price*quantity);
                }else{
                    pstmt1q1.setDouble(17, price*quantity);
                    pstmt1q1.setDouble(16, 0.00);
                }
                 //price*quantity
                pstmt1q1.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reconcileDtpckr.getDate()));
                pstmt1q1.setString(19, transNo);
                pstmt1q1.setBoolean(20, false);
                pstmt1q1.setBoolean(21, false);
                pstmt1q1.setBoolean(22, false);
                pstmt1q1.setString(23, user);
                pstmt1q1.setString(24, "");
                pstmt1q1.setString(25, "");
                pstmt1q1.setTimestamp(26, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                pstmt1q1.executeUpdate();

                 java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("update st_stock_analysis set stock_rec=true where item_code='"+ jTable1.getValueAt(i, 0).toString()+"' and store='"+storeCmbx.getSelectedItem().toString()+"' and date::date='"+reconcileDtpckr.getDate()+"'");
                    pstmt31.executeUpdate();            
              }
          }
          javax.swing.JOptionPane.showMessageDialog(this, "Data Saved Successfully", "Information message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
      jButton3.doClick();
       }catch(Exception r){
           r.printStackTrace();
       }
      

        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());

            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        this.storeCmbx.setSelectedItem(null);
        //  jComboBox11.setSelectedItem(null); // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
                if(jRadioButton2.isSelected()==true){
                    if(storeCmbx.getSelectedItem()==null){
                     javax.swing.JOptionPane.showMessageDialog(null, "Please confirm if your account has been allocated a store.");
                      }else if(reconcileDtpckr.getDate()==null){
                         javax.swing.JOptionPane.showMessageDialog(null, "You need to first select the date on which the physical count took place");
                       }else{
                                           for (int k = 0; k < jTable1.getRowCount(); k++) {
                                            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                                                jTable1.getModel().setValueAt(null, k, r);
                                                 }
                                            }
                          //set model
      jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select transaction_no,description,product_code,units\n" +
",(select qty from st_stock_counts a where condition='System Balance' and a.transaction_no=b.transaction_no )as system_balance ,\n" +
"(select qty from st_stock_counts a where condition='Salable' and a.transaction_no=b.transaction_no )as salable ,\n" +
"(select qty from st_stock_counts a where condition='Damaged' and a.transaction_no=b.transaction_no )as Damaged ,\n" +
"qty as expired,debit as expired_value,''as expiry_reason,false as tick from st_stock_counts b where condition='Expired' and input_date::date = '"+ reconcileDtpckr.getDate()+"' and department='"+storeCmbx.getSelectedItem().toString()+"'"));           
                          
                      }
        }else{
             for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
         if(jRadioButton3.isSelected()==true){
                    if(storeCmbx.getSelectedItem()==null){
                     javax.swing.JOptionPane.showMessageDialog(null, "Please confirm if your account has been allocated a store.");
                      }else if(reconcileDtpckr.getDate()==null){
                         javax.swing.JOptionPane.showMessageDialog(null, "You need to first select the date on which the physical count took place");
                       }else{
                                           for (int k = 0; k < jTable1.getRowCount(); k++) {
                                            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                                                jTable1.getModel().setValueAt(null, k, r);
                                                 }
                                            }
                          //set model
      jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select transaction_no,description,product_code,units\n" +
",(select qty from st_stock_counts a where condition='System Balance' and a.transaction_no=b.transaction_no )as system_balance ,\n" +
"(select qty from st_stock_counts a where condition='Salable' and a.transaction_no=b.transaction_no )as salable ,\n" +
"(select qty from st_stock_counts a where condition='Expired' and a.transaction_no=b.transaction_no )as Expired ,\n" +
"qty as Damaged,debit as Damaged_value,''as Damaged_reason,false as tick from st_stock_counts b\n" +
"where condition='Damaged' and input_date::date = '"+ reconcileDtpckr.getDate()+"' and department='"+storeCmbx.getSelectedItem().toString()+"'"));           
                          
                      }
        }else{
             for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
          if(jRadioButton1.isSelected()==true){
                    if(storeCmbx.getSelectedItem()==null){
                     javax.swing.JOptionPane.showMessageDialog(null, "Please confirm if your account has been allocated a store.");
                      }else if(reconcileDtpckr.getDate()==null){
                         javax.swing.JOptionPane.showMessageDialog(null, "You need to first select the date on which the physical count took place");
                       }else{
                                           for (int k = 0; k < jTable1.getRowCount(); k++) {
                                            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                                                jTable1.getModel().setValueAt(null, k, r);
                                                 }
                                            }
                          //set model
      jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct transaction_no,description,product_code,units,\n" +
"(select sum(qty) from st_stock_counts a where condition='System Balance' and a.transaction_no=b.transaction_no) as System_balance,\n" +
"(select sum(qty) from st_stock_counts a where condition!='System Balance' and a.transaction_no=b.transaction_no) as Count,\n" +
"(select sum(qty) from st_stock_counts a where condition='System Balance' and a.transaction_no=b.transaction_no)-\n" +
"(select sum(qty) from st_stock_counts a where condition!='System Balance' and a.transaction_no=b.transaction_no) as diff,\n" +
"''as Diff_reason,false as tick from st_stock_counts b\n" +
"where input_date::date = '"+ reconcileDtpckr.getDate()+"' and department='"+storeCmbx.getSelectedItem().toString()+"' and " +
"((select sum(qty) from st_stock_counts a where condition='System Balance' and a.transaction_no=b.transaction_no)-\n" +
"(select sum(qty) from st_stock_counts a where condition!='System Balance' and a.transaction_no=b.transaction_no))>0"));           
                          
                      }
        }else{
             for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton centralStorerbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.afrisoftech.lib.DatePicker reconcileDtpckr;
    private javax.swing.JComboBox storeCmbx;
    private javax.swing.JTextField storeGLtxt;
    private javax.swing.JRadioButton subStorebtn;
    // End of variables declaration//GEN-END:variables
}
