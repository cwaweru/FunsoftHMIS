/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.TableModel;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.ComboBoxModel;
import com.afrisoftech.lib.TableColumnTotal;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.*;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class SSOTechEvaluation extends javax.swing.JInternalFrame {

    /**
     * Creates new form SSOTechEvaluation
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    Vector v = new Vector();
    java.lang.String supp = null;
    private double total;
    private double percent;
    private String evaluation_dtls = null;
    private double counter;

    public SSOTechEvaluation(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
        TableModel.TableGroupedBooleanColumn(bidderTbl, 1);
//        jLabel1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchtendert = new javax.swing.JDialog();
        tenderrecordspnlt = new javax.swing.JPanel();
        tenderrecordstxtt = new javax.swing.JTextField();
        tenderrecordsspnlt = new javax.swing.JScrollPane();
        tenderrecordstblt = new com.afrisoftech.dbadmin.JTable();
        closebtnt = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ReportHeaderPane = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel45 = new javax.swing.JPanel();
        tenderNoTxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        thresholdspinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        itemsCmbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        GeneralKeyTxtAreaPane = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        criteriaTbl = new com.afrisoftech.dbadmin.JTable()
        ;
        jPanel6 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bidderTbl = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel25 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        rmvItemsbtn = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        searchtendert.setModal(true);
        searchtendert.setUndecorated(true);
        searchtendert.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnlt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnlt.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxtt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxttCaretUpdate(evt);
            }
        });
        tenderrecordstxtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnlt.add(tenderrecordstxtt, gridBagConstraints);

        tenderrecordstblt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstblt.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstblt.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstblt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbltMouseClicked(evt);
            }
        });
        tenderrecordsspnlt.setViewportView(tenderrecordstblt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnlt.add(tenderrecordsspnlt, gridBagConstraints);

        closebtnt.setText("Close");
        closebtnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtntActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnlt.add(closebtnt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtendert.getContentPane().add(tenderrecordspnlt, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(1076, 304));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        ReportHeaderPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        ReportHeaderPane.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel21.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel21, gridBagConstraints);

        jPanel45.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel45.setLayout(new java.awt.GridBagLayout());

        tenderNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel45.add(tenderNoTxt, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel45.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
        jPanel2.add(jPanel45, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        thresholdspinner.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        thresholdspinner.setModel(new javax.swing.SpinnerNumberModel(100, 1, 100, 1));
        thresholdspinner.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Threshold For Technical "));
        thresholdspinner.setEnabled(false);
        thresholdspinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thresholdspinnerStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 300);
        jPanel5.add(thresholdspinner, gridBagConstraints);

        jLabel4.setText("Passmark");
        jLabel4.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel5, gridBagConstraints);

        itemsCmbx.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        itemsCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        itemsCmbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemsCmbxItemStateChanged(evt);
            }
        });
        itemsCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
        jPanel2.add(itemsCmbx, gridBagConstraints);

        jLabel2.setText("Item Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("*Item Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel3, gridBagConstraints);

        jComboBox1.setBackground(new java.awt.Color(204, 255, 255));
        jComboBox1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' UNION select distinct upper(category) from st_stock_prices UNION select distinct upper(sub_cat_code) from st_stock_item ORDER BY 1"));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
        jPanel2.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        ReportHeaderPane.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(ReportHeaderPane, gridBagConstraints);

        GeneralKeyTxtAreaPane.setLayout(new java.awt.GridBagLayout());

        jSplitPane1.setDividerLocation(250);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        criteriaTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Evaluation Criteria", "Weighted Value", "Availed", "Total Mark", "Remarks"
            }
        ));
        criteriaTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                criteriaTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(criteriaTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 2.0;
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 51, 51));
        jTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel6.add(jTextField1, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Total(%)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel6, gridBagConstraints);

        jSplitPane1.setRightComponent(jPanel3);

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        bidderTbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        bidderTbl.setForeground(new java.awt.Color(102, 102, 102));
        bidderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Bidder", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bidderTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bidderTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bidderTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        jPanel7.add(jScrollPane1, gridBagConstraints);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Comment Here"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jScrollPane2, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        GeneralKeyTxtAreaPane.add(jSplitPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 9.0;
        jPanel1.add(GeneralKeyTxtAreaPane, gridBagConstraints);

        jPanel25.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jPanel25.setLayout(new java.awt.GridBagLayout());

        jButton3.setBackground(new java.awt.Color(153, 153, 255));
        jButton3.setText("Save Technical Evaluation");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel25.add(jButton3, gridBagConstraints);

        rmvItemsbtn.setBackground(new java.awt.Color(153, 153, 255));
        rmvItemsbtn.setText("   Remove Item(s)  ");
        rmvItemsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvItemsbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel25.add(rmvItemsbtn, gridBagConstraints);

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setText("    Clear Form    ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel25.add(jButton5, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(0, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/pdf1.jpg"))); // NOI18N
        jButton1.setText("Print Evaluation Report");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel25.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel25, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
   private void searchtenders() {
//searchtendert
        java.awt.Point point = this.tenderNoTxt.getLocationOnScreen();
        searchtendert.setSize(400, 200);
        searchtendert.setLocation(point);
        searchtendert.setVisible(true);

    }
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed

        searchtenders();
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void criteriaSync(java.lang.String item) {

        criteriaTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct specs, mark Weighted_Value, false availed, '0.00' Total, '' Remarks from st_criteria where item_desc ilike '" + item + "'  "));
        criteriaTbl.setShowHorizontalLines(false);
        jScrollPane3.setViewportView(criteriaTbl);
        try {
            //criteriaTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct specs, false availed, '0.00' Mark, '-' Remarks from st_criteria where item_desc ='"+itemsCmbx.getSelectedItem().toString()+"' and specs is not null "));
            int threshold = 100;
            PreparedStatement getthr = connectDB.prepareStatement("select distinct threshold from st_criteria where item_desc ilike '" + item + "'");
            ResultSet thr = getthr.executeQuery();
            while (thr.next()) {

                threshold = Integer.valueOf(thr.getInt(1));

                thresholdspinner.setValue(threshold);

            }
        } catch (SQLException ex) {
            Logger.getLogger(SSOTechEvaluation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void itemsCmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemsCmbxItemStateChanged

        //super.setTitle("item::"+itemsCmbx.getSelectedItem().toString().toUpperCase());
//        super.setTitle("item::"+itemsCmbx.getSelectedItem().toString().toUpperCase()+"[ Bidder"+bidderTbl.getValueAt(bidderTbl.getSelectedRow(), 0)+"]");   
    }//GEN-LAST:event_itemsCmbxItemStateChanged

    private void criteriaTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_criteriaTblMouseClicked
        // TODO add your handling code here:

        if (criteriaTbl.getSelectedColumn() == 1) {
        }

        if (criteriaTbl.getValueAt(criteriaTbl.getSelectedRow(), 2).toString() == "true") {
            criteriaTbl.setValueAt(criteriaTbl.getValueAt(criteriaTbl.getSelectedRow(), 1), criteriaTbl.getSelectedRow(), 3);
        } else {

            criteriaTbl.setValueAt(0, criteriaTbl.getSelectedRow(), 3);

        }

        total = Double.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(criteriaTbl, 3));

        //percent= Double.valueOf((total/criteriaTbl.getRowCount())*100);
        percent = Double.valueOf((total / TableColumnTotal.getTableColumnTotal(criteriaTbl, 1)) * 100);

        jTextField1.setText(String.valueOf(percent));

//    
    }//GEN-LAST:event_criteriaTblMouseClicked

    private void bidderTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bidderTblMouseClicked

        TableModel.TableGroupedBooleanColumn(bidderTbl, 1);
        if (bidderTbl.getValueAt(bidderTbl.getSelectedRow(), 0) != null) {
            jTextField1.setText("0.00");
            itemsCmbx.setEnabled(true);

            try {

                java.sql.PreparedStatement items = connectDB.prepareStatement("SELECT  bidder FROM st_bidder_code where bidder_no='" + bidderTbl.getValueAt(bidderTbl.getSelectedRow(), 0).toString() + "' and quotation_no ilike '" + tenderNoTxt.getText().toString() + "'; ");

                ResultSet populate = items.executeQuery();

                while (populate.next()) {
                    supp = populate.getObject(1).toString();

                    System.out.println("we are evaluating items for  [" + supp + "]");

               //ItemListSync(tenderNoTxt.getText().toString(), supp);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No bidder on selected row", "Error", JOptionPane.ERROR_MESSAGE);
            bidderTbl.setValueAt(false, bidderTbl.getSelectedRow(), 1);
        }
    }//GEN-LAST:event_bidderTblMouseClicked
    private void ItemListSync(java.lang.String tenderNo, java.lang.String supplierName) {

        itemsCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct item_description FROM st_floated_quotations where quotation_no ilike '" + tenderNo + "'  "));
    // itemsCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct item_description FROM st_floated_quotations where quotation_no ilike '"+tenderNo+"' and supplier ilike '"+supplierName+"' "));

        super.setTitle("item::" + itemsCmbx.getSelectedItem().toString().toUpperCase() + "[ Bidder" + bidderTbl.getValueAt(bidderTbl.getSelectedRow(), 0) + "]");

        criteriaTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct specs, false availed, '0.00' Mark, '-' Remarks from st_criteria where item_desc ='" + itemsCmbx.getSelectedItem().toString() + "' and specs is not null "));

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
//            PreparedStatement pst = connectDB.prepareStatement("select count(distinct supplier) from st_tech_eval");
//            ResultSet rset =pst.executeQuery();
//            while(rset.next()){
//                
//                counter=rset.getDouble(1);
//            
//            }

            double a = 0;

            a = Double.parseDouble(jTextField1.getText().toString());///jTable2.getRowCount())*100;

            java.sql.Statement cd = connectDB.createStatement();
            ResultSet cditm = cd.executeQuery("select DISTINCT bidder from st_bidder_code where quotation_no = '"+tenderNoTxt.getText().toString()+"' and bidder_no='"+bidderTbl.getModel().getValueAt(bidderTbl.getSelectedRow(), 0)+"'");
            //ResultSet cditm = cd.executeQuery("SELECT distinct supplier FROM st_preliminary_results where quotation_no = '" + tenderNoTxt.getText().toString() + "' and supplier_code='" + bidderTbl.getModel().getValueAt(bidderTbl.getSelectedRow(), 0) + "'");

            String name = null;

            int b = 0;

            while (cditm.next()) {

                name = cditm.getObject(1).toString();
                System.out.println(a + "%" + name);

            }

            java.sql.PreparedStatement insertDel1 = connectDB.prepareStatement("DELETE FROM st_technical_evaluation WHERE quotation_no='" + tenderNoTxt.getText().toString() + "' AND supplier='" + name + "' and item_desc='" + itemsCmbx.getSelectedItem().toString() + "'");
            insertDel1.executeUpdate();

            for (int i = 0; i < criteriaTbl.getRowCount(); i++) {
                System.out.println(a + "%" + name);

                java.sql.PreparedStatement insert = connectDB.prepareStatement("INSERT INTO st_technical_evaluation(quotation_no, supplier,supplier_code, item_desc, mark, total_mark, remarks,criteria,passmark) VALUES (?, ?, ?, ?, ?, ?,?,?,?)");

                insert.setObject(1, tenderNoTxt.getText().toString());
                //
                insert.setObject(2, name);
                insert.setObject(3, bidderTbl.getModel().getValueAt(bidderTbl.getSelectedRow(), 0));
                insert.setObject(4, itemsCmbx.getSelectedItem().toString());
                insert.setDouble(5, Double.parseDouble(criteriaTbl.getModel().getValueAt(i, 3).toString()));
                insert.setDouble(6, Double.parseDouble(jTextField1.getText().toString()));
                insert.setObject(7, criteriaTbl.getModel().getValueAt(i, 4).toString());
                insert.setObject(8, criteriaTbl.getModel().getValueAt(i, 0).toString());
                insert.setInt(9, Integer.parseInt(thresholdspinner.getValue().toString()));

                insert.executeUpdate();

            }
        //try {

            java.sql.Statement stmtss = connectDB.createStatement();
            java.sql.ResultSet resd = stmtss.executeQuery("SELECT distinct evaluation FROM st_pr_progress  WHERE approved_by_tc='" + tenderNoTxt.getText() + "'");
            while (resd.next()) {
                if (resd.getString(1) != null) {
                    evaluation_dtls = resd.getString(1) + "-" + com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase() + "-TECH-" + com.afrisoftech.lib.UserName.getServerDate(connectDB);

                } else {
                    evaluation_dtls = com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase() + "-TECH-" + com.afrisoftech.lib.UserName.getServerDate(connectDB);

                }

            }

//            
//        } catch (SQLException ex) {
//            Logger.getLogger(SSOTechEvaluation.class.getName()).log(Level.SEVERE, null, ex);
//        }
            TenderTrack.TrackTable(connectDB, "evaluation", evaluation_dtls, tenderNoTxt.getText());
            //connectDB.commit();
            javax.swing.JOptionPane.showMessageDialog(this, "Bidder Evaluated Successfully");
            ClearTable.clearthisTable(criteriaTbl);

        } catch (SQLException ex) {
            try {
                //Logger.getLogger(SSOGeneralEvaluaton.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
                connectDB.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(SSOTechEvaluation.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void rmvItemsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvItemsbtnActionPerformed

        ClearTable.removeSelectedRows(criteriaTbl);

        total = Double.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(criteriaTbl, 2));

        percent = Double.valueOf((total / criteriaTbl.getRowCount()) * 100);

        jTextField1.setText(String.valueOf(percent));

    }//GEN-LAST:event_rmvItemsbtnActionPerformed

    private void tenderrecordstxttCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxttCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxtt.getCaretPosition() < 2) {
            System.out.print("Nothing");

        } else {
            //tenderrecordstblt.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, " SELECT distinct a.quotation_no from st_floated_quotations a, st_preliminary_results b where a.quotation_no = b.quotation_no  "));
            tenderrecordstblt.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, " (SELECT distinct quotation_no from  st_preliminary_results  where total_mark=100 and quotation_no ILIKE '%" + tenderrecordstxtt.getText() + "%' UNION "
                    + "SELECT DISTINCT quotation_no from st_bidder_code where quotation_no ILIKE '%" + tenderrecordstxtt.getText() + "%' ) ORDER BY 1"));
            //nb: cert_of_incorp is not null
            tenderrecordstblt.setShowHorizontalLines(false);

            tenderrecordsspnlt.setViewportView(tenderrecordstblt);

            //            int n=0, m=0;
            //            if(tenderrecordstbl3.getValueAt(n, m)==null){
            //            java.awt.Point p = tenderrecordsspnl3.getLocationOnScreen();
            //            jLabel9.setVisible(true);
            //            jLabel9.setLocation(p);
            //            }
        }
    }//GEN-LAST:event_tenderrecordstxttCaretUpdate

    private void tenderrecordstxttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxttActionPerformed

    private void tenderrecordstbltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbltMouseClicked
        // TODO add your handling code here:
        tenderNoTxt.setText(tenderrecordstblt.getValueAt(tenderrecordstblt.getSelectedRow(), 0).toString());

        itemsCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' union select distinct item_description FROM st_floated_quotations where quotation_no ilike '" + tenderNoTxt.getText() + "' order by 1 "));

        ClearTable.clearthisTable(bidderTbl);

        try {
            if (tenderNoTxt.getText().contains("/Q/")) {

                java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct bidder_no FROM st_bidder_code where quotation_no = '" + tenderNoTxt.getText().toString() + "' ;");

                ResultSet a = cde.executeQuery();
                int i = 0;
                while (a.next()) {
                    bidderTbl.setValueAt(a.getObject(1).toString(), i, 0);
                    //bidderTbl.setValueAt(false, i, 1);
                    i++;

                }

                this.closebtnt.doClick();

            } else {
                java.sql.PreparedStatement cde = connectDB.prepareStatement("SELECT  distinct supplier_code FROM st_preliminary_results where quotation_no = '" + tenderNoTxt.getText().toString() + "' "
                        + "AND total_mark=100   ;");

                ResultSet a = cde.executeQuery();
                int i = 0;
                while (a.next()) {
                    bidderTbl.setValueAt(a.getObject(1).toString(), i, 0);

                    i++;

                }

                this.closebtnt.doClick();
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }//GEN-LAST:event_tenderrecordstbltMouseClicked

    private void closebtntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtntActionPerformed
        // TODO add your handling code here:
        searchtendert.dispose();
    }//GEN-LAST:event_closebtntActionPerformed

    private void thresholdspinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_thresholdspinnerStateChanged
        // TODO add your handling code here:

//        resetEvalTbl();

    }//GEN-LAST:event_thresholdspinnerStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        ClearTable.clearthisTable(criteriaTbl);

//        jLabel1.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (tenderNoTxt.getText().length() < 1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Select Tender Number First");
        } else {
        //javax.swing.JOptionPane.showMessageDialog(this, "Work In Progress...");

            TenderTechnicalReportPDF policy = new TenderTechnicalReportPDF();
            policy.TenderTechnicalReportPDF(connectDB, tenderNoTxt.getText());

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void itemsCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsCmbxActionPerformed
        // TODO add your handling code here:
        criteriaSync(itemsCmbx.getSelectedItem().toString());
    }//GEN-LAST:event_itemsCmbxActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        itemsCmbx.setModel(ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct item_description from st_item_to_quote where tender_no ='" + tenderNoTxt.getText() + "' and "
                + "item_description IN (SELECT DISTINCT description from st_stock_item where sub_cat_code='" + jComboBox1.getSelectedItem() + "') "));
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GeneralKeyTxtAreaPane;
    private javax.swing.JPanel ReportHeaderPane;
    private javax.swing.JTable bidderTbl;
    private javax.swing.JButton closebtnt;
    private javax.swing.JTable criteriaTbl;
    private javax.swing.JComboBox itemsCmbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton rmvItemsbtn;
    private javax.swing.JButton searchButton1;
    private javax.swing.JDialog searchtendert;
    private javax.swing.JTextField tenderNoTxt;
    private javax.swing.JPanel tenderrecordspnlt;
    private javax.swing.JScrollPane tenderrecordsspnlt;
    private javax.swing.JTable tenderrecordstblt;
    private javax.swing.JTextField tenderrecordstxtt;
    private javax.swing.JSpinner thresholdspinner;
    // End of variables declaration//GEN-END:variables
}
