/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.TableModel;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.SQLDateFormat;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class HosDisposalTender extends javax.swing.JInternalFrame {

    /**
     * Creates new form TenderAdIntfr
     */
     org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.sql.Connection connectDB = null;
    private int count;
    public HosDisposalTender(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
     connectDB = connDb;
 
      pConnDB = pconnDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchtender1 = new javax.swing.JDialog();
        tenderrecordspnl1 = new javax.swing.JPanel();
        tenderrecordstxt1 = new javax.swing.JTextField();
        tenderrecordsspnl1 = new javax.swing.JScrollPane();
        tenderrecordstbl1 = new com.afrisoftech.dbadmin.JTable();
        closebtn2 = new javax.swing.JButton();
        searchtender = new javax.swing.JDialog();
        tenderrecordspnl = new javax.swing.JPanel();
        tenderrecordstxt = new javax.swing.JTextField();
        tenderrecordsspnl = new javax.swing.JScrollPane();
        tenderrecordstbl = new com.afrisoftech.dbadmin.JTable();
        closebtn1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tenderItemstbl = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        saveButntender = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        criteriaTbl = new com.afrisoftech.dbadmin.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel45 = new javax.swing.JPanel();
        tendernotxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        editBtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        rmvRow = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        biderCodetbl = new com.afrisoftech.dbadmin.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel48 = new javax.swing.JPanel();
        tendernotxt3 = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();

        searchtender1.setModal(true);
        searchtender1.setUndecorated(true);
        searchtender1.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl1.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt1CaretUpdate(evt);
            }
        });
        tenderrecordstxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl1.add(tenderrecordstxt1, gridBagConstraints);

        tenderrecordstbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl1.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl1MouseClicked(evt);
            }
        });
        tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl1.add(tenderrecordsspnl1, gridBagConstraints);

        closebtn2.setText("Close");
        closebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl1.add(closebtn2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender1.getContentPane().add(tenderrecordspnl1, gridBagConstraints);

        searchtender.setModal(true);
        searchtender.setUndecorated(true);
        searchtender.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxtCaretUpdate(evt);
            }
        });
        tenderrecordstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl.add(tenderrecordstxt, gridBagConstraints);

        tenderrecordstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstblMouseClicked(evt);
            }
        });
        tenderrecordsspnl.setViewportView(tenderrecordstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl.add(tenderrecordsspnl, gridBagConstraints);

        closebtn1.setText("Close");
        closebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl.add(closebtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender.getContentPane().add(tenderrecordspnl, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Tender Preperation(To be done Before Opening date)");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        tenderItemstbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tenderItemstbl.setForeground(new java.awt.Color(102, 102, 102));
        tenderItemstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tender No", "Opening Date", "Tender Description", "Remarks/Eligibility", "Category", "Ad_Type", "Save"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tenderItemstbl.setGridColor(new java.awt.Color(0, 51, 204));
        tenderItemstbl.setSelectionBackground(new java.awt.Color(153, 255, 204));
        tenderItemstbl.getTableHeader().setReorderingAllowed(false);
        javax.swing.table.TableColumn column111 = null;
        for (int i = 0; i < 4; i++) {
            column111 = tenderItemstbl.getColumnModel().getColumn(i);
            if (i == 2) {

                column111.setPreferredWidth(350); //sport column is bigger
            } else {
                if(i==5){
                    column111.setPreferredWidth(250);
                }
                else
                column111.setPreferredWidth(100);

            }
        }

        JComboBox cmbox51 = new JComboBox();
        cmbox51.setModel (new javax.swing.DefaultComboBoxModel(new String[] {"A","B","C","D","E","F" }));
        javax.swing.table.TableColumn teditor2 = this.tenderItemstbl.getColumn("Category");
        teditor2.setCellEditor(new javax.swing.DefaultCellEditor(cmbox51));

        JComboBox cmbox52 = new JComboBox();
        cmbox52.setModel (new javax.swing.DefaultComboBoxModel(new String[] {"Invitation To Tender","Prequalification of Suppliers","Request For Quotation" }));
        javax.swing.table.TableColumn teditor3 = this.tenderItemstbl.getColumn("Ad_Type");
        teditor3.setCellEditor(new javax.swing.DefaultCellEditor(cmbox52));
        ;
        tenderItemstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderItemstblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tenderItemstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        saveButntender.setText("Save& Print Tender Advertisement");
        saveButntender.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        saveButntender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButntenderActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(saveButntender, gridBagConstraints);

        jButton4.setText("   Edit Entries   ");
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton4, gridBagConstraints);

        jButton1.setText("Remove Item(s)");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton3.setText("Close form");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jPanel1, gridBagConstraints);

        jCheckBox1.setText("View Unadvertised Tenders");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jCheckBox1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel2.add(datePicker2, gridBagConstraints);

        jCheckBox3.setText("Tick All");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jCheckBox3, gridBagConstraints);

        jTabbedPane1.addTab("Tender Advertisement", jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel9.setLayout(new java.awt.GridBagLayout());
        jPanel3.add(jPanel9, new java.awt.GridBagConstraints());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Set Preliminary Criteria here"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        criteriaTbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        criteriaTbl.setForeground(new java.awt.Color(102, 102, 102));
        criteriaTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Name"
            }
        ));
        criteriaTbl.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 2; i++) {
            column = criteriaTbl.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(25); //sport column is bigger
            } else {
                if (i == 0) {
                    column.setPreferredWidth(300);

                }
            }
        }
        jScrollPane2.setViewportView(criteriaTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jScrollPane2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jLabel2, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Tender No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jLabel1, gridBagConstraints);

        jPanel45.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel45.setLayout(new java.awt.GridBagLayout());

        tendernotxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel45.add(tendernotxt, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel45.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel45, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel6, gridBagConstraints);

        jCheckBox2.setText("Default Criteria");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jCheckBox2, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        editBtn.setBackground(new java.awt.Color(153, 255, 204));
        editBtn.setMnemonic('e');
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(editBtn, gridBagConstraints);

        savebtn.setBackground(new java.awt.Color(153, 255, 204));
        savebtn.setMnemonic('s');
        savebtn.setText("                    Save                ");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(savebtn, gridBagConstraints);

        rmvRow.setBackground(new java.awt.Color(153, 255, 204));
        rmvRow.setMnemonic('r');
        rmvRow.setText("Remove Row");
        rmvRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvRowActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(rmvRow, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        jTabbedPane1.addTab("Tender Preliminary Criteria", jPanel3);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel10.setLayout(new java.awt.GridBagLayout());

        biderCodetbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Bidder Name", "Bidder No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(biderCodetbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel10.add(jScrollPane3, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel11.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jLabel11, gridBagConstraints);

        jPanel48.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel48.setLayout(new java.awt.GridBagLayout());

        tendernotxt3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel48.add(tendernotxt3, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton4.setToolTipText("Search");
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel48.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel11.add(jPanel48, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel10.add(jPanel11, gridBagConstraints);

        jPanel12.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel10.add(jPanel12, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jButton10.setText("Save");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jButton10, gridBagConstraints);

        jButton11.setText("Close");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jButton11, gridBagConstraints);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Help"));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jButton9.setText("Help");
        jPanel14.add(jButton9, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jPanel14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jPanel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel10, gridBagConstraints);

        jTabbedPane1.addTab("Coding of Bidders", jPanel4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       ClearTable.clearthisTable(tenderItemstbl);
       
       
       saveButntender.setLabel("Update Entries");
         try {
             PreparedStatement pst = connectDB.prepareStatement("select distinct ref_no,opening_date,description,bid_bond Remarks,category,ad_type from st_tenders where advertisement_date::date='"+SQLDateFormat.getSQLDate(datePicker2.getDate())+"'");
             
             ResultSet rset = pst.executeQuery();
             int i=0;
             while (rset.next()){
             
             
             tenderItemstbl.setValueAt(rset.getObject(1), i, 0);
              tenderItemstbl.setValueAt(rset.getObject(2), i, 1);
               tenderItemstbl.setValueAt(rset.getObject(3), i, 2);
                tenderItemstbl.setValueAt(rset.getObject(4), i, 3);
                tenderItemstbl.setValueAt(rset.getObject(5), i, 4);
                tenderItemstbl.setValueAt(rset.getObject(6), i, 5);
   
             i++;

         }
             
             
             
             
             
             
         } catch (SQLException ex) {
             Logger.getLogger(HosDisposalTender.class.getName()).log(Level.SEVERE, null, ex);
         }
       
       
       
       
    }//GEN-LAST:event_jButton4ActionPerformed
    private void refreshTable(){
    try {
             PreparedStatement getTenders = connectDB.prepareStatement("SELECT DISTINCT tender_no,openning_date FROM st_item_to_quote WHERE tender_no NOT IN (SELECT DISTINCT ref_no FROM st_tenders)");
             
             
             ResultSet gettinTenders = getTenders.executeQuery();
             int i =0;
             while(gettinTenders.next()){
             
             
             tenderItemstbl.setValueAt(gettinTenders.getObject(1), i, 0);
             tenderItemstbl.setValueAt(gettinTenders.getDate(2), i, 1);
             
             i++;
             
             
             
             }
             
             
             
             
             
             
         } catch (SQLException ex) {
             Logger.getLogger(HosDisposalTender.class.getName()).log(Level.SEVERE, null, ex);
         }
      
      
      
      
      
      
    
    
    
    
    
    
    
    
    
    
    }
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        
        
 ClearTable.clearthisTable(tenderItemstbl);
 saveButntender.setLabel("Save& Print Tender Advertisement");
 refreshTable();
      
      
      
      
      
      
      
      
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void saveButntenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButntenderActionPerformed
        // TODO add your handling code here:
     if(saveButntender.getLabel().toString().equalsIgnoreCase("Save& Print Tender Advertisement")){   
        for(int i=0;i<tenderItemstbl.getRowCount();i++){
            if(tenderItemstbl.getValueAt(i, 0)!=null && tenderItemstbl.getModel().getValueAt(i, 6)==java.lang.Boolean.TRUE){
                
                
                try {
                    PreparedStatement pst = connectDB.prepareStatement("INSERT INTO st_tenders (ref_no, opening_date,"
                            + "description, bid_bond, entered_by, advertised,category,ad_type)\n" +
                            
                    "VALUES (?, ?, ?, ?, ?, ?);");
                    
                    
                    pst.setObject(1, tenderItemstbl.getValueAt(i, 0));
                    pst.setDate(2, (Date) tenderItemstbl.getValueAt(i, 1));
                    pst.setObject(3, tenderItemstbl.getValueAt(i, 2));
                    pst.setObject(4, tenderItemstbl.getValueAt(i, 3));
                    pst.setObject(5, com.afrisoftech.lib.UserName.getLoginName(connectDB).toString());
                    pst.setObject(6, true);
                    pst.setObject(7, tenderItemstbl.getValueAt(i, 4));
                     pst.setObject(8, tenderItemstbl.getValueAt(i, 5));
                    pst.executeUpdate();
                    
                     connectDB.commit();
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(HosDisposalTender.class.getName()).log(Level.SEVERE, null, ex);
                    javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                }
    
            
            }
           
  
        }
        
   JOptionPane.showMessageDialog(this, "Insert Succesful", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);   
   TenderAdvertisementPDF policy = new TenderAdvertisementPDF();
   policy.TenderAdvertisementPDF(connectDB, SQLDateFormat.getSQLDate(datePicker2.getDate()).toString());
        ClearTable.clearthisTable(tenderItemstbl);
        refreshTable();
        
        
     }
     
     
     else{
     
     
   for(int i=0;i<tenderItemstbl.getRowCount();i++){
            if(tenderItemstbl.getValueAt(i, 0)!=null && tenderItemstbl.getModel().getValueAt(i, 6)==java.lang.Boolean.TRUE){
                
                
                try {
                    PreparedStatement pst = connectDB.prepareStatement("UPDATE st_tenders SET  opening_date=?,"
                            + "description=?, bid_bond=?, entered_by=?, advertised=? ,category=?, ad_type=? WHERE ref_no= '"+tenderItemstbl.getValueAt(i, 0)+"'");
                    
                    
                    //pst.setObject(1, tenderItemstbl.getValueAt(i, 0));
                    pst.setDate(1, (Date) tenderItemstbl.getValueAt(i, 1));
                    pst.setObject(2, tenderItemstbl.getValueAt(i, 2));
                    pst.setObject(3, tenderItemstbl.getValueAt(i, 3));
                    pst.setObject(4, com.afrisoftech.lib.UserName.getLoginName(connectDB).toString());
                    pst.setObject(5, true);
                    pst.setObject(6, tenderItemstbl.getValueAt(i, 4));
                     pst.setObject(7, tenderItemstbl.getValueAt(i, 5));
                    pst.executeUpdate();
                    
                     connectDB.commit();
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(HosDisposalTender.class.getName()).log(Level.SEVERE, null, ex);
                    javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                }
    
            
            }
           
  
        }
     JOptionPane.showMessageDialog(this, "Data Updated Succesfully", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
     ClearTable.clearthisTable(tenderItemstbl);
     TenderAdvertisementPDF policy = new TenderAdvertisementPDF();
     policy.TenderAdvertisementPDF(connectDB, SQLDateFormat.getSQLDate(datePicker2.getDate()).toString());
     saveButntender.setLabel("Save& Print Tender Advertisement");
     }
        
    }//GEN-LAST:event_saveButntenderActionPerformed

    private void tenderItemstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderItemstblMouseClicked
        // TODO add your handling code here:
   if( tenderItemstbl.getValueAt(tenderItemstbl.getSelectedRow(), 5)==java.lang.Boolean.TRUE){
    if(tenderItemstbl.getValueAt(tenderItemstbl.getSelectedRow(), 0)!=null  ){
    
    
    }
    
    else{
    
    
    JOptionPane.showMessageDialog(this, "Null Selection", "ERROR", JOptionPane.ERROR_MESSAGE);
    
    tenderItemstbl.setValueAt(false,tenderItemstbl.getSelectedRow(), 5);
    
      }
   
   }
    }//GEN-LAST:event_tenderItemstblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      
         ClearTable.removeSelectedRows(tenderItemstbl);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1= new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());
        //updating
        
        
        
        
        try {
            for (int i = 0; i < criteriaTbl.getRowCount(); i++){
                if (criteriaTbl.getModel().getValueAt(i,0) != null){
                    if(jButton1.getLabel().equalsIgnoreCase("Update")){
                        
                        java.sql.PreparedStatement pstmt312 = connectDB.prepareStatement(" SELECT count(pr_item) from st_preliminary_criteria where pr_item ilike '%"+criteriaTbl.getValueAt(i,1).toString()+"%' ");
                        ResultSet pstq = pstmt312.executeQuery();
                        
                        while (pstq.next()){
                        count = pstq.getInt(1);
                        
                        }
                        if(count>0){
                        
                        java.sql.PreparedStatement pstmt311 = connectDB.prepareStatement("UPDATE st_preliminary_criteria SET pr_item = '"+criteriaTbl.getValueAt(i,1).toString()+"' WHERE quotation_no = '"+tendernotxt.getText().toString()+"'");
                        pstmt311.executeUpdate();

                    }
                        
               }
                   
                    else{
                        

                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_preliminary_criteria(quotation_no, pr_code, pr_item,default_val) VALUES (?, ?, initcap(?),?);");

                        pstmt.setObject(1,tendernotxt.getText().toString());
                        pstmt.setObject(2,criteriaTbl.getValueAt(i,0).toString());
                        
                        if( criteriaTbl.getValueAt(i,1).equals(null)){
                            javax.swing.JOptionPane.showMessageDialog(this,"Enter Criteria","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else{
                            pstmt.setObject(3, criteriaTbl.getValueAt(i,1).toString());

                        }
                        pstmt.setObject(4, true);
                        pstmt.executeUpdate();

                    }
                }
            }
            connectDB.commit();
            jButton1.setLabel("Save");
            jLabel2.setForeground(java.awt.Color.blue);
            jLabel2.setText("Insert successful");

        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this,"ERROR: "+ sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            jLabel2.setForeground(java.awt.Color.red);
            jLabel2.setText("Sorry. Data not saved");
        }
        // Add your handling code here:
    }//GEN-LAST:event_savebtnActionPerformed

    private void rmvRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvRowActionPerformed
          ClearTable.removeSelectedRows(criteriaTbl);      // Add your handling code here:
    }//GEN-LAST:event_rmvRowActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
    if(criteriaTbl.getValueAt(0, 0)!=null){
    
    savebtn.setLabel("Update");
   // savebtn.setMnemonic(WIDTH);
    



}      
      
        
        
        
    }//GEN-LAST:event_editBtnActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = tendernotxt.getLocationOnScreen();
        searchtender.setSize(400, 200);
        searchtender.setLocation(p);
        searchtender.setVisible(true);
        searchtender.setModal(false);

    }//GEN-LAST:event_searchButton1ActionPerformed

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = tendernotxt3.getLocationOnScreen();
        searchtender1.setLocation(p);
        searchtender1.setSize(400, 200);
        searchtender1.setVisible(true);

    }//GEN-LAST:event_searchButton4ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {
            // TODO add your handling code here:
            connectDB.setAutoCommit(false);
            int i=0;
            for (i=0;i<biderCodetbl.getRowCount();i++){
                if(biderCodetbl.getValueAt(i, 0)!=null){

                    java.sql.PreparedStatement pst = connectDB.prepareStatement("INSERT INTO st_bidder_code( quotation_no, bidder, bidder_no) VALUES (?, ?, ?);");
                    pst.setObject(1, tendernotxt3.getText().toString());
                    pst.setObject(2, biderCodetbl.getValueAt(i, 0).toString());
                    pst.setObject(3, biderCodetbl.getValueAt(i, 1).toString());
                    pst.executeUpdate();
                }

            }
            connectDB.commit();
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Successful");
            ClearTable.clearthisTable(biderCodetbl);
        } catch (SQLException ex) {
            try {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "Insert NOT Successful"+ex);
                connectDB.rollback();
                Logger.getLogger(SSOTenderEvaluationIntfr.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(SSOTenderEvaluationIntfr.class.getName()).log(Level.SEVERE, null, ex1);
            }

        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void tenderrecordstxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt1CaretUpdate
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (this.tenderrecordstxt1.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else

        {
            tenderrecordstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT quotation_no FROM st_floated_quotations  where "
                + "quotation_no ilike '%T%' and  quotation_no ilike '" +tenderrecordstxt.getText()+"%' order by 1 desc;"));
        tenderrecordstbl1.setShowHorizontalLines(false);

        tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        }

    }//GEN-LAST:event_tenderrecordstxt1CaretUpdate

    private void tenderrecordstxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt1ActionPerformed

    private void tenderrecordstbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl1MouseClicked
        try {
            // TODO add your handling code here:
            tendernotxt3.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 0).toString());

            ClearTable.clearthisTable(biderCodetbl);

            //System.out.println("select distinct supplier from st_floated_quotations where quotation_no='"+tendernotxt3.getText().toString()+"'");
            System.out.println("select distinct supplier_name from st_tender_suppliers where tender='"+tendernotxt3.getText().toString()+"' and opened=true and supplier_name NOT IN (SELECT DISTINCT bidder FROM st_bidder_code WHERE quotation_no ='"+tendernotxt3.getText()+"')");

            //st_tender_suppliers --tender --supplier_name

            java.sql.PreparedStatement pst = connectDB.prepareStatement("select distinct supplier_name from st_tender_suppliers where tender='"+tendernotxt3.getText().toString()+"' and opened=true and supplier_name NOT IN (SELECT DISTINCT bidder FROM st_bidder_code WHERE quotation_no ='"+tendernotxt3.getText()+"')");
            java.sql.ResultSet rset =pst.executeQuery();
            int i=1;
            int j=0;
            while (rset.next()){
                biderCodetbl.setValueAt(rset.getObject(1), j, 0);
                biderCodetbl.setValueAt(i, j, 1);

                i++;
                j++;
             System.out.println(j);
            }
 
            
            closebtn2.doClick();
            
            
            System.out.println(j);
            
            
            
            if(j==0){
            
            JOptionPane.showMessageDialog(this, "Bidders In This Tender Already Coded","Error Message", JOptionPane.ERROR_MESSAGE);
            
            }
            
            
            

        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(SSOTenderEvaluationIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tenderrecordstbl1MouseClicked

    private void closebtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn2ActionPerformed
        // TODO add your handling code here:
        this.searchtender1.dispose();
    }//GEN-LAST:event_closebtn2ActionPerformed

    private void tenderrecordstxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxtCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt.getCaretPosition() > 3) {
//            System.out.print("Nothing");
//
//        } else
//
//        {
            tenderrecordstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT quotation_no Tender_No FROM st_floated_quotations where "
                + "quotation_no ilike '%T%' and  quotation_no ilike '%" +tenderrecordstxt.getText()+"%'  order by 1 desc;"));
        tenderrecordstbl.setShowHorizontalLines(false);

        tenderrecordsspnl.setViewportView(tenderrecordstbl);
        
        }
    }//GEN-LAST:event_tenderrecordstxtCaretUpdate

    private void tenderrecordstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxtActionPerformed

    private void tenderrecordstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstblMouseClicked
      
tendernotxt.setText((String) tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 0));
        
        
searchtender.dispose();
        
        
        
        
    }//GEN-LAST:event_tenderrecordstblMouseClicked

    private void closebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn1ActionPerformed
        // TODO add your handling code here:
        searchtender.dispose();

    }//GEN-LAST:event_closebtn1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
    
        
if(tendernotxt.getText().length()>0){        
        try {
             // TODO add your handling code here:

             PreparedStatement pst = connectDB.prepareStatement("SELECT DISTINCT pr_item  FROM st_preliminary_criteria WHERE default_val =TRUE;");
             
             ResultSet rset = pst.executeQuery();
             int i =0;
             while(rset.next()){
             
                 criteriaTbl.setValueAt(tendernotxt.getText()+"/00"+i+1, i, 0);
                 
                 criteriaTbl.setValueAt(rset.getObject(1), i, 1);
             
             i++;
             }
             
   
         } catch (SQLException ex) {
             Logger.getLogger(HosDisposalTender.class.getName()).log(Level.SEVERE, null, ex);
         }
}
    else{
    JOptionPane.showMessageDialog(this, "Select Tender Number First", "Error Message", JOptionPane.ERROR_MESSAGE);

    }
        
        
        
        
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
          setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<tenderItemstbl.getRowCount();i++){
         if(tenderItemstbl.getValueAt(i, 1)!=null){
         tenderItemstbl.setValueAt(true, i, 6);
         
         
         
         
         }
        
        
        
        }
        
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable biderCodetbl;
    private javax.swing.JButton closebtn1;
    private javax.swing.JButton closebtn2;
    private javax.swing.JTable criteriaTbl;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton rmvRow;
    private javax.swing.JButton saveButntender;
    private javax.swing.JButton savebtn;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton4;
    private javax.swing.JDialog searchtender;
    private javax.swing.JDialog searchtender1;
    private javax.swing.JTable tenderItemstbl;
    private javax.swing.JTextField tendernotxt;
    private javax.swing.JTextField tendernotxt3;
    private javax.swing.JPanel tenderrecordspnl;
    private javax.swing.JPanel tenderrecordspnl1;
    private javax.swing.JScrollPane tenderrecordsspnl;
    private javax.swing.JScrollPane tenderrecordsspnl1;
    private javax.swing.JTable tenderrecordstbl;
    private javax.swing.JTable tenderrecordstbl1;
    private javax.swing.JTextField tenderrecordstxt;
    private javax.swing.JTextField tenderrecordstxt1;
    // End of variables declaration//GEN-END:variables
}
