/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class PatientsBillingnHCIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    private final javax.swing.JTextField comboTextField = new javax.swing.JTextField();
    
    javax.swing.ComboBoxModel mainComboBoxModel;
    
    javax.swing.ComboBoxModel oldComboBox1311Model;
    
    private javax.swing.JComboBox cmbox;
    
    private javax.swing.JComboBox cmbox2;
    
    private javax.swing.JComboBox cmbox1;
    
    java.sql.Connection connectDB = null;
    
    private boolean refreshStatus;
    
    com.afrisoftech.timeseries.YearyAgeing ageingSeries= null;
    
    private UpdatePatientList updatePatientList;
    
    com.afrisoftech.lib.DBObject dbObject;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    private boolean DirectRev;
    
    public static String transNo = null;
    
    boolean smartcard = false;
    
    public PatientsBillingnHCIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        refreshStatus = true;
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        //  startRunning();
    }
    
    String glAcc2 = null;
    
    String Stock = null;
    String actCode = null;
    String accountCode = null;
    String userName = null;
    String transNo1 = null;
    String glType = null;
    String glCode = null;
    String units = null;
    String chbox = null;
    double price = 0.00;
    double qty = 0.00;
    double amount = 0.00;
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog212 = new javax.swing.JDialog();
        jSearchPanel212 = new javax.swing.JPanel();
        jTextField11312 = new javax.swing.JTextField();
        jSearchScrollPane212 = new javax.swing.JScrollPane();
        jSearchTable212 = new com.afrisoftech.dbadmin.JTable();
        jButton4212 = new javax.swing.JButton();
        jButton5212 = new javax.swing.JButton();
        jSearchDialog2121 = new javax.swing.JDialog();
        jSearchPanel2121 = new javax.swing.JPanel();
        jTextField113121 = new javax.swing.JTextField();
        jSearchScrollPane2121 = new javax.swing.JScrollPane();
        jSearchTable2121 = new com.afrisoftech.dbadmin.JTable();
        jButton42121 = new javax.swing.JButton();
        jButton52121 = new javax.swing.JButton();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        buttonGroup21 = new javax.swing.ButtonGroup();
        jSearchDialog4 = new javax.swing.JDialog();
        jSearchPanel213 = new javax.swing.JPanel();
        jTextField115 = new javax.swing.JTextField();
        jSearchScrollPane4 = new javax.swing.JScrollPane();
        jSearchTable4 = new com.afrisoftech.dbadmin.JTable();
        jButton93 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog13 = new javax.swing.JDialog();
        jSearchPanel13 = new javax.swing.JPanel();
        jTextField1113 = new javax.swing.JTextField();
        jSearchScrollPane13 = new javax.swing.JScrollPane();
        jSearchTable13 = new com.afrisoftech.dbadmin.JTable();
        dispose11 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox31 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel14 = new javax.swing.JLabel();
        jPanel413 = new javax.swing.JPanel();
        jTextField93 = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jTextField42 = new javax.swing.JTextField();

        jTextField6 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        //jPanel13.setVisible(false);
        jScrollPane22 = new javax.swing.JScrollPane();
        jTable13 = new com.afrisoftech.dbadmin.JTable();
        jPanel23 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jComboBox1311 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jTextField82 = new javax.swing.JTextField();
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select rate from pb_operating_parameters where category = 'PF'");

            while (rs.next()){
                jTextField82.setText(rs.getObject(1).toString());
                // jTextField2.setText(rs.getObject(2).toString());

            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
        jComboBox1 = new javax.swing.JComboBox();
        jPanel641 = new javax.swing.JPanel();
        searchButton3 = new javax.swing.JButton();
        jTextField14 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel532 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        jButton63 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton121 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton122 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();

        jSearchDialog212.setUndecorated(true);
        jSearchDialog212.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel212.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel212.setLayout(new java.awt.GridBagLayout());

        jTextField11312.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11312CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel212.add(jTextField11312, gridBagConstraints);

        jSearchTable212.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable212.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable212.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable212MouseClicked(evt);
            }
        });
        jSearchScrollPane212.setViewportView(jSearchTable212);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel212.add(jSearchScrollPane212, gridBagConstraints);

        jButton4212.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel212.add(jButton4212, gridBagConstraints);

        jButton5212.setText("Close");
        jButton5212.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5212ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel212.add(jButton5212, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog212.getContentPane().add(jSearchPanel212, gridBagConstraints);

        jSearchDialog2121.setUndecorated(true);
        jSearchDialog2121.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2121.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2121.setLayout(new java.awt.GridBagLayout());

        jTextField113121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113121CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2121.add(jTextField113121, gridBagConstraints);

        jSearchTable2121.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2121.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2121.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2121MouseClicked(evt);
            }
        });
        jSearchScrollPane2121.setViewportView(jSearchTable2121);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2121.add(jSearchScrollPane2121, gridBagConstraints);

        jButton42121.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2121.add(jButton42121, gridBagConstraints);

        jButton52121.setText("Close");
        jButton52121.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52121ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2121.add(jButton52121, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2121.getContentPane().add(jSearchPanel2121, gridBagConstraints);

        jSearchDialog3.setUndecorated(true);
        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField114, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseEntered(evt);
            }
        });
        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton92.setText("Cancel");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        jSearchDialog4.setUndecorated(true);
        jSearchDialog4.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel213.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel213.setLayout(new java.awt.GridBagLayout());

        jTextField115.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField115CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel213.add(jTextField115, gridBagConstraints);

        jSearchTable4.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable4MouseClicked(evt);
            }
        });
        jSearchScrollPane4.setViewportView(jSearchTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel213.add(jSearchScrollPane4, gridBagConstraints);

        jButton93.setText("Cancel");
        jButton93.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton93ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel213.add(jButton93, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog4.getContentPane().add(jSearchPanel213, gridBagConstraints);

        jSearchDialog13.setModal(true);
        jSearchDialog13.setUndecorated(true);
        jSearchDialog13.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel13.setLayout(new java.awt.GridBagLayout());

        jTextField1113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel13.add(jTextField1113, gridBagConstraints);

        jSearchTable13.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable13.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable13.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable13MouseClicked(evt);
                }
            });
            jSearchScrollPane13.setViewportView(jSearchTable13);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel13.add(jSearchScrollPane13, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            dispose11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose11ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel13.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog13.getContentPane().add(jSearchPanel13, gridBagConstraints);

            setClosable(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Pharmacy Sales");
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
            try {
                setSelected(true);
            } catch (java.beans.PropertyVetoException e1) {
                e1.printStackTrace();
            }
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());

            jPanel5.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Issue to", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
            jPanel3.setLayout(new java.awt.GridBagLayout());

            jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient category"));
            jPanel6.setLayout(new java.awt.GridBagLayout());

            buttonGroup1.add(jCheckBox1);
            jCheckBox1.setText("Out Patient");
            jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox1ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            jPanel6.add(jCheckBox1, gridBagConstraints);

            buttonGroup1.add(jCheckBox2);
            jCheckBox2.setText("Walk In Patient");
            jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox2ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            jPanel6.add(jCheckBox2, gridBagConstraints);

            buttonGroup1.add(jCheckBox3);
            jCheckBox3.setText("In Patient");
            jCheckBox3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jCheckBox3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox3ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            jPanel6.add(jCheckBox3, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jPanel6, gridBagConstraints);

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Search By"));
            jPanel7.setLayout(new java.awt.GridBagLayout());

            buttonGroup21.add(jCheckBox31);
            jCheckBox31.setText("Search By  No.");
            jCheckBox31.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            jPanel7.add(jCheckBox31, gridBagConstraints);

            buttonGroup21.add(jCheckBox4);
            jCheckBox4.setText("Search By Name");
            jCheckBox4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            jPanel7.add(jCheckBox4, gridBagConstraints);

            jRadioButton1.setText("Confirm Visit");
            jRadioButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
            jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButton1ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
            gridBagConstraints.weightx = 1.0;
            jPanel7.add(jRadioButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jPanel7, gridBagConstraints);

            jPanel8.setLayout(new java.awt.GridBagLayout());

            jLabel10.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(jLabel10, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(datePicker1, gridBagConstraints);

            jLabel14.setText("Prescription No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel8.add(jLabel14, gridBagConstraints);

            jPanel413.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel413.setLayout(new java.awt.GridBagLayout());
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel413.add(jTextField93, gridBagConstraints);

            searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton4.setToolTipText("Search");
            searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton4ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel413.add(searchButton4, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(jPanel413, gridBagConstraints);

            buttonGroup3.add(jCheckBox5);
            jCheckBox5.setText("Donation");
            jCheckBox5.setEnabled(false);
            jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox5ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(jCheckBox5, gridBagConstraints);

            buttonGroup3.add(jCheckBox6);
            jCheckBox6.setSelected(true);
            jCheckBox6.setText("Pharmacy");
            jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox6ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(jCheckBox6, gridBagConstraints);

            jTextField42.setEditable(false);
            jTextField42.setText("Pharmacy");
            jTextField42.setDoubleBuffered(true);
            String branch = null;
            try {
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("SELECT store_name FROM st_stores WHERE store_code ilike 'nhcp'");
                while (rset.next()){
                    jTextField42.setText(rset.getString(1));
                }
                rset.close();
                stmt.close();

            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                System.out.println("Insert not successful");
            }
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel8.add(jTextField42, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(jPanel8, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.ipady = -5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel5.add(jPanel3, gridBagConstraints);

            jTextField6.setEditable(false);
            jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            jPanel5.add(jTextField6, gridBagConstraints);

            jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
            jPanel13.setLayout(new java.awt.GridBagLayout());

            jScrollPane22.setPreferredSize(new java.awt.Dimension(700, 403));

            jTable13.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null}
                },
                new String [] {
                    "Drugs", "Qty", "Avl Qty", "Price", "Disc", "Total", "Gl Account"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    false, true, false, false, true, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable13.setEditingColumn(1);
            jTable13.setEditingRow(jTable13.getSelectedRow());
            jTable13.setGridColor(new java.awt.Color(204, 204, 255));

            /*  cmbox = new javax.swing.JComboBox();

            crset2.setConnectionSource(pConnDB);
            crset2.setCommand("select distinct product FROM st_stock_prices WHERE department = 'Pharmacy' order by product");

            cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset2, "product", null, null, null));
            javax.swing.table.TableColumn s1 = this.jTable1.getColumn("Drugs");
            s1.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmboxActionPerformed(evt);
                }
            });
            */

            javax.swing.table.TableColumn column111 = null;
            for (int i = 0; i < 7; i++) {
                column111 = jTable13.getColumnModel().getColumn(i);
                if (i == 0) {

                    column111.setPreferredWidth(350); //sport column is bigger
                } else {
                    //if (i == 2) {
                        column111.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }

            jTable13.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable13MouseClicked(evt);
                }
            });
            jTable13.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                    jTable13AncestorMoved(evt);
                }
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            jTable13.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable13KeyReleased(evt);
                }
            });
            jScrollPane22.setViewportView(jTable13);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 10;
            gridBagConstraints.gridheight = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
            jPanel13.add(jScrollPane22, gridBagConstraints);

            jPanel23.setLayout(new java.awt.GridBagLayout());

            jLabel91.setText("Patient No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel91, gridBagConstraints);

            jComboBox1311.setDoubleBuffered(true);
            jComboBox1311.setMinimumSize(new java.awt.Dimension(0, 0));
            jComboBox1311.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel23.add(jComboBox1311, gridBagConstraints);

            jLabel13.setText("Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel13, gridBagConstraints);

            jTextField13.setEditable(false);
            jTextField13.setDoubleBuffered(true);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel23.add(jTextField13, gridBagConstraints);

            jLabel22.setText("Department");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel22, gridBagConstraints);

            jLabel32.setText("Patient Category");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel32, gridBagConstraints);

            jTextField22.setEditable(false);
            jTextField22.setDoubleBuffered(true);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel23.add(jTextField22, gridBagConstraints);

            jLabel41.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel41, gridBagConstraints);

            jLabel61.setText("Doctor");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel61, gridBagConstraints);

            jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel42.setLayout(new java.awt.GridBagLayout());

            jTextField92.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel42.add(jTextField92, gridBagConstraints);

            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton2.setToolTipText("Search");
            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton2ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel42.add(searchButton2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            jPanel23.add(jPanel42, gridBagConstraints);

            jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select first_name||' '||middle_name as name from pb_doctors_list  where status ilike 'acti%' order by name"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel23.add(jComboBox2, gridBagConstraints);

            jLabel12.setText("Scheme");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel12, gridBagConstraints);

            jLabel82.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel82.setText("Prescription Fee");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel82, gridBagConstraints);

            jTextField82.setEditable(false);
            jTextField82.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField82.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
            jPanel23.add(jTextField82, gridBagConstraints);

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Scheme" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel23.add(jComboBox1, gridBagConstraints);

            jPanel641.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
            jPanel641.setLayout(new java.awt.GridBagLayout());

            searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton3.setToolTipText("Search");
            searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton3ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel641.add(searchButton3, gridBagConstraints);

            jTextField14.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel641.add(jTextField14, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel23.add(jPanel641, gridBagConstraints);

            jLabel15.setText("A/C No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel15, gridBagConstraints);

            jTextField17.setEditable(false);
            jTextField17.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField17ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel23.add(jTextField17, gridBagConstraints);

            jLabel17.setText("Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel17, gridBagConstraints);

            jTextField18.setEditable(false);
            jTextField18.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField18ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel23.add(jTextField18, gridBagConstraints);

            jTextField16.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel23.add(jTextField16, gridBagConstraints);

            jLabel18.setText("Scheme Abbr.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel18, gridBagConstraints);

            jLabel19.setText("Member No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel19, gridBagConstraints);

            jTextField19.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel23.add(jTextField19, gridBagConstraints);

            jTextField20.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel23.add(jTextField20, gridBagConstraints);

            jLabel20.setText("Member Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel20, gridBagConstraints);

            jLabel23.setText("Card Balance");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel23, gridBagConstraints);

            jTextField21.setEditable(false);
            jTextField21.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField21.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel23.add(jTextField21, gridBagConstraints);

            jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct  activity as name FROM pb_activity  WHERE activity ILIKE '%Pha%' AND category_class ilike 'pli%' order by activity DESC"));
            jComboBox3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox3ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel23.add(jComboBox3, gridBagConstraints);

            jLabel3.setText("GL Code");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel23.add(jLabel3, gridBagConstraints);

            jTextField4.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 9;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel23.add(jTextField4, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jPanel23, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.gridwidth = 10;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jSeparator12, gridBagConstraints);

            jLabel532.setText("Amount");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jLabel532, gridBagConstraints);

            jTextField32.setEditable(false);
            jTextField32.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField32.setText("0.00");
            jTextField32.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField32.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel13.add(jTextField32, gridBagConstraints);

            jTextField10.setEditable(false);
            jTextField10.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            jTextField10.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 7;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            jPanel13.add(jTextField10, gridBagConstraints);

            jTextField3.setText("0.00");
            jTextField3.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField3.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 6;
            gridBagConstraints.gridy = 1;
            jPanel13.add(jTextField3, gridBagConstraints);

            jTextField1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
            jTextField1.setText("0.00");
            jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTextField1KeyReleased(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.2;
            jPanel13.add(jTextField1, gridBagConstraints);

            jLabel16.setText("Net Total");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 8;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jLabel16, gridBagConstraints);

            jTextField15.setEditable(false);
            jTextField15.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
            jTextField15.setText("0.00");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 9;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.5;
            jPanel13.add(jTextField15, gridBagConstraints);

            jLabel2.setText("Discount Amt.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            jPanel13.add(jLabel2, gridBagConstraints);

            jLabel1.setText("Discount %");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel13.add(jLabel1, gridBagConstraints);

            jTextField2.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
            jTextField2.setText("0.00");
            jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTextField2KeyReleased(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel13.add(jTextField2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 7;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 20.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
            jPanel5.add(jPanel13, gridBagConstraints);

            jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            jPanel9.setLayout(new java.awt.GridBagLayout());

            jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
            jButton12.setMnemonic('s');
            jButton12.setText("Save");
            jButton12.setToolTipText("Click here enter data");
            jButton12.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton12ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton12, gridBagConstraints);

            jButton63.setMnemonic('r');
            jButton63.setText("Remove Row");
            jButton63.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton63ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton63, gridBagConstraints);

            jButton32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
            jButton32.setMnemonic('l');
            jButton32.setText("Clear");
            jButton32.setToolTipText("Click here to clear textfields");
            jButton32.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton32ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton32, gridBagConstraints);

            jButton41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
            jButton41.setMnemonic('C');
            jButton41.setText("Close");
            jButton41.setToolTipText("Click here to close window");
            jButton41.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton41ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton41, gridBagConstraints);

            jButton54.setMnemonic('h');
            jButton54.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 8;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton54, gridBagConstraints);

            jButton121.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
            jButton121.setMnemonic('p');
            jButton121.setText("Save & Print");
            jButton121.setToolTipText("Click here enter data");
            jButton121.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton121ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton121, gridBagConstraints);

            jButton122.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
            jButton122.setMnemonic('R');
            jButton122.setText("Reprint");
            jButton122.setToolTipText("Click here enter data");
            jButton122.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton122ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton122, gridBagConstraints);

            jButton7.setMnemonic('h');
            jButton7.setText("Read Card");
            jButton7.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton7ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel9.add(jButton7, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 5.0;
            jPanel9.add(spacerPanel, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 7;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            jPanel5.add(jPanel9, gridBagConstraints);

            jTabbedPane1.addTab("Patient Billing", jPanel5);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            setBounds(0, 0, 749, 504);
        }// </editor-fold>//GEN-END:initComponents
    
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        try{
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select code from pb_activity WHERE activity ilike '"+jComboBox3.getSelectedItem()+"'");
            while (rst11.next()){
                
                jTextField4.setText(rst11.getString(1));
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed
    
    private void jSearchTable3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseEntered
// TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseEntered
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField16.setText("");
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField21.setText("");
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField19.setText("");
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField20.setText("");
        
        java.io.File xmlDocFile = null;
        
        
        xmlDocFile = new java.io.File(System.getProperty("docsdir"),"ForwardedCardData.xml");
        
        
        biz.systempartners.claims.XMLClaimFile claimFile = new biz.systempartners.claims.XMLClaimFile();
        
        claimFile.processFile(xmlDocFile);
        
        xmlDocFile = new java.io.File(System.getProperty("docsdir"),"ForwardedCardData.xml");
        
        javax.swing.JOptionPane.showMessageDialog(this, "Smart Card read successfully with identity:\nCard Number :["+claimFile.cardNumber+"] and Name : ["+claimFile.patientSurName+" "+claimFile.patientForenames+"]");
        
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField16.setText(claimFile.medicalAidCode);
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField19.setText(claimFile.medicalAidNumber);
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField20.setText(claimFile.patientSurName+" "+claimFile.patientForenames);
        com.afrisoftech.hospinventory.PatientsBillingIntfr_.jTextField21.setText(claimFile.cardBalance);
        if(jTextField16.getText().equalsIgnoreCase("")){
            jTextField19.setText("");
        }else{
            try {
                
                java.sql.Statement st1 = connectDB.createStatement();
                java.sql.ResultSet rsetTable1 = st1.executeQuery("select account_no,scheme_name,payer_name FROM ac_schemes WHERE sch_abbrev ILIKE '"+claimFile.medicalAidCode+"'");
                while (rsetTable1.next()) {
                    
                    jTextField14.setText(rsetTable1.getString(2));
                    jTextField17.setText(rsetTable1.getString(1));
                    jTextField18.setText(rsetTable1.getString(3));
                }
                jButton121.setEnabled(true);
                jButton12.setEnabled(true);
                jButton122.setEnabled(false);
                jButton7.setEnabled(false);
                //javax.swing.JOptionPane.showMessageDialog(this,"You must retrieve from smart link","Information Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            } catch(java.sql.SQLException sqlExec) {
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed
    
    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed
    
    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed
    
    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog13.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed
    
    private void jSearchTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable13MouseClicked
        jTextField14.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 1).toString());
        //jTextField18.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 2).toString());
        //jTextField17.setText(jSearchTable13.getValueAt(jSearchTable13.getSelectedRow(), 0).toString());
        
        jSearchDialog13.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable13MouseClicked
    
    private void jTextField1113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1113CaretUpdate
        if(jTextField1113.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable13.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1113.getText()+"%' order by scheme_name"));
            
            
             /*   searchRowSet11.execute("SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' order by scheme_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
              
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
              
                }));
              */
            jSearchTable13.setShowHorizontalLines(false);
            jSearchScrollPane13.setViewportView(jSearchTable13);
            
            
        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField1113CaretUpdate
    
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButton11aClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    private void searchButton11aClicked() {
        
        System.out.println("Showing dialog");
        
        jSearchDialog13.dispose();
        java.awt.Point point = this.jTextField14.getLocationOnScreen();
        
        jSearchDialog13.setSize(400,200);
        
        jSearchDialog13.setLocation(point);
        jSearchDialog13.setVisible(true);
    }
    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        if(jTextField2.getText().equalsIgnoreCase("")){
            jTextField2.setText("0.00");
            jTextField1.setText("0.00");
            
        }else{
            double discAllowed = 0.00;
            double discount = java.lang.Float.parseFloat(jTextField2.getText());
            double total = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable13, 5);
            discAllowed = java.lang.Math.round(total * (discount/100));
            jTextField1.setText(""+discAllowed+"");
            jTextField1KeyReleased(evt);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyReleased
    
    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if(jTextField1.getText().equalsIgnoreCase("")){
            
        }else{
            double discAllowed = 0;
            double discount = java.lang.Float.parseFloat(jTextField1.getText());
            double total = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable13, 5);
            
            // float total = java.lang.Float.parseFloat(jTextField10.getText());
            try{
                
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select disc_allowed from st_stock_control"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");
                
                while (rs1.next()){
                    
                    discAllowed = rs1.getFloat(1);
                }
                
            }   catch(java.sql.SQLException sq){
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                
                System.out.println(sq.getMessage());
                
            }
            if(discount > total*(discAllowed/100)){
                javax.swing.JOptionPane.showMessageDialog(this, "The discount you are giving is higher than the authorised one. \n Should be not more than [ "+total*(discAllowed/100)+" ]","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                jTextField15.setText("0.00");
                jTextField1.setText("0.00");
            }else{
                if(discount <= total*(discAllowed/100)){
                    double num_d = total - discount;
                    jTextField15.setText(""+num_d+"");
                    
                    if (num_d < 0) {
                        jTextField15.setForeground(java.awt.Color.red);
                    }else{
                        jTextField15.setForeground(java.awt.Color.blue);
                    }
                }
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyReleased
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        //this.jTextField4.setText(this.jCheckBox6.getText());        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        //  jTextField4.setText(this.jCheckBox5.getText());   // Add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed
    
    private void jButton122ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton122ActionPerformed
        double amount1 = 0.00;
        double percentage = 0.00;
        double TotalPrice = 0.00;
        double total = 0.00;
        double quantity = 0.00;
        double Total = 0.00;
        String billNo = null;
        transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String BillNo = null;
        String glAcc = null;
        // String BillNo = null;
        String code = null;
        String user = null;
        String prescNo = null;
        String glAcc2 = null;
        String chbox = null;
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to Save?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            
            //     double presc = java.lang.Double.parseDouble(jTextField8.getText());
            
            
            if (jCheckBox1.isSelected()){
                chbox = "OP";
            }else{
                if (jCheckBox2.isSelected()){
                    chbox = "WI";
                }else{
                    if (jCheckBox3.isSelected()){
                        chbox = "IP";
                    }
                }
            }
            
            String receiptNo = null;
            int k = 1;
            try {
                connectDB.setAutoCommit(false);
                
                //wait(10000);
                while(k != 0) {
                    
                    
                    if(transNo != null) {
                        k=0;
                    }
                    
                }
                connectDB.setAutoCommit(false);
                
                java.sql.Statement psq = connectDB.createStatement();
                java.sql.ResultSet rstq = psq.executeQuery("select currval('prescription_no')");
                while (rstq.next()){
                    rstq.getObject(1).toString();
                    
                    prescNo = rstq.getObject(1).toString();
                }
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                
                com.afrisoftech.txtreports.PrescriptionTxt policy = new com.afrisoftech.txtreports.PrescriptionTxt(connectDB, jTextField92.getText(),jTextField13.getText(),prescNo,jComboBox1.getSelectedItem().toString());
                
                //   BillInvoicePdf policy = new BillInvoicePdf();
                //   policy.BillInvoicePdf(connectDB,jTextField9.getText(), jTextField1.getText(),jTextField3.getText(),prescNo,jTextField5.getText(),jTable1,datePicker1.getDate());
                
                
                
                
                // }
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    sql.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton122ActionPerformed
    
    private void jButton121ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton121ActionPerformed
        double amount1 = 0.00;
        double percentage = 0.00;
        double TotalPrice = 0.00;
        double total = 0.00;
        double quantity = 0.00;
        double Total = 0.00;
        String billNo = null;
        transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String BillNo = null;
        String glAcc = null;
        // String BillNo = null;
        String code = null;
        String user = null;
        String prescNo = null;
        String glAcc2 = null;
        String chbox = null;
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to Save?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        
        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            
            
            //  double presc = java.lang.Double.parseDouble(jTextField8.getText());
            
            
            if (jCheckBox1.isSelected()){
                chbox = "OP";
            }else{
                if (jCheckBox2.isSelected()){
                    chbox = "WI";
                }else{
                    if (jCheckBox3.isSelected()){
                        chbox = "IP";
                    }
                }
            }
            
            jButton12ActionPerformed(evt);
            jButton122ActionPerformed(evt);
            /*try {
             
                connectDB.setAutoCommit(false);
             
             
                java.sql.Statement psq = connectDB.createStatement();
                java.sql.ResultSet rstq = psq.executeQuery("select currval('prescription_no')");
                while (rstq.next()){
                    rstq.getObject(1).toString();
             
                    prescNo = rstq.getObject(1).toString();
                }
             
                connectDB.commit();
                connectDB.setAutoCommit(true);
             
                com.afrisoftech.txtreports.PrescriptionTxt policy = new com.afrisoftech.txtreports.PrescriptionTxt(connectDB, jTextField92.getText(),jTextField13.getText(),prescNo,jComboBox1.getSelectedItem().toString());
             
             
             
                for (int k = 0; k < jTable13.getRowCount(); k++ ) {
                    for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                        jTable13.getModel().setValueAt(null,k,r);
                    }
                }
             
             
                // }
                //  jComboBox2.setSelectedItem(null);
            }catch(java.sql.SQLException sq){
             
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    sql.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
             
            }
             */
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton121ActionPerformed
    
    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        searchButtonClicked4();    // Add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed
    
    private void jSearchTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable4MouseClicked
        jTextField93.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 0).toString());
        
        int j = 0;
        
/*        java.lang.Object selectedGuaran = cmbox1.getSelectedItem();
        int i = jTable11.getSelectedRow();
        if (i > -1){
            if (selectedGuaran != null) {
 
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
                    java.sql.ResultSet rs = pstmt.executeQuery("select sp.selling_price::numeric from st_stock_prices sp where product = '"+selectedGuaran+"'");
                    while (rs.next()){
                        jTable11.getModel().setValueAt(rs.getObject(1),i,3);
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
 
 */
        
        
        
        jSearchDialog4.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable4MouseClicked
    
    private void jTextField115CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField115CaretUpdate
        if(jTextField115.getCaretPosition() > 0){
            jSearchTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select chq_no FROM pb_documents_register WHERE chq_no ILIKE '%"+jTextField115.getText()+"%' and used = 'false' and doc_name ilike '%pha%' order by chq_no"));
            
            /*try {
                searchRowSet4.execute("select chq_no FROM pb_documents_register WHERE chq_no ILIKE '"+jTextField115.getText()+"%' and used = 'false' and doc_name ilike '%pha%' order by chq_no");
             
                jSearchTable4.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet4, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("chq_no", "Prescription No.", false)
                    // new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Selling price", false),
                    // new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
                }));
             */
            jSearchScrollPane4.setViewportView(jSearchTable4);
            System.out.println("Cannot sort out");
            
        }  // Add your handling code here:
    }//GEN-LAST:event_jTextField115CaretUpdate
    
    private void jButton93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton93ActionPerformed
        this.jSearchDialog4.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton93ActionPerformed
    private void searchButtonClicked4() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField93.getLocationOnScreen();
        
        jSearchDialog4.setSize(400,200);
        
        jSearchDialog4.setLocation(point);
        
        jSearchDialog4.setVisible(true);
        
        
        
    }
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        javax.swing.JInternalFrame other = new ServiceAccSlipIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);            // Add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    
    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        jTextField13.setText("");
        jTextField32.setText("0.00");
        jTextField2.setText("0.00");
        jTextField1.setText("0.00");
        jTextField10.setText("0.00");
        jTextField15.setText("0.00");
        jTextField82.setText("0.00");
        jTextField21.setText("0.00");
        jTextField22.setText("");
        jTextField92.setText("");
        jTextField19.setText("");
        jTextField20.setText("");
        
        jTextField16.setText("");
        jTextField14.setText("");
        jTextField17.setText("");
        jTextField18.setText("");
        // jTextField32.setText("0.00");
        
        for (int k = 0; k < jTable13.getRowCount(); k++ ) {
            for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                jTable13.getModel().setValueAt(null,k,r);
            }
        }
        
        
        //  jTextField3.setText("0.00");// Add your handling code here:
    }//GEN-LAST:event_jButton32ActionPerformed
    
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed
    
    private void jButton63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton63ActionPerformed
        
        int rows2Delete = jTable13.getSelectedRowCount();
        
        int[] selectedRows = jTable13.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable13.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable13.getModel();
                
                defTableModel.removeRow(jTable13.getSelectedRow());
            }
        }
        
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable13, 5);
        jTextField10.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        //    jTextField15.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        jTextField15.setText(java.lang.String.valueOf(totalSum));
        // Add your handling code here:
    }//GEN-LAST:event_jButton63ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        java.util.Date toDaysDate = null;
        boolean smartcard = false;
        try {
            
            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '"+datePicker1.getDate()+"' BETWEEN period_from AND period_to");
            while (rsetf.next()){
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }
            
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            
        }
        
        if(datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)){
            javax.swing.JOptionPane.showMessageDialog(this,"You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(),"Caution Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            // jTable13.setEditingRow(-1);
            if(jTable13.isEditing()){
                jTable13.getCellEditor().stopCellEditing();
            }
            // try {
            double amount1 = 0.00;
            double percentage = 0.00;
            double TotalPrice = 0.00;
            double total = 0.00;
            double presc = 0.00;
            double Total = 0.00;
            
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            
            long dateNow = calendar.getTimeInMillis();
            
            java.sql.Date datenowSql1= new java.sql.Date(dateNow);
            
            System.out.println(datenowSql1.toString());
            
            java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
            
            System.out.println(datenowSql.toString());
            
            String billNo = null;
            transNo = null;
            String payMode = null;
            String patientAcc = null;
            String cardNo = null;
            String AccDesc = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            java.sql.Date expDate = null;
            String staffNo = null;
            String BillNo = null;
            String glAcc = null;
            // String BillNo = null;
            String code = null;
            String user = null;
            String prescNo = null;
            java.util.Date admDate=null;
            String visitid = "-";
            String costofSaleCode = null;
            String stockCode = null;
            String costofSale = null;
            String stock = null;
            String discode = null;
            String discglAcc = null;
            String invoiceNo =null;
            double discounte = java.lang.Double.parseDouble(jTextField1.getText());
            
            double sellPrice = 0.00;
            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to Save?", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
            
            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                
                // presc = java.lang.Double.parseDouble(jTextField8.getText());
                
                
                if (jCheckBox1.isSelected()){
                    chbox = "OP";
                }else{
                    if (jCheckBox2.isSelected()){
                        chbox = "WI";
                    }else{
                        if (jCheckBox3.isSelected()){
                            chbox = "IP";
                        }
                    }
                }
                
        java.sql.Savepoint registerSavePoint = null;
        try {
            connectDB.setAutoCommit(false);
            registerSavePoint = connectDB.setSavepoint("registration");
        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
        }
        
        try {
            
                    
                    if(jCheckBox1.isSelected()){
                        java.sql.Statement stmt1cz3 = connectDB.createStatement();
                        java.sql.ResultSet rset1cz3 = stmt1cz3.executeQuery("SELECT account_no,payer_name,usesmartcard FROM ac_schemes WHERE account_no  ILIKE '"+jTextField17.getText()+"'");
                        while (rset1cz3.next()){
                            smartcard = rset1cz3.getBoolean(3);
                        }
                        if(smartcard){
                            biz.systempartners.claims.PharmacyClaim claimInstance = new biz.systempartners.claims.PharmacyClaim();
                            
                            claimInstance.createXMLDoc(jTable13,connectDB);
                        }
                    }else{
                        //this for inpatient;
                    }
                    java.sql.Statement stm121x = connectDB.createStatement();
                    
                    java.sql.ResultSet rse121x = stm121x.executeQuery("select direct_rev from pb_patient_names");
                    while (rse121x.next()){
                        
                        DirectRev = rse121x.getBoolean(1);
                        
                    }
                    java.sql.Statement ps11Y = connectDB.createStatement();
                    java.sql.ResultSet rst11Y = ps11Y.executeQuery("select current_user");
                    while (rst11Y.next()){
                        user = rst11Y.getObject(1).toString();
                    }
                    java.sql.Statement stm122x = connectDB.createStatement();
                    java.sql.ResultSet rse122x = stm122x.executeQuery("select code,activity from pb_activity where activity_category ='EDS'");
                    while (rse122x.next()){
                        
                        discode = rse122x.getObject(1).toString();
                        discglAcc = rse122x.getObject(2).toString();
                    }
                    java.sql.Statement psq = connectDB.createStatement();
                    java.sql.ResultSet rstq = psq.executeQuery("select nextval('prescription_no')");
                    while (rstq.next()){
                        rstq.getObject(1).toString();
                        
                        prescNo = rstq.getObject(1).toString();
                        
                    }
                    System.out.println(prescNo);
                    java.sql.Statement stmtz = connectDB.createStatement();
                    
                    if (jCheckBox3.isSelected()){
                        System.out.println("This is the visit ID "+visitid);
                        // if (jComboBox1.getSelectedItem().toString().equals("Scheme")){
                        java.sql.Statement stm1 = connectDB.createStatement();
                        java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no,adm_date from hp_inpatient_register where patient_no ='"+jTextField92.getText()+"'");
                        while (rse1.next()){
                            
                            //                payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                            cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                            scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                            cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                            isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                            expDate = rse1.getDate(6);
                            staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                            admDate = rse1.getDate(8);
                        }
                        //  }
                   /* System.out.println(staffNo);
                    java.sql.Statement stm12 = connectDB.createStatement();
                    java.sql.ResultSet rse12 = stm12.executeQuery("selectm_date adm_date from hp_inpatient_register where patient_no ='"+jTextField92.getText()+"'");
                    while (rse12.next()){
                        admDate = rse12.getDate(1);
                    }*/
                        System.out.println(admDate);
                        // if (exp.before(date)){
                        if (this.datePicker1.getDate().before(admDate)){
                            javax.swing.JOptionPane.showMessageDialog(this, "Admission date is : " +admDate +" CHECK billing date","Date Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        }else{
                            java.sql.Statement stm126 = connectDB.createStatement();
                            java.sql.ResultSet rse126 = stm126.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                            while (rse126.next()){
                                
                                patientAcc = rse126.getObject(1).toString();
                                AccDesc = rse126.getObject(2).toString();
                            }
                            System.out.println(AccDesc);
                            java.sql.Statement ps = connectDB.createStatement();
                            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                            while (rst.next()){
                                rst.getObject(1).toString();
                                
                                transNo = rst.getObject(1).toString();
                            }
                            System.out.println(transNo);
                            java.sql.Statement ps11 = connectDB.createStatement();
                            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
                            while (rst11.next()){
                                rst11.getObject(1).toString();
                                
                                billNo = rst11.getObject(1).toString();
                                //    user = rst11.getObject(2).toString();
                            }
                            System.out.println(user);
                            java.sql.Statement stm122 = connectDB.createStatement();
                            java.sql.ResultSet rse122 = stm122.executeQuery("select code,activity from pb_activity where activity_category ='IP'");
                            while (rse122.next()){
                                
                                code = rse122.getObject(1).toString();
                                glAcc = rse122.getObject(2).toString();
                            }
                            
                            
                            
                            
                            
                            for (int i = 0; i < jTable13.getRowCount(); i++){
                                if (jTable13.getModel().getValueAt(i,0) != null){
                                    
                                    java.sql.Statement pst21c = connectDB.createStatement();
                                    java.sql.ResultSet rs11c = pst21c.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+jTable13.getValueAt(i,6).toString()+"'");
                                    while (rs11c.next()){
                                        costofSaleCode = rs11c.getObject(1).toString();
                                        stockCode = rs11c.getObject(2).toString();
                                    }
                                    java.sql.Statement pst211c = connectDB.createStatement();
                                    java.sql.ResultSet rs111c = pst211c.executeQuery("select activity from pb_activity where code = '"+costofSaleCode+"'");
                                    while (rs111c.next()){
                                        costofSale = rs111c.getObject(1).toString();
                                        
                                    }
                                    java.sql.Statement pst2111c = connectDB.createStatement();
                                    java.sql.ResultSet rs1111c = pst2111c.executeQuery("select activity from pb_activity where code = '"+stockCode+"'");
                                    while (rs1111c.next()){
                                        stock = rs1111c.getObject(1).toString();
                                    }
                                    
                                    
                                    presc = java.lang.Double.parseDouble(jTextField82.getText());
                                    
                                    Total = java.lang.Double.parseDouble(jTextField32.getText());
                                    if (Total>presc){
                                        amount1 = java.lang.Double.parseDouble(jTable13.getValueAt(i, 5).toString());
                                        
                                        percentage = (amount1/Total)*100;
                                        
                                        TotalPrice = ((percentage/100)*presc) + amount1;
                                    }else{
                                        amount1 = java.lang.Double.parseDouble(jTable13.getValueAt(i, 5).toString());
                                        
                                        //  percentage = (amount1/Total)*100;
                                        
                                        TotalPrice = amount1;
                                    }
                                    
                                    java.sql.Statement pstB = connectDB.createStatement();
                                    java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units from st_stock_prices where product = '"+jTable13.getModel().getValueAt(i,0)+"'");
                                    
                                    while (rsB.next()){
                                        price = rsB.getDouble(1);
                                    glAcc2 = rsB.getObject(2).toString();
                                    // units = rsB.getString(2);
                                    qty = java.lang.Double.parseDouble(jTable13.getValueAt(i, 1).toString());
                                    sellPrice = java.lang.Double.parseDouble(jTable13.getValueAt(i, 3).toString());
                                    }
                                    amount = price*qty;
                                    if (amount > 10000){
                                        amount = (qty*sellPrice)*0.67;
                                    }else{
                                        
                                        amount = amount;
                                    }
                                    
                                    System.out.println(price);
                                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                    pstmt.setString(1,jTextField92.getText());
                                    pstmt.setObject(2,jTable13.getValueAt(i,0).toString());
                                    pstmt.setString(3,jTextField22.getText());
                                    pstmt.setString(4,jComboBox1.getSelectedItem().toString());
                                    pstmt.setString(5,transNo);
                                    pstmt.setString(7,scheme);
                                    pstmt.setString(6,cardNo);
                                    pstmt.setString(8,cardName);
                                    pstmt.setString(9,isurer);
                                    pstmt.setDate(10,expDate);
                                    pstmt.setObject(11,jComboBox2.getSelectedItem().toString());
                                    // pstmt.setObject(12,jTable13.getValueAt(i,5).toString());
                                    pstmt.setDouble(12,TotalPrice);
                                    pstmt.setString(13,"00");
                                    pstmt.setString(14,datePicker1.getDate().toString());
                                    pstmt.setObject(15,patientAcc);
                                    pstmt.setString(16,jTextField42.getText());
                                    pstmt.setObject(17,jTable13.getValueAt(i,1).toString());
                                    pstmt.setObject(18,staffNo);
                                    pstmt.setBoolean(19,false);
                                    pstmt.setString(20,"Billing");
                                    pstmt.setBoolean(21,false);
                                    pstmt.setString(22,AccDesc);
                                    pstmt.setString(23,visitid);
                                    pstmt.setString(24,user);
                                    pstmt.setString(25,prescNo);
                                    pstmt.setString(26,"IP");
                                    pstmt.setString(27,"'now'");
                                    pstmt.setString(28,visitid);
                                    pstmt.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                    pstmt2.setObject(1,jTable13.getModel().getValueAt(i,6));
                                    pstmt2.setString(2,glAcc);
                                    pstmt2.setString(3,jTextField92.getText());
                                    pstmt2.setString(4,jTextField13.getText());
                                    pstmt2.setString(5,"");
                                    pstmt2.setString(6,cardNo);
                                    pstmt2.setString(7,cardName);
                                    pstmt2.setString(8,"IP");
                                    pstmt2.setString(9,isurer);
                                    pstmt2.setString(10,jComboBox1.getSelectedItem().toString());
                                    pstmt2.setString(11,"");
                                    pstmt2.setString(12,"");
                                    pstmt2.setString(13,"");
                                    pstmt2.setString(14,jTable13.getValueAt(i,0).toString());
                                    pstmt2.setString(15,"Revenue");
                                    pstmt2.setString(16,"0.00");
                                    pstmt2.setDouble(17,TotalPrice);
                                    // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                                    pstmt2.setString(18,datePicker1.getDate().toString());
                                    pstmt2.setString(19,transNo);
                                    pstmt2.setString(20,"false");
                                    pstmt2.setString(21,"false");
                                    pstmt2.setString(22,"false");
                                    pstmt2.setString(23,user);
                                    pstmt2.executeUpdate();
                                    
                                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    pstmt1.setString(1,jTextField92.getText());
                                    pstmt1.setString(2,jTextField13.getText());
                                    pstmt1.setObject(3,jTable13.getValueAt(i,1).toString());
                                    pstmt1.setDouble(4,TotalPrice);
                                    pstmt1.setObject(5,jTable13.getValueAt(i,0).toString());
                                    pstmt1.setObject(7,jTable13.getValueAt(i,3).toString());
                                    pstmt1.setObject(8,jTable13.getValueAt(i,6).toString());
                                    pstmt1.setBoolean(6,true);
                                    pstmt1.setString(9,prescNo);
                                    pstmt1.setObject(10,jComboBox2.getSelectedItem().toString());
                                    pstmt1.setString(11,"true");
                                    pstmt1.setString(12,glAcc2);
                                    pstmt1.setString(13,datePicker1.getDate().toString());
                                    pstmt1.setString(14,jTextField42.getText());
                                    pstmt1.setString(15,"IP");
                                    pstmt1.setString(16,jComboBox1.getSelectedItem().toString());
                                    pstmt1.setString(17,"-");
                                    pstmt1.setDouble(18,TotalPrice-amount1);
                                    pstmt1.setString(19,user);
                                    pstmt1.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                    
                                    
                                    pstmt1a.setString(1,null);
                                    pstmt1a.setObject(3,jTable13.getValueAt(i,0));
                                    pstmt1a.setString(2,jTextField42.getText());
                                    pstmt1a.setString(4,null);
                                    pstmt1a.setDouble(5,amount);
                                    pstmt1a.setObject(6,"00");
                                    pstmt1a.setObject(7,glAcc2);
                                    pstmt1a.setObject(8,"");
                                    pstmt1a.setString(9,null);
                                    pstmt1a.setString(10,null);
                                    pstmt1a.setString(11,"00");
                                    pstmt1a.setString(12,"00");
                                    pstmt1a.setString(13,"00");
                                    if(jTextField13.getText().equals("")){
                                        javax.swing.JOptionPane.showMessageDialog(this, "Enter patient","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        pstmt1a.setString(14,jTextField13.getText());
                                    }
                                    
                                    pstmt1a.setString(15,userName);
                                    
                                    pstmt1a.setString(16,"");
                                    pstmt1a.setString(17,null);
                                    pstmt1a.setString(18,datePicker1.getDate().toString());
                                    pstmt1a.setString(19,jTextField42.getText());
                                    pstmt1a.setString(20,"Issuing");
                                    pstmt1a.setObject(21,"00");
                                    pstmt1a.setString(23,stockCode);
                                    pstmt1a.setObject(22,"00");
                                    pstmt1a.setString(24,"");
                                    pstmt1a.setString(25,jTextField42.getText());
                                    pstmt1a.setString(26,transNo);
                                    pstmt1a.setObject(27,jTable13.getValueAt(i,1));
                                    pstmt1a.setString(28,user);
                                    pstmt1a.executeUpdate();
                                    
                                    
                                    java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2a.setObject(1,costofSaleCode);
                                    pstmt2a.setObject(2,costofSale);
                                    pstmt2a.setString(3,jTextField92.getText());
                                    pstmt2a.setString(4,jTextField13.getText());
                                    pstmt2a.setString(5,"");
                                    pstmt2a.setString(6,"");
                                    pstmt2a.setString(7,"");
                                    pstmt2a.setString(8,"");
                                    pstmt2a.setString(9,"");
                                    pstmt2a.setString(10,"");
                                    pstmt2a.setString(11,"");
                                    pstmt2a.setString(12,"");
                                    pstmt2a.setString(13,"");
                                    pstmt2a.setString(14,jTable13.getValueAt(i,0).toString());
                                    pstmt2a.setString(15,"Issuing");
                                    pstmt2a.setDouble(16,amount);
                                    pstmt2a.setObject(17,"00");
                                    pstmt2a.setString(18,datePicker1.getDate().toString());
                                    pstmt2a.setString(19,transNo);
                                    pstmt2a.setBoolean(20,false);
                                    pstmt2a.setBoolean(21,false);
                                    pstmt2a.setBoolean(22,false);
                                    pstmt2a.setString(23,user);
                                    pstmt2a.executeUpdate();
                                    
                                    
                                    
                                    java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                    pstmt33.setObject(2,jTable13.getValueAt(i,0).toString());
                                    pstmt33.setString(12,units);
                                    pstmt33.setString(4,jTable13.getValueAt(i,1).toString());
                                    pstmt33.setObject(1,jTextField42.getText());
                                    pstmt33.setString(3,"0");
                                    pstmt33.setObject(7,"0");
                                    pstmt33.setString(5,jTable13.getValueAt(i,3).toString());
                                    //pstmt33.setString(6,jTable13.getValueAt(i,5).toString());
                                    pstmt33.setDouble(6,TotalPrice);
                                    pstmt33.setString(10,datePicker1.getDate().toString());
                                    pstmt33.setString(8,transNo);
                                    pstmt33.setObject(9,jComboBox2.getSelectedItem().toString());
                                    //pstmt33.setString(11,code);
                                    pstmt33.setString(13,jTextField42.getText());
                                    pstmt33.setString(11,user);
                                    pstmt33.setString(14,jTextField92.getText()+ " "+jTextField13.getText());
                                    pstmt33.setDouble(15,price*qty);
                                    pstmt33.executeUpdate();
                                    
                              /*  double quantity = Double.parseDouble(jTable13.getModel().getValueAt(i, 1).toString());
                               
                               
                                java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_stock_prices SET balance =balance - "+new java.lang.Double(quantity)+" WHERE product = '"+jTable13.getValueAt(i,0).toString()+"' and department ilike '"+jTextField42.getText()+"'");
                                pstmt31.executeUpdate();*/
                                    
                                }
                            }
                            
                            if(discounte > 0){
                                java.sql.PreparedStatement pstmtu = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmtu.setString(1,jTextField92.getText());
                                pstmtu.setObject(2,"Discount");
                                pstmtu.setString(3,jTextField22.getText());
                                pstmtu.setString(4,jComboBox1.getSelectedItem().toString());
                                pstmtu.setString(5,transNo);
                                pstmtu.setString(7,scheme);
                                pstmtu.setString(6,cardNo);
                                pstmtu.setString(8,cardName);
                                pstmtu.setString(9,isurer);
                                pstmtu.setDate(10,expDate);
                                pstmtu.setObject(11,jComboBox2.getSelectedItem().toString());
                                // pstmt.setObject(12,jTable13.getValueAt(i,5).toString());
                                pstmtu.setString(13,jTextField1.getText());
                                pstmtu.setString(12,"00");
                                pstmtu.setString(14,datePicker1.getDate().toString());
                                pstmtu.setObject(15,patientAcc);
                                pstmtu.setString(16,jTextField42.getText());
                                pstmtu.setObject(17,"1");
                                pstmtu.setObject(18,staffNo);
                                pstmtu.setBoolean(19,false);
                                pstmtu.setString(20,"Billing");
                                pstmtu.setBoolean(21,false);
                                pstmtu.setString(22,AccDesc);
                                pstmtu.setString(23,visitid);
                                pstmtu.setString(24,user);
                                pstmtu.setString(25,prescNo);
                                pstmtu.setString(26,"IP");
                                pstmtu.setString(27,"'now'");
                                pstmtu.setString(28,visitid);
                                pstmtu.executeUpdate();
                                
                                
                                java.sql.PreparedStatement pstmt2v = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                pstmt2v.setString(1,discode);
                                pstmt2v.setString(2,discglAcc);
                                pstmt2v.setString(3,jTextField92.getText());
                                pstmt2v.setString(4,jTextField13.getText());
                                pstmt2v.setString(5,"");
                                pstmt2v.setString(6,cardNo);
                                pstmt2v.setString(7,cardName);
                                pstmt2v.setString(8,"IP");
                                pstmt2v.setString(9,isurer);
                                pstmt2v.setString(10,jComboBox1.getSelectedItem().toString());
                                pstmt2v.setString(11,"");
                                pstmt2v.setString(12,"");
                                pstmt2v.setString(13,"");
                                pstmt2v.setString(14,"Discount");
                                pstmt2v.setString(15,"Revenue");
                                pstmt2v.setString(16,jTextField1.getText());
                                pstmt2v.setDouble(17,0.00);
                                // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                                pstmt2v.setString(18,datePicker1.getDate().toString());
                                pstmt2v.setString(19,transNo);
                                pstmt2v.setString(20,"false");
                                pstmt2v.setString(21,"false");
                                pstmt2v.setString(22,"false");
                                pstmt2v.setString(23,user);
                                pstmt2v.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt1pz = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt1pz.setString(1,jTextField92.getText());
                                pstmt1pz.setString(2,jTextField13.getText());
                                pstmt1pz.setObject(3,"-1");
                                pstmt1pz.setDouble(4,discounte*-1);
                                //  pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                                pstmt1pz.setObject(5,"Discount");
                                pstmt1pz.setObject(7,jTextField3.getText());
                                pstmt1pz.setObject(8,code);
                                pstmt1pz.setBoolean(6,false);
                                pstmt1pz.setString(9,prescNo);
                                pstmt1pz.setObject(10,jComboBox2.getSelectedItem().toString());
                                pstmt1pz.setString(11,"true");
                                pstmt1pz.setString(12,discglAcc);
                                pstmt1pz.setString(13,datePicker1.getDate().toString());
                                pstmt1pz.setString(14,jTextField42.getText());
                                pstmt1pz.setString(15,"OP");
                                pstmt1pz.setString(16,jComboBox1.getSelectedItem().toString());
                                pstmt1pz.setString(17,"-");
                                pstmt1pz.setDouble(18,0.00);
                                pstmt1pz.setString(19,user);
                                pstmt1pz.executeUpdate();
                            }
                            
                        }
                    }else{
                        
                        if(this.jCheckBox1.isSelected()){
                            
                            if (jComboBox1.getSelectedItem().toString().equals("Scheme")){
                                java.sql.Statement stm1q = connectDB.createStatement();
                                java.sql.ResultSet rse1 = stm1q.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_patient_register where patient_no ='"+jTextField92.getText()+"'");
                                
                                
                                while (rse1.next()){
                                    
                                    payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                                    cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                                    scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                                    cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                                    isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                                    expDate = rse1.getDate(6);
                                    staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                                }
                            }
                        }else{
                            
                        }
                        System.out.println(staffNo);
                        
                        java.sql.Statement stm126 = connectDB.createStatement();
                        java.sql.ResultSet rse126 = stm126.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                        while (rse126.next()){
                            
                            patientAcc = rse126.getObject(1).toString();
                            AccDesc = rse126.getObject(2).toString();
                        }
                        System.out.println(AccDesc);
                        //  connectDB.setAutoCommit(false);
                        java.sql.Statement ps = connectDB.createStatement();
                        java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                        while (rst.next()){
                            rst.getObject(1).toString();
                            
                            transNo = rst.getObject(1).toString();
                        }
                        if(this.jCheckBox2.isSelected()){
                            jTextField92.setText("WK"+prescNo);
                        }
                        if(this.jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                            if(jCheckBox2.isSelected()){
                                java.sql.Statement pss1 = connectDB.createStatement();
                                java.sql.ResultSet rss1 = pss1.executeQuery("select 'O'||(nextval('pinvoice_no_seq'))");
                                while (rss1.next()){
                                    invoiceNo = rss1.getObject(1).toString();
                                }
                            }
                            
                        }
                        System.out.println(transNo);
                        
                        System.out.println(user);
                        java.sql.Statement stm122 = connectDB.createStatement();
                        java.sql.ResultSet rse122 = stm122.executeQuery("select code,activity from pb_activity where activity_category ='IP'");
                        while (rse122.next()){
                            
                            code = rse122.getObject(1).toString();
                            glAcc = rse122.getObject(2).toString();
                        }
                        System.out.println(glAcc);
                        
                        for (int i = 0; i < jTable13.getRowCount(); i++){
                            if (jTable13.getModel().getValueAt(i,0) != null){
                                
                                java.sql.Statement pst21c = connectDB.createStatement();
                                java.sql.ResultSet rs11c = pst21c.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+jTable13.getValueAt(i,6).toString()+"'");
                                while (rs11c.next()){
                                    costofSaleCode = rs11c.getObject(1).toString();
                                    stockCode = rs11c.getObject(2).toString();
                                }
                                java.sql.Statement pst211c = connectDB.createStatement();
                                java.sql.ResultSet rs111c = pst211c.executeQuery("select activity from pb_activity where code = '"+costofSaleCode+"'");
                                while (rs111c.next()){
                                    costofSale = rs111c.getObject(1).toString();
                                    
                                }
                                java.sql.Statement pst2111c = connectDB.createStatement();
                                java.sql.ResultSet rs1111c = pst2111c.executeQuery("select activity from pb_activity where code = '"+stockCode+"'");
                                while (rs1111c.next()){
                                    stock = rs1111c.getObject(1).toString();
                                }
                                
                                
                                presc = java.lang.Double.parseDouble(jTextField82.getText());
                                
                                Total = java.lang.Double.parseDouble(jTextField32.getText());
                                if (Total>presc){
                                    amount1 = java.lang.Double.parseDouble(jTable13.getValueAt(i, 5).toString());
                                    
                                    percentage = (amount1/Total)*100;
                                    
                                    TotalPrice = ((percentage/100)*presc) + amount1;
                                }else{
                                    amount1 = java.lang.Double.parseDouble(jTable13.getValueAt(i, 5).toString());
                                    
                                    //  percentage = (amount1/Total)*100;
                                    
                                    TotalPrice = amount1;
                                }
                                java.sql.Statement stm121 = connectDB.createStatement();
                                java.sql.ResultSet rse121 = stm121.executeQuery("select units from st_stock_item where description ='"+jTable13.getModel().getValueAt(i,0).toString()+"'");
                                while (rse121.next()){
                                    
                                    glAcc2 = rse121.getObject(1).toString();
                                System.out.println(glAcc2);
                                }
                                java.sql.Statement pstB = connectDB.createStatement();
                                java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units from st_stock_prices where product = '"+jTable13.getModel().getValueAt(i,0)+"'");
                                
                                while (rsB.next()){
                                    price = rsB.getDouble(1);
                                // units = rsB.getString(2);
                                qty = java.lang.Double.parseDouble(jTable13.getValueAt(i, 1).toString());
                                sellPrice = java.lang.Double.parseDouble(jTable13.getValueAt(i, 3).toString());
                                }
                                amount = price*qty;
                                if (amount > 10000){
                                    amount = (qty*sellPrice)*0.67;
                                }else{
                                    
                                    amount = amount;
                                }
                                
                                System.out.println(price);
                                if(this.jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                                    if(jCheckBox2.isSelected()){
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                                        
                                        
                                        pstmt.setString(1,jTextField92.getText());
                                        pstmt.setObject(2,jTable13.getValueAt(i,0).toString());
                                        pstmt.setString(3,jTextField22.getText());
                                        pstmt.setString(4,jComboBox1.getSelectedItem().toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setDate(10,expDate);
                                        pstmt.setObject(11,jComboBox2.getSelectedItem().toString());
                                        pstmt.setDouble(12,TotalPrice);
                                        pstmt.setString(13,"00");
                                        pstmt.setString(14,datePicker1.getDate().toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,jTextField42.getText());
                                        pstmt.setObject(17,jTable13.getValueAt(i,1).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,invoiceNo);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,prescNo);
                                        pstmt.setString(26,"OP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                        pstmt2.setObject(1,jTable13.getModel().getValueAt(i,6));
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTextField92.getText());
                                        pstmt2.setString(4,jTextField13.getText());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        pstmt2.setString(8,"OP");
                                        pstmt2.setString(9,isurer);
                                        pstmt2.setString(10,jComboBox1.getSelectedItem().toString());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable13.getValueAt(i,0).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setString(16,"0.00");
                                        pstmt2.setDouble(17,TotalPrice);
                                        // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                                        pstmt2.setString(18,datePicker1.getDate().toString());
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setString(20,"false");
                                        pstmt2.setString(21,"false");
                                        pstmt2.setString(22,"false");
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1.setString(1,jTextField92.getText());
                                        pstmt1.setString(2,jTextField13.getText());
                                        pstmt1.setObject(3,jTable13.getValueAt(i,1).toString());
                                        pstmt1.setDouble(4,TotalPrice);
                                        //  pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                                        pstmt1.setObject(5,jTable13.getValueAt(i,0).toString());
                                        pstmt1.setObject(7,jTable13.getValueAt(i,3).toString());
                                        pstmt1.setObject(8,jTable13.getValueAt(i,6).toString());
                                        pstmt1.setBoolean(6,false);
                                        pstmt1.setString(9,prescNo);
                                        pstmt1.setObject(10,jComboBox2.getSelectedItem().toString());
                                        pstmt1.setString(11,"true");
                                        pstmt1.setString(12,glAcc2);
                                        pstmt1.setString(13,datePicker1.getDate().toString());
                                        pstmt1.setString(14,jTextField42.getText());
                                        pstmt1.setString(15,"OP");
                                        pstmt1.setString(16,jComboBox1.getSelectedItem().toString());
                                        pstmt1.setString(17,"-");
                                        pstmt1.setDouble(18,TotalPrice-amount1);
                                        pstmt1.setString(19,user);
                                        pstmt1.executeUpdate();
                                    }else{
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                        pstmt.setString(1,jTextField92.getText());
                                        pstmt.setObject(2,jTable13.getValueAt(i,0).toString());
                                        pstmt.setString(3,jTextField22.getText());
                                        pstmt.setString(4,jComboBox1.getSelectedItem().toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setDate(10,expDate);
                                        pstmt.setObject(11,jComboBox2.getSelectedItem().toString());
                                        // pstmt.setObject(12,jTable13.getValueAt(i,5).toString());
                                        pstmt.setDouble(12,TotalPrice);
                                        pstmt.setString(13,"00");
                                        pstmt.setString(14,datePicker1.getDate().toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,jTextField42.getText());
                                        pstmt.setObject(17,jTable13.getValueAt(i,1).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,prescNo);
                                        pstmt.setString(26,"OP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                        pstmt2.setObject(1,jTable13.getModel().getValueAt(i,6));
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTextField92.getText());
                                        pstmt2.setString(4,jTextField13.getText());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        pstmt2.setString(8,"OP");
                                        pstmt2.setString(9,isurer);
                                        pstmt2.setString(10,jComboBox1.getSelectedItem().toString());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable13.getValueAt(i,0).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setString(16,"0.00");
                                        pstmt2.setDouble(17,TotalPrice);
                                        // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                                        pstmt2.setString(18,datePicker1.getDate().toString());
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setString(20,"false");
                                        pstmt2.setString(21,"false");
                                        pstmt2.setString(22,"false");
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1.setString(1,jTextField92.getText());
                                        pstmt1.setString(2,jTextField13.getText());
                                        pstmt1.setObject(3,jTable13.getValueAt(i,1).toString());
                                        pstmt1.setDouble(4,TotalPrice);
                                        //  pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                                        pstmt1.setObject(5,jTable13.getValueAt(i,0).toString());
                                        pstmt1.setObject(7,jTable13.getValueAt(i,3).toString());
                                        pstmt1.setObject(8,jTable13.getValueAt(i,6).toString());
                                        pstmt1.setBoolean(6,false);
                                        pstmt1.setString(9,prescNo);
                                        pstmt1.setObject(10,jComboBox2.getSelectedItem().toString());
                                        pstmt1.setString(11,"true");
                                        pstmt1.setString(12,glAcc2);
                                        pstmt1.setString(13,datePicker1.getDate().toString());
                                        pstmt1.setString(14,jTextField42.getText());
                                        pstmt1.setString(15,"OP");
                                        pstmt1.setString(16,jComboBox1.getSelectedItem().toString());
                                        pstmt1.setString(17,"-");
                                        pstmt1.setDouble(18,TotalPrice-amount1);
                                        pstmt1.setString(19,user);
                                        pstmt1.executeUpdate();
                                        
                                    }
                                    
                                }else{
                                    if(DirectRev){
                                        
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1.setString(1,jTextField92.getText());
                                        pstmt1.setString(2,jTextField13.getText());
                                        pstmt1.setObject(3,jTable13.getValueAt(i,1).toString());
                                        pstmt1.setDouble(4,TotalPrice);
                                        //  pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                                        pstmt1.setObject(5,jTable13.getValueAt(i,0).toString());
                                        pstmt1.setObject(7,jTable13.getValueAt(i,3).toString());
                                        pstmt1.setObject(8,jTable13.getValueAt(i,6).toString());
                                        pstmt1.setBoolean(6,true);
                                        pstmt1.setString(9,prescNo);
                                        pstmt1.setObject(10,jComboBox2.getSelectedItem().toString());
                                        pstmt1.setString(11,"true");
                                        pstmt1.setString(12,glAcc2);
                                        pstmt1.setString(13,datePicker1.getDate().toString());
                                        pstmt1.setString(14,jTextField42.getText());
                                        pstmt1.setString(15,"OP");
                                        pstmt1.setString(16,jComboBox1.getSelectedItem().toString());
                                        pstmt1.setString(17,"-");
                                        pstmt1.setDouble(18,TotalPrice-amount1);
                                        pstmt1.setString(19,user);
                                        pstmt1.executeUpdate();
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                        
                                        pstmt.setString(1,jTextField92.getText());
                                        pstmt.setObject(2,jTable13.getValueAt(i,0).toString());
                                        pstmt.setString(3,jTextField22.getText());
                                        pstmt.setString(4,jComboBox1.getSelectedItem().toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setDate(10,expDate);
                                        pstmt.setObject(11,jComboBox2.getSelectedItem().toString());
                                        // pstmt.setObject(12,jTable13.getValueAt(i,5).toString());
                                        pstmt.setDouble(12,TotalPrice);
                                        pstmt.setString(13,"00");
                                        pstmt.setString(14,datePicker1.getDate().toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,jTextField42.getText());
                                        pstmt.setObject(17,jTable13.getValueAt(i,1).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,prescNo);
                                        pstmt.setString(26,"OP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                        pstmt2.setObject(1,jTable13.getModel().getValueAt(i,6));
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTextField92.getText());
                                        pstmt2.setString(4,jTextField13.getText());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        pstmt2.setString(8,"OP");
                                        pstmt2.setString(9,isurer);
                                        pstmt2.setString(10,jComboBox1.getSelectedItem().toString());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable13.getValueAt(i,0).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setString(16,"0.00");
                                        pstmt2.setDouble(17,TotalPrice);
                                        // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                                        pstmt2.setString(18,datePicker1.getDate().toString());
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setString(20,"false");
                                        pstmt2.setString(21,"false");
                                        pstmt2.setString(22,"false");
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                    }else{
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                        pstmt1.setString(1,jTextField92.getText());
                                        pstmt1.setString(2,jTextField13.getText());
                                        pstmt1.setObject(3,jTable13.getValueAt(i,1).toString());
                                        pstmt1.setDouble(4,TotalPrice);
                                        //  pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                                        pstmt1.setObject(5,jTable13.getValueAt(i,0).toString());
                                        pstmt1.setObject(7,jTable13.getValueAt(i,3).toString());
                                        pstmt1.setObject(8,jTable13.getValueAt(i,6).toString());
                                        pstmt1.setBoolean(6,false);
                                        pstmt1.setString(9,prescNo);
                                        pstmt1.setObject(10,jComboBox2.getSelectedItem().toString());
                                        pstmt1.setString(11,"true");
                                        pstmt1.setString(12,glAcc2);
                                        pstmt1.setString(13,datePicker1.getDate().toString());
                                        pstmt1.setString(14,jTextField42.getText());
                                        pstmt1.setString(15,"OP");
                                        pstmt1.setString(16,jComboBox1.getSelectedItem().toString());
                                        pstmt1.setString(17,"-");
                                        pstmt1.setDouble(18,TotalPrice-amount1);
                                        pstmt1.setString(19,user);
                                        pstmt1.executeUpdate();
                                    }
                                    
                                }
                                
                                java.sql.Statement pst2111cx = connectDB.createStatement();
                                java.sql.ResultSet rs1111cx = pst2111cx.executeQuery("select activity from pb_activity where code = '"+stockCode+"'");
                                while (rs1111cx.next()){
                                    stock = rs1111cx.getObject(1).toString();
                                }
                                java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                
                                
                                pstmt1a.setString(1,null);
                                pstmt1a.setObject(3,jTable13.getValueAt(i,0));
                                pstmt1a.setString(2,jTextField42.getText());
                                pstmt1a.setString(4,null);
                                pstmt1a.setDouble(5,amount);
                                pstmt1a.setObject(6,"00");
                                pstmt1a.setObject(7,glAcc2);
                                pstmt1a.setObject(8,"");
                                pstmt1a.setString(9,null);
                                pstmt1a.setString(10,null);
                                pstmt1a.setString(11,"00");
                                pstmt1a.setString(12,"00");
                                pstmt1a.setString(13,"00");
                                if(jTextField13.getText().equals("")){
                                    javax.swing.JOptionPane.showMessageDialog(this, "Enter patient","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                    pstmt1a.setString(14,jTextField13.getText());
                                }
                                
                                pstmt1a.setString(15,userName);
                                
                                pstmt1a.setString(16,"");
                                
                                pstmt1a.setString(17,null);
                                pstmt1a.setString(18,datePicker1.getDate().toString());
                                pstmt1a.setString(19,jTextField42.getText());
                                pstmt1a.setString(20,"Issuing");
                                pstmt1a.setObject(21,"00");
                                pstmt1a.setString(23,stockCode);
                                pstmt1a.setObject(22,"00");
                                pstmt1a.setString(24,"");
                                pstmt1a.setString(25,jTextField42.getText());
                                pstmt1a.setString(26,transNo);
                                pstmt1a.setObject(27,jTable13.getValueAt(i,1));
                                pstmt1a.setString(28,userName);
                                pstmt1a.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                pstmt2a.setObject(1,costofSaleCode);
                                pstmt2a.setObject(2,costofSale);
                                pstmt2a.setString(3,jTextField92.getText());
                                pstmt2a.setString(4,jTextField13.getText());
                                pstmt2a.setString(5,"");
                                pstmt2a.setString(6,"");
                                pstmt2a.setString(7,"");
                                pstmt2a.setString(8,"");
                                pstmt2a.setString(9,"");
                                pstmt2a.setString(10,"");
                                pstmt2a.setString(11,"");
                                pstmt2a.setString(12,"");
                                pstmt2a.setString(13,"");
                                pstmt2a.setString(14,jTable13.getValueAt(i,0).toString());
                                pstmt2a.setString(15,"Issuing");
                                pstmt2a.setDouble(16,amount);
                                pstmt2a.setObject(17,"00");
                                pstmt2a.setString(18,datePicker1.getDate().toString());
                                pstmt2a.setString(19,transNo);
                                pstmt2a.setBoolean(20,false);
                                pstmt2a.setBoolean(21,false);
                                pstmt2a.setBoolean(22,false);
                                pstmt2a.setString(23,userName);
                                pstmt2a.executeUpdate();
                                // }
                                
                                
                                
                                java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt33.setObject(2,jTable13.getValueAt(i,0).toString());
                                pstmt33.setString(12,units);
                                pstmt33.setString(4,jTable13.getValueAt(i,1).toString());
                                pstmt33.setObject(1,jTextField42.getText());
                                pstmt33.setString(3,"0");
                                pstmt33.setObject(7,"0");
                                pstmt33.setString(5,jTable13.getValueAt(i,3).toString());
                                //pstmt33.setString(6,jTable13.getValueAt(i,5).toString());
                                pstmt33.setDouble(6,TotalPrice);
                                pstmt33.setString(10,datePicker1.getDate().toString());
                                pstmt33.setString(8,transNo);
                                pstmt33.setObject(9,jComboBox2.getSelectedItem().toString());
                                //pstmt33.setString(11,code);
                                pstmt33.setString(13,jTextField42.getText());
                                pstmt33.setString(11,user);
                                pstmt33.setString(14,jTextField92.getText()+ " "+jTextField13.getText());
                                pstmt33.setDouble(15,price*qty);
                                pstmt33.executeUpdate();
                                
                                double quantity = Double.parseDouble(jTable13.getModel().getValueAt(i, 1).toString());
                                
                                
                                
                            }
                        }
                        if(discounte > 0 && jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Cash")){
                            java.sql.PreparedStatement pstmt2nx = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            pstmt2nx.setString(1,code);
                            pstmt2nx.setString(2,glAcc);
                            pstmt2nx.setString(3,jTextField92.getText());
                            pstmt2nx.setString(4,jTextField13.getText());
                            pstmt2nx.setString(5,"");
                            pstmt2nx.setString(6,cardNo);
                            pstmt2nx.setString(7,cardName);
                            pstmt2nx.setString(8,"IP");
                            pstmt2nx.setString(9,isurer);
                            pstmt2nx.setString(10,jComboBox1.getSelectedItem().toString());
                            pstmt2nx.setString(11,"");
                            pstmt2nx.setString(12,"");
                            pstmt2nx.setString(13,"");
                            pstmt2nx.setString(14,"Discount");
                            pstmt2nx.setString(15,"Revenue");
                            pstmt2nx.setString(17,jTextField1.getText());
                            pstmt2nx.setDouble(16,0.00);
                            // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                            pstmt2nx.setString(18,datePicker1.getDate().toString());
                            pstmt2nx.setString(19,transNo);
                            pstmt2nx.setString(20,"false");
                            pstmt2nx.setString(21,"false");
                            pstmt2nx.setString(22,"false");
                            pstmt2nx.setString(23,user);
                            pstmt2nx.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt2nv = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                            pstmt2nv.setString(1,discode);
                            pstmt2nv.setString(2,discglAcc);
                            pstmt2nv.setString(3,jTextField92.getText());
                            pstmt2nv.setString(4,jTextField13.getText());
                            pstmt2nv.setString(5,"");
                            pstmt2nv.setString(6,cardNo);
                            pstmt2nv.setString(7,cardName);
                            pstmt2nv.setString(8,"IP");
                            pstmt2nv.setString(9,isurer);
                            pstmt2nv.setString(10,jComboBox1.getSelectedItem().toString());
                            pstmt2nv.setString(11,"");
                            pstmt2nv.setString(12,"");
                            pstmt2nv.setString(13,"");
                            pstmt2nv.setString(14,"Discount");
                            pstmt2nv.setString(15,"Revenue");
                            pstmt2nv.setString(16,jTextField1.getText());
                            pstmt2nv.setDouble(17,0.00);
                            // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                            pstmt2nv.setString(18,datePicker1.getDate().toString());
                            pstmt2nv.setString(19,transNo);
                            pstmt2nv.setString(20,"false");
                            pstmt2nv.setString(21,"false");
                            pstmt2nv.setString(22,"false");
                            pstmt2nv.setString(23,user);
                            pstmt2nv.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt1p = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt1p.setString(1,jTextField92.getText());
                            pstmt1p.setString(2,jTextField13.getText());
                            pstmt1p.setObject(3,"-1");
                            pstmt1p.setDouble(4,discounte*-1);
                            //  pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                            pstmt1p.setObject(5,"Discount");
                            pstmt1p.setObject(7,jTextField3.getText());
                            pstmt1p.setObject(8,code);
                            pstmt1p.setBoolean(6,false);
                            pstmt1p.setString(9,prescNo);
                            pstmt1p.setObject(10,jComboBox2.getSelectedItem().toString());
                            pstmt1p.setString(11,"true");
                            pstmt1p.setString(12,discglAcc);
                            pstmt1p.setString(13,datePicker1.getDate().toString());
                            pstmt1p.setString(14,jTextField42.getText());
                            pstmt1p.setString(15,"OP");
                            pstmt1p.setString(16,jComboBox1.getSelectedItem().toString());
                            pstmt1p.setString(17,"-");
                            pstmt1p.setDouble(18,0.00);
                            pstmt1p.setString(19,user);
                            pstmt1p.executeUpdate();
                        }else{
                            if(discounte > 0){
                                java.sql.PreparedStatement pstmtb = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmtb.setString(1,jTextField92.getText());
                                pstmtb.setObject(2,"Discount");
                                pstmtb.setString(3,jTextField22.getText());
                                pstmtb.setString(4,jComboBox1.getSelectedItem().toString());
                                pstmtb.setString(5,transNo);
                                pstmtb.setString(7,scheme);
                                pstmtb.setString(6,cardNo);
                                pstmtb.setString(8,cardName);
                                pstmtb.setString(9,isurer);
                                pstmtb.setDate(10,expDate);
                                pstmtb.setObject(11,jComboBox2.getSelectedItem().toString());
                                // pstmt.setObject(12,jTable13.getValueAt(i,5).toString());
                                pstmtb.setString(13,jTextField1.getText());
                                pstmtb.setString(12,"00");
                                pstmtb.setString(14,datePicker1.getDate().toString());
                                pstmtb.setObject(15,patientAcc);
                                pstmtb.setString(16,jTextField42.getText());
                                pstmtb.setObject(17,"1");
                                pstmtb.setObject(18,staffNo);
                                pstmtb.setBoolean(19,false);
                                pstmtb.setString(20,"Billing");
                                pstmtb.setBoolean(21,false);
                                pstmtb.setString(22,AccDesc);
                                pstmtb.setString(23,visitid);
                                pstmtb.setString(24,user);
                                pstmtb.setString(25,prescNo);
                                pstmtb.setString(26,"IP");
                                pstmtb.setString(27,"'now'");
                                pstmtb.setString(28,visitid);
                                pstmtb.executeUpdate();
                                
                                
                                java.sql.PreparedStatement pstmt2n = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
                                pstmt2n.setString(1,discode);
                                pstmt2n.setString(2,discglAcc);
                                pstmt2n.setString(3,jTextField92.getText());
                                pstmt2n.setString(4,jTextField13.getText());
                                pstmt2n.setString(5,"");
                                pstmt2n.setString(6,cardNo);
                                pstmt2n.setString(7,cardName);
                                pstmt2n.setString(8,"IP");
                                pstmt2n.setString(9,isurer);
                                pstmt2n.setString(10,jComboBox1.getSelectedItem().toString());
                                pstmt2n.setString(11,"");
                                pstmt2n.setString(12,"");
                                pstmt2n.setString(13,"");
                                pstmt2n.setString(14,"Discount");
                                pstmt2n.setString(15,"Revenue");
                                pstmt2n.setString(16,jTextField1.getText());
                                pstmt2n.setDouble(17,0.00);
                                // pstmt2.setObject(17,jTable13.getValueAt(i,5).toString());
                                pstmt2n.setString(18,datePicker1.getDate().toString());
                                pstmt2n.setString(19,transNo);
                                pstmt2n.setString(20,"false");
                                pstmt2n.setString(21,"false");
                                pstmt2n.setString(22,"false");
                                pstmt2n.setString(23,user);
                                pstmt2n.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt1px = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt1px.setString(1,jTextField92.getText());
                                pstmt1px.setString(2,jTextField13.getText());
                                pstmt1px.setObject(3,"-1");
                                pstmt1px.setDouble(4,discounte*-1);
                                //  pstmt1.setObject(4,jTable13.getValueAt(i,5).toString());
                                pstmt1px.setObject(5,"Discount");
                                pstmt1px.setObject(7,jTextField3.getText());
                                pstmt1px.setObject(8,code);
                                pstmt1px.setBoolean(6,false);
                                pstmt1px.setString(9,prescNo);
                                pstmt1px.setObject(10,jComboBox2.getSelectedItem().toString());
                                pstmt1px.setString(11,"true");
                                pstmt1px.setString(12,discglAcc);
                                pstmt1px.setString(13,datePicker1.getDate().toString());
                                pstmt1px.setString(14,jTextField42.getText());
                                pstmt1px.setString(15,"OP");
                                pstmt1px.setString(16,jComboBox1.getSelectedItem().toString());
                                pstmt1px.setString(17,"-");
                                pstmt1px.setDouble(18,0.00);
                                pstmt1px.setString(19,user);
                                pstmt1px.executeUpdate();
                            }
                        }
                        if(this.jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                            if(jCheckBox2.isSelected()){
                                String payer = null;
                                String acNo = null;
                                String actCode1 = null;
                                String actNames1 = null;
                                
                                java.sql.Statement pss11x = connectDB.createStatement();
                                java.sql.ResultSet rsts1x = pss11x.executeQuery("select account_no,payer_name from ac_schemes where scheme_name = '"+jTextField14.getText()+"'");
                                while (rsts1x.next()){
                                    acNo = rsts1x.getObject(1).toString();
                                    payer = rsts1x.getObject(2).toString();
                                    
                                }
                                
                                java.sql.Statement pss11 = connectDB.createStatement();
                                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity from pb_activity where activity_category ='DA'");
                                while (rsts1.next()){
                                    actCode1 = rsts1.getObject(1).toString();
                                    actNames1 = rsts1.getObject(2).toString();
                                }
                                java.sql.PreparedStatement pstmtb = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmtb.setString(1,jTextField92.getText());
                                pstmtb.setObject(2,"Invoice");
                                pstmtb.setString(3,jTextField22.getText());
                                pstmtb.setString(4,jComboBox1.getSelectedItem().toString());
                                pstmtb.setString(5,transNo);
                                pstmtb.setString(7,scheme);
                                pstmtb.setString(6,cardNo);
                                pstmtb.setString(8,cardName);
                                pstmtb.setString(9,isurer);
                                pstmtb.setDate(10,expDate);
                                pstmtb.setObject(11,jComboBox2.getSelectedItem().toString());
                                // pstmt.setObject(12,jTable13.getValueAt(i,5).toString());
                                pstmtb.setString(13,jTextField15.getText());
                                pstmtb.setString(12,"00");
                                pstmtb.setString(14,datePicker1.getDate().toString());
                                pstmtb.setObject(15,patientAcc);
                                pstmtb.setString(16,jTextField42.getText());
                                pstmtb.setObject(17,"1");
                                pstmtb.setObject(18,staffNo);
                                pstmtb.setBoolean(19,false);
                                pstmtb.setString(20,"Receipts");
                                pstmtb.setBoolean(21,false);
                                pstmtb.setString(22,AccDesc);
                                pstmtb.setString(23,invoiceNo);
                                pstmtb.setString(24,user);
                                pstmtb.setString(25,prescNo);
                                pstmtb.setString(26,"IP");
                                pstmtb.setString(27,"'now'");
                                pstmtb.setString(28,visitid);
                                pstmtb.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                pstmt.setObject(1,actCode1);
                                pstmt.setString(4,jTextField92.getText());
                                pstmt.setObject(3,jTextField13.getText());
                                pstmt.setString(2,payer);
                                pstmt.setString(5,jTextField14.getText());
                                pstmt.setString(6,"");
                                pstmt.setString(7,acNo);
                                pstmt.setString(8,"");
                                pstmt.setString(9,"");
                                pstmt.setString(10,"");
                                pstmt.setString(11,transNo);
                                pstmt.setString(12,"Raise Invoice");
                                pstmt.setString(13,jTextField15.getText());
                                pstmt.setDouble(14,0.00);
                                pstmt.setDate(15,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt.setObject(16,invoiceNo);
                                pstmt.setString(17,actNames1);
                                pstmt.setBoolean(18,true);
                                pstmt.setBoolean(19,true);
                                pstmt.setString(20,userName);
                                pstmt.setString(21,"");
                                pstmt.setString(22,jTextField15.getText());
                                pstmt.setBoolean(23,false);
                                pstmt.executeUpdate();
                                
                                javax.swing.JOptionPane.showMessageDialog(this,"Insert Invoice No. "+invoiceNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                com.afrisoftech.reports.FinalInvoiceByinvPdf policy = new com.afrisoftech.reports.FinalInvoiceByinvPdf();
                                policy.FinalInvoiceByinvPdf(connectDB,invoiceNo,invoiceNo);
                            }
                        }
                        
                    }
                    
                    
                    javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully "+transNo,"Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    
                    
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    
                    // BillInvoicePdf policy = new BillInvoicePdf();
                    //  policy.BillInvoicePdf(connectDB,jTextField92.getText(), jTextField13.getText(),jTextField32.getText(),prescNo,jComboBox1.getSelectedItem().toString(),jTable13,datePicker1.getDate());
                    
                    jTextField32.setText("0.00");
                    jTextField10.setText("0.00");
                    for (int k = 0; k < jTable13.getRowCount(); k++ ) {
                        for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                            jTable13.getModel().setValueAt(null,k,r);
                        }
                    }
                    
                    
                    
                    
                    //  jComboBox2.setSelectedItem(null);
                }catch(java.sql.SQLException sq){
                    
                    try {
                        connectDB.rollback(registerSavePoint);
                    }catch (java.sql.SQLException sql){
                        javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    
                }
            }
            
        }
     /*   } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      
      
        }
      */
        // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jTable13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable13KeyReleased
        boolean neg = false;
        if (jTable13.getModel().getValueAt(jTable13.getSelectedRow(), 1) != null) {
            if (jTable13.getSelectedColumn() == jTable13.getSelectedColumn()) {
                try{
                    
                    java.sql.Statement pstmt1 = connectDB.createStatement();
                    java.sql.ResultSet rs1 = pstmt1.executeQuery("select neg_allow from st_stock_control"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");
                    
                    while (rs1.next()){
                        
                        neg = rs1.getBoolean(1);
                    }
                    
                }   catch(java.sql.SQLException sq){
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    
                    System.out.println(sq.getMessage());
                    
                }
                
                float bal = java.lang.Float.parseFloat(jTable13.getValueAt(jTable13.getSelectedRow(), 2).toString());
                float qty = java.lang.Float.parseFloat(jTable13.getValueAt(jTable13.getSelectedRow(), 1).toString());
                float price = java.lang.Float.parseFloat(jTable13.getValueAt(jTable13.getSelectedRow(), 3).toString());
                if(neg == false && bal >= qty){
                    float total = qty*price;
                    jTable13.setValueAt(total, jTable13.getSelectedRow(), 5);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable13, 5);
                    jTextField10.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    jTextField15.setText(java.lang.String.valueOf(totalSum));
                }else{
                    if(neg == false && bal < qty){
                        javax.swing.JOptionPane.showMessageDialog(this, "You are not allowed to dispense more than the available stock","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        jTable13.setValueAt(0, jTable13.getSelectedRow(), 5);
                        jTable13.setValueAt(0, jTable13.getSelectedRow(), 1);
                        
                        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable13, 5);
                        jTextField10.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                        jTextField15.setText(java.lang.String.valueOf(totalSum));
                    }
                }
                if(neg == true){
                    float total = qty*price;
                    jTable13.setValueAt(total, jTable13.getSelectedRow(), 5);
                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable13, 5);
                    jTextField10.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    // jTextField15.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
                    jTextField15.setText(java.lang.String.valueOf(totalSum));
                }
            }
            
        }
        /*double resFloat = 0.00;
        if (jTable13.getValueAt(jTable13.getSelectedRow(), jTable13.getSelectedColumn()) != null) {
         
            float floatCol2 = java.lang.Float.parseFloat(jTable13.getValueAt(jTable13.getSelectedRow(), 1).toString());
         
            float floatCol3 = java.lang.Float.parseFloat(jTable13.getValueAt(jTable13.getSelectedRow(), 3).toString());
         
            float resVal = floatCol2 * floatCol3;
         
            if (jTable13.getValueAt(jTable13.getSelectedRow(), 4) != null) {
         
                float floatCol4 = java.lang.Float.parseFloat(jTable13.getValueAt(jTable13.getSelectedRow(), 4).toString());
         
                resVal = (floatCol2 * floatCol3) - floatCol4;
                //  resFloat = resVal;
         
                jTable13.setValueAt(new java.lang.Float(resVal), jTable13.getSelectedRow(), 5);
         
         
                for (int i = 0; i < jTable13.getRowCount(); i++) {
         
                    if (jTable1.getModel().getValueAt(i, 1) != null) {//toString().compareToIgnoreCase(null) {
         
                        resFloat = resFloat + Double.parseDouble(jTable13.getValueAt(i, 5).toString());
         
         
                        // totalSum = floatTotal + resFloat;
         
                    }
                }
         
                this.tableModelTableChanged();
         
            }else
         
                jTable13.setValueAt(new java.lang.Float(resVal), jTable13.getSelectedRow(), 5);
            for (int i = 0; i < jTable13.getRowCount(); i++) {
         
                if (jTable13.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
         
                    resFloat = resFloat + Double.parseDouble(jTable13.getValueAt(i, 5).toString());
         
         
                }
            }
         
            this.tableModel1TableChanged();
        }
         
         */
        // Add your handling code here:
    }//GEN-LAST:event_jTable13KeyReleased
    
    private void jTable13AncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable13AncestorMoved
        // Add your handling code here:
    }//GEN-LAST:event_jTable13AncestorMoved
    
    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        this.jSearchDialog3.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed
    
    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        if(jTextField114.getCaretPosition() > 0){
            jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select product,round(selling_price, 0) as selling_price, '"+jTextField4.getText()+"' FROM st_stock_prices WHERE product ILIKE '%"+jTextField114.getText()+"%' AND department =  '"+jTextField42.getText()+"' order by product"));
            
            //jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select product,round(selling_price, 0) as selling_price, gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField114.getText()+"%' AND department =  '"+jTextField42.getText()+"' order by product"));
            
            jSearchScrollPane3.setViewportView(jSearchTable3);
            System.out.println("Cannot sort out");
            
        }// Add your handling code here:
    }//GEN-LAST:event_jTextField114CaretUpdate
    
    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        this.jTextField114.setText("");
        jTable13.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(),0),jTable13.getSelectedRow(), 0);
        jTable13.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(),1),jTable13.getSelectedRow(), 3);
        jTable13.setValueAt(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(),2),jTable13.getSelectedRow(), 6);
        jTable13.setValueAt(new java.lang.Double(0), jTable13.getSelectedRow(), 4);
        
        
        int j = 0;
        
/*        java.lang.Object selectedGuaran = cmbox1.getSelectedItem();
        int i = jTable11.getSelectedRow();
        if (i > -1){
            if (selectedGuaran != null) {
 
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
                    java.sql.ResultSet rs = pstmt.executeQuery("select sp.selling_price::numeric from st_stock_prices sp where product = '"+selectedGuaran+"'");
                    while (rs.next()){
                        jTable11.getModel().setValueAt(rs.getObject(1),i,3);
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
 
 */
        double Qty= 0.00;
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.Statement pstmt1 = connectDB.createStatement();
            
            java.sql.ResultSet rs1 = pstmt1.executeQuery("select count(product) from st_stock_prices sc where product = '"+jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(),0)+"' and department = '"+jTextField42.getText()+"'");
            while (rs1.next()){
                j = rs1.getInt(1);
            }
            if (j > 0){
                
                java.sql.ResultSet rs = pstmt.executeQuery("select sum(qty) from stock_balance_qty where description = '"+jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(),0)+"' and department ilike '"+jTextField42.getText()+"%' AND dates <= '"+datePicker1.getDate()+"'");
                while (rs.next()){
                    
                    Qty = rs.getDouble(1);
                    //  jTable1.setValueAt(Qty,jTable1.getSelectedRow(),2);
                    jTable13.setValueAt(Qty,jTable13.getSelectedRow(),2);
                    
                }
            } else {
                jTable13.setValueAt("0.00",jTable13.getSelectedRow(),2);
            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
        
        jSearchDialog3.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked
    private void cmbox13MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane22.getLocationOnScreen();
        jSearchDialog3.setSize(400,200);
        jSearchDialog3.setLocation(point);
        jSearchDialog3.setVisible(true);
        
        
    }
    private void jTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable13MouseClicked
        if (jTable13.getSelectedColumn() == 0) {
            
            this.cmbox13MouseClicked();
        }   // Add your handling code here:
    }//GEN-LAST:event_jTable13MouseClicked
    
    private void jButton52121ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52121ActionPerformed
        this.jSearchDialog2121.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton52121ActionPerformed
    
    private void jSearchTable2121MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2121MouseClicked
        jTextField32.setText("0.00");
        jTextField92.setText("");
        
        
        jTextField13.setText("");
        jTextField22.setText("");
        
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        double outstanding = 0.00;
        boolean appLimit = false;
        String memberno = null;
        int interval = 0;
        smartcard = false;
        // jTextField32.setText("0.00");
        
        for (int k = 0; k < jTable13.getRowCount(); k++ ) {
            for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                jTable13.getModel().setValueAt(null,k,r);
            }
        }
        
        
        jTextField92.setText(jSearchTable2121.getValueAt(jSearchTable2121.getSelectedRow(), 0).toString());
        jTextField13.setText(jSearchTable2121.getValueAt(jSearchTable2121.getSelectedRow(), 1).toString());
        jSearchDialog2121.dispose();
        
        int j = 0;
        if(jCheckBox3.isSelected()){
            try {
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,description,member_no from hp_inpatient_register where patient_no  = '"+this.jTextField92.getText().toString()+"'");
                while (rset1.next()){
                    jTextField22.setText(rset1.getObject(1).toString());
                    jComboBox1.setSelectedItem(rset1.getObject(2).toString());
                    jTextField14.setText(dbObject.getDBObject(rset1.getObject(3), "-").toString());
                    memberno = dbObject.getDBObject(rset1.getObject(4), "-").toString();
                    System.out.println(memberno);
                }
                
                if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                    
                    java.sql.Statement stmt1cz3 = connectDB.createStatement();
                    java.sql.ResultSet rset1cz3 = stmt1cz3.executeQuery("SELECT account_no,payer_name,usesmartcard FROM ac_schemes WHERE scheme_name  ILIKE '"+jTextField14.getText()+"'");
                    while (rset1cz3.next()){
                        jTextField17.setText(rset1cz3.getObject(1).toString());
                        jTextField18.setText(rset1cz3.getObject(2).toString());
                        smartcard = rset1cz3.getBoolean(3);
                    }
                    if(jCheckBox1.isSelected()){
                        if(smartcard){
                            jButton12.setEnabled(false);
                            jButton121.setEnabled(false);
                            jButton122.setEnabled(false);
                            jButton7.setEnabled(true);
                            javax.swing.JOptionPane.showMessageDialog(this,"You must FORWARD from smart link".toUpperCase(),"Information Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            
                        }
                    }
                    java.sql.Statement stmt1cz = connectDB.createStatement();
                    java.sql.ResultSet rset1cz = stmt1cz.executeQuery("select applylimit from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                    while (rset1cz.next()){
                        appLimit = rset1cz.getBoolean(1);
                    }
                    System.out.println(appLimit);
                    if(appLimit){
                        ageingSeries = new com.afrisoftech.timeseries.YearyAgeing(1, datePicker1.getDate());
                        
                        java.lang.Object[][] rangeDates = ageingSeries.getAgeingDateSeries();
                        
                        // ageingDates = ageingSeries.getAgeingDateSeries();
                        
                        // double columnTotals[] = new double[rangeDates.length];
                        for (int x = 0; x < rangeDates.length; x++) {
                            System.out.println(rangeDates[x]);
                            try {
                                
                                java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
                                com.afrisoftech.lib.DateFormatter dateFormatter = new com.afrisoftech.lib.DateFormatter(dateFormat.parse(rangeDates[x][0].toString().trim()), "yyyy");
                                
                                java.lang.String monthString = dateFormatter.getDateString();
                                
                                interval = x;
                                
                            } catch(java.text.ParseException prs) {
                                prs.printStackTrace();
                            }
                        }
                        java.sql.Statement stmt1c = connectDB.createStatement();
                        java.sql.ResultSet rset1c = stmt1c.executeQuery("select iplimit from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                        while (rset1c.next()){
                            limit = rset1c.getDouble(1);
                        }
                        for (int t = 0; t < rangeDates.length; t++) {
                            java.sql.Statement stmt1cx = connectDB.createStatement();
                            System.out.println("Dates between : "+rangeDates[t][0]+" AND "+rangeDates[t][1]);
                            java.sql.ResultSet rset1cx = stmt1cx.executeQuery("select sum(balance) from ac_debtors where member_no  ='"+memberno+"' AND date between '"+rangeDates[t][0]+"' AND '"+rangeDates[t][1]+"' AND payee ilike '"+jTextField10.getText()+"'");
                            while (rset1cx.next()){
                                bal = rset1cx.getDouble(1);
                                System.out.println(bal);
                            }
                        }
                        outstanding = limit-bal;
                        // jTextField8.setText(java.lang.String.valueOf(outstanding));
                        if(outstanding >= limit){
                            javax.swing.JOptionPane.showMessageDialog(this, "The patient has exausted the member limit","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else{
                            
                        }
                    }
                }
                
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
            jSearchDialog2121.dispose();
        }else{
            try {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,description,card_no from hp_patient_register where patient_no  = '"+jTextField92.getText()+"'");
                while (rset1.next()){
                    jTextField22.setText(rset1.getObject(1).toString());
                    jComboBox1.setSelectedItem(rset1.getObject(2).toString());
                    jTextField14.setText(dbObject.getDBObject(rset1.getObject(3), "-").toString());
                    memberno = dbObject.getDBObject(rset1.getObject(4), "-").toString();
                    System.out.println(memberno);
                }
                
                if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Scheme")){
                    java.sql.Statement stmt1cz3 = connectDB.createStatement();
                    java.sql.ResultSet rset1cz3 = stmt1cz3.executeQuery("SELECT account_no,payer_name,usesmartcard FROM ac_schemes WHERE scheme_name  ILIKE '"+jTextField14.getText()+"'");
                    while (rset1cz3.next()){
                        jTextField17.setText(rset1cz3.getObject(1).toString());
                        jTextField18.setText(rset1cz3.getObject(2).toString());
                        smartcard = rset1cz3.getBoolean(3);
                    }
                    if(jCheckBox1.isSelected()){
                        if(smartcard){
                            jButton12.setEnabled(false);
                            jButton121.setEnabled(false);
                            jButton122.setEnabled(false);
                            jButton7.setEnabled(true);
                            javax.swing.JOptionPane.showMessageDialog(this,"You must FORWARD from smart link".toUpperCase(),"Information Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            
                        }
                    }
                    java.sql.Statement stmt1cz = connectDB.createStatement();
                    java.sql.ResultSet rset1cz = stmt1cz.executeQuery("select limit_amount from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                    while (rset1cz.next()){
                        appLimit = rset1cz.getBoolean(1);
                    }
                    System.out.println(appLimit);
                    if(appLimit){
                        ageingSeries = new com.afrisoftech.timeseries.YearyAgeing(1, datePicker1.getDate());
                        
                        java.lang.Object[][] rangeDates = ageingSeries.getAgeingDateSeries();
                        
                        // ageingDates = ageingSeries.getAgeingDateSeries();
                        
                        // double columnTotals[] = new double[rangeDates.length];
                        for (int x = 0; x < rangeDates.length; x++) {
                            System.out.println(rangeDates[x]);
                            try {
                                
                                java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
                                com.afrisoftech.lib.DateFormatter dateFormatter = new com.afrisoftech.lib.DateFormatter(dateFormat.parse(rangeDates[x][0].toString().trim()), "yyyy");
                                
                                java.lang.String monthString = dateFormatter.getDateString();
                                
                                interval = x;
                                
                            } catch(java.text.ParseException prs) {
                                prs.printStackTrace();
                            }
                        }
                        java.sql.Statement stmt1c = connectDB.createStatement();
                        java.sql.ResultSet rset1c = stmt1c.executeQuery("select iplimit from hp_schemestaff where staff_no  ='"+memberno+"' and applylimit = true");
                        while (rset1c.next()){
                            limit = rset1c.getDouble(1);
                        }
                        for (int t = 0; t < rangeDates.length; t++) {
                            java.sql.Statement stmt1cx = connectDB.createStatement();
                            System.out.println("Dates between : "+rangeDates[t][0]+" AND "+rangeDates[t][1]);
                            java.sql.ResultSet rset1cx = stmt1cx.executeQuery("select sum(balance) from ac_debtors where member_no  ='"+memberno+"' AND date between '"+rangeDates[t][0]+"' AND '"+rangeDates[t][1]+"' AND payee ilike '"+jTextField10.getText()+"'");
                            while (rset1cx.next()){
                                bal = rset1cx.getDouble(1);
                                System.out.println(bal);
                            }
                        }
                        outstanding = limit-bal;
                        // jTextField8.setText(java.lang.String.valueOf(outstanding));
                        if(outstanding >= limit){
                            javax.swing.JOptionPane.showMessageDialog(this, "The patient has exausted the member limit","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        }else{
                            
                        }
                    }
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }
        
        try {
            // int j = 0;
            java.sql.Statement stmt = connectDB.createStatement();
            
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(patient_no) FROM hp_pharmacy where patient_no  ='"+jTextField92.getText()+"' and paid = false");
            
            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0){
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(amount) from hp_pharmacy where patient_no  ='"+jTextField92.getText()+"' and paid = false");
                while (rset1.next()){
                    jTextField10.setText(rset1.getObject(1).toString());
                    //jTextField5.setText(rset1.getObject(2).toString());
                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        this.populateTable1(this.jTextField92.getText());
        
        
        
// Add your handling code here:
    }//GEN-LAST:event_jSearchTable2121MouseClicked
    
    private void jTextField113121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113121CaretUpdate
        if(this.jCheckBox3.isSelected() && this.jCheckBox4.isSelected()){
            if(jTextField113121.getCaretPosition() < 2){
                
                System.out.println("Nothing");
            }else{
                jSearchTable2121.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where name ILIKE '%"+jTextField113121.getText()+"%' order by name"));
                
                
              /*
              try {
                    //  searchRowSet2121.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113121.getText()+"%' order by second_name");
                    searchRowSet2121.execute("SELECT patient_no, name from inpatient_list where name ILIKE '"+jTextField113121.getText()+"%' order by name");
               
               
                    jSearchTable2121.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2121, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                    }));
               */
                jSearchTable2121.setShowHorizontalLines(false);
                jSearchScrollPane2121.setViewportView(jSearchTable2121);
                
            }
        }else{
            
            if(this.jCheckBox1.isSelected() && this.jCheckBox4.isSelected()){
                if(jTextField113121.getCaretPosition()<2){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable2121.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from patient_select where name ILIKE '%"+jTextField113121.getText()+"%' order by name"));
                    
                    
              /*
              try {
                    //  searchRowSet2121.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113121.getText()+"%' order by second_name");
                    searchRowSet2121.execute("SELECT patient_no, name from inpatient_list where name ILIKE '"+jTextField113121.getText()+"%' order by name");
               
               
                    jSearchTable2121.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2121, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                    }));
               */
                    jSearchTable2121.setShowHorizontalLines(false);
                    jSearchScrollPane2121.setViewportView(jSearchTable2121);
                    
                }
                
            }else{
                if(this.jCheckBox3.isSelected() && this.jCheckBox31.isSelected()){
                    if(jTextField113121.getCaretPosition() < 2){
                        
                        System.out.println("Nothing");
                    }else{
                        jSearchTable2121.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where patient_no ILIKE '%"+jTextField113121.getText()+"%' order by patient_no"));
                        
                   /*
                    try {
                        // searchRowSet2121.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField113121.getText()+"%' order by second_name");
                        searchRowSet2121.execute("SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113121.getText()+"%' order by patient_no");
                    
                    
                        jSearchTable2121.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2121, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        }));
                    */
                        jSearchTable2121.setShowHorizontalLines(false);
                        jSearchScrollPane2121.setViewportView(jSearchTable2121);
                        
                        
                        
                    }
                }else{
                    
                    if(this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()){
                        if(jTextField113121.getCaretPosition() < 2){
                            
                            System.out.println("Nothing");
                        }else{
                            jSearchTable2121.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from patient_select where patient_no ILIKE '%"+jTextField113121.getText()+"%' order by patient_no"));
                            
                   /*
                    try {
                        // searchRowSet2121.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField113121.getText()+"%' order by second_name");
                        searchRowSet2121.execute("SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113121.getText()+"%' order by patient_no");
                    
                    
                        jSearchTable2121.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2121, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        }));
                    */
                            jSearchTable2121.setShowHorizontalLines(false);
                            jSearchScrollPane2121.setViewportView(jSearchTable2121);
                            
                            
                            
                        }
                        
                    }else{
                        if(this.jCheckBox2.isSelected()){
                            if(jTextField113121.getCaretPosition() < 2){
                                
                                System.out.println("Nothing");
                            }else{
                                //  jSearchTable2121.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from patient_select where patient_no ILIKE '%"+jTextField113121.getText()+"%' order by patient_no"));
                                jSearchTable2121.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct(patient_no),(patient_name) as name from hp_pharmacy where patient_name ILIKE '%"+jTextField113121.getText()+"%' AND (patient_no ilike 'wk%') order by patient_name"));
                                
                   /*
                    try {
                        // searchRowSet2121.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField113121.getText()+"%' order by second_name");
                        searchRowSet2121.execute("SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113121.getText()+"%' order by patient_no");
                    
                    
                        jSearchTable2121.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2121, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        }));
                    */
                                jSearchTable2121.setShowHorizontalLines(false);
                                jSearchScrollPane2121.setViewportView(jSearchTable2121);
                                
                                
                                
                            }
                        }
                    }
                }
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113121CaretUpdate
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton2121Clicked(); // Add your handling code here:
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButton2121Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        
        jSearchDialog2121.setSize(400,200);
        
        jSearchDialog2121.setLocation(point);
        
        jSearchDialog2121.setVisible(true);
    }
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        //jPanel1.setVisible(false);
        jPanel13.setVisible(true);
        // jPanel11.setVisible(false);
        this.jTextField13.setEditable(false);
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select store_name from st_stores where store_code = 'IP'");
            
            while (rs.next()){
                jTextField42.setText(rs.getObject(1).toString());
                // jTextField2.setText(rs.getObject(2).toString());
                
            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
        //jPanel11.setVisible(true)// Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jButton5212ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5212ActionPerformed
        this.jSearchDialog212.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton5212ActionPerformed
    
    private void jSearchTable212MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable212MouseClicked
        //  jTextField5821.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
/*        jTextField912.setText(jSearchTable212.getValueAt(jSearchTable212.getSelectedRow(), 0).toString());
 
 
        int j = 0;
        try {
 
            java.sql.Statement pstmt12 = connectDB.createStatement();
            java.sql.ResultSet rs12 = pstmt12.executeQuery("select count(patient_name) from hp_pharmacy WHERE patient_name ='"+jSearchTable212.getValueAt(jSearchTable212.getSelectedRow(),0)+"' AND paid = true AND collected = false");
            while (rs12.next()){
                j = rs12.getInt(1);
            }
 
            if (j > 0) {
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select sum(amount) as value from hp_pharmacy WHERE patient_name ='"+jSearchTable212.getValueAt(jSearchTable212.getSelectedRow(),0)+"' AND paid = true AND collected = false");
 
 
                while (rs1.next()){
                    jTextField1111.setText(rs1.getObject(1).toString());
 
                }
 
                //crset1.setCommand("select service,dosage,units,selling_price,debit as value from drug_collection_view WHERE patient_no ='"+jComboBox11.getSelectedItem().toString()+"'");
      /*          crset1.setCommand("select description,quantity,units,price,amount as value from hp_pharmacy WHERE patient_name ='"+jSearchTable212.getValueAt(jSearchTable212.getSelectedRow(),0)+"' AND paid = true AND collected = false");
 
                crset1.setConnectionSource(pConnDB);
                try {
 
                    crset1.execute();
 
                    // crset2.setExecuteOnLoad(true);
                    jTable111.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("description", "Item Desc.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("units", "Units", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("price", "Price per Item", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("value", "Value KShs", true)
 
 
                    }));
                    jScrollPane11.setViewportView(jTable111);
 
 
            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }
        this.populateTable111(this.jTextField912.getText());
 
        jSearchDialog212.dispose();
 */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable212MouseClicked
  /*  private void populateTable111(java.lang.String patient_no) {
        int j = 0;
        int i = 0;
   
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
   
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = true AND collected = false");
   
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
   
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select description,units,quantity,price,amount as value,gl_code from hp_pharmacy WHERE patient_name ='"+patient_no+"' AND paid = true AND collected = false and date_prescribed = current_date");
   
                while (rsetTable1.next()) {
   
                    System.out.println("Working at table row "+i);
                    jTable111.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable111.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable111.setValueAt(rsetTable1.getObject(3), i, 3);
                    jTable111.setValueAt(rsetTable1.getObject(4), i, 4);
                    jTable111.setValueAt(rsetTable1.getObject(5), i, 5);
                    jTable111.setValueAt(rsetTable1.getObject(6), i, 6);
   
                    i++;
   
                }
            }
        } catch(java.sql.SQLException sqlExec) {
   
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
   
        }
    }
   */
    private void jTextField11312CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11312CaretUpdate
        
        jSearchTable212.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct(patient_name) as name from hp_pharmacy where patient_name ILIKE '%"+jTextField11312.getText()+"%' AND (patient_no IS NULL OR  patient_no ='') and paid = true and collected = false order by patient_name"));
        
       /* try {
        
            searchRowSet212.execute("SELECT distinct(patient_name) as name from hp_pharmacy where patient_name ILIKE '"+jTextField11312.getText()+"%' AND (patient_no IS NULL OR  patient_no ='') and paid = true and collected = false order by patient_name");
        
            jSearchTable212.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet212, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("name", "Patient name", false)
                //     new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                //    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                //    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
            }));
        */
        jSearchTable212.setShowHorizontalLines(false);
        jSearchScrollPane212.setViewportView(jSearchTable212);
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11312CaretUpdate
    private void searchButton212Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
/*        java.awt.Point point = this.jTextField912.getLocationOnScreen();
 
        jSearchDialog212.setSize(400,200);
 
        jSearchDialog212.setLocation(point);
 
        jSearchDialog212.setVisible(true);
 */
    }    private void populateTable11(java.lang.String patient_no) {
     /*   int j = 0;
        int i = 0;
      
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
      
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false");
      
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
      
                java.sql.Statement stmtTable111 = connectDB.createStatement();
      
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,price,(quantity*price)-amount,amount,gl_code  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false");
      
                while (rsetTable1.next()) {
      
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 3);
                    if(rsetTable1.getDouble(4) >0){
                        jTable11.setValueAt(rsetTable1.getObject(4), i, 4);
                    }else{
                        jTable11.setValueAt(new java.lang.Double(0.00), i, 4);
                    }
                    // jTable11.setValueAt(rsetTable1.getObject(4), i, 4);
                    jTable11.setValueAt(rsetTable1.getObject(5), i, 5);
                    jTable11.setValueAt(rsetTable1.getObject(6), i, 6);
      
                    java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("select sum(qty) from stock_balance where description = '"+jTable11.getValueAt(i,0).toString()+"' AND department ilike '"+jTextField41.getText()+"%'");
                    while (rsetTable111.next()) {
      
                        jTable11.setValueAt(rsetTable111.getObject(1), i, 2);
      
                        i++;
      
                    }
                }
            }
      
            java.sql.Statement pst211 = connectDB.createStatement();
            java.sql.ResultSet rs111 = pst211.executeQuery("select doctor from hp_pharmacy where paid = true and collected = false and patient_name = '"+jTextField912.getText()+"'");
            while (rs111.next()){
                jTextField121.setText(rs111.getObject(1).toString());
            }
        } catch(java.sql.SQLException sqlExec) {
      
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
      
        }
      */
    }
    
 /*   private void populateTable2(java.lang.String patient_no) {
        int j = 0;
        int i = 0;
  
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
  
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = true AND collected = false");
  
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
  
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select description,units,quantity,price,amount as value,gl_code from hp_pharmacy WHERE patient_no ='"+patient_no+"' AND paid = true AND collected = false");
  
                while (rsetTable1.next()) {
  
                    System.out.println("Working at table row "+i);
                    jTable12.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable12.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable12.setValueAt(rsetTable1.getObject(3), i, 3);
                    jTable12.setValueAt(rsetTable1.getObject(4), i, 4);
                    jTable12.setValueAt(rsetTable1.getObject(5), i, 5);
                    jTable12.setValueAt(rsetTable1.getObject(6), i, 6);
  
                    i++;
  
                }
            }
        } catch(java.sql.SQLException sqlExec) {
  
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
  
        }
    }      */          private void searchButton1Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
/*        java.awt.Point point = this.jTextField91.getLocationOnScreen();
 
        jSearchDialog21.setSize(400,200);
 
        jSearchDialog21.setLocation(point);
 
        jSearchDialog21.setVisible(true);
 
 
 */
    }
  /*  private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
        int j = 0;
   
        java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
        int i = jTable11.getSelectedRow();
   
        if (selectedGuaran != null) {
   
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select sp.selling_price::numeric from st_stock_prices sp where product = '"+selectedGuaran+"'");
                while (rs.next()){
                    jTable11.setValueAt(rs.getObject(1),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
   
   
            double Qty = 0.00;
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.Statement pstmt1 = connectDB.createStatement();
   
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select count(product) from st_stock_prices sc where item = '"+selectedGuaran+"' and department ilike '"+jTextField41.getText()+"%'");
                while (rs1.next())
                    j = rs1.getInt(1);
                if (j > 0){
   
                    java.sql.ResultSet rs = pstmt.executeQuery("select sum(qty) from stock_balance where description = '"+selectedGuaran+"' and department ILIKE '"+jTextField41.getText()+"%'");
                    while (rs.next()){
                         Qty = rs.getDouble(1);
                         //jTable1.setValueAt(Qty,jTable1.getSelectedRow(),2);
   
                        jTable11.setValueAt(Qty,i,2);
   
                    }
                } else {
                    jTable11.setValueAt("0.00",i,2);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
   
            try {
                java.sql.Statement pstmt = connectDB.createStatement();
   
                java.sql.ResultSet rs = pstmt.executeQuery("select code from pb_activity where activity ilike '"+jTextField41.getText()+"%'");
                while (rs.next()){
                    jTable11.setValueAt(rs.getObject(1),i,6);
   
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
   
    }*/
    
    public class ComboTextField extends javax.swing.JTextField implements javax.swing.ComboBoxEditor {
        
        public ComboTextField() {
            
            initComponents();
            
        }
        
        void initComponents() {
            
            // oldComboBox1311Model = jComboBox1311.getModel();
            
            // comboTextField = new javax.swing.JTextField();
            
            
            comboTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                
                public void keyTyped(java.awt.event.KeyEvent e) {
                    
                    if (e.getID() == java.awt.event.KeyEvent.VK_BACK_SPACE) {
                        
                        changeComboBoxModel(comboTextField.getText());
                        
                        System.out.println(comboTextField.getText()+" Pressed Key "+e.getKeyText(e.getKeyCode()));
                    }
                }});
                
        }
        public java.awt.Component getEditorComponent() {
            
            return comboTextField;
            
        }
        
        public Object getItem() {
            
            return comboTextField.getText();
            
        }
        
        public void setItem(Object obj) {
            
            //    comboTextField.setText(jComboBox1311.getSelectedItem().toString());
            
        }
        
        
        
        public void changeComboBoxModel(java.lang.String typedLetters) {
            
            
            
            javax.swing.DefaultComboBoxModel newComboBox1311Model = new javax.swing.DefaultComboBoxModel();
            
            System.out.println("ComboBox Item No. "+oldComboBox1311Model.getSize());
            
            
            for (int i = 0; i < oldComboBox1311Model.getSize(); i++) {
                
                
                if (oldComboBox1311Model.getElementAt(i).toString().startsWith(typedLetters)) {
                    
                    newComboBox1311Model.addElement(oldComboBox1311Model.getElementAt(i));
                    
                    //                    jComboBox1311.setModel(newComboBox1311Model);
                    
                }
                
            }
            
        }
        
        //      }
    }                                               /*   private void populateTable11(java.lang.String patient_name) {
        int j = 0;
        int i = 0;
                                                     
        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
                                                     
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT count(patient_name) FROM hp_pharmacy WHERE patient_name = '"+patient_name+"' AND paid = false AND collected = false");
                                                     
            while (rsetTable1.next()) {
                j = rsetTable1.getInt(1);
            }
            if (j > 0) {
                                                     
                java.sql.Statement stmtTable11 = connectDB.createStatement();
                                                     
                java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT description, quantity, price, null::numeric(15,2),amount, gl_code  FROM hp_pharmacy WHERE patient_name = '"+patient_name+"' AND paid = false AND collected = false");
                                                     
                while (rsetTable11.next()) {
                                                     
                    System.out.println("Working at table row "+i);
                    jTable11.setValueAt(rsetTable11.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable11.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable11.getObject(3), i, 3);
                    jTable11.setValueAt(rsetTable11.getObject(4), i, 4);
                    jTable11.setValueAt(rsetTable11.getObject(5), i, 5);
                    jTable11.setValueAt(rsetTable11.getObject(6), i, 6);
                                                     
                    i++;
                                                     
                    //                i = i + i;
                    //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                }
            }
        } catch(java.sql.SQLException sqlExec) {
                                                     
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                                                     
        }
    }
                                                     
     */
    
    
    
    
    
    // }
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        this.jTextField13.setEditable(false);
        /*  jPanel11.setVisible(false);
        jPanel1.setVisible(true);
        jPanel13.setVisible(false);
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select store_name from st_stores where store_code = 'OP'");
         
            while (rs.next()){
                jTextField4.setText(rs.getObject(1).toString());
                // jTextField2.setText(rs.getObject(2).toString());
         
            }
        } catch(java.sql.SQLException sqlex){
            System.out.println(sqlex.getMessage());
        }*/
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
/*        jPanel1.setVisible(false);
        jPanel11.setVisible(true);
        jPanel13.setVisible(false);
 */
        this.jTextField13.setEditable(true);
        this.jComboBox1.setSelectedItem("Cash");
        this.jTextField13.setText("Cash");
        this.jTextField22.setText("Walk In");
        
        // jPanel11.setVisible(true)// Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    private void populateTable1(java.lang.String patient_no) {
        int j = 0;
        int i = 0;
        double Qty = 0.00;
        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_no)  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false");
            
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.Statement stmtTable111 = connectDB.createStatement();
                
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, sum(quantity),price,sum((quantity*price)-amount),sum(amount),gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false AND date_prescribed = '"+datePicker1.getDate().toString()+"' group by description,price,gl_code ");
                
                while (rsetTable1.next()) {
                    
                    System.out.println("Working at table row "+i);
                    jTable13.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable13.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable13.setValueAt(rsetTable1.getObject(3), i, 3);
                    if(rsetTable1.getDouble(4) >0){
                        jTable13.setValueAt(rsetTable1.getObject(4), i, 4);
                    }else{
                        jTable13.setValueAt(new java.lang.Double(0.00), i, 4);
                    }
                    jTable13.setValueAt(rsetTable1.getObject(5), i, 5);
                    jTable13.setValueAt(rsetTable1.getObject(6), i, 6);
                    
                    java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("select sum(receiving-issuing) from st_sub_stores where item = '"+jTable13.getValueAt(i,0).toString()+"' AND store_name ilike '"+jTextField42.getText()+"%'");
                    while (rsetTable111.next()) {
                        
                        jTable13.setValueAt(rsetTable111.getObject(1), i, 2);
                        //jTable1.setValueAt(new java.lang.String(dbObject.getDBObject(rsetTable111.getObject(1), i, 2), "0.00"));
                        
                        i++;
                        
                    }
                }
            }
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
    }/*    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        int j = 0;
      
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
        if ( i > -1){
            if (selectedGuaran != null) {
      
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
                    java.sql.ResultSet rs = pstmt.executeQuery("select sp.selling_price::numeric from st_stock_prices sp where product = '"+selectedGuaran+"'");
                    while (rs.next()){
                        jTable1.setValueAt(rs.getObject(1),i,3);
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
      
      
      
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
                    java.sql.Statement pstmt1 = connectDB.createStatement();
      
                    java.sql.ResultSet rs1 = pstmt1.executeQuery("select count(item) from st_stock_cardex sc where item = '"+selectedGuaran+"' and sc.cost_center = 'Pharmacy'");
                    while (rs1.next())
                        j = rs1.getInt(1);
                    if (j > 0){
      
                        java.sql.ResultSet rs = pstmt.executeQuery("select sum(sc.quantity_received - sc.sub_store_issuing)::numeric from st_stock_cardex sc where item = '"+selectedGuaran+"' and sc.store = 'Pharmacy'");
                        while (rs.next()){
      
                            jTable1.setValueAt(rs.getObject(1),i,2);
      
                        }
                    } else {
                        jTable1.setValueAt("0.00",i,2);
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
      
                try {
                    java.sql.Statement pstmt = connectDB.createStatement();
      
                    java.sql.ResultSet rs = pstmt.executeQuery("select code from pb_activity where activity = '"+jTextField4.getText()+"'");
                    while (rs.next()){
                        jTable1.setValueAt(rs.getObject(1),i,6);
      
                    }
                } catch(java.sql.SQLException sqlex){
                    System.out.println(sqlex.getMessage());
                }
            }
      
        }
    }
     */
    private void startRunning() {
        
        System.out.println("Starting to run Progress Thread");
        
        if (updatePatientList == null || !updatePatientList.isAlive()) {
            
            updatePatientList = new UpdatePatientList(this);
            
            updatePatientList.start();
            
            System.out.println("Progress Thread started");
            
        }
        
    }
    
    private void stopRunning() {
        
        System.out.println("Stopping run Progress Thread");
        
        updatePatientList.setStop(false);
        
    }
    
    class UpdatePatientList extends java.lang.Thread {
        
        java.lang.String selectedItem;
        
        int refreshWaitTime = 10000;
        
        public UpdatePatientList(java.awt.Component parent) {
            
        }
        
        public void setStop(boolean refreshstatus) {
            
            refreshStatus = refreshstatus;
            
        }
        
 /*       public void run() {
  
            System.out.println("Loading Patient refresh thread.");
  
            while (refreshStatus) {
  
                try {
  
                    selectedItem = jComboBox131.getSelectedItem().toString();
  
                    crset1.execute();
  
                    jComboBox131.setSelectedItem(selectedItem);
  
                } catch (java.sql.SQLException sqlExec) {
  
                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());
  
                }
  
                try {
  
                    java.lang.Thread.sleep(refreshWaitTime);
  
                } catch (java.lang.InterruptedException intExec) {
  
                    javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "Interruption Exception!");
                }
  
            }
  
        }
  */
        
    }
    
  /*  public void tableModel1TableChanged() {
        System.out.println("Calculating totals for table 13 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double Total = java.lang.Double.parseDouble(jTextField82.getText());
        for (int i = 0; i < jTable13.getRowCount(); i++) {
   
            if (jTable13.getModel().getValueAt(i, 0) != null) {
   
                if (jTable13.getSelectedColumn() == 1) {
   
                    resFloat = resFloat + Double.parseDouble(jTable13.getModel().getValueAt(i, 5).toString());
   
                    jTextField32.setText(java.lang.String.valueOf(resFloat));
                }else
                    //   if (jTable11.getSelectedColumn() == 4) {
   
                    resFloat = resFloat + Double.parseDouble(jTable13.getModel().getValueAt(i,5).toString());
                //9   }
   
                jTextField32.setText(java.lang.String.valueOf(resFloat));
                //  jTextField10.setText(java.lang.String.valueOf(resFloat+Total));
                if (resFloat>Total){
                    jTextField10.setText(java.lang.String.valueOf(resFloat+Total));
                }else{
                    jTextField10.setText(java.lang.String.valueOf(resFloat));
                }
            }
        }
   
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    public void tableModel1TableChanged(javax.swing.event.TableModelEvent evt) {
   
        //        double resFloat = 0.00;
        double resFloat = 0.00;
   
        double Total = java.lang.Double.parseDouble(jTextField82.getText());
   
        for (int i = 0; i < jTable13.getRowCount(); i++) {
   
            if (jTable11.getModel().getValueAt(i, 0) != null) {
   
                if (jTable13.getSelectedColumn() == 1) {
   
                    resFloat = resFloat + Double.parseDouble(jTable13.getModel().getValueAt(i,5).toString());
   
                    jTextField32.setText(java.lang.String.valueOf(resFloat));
                    jTextField10.setText(java.lang.String.valueOf(resFloat+Total));
                }else
                    //    if (jTable11.getSelectedColumn() == 4) {
   
                    resFloat = resFloat + Double.parseDouble(jTable13.getModel().getValueAt(i,5).toString());
                //  }
                jTextField32.setText(java.lang.String.valueOf(resFloat));
                // jTextField10.setText(java.lang.String.valueOf(resFloat+Total));
                if (resFloat>Total){
                    jTextField10.setText(java.lang.String.valueOf(resFloat+Total));
                }else{
                    jTextField10.setText(java.lang.String.valueOf(resFloat));
                }
            }
        }
   
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
   
   
    public void tableModelTableChanged2() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double Total = java.lang.Double.parseDouble(jTextField81.getText());
        for (int i = 0; i < jTable11.getRowCount(); i++) {
   
            if (jTable11.getModel().getValueAt(i, 0) != null) {
   
                if (jTable11.getSelectedColumn() == 1) {
   
                    resFloat = resFloat + Double.parseDouble(jTable11.getModel().getValueAt(i, 5).toString());
   
                    jTextField31.setText(java.lang.String.valueOf(resFloat));
                    jTextField14.setText(java.lang.String.valueOf(resFloat+Total));
                }else
                    //   if (jTable11.getSelectedColumn() == 4) {
   
                    resFloat = resFloat + Double.parseDouble(jTable11.getModel().getValueAt(i,5).toString());
                //9   }
   
                jTextField31.setText(java.lang.String.valueOf(resFloat));
                // jTextField14.setText(java.lang.String.valueOf(resFloat+Total));
                if (resFloat>Total){
                    jTextField14.setText(java.lang.String.valueOf(resFloat+Total));
                }else{
                    jTextField14.setText(java.lang.String.valueOf(resFloat));
                }
            }
        }
   
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }*/
    
  /*  public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 12 and 21.");
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double Total = java.lang.Double.parseDouble(jTextField8.getText());
        for (int i = 0; i < jTable1.getRowCount(); i++) {
   
            if (jTable1.getModel().getValueAt(i, 0) != null) {
   
                if (jTable1.getSelectedColumn() == 1) {
   
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString());
   
                    //   }
   
                    jTextField3.setText(java.lang.String.valueOf(resFloat1));
                    jTextField15.setText(java.lang.String.valueOf(resFloat1+Total));
   
                }else
                    //    if (jTable1.getSelectedColumn() == 4) {
   
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i,5).toString());
                //    }
                jTextField3.setText(java.lang.String.valueOf(resFloat1));
                if (resFloat1>Total){
                    jTextField15.setText(java.lang.String.valueOf(resFloat1+Total));
                }else{
                    jTextField15.setText(java.lang.String.valueOf(resFloat1));
                }
   
            }
        }
   
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
   
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double Total = java.lang.Double.parseDouble(jTextField8.getText());
        for (int i = 0; i < jTable1.getRowCount(); i++) {
   
            if (jTable1.getModel().getValueAt(i, 0) != null) {
   
                if (jTable1.getSelectedColumn() == 1) {
   
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString());
   
                    // }
   
                    jTextField3.setText(java.lang.String.valueOf(resFloat1));
                    jTextField15.setText(java.lang.String.valueOf(resFloat1+Total));
                }else
                    //  if (jTable11.getSelectedColumn() == 4) {
   
                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i,5).toString());
                //  }
                jTextField3.setText(java.lang.String.valueOf(resFloat1));
                if (resFloat1>Total){
                    jTextField15.setText(java.lang.String.valueOf(resFloat1+Total));
                }else{
                    jTextField15.setText(java.lang.String.valueOf(resFloat1));
                }
            }
        }
   
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }*/
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup21;
    private javax.swing.ButtonGroup buttonGroup3;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton121;
    private javax.swing.JButton jButton122;
    private javax.swing.JButton jButton32;
    public javax.swing.JButton jButton41;
    private javax.swing.JButton jButton4212;
    private javax.swing.JButton jButton42121;
    private javax.swing.JButton jButton5212;
    private javax.swing.JButton jButton52121;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton63;
    public static javax.swing.JButton jButton7;
    private javax.swing.JButton jButton92;
    private javax.swing.JButton jButton93;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox1311;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel532;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel413;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JDialog jSearchDialog13;
    private javax.swing.JDialog jSearchDialog212;
    private javax.swing.JDialog jSearchDialog2121;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JDialog jSearchDialog4;
    private javax.swing.JPanel jSearchPanel13;
    private javax.swing.JPanel jSearchPanel212;
    private javax.swing.JPanel jSearchPanel2121;
    private javax.swing.JPanel jSearchPanel213;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JScrollPane jSearchScrollPane13;
    private javax.swing.JScrollPane jSearchScrollPane212;
    private javax.swing.JScrollPane jSearchScrollPane2121;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JScrollPane jSearchScrollPane4;
    private javax.swing.JTable jSearchTable13;
    private javax.swing.JTable jSearchTable212;
    private javax.swing.JTable jSearchTable2121;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JTable jSearchTable4;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTable13;
    private javax.swing.JTextField jTextField1;
    private static javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField11312;
    private javax.swing.JTextField jTextField113121;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField115;
    public static javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    public static javax.swing.JTextField jTextField15;
    public static javax.swing.JTextField jTextField16;
    public static javax.swing.JTextField jTextField17;
    public static javax.swing.JTextField jTextField18;
    public static javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField jTextField20;
    public static javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField82;
    public static javax.swing.JTextField jTextField92;
    private javax.swing.JTextField jTextField93;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JPanel spacerPanel;
    // End of variables declaration//GEN-END:variables
    
}
