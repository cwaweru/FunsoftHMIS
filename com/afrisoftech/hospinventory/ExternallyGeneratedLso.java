/*
 * Requisitions.java
 *
 * Created on April 22, 2003, 5:12 PM
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.GetItemInfo;
import com.afrisoftech.lib.UserName;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.openide.util.Exceptions;

/**
 *
 * @author root
 */
public class ExternallyGeneratedLso extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox = null;
    javax.swing.JSpinner dateSpinner = null;
    double resVal1 = 0.00;
    double resVal11 = 0.00;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    javax.swing.table.TableModel tableModel;
    private boolean uprices;
    private boolean updatePriceCheck;
    private String old_order;
    private String order_no1;
    private String order_no;

    public ExternallyGeneratedLso(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        datePicker1.setDate(null);
        jCheckBox1.doClick();
        jCheckBox3.doClick();
      //  sectionCmbx.setSelectedItem(UserName.getUserAllocatedSection(connectDB, jTextField9.getText()).toUpperCase());
        String user = null;
        try {
            java.sql.Statement pst2v = connectDB.createStatement();
            java.sql.ResultSet rsv = pst2v.executeQuery("select current_user");
            if (rsv.next()) {
                user = rsv.getObject(1).toString();
                // Stock = rs.getObject(2).toString();
            }
            jTextField9.setText(user);
            System.out.println("the user name is" + user);
        } catch (Exception userex) {
            System.out.println("user error is " + userex);
        }
        sectionCmbx.setSelectedItem(UserName.getUserAllocatedSection(connectDB, jTextField9.getText()).toUpperCase());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearcItem = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        searchsupplier = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        searchTender = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        tendersScrllpn = new javax.swing.JScrollPane();
        tendersTbl = new com.afrisoftech.dbadmin.JTable();
        jButton53 = new javax.swing.JButton();
        searchVote = new javax.swing.JDialog();
        jSearchPanel4 = new javax.swing.JPanel();
        searchtlpo1 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        votesTbl = new com.afrisoftech.dbadmin.JTable();
        jButton11 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        sectionCmbx = new javax.swing.JComboBox();
        jPanel41 = new javax.swing.JPanel();
        supplietTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lpoNumberTxt = new javax.swing.JTextField();
        orderCmbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        TenderNoTxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel63 = new javax.swing.JPanel();
        TenderNoTxt1 = new javax.swing.JTextField();
        tenderSearchbtn1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        jSearcItem.setModal(true);
        jSearcItem.setUndecorated(true);
        jSearcItem.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearcItem.getContentPane().add(jSearchPanel, gridBagConstraints);

        searchsupplier.setModal(true);
        searchsupplier.setUndecorated(true);
        searchsupplier.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier.getContentPane().add(jSearchPanel2, gridBagConstraints);

        searchTender.setModal(true);
        searchTender.setUndecorated(true);
        searchTender.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel3.add(jTextField114, gridBagConstraints);

        tendersTbl.setToolTipText("Click on the target row to select the patient from the search.");
        tendersTbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tendersTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tendersTblMouseClicked(evt);
            }
        });
        tendersScrllpn.setViewportView(tendersTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(tendersScrllpn, gridBagConstraints);

        jButton53.setText("Close");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton53, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchTender.getContentPane().add(jSearchPanel3, gridBagConstraints);

        searchVote.setModal(true);
        searchVote.setUndecorated(true);
        searchVote.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel4.setLayout(new java.awt.GridBagLayout());

        searchtlpo1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchtlpo1CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(searchtlpo1, gridBagConstraints);

        votesTbl.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        votesTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                votesTblMouseClicked(evt);
            }
        });
        jSearchScrollPane3.setViewportView(votesTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel4.add(jSearchScrollPane3, gridBagConstraints);

        jButton11.setText("Dispose");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchVote.getContentPane().add(jSearchPanel4, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Externally Generated Lpo/Lso");
        setToolTipText("");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);
        */
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField9, gridBagConstraints);

        jLabel13.setText("Section");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel4.setText("Lpo/Lso Expiry Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        sectionCmbx.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        sectionCmbx.setForeground(new java.awt.Color(0, 51, 204));
        sectionCmbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sectionCmbxItemStateChanged(evt);
            }
        });
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(sectionCmbx, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        supplietTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(supplietTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel41, gridBagConstraints);

        jLabel11.setText("Lpo/Lso Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        lpoNumberTxt.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(lpoNumberTxt, gridBagConstraints);

        orderCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LPO", "LSO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(orderCmbx, gridBagConstraints);

        jLabel2.setText("Document Type Used");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel10.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel42.setLayout(new java.awt.GridBagLayout());

        TenderNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(TenderNoTxt, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel42.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel42, gridBagConstraints);

        jCheckBox3.setForeground(new java.awt.Color(255, 0, 51));
        jCheckBox3.setText("Automatic LPO NO.");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jCheckBox3, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Votebook Details(compulsory)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.red)); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel16.setText("Vote name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel6.add(jLabel16, gridBagConstraints);

        jPanel63.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel63.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel63.setLayout(new java.awt.GridBagLayout());

        TenderNoTxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(TenderNoTxt1, gridBagConstraints);

        tenderSearchbtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        tenderSearchbtn1.setToolTipText("Search");
        tenderSearchbtn1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tenderSearchbtn1.setMaximumSize(new java.awt.Dimension(74, 53));
        tenderSearchbtn1.setMinimumSize(new java.awt.Dimension(74, 53));
        tenderSearchbtn1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tenderSearchbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderSearchbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel63.add(tenderSearchbtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jPanel63, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(0, 0, 255));
        jTextField3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField3CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel6.add(jTextField3, gridBagConstraints);

        jLabel12.setText("  -  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel12, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(0, 0, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField6, gridBagConstraints);

        jLabel17.setForeground(new java.awt.Color(255, 51, 51));
        jLabel17.setText("{ Format: [head]-[subhead]  e.g 101-6240 }");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        jPanel6.add(jLabel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 4.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        postbtn.setBackground(new java.awt.Color(0, 204, 204));
        postbtn.setMnemonic('s');
        postbtn.setText("Send LPO/LSO for Approvals");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(postbtn, gridBagConstraints);

        cancelbtn.setBackground(new java.awt.Color(0, 204, 204));
        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear entries");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(cancelbtn, gridBagConstraints);

        exitbtn.setBackground(new java.awt.Color(0, 204, 204));
        exitbtn.setMnemonic('c');
        exitbtn.setText("Close form");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel5, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setMnemonic('r');
        jButton1.setText("Remove row");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(0, 204, 204));
        jButton2.setMnemonic('h');
        jButton2.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton2, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel15, gridBagConstraints);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Brief remarks"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Strength", "Units/Pack", "Qty", "Unit Price", "Disc %", "Disc. Total", "Vat %", "Vat Amt.", "Value", "Day to Deliver", "Item Code", "Tender Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, false, true, false, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTbl.setGridColor(new java.awt.Color(204, 204, 255));
        cmbox = new javax.swing.JComboBox();

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 12; i++) {
            column = itemsTbl.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(500); //sport column is bigger
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(200);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        itemsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTblMouseClicked(evt);
            }
        });
        itemsTbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemsTblKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(itemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Total Discount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel6, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField4, gridBagConstraints);

        jLabel7.setText("VAT Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel7, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField1, gridBagConstraints);

        jLabel8.setText("Net Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel8, gridBagConstraints);

        jTextField5.setEditable(false);
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField5, gridBagConstraints);

        jLabel1.setText("Gross Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel1, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Main Store");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Sub Store");
        jCheckBox2.setEnabled(false);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jCheckBox2, gridBagConstraints);

        setBounds(0, 0, 1272, 612);
    }// </editor-fold>//GEN-END:initComponents

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        // jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        supplietTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        searchsupplier.dispose();
        try {
            java.sql.Statement pstmt = connectDB.createStatement();

            java.sql.ResultSet rs = pstmt.executeQuery("select current_user");
            while (rs.next()) {

                jTextField9.setText(rs.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        } // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.searchsupplier.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (jTextField113.getCaretPosition() < 3) {
            System.out.println("Nothing");
        } else {
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT initcap(supplier_name), code as account_no from st_suppliers where supplier_name ILIKE '%" + jTextField113.getText() + "%' order by supplier_name"));

            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);

        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.supplietTxt.getLocationOnScreen();

        searchsupplier.setSize(700, 200);

        searchsupplier.setLocation(point);

        searchsupplier.setVisible(true);

    }
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        for (int k = 0; k < jSearchTable2.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable2.getColumnCount(); r++) {
                jSearchTable2.getModel().setValueAt(null, k, r);
            }
        }
        this.jTextField113.setText("");
        searchButtonClicked();

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select stores from store_allocation where user_name = current_user and type ilike 'direct purch%' "));
//setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct store_name from st_stores order by store_name"));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionCmbxActionPerformed(evt);
            }
        });

        // Add your handling code here:
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void sectionCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionCmbxActionPerformed

        // Add your handling code here:
    }//GEN-LAST:event_sectionCmbxActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        //  jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' union select DISTINCT stores from store_allocation where user_name = current_user and type ilike 'direct purch%' order by 1 "));
        sectionCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT  buyer_name  FROM st_buyers_register where buyer_designation='SSO'"));
        sectionCmbx.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionCmbxActionPerformed(evt);
            }
        });
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void itemsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTblMouseClicked
        if (itemsTbl.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();
        } else if (itemsTbl.getSelectedColumn() == 11) {

            kiwi.ui.DateChooser dateChooser = new kiwi.ui.DateChooser();

            dateChooser.setVisible(true);

        }
// Add your handling code here:


    }//GEN-LAST:event_itemsTblMouseClicked
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearcItem.setSize(700, 200);
        jSearcItem.setLocation(point);
        jSearcItem.setVisible(true);
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearcItem.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        //if(this.jComboBox2.getSelectedItem().equals("GENERAL STORE")){
        if (this.jTextField111.getCaretPosition() < 5) {
            System.out.print("Nothing");
        } else {
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT item,'-' Strength,units Packaging, unit_price Tender_price,code FROM st_orders WHERE item ILIKE '%" + jTextField111.getText() + "%' and quotation_no ilike '%" + TenderNoTxt.getText() + "%' and supplier ilike '%" + supplietTxt.getText() + "%' order by 1"));
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");

        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), itemsTbl.getSelectedRow(), 0);
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), itemsTbl.getSelectedRow(), 1);
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), itemsTbl.getSelectedRow(), 2);
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3), itemsTbl.getSelectedRow(), 4);
        itemsTbl.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4), itemsTbl.getSelectedRow(), 11);

        itemsTbl.setValueAt(new java.lang.Double(0), itemsTbl.getSelectedRow(), 5);
        itemsTbl.setValueAt(new java.lang.Double(0), itemsTbl.getSelectedRow(), 7);
        itemsTbl.setValueAt(new java.lang.Double(0), itemsTbl.getSelectedRow(), 6);
        itemsTbl.setValueAt(new java.lang.Double(0), itemsTbl.getSelectedRow(), 9);
        //  jTable1.setValueAt(new java.lang.Double(1), jTable1.getSelectedRow(), 2);
        int j = 0;

        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.Statement pstmt1 = connectDB.createStatement();

            java.sql.ResultSet rs1 = pstmt1.executeQuery("select count(product) from st_stock_prices sc where product = '" + jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0) + "'");
            while (rs1.next()) {
                j = rs1.getInt(1);
            }

        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        }

        jSearcItem.dispose();
        jTextField111.setText("");

        if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 0) != null) {
            itemsTbl.setValueAt(GetItemInfo.getOrderedBalance(TenderNoTxt.getText(), itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 11).toString(), supplietTxt.getText(), connectDB), itemsTbl.getSelectedRow(), 12);
        }
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void itemsTblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsTblKeyReleased
        double orderedqty = 0.00;
        double tenderbalance = 0.00;
        orderedqty = java.lang.Double.parseDouble(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 3).toString());

        tenderbalance = java.lang.Double.parseDouble(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 12).toString());
        if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 3) != null && tenderbalance >= orderedqty) {
            double resFloat = 0.00;
            double resVal = 0.00;
            double total = 0.00;
            double total1 = 0.00;
            double discount1 = 0.00;
            double vat = 0.00;
            double VatAmt = 0.00;
            double floatCol2 = 0.00;
            double floatCol3 = 0.00;

            //  double totalSum = 0.00;
            if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), itemsTbl.getSelectedColumn()) != null) {

                floatCol2 = java.lang.Double.parseDouble(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 3).toString());

                floatCol3 = java.lang.Double.parseDouble(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 4).toString());

                //            if (jTable1.getValueAt(jTable1.getSelectedRow(), 3) != null) {
                total = floatCol2 * floatCol3;
                //                jTable1.setValueAt(new java.lang.Float(total), jTable1.getSelectedRow(), 7);

                if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 5) != null) {
                    discount1 = java.lang.Double.parseDouble(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 5).toString());

                    resVal = total * discount1 / 100;
                    // total = ((floatCol2 * floatCol3) - ((floatCol2 * floatCol3)*discount1/100));
                    // resVal = (floatCol2 * floatCol3)*discount1/100;
                    itemsTbl.setValueAt(new java.lang.Float(resVal), itemsTbl.getSelectedRow(), 6);
                    itemsTbl.setValueAt(new java.lang.Float(total - resVal), itemsTbl.getSelectedRow(), 9);

                    this.tableModelTableChanged1();

                    if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 7) != null) {
                        vat = java.lang.Double.parseDouble(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 7).toString());
                        // total = (((total) + ((floatCol2 * floatCol3)*vat/100)) - ((floatCol2 * floatCol3)*discount1/100));

                        VatAmt = (total - resVal) * vat / 100;
                        itemsTbl.setValueAt(new java.lang.Float(VatAmt), itemsTbl.getSelectedRow(), 8);
                        itemsTbl.setValueAt(new java.lang.Float(resVal), itemsTbl.getSelectedRow(), 6);
                        itemsTbl.setValueAt(new java.lang.Float((total - resVal) + VatAmt), itemsTbl.getSelectedRow(), 9);

                        this.tableModelTableChanged2();
                        //jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
                    }

                } else if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 7) != null) {
                    vat = java.lang.Double.parseDouble(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 7).toString());

                    total1 = ((floatCol2 * floatCol3));

                    total = ((floatCol2 * floatCol3) + ((floatCol2 * floatCol3) * vat / 100));
                    VatAmt = ((floatCol2 * floatCol3) * vat / 100);
                    itemsTbl.setValueAt(new java.lang.Float(VatAmt), itemsTbl.getSelectedRow(), 8);

                    //this.jTextField1.setText(java.lang.String.valueOf(VatAmt));
                    itemsTbl.setValueAt(new java.lang.Float(total), itemsTbl.getSelectedRow(), 9);
                    this.tableModelTableChanged2();

                } else //  }else
                if (itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 7) != null) {
                    itemsTbl.setValueAt(new java.lang.Float(total), itemsTbl.getSelectedRow(), 9);
                }
                this.tableModelTableChanged();

                for (int i = 0; i < itemsTbl.getRowCount(); i++) {

                    if (itemsTbl.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {

                        resFloat = resFloat + Double.parseDouble(itemsTbl.getValueAt(i, 9).toString());

                    }
                }

                //  this.tableModelTableChanged();
            }
            double net = Double.parseDouble(this.jTextField2.getText());
            double vats = Double.parseDouble(this.jTextField1.getText());
            jTextField5.setText(java.lang.String.valueOf(net - vats));
        } else {
            JOptionPane.showMessageDialog(this, "You cannot order more than the tender quantity", "Error", JOptionPane.ERROR_MESSAGE);

        }
        //  if (jTable1.getValueAt(jTable1.getSelectedRow(), 4) != null) {
        //      vat = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());

        //       total = (((floatCol2 * floatCol3) + ((floatCol2 * floatCol3)*vat/100)) - ((floatCol2 * floatCol3)*discount1/100));
        // }
        // Add your handling code here:
    }//GEN-LAST:event_itemsTblKeyReleased

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int rows2Delete = itemsTbl.getSelectedRowCount();

        int[] selectedRows = itemsTbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                defTableModel.removeRow(itemsTbl.getSelectedRow());
            }
        }
        tableModelTableChanged();
        tableModelTableChanged1();
        tableModelTableChanged2();

        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        jTextField2.setText("00");
        jTextField4.setText("00");
        jTextField1.setText("00");
        jTextField5.setText("00");
        lpoNumberTxt.setText("-");
        supplietTxt.setText("");
        //orderCmbx.setSelectedIndex(0);

        for (int k = 0; k < itemsTbl.getRowCount(); k++) {
            for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
                itemsTbl.getModel().setValueAt(null, k, r);
            }
        }

        jTextField2.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = itemsTbl.getSelectedRow();

        if (selectedGuaran != null) {

            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                // java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"'");

                java.sql.ResultSet rs = pstmt.executeQuery("select units from stockitem where description = '" + selectedGuaran + "'");
                while (rs.next()) {

                    itemsTbl.setValueAt(rs.getObject(1), i, 1);

                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }

        }

    }

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed

        if (jTextField3.getText().length() > 1) {
            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "You Are About To Generate an " + orderCmbx.getSelectedItem() + " To " + supplietTxt.getText().toUpperCase() + "\n Yes To Continue", "Caution before Saving!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

                if (datePicker1.getDate() != (null) || sectionCmbx.getSelectedItem().toString().equalsIgnoreCase("-")) {
                    try {
                        connectDB.setAutoCommit(false);
                        Boolean check_insert = false;
                        int num_rows = 0;
                        order_no = lpoNumberTxt.getText();

                        if (supplietTxt.getText().toString().length() > 0 && lpoNumberTxt.getText().toString().length() > 0 && sectionCmbx.getSelectedItem().toString().length() > 0) {
                            /////checking if the LPO/LSO exceeds
                            java.sql.Statement stmtss = connectDB.createStatement();
                            java.sql.ResultSet rsetF = stmtss.executeQuery("select count(*) from st_orders where order_no='" + lpoNumberTxt.getText() + "'  ");

                            while (rsetF.next()) {
                                num_rows = rsetF.getInt(1);

                            }

                            System.out.println(num_rows);

                            if (num_rows == 0) {

                                java.sql.Statement pstmt1s = connectDB.createStatement();
//                            java.sql.ResultSet rs1s = pstmt1s.executeQuery("select '" + TenderNoTxt.getText() + "' || nextval('order_trans_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");
                                java.sql.ResultSet rs1s = pstmt1s.executeQuery("select current_date || nextval('order_trans_seq')::VARCHAR,CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                                while (rs1s.next()) {
                                    old_order = rs1s.getObject(1).toString();

                                }
                                // old_order = com.afrisoftech.lib.DateLables.getDateLabel();
                                System.out.println("old_order [" + old_order + "]");
                                for (int i = 0; i < itemsTbl.getModel().getRowCount(); i++) {
                                    if (itemsTbl.getValueAt(i, 0) != null) {
                                        System.err.println("inserting " + itemsTbl.getModel().getValueAt(i, 0).toString());
                                        java.sql.PreparedStatement savelpo
                                                = connectDB.prepareStatement("INSERT INTO st_orders (quotation_no, supplier, criteria, item, quantity, unit_price,"
                                                        + " days_to_deliver, units,code,discount,discount_value,vat,vat_amount,net_value,"
                                                        + "order_no,date_due,doc_type,item_strength,ordering_store,chief_approval ,aie_holder_approval ,sad_approval ,miu_approval,date,remarks,head,subhead,main_department)"
                                                        + " VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");

                                        savelpo.setObject(1, TenderNoTxt.getText());
                                        savelpo.setObject(2, supplietTxt.getText().toUpperCase());
                                        savelpo.setObject(3, "ExternalLpo");
                                        savelpo.setObject(4, itemsTbl.getModel().getValueAt(i, 0).toString());
                                        savelpo.setDouble(5, Double.parseDouble(itemsTbl.getModel().getValueAt(i, 3).toString()));
                                        savelpo.setObject(6, itemsTbl.getModel().getValueAt(i, 4));
                                        if (itemsTbl.getModel().getValueAt(i, 10) == null) {
                                            savelpo.setObject(7, Double.parseDouble("0"));
                                        } else {
                                            savelpo.setObject(7, Double.parseDouble(itemsTbl.getModel().getValueAt(i, 10).toString()));
                                        }

                                        savelpo.setObject(8, itemsTbl.getModel().getValueAt(i, 2));
                                        savelpo.setObject(9, itemsTbl.getModel().getValueAt(i, 11));
                                        savelpo.setObject(10, itemsTbl.getModel().getValueAt(i, 5));
                                        savelpo.setObject(11, itemsTbl.getModel().getValueAt(i, 6));
                                        savelpo.setObject(12, itemsTbl.getModel().getValueAt(i, 7));
                                        savelpo.setObject(13, itemsTbl.getModel().getValueAt(i, 8));
                                        savelpo.setObject(14, itemsTbl.getModel().getValueAt(i, 9));
                                        if (jCheckBox3.isSelected()) {
                                            savelpo.setObject(15, old_order);

                                        } else {
                                            savelpo.setObject(15, lpoNumberTxt.getText());
                                        }
                                        savelpo.setDate(16, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                        savelpo.setObject(17, orderCmbx.getSelectedItem().toString());
                                        savelpo.setObject(18, itemsTbl.getModel().getValueAt(i, 1));
                                        savelpo.setObject(19, sectionCmbx.getSelectedItem().toString());
                                        savelpo.setObject(20, false);
                                        savelpo.setObject(21, false);
                                        savelpo.setObject(22, false);
                                        savelpo.setObject(23, false);
                                        savelpo.setDate(24, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                                        savelpo.setObject(25, old_order);
                                        savelpo.setObject(26, jTextField3.getText());
                                        savelpo.setObject(27, jTextField6.getText());
                                        savelpo.setObject(28, getMaindept(jTextField3.getText()));
                                        savelpo.executeUpdate();

                                        java.sql.PreparedStatement savelpo1 = connectDB.prepareStatement("INSERT INTO st_recommendation(supplier, quotation_no,supplier_code , discount_rate, item_code,description, unit, price, vat, date,\n"
                                                + "  user_name, financial_year,ordered_qty)\n"
                                                + "    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );");

                                        savelpo1.setObject(1, supplietTxt.getText().toUpperCase());
                                        savelpo1.setObject(2, TenderNoTxt.getText());
                                        savelpo1.setObject(3, supplietTxt.getText());
                                        savelpo1.setObject(4, Double.valueOf(itemsTbl.getValueAt(i, 5).toString()));
                                        savelpo1.setObject(5, itemsTbl.getValueAt(i, 11));
                                        savelpo1.setObject(6, itemsTbl.getValueAt(i, 0));
                                        savelpo1.setObject(7, itemsTbl.getValueAt(i, 2));
                                        savelpo1.setObject(8, itemsTbl.getValueAt(i, 4));
                                        savelpo1.setObject(9, Double.valueOf(itemsTbl.getValueAt(i, 8).toString()));
                                        savelpo1.setObject(10, com.afrisoftech.lib.ServerTime.getSQLTimeStamp(connectDB));
                                        savelpo1.setObject(11, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
                                        savelpo1.setObject(12, com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
                                        //select units, item_code from stockitem where description ='AMOXICILLIN 250MG CAPSULES'
                                        savelpo1.setObject(13, Double.valueOf(itemsTbl.getValueAt(i, 3).toString()));

                                        savelpo1.executeUpdate();

                                        check_insert = true;

                                    }
                                }

                                if (jCheckBox3.isSelected()) {
                                    pstmt1s = connectDB.createStatement();
                                    java.sql.ResultSet rs1s1 = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE");
                                    while (rs1s1.next()) {
                                        order_no1 = rs1s1.getObject(1).toString();

                                    }

                                    java.sql.Statement pstmt1 = connectDB.createStatement();

                                    java.sql.ResultSet rs1 = pstmt1.executeQuery("select  lpad('" + order_no1 + "',10,'0'),date('now')");

                                    while (rs1.next()) {
                                        order_no = rs1.getObject(1).toString();
                                    }

                                    java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement(""
                                            + "update st_orders set order_no='" + order_no + "' where  order_no='" + old_order + "' ");

                                    pstmt81212.executeUpdate();

                                }

                                connectDB.commit();
                                connectDB.setAutoCommit(true);
                                javax.swing.JOptionPane.showMessageDialog(this, "Generated Order No " + order_no + " to " + supplietTxt.getText(), "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                                cancelbtn.doClick();

                            } else {
                                javax.swing.JOptionPane.showMessageDialog(this, "The Lpo/Lso Has Already been Entered In The System(Cannot be a Duplicate Entry)", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                            }
                        } else {
                            javax.swing.JOptionPane.showMessageDialog(this, "Double Check your Entries(All the fields should be filled)", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        }

                    } catch (Exception ex) {
                        ex.printStackTrace();
                        System.out.println(ex.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                        try {
                            connectDB.rollback();
                        } catch (SQLException ex1) {
                            Exceptions.printStackTrace(ex1);
                        }

                    }
                }
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check empty fields before saving.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            //datePicker1.setDate(null);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Please fill votebook information first", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        datePicker1.setDate(null);
        // Add your handling code here:
    }//GEN-LAST:event_postbtnActionPerformed
    private String getMaindept(String code) {
        String dept = "-";
        try {
            PreparedStatement pst = connectDB.prepareStatement("SELECT distinct headname from heads where head ilike '" + code + "'");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {
                dept = rset.getObject(1).toString();
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderingTenderItemsintfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        return dept;

    }
    private void sectionCmbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sectionCmbxItemStateChanged
        // TODO add your handling code here
//        jTextField6.setText(null);
//            try {
//                java.sql.Statement pstmt = connectDB.createStatement();
//
//                java.sql.ResultSet rs = pstmt.executeQuery("select glstock_code from st_stores  where store_name ilike '" + jComboBox2.getSelectedItem().toString() + "%'");
//                while (rs.next()) {
//
//                    this.jTextField6.setText(rs.getObject(1).toString());
//                }
//            } catch (java.sql.SQLException sqlex) {
//                System.out.println(sqlex.getMessage());
//            }

//            try {
//                java.sql.Statement pstmt = connectDB.createStatement();
//
//                java.sql.ResultSet rs = pstmt.executeQuery("select glstock_code from st_stores  where store_name ilike '" + jComboBox2.getSelectedItem().toString() + "%'");
//                while (rs.next()) {
//
//                    this.jTextField6.setText(rs.getObject(1).toString());
//                }
//            } catch (java.sql.SQLException sqlex) {
//                System.out.println(sqlex.getMessage());
//            
//        }

    }//GEN-LAST:event_sectionCmbxItemStateChanged

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.TenderNoTxt.getLocationOnScreen();

        searchTender.setSize(700, 200);

        searchTender.setLocation(point);

        searchTender.setVisible(true);
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        // TODO add your handling code here:
        if (jTextField114.getCaretPosition() < 3) {
            System.out.println("Nothing");
        } else {
            tendersTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct quotation_no REF_NO from st_orders where quotation_no ILIKE '%" + jTextField114.getText() + "%' and supplier ilike '%" + supplietTxt.getText() + "%' order by 1"));

            tendersTbl.setShowHorizontalLines(false);
            tendersScrllpn.setViewportView(tendersTbl);

        }

    }//GEN-LAST:event_jTextField114CaretUpdate

    private void tendersTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tendersTblMouseClicked
        // TODO add your handling code here:
        TenderNoTxt.setText(tendersTbl.getValueAt(tendersTbl.getSelectedRow(), 0).toString());
        searchTender.dispose();

    }//GEN-LAST:event_tendersTblMouseClicked

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        // TODO add your handling code here:
        searchTender.dispose();
    }//GEN-LAST:event_jButton53ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox3.isSelected()) {
            jCheckBox3.setLabel("Automatic LPO NO.");
            lpoNumberTxt.setEditable(false);
            lpoNumberTxt.setText("-");
        } else {
            jCheckBox3.setLabel("Manual LPO NO.");
            lpoNumberTxt.setEditable(true);
            lpoNumberTxt.setText(null);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void tenderSearchbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderSearchbtn1ActionPerformed
        // TODO add your handling code here:
        System.out.println("Showing dialog");

        //SearchTenderLpo.dispose();
        java.awt.Point point = this.TenderNoTxt1.getLocationOnScreen();

        searchVote.setSize(500, 200);

        searchVote.setLocation(point);
        searchVote.setVisible(true);
    }//GEN-LAST:event_tenderSearchbtn1ActionPerformed

    private void jTextField3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField3CaretUpdate
        // TODO add your handling code here:
        if (jTextField1.getCaretPosition() == 3) {
            jTextField1.setEditable(false);
        }
    }//GEN-LAST:event_jTextField3CaretUpdate

    private void searchtlpo1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchtlpo1CaretUpdate
        // TODO add your handling code here:
        votesTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select subheadname,srccode,subhead from subheads where subheadname ilike '%" + searchtlpo1.getText() + "%' or subhead ilike '%" + searchtlpo1.getText() + "%' or srccode ilike '%" + searchtlpo1.getText() + "%'"));
    }//GEN-LAST:event_searchtlpo1CaretUpdate

    private void votesTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_votesTblMouseClicked
        // TODO add your handling code here:
        TenderNoTxt1.setText(votesTbl.getValueAt(votesTbl.getSelectedRow(), 0).toString());
        jTextField3.setText(votesTbl.getValueAt(votesTbl.getSelectedRow(), 1).toString());

        jTextField6.setText(votesTbl.getValueAt(votesTbl.getSelectedRow(), 2).toString());
        jButton11.doClick();
    }//GEN-LAST:event_votesTblMouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        this.searchVote.dispose();
    }//GEN-LAST:event_jButton11ActionPerformed

    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 0) != null) {

                resFloat = resFloat + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 9).toString());
                jTextField2.setText(java.lang.String.valueOf(resFloat));
                jTextField5.setText(java.lang.String.valueOf(resFloat - Disc - Vat));
                //                }else{

                //  resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 7).toString());
                //   jTextField2.setText(java.lang.String.valueOf(resFloat));
                //  }
            }

            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }

    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        //        double resFloat = 0.00;
        double resFloat = 0.00;

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 0) != null) {

                //   if (jTable1.getSelectedColumn() == 3) {
                resFloat = resFloat + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 9).toString());

                jTextField2.setText(java.lang.String.valueOf(resFloat));
                jTextField5.setText(java.lang.String.valueOf(resFloat - Disc - Vat));

                //  }else{
                //      resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 7).toString());
                //      jTextField2.setText(java.lang.String.valueOf(resFloat));
                //}
            }
        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 12 and 21.");
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 5) != null) {

                if (itemsTbl.getSelectedColumn() == 5) {

                    resFloat1 = resFloat1 + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 6).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                }

                resFloat1 = resFloat1 + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 6).toString());
                jTextField4.setText(java.lang.String.valueOf(resFloat1));
                jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));
                //   else{
                //       javax.swing.JOptionPane.showMessageDialog(this,"Disc. % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                //   }

            }
        }
    }

    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {

        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 5) != null) {

                if (itemsTbl.getSelectedColumn() == 5) {

                    resFloat1 = resFloat1 + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 6).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                } else {

                    resFloat1 = resFloat1 + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 6).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                    // else{
                    // javax.swing.JOptionPane.showMessageDialog(this,"Disc. % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged2() {
        System.out.println("Calculating totals for table 12 and 21.");
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 0) != null) {

                //if (jTable1.getSelectedColumn() == 7) {
                String two = "0";
                if (itemsTbl.getModel().getValueAt(i, 8) != null) {
                    two = "0";
                } else {
                    two = itemsTbl.getModel().getValueAt(i, 10).toString();
                }

                resFloat1 = resFloat1 + Double.parseDouble(two);
                jTextField1.setText(java.lang.String.valueOf(resFloat1));
                jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

//                } else {
//
//                    resFloat1 = resFloat1 + Double.parseDouble(jTable1.getModel().getValueAt(i, 8).toString());
//                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
//                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));
//
//
//                    //   javax.swing.JOptionPane.showMessageDialog(this,"Vat % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
//                }
            }

            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }

    public void tableModelTableChanged2(javax.swing.event.TableModelEvent evt) {

        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 7) != null) {

                if (itemsTbl.getSelectedColumn() == 7) {

                    resFloat1 = resFloat1 + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 7).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                } else {

                    resFloat1 = resFloat1 + Double.parseDouble(itemsTbl.getModel().getValueAt(i, 7).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));
                    //    javax.swing.JOptionPane.showMessageDialog(this,"Vat % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TenderNoTxt;
    private javax.swing.JTextField TenderNoTxt1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cancelbtn;
    private com.afrisoftech.lib.DatePicker datePicker1;
    public javax.swing.JButton exitbtn;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearcItem;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JPanel jSearchPanel4;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField lpoNumberTxt;
    private javax.swing.JComboBox orderCmbx;
    private javax.swing.JButton postbtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JDialog searchTender;
    private javax.swing.JDialog searchVote;
    private javax.swing.JDialog searchsupplier;
    private javax.swing.JTextField searchtlpo1;
    private javax.swing.JComboBox sectionCmbx;
    private javax.swing.JTextField supplietTxt;
    private javax.swing.JButton tenderSearchbtn1;
    private javax.swing.JScrollPane tendersScrllpn;
    private javax.swing.JTable tendersTbl;
    private javax.swing.JTable votesTbl;
    // End of variables declaration//GEN-END:variables
}
