/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import static com.afrisoftech.hospinventory.StockMain.connectDB;
import static com.afrisoftech.hospinventory.StockMain.medicdspane;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.CurrencyFormatter;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class EditReverseEntriesIntfr extends javax.swing.JInternalFrame {

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.sql.Connection connectDB = null;

    public EditReverseEntriesIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchtender = new javax.swing.JDialog();
        tenderrecordspnl = new javax.swing.JPanel();
        tenderrecordstxt = new javax.swing.JTextField();
        tenderrecordsspnl = new javax.swing.JScrollPane();
        tenderrecordstbl = new com.afrisoftech.dbadmin.JTable();
        closebtn1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        editBtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        rmvRow = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        supplierCmbx = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        tenderNumbertxt = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        descriptionAwardtxt = new javax.swing.JTextField();
        supplierCodetxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        awardItemstbl = new javax.swing.JTable();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        awardedSupplierstbl = new com.afrisoftech.dbadmin.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();

        searchtender.setModal(true);
        searchtender.setUndecorated(true);
        searchtender.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxtCaretUpdate(evt);
            }
        });
        tenderrecordstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl.add(tenderrecordstxt, gridBagConstraints);

        tenderrecordstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstblMouseClicked(evt);
            }
        });
        tenderrecordsspnl.setViewportView(tenderrecordstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl.add(tenderrecordsspnl, gridBagConstraints);

        closebtn1.setText("Close");
        closebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl.add(closebtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender.getContentPane().add(tenderrecordspnl, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel9.setLayout(new java.awt.GridBagLayout());
        jPanel3.add(jPanel9, new java.awt.GridBagConstraints());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Set Preliminary Criteria here"));
        jPanel5.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jLabel2, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        editBtn.setBackground(new java.awt.Color(153, 255, 204));
        editBtn.setMnemonic('e');
        editBtn.setText("View Entered Items");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(editBtn, gridBagConstraints);

        savebtn.setBackground(new java.awt.Color(153, 255, 204));
        savebtn.setMnemonic('s');
        savebtn.setText("Remove row");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(savebtn, gridBagConstraints);

        rmvRow.setBackground(new java.awt.Color(153, 255, 204));
        rmvRow.setMnemonic('r');
        rmvRow.setText("Reverse Entry");
        rmvRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvRowActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel7.add(rmvRow, gridBagConstraints);

        jButton1.setText("Reset Supplier Item(s)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Search Tender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel10, gridBagConstraints);

        supplierCmbx.setEnabled(false);
        supplierCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel17.add(supplierCmbx, gridBagConstraints);

        jLabel12.setText("Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel12, gridBagConstraints);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        tenderNumbertxt.setEditable(false);
        tenderNumbertxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(tenderNumbertxt, gridBagConstraints);

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel18.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 200);
        jPanel17.add(jPanel18, gridBagConstraints);

        jLabel14.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel14, gridBagConstraints);

        descriptionAwardtxt.setEditable(false);
        descriptionAwardtxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel17.add(descriptionAwardtxt, gridBagConstraints);

        supplierCodetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(supplierCodetxt, gridBagConstraints);

        jLabel15.setText("Supplier Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel17.add(jLabel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel17, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1.Enter \"Awarded Quantity\" and \"Suppl.Unit Price\"    2.'Tab' on the selected row    3.TICK on the column \"TICK\"(mandatory)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DialogInput", 1, 12), new java.awt.Color(255, 0, 51))); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        awardItemstbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        awardItemstbl.setForeground(new java.awt.Color(102, 102, 102));
        awardItemstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Description", "Units Of Issue", "Max Tender Quantity", "Awarded Quantity", "Balance(Qty)", "Suppl.Unit Price", "Total", "Tick"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        awardItemstbl.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 6; i++) {
            column = awardItemstbl.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(50); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);

                }
            }
        }
        awardItemstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                awardItemstblMouseClicked(evt);
            }
        });
        awardItemstbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                awardItemstblKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(awardItemstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jScrollPane2, gridBagConstraints);

        jCheckBox2.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBox2.setText("Tick All Entered values");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel4.add(jCheckBox2, gridBagConstraints);

        awardedSupplierstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Supplier Name"
            }
        ));
        awardedSupplierstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                awardedSupplierstblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(awardedSupplierstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jScrollPane1, gridBagConstraints);

        jCheckBox1.setText("RE AWARD ITEMS REVERSED");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel4.add(jCheckBox1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 10.0;
        jPanel5.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (tenderNumbertxt.getText().length() > 0) {

            com.afrisoftech.hospinventory.TenderScheduleReportPDF policy = new com.afrisoftech.hospinventory.TenderScheduleReportPDF();

            policy.TenderScheduleReportPDF(connectDB, tenderNumbertxt.getText());

        } else {

            JOptionPane.showMessageDialog(this, "Tender No is Not Entered", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_editBtnActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());
        //updating

        ClearTable.removeSelectedRows(awardItemstbl);
        // Add your handling code here:
    }//GEN-LAST:event_savebtnActionPerformed

    private void rmvRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvRowActionPerformed

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you Sure? Yes to continue", "CONFIRMATION", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            for (int i = 0; i < awardItemstbl.getRowCount(); i++) {
                if (awardItemstbl.getValueAt(i, 0) != null && awardItemstbl.getValueAt(i, 8) == java.lang.Boolean.TRUE) {
                    try {
                        PreparedStatement pst = connectDB.prepareStatement("DELETE FROM st_floated_quotations WHERE quotation_no='" + tenderNumbertxt.getText() + "' and trim(supplier) ilike '" + supplierCmbx.getSelectedItem() + "' and trim(item_code) = '" + awardItemstbl.getValueAt(i, 0) + "' ");
                        System.out.println("DELETE FROM st_floated_quotations WHERE quotation_no='" + tenderNumbertxt.getText() + "' and trim(supplier) ilike '" + supplierCmbx.getSelectedItem() + "' and trim(item_code) = '" + awardItemstbl.getValueAt(i, 0) + "' ");
                        pst.executeUpdate();

                        PreparedStatement pst1 = connectDB.prepareStatement("DELETE FROM st_recommendation WHERE  quotation_no='" + tenderNumbertxt.getText() + "' and trim(supplier) ilike '" + supplierCmbx.getSelectedItem() + "' and trim(item_code) = '" + awardItemstbl.getValueAt(i, 0) + "' and ordered_qty<1");
                        System.out.println("DELETE FROM st_recommendation WHERE  quotation_no='" + tenderNumbertxt.getText() + "' and trim(supplier) ilike '" + supplierCmbx.getSelectedItem() + "' and trim(item_code) = '" + awardItemstbl.getValueAt(i, 0) + "' and ordered_qty<1");
                        pst1.executeUpdate();

                        PreparedStatement pst2 = connectDB.prepareStatement("DELETE FROM st_orders WHERE  quotation_no='" + tenderNumbertxt.getText() + "' and trim(supplier) ilike '" + supplierCmbx.getSelectedItem() + "' and trim(code) = '" + awardItemstbl.getValueAt(i, 0) + "' and (order_no  is null or order_no ilike '') ");
                        System.out.println("DELETE FROM st_recommendation WHERE  quotation_no='" + tenderNumbertxt.getText() + "' and trim(supplier) ilike '" + supplierCmbx.getSelectedItem() + "' and trim(item_code) = '" + awardItemstbl.getValueAt(i, 0) + "' and ordered_qty<1");
                        pst2.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }

                }

            }
            JOptionPane.showMessageDialog(this, "Entries Reversed", "Success", JOptionPane.INFORMATION_MESSAGE);
            populateTable(tenderNumbertxt.getText(), supplierCmbx.getSelectedItem().toString());

        }
        awardedSupplierstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, " SELECT DISTINCT trim(supplier) FROM st_orders WHERE quotation_no= '" + tenderNumbertxt.getText() + "' order by 1"));
        // Add your handling code here:
    }//GEN-LAST:event_rmvRowActionPerformed

    private String getsupplierCode(String supplier) {
        String code = "-";
        try {
            PreparedStatement pst = connectDB.prepareStatement("select distinct code,email_address from st_suppliers where upper(supplier_name)='" + supplier.toUpperCase() + "'");
            ResultSet rset = pst.executeQuery();
            while (rset.next()) {

                code = rset.getString(1);

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(ManualTendersIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

        return code;
    }

    private void populateTable(String tender, String supplier) {
        ClearTable.clearthisTable(awardItemstbl);
        try {
            PreparedStatement pst = connectDB.prepareStatement("SELECT DISTINCT code,item,units,quantity,unit_price,quantity*unit_price from st_orders where order_no IS NULL AND quotation_no='" + tender + "' AND trim(initcap(supplier)) ilike '" + supplier + "' ");
            ResultSet rset = pst.executeQuery();
            System.out.println("SELECT DISTINCT code,item,units,quantity,unit_price,quantity*unit_price from st_orders where order_no IS NULL AND quotation_no='" + tender + "' AND trim(initcap(supplier)) ilike '" + supplier + "' ");
            int i = 0;

            while (rset.next()) {

                awardItemstbl.setValueAt(rset.getObject(1), i, 0);
                awardItemstbl.setValueAt(rset.getObject(2), i, 1);
                awardItemstbl.setValueAt(rset.getObject(3), i, 2);

                awardItemstbl.setValueAt(CurrencyFormatter.getFormattedDouble(rset.getDouble(4)), i, 4);
                awardItemstbl.setValueAt(CurrencyFormatter.getFormattedDouble(rset.getDouble(5)), i, 6);
                awardItemstbl.setValueAt(CurrencyFormatter.getFormattedDouble(rset.getDouble(6)), i, 7);

                i++;
            }

        } catch (SQLException ex) {
            Logger.getLogger(EditReverseEntriesIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void supplierCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierCmbxActionPerformed
        // TODO add your handling code here:
        supplierCodetxt.setText(getsupplierCode(supplierCmbx.getSelectedItem().toString()));

        populateTable(tenderNumbertxt.getText(), supplierCmbx.getSelectedItem().toString());
    }//GEN-LAST:event_supplierCmbxActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = tenderNumbertxt.getLocationOnScreen();
        searchtender.setLocation(p);
        searchtender.setSize(tenderNumbertxt.getWidth(), 200);
        searchtender.setVisible(true);
        tenderrecordstxt.setText(null);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void awardItemstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_awardItemstblMouseClicked
        // TODO add your handling code here:
        if (awardItemstbl.getSelectedColumn() == 0) {

//            java.awt.Point p = jScrollPane2.getLocationOnScreen();
//            awardItemsDialog.setLocation(p);
//            awardItemsDialog.setSize(jScrollPane2.getWidth()*3/4, 200);
//            awardItemsDialog.setVisible(true);
//            itemsuploadtxt1.setText(null);
        }
    }//GEN-LAST:event_awardItemstblMouseClicked

    private void awardItemstblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_awardItemstblKeyReleased
        // TODO add your handling code here:

        //String item
        Double qty = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 3).toString());
        Double qty_to_award = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 4).toString());
        Double unit_price = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 6).toString());

        Double bal = Double.valueOf(awardItemstbl.getValueAt(awardItemstbl.getSelectedRow(), 5).toString());

        if (bal > 0 && bal >= qty_to_award) {

            //awardItemstbl.setValueAt(bal, awardItemstbl.getSelectedRow(), 5);
            awardItemstbl.setValueAt(qty_to_award * unit_price, awardItemstbl.getSelectedRow(), 7);

        } else {

            JOptionPane.showMessageDialog(this, "Item quantities Fully Exhausted or \n The Quantities you inserted exceed maximum tender qty", "Contact Your Team leader", JOptionPane.ERROR_MESSAGE);

            // ClearTable.removeSelectedRows(awardItemstbl);
            awardItemstbl.setValueAt(null, awardItemstbl.getSelectedRow(), 7);
            awardItemstbl.setValueAt(null, awardItemstbl.getSelectedRow(), 4);

        }

    }//GEN-LAST:event_awardItemstblKeyReleased

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < awardItemstbl.getRowCount(); i++) {
            if (awardItemstbl.getModel().getValueAt(i, 0) != null && awardItemstbl.getModel().getValueAt(i, 7) != null) {

                awardItemstbl.setValueAt(true, i, 8);

            }

        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void tenderrecordstxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxtCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt.getCaretPosition() > 2) {
            //            System.out.print("Nothing");
            //
            //        } else
            //
            //        {
            tenderrecordstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT DISTINCT quotation_no Tender_No FROM st_orders where  quotation_no ilike '%" + tenderrecordstxt.getText() + "%'  order by 1 desc;"));
            tenderrecordstbl.setShowHorizontalLines(false);

            tenderrecordsspnl.setViewportView(tenderrecordstbl);

        }
    }//GEN-LAST:event_tenderrecordstxtCaretUpdate

    private void tenderrecordstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxtActionPerformed

    private void tenderrecordstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstblMouseClicked

        //tendernotxt.setText((String) tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 0));
        tenderNumbertxt.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 0).toString());

        searchtender.dispose();

        descriptionAwardtxt.setText(com.afrisoftech.lib.GetItemInfo.getITenderDesc(tenderNumbertxt.getText(), connectDB));

        supplierCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT DISTINCT trim(initcap(supplier)) FROM st_orders WHERE quotation_no= '" + tenderNumbertxt.getText() + "' order by 1"));
        awardedSupplierstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, " SELECT DISTINCT trim(initcap(supplier)) FROM st_orders WHERE quotation_no= '" + tenderNumbertxt.getText() + "' order by 1"));
    }//GEN-LAST:event_tenderrecordstblMouseClicked

    private void closebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn1ActionPerformed
        // TODO add your handling code here:
        searchtender.dispose();
    }//GEN-LAST:event_closebtn1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you Sure? Yes to continue", "CONFIRMATION", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
            for (int i = 0; i < awardItemstbl.getRowCount(); i++) {
                if (awardItemstbl.getValueAt(i, 0) != null || awardItemstbl.getValueAt(i, 8) == java.lang.Boolean.TRUE) {
                    try {
                        PreparedStatement pst = connectDB.prepareStatement("DELETE FROM st_floated_quotations WHERE quotation_no='" + tenderNumbertxt.getText() + "' and supplier='" + supplierCmbx.getSelectedItem() + "' and item_code='" + awardItemstbl.getValueAt(i, 0) + "'");
                        pst.executeUpdate();

                        PreparedStatement pst1 = connectDB.prepareStatement("DELETE FROM st_recommendation WHERE  quotation_no='" + tenderNumbertxt.getText() + "' and supplier='" + supplierCmbx.getSelectedItem() + "' and item_code='" + awardItemstbl.getValueAt(i, 0) + "'");
                        pst1.executeUpdate();

                        PreparedStatement pst2 = connectDB.prepareStatement("DELETE FROM st_orders WHERE  quotation_no='" + tenderNumbertxt.getText() + "' and supplier='" + supplierCmbx.getSelectedItem() + "' and code='" + awardItemstbl.getValueAt(i, 0) + "'");
                        pst2.executeUpdate();

                        //---------------------------
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_floated_quotations("
                                + " buyer_details, quotation_date, openning_date, item_code, item_description, "
                                + " units, quantity, item_number, quotation_no,supplier,unit_price,remarks,country_origin)"
                                + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");

                        pstmt.setObject(1, "-");
                        pstmt.setDate(2, null);
                        pstmt.setDate(3, null);
                        pstmt.setObject(4, awardItemstbl.getValueAt(i, 0).toString());
                        pstmt.setObject(5, awardItemstbl.getValueAt(i, 1).toString());
                        pstmt.setObject(6, awardItemstbl.getValueAt(i, 2).toString());
                        pstmt.setDouble(7, java.lang.Double.valueOf(awardItemstbl.getValueAt(i, 4).toString().replace(",", "")));
                        pstmt.setInt(8, i + 1);
                        pstmt.setObject(9, tenderNumbertxt.getText());
                        //pstmt.setObject(10, supplierCmbx.getSelectedItem());
                        pstmt.setObject(10, supplierCmbx.getSelectedItem().toString());
                        pstmt.setDouble(11, java.lang.Double.valueOf(awardItemstbl.getModel().getValueAt(i, 6).toString().replace(",", "")));
                        pstmt.setObject(12, "-");
                        pstmt.setObject(13, "-");
                        pstmt.executeUpdate();

                        java.sql.PreparedStatement savelpo = connectDB.prepareStatement("INSERT INTO st_orders(quotation_no, supplier, criteria, item, quantity, unit_price, days_to_deliver,units,code)"
                                + " VALUES (?,?,?,?,?,?,?,?,?);");

                        savelpo.setObject(1, tenderNumbertxt.getText().toString());
                        savelpo.setObject(2, supplierCmbx.getSelectedItem().toString());
                        savelpo.setObject(3, "Lowest Price");
                        savelpo.setObject(4, awardItemstbl.getValueAt(i, 1));
                        savelpo.setObject(5, Double.valueOf(awardItemstbl.getValueAt(i, 4).toString().replace(",", "")));
                        savelpo.setObject(6, Double.valueOf(awardItemstbl.getValueAt(i, 6).toString().replace(",", "")));
                        savelpo.setObject(7, 0.00);
                        //select units, item_code from stockitem where description ='AMOXICILLIN 250MG CAPSULES'
                        savelpo.setObject(8, awardItemstbl.getValueAt(i, 2));
                        savelpo.setObject(9, awardItemstbl.getValueAt(i, 0));

                        savelpo.executeUpdate();

                        java.sql.PreparedStatement update_code = connectDB.prepareStatement("INSERT INTO st_recommendation( supplier,  quotation_no, item_code, description, unit, price, user_name, quantity, supplier_code, remarks, financial_approved,approved_fin_by,financial_date)\n"
                                + "    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?); ");

                        update_code.setObject(1, supplierCmbx.getSelectedItem().toString());
                        update_code.setObject(2, tenderNumbertxt.getText());
                        update_code.setObject(3, awardItemstbl.getValueAt(i, 0));
                        update_code.setObject(4, awardItemstbl.getValueAt(i, 1));
                        update_code.setObject(5, awardItemstbl.getValueAt(i, 2));
                        update_code.setDouble(6, Double.valueOf(awardItemstbl.getValueAt(i, 6).toString().replace(",", "")));
                        update_code.setObject(7, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
                        update_code.setObject(8, Double.valueOf(awardItemstbl.getValueAt(i, 4).toString().replace(",", "")));
                        update_code.setObject(9, supplierCodetxt.getText());
                        update_code.setObject(10, supplierCmbx.getSelectedItem().toString());
                        update_code.setObject(11, true);
                        update_code.setObject(12, "-");
                        update_code.setObject(13, com.afrisoftech.lib.UserName.getServerDate(connectDB));

                        update_code.executeUpdate();

                        java.sql.PreparedStatement suppr = connectDB.prepareStatement("INSERT INTO st_tender_suppliers (tender, supplier_name, opened, opened_by) VALUES (?, ?, ?, ?)");
                        suppr.setObject(1, tenderNumbertxt.getText());
                        suppr.setObject(2, supplierCmbx.getSelectedItem().toString());
                        suppr.setBoolean(3, true);
                        suppr.setObject(4, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());

                        suppr.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        try {
                            connectDB.rollback();
                        } catch (SQLException ex1) {
                            Logger.getLogger(EditReverseEntriesIntfr.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    }

                }

//                 System.err.println("Items Reset..proceeding...."+awardItemstbl.getValueAt(i, 0).toString());
            }
            JOptionPane.showMessageDialog(this, "Transaction Complete");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void awardedSupplierstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_awardedSupplierstblMouseClicked
        // TODO add your handling code here:

        System.out.println("im here");
        supplierCodetxt.setText(getsupplierCode(awardedSupplierstbl.getModel().getValueAt(awardedSupplierstbl.getSelectedRow(), 0).toString()));
        System.out.println("im here");
        populateTable(tenderNumbertxt.getText(), awardedSupplierstbl.getModel().getValueAt(awardedSupplierstbl.getSelectedRow(), 0).toString());
        System.out.println("im here");
        supplierCmbx.setSelectedItem(awardedSupplierstbl.getModel().getValueAt(awardedSupplierstbl.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_awardedSupplierstblMouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
          javax.swing.JInternalFrame dismth = new ManualTendersIntfr(connectDB, null,2);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setSize(medicdspane.getSize());
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable awardItemstbl;
    private javax.swing.JTable awardedSupplierstbl;
    private javax.swing.JButton closebtn1;
    private javax.swing.JTextField descriptionAwardtxt;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton rmvRow;
    private javax.swing.JButton savebtn;
    private javax.swing.JDialog searchtender;
    private javax.swing.JComboBox supplierCmbx;
    private javax.swing.JTextField supplierCodetxt;
    private javax.swing.JTextField tenderNumbertxt;
    private javax.swing.JPanel tenderrecordspnl;
    private javax.swing.JScrollPane tenderrecordsspnl;
    private javax.swing.JTable tenderrecordstbl;
    private javax.swing.JTextField tenderrecordstxt;
    // End of variables declaration//GEN-END:variables
}
