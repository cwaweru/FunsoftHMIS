/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.hospinventory;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author System Partners
 */
public class CertificateMtrhIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form SuppliesGuyApprovalintfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
      //String lpo=null,supplier=null;
    public CertificateMtrhIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
        
                 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog4 = new javax.swing.JDialog();
        jSearchPanel8 = new javax.swing.JPanel();
        jTextField1116 = new javax.swing.JTextField();
        jSearchScrollPane8 = new javax.swing.JScrollPane();
        jSearchTable8 = new com.afrisoftech.dbadmin.JTable();
        jButton57 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ApprovalTbl = new com.afrisoftech.dbadmin.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        lpoTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        TenderTxt = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TenderTxt1 = new javax.swing.JTextField();
        jPanel28 = new javax.swing.JPanel();
        SupplierTxt = new javax.swing.JTextField();
        searchButton8 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Save = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grn2PayablesLinkingTable = new com.afrisoftech.dbadmin.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        orderedItemsTbl =  new com.afrisoftech.dbadmin.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jSearchDialog4.setModal(true);
        jSearchDialog4.setUndecorated(true);
        jSearchDialog4.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel8.setLayout(new java.awt.GridBagLayout());

        jTextField1116.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1116CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel8.add(jTextField1116, gridBagConstraints);

        jSearchTable8.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable8.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable8MouseClicked(evt);
            }
        });
        jSearchScrollPane8.setViewportView(jSearchTable8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel8.add(jSearchScrollPane8, gridBagConstraints);

        jButton57.setText("Close");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel8.add(jButton57, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog4.getContentPane().add(jSearchPanel8, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Certificate of compliance");
        setPreferredSize(new java.awt.Dimension(739, 413));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select LPO/LSO here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel7.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel7.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setMinimumSize(new java.awt.Dimension(250, 100));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(250, 100));

        ApprovalTbl.setAutoCreateRowSorter(true);
        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
        ApprovalTbl.setMinimumSize(new java.awt.Dimension(90, 34));
        ApprovalTbl.setPreferredSize(new java.awt.Dimension(90, 750));
        ApprovalTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApprovalTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ApprovalTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jScrollPane3, gridBagConstraints);

        jLabel3.setText("Search");
        jPanel7.add(jLabel3, new java.awt.GridBagConstraints());

        jTextField1.setForeground(new java.awt.Color(255, 51, 0));
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 102, 102), null, null));
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel7.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel7, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel111.setText("LPO/LSO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel111, gridBagConstraints);

        lpoTxt.setEditable(false);
        lpoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpoTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(lpoTxt, gridBagConstraints);

        jLabel1.setText("Store Ordered");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        TenderTxt.setEditable(false);
        TenderTxt.setForeground(new java.awt.Color(0, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(TenderTxt, gridBagConstraints);

        jLabel112.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel112, gridBagConstraints);

        jLabel2.setText("Quotation/Tender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        TenderTxt1.setEditable(false);
        TenderTxt1.setForeground(new java.awt.Color(0, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel1.add(TenderTxt1, gridBagConstraints);

        jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel28.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel28.setLayout(new java.awt.GridBagLayout());

        SupplierTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel28.add(SupplierTxt, gridBagConstraints);

        searchButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton8.setToolTipText("Search Patient's Name");
        searchButton8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton8.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton8.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel28.add(searchButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel28, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 9.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        Save.setMnemonic('s');
        Save.setText("Generate GRN + Compliance Certificate");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(Save, gridBagConstraints);

        resetbtn.setText("Refresh");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(resetbtn, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(cancelbtn, gridBagConstraints);

        exitbtn.setMnemonic('c');
        exitbtn.setText("Zoom Table");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(exitbtn, gridBagConstraints);

        jButton1.setMnemonic('r');
        jButton1.setText("Delete Item");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel3.add(jPanel4, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Received Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        grn2PayablesLinkingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Delivey No", "Item", "Price/Item", "QTY", "Total Amt", "Certify", "Supplies Approved", "Technical Approved", "Committe Chair Approved", "Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grn2PayablesLinkingTable.setGridColor(new java.awt.Color(204, 204, 255));
        //this.procurementPlanTbl.getColumnModel().getColumn(i).setCellEditor(new javax.swing.DefaultCellEditor((javax.swing.JComboBox)new com.afrisoftech.lib.DatePicker()));
        grn2PayablesLinkingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn2PayablesLinkingTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                grn2PayablesLinkingTableMouseReleased(evt);
            }
        });
        grn2PayablesLinkingTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grn2PayablesLinkingTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(grn2PayablesLinkingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ordered Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 204)));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        orderedItemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(orderedItemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel3.add(jPanel8, gridBagConstraints);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comment here.......", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void getTable(String lso){
        try {
            SupplierTxt.setText(null);
            lpoTxt.setText(null);
            
            TenderTxt.setText(null);
            TenderTxt1.setText(null);
            connectDB.setAutoCommit(false);
           
            java.sql.Statement stmtss=connectDB.createStatement();
                java.sql.ResultSet rsets = stmtss.executeQuery("SELECT ordering_store,quotation_no FROM st_orders WHERE order_no ='"+lso+"'");
           
            while (rsets.next()) {
                TenderTxt.setText(rsets.getString(2));
                TenderTxt1.setText(rsets.getString(1));
            }
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            // ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT   P.requisition_no as \"PR N0:\", P.type_of_pr as \"PR Type\" FROM st_receive_requisation as P,st_authorizations as S WHERE  P.requisition_no ILIKE '%PRQ%' and P.approval_status=TRUE and P.requisition_no=S.requisition_no and S.scm_forwading=TRUE and S.cso_forwading=FALSE GROUP BY P.requisition_no,P.type_of_pr"));
            ////clearing the products table
            for (int k = 0; k <orderedItemsTbl.getRowCount(); k++) {
                for (int r = 0; r < orderedItemsTbl.getColumnCount(); r++) {
                    orderedItemsTbl.getModel().setValueAt(null, k, r);
                }
            }
            
            for (int k = 0; k <grn2PayablesLinkingTable.getRowCount(); k++) {
                for (int r = 0; r < grn2PayablesLinkingTable.getColumnCount(); r++) {
                    grn2PayablesLinkingTable.getModel().setValueAt(null, k, r);
                }
            }
            
            ////clear the JTextPane
            
            
            //////Fill the PR table and other details
           
            
            
            
            lpoTxt.setText(lso);
            orderedItemsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT code,item,units,quantity,unit_price,gross_value,discount,vat,net_value,date_due,days_to_deliver FROM st_orders WHERE order_no ='"+lso+"'"));
           } catch (SQLException ex) {
            Logger.getLogger(CertificateMtrhIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void ApprovalTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApprovalTblMouseClicked
         int rowselect=ApprovalTbl.getSelectedRow();
        if(ApprovalTbl.getValueAt(rowselect,0).toString()!=null){    
         
           
        getTable(ApprovalTbl.getValueAt(rowselect,0).toString());
        PopulatereceivedItems(ApprovalTbl.getValueAt(rowselect,0).toString());
        SupplierTxt.setText(ApprovalTbl.getValueAt(ApprovalTbl.getSelectedRow(),1).toString()); 
        }
        
    }//GEN-LAST:event_ApprovalTblMouseClicked
    public void PopulatereceivedItems(String lso){
// v.removeAllElements();
       
        for (int k = 0; k < grn2PayablesLinkingTable.getRowCount(); k++) {
            for (int r = 0; r < grn2PayablesLinkingTable.getColumnCount(); r++) {
                grn2PayablesLinkingTable.getModel().setValueAt(null, k, r);
            }
        }

        try {
            java.sql.Statement pstmtSupplier = connectDB.createStatement();

            try {
 
                int k = 0;
                                java.sql.ResultSet rsetSupplier = pstmtSupplier.executeQuery("SELECT  supplier as supplier_name,"
                                        + "(select summer from funsoft_link_grn (order_no,invoice_no,item,item_code)) as quantity_received,"
                        + " order_no as LPO_LSO_NO, delivery_note_no, invoice_no,item,store as receiving_store,supplies_name,technical_name,chairperson_name,item_code"
                        + " from st_stock_cardex where approved=false and (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and invoice_no in "
                        + "(select invoice_no from st_stock_cardex where approved=false and (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and "
                        + " order_no= '" +lso+ "') and "
                        + "order_no= '" +lso+ "' "
                        + " group by 5,1,2,3,4,6,7,8,9,10,11 having sum(debit-quantity_ordered) > 0 order by item");

                while (rsetSupplier.next()) {
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(11), k, 10);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(10), k, 9);
                   grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(9), k, 8);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(8), k, 7);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(6), k, 2);
                   grn2PayablesLinkingTable.setValueAt(false, k, 6);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(2), k, 4);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(4), k, 1);
                    
                    
                      String name=  rsetSupplier.getString(6);
                       String correct_name=name;
                     
                      
                      if(correct_name.contains("'")){
                            correct_name=  name.substring(0, name.indexOf("'"));
                      }
                      else if(!correct_name.contains("'")){
                            correct_name= name;
                      }
                     
                                       
                     java.sql.Statement pstmtSupplierDate = connectDB.createStatement();
                    java.sql.ResultSet rsetSupplierDate = pstmtSupplierDate.executeQuery(""
                            + "SELECT  date,sum(debit-quantity_ordered) as reversed_qty,price_per_item FROM st_stock_cardex  where " +
" approved=false and supplies=true and chairperson=true and technical=true and (grn_no!='rejected' or grn_no is null) and certficate_no is null and order_no='" + rsetSupplier.getObject(3) + "' "
                            + " and invoice_no='" + rsetSupplier.getObject(5) + "' and supplier ='" + rsetSupplier.getObject(1) + "' " +
" and item ilike'%" + correct_name + "%' and store ilike '" + rsetSupplier.getObject(7) + "' " +
"                             group by date,price_per_item ");
                    
                    if (rsetSupplierDate.next()) {
                        grn2PayablesLinkingTable.setValueAt(rsetSupplierDate.getObject(1), k, 0);
                        
                           grn2PayablesLinkingTable.setValueAt(rsetSupplierDate.getObject(3), k, 3);
                    }
                    
                    
                     java.sql.Statement pstmtdebit = connectDB.createStatement();
                    java.sql.ResultSet rsetdebit = pstmtdebit.executeQuery(""
                            + "SELECT  sum(debit-quantity_ordered) as reversed_qty FROM st_stock_cardex  where " +
" approved=false and supplies=true and chairperson=true and technical=true and (grn_no!='rejected' or grn_no is null) and certficate_no is null and order_no='" + rsetSupplier.getObject(3) + "' "
                            + " and invoice_no='" + rsetSupplier.getObject(5) + "' and supplier ='" + rsetSupplier.getObject(1) + "' " +
" and item ilike'%" + correct_name + "%' and store ilike '" + rsetSupplier.getObject(7) + "' " +
"                            ");
                    
                    if (rsetdebit.next()) {
                       
                         grn2PayablesLinkingTable.setValueAt(rsetdebit.getObject(1), k, 5);
                          
                    }
                    
                    

                    k = k + 1;

                }
            } catch (Exception r) {
                r.printStackTrace();
            }


//            java.sql.PreparedStatement pstmtSuppliercode = connectDB.prepareStatement("SELECT code FROM st_suppliers WHERE supplier_name = '" + grnDetailsTable.getValueAt(grnDetailsTable.getSelectedRow(), 0) + "'");
//
//            java.sql.ResultSet rsetSuppliercode = pstmtSuppliercode.executeQuery();
//
//            while (rsetSuppliercode.next()) {
//                supplierCodeTxt.setText(rsetSuppliercode.getString(1));
//            }
        } catch (Exception y) {
            y.printStackTrace();
            System.out.println(y);
        }


    }
private void IsOrderComplete(String order,String item_code){
     try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct sum(quantity_undelivered),item_code from stock_receiving_view where order_no ilike '" + order + "%' group by item_code");
           // java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT distinct item_code  FROM stock_receiving_view WHERE order_no ilike '" + this.jTextField91.getText() + "%' AND quantity_undelivered >0");
              
            while (rsetTable11.next()) {
               // j = rsetTable11.getInt(1);
               if (rsetTable11.getDouble(1)<= 0) {
                    java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("update st_orders set received ='true' where order_no ='" +order+ "' AND code = '" + item_code + "'");
                            pstmt33.executeUpdate();
               }
            }
     } catch (Exception y) {
            y.printStackTrace();
            System.out.println(y);
        }
}
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
    String addr = null;
        String tel = null;
        String qno = null;
        String desc = null;
        String cert = null;
        String StocktransNo= null;

         String user=null;
        java.util.Calendar calendar = java.util.Calendar.getInstance();
    
    long dateNow = calendar.getTimeInMillis();
    
    java.sql.Date datenowSql = new java.sql.Date(dateNow);
    
    System.out.println(datenowSql.toString());
    
    java.sql.Savepoint registerSavePoint = null;
        
        
    try{
         
        connectDB.setAutoCommit(false);
        registerSavePoint = connectDB.setSavepoint("registration");
        
        java.sql.Statement stmt1 = connectDB.createStatement();
        
        java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT postal_address,tel1  FROM st_suppliers WHERE supplier_name = '" + SupplierTxt.getText() + "'");
        
        while (rset1.next()) {
            addr = rset1.getString(1);
            tel = rset1.getString(2);
        }
        
        java.sql.Statement stmt1x = connectDB.createStatement();
        
        java.sql.ResultSet rset1x = stmt1x.executeQuery("SELECT quotation_no FROM st_orders WHERE order_no = '" + lpoTxt.getText() + "'");
        
        while (rset1x.next()) {
            qno = rset1x.getString(1);
        }
        
        java.sql.Statement stmt1xx = connectDB.createStatement();
        
        java.sql.ResultSet rset1xx = stmt1xx.executeQuery("SELECT NEXTVAL('certno_seq')");
        
        while (rset1xx.next()) {
            cert = rset1xx.getString(1);
        }
              java.sql.Statement pst21 = connectDB.createStatement();
                    java.sql.ResultSet rs111 = pst21.executeQuery("select nextval('stock_delivery_seq')");
                    while (rs111.next()) {
                        StocktransNo = rs111.getObject(1).toString();
                    }

        
        
///code ya insert  cardex        
       
        
          java.sql.Statement pst2v = connectDB.createStatement();
                        java.sql.ResultSet rsv = pst2v.executeQuery("select current_user");
                        if (rsv.next()) {
                            user = rsv.getObject(1).toString();
                            // Stock = rs.getObject(2).toString();
                        }
                        
                        System.out.println("the user name is"+user);
        }
        catch(Exception userex){
            System.out.println("user error is "+userex);
        }
        
        try {    
            
        connectDB.setAutoCommit(false);                                    
        for (int k = 0; k < grn2PayablesLinkingTable.getRowCount(); k++) {
            if (grn2PayablesLinkingTable.getValueAt(k, 0) != null) {
            if (Boolean.valueOf(grn2PayablesLinkingTable.getValueAt(k, 6).toString()) == java.lang.Boolean.TRUE) { 
                                        
                                            
                                              java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement(""
                                                        + "update st_stock_cardex set certficate_no='"+cert+"',grn_no='"+StocktransNo+"' where approved=false and supplies=true and chairperson=true and technical=true and item_code='"+grn2PayablesLinkingTable.getValueAt(k, 10).toString()+"' and delivery_note_no='" + grn2PayablesLinkingTable.getValueAt(k, 1).toString() + "' and order_no='" +lpoTxt.getText() + "' and item ='"+grn2PayablesLinkingTable.getValueAt(k, 2).toString()+"'");
                                                //        java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE ac_ledger SET reconciled = true WHERE cheque_no ILIKE '" + grn2PayablesLinkingTable.getValueAt(i, 1).toString() + "' AND dealer ilike '" + supplierNameTxt.getText().toString() + "' and date = '" + grn2PayablesLinkingTable.getValueAt(i, 0).toString() + "' and transaction_no = '" + grn2PayablesLinkingTable.getValueAt(i, 4).toString() + "'");

                                                pstmt81212.executeUpdate();
                                            } 
                                       IsOrderComplete(lpoTxt.getText(),grn2PayablesLinkingTable.getValueAt(k, 10).toString());
 //certificate insert           
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_certificate("
                        + "lpo, dr_no, item, model, serial_no,supplier, supplier_add, "
                        + "supplier_tel, quotation_no,"
                        + "description, date_delivered, checked_by, cert_no, amount, procured, "
                        + "received, remarks, reject_reason, rejection_no)"
                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pstmt.setObject(1, lpoTxt.getText());
                System.out.println("mimi ni msooo  "+grn2PayablesLinkingTable.getValueAt(k, 1).toString());
                pstmt.setObject(2, grn2PayablesLinkingTable.getValueAt(k, 1).toString());
                pstmt.setObject(3, grn2PayablesLinkingTable.getValueAt(k, 2).toString());
                pstmt.setObject(4, "");
                pstmt.setObject(5, "");
                pstmt.setObject(6, SupplierTxt.getText());
                pstmt.setObject(7, addr);
                pstmt.setObject(8, tel);
                pstmt.setObject(9, TenderTxt.getText());
                pstmt.setObject(10, grn2PayablesLinkingTable.getModel().getValueAt(k, 2).toString());
                    java.sql.Statement pst2v = connectDB.createStatement();
                        java.sql.ResultSet rsv = pst2v.executeQuery("select '"+grn2PayablesLinkingTable.getModel().getValueAt(k, 0)+"' ::date");
                        while (rsv.next()) {
                            pstmt.setDate(11,com.afrisoftech.lib.SQLDateFormat.getSQLDate(rsv.getDate(1)));
                            // Stock = rs.getObject(2).toString();
                        }  
                pstmt.setObject(12, user);
                pstmt.setObject(13, cert);
                pstmt.setDouble(14, Double.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(k, 5).toString()));
                pstmt.setObject(15, "");
                pstmt.setBoolean(16, true);
               //remarks
               pstmt.setString(17, jTextArea1.getText());
                pstmt.setObject(18, "");
                pstmt.setObject(19, "");
                
                
                pstmt.executeUpdate();
            
            }
   //end of certificate insert   
//  com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf policy = new com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf();
//            policy.SthirteenPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker1.getDate().toLocaleString(), jTextField91.getText().toString(), this.deliveryNoteNumberTxt.getText().toString());

                                    } 
     
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                   // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, lpoNumberTxt.getText(), commentsTxt.getText(), "EXPENDITURE_EXAMINATION", "EXPENDITURE_VOTEBOOK");
                    
                    javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! Approval Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    System.out.println(lpoTxt.getText()+"-"+SupplierTxt.getText());
                    ////marking the progress 
                    ////updating the progress tracker
                 String order=ApprovalTbl.getValueAt(ApprovalTbl.getSelectedRow(),0).toString();
                 String insert=" GRN NO:("+StocktransNo+") and Cert No:("+cert+")";
                        java.sql.PreparedStatement pr_progress= connectDB.prepareStatement("UPDATE st_pr_progress SET receiving_grn='"+insert+"' where   raise_lpo_lso ilike '%" + order+"%' ");
            
                                 pr_progress.executeUpdate();
                    
                    
                    ////end
                    com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf policy = new com.afrisoftech.hospinventory.mtrhreports.MtrhSthirteenPdf();
                    policy.MtrhSthirteenPdf(connectDB,lpoTxt.getText(),SupplierTxt.getText(),StocktransNo);
                     com.afrisoftech.hospinventory.ComplianceCertificatePdf policys = new com.afrisoftech.hospinventory.ComplianceCertificatePdf();
                    policys.ComplianceCertificatePdf(connectDB,cert,lpoTxt.getText());
                    cancelbtn.doClick();
                    ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
                    
         }  catch (SQLException ex) {
                                   Logger.getLogger(CertificateMtrhIntfr.class.getName()).log(Level.SEVERE, null, ex);
                                            }     
    }//GEN-LAST:event_SaveActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        //ADDING ITEMS
         cancelbtn.doClick();
                    //javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! Approved Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    //ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where supplies=true and chairperson= and technical=true and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
                     ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
      
    }//GEN-LAST:event_resetbtnActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        SupplierTxt.setText(null);
                    lpoTxt.setText(null);
jTextArea1.setText(null);
                    TenderTxt.setText(null);
                    TenderTxt1.setText(null);
                 for (int k = 0; k <orderedItemsTbl.getRowCount(); k++) {
                for (int r = 0; r < orderedItemsTbl.getColumnCount(); r++) {
                    orderedItemsTbl.getModel().setValueAt(null, k, r);
                }
            }
            
            for (int k = 0; k <grn2PayablesLinkingTable.getRowCount(); k++) {
                for (int r = 0; r < grn2PayablesLinkingTable.getColumnCount(); r++) {
                    grn2PayablesLinkingTable.getModel().setValueAt(null, k, r);
                }
            }
            
            for (int k = 0; k <ApprovalTbl.getRowCount(); k++) {
                for (int r = 0; r < ApprovalTbl.getColumnCount(); r++) {
                    ApprovalTbl.getModel().setValueAt(null, k, r);
                }
            }
            
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
 
               
        

    }//GEN-LAST:event_exitbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
           String user=null;
        try{
          java.sql.Statement pst2v = connectDB.createStatement();
                        java.sql.ResultSet rsv = pst2v.executeQuery("select current_user");
                        if (rsv.next()) {
                            user = rsv.getObject(1).toString();
                            // Stock = rs.getObject(2).toString();
                        }
                        
                        System.out.println("the user name is"+user);
        }
        catch(Exception userex){
            System.out.println("user error is "+userex);
        }
        
        try {    
        connectDB.setAutoCommit(false);                                    
        for (int k = 0; k < grn2PayablesLinkingTable.getRowCount(); k++) {
            if (grn2PayablesLinkingTable.getValueAt(k, 0) != null) {
            if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(k, 6).toString()) == java.lang.Boolean.TRUE) { 
                                                              String comment;
                if(grn2PayablesLinkingTable.getValueAt(k, 7)==null ){
                     comment="";
                }else{
                    comment=grn2PayablesLinkingTable.getValueAt(k, 7).toString();
                }            
                          
                                            java.sql.PreparedStatement pstmt81212 = connectDB.prepareStatement(""
                                                        + "update st_stock_cardex set grn_no='rejected'  where approved=false and supplies=true and chairperson=true and technical=true and delivery_note_no='" + grn2PayablesLinkingTable.getValueAt(k, 1).toString() + "' and order_no='" +lpoTxt.getText() + "' and item ='"+grn2PayablesLinkingTable.getValueAt(k, 2).toString()+"'");
                                                //        java.sql.PreparedStatement pstmt8121 = connectDB.prepareStatement("UPDATE ac_ledger SET reconciled = true WHERE cheque_no ILIKE '" + grn2PayablesLinkingTable.getValueAt(i, 1).toString() + "' AND dealer ilike '" + supplierNameTxt.getText().toString() + "' and date = '" + grn2PayablesLinkingTable.getValueAt(i, 0).toString() + "' and transaction_no = '" + grn2PayablesLinkingTable.getValueAt(i, 4).toString() + "'");

                                                pstmt81212.executeUpdate();
                                            } 
                                        }
                                    } 
                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                   // com.afrisoftech.lib.DocumentTracer.setDocumentLocation(connectDB, lpoNumberTxt.getText(), commentsTxt.getText(), "EXPENDITURE_EXAMINATION", "EXPENDITURE_VOTEBOOK");
                    cancelbtn.doClick();
                    javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! Approved Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
                    
         }  catch (SQLException ex) {
                                   Logger.getLogger(ChairGuyApprovalintfr.class.getName()).log(Level.SEVERE, null, ex);
                                            } 

    }//GEN-LAST:event_jButton1ActionPerformed

    private void grn2PayablesLinkingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn2PayablesLinkingTableMouseClicked
//        if (grn2PayablesLinkingTable.getSelectedColumn() == 9) // jCheckBox2.setSelected(false);
//        {
//            linkGRNToCreditorBtn.setEnabled(false);
//        }
//        {
//            Double totalAmnt = 0.0, qtytotal = 0.0;
//            if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.TRUE) {
//                totalAmnt = 0.0;
//                qtytotal = 0.0;
//                if (v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
//                    //  v.remove(grn2PayablesLinkingTable.getSelectedRow());
//                } else if (!v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
//                    v.add(grn2PayablesLinkingTable.getSelectedRow());
//                }
//            } else if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.FALSE) {
//                totalAmnt = 0.0;
//                qtytotal = 0.0;
//                v.remove(grn2PayablesLinkingTable.getSelectedRow());
//            }
//
//            for (int i = 0; i < v.size(); i++) {
//                Double total = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 7).toString());
//                totalAmnt = totalAmnt + total;
//                Double totals = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 6).toString());
//                qtytotal = qtytotal + totals;
//
//            }
//
//            System.out.println(totalAmnt);
//            totalGrnAmountTxt.setText(totalAmnt.toString());
//            qtyTtField.setText(qtytotal.toString());
//
//        }

    }//GEN-LAST:event_grn2PayablesLinkingTableMouseClicked

    private void grn2PayablesLinkingTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn2PayablesLinkingTableMouseReleased
//        if (grn2PayablesLinkingTable.getSelectedColumn() == 1) {
//
//            if (grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1) != null) {
//
//                java.awt.Point point = this.lpoNumberTxt.getLocationOnScreen();
//
//                jSearchDialog2.setSize(900, 200);
//
//                jSearchDialog2.setLocation(point);
//
//                jSearchDialog2.setVisible(true);
//
//                orderNumberTxt.grabFocus();
//
//                orderNumberTxt.setText(grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1).toString());
//            }
//        }        // TODO add your handling code here:
    }//GEN-LAST:event_grn2PayablesLinkingTableMouseReleased

    private void grn2PayablesLinkingTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn2PayablesLinkingTableKeyReleased
        /*     double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField1.getText());

        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {
            double amtToalloc = java.lang.Double.parseDouble(jTextField2.getText());
            double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());

            double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
            double balance = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());

            if (floatCol3 <= amtToalloc && amtToalloc >= 0){

                double resVal =floatCol2 - floatCol3;

                jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
            } else
            if (floatCol3 > amtToalloc && amtToalloc > 0){
                javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the amount to allocate","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }

            this.tableModelTableChanged();
        }else
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) == null) {
            jTable1.setValueAt(new java.lang.Double(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()), jTable1.getSelectedRow(), 5);
            this.tableModelTableChanged();
        }
        */
        // Add your handling code here:
    }//GEN-LAST:event_grn2PayablesLinkingTableKeyReleased

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void searchButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton8ActionPerformed
        System.out.println("Showing dialog");

        // jSearchDialog4.dispose();
        java.awt.Point point = this.SupplierTxt.getLocationOnScreen();
        
        jSearchDialog4.setSize(400, 200);
        
        jSearchDialog4.setLocation(point);
        jSearchDialog4.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton8ActionPerformed

    private void jTextField1116CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1116CaretUpdate
        // jSearchTable8.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date FROM st_item_to_quote WHERE quotation_no ILIKE '" + jTextField1116.getText().toString() + "%'  ORDER BY 1"));

        if (this.jTextField1116.getCaretPosition() < 2) {
            System.out.print("Nothing");
        } else {
            jSearchTable8.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                + "DISTINCT order_no,quotation_no,supplier FROM st_orders "
                + "WHERE order_no ILIKE '" + jTextField1116.getText().toString() + "%' ORDER BY 1"));
        jSearchTable8.setShowHorizontalLines(false);
        jSearchScrollPane8.setViewportView(jSearchTable8);

        }
        /*
        * try { searchRowSet1.execute("select distinct(order_no) as scheme,supplier
            * from st_orders where order_no ILIKE
            * '"+jTextField1111.getText().toString()+"%' ORDER BY order_no");
            *
            * jSearchTable1.setModel(new
                * org.netbeans.lib.sql.models.TableModel(searchRowSet1, new
                    * org.netbeans.lib.sql.models.TableModel.Column[] { new
                        * org.netbeans.lib.sql.models.TableModel.Column("scheme", "Acc no.",
                            * false), new org.netbeans.lib.sql.models.TableModel.Column("supplier",
                            * "Supplier", false)
                        *
                        * }));
            */
            jSearchTable8.setShowHorizontalLines(false);
            jSearchScrollPane8.setViewportView(jSearchTable8);
            // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1116CaretUpdate

    private void jSearchTable8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable8MouseClicked
        cancelbtn.doClick();
        SupplierTxt.setText(jSearchTable8.getValueAt(jSearchTable8.getSelectedRow(), 2).toString());
        TenderTxt.setText(jSearchTable8.getValueAt(jSearchTable8.getSelectedRow(), 1).toString());
        lpoTxt.setText(jSearchTable8.getValueAt(jSearchTable8.getSelectedRow(), 0).toString());
        getTable(jSearchTable8.getValueAt(jSearchTable8.getSelectedRow(), 0).toString());
        PopulatereceivedItems(jSearchTable8.getValueAt(jSearchTable8.getSelectedRow(), 0).toString());
      ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
        
//        for (int k = 0; k < jTable3.getRowCount(); k++) {
//            for (int r = 0; r < jTable3.getColumnCount(); r++) {
//                jTable3.getModel().setValueAt(null, k, r);
//            }
//        }
//        populateTable22(SupplierTxt.getText());
        this.jSearchDialog4.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable8MouseClicked

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
        this.jSearchDialog4.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton57ActionPerformed

    private void lpoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lpoTxtActionPerformed

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        ////
        if(jTextField1.getCaretPosition()>3){
        ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' and (order_no ilike '%"+jTextField1.getText()+"%' OR  supplier ILIKE '%"+jTextField1.getText()+"%') group by supplier,order_no  order by supplier_name"));
        }
        else if(jTextField1.getCaretPosition()==0){
        
         ApprovalTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct order_no as LPO_LSO_NO,supplier as supplier_name from st_stock_cardex st where (grn_no!='rejected' or grn_no is null) and supplies=true and chairperson=true and technical=true and certficate_no is null and st.approved=FALSE  and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal'  group by supplier,order_no  order by supplier_name"));
        }
        
    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ApprovalTbl;
    private javax.swing.JButton Save;
    private javax.swing.JTextField SupplierTxt;
    private javax.swing.JTextField TenderTxt;
    private javax.swing.JTextField TenderTxt1;
    private javax.swing.JButton cancelbtn;
    public static javax.swing.JButton exitbtn;
    private javax.swing.JTable grn2PayablesLinkingTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton57;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JDialog jSearchDialog4;
    private javax.swing.JPanel jSearchPanel8;
    private javax.swing.JScrollPane jSearchScrollPane8;
    private javax.swing.JTable jSearchTable8;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1116;
    private javax.swing.JTextField lpoTxt;
    private javax.swing.JTable orderedItemsTbl;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton searchButton8;
    // End of variables declaration//GEN-END:variables
}
