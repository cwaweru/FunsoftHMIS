/*
 * companyprflintfr.java
 *
 * Created on August 13, 2002, 11:36 AM
 */
package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class IssiuingConsumablesintfr extends javax.swing.JInternalFrame {

    private javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    com.afrisoftech.lib.DBObject dbObject;

    public IssiuingConsumablesintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        dbObject = new com.afrisoftech.lib.DBObject();

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new javax.swing.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton10 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField111111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton5111 = new javax.swing.JButton();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTextField10 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);

        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Cancel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Cancel");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });
        jTextField112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField112ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel2.add(jTextField112, gridBagConstraints);

        jSearchTable2.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton10.setText("Cancel");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog111.setModal(true);
        jSearchDialog111.setUndecorated(true);
        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jTextField111111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel111.add(jTextField111111, gridBagConstraints);

        jSearchTable111.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable111.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });
        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton5111.setText("Close");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Stock Distribution - Consumbles [Expensed Direct after Transfering]");
        setToolTipText("");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setBackground(new java.awt.Color(0, 255, 204));

        jPanel2.setBackground(new java.awt.Color(0, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jComboBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jComboBox11, gridBagConstraints);

        jLabel13.setText("Receipient");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel1.setText("Issiuing Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel3.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBox2, gridBagConstraints);

        buttonGroup2.add(jCheckBox3);
        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Transfer from one store to another");
        jCheckBox3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jCheckBox3, gridBagConstraints);

        buttonGroup2.add(jCheckBox4);
        jCheckBox4.setText("Rectify previous transfer");
        jCheckBox4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jCheckBox4, gridBagConstraints);

        jLabel6.setText("Transfer No");
        jLabel6.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTextField10.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jTextField10, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setEnabled(false);
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel5.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        jLabel4.setText("Requisition No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField36, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel6, gridBagConstraints);

        buttonGroup4.add(jRadioButton1);
        jRadioButton1.setText("Use cost Price");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jRadioButton1, gridBagConstraints);

        buttonGroup4.add(jRadioButton2);
        jRadioButton2.setText("Use Selling Price");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel2.add(jPanel1, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Desc", "Strength", "Units", "Issuing store Bal", "Rev. Store Bal.", "Req. Qty", "Qty. Issued", "Price", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.5;
        gridBagConstraints.weighty = 30.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Issued To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(jTextField9, gridBagConstraints);

        jLabel5.setText("Issued By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel5, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(jTextField5, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(jTextField2, gridBagConstraints);

        jLabel2.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        jPanel11.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel2.add(jPanel11, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Utopia", 3, 18));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel12, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setMinimumSize(new java.awt.Dimension(25, 200));
        jPanel3.setPreferredSize(new java.awt.Dimension(50, 195));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('s');
        jButton1.setToolTipText("click to store data");
        jButton1.setLabel("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        jButton5.setMnemonic('r');
        jButton5.setText("Remove Row");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton5, gridBagConstraints);

        jButton8.setMnemonic('r');
        jButton8.setText("Reprint");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton8, gridBagConstraints);

        jButton7.setMnemonic('p');
        jButton7.setText("Ok & Print");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton7, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("click to clear fields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click to close");
        jButton4.setSelected(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton4, gridBagConstraints);

        jButton6.setMnemonic('h');
        jButton6.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel3.add(spacerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.5;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Main Store");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Sub Store");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jCheckBox2, gridBagConstraints);

        jTabbedPane1.addTab("Stock Trasfer from on store to the other", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 902, 459);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
        jSearchDialog111.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5111ActionPerformed

    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        jTextField36.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 0).toString());
        jSearchDialog111.dispose();
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
        this.populateTable22(this.jTextField36.getText().toString());

        try {
            for (int j = 0; j < jTable1.getRowCount(); j++) {
                //    java.sql.Statement stmtTable111 = connectDB.createStatement();
                if (jTable1.getModel().getValueAt(j, 0) != null) {

                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + jTable1.getValueAt(j, 0).toString() + "' AND department ILIKE '" + jComboBox2.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");
                    java.sql.Statement stmtTable11x = connectDB.createStatement();
                    java.sql.ResultSet rsetTable11x = stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + jTable1.getValueAt(j, 0).toString() + "' AND department ILIKE '" + jComboBox11.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");


                    while (rsetTable11x.next()) {
                        while (rsetTable11.next()) {
                            double storeBal = 0;
                            double depBal = 0;
                            storeBal = rsetTable11.getDouble(1);
                            depBal = rsetTable11x.getDouble(1);
                            jTable1.setValueAt(storeBal, j, 4);
                            jTable1.setValueAt(depBal, j, 5);
                        }
                    }
                }
            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }
    // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    private void populateTable22(java.lang.String patient_no) {

        int j = 0;
        try {
            java.sql.Statement stmtTable111 = connectDB.createStatement();
            java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT item_code,item_description,strength,units,price,quantity-qty_issued FROM st_receive_requisation WHERE requisition_no = '" + jTextField36.getText() + "'  and (quantity-qty_issued) >0 order by item_description");
            java.sql.Statement stmtTable11xx = connectDB.createStatement();

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                jTable1.setValueAt(rsetTable111.getObject(1), j, 0);
                jTable1.setValueAt(rsetTable111.getObject(2), j, 1);
                jTable1.setValueAt(rsetTable111.getObject(3), j, 2);
                jTable1.setValueAt(rsetTable111.getObject(4), j, 3);
                jTable1.setValueAt(rsetTable111.getObject(5), j, 8);
                jTable1.setValueAt(rsetTable111.getObject(6), j, 6);
                j++;
            //}
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }
    }
    private void jTextField111111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111111CaretUpdate
        if (this.jTextField111111.getCaretPosition() < 2) {
            System.out.print("Nothing");
        } else {
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct requisition_no as scheme,(date) as name from st_receive_requisation where requisition_no ILIKE '" + jTextField111111.getText().toString() + "%' AND cost_center ilike '" + this.jComboBox11.getSelectedItem().toString() + "%' AND store_name ilike '" + this.jComboBox2.getSelectedItem().toString() + "%'  and (quantity-qty_issued) >0 ORDER BY requisition_no"));
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);



        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField111111CaretUpdate

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton111Clicked();
    //this.jButton1.setEnabled(true);

    // this.jButton7.setEnabled(true);// Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton111Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog111.dispose();
        java.awt.Point point = this.jTextField36.getLocationOnScreen();
        jSearchDialog111.setSize(400, 200);
        jSearchDialog111.setLocation(point);
        jSearchDialog111.setVisible(true);


    }
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        jSearchDialog2.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jComboBox11.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField10.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        java.text.DateFormat df = java.text.DateFormat.getDateInstance();

        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

        sdf.applyPattern("yyyy-MM-dd");

        try {
            datePicker1.setDate(sdf.parse(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        jComboBox2.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jSearchDialog2.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jTextField112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField112ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField112ActionPerformed

    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT transaction_no,sub_store,store_name,trans_date FROM st_sub_stores WHERE transaction_no ILIKE '" + jTextField112.getText() + "%' AND receiving > 0 AND (transaction_no ilike 'T%' OR transaction_no ilike 'I%') ORDER BY transaction_no"));
        jSearchTable2.setShowHorizontalLines(false);
        jSearchScrollPane2.setViewportView(jSearchTable2);

// TODO add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();

    // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField10.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);



    }
    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        jLabel6.setEnabled(true);
        searchButton.setEnabled(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        jLabel6.setEnabled(false);
        searchButton.setEnabled(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_stores ORDER BY 1"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //   jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_stores ORDER BY 1"));
        jComboBox11.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //   jComboBox2ActionPerformed(evt);
            }
        });


    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        //this.jTextField1.setVisible(true);
        //this.jCheckBox2.setVisible(false);
        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_main_stores ORDER BY store_name"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //  jComboBox2ActionPerformed(evt);
            }
        });



        jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_stores ORDER BY store_name"));
        jComboBox11.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //   jComboBox2ActionPerformed(evt);
            }
        });


    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String transNo = null;
        try {
            connectDB.setAutoCommit(false);


            if (jCheckBox3.isSelected()) {
                java.sql.Statement ps1 = connectDB.createStatement();
                java.sql.ResultSet rst1 = ps1.executeQuery("select 'T'||currval('transfer_seq')");

                //   java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
                while (rst1.next()) {
                    transNo = rst1.getObject(1).toString();
                }
            } else {
                transNo = jTextField10.getText();
            }
            TransferedItemsPdf policy = new TransferedItemsPdf();
            policy.TransferedItemsPdf(connectDB, transNo);



        } catch (java.sql.SQLException sq) {

            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }         // Add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);
        String Stock = null;
        String actCode = null;
        String transNo = null;
        String userName = null;
        String glCode = null;
        String glType = null;
        try {
            jButton1ActionPerformed(evt);
            connectDB.setAutoCommit(false);
            if (jCheckBox3.isSelected()) {
                java.sql.Statement pst21 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pst21.executeQuery("select 'T'||currval('transfer_seq')");
                while (rs1.next()) {
                    transNo = rs1.getObject(1).toString();
                }
            } else {
                transNo = jTextField10.getText();
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            TransferedItemsPdf policy = new TransferedItemsPdf();
            policy.TransferedItemsPdf(connectDB, transNo);


            this.jButton1.setEnabled(false);
            for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }

            jTextField9.setText("");
        //            jComboBox11.setSelectedItem(null);
        // javax.swing.JOptionPane.showMessageDialog(this, "Enter quantity issued","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        // jLabel12.setForeground(java.awt.Color.red);
        // jLabel12.setText("Sorry. Another  Code already exists");
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        /*   if(jTextField1111.getCaretPosition() > 2){

        }else{

        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select description,units,buying_price FROM st_stock_item WHERE description ILIKE '"+jTextField1111.getText()+"%' and department ilike '"+jComboBox112.getSelectedItem().toString()+"%' UNION ALL select product,units,transfer_price from st_stock_prices WHERE product ILIKE '"+jTextField1111.getText()+"%' and department ilike '"+jComboBox112.getSelectedItem().toString()+"%'  ORDER BY description"));

        jSearchTable1.setShowHorizontalLines(false);
        jSearchScrollPane1.setViewportView(jSearchTable1);
        }
         */
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    private void cmbox11MouseClicked() {
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {

            this.cmbox1MouseClicked();
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmbox1MouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog.setSize(400, 200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), jTable1.getSelectedRow(), 1);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3), jTable1.getSelectedRow(), 3);
        //  jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),4),jTable1.getSelectedRow(), 9);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 5), jTable1.getSelectedRow(), 8);

        jSearchDialog.dispose();
        int i = jTable1.getSelectedRow();
        if (this.jCheckBox1.isSelected()) {
            try {
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select sum(qty),1 from stock_balance_qty where item_code = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "' and department ilike '" + jComboBox2.getSelectedItem().toString() + "%' AND dates <= '" + datePicker1.getDate() + "'");
                java.sql.Statement pst = connectDB.createStatement();
                while (rs1.next()) {

                    jTable1.setValueAt(rs1.getObject(1), i, 4);
                // jTable1.setValueAt(rs1.getObject(2),i,1);
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        } else {
            try {
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select sum(qty),1 from stock_balance_qty where item_code = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "' and department ilike '" + jComboBox2.getSelectedItem().toString() + "%' AND dates <= '" + datePicker1.getDate() + "'");
                java.sql.Statement pst = connectDB.createStatement();
                while (rs1.next()) {
                    jTable1.setValueAt(rs1.getObject(1), i, 4);
                //jTable1.setValueAt(rs1.getObject(2),i,1);
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        }

        try {
            java.sql.Statement pstmt12 = connectDB.createStatement();
            java.sql.ResultSet rs12 = pstmt12.executeQuery("select sum(qty),1 from stock_balance_qty where item_code = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "' and department ilike '" + jComboBox11.getSelectedItem().toString() + "%' AND dates <= '" + datePicker1.getDate() + "'");

            while (rs12.next()) {
                jTable1.setValueAt(rs12.getObject(1), i, 5);

            }

        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
    // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if (jTextField111.getCaretPosition() < 1) {
        } else {
            if (jCheckBox1.isSelected()) {
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT item_code,description,strength,units,packaging,buying_price FROM stockitem WHERE description ILIKE '" + jTextField111.getText() + "%' order by description"));

                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
            } else {
                if (jRadioButton1.isSelected()) {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT product_id,product,strength,units,1,transfer_price FROM stockprices WHERE product ILIKE '" + jTextField111.getText() + "%' ORDER BY product"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                } else {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT product_id,product,strength,units,1,selling_price FROM stockprices WHERE product ILIKE '" + jTextField111.getText() + "%' ORDER BY product"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                }
            }
        }


    // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    public void tableModelTableChangedx() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double Gross = Double.parseDouble(this.jTextField2.getText());
        for (int i = 0; i < jTable1.getRowCount(); i++) {

            if (jTable1.getValueAt(i, 7) != null) {

                if (jTable1.getSelectedColumn() == 7) {

                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 9).toString());
                    jTextField2.setText(java.lang.String.valueOf(resFloat));
                } else {

                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 9).toString());
                    jTextField2.setText(java.lang.String.valueOf(resFloat));

                }
            }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }

    public void tableModelTableChangedx(javax.swing.event.TableModelEvent evt) {
        double Gross = Double.parseDouble(this.jTextField2.getText());
        //        double resFloat = 0.00;
        double resFloat = 0.00;



        for (int i = 0; i < jTable1.getRowCount(); i++) {

            if (jTable1.getValueAt(i, 7) != null) {

                if (jTable1.getSelectedColumn() == 7) {

                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 9).toString());

                    jTextField2.setText(java.lang.String.valueOf(resFloat));



                } else {
                    resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 9).toString());

                    jTextField2.setText(java.lang.String.valueOf(resFloat));

                }
            }
        }

    //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 7) != null) {
            float floatCol2 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());

            float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString());
//            float pack = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());

            //   float resVal = floatCol2 * floatCol3*pack;
            float resVal = floatCol2 * floatCol3;

            java.lang.Float resFloat = new java.lang.Float(resVal);

            if (jTable1.getSelectedColumn() == jTable1.getSelectedColumn()) {

                jTable1.setValueAt(resFloat, jTable1.getSelectedRow(), 9);

                double Total = java.lang.Double.parseDouble(jTextField2.getText().toString());
                double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                double totalSum = Total + tableSum;
                jTextField2.setText("" + totalSum + "");

            }

        }
        this.tableModelTableChangedx();
    // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    private void populateTable1(java.lang.String patient_no) {
        int i = 0;
        try {

            //   for (int i = 0; i < jTable1.getRowCount(); i++ ) {
            //       if (jTable1.getModel().getValueAt(i,0) != null){

            java.sql.Statement stmtTable = connectDB.createStatement();

            java.sql.ResultSet rsetTable = stmtTable.executeQuery("SELECT product,balance,requisition,units FROM st_stock_prices WHERE requisition >0 AND department = '" + jComboBox11.getSelectedItem().toString() + "'");
            //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText().equalsIgnoreCase(jTextField1.getText())+"' and item = '"+jTable1.getValueAt(k,0).toString()+"'");

            while (rsetTable.next()) {

                jTable1.setValueAt(rsetTable.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable.getObject(2), i, 4);
                jTable1.setValueAt(rsetTable.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable.getObject(4), i, 1);
                //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);

                i++;

            }
        //   }
        // }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }


    }

    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        int k = 0;

        jButton1.setEnabled(true);

        // this.populateTable1(this.jComboBox11.getSelectedItem().toString());
        for (int j = 0; j < jTable1.getRowCount(); j++) {
            if (jTable1.getModel().getValueAt(j, 0) != null) {

                try {
                    java.sql.Statement stmtTable111 = connectDB.createStatement();

                    // java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE item = '"+jTable1.getValueAt(j,0).toString()+"' GROUP BY item");
                    //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText()+"' and item = '"+jTable1.getValueAt(j,0).toString()+"' GROUP BY item");
                    java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(quantity_instock) FROM st_stock_item WHERE department = '" + jComboBox2.getSelectedItem().toString() + "' and item_code = '" + jTable1.getValueAt(j, 0).toString() + "'");

                    while (rsetTable111.next()) {

                        jTable1.setValueAt(rsetTable111.getObject(1), j, 3);
                    //  jTable1.setValueAt(rsetTable1.getObject(3), i, 1);
                    //  jTable1.setValueAt(rsetTable1.getObject(2), i, 2);
                    //  jTable1.setValueAt(rsetTable1.getObject(4), i, 4);
                    //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                    //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);

                    // i++;

                    }

                /*    java.sql.Statement stmtTable1111 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1111 = stmtTable1111.executeQuery("SELECT balance,requisation,units FROM st_stock_prices WHERE product = '"+jTable1.getValueAt(j,0).toString()+"' AND department = '"+jComboBox11.getSelectedItem().toString()+"'");
                //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText().equalsIgnoreCase(jTextField1.getText())+"' and item = '"+jTable1.getValueAt(k,0).toString()+"'");

                while (rsetTable1111.next()) {

                jTable1.setValueAt(rsetTable1111.getObject(1), j, 4);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 2);
                //  jTable1.setValueAt(rsetTable1.getObject(4), i, 4);
                //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);

                //i++;

                }*/

                } catch (java.sql.SQLException sqlExec) {

                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

                }
            }
        }
    /*        crset21.setCommand("select distinct product FROM st_stock_prices WHERE department = '"+jComboBox11.getSelectedItem()+"'");
    crset21.setConnectionSource(pConnDB);

    cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset21, "product", null, null, null));
    javax.swing.table.TableColumn s = this.jTable1.getColumn("Item description");
    s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
    cmbox.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
    cmboxActionPerformed(evt);
    }
    });
    try {
    searchRowSet.execute("select product,units FROM st_stock_prices WHERE department = '"+jComboBox11.getSelectedItem().toString()+"' ORDER BY product");
    searchRowSet.setConnectionSource(pConnDB);

    searchRowSet.execute();

    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
    new org.netbeans.lib.sql.models.TableModel.Column("product", "Desc.", false),
    new org.netbeans.lib.sql.models.TableModel.Column("units", "Units", false)
    //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
    }));
    jSearchScrollPane.setViewportView(jSearchTable);
    System.out.println("Cannot sort out");
    } catch(java.sql.SQLException sqlExec) {

    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }
    jScrollPane1.setViewportView(jTable1);

     */
    // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());


            }
        }
        this.tableModelTableChangedx();
    // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
        jComboBox2.setSelectedItem(null);
        jComboBox11.setSelectedItem(null); // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());

        }

        if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else {
            if (jTable1.isEditing()) {
                jTable1.getCellEditor().stopCellEditing();
            }
            java.util.Calendar calendar = java.util.Calendar.getInstance();

            long dateNow = calendar.getTimeInMillis();

            java.sql.Date datenowSql = new java.sql.Date(dateNow);
            try {
                String Stock = null;
                String actCode = null;
                String Stock1 = null;
                String actCode1 = null;
                String transNo = null;
                String userName = null;
                String glCode = null;
                String glType = null;
                boolean consumable = false;
                int itemInt = 0;
                double sPrice = 0.00;
                double bPrice = 0.00;
                String code = null;
                String category = null;
                String productId = null;
                java.sql.Savepoint registerSavePoint = null;
                try {
                    connectDB.setAutoCommit(false);
                    registerSavePoint = connectDB.setSavepoint("registration");
                } catch (java.sql.SQLException ex) {
                    ex.printStackTrace();
                }

                try {

                    if (jCheckBox3.isSelected()) {
                        java.sql.Statement pst21 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pst21.executeQuery("select 'T'||nextval('transfer_seq')");
                        while (rs1.next()) {
                            transNo = rs1.getObject(1).toString();
                        }
                        java.sql.Statement pst2 = connectDB.createStatement();
                        java.sql.ResultSet rs = pst2.executeQuery("SELECT glstock_code,store_name FROM st_stores WHERE store_name ILIKE '" + jComboBox2.getSelectedItem() + "%'");
                        while (rs.next()) {
                            actCode = rs.getObject(1).toString();
                            Stock = rs.getObject(2).toString();
                        }

                        java.sql.Statement pst22 = connectDB.createStatement();
                        java.sql.ResultSet rs2 = pst22.executeQuery("SELECT glstock_code,store_name FROM st_stores WHERE store_name ILIKE '" + jComboBox11.getSelectedItem() + "%'");
                        while (rs2.next()) {
                            actCode1 = rs2.getObject(1).toString();
                            Stock1 = rs2.getObject(2).toString();
                        }
                        java.sql.Statement pst22q = connectDB.createStatement();
                        java.sql.ResultSet rs2q = pst22q.executeQuery("SELECT cs_code,store_name FROM st_stores WHERE store_name ILIKE '" + jComboBox11.getSelectedItem() + "%'");
                        while (rs2q.next()) {
                            glCode = rs2q.getObject(1).toString();
                            glType = rs2q.getObject(2).toString();
                        }

                        java.sql.Statement pst2q = connectDB.createStatement();
                        java.sql.ResultSet rsq = pst2q.executeQuery("select current_user");
                        while (rsq.next()) {
                            userName = rsq.getObject(1).toString();
                        }



                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            if (jTable1.getModel().getValueAt(i, 7) != null) {
                                double price = 0;
                                double pack = 0;
                                double quantity = Double.parseDouble(jTable1.getModel().getValueAt(i, 7).toString());
                                java.sql.Statement pst21r = connectDB.createStatement();
                                //         java.sql.ResultSet rstr = ps11r.executeQuery("SELECT mark_up FROM st_stores WHERE store_name ILIKE '"+jComboBox2.getSelectedItem().toString()+"'");
                                java.sql.ResultSet rstrs = pst21r.executeQuery("SELECT packaging FROM stockitem st WHERE st.item_code = '" + jTable1.getValueAt(i, 0).toString() + "'");
                                while (rstrs.next()) {
                                    pack = rstrs.getDouble(1);
                                }
                                double uprice = Double.parseDouble(jTable1.getModel().getValueAt(i, 8).toString());
                                if (jCheckBox2.isSelected()) {

                                    price = Double.parseDouble(jTable1.getModel().getValueAt(i, 8).toString());
                                    quantity = quantity;
                                } else {
                                    price = uprice / pack;
                                    quantity = quantity * pack;
                                }
                                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("INSERT INTO st_sub_stores values(? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                                pstmt1.setString(1, jComboBox2.getSelectedItem().toString());
                                pstmt1.setObject(2, jTable1.getValueAt(i, 1));
                                pstmt1.setDouble(4, quantity);
                                pstmt1.setDouble(3, 0.00);
                                pstmt1.setDouble(5, 0.00);
                                pstmt1.setDouble(6, java.lang.Double.valueOf(jTable1.getValueAt(i, 9).toString()));
                                pstmt1.setDouble(7, 0.00);
                                pstmt1.setString(8, transNo);
                                pstmt1.setString(9, "");
                                pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt1.setString(11, userName);
                                pstmt1.setObject(12, jTable1.getValueAt(i, 3));
                                pstmt1.setString(13, jComboBox11.getSelectedItem().toString());
                                pstmt1.setString(14, jTextField9.getText());
                                pstmt1.setDouble(15, price);
                                
                                pstmt1.setObject(16, jTable1.getValueAt(i, 0));
                                pstmt1.setObject(17, jTable1.getValueAt(i, 2));
                                pstmt1.executeUpdate();


                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_stock_cardex VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, upper(?), ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt.setString(1, null);
                                pstmt.setObject(3, jTable1.getValueAt(i, 1) + " " + jTable1.getValueAt(i, 2));
                                pstmt.setString(2, jComboBox11.getSelectedItem().toString());
                                pstmt.setDate(4, null);
                                pstmt.setDouble(5, java.lang.Double.valueOf(jTable1.getValueAt(i, 9).toString()));
                                pstmt.setDouble(6, price);
                                pstmt.setObject(7, jTable1.getValueAt(i, 3));
                                pstmt.setObject(8, "");
                                pstmt.setObject(9, null);
                                pstmt.setString(10, null);
                                pstmt.setDouble(11, 0.00);
                                pstmt.setDouble(12, quantity);
                                pstmt.setDouble(13, 0.00);
                                if (jTextField9.getText().equals("")) {
                                    javax.swing.JOptionPane.showMessageDialog(this, "Enter Issued to", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                } else {
                                    pstmt.setString(14, jTextField9.getText());
                                }
                                pstmt.setString(15, userName);
                                pstmt.setString(16, "");
                                pstmt.setString(17, null);
                                pstmt.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt.setString(19, jComboBox11.getSelectedItem().toString());
                                pstmt.setString(20, "Issuing");
                                pstmt.setDouble(21, 0.00);
                                pstmt.setString(23, actCode);
                                pstmt.setDouble(22, 0.00);
                                pstmt.setString(24, "");
                                pstmt.setString(25, Stock);
                                pstmt.setString(26, transNo);
                                pstmt.setDouble(27, 0.00);
                                pstmt.setString(28, userName);
                                pstmt.setBoolean(29, false);
                                pstmt.setDouble(30, 0.00);
                                pstmt.setDate(31, null);
                                pstmt.setObject(32, jTable1.getValueAt(i, 0));
                                pstmt.setObject(33, jTable1.getValueAt(i, 2));
                                pstmt.executeUpdate();


                                //  if(consumable){

                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO ac_ledger values(?,?,?,upper(?),?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                pstmt2.setString(1, glCode);
                                pstmt2.setObject(2, jComboBox11.getSelectedItem());
                                pstmt2.setString(3, "");
                                pstmt2.setString(4, jTextField9.getText());
                                pstmt2.setString(5, "");
                                pstmt2.setString(6, "");
                                pstmt2.setString(7, "");
                                pstmt2.setString(8, "");
                                pstmt2.setString(9, "");
                                pstmt2.setString(10, "");
                                pstmt2.setString(11, "");
                                pstmt2.setString(12, "");
                                pstmt2.setString(13, "");
                                pstmt2.setString(14, glType);
                                pstmt2.setString(15, "Issuing");
                                pstmt2.setDouble(16, java.lang.Double.valueOf(jTable1.getValueAt(i, 9).toString()));
                                pstmt2.setDouble(17, 0.00);
                                pstmt2.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt2.setString(19, "" + transNo + "");
                                pstmt2.setBoolean(20, false);
                                pstmt2.setBoolean(21, false);
                                pstmt2.setBoolean(22, false);
                                pstmt2.setString(23, userName);
                                pstmt2.executeUpdate();
                                /*  }else{
                                java.sql.PreparedStatement pstmty = connectDB.prepareStatement("INSERT INTO st_stock_cardex values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, upper(?), ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmty.setString(1,null);
                                pstmty.setObject(3,jTable1.getValueAt(i,1)+" "+jTable1.getValueAt(i,2));
                                pstmty.setString(2,jComboBox11.getSelectedItem().toString());
                                pstmty.setDate(4,null);
                                pstmty.setDouble(5,0.00);
                                pstmty.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,8).toString()));
                                pstmty.setObject(7,jTable1.getValueAt(i,3));
                                pstmty.setObject(8,"");
                                pstmty.setObject(9,null);
                                pstmty.setString(10,null);
                                pstmty.setDouble(12,0.00);
                                pstmty.setDouble(11,java.lang.Double.valueOf(jTable1.getValueAt(i,7).toString()));
                                pstmty.setDouble(13,0.00);
                                if(jTextField9.getText().equals("")){
                                javax.swing.JOptionPane.showMessageDialog(this, "Enter Issued to","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                                }else{
                                pstmty.setString(14,jTextField9.getText());
                                }
                                pstmty.setString(15,userName);
                                pstmty.setString(16,"");
                                pstmty.setString(17,null);
                                pstmty.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmty.setString(19,jComboBox2.getSelectedItem().toString());
                                pstmty.setString(20,"Issuing");
                                pstmty.setDouble(21,java.lang.Double.valueOf(jTable1.getValueAt(i,9).toString()));
                                pstmty.setDouble(22,0.00);
                                pstmty.setString(23,actCode1);
                                pstmty.setString(24,"");
                                pstmty.setString(25,Stock);
                                pstmty.setString(26,transNo);
                                pstmty.setDouble(27,0.00);
                                pstmty.setString(28,userName);
                                pstmty.setBoolean(29,false);
                                pstmty.setDouble(30,0.00);
                                pstmty.setDate(31,null);
                                pstmty.setObject(32, jTable1.getValueAt(i,0));
                                pstmty.setObject(33, jTable1.getValueAt(i,2));
                                pstmty.executeUpdate();

                                java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("INSERT INTO st_sub_stores VALUES(? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                                pstmt11.setString(1,jComboBox11.getSelectedItem().toString());
                                pstmt11.setObject(2,jTable1.getValueAt(i,1));
                                pstmt11.setDouble(3,quantity);
                                pstmt11.setDouble(4,0.00);
                                pstmt11.setDouble(5,0.00);
                                pstmt11.setDouble(6,java.lang.Double.valueOf(jTable1.getValueAt(i,9).toString()));
                                pstmt11.setDouble(7,0.00);
                                pstmt11.setString(8,transNo);
                                pstmt11.setString(9,"");
                                pstmt11.setDate(10,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt11.setString(11,userName);
                                pstmt11.setObject(12,jTable1.getValueAt(i,3));
                                pstmt11.setString(13,jComboBox2.getSelectedItem().toString());
                                pstmt11.setString(14,jTextField9.getText());
                                pstmt11.setDouble(15,java.lang.Double.valueOf(jTable1.getValueAt(i,8).toString()));
                                pstmt11.setObject(17,jTable1.getValueAt(i,2));
                                pstmt11.setObject(16,jTable1.getValueAt(i,0));
                                pstmt11.executeUpdate();

                                }
                                 */
                                java.sql.Statement pstBx = connectDB.createStatement();
                                java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product_id) from st_stock_prices where product_id ILIKE '" + jTable1.getValueAt(i, 0) + "' and department ILIKE '" + jComboBox11.getSelectedItem() + "%'");

                                while (rsBx.next()) {
                                    itemInt = rsBx.getInt(1);
                                }
                                System.out.println(itemInt);
                                if (itemInt < 1) {

                                    java.sql.Statement pstBx1 = connectDB.createStatement();
                                    java.sql.ResultSet rsBx1 = pstBx1.executeQuery("select sub_cat_code,item_code from st_stock_item where item_code ILIKE '" + jTable1.getValueAt(i, 0) + "%'");

                                    while (rsBx1.next()) {
                                        category = rsBx1.getString(1);
                                        productId = rsBx1.getString(2);
                                    }
                                    System.out.println(category);
                                    System.out.println(productId);
                                    java.sql.Statement pstBx11 = connectDB.createStatement();
                                    java.sql.ResultSet rsBx11 = pstBx11.executeQuery("select code from pb_activity where activity ILIKE '" + jComboBox11.getSelectedItem() + "%'");

                                    while (rsBx11.next()) {
                                        code = rsBx11.getString(1);

                                    }
                                    System.out.println(code);

                                    bPrice = Double.parseDouble(jTable1.getModel().getValueAt(i, 6).toString());
                                    sPrice = bPrice * 1.4;
                                    System.out.println(bPrice);
                                    System.out.println(sPrice);

                                    java.sql.PreparedStatement pstmtf = connectDB.prepareStatement("insert into st_stock_prices values( ?,?,?,?,?,?,?,?,?,?,?)");
                                    pstmtf.setObject(1, jTable1.getValueAt(i, 1).toString() + " " + jTable1.getValueAt(i, 2).toString());
                                    pstmtf.setObject(2, productId);
                                    pstmtf.setDouble(3, sPrice);
                                    pstmtf.setDouble(4, price);
                                    pstmtf.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                    pstmtf.setObject(6, jTable1.getValueAt(i, 3).toString());
                                    pstmtf.setString(7, jComboBox11.getSelectedItem().toString());
                                    pstmtf.setString(8, code);
                                    pstmtf.setObject(9, category);
                                    pstmtf.setDouble(10, java.lang.Double.valueOf(jTable1.getValueAt(i, 7).toString()));
                                    pstmtf.setDouble(11, 0.00);
                                    pstmtf.executeUpdate();

                                }
                                java.sql.PreparedStatement pstmt321 = connectDB.prepareStatement("UPDATE st_receive_requisation SET qty_issued = qty_issued + " + new java.lang.Double(quantity) + " WHERE requisition_no = '" + jTextField36.getText() + "' and item_code = '" + jTable1.getValueAt(i, 0).toString() + "'");
                                pstmt321.executeUpdate();
                            }
                        }

                    } else {
                        if (jCheckBox4.isSelected()) {
                            java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("UPDATE st_sub_stores SET sub_store = '" + jComboBox11.getSelectedItem().toString() + "',store_name = '" + jComboBox2.getSelectedItem().toString() + "',trans_date = '" + datePicker1.getDate() + "' WHERE issuing > 0 and transaction_no = '" + jTextField10.getText() + "'");
                            pstmt3.executeUpdate();
                            java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_sub_stores SET store_name = '" + jComboBox11.getSelectedItem().toString() + "', sub_store = '" + jComboBox2.getSelectedItem().toString() + "', AND trans_date = '" + datePicker1.getDate() + "'  WHERE receiving > 0 and transaction_no = '" + jTextField10.getText() + "'");
                            pstmt31.executeUpdate();
                        }
                    }
                    connectDB.commit();
                    connectDB.setAutoCommit(true);

                    javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    //   TransferedItemsPdf policy = new TransferedItemsPdf();
                    //   policy.TransferedItemsPdf(connectDB,transNo);


                    this.jButton1.setEnabled(false);
                    for (int k = 0; k < jTable1.getRowCount(); k++) {
                        for (int r = 0; r < jTable1.getColumnCount(); r++) {
                            jTable1.getModel().setValueAt(null, k, r);
                        }
                    }

                    jTextField9.setText("");

                //            jComboBox11.setSelectedItem(null);
                // javax.swing.JOptionPane.showMessageDialog(this, "Enter quantity issued","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                    try {
                        connectDB.rollback(registerSavePoint);
                    } catch (java.sql.SQLException sql) {
                        javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                // jLabel12.setForeground(java.awt.Color.red);
                // jLabel12.setText("Sorry. Another  Code already exists");
                }

            } catch (java.lang.Exception ex) {
                System.out.println(ex.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);


            }
        }
    // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        /*        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
        int j = 0;
        if (selectedGuaran != null) {
        try {


        java.sql.Statement pstmt1 = connectDB.createStatement();
        java.sql.ResultSet rs1 = pstmt1.executeQuery("select sum(quantity_received - sub_store_receiving) from st_stock_cardex where item = '"+selectedGuaran+"' GROUP BY item");
        java.sql.Statement pst = connectDB.createStatement();
        java.sql.ResultSet rst = pst.executeQuery("select count(item) from st_stock_cardex where item = '"+selectedGuaran+"' GROUP BY item");
        while (rst.next()) {
        j = rst.getInt(1);
        System.out.println(j);
        }
        if (j > 0){

        while (rs1.next()){

        jTable1.setValueAt(rs1.getObject(1),i,3);
        }
        }else{
        jTable1.setValueAt("0.00",i,3);
        }
        java.sql.Statement pstmt = connectDB.createStatement();
        java.sql.ResultSet rs = pstmt.executeQuery("select sum(quantity) from st_receive_requisation where item_description = '"+selectedGuaran+"' and issiued = false and cost_center = '"+jComboBox11.getSelectedItem().toString()+"' GROUP BY item_description");

        while (rs.next()){
        jTable1.setValueAt(rs.getObject(1),i,2);

        }

        java.sql.Statement pstmt11 = connectDB.createStatement();
        java.sql.ResultSet rs11 = pstmt11.executeQuery("select sum(receiving - issuing ) from st_sub_stores where item = '"+selectedGuaran+"' and store_name = '"+jComboBox11.getSelectedItem().toString()+"'");

        while (rs11.next()){
        jTable1.setValueAt(rs11.getObject(1),i,6);

        }

        java.sql.Statement pstmt12 = connectDB.createStatement();
        java.sql.ResultSet rs12 = pstmt12.executeQuery("select (sub_store_receiving) from st_stock_cardex where item = '"+selectedGuaran+"' and cost_center = '"+jComboBox11.getSelectedItem().toString()+"' AND transaction_type ='Stock Transfer'");

        while (rs12.next()){
        jTable1.setValueAt(rs12.getObject(1),i,5);

        }

        java.sql.Statement pstmt121 = connectDB.createStatement();
        java.sql.ResultSet rs121 = pstmt121.executeQuery("select units from st_stock_cardex where item = '"+selectedGuaran+"'");

        while (rs121.next()){
        jTable1.setValueAt(rs121.getObject(1),i,1);

        }

        java.sql.Statement pstmt7 = connectDB.createStatement();
        java.sql.ResultSet rs7 = pstmt7.executeQuery("select avg(price_per_item)::numeric(30,2) from st_stock_cardex where item = '"+selectedGuaran+"' and price_per_item > 0 limit 4");

        while (rs7.next()){
        jTable1.setValueAt(rs7.getObject(1),i,7);

        }

        } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
        }

        }
         */
        // Add your handling code here:
    }
    /* private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
    int i = jTable1.getSelectedRow();

    }
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    public static javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField111111;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JPanel spacerPanel;
    // End of variables declaration//GEN-END:variables
}
