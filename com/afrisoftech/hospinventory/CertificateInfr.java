/*
 
 * Created on Feb 13, 2013, 08:43 AM
 */
package com.afrisoftech.hospinventory;

/**
 *
 * @author Francis King'oi (fkwaweru@gmail.com)
 */
public class CertificateInfr extends javax.swing.JInternalFrame {
    
    java.lang.String locateSite;
    java.lang.String LOCAL_SITE = "local";
    java.lang.String REMOTE_SITE = "remote";
    javax.swing.JComboBox cmbox2 = null;
    javax.swing.JComboBox cmbox3 = null;
    javax.swing.JComboBox cmbox4 = null;
    private javax.swing.JComboBox cmbox5;
    private javax.swing.JComboBox cmbox51;
    private javax.swing.JComboBox cmbox52;
    javax.swing.JSpinner dateSpinner = null;
    javax.swing.JSpinner dateSpinner1 = null;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    public CertificateInfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog4 = new javax.swing.JDialog();
        jSearchPanel8 = new javax.swing.JPanel();
        jTextField1116 = new javax.swing.JTextField();
        jSearchScrollPane8 = new javax.swing.JScrollPane();
        jSearchTable8 = new com.afrisoftech.dbadmin.JTable();
        jButton57 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel26 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel27 = new javax.swing.JPanel();
        postbtn4 = new javax.swing.JButton();
        resetbtn4 = new javax.swing.JButton();
        cancelbtn4 = new javax.swing.JButton();
        exitbtn4 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jTextField41 = new javax.swing.JTextField();
        searchButton8 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel11 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();

        jSearchDialog4.setModal(true);
        jSearchDialog4.setUndecorated(true);
        jSearchDialog4.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel8.setLayout(new java.awt.GridBagLayout());

        jTextField1116.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1116CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel8.add(jTextField1116, gridBagConstraints);

        jSearchTable8.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable8.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable8MouseClicked(evt);
            }
        });
        jSearchScrollPane8.setViewportView(jSearchTable8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel8.add(jSearchScrollPane8, gridBagConstraints);

        jButton57.setText("Close");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel8.add(jButton57, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog4.getContentPane().add(jSearchPanel8, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Certificate of Compliance");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel26.setLayout(new java.awt.GridBagLayout());

        jLabel43.setText("Quotation No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel26.add(jLabel43, gridBagConstraints);

        jTable3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Item / Particulars", "Ordered Specs", "Qty", "Amount", "Received/Rejected Items", "Received", "Remarks(Reason for Rejecting)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable3.setRowHeight(20);
        jScrollPane7.setViewportView(jTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel26.add(jScrollPane7, gridBagConstraints);

        jPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel27.setLayout(new java.awt.GridBagLayout());

        postbtn4.setMnemonic('P');
        postbtn4.setText("Save");
        postbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(postbtn4, gridBagConstraints);

        resetbtn4.setMnemonic('R');
        resetbtn4.setText("RemoveRow");
        resetbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(resetbtn4, gridBagConstraints);

        cancelbtn4.setMnemonic('l');
        cancelbtn4.setText("Clear");
        cancelbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(cancelbtn4, gridBagConstraints);

        exitbtn4.setMnemonic('C');
        exitbtn4.setText("Close");
        exitbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(exitbtn4, gridBagConstraints);

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel27.add(jLabel44, gridBagConstraints);

        jButton3.setText("Preview Form");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel27.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel26.add(jPanel27, gridBagConstraints);

        jLabel45.setText("LPO/LSO No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel26.add(jLabel45, gridBagConstraints);

        jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel28.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel28.setLayout(new java.awt.GridBagLayout());

        jTextField41.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel28.add(jTextField41, gridBagConstraints);

        searchButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton8.setToolTipText("Search Patient's Name");
        searchButton8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton8.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton8.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel28.add(searchButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel26.add(jPanel28, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(jTextField1, gridBagConstraints);

        jLabel1.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel26.add(jLabel1, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel26.add(jTextField2, gridBagConstraints);

        jLabel2.setText("Checked By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel26.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel26.add(jTextField3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(datePicker2, gridBagConstraints);

        jLabel11.setText("Date Delivered");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel26.add(jLabel11, gridBagConstraints);

        jLabel46.setText("Delivery No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel26.add(jLabel46, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(jTextField4, gridBagConstraints);

        jTabbedPane1.addTab("Enter LPO Details Here", jPanel26);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 805, 428);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbox51ActionPerformed(java.awt.event.ActionEvent evt) {
    }

    /*
     * cmbox52 = new javax.swing.JComboBox();
     *
     * cmbox52.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,
     * "SELECT activity FROM st_specifications WHERE sub_category ILIKE '" +
     * cmbox51.getSelectedItem() + "' ORDER BY 1"));
     *
     * javax.swing.table.TableColumn seditor12 =
     * this.jTable3.getColumn("Specifications");
     *
     * seditor12.setCellEditor(new javax.swing.DefaultCellEditor(cmbox52));
     *
     * cmbox52.addActionListener(new java.awt.event.ActionListener() {
     *
     * public void actionPerformed(java.awt.event.ActionEvent evt) {
     *
     * cmbox52ActionPerformed(evt); } }); }
     *
     * private void cmbox5ActionPerformed(java.awt.event.ActionEvent evt) {
     *
     * cmbox51 = new javax.swing.JComboBox();
     *
     * cmbox51.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,
     * "SELECT description FROM st_key_features WHERE identifier ILIKE '" +
     * cmbox5.getSelectedItem() + "' ORDER BY 1"));
     *
     * javax.swing.table.TableColumn seditor11 = this.jTable3.getColumn("Key
     * Features");
     *
     * seditor11.setCellEditor(new javax.swing.DefaultCellEditor(cmbox51));
     *
     * cmbox51.addActionListener(new java.awt.event.ActionListener() {
     *
     * public void actionPerformed(java.awt.event.ActionEvent evt) {
     *
     * cmbox51ActionPerformed(evt); } }); }
     */
    private void cmbox52ActionPerformed(java.awt.event.ActionEvent evt) {
    }
    
    private void searchButton4Clicked() {
        
        System.out.println("Showing dialog");

        // jSearchDialog4.dispose();
        java.awt.Point point = this.jTextField41.getLocationOnScreen();
        
        jSearchDialog4.setSize(400, 200);
        
        jSearchDialog4.setLocation(point);
        jSearchDialog4.setVisible(true);
        
        
    }
private void jTextField1116CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1116CaretUpdate
    // jSearchTable8.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date FROM st_item_to_quote WHERE quotation_no ILIKE '" + jTextField1116.getText().toString() + "%'  ORDER BY 1"));

    
    if (this.jTextField1116.getCaretPosition() < 2) {
        System.out.print("Nothing");
    } else {
        jSearchTable8.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                + "DISTINCT order_no,quotation_no FROM st_orders "
                + "WHERE order_no ILIKE '" + jTextField1116.getText().toString() + "%' ORDER BY 1"));
        jSearchTable8.setShowHorizontalLines(false);
        jSearchScrollPane8.setViewportView(jSearchTable8);
        
    }
    /*
     * try { searchRowSet1.execute("select distinct(order_no) as scheme,supplier
     * from st_orders where order_no ILIKE
     * '"+jTextField1111.getText().toString()+"%' ORDER BY order_no");
     *
     * jSearchTable1.setModel(new
     * org.netbeans.lib.sql.models.TableModel(searchRowSet1, new
     * org.netbeans.lib.sql.models.TableModel.Column[] { new
     * org.netbeans.lib.sql.models.TableModel.Column("scheme", "Acc no.",
     * false), new org.netbeans.lib.sql.models.TableModel.Column("supplier",
     * "Supplier", false)
     *
     * }));
     */
    jSearchTable8.setShowHorizontalLines(false);
    jSearchScrollPane8.setViewportView(jSearchTable8);
// TODO add your handling code here:
}//GEN-LAST:event_jTextField1116CaretUpdate
    
private void jSearchTable8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable8MouseClicked
    jTextField41.setText(jSearchTable8.getValueAt(jSearchTable8.getSelectedRow(), 0).toString());
    jTextField4.setText(jSearchTable8.getValueAt(jSearchTable8.getSelectedRow(), 1).toString());
    for (int k = 0; k < jTable3.getRowCount(); k++) {
        for (int r = 0; r < jTable3.getColumnCount(); r++) {
            jTable3.getModel().setValueAt(null, k, r);
        }
    }
    populateTable22(jTextField41.getText());
    this.jSearchDialog4.dispose();
    // TODO add your handling code here:
}//GEN-LAST:event_jSearchTable8MouseClicked
    private void populateTable22(java.lang.String patient_no) {
        int i = 0;
        int j = 0;
        try {
            
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("SELECT DISTINCT supplier,date,COUNT(supplier) FROM st_orders WHERE order_no = '" + jTextField41.getText() + "' GROUP BY supplier,date");
            
            while (rset.next()) {
                jTextField2.setText(rset.getString(1));
                this.datePicker2.setDate(rset.getDate(2));
                j = rset.getInt(3);
            }
            if (j > 0) {
                java.sql.Statement stmtTable111 = connectDB.createStatement();
                java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT item,quantity,net_value FROM st_orders WHERE order_no = '" + jTextField41.getText() + "'");
                
                while (rsetTable111.next()) {
                    // for (int i = 0; i < rsetTable111.getInt(2); i++) {
                    jTable3.setValueAt(rsetTable111.getObject(1), i, 0);
                    jTable3.setValueAt(rsetTable111.getObject(1), i, 1);
                    jTable3.setValueAt(rsetTable111.getObject(1), i, 4);
                    jTable3.setValueAt(rsetTable111.getObject(2), i, 2);
                    jTable3.setValueAt(rsetTable111.getObject(3), i, 3);
                    
                    i++;
                    //}
                }
            }
            
        } catch (java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }
    }
private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
    this.jSearchDialog4.dispose();
    // TODO add your handling code here:
}//GEN-LAST:event_jButton57ActionPerformed
    
private void searchButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton8ActionPerformed
    searchButton4Clicked();
    // TODO add your handling code here:
}//GEN-LAST:event_searchButton8ActionPerformed
    
private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    com.afrisoftech.hospinventory.ComplianceCertificatePdf policy = new com.afrisoftech.hospinventory.ComplianceCertificatePdf();
    policy.ComplianceCertificatePdf(connectDB, this.jTextField1.getText().toString(), jTextField41.getText().toString());
// TODO add your handling code here:
}//GEN-LAST:event_jButton3ActionPerformed
    
private void exitbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn4ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_exitbtn4ActionPerformed
    
private void cancelbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn4ActionPerformed
    for (int k = 0; k < jTable3.getRowCount(); k++) {
        for (int r = 0; r < jTable3.getColumnCount(); r++) {
            jTable3.getModel().setValueAt(null, k, r);
        }
    }// TODO add your handling code here:
}//GEN-LAST:event_cancelbtn4ActionPerformed
    
private void resetbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn4ActionPerformed
    
    for (int r = 0; r < jTable3.getColumnCount(); r++) {
        jTable3.getModel().setValueAt(null, jTable3.getSelectedRow(), r);
    }
    // TODO add your handling code here:
}//GEN-LAST:event_resetbtn4ActionPerformed
    
private void postbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn4ActionPerformed
    
    
    java.util.Calendar calendar = java.util.Calendar.getInstance();
    
    long dateNow = calendar.getTimeInMillis();
    
    java.sql.Date datenowSql = new java.sql.Date(dateNow);
    
    System.out.println(datenowSql.toString());
    
    java.sql.Savepoint registerSavePoint = null;
    try {
        connectDB.setAutoCommit(false);
        registerSavePoint = connectDB.setSavepoint("registration");
        
        String addr = null;
        String tel = null;
        String qno = null;
        String desc = null;
        String cert = null;
        java.sql.Statement stmt1 = connectDB.createStatement();
        
        java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT postal_address,tel1  FROM st_suppliers WHERE supplier_name = '" + jTextField2.getText() + "'");
        
        while (rset1.next()) {
            addr = rset1.getString(1);
            tel = rset1.getString(2);
        }
        
        java.sql.Statement stmt1x = connectDB.createStatement();
        
        java.sql.ResultSet rset1x = stmt1x.executeQuery("SELECT quotation_no FROM st_orders WHERE order_no = '" + jTextField1.getText() + "'");
        
        while (rset1x.next()) {
            qno = rset1x.getString(1);
        }
        
        java.sql.Statement stmt1xx = connectDB.createStatement();
        
        java.sql.ResultSet rset1xx = stmt1xx.executeQuery("SELECT NEXTVAL('certno_seq')");
        
        while (rset1xx.next()) {
            cert = rset1xx.getString(1);
        }
        
        if (jTable3.isEditing()) {
            jTable3.getCellEditor().stopCellEditing();
        }
        for (int i = 0; i < jTable3.getRowCount(); i++) {
            if (jTable3.getModel().getValueAt(i, 2) != null) {
                
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_certificate("
                        + "lpo, dr_no, item, model, serial_no,supplier, supplier_add, "
                        + "supplier_tel, quotation_no,"
                        + "description, date_delivered, checked_by, cert_no, amount, procured, "
                        + "received, remarks, reject_reason, rejection_no)"
                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pstmt.setObject(1, jTextField41.getText());
                pstmt.setObject(2, jTextField1.getText());
                pstmt.setObject(3, jTable3.getValueAt(i, 0).toString());
                pstmt.setObject(4, jTable3.getValueAt(i, 1).toString());
                pstmt.setObject(5, jTable3.getValueAt(i, 2).toString());
                pstmt.setObject(6, jTextField2.getText());
                pstmt.setObject(7, addr);
                pstmt.setObject(8, tel);
                pstmt.setObject(9, jTextField4.getText());
                pstmt.setObject(10, "");
                pstmt.setDate(11, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                pstmt.setObject(12, jTextField3.getText());
                pstmt.setObject(13, cert);
                pstmt.setDouble(14, java.lang.Double.valueOf(jTable3.getValueAt(i, 3).toString()));
                pstmt.setObject(15, jTable3.getValueAt(i, 4).toString());
                if (jTable3.getValueAt(i, 5) == null) {
                    pstmt.setBoolean(16, false);
                } else {
                    pstmt.setBoolean(16, java.lang.Boolean.valueOf(jTable3.getValueAt(i, 5).toString()));
                }
                
                 if (jTable3.getValueAt(i, 6) == null) {
                    pstmt.setString(17, "");
                } else {
                    pstmt.setObject(17, jTable3.getValueAt(i, 6).toString());
                }
                
                pstmt.setObject(18, "");
                pstmt.setObject(19, "");
                
                
                pstmt.executeUpdate();
            }
        }
        
        connectDB.commit();
        connectDB.setAutoCommit(true);
        javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        
        for (int k = 0; k < jTable3.getRowCount(); k++) {
            for (int r = 0; r < jTable3.getColumnCount(); r++) {
                jTable3.getModel().setValueAt(null, k, r);
            }
        }
        
    } catch (java.sql.SQLException sq) {
        try {
            connectDB.rollback(registerSavePoint);
        } catch (java.sql.SQLException sql) {
            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        System.out.println(sq.getMessage());
    }

    // TODO add your handling code here:
}//GEN-LAST:event_postbtn4ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelbtn4;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JButton exitbtn4;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton57;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JDialog jSearchDialog4;
    private javax.swing.JPanel jSearchPanel8;
    private javax.swing.JScrollPane jSearchScrollPane8;
    private javax.swing.JTable jSearchTable8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1116;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JButton postbtn4;
    private javax.swing.JButton resetbtn4;
    private javax.swing.JButton searchButton8;
    // End of variables declaration//GEN-END:variables
}
