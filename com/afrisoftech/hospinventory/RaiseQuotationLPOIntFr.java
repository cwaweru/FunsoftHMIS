/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.hospinventory;

/**
 *
 * @author sytem partners
 */
public class RaiseQuotationLPOIntFr extends javax.swing.JInternalFrame {

    /**
     * Creates new form RaiseQuotationLPOIntFr
     */
      java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    public RaiseQuotationLPOIntFr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
       connectDB = connDb;
       

        pConnDB = pconnDB;
        initComponents();
        setTitle("Raise A Quotation LPO/LSO");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDialog1 = new javax.swing.JDialog();
        jLabel39 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel4 = new javax.swing.JPanel();
        jTextField1113 = new javax.swing.JTextField();
        jSearchScrollPane4 = new javax.swing.JScrollPane();
        jSearchTable4 = new com.afrisoftech.dbadmin.JTable();
        jButton44 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jSearchDialog5 = new javax.swing.JDialog();
        jSearchPanel5 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane5 = new javax.swing.JScrollPane();
        jSearchTable5 = new com.afrisoftech.dbadmin.JTable();
        jButton45 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        postbtn3 = new javax.swing.JButton();
        resetbtn3 = new javax.swing.JButton();
        cancelbtn3 = new javax.swing.JButton();
        exitbtn3 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new com.afrisoftech.dbadmin.JTable();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jTextField38 = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel19 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        datePicker5 = new com.afrisoftech.lib.DatePicker();
        jLabel20 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jTextField93 = new javax.swing.JTextField();
        searchButton5 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setTitle("Approve LPO/LSO");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setLocationByPlatform(true);
        jDialog1.setMinimumSize(new java.awt.Dimension(300, 150));
        jDialog1.setModal(true);
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel39.setText("Authorising Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jLabel39, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jDialog1.getContentPane().add(jPasswordField1, gridBagConstraints);

        jButton1.setText("Approve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jDialog1.getContentPane().add(jButton2, gridBagConstraints);

        jSearchDialog12.setModal(true);
        jSearchDialog12.setUndecorated(true);
        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel4.setLayout(new java.awt.GridBagLayout());

        jTextField1113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel4.add(jTextField1113, gridBagConstraints);

        jSearchTable4.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable4MouseClicked(evt);
            }
        });
        jSearchScrollPane4.setViewportView(jSearchTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel4.add(jSearchScrollPane4, gridBagConstraints);

        jButton44.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton44, gridBagConstraints);

        jButton54.setText("Close");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton54, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel4, gridBagConstraints);

        jSearchDialog5.setModal(true);
        jSearchDialog5.setUndecorated(true);
        jSearchDialog5.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel5.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel5.add(jTextField114, gridBagConstraints);

        jSearchTable5.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable5.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable5MouseClicked(evt);
            }
        });
        jSearchScrollPane5.setViewportView(jSearchTable5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel5.add(jSearchScrollPane5, gridBagConstraints);

        jButton45.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton45, gridBagConstraints);

        jButton55.setText("Close");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton55, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog5.getContentPane().add(jSearchPanel5, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/My Icons.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1000, 500));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel33.setLayout(new java.awt.GridBagLayout());

        postbtn3.setText("Generate LPO/LSO");
        postbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(postbtn3, gridBagConstraints);

        resetbtn3.setMnemonic('R');
        resetbtn3.setText("RemoveRow");
        resetbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(resetbtn3, gridBagConstraints);

        cancelbtn3.setMnemonic('l');
        cancelbtn3.setText("Clear form");
        cancelbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(cancelbtn3, gridBagConstraints);

        exitbtn3.setMnemonic('c');
        exitbtn3.setText("Close form");
        exitbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(exitbtn3, gridBagConstraints);

        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel33.add(jLabel53, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel33.add(jLabel43, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel15.add(jPanel33, gridBagConstraints);

        jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel23.setLayout(new java.awt.GridBagLayout());

        jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Item Code", "Item Description", "Units", "Quantity", "Unit Price", "Days to Deliver", "Brand", "Country of Origin", "Remarks"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable13.setSurrendersFocusOnKeystroke(true);
        /*cmbox4 = new javax.swing.JComboBox();

        cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

        javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

        seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

        *
        javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

        javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

        javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

        seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
        */
        javax.swing.table.TableColumn column3 = null;
        for (int i = 0; i < 5; i++) {
            column3 = jTable13.getColumnModel().getColumn(i);
            if (i == 0) {

                column3.setPreferredWidth(8); //sport column is bigger
            } else {
                if (i == 2) {
                    column3.setPreferredWidth(400);
                } else {
                    //if (i == 2) {
                        column3.setPreferredWidth(40);
                        // }  else
                    //column1.setPreferredWidth(50);

                }
            }
        }
        jScrollPane13.setViewportView(jTable13);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel23.add(jScrollPane13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel15.add(jPanel23, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
        dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel11.add(dateSpinner1, gridBagConstraints);
        /*     gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jTextField9, gridBagConstraints);
        */
        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel16.setText("Quotation No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel17.add(jLabel16, gridBagConstraints);

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel18.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        jTextField38.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(jTextField38, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton4.setToolTipText("Search Patient's Name");
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel18.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel17.add(jPanel18, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jTextField5, gridBagConstraints);

        jLabel17.setText("Quotation Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel17.add(jLabel17, gridBagConstraints);

        jTextPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
        jTextPane4.setEditable(false);
        jScrollPane5.setViewportView(jTextPane4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jScrollPane5, gridBagConstraints);

        jLabel18.setText("Openning Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel17.add(jLabel18, gridBagConstraints);

        jTextField6.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jTextField6, gridBagConstraints);

        jLabel22.setText("Document Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel17.add(jLabel22, gridBagConstraints);

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "LPO", "LSO", "IMPREST", "OTHERS" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel17.add(jComboBox11, gridBagConstraints);

        jLabel23.setText("Selection Criteria");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel17.add(jLabel23, gridBagConstraints);

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Average Price", "Highest Price", "Delivery" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel17.add(jComboBox12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        jPanel16.add(jPanel17, gridBagConstraints);

        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel19.setText("Date Due");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel19.add(jLabel19, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(datePicker5, gridBagConstraints);

        jLabel20.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel19.add(jLabel20, gridBagConstraints);

        jPanel43.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel43.setLayout(new java.awt.GridBagLayout());

        jTextField93.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel43.add(jTextField93, gridBagConstraints);

        searchButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton5.setToolTipText("Search");
        searchButton5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton5.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton5.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel43.add(searchButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jPanel43, gridBagConstraints);

        jLabel21.setText("User Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel19.add(jLabel21, gridBagConstraints);

        jTextField11.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jTextField11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(jPanel19, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel15.add(jPanel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel15, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn3ActionPerformed

        this.jDialog1.setVisible(true);

        // if (allowedAccess) {

            // }

        // TODO add your handling code here:
    }//GEN-LAST:event_postbtn3ActionPerformed

    private void resetbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetbtn3ActionPerformed

    private void cancelbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelbtn3ActionPerformed

    private void exitbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn3ActionPerformed

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        searchButton13Clicked();         // TODO add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed

    private void searchButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton5ActionPerformed
        searchButtonClicked5();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.lang.String access_code = null;

        try {

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("select accessobject from defined_contribution");

            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                access_code = rset.getObject(1).toString();
            }
            //System.out.println(access_code);

            if (jPasswordField1.getText().equals(access_code)) {
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker5.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker5.getDate().before(periodFrom) || datePicker5.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (jTable13.isEditing()) {
                        jTable13.getCellEditor().stopCellEditing();
                    }
                    String oder_no = null;

                    double quantity = 0.00;

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);

                    System.out.println(datenowSql.toString());

                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    try {
                        String order_no1 = null;
                        java.sql.Date current_date = null;
                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select date_part('year',now())|| lpad('" + order_no1 + "',6,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            oder_no = rs1.getObject(1).toString();
                        }
                        System.out.println("" + oder_no + "");
                        for (int i = 0; i < jTable13.getRowCount(); i++) {
                            if (jTable13.getModel().getValueAt(i, 0) != null) {
                                if (com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(i, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(i, 4).toString()) * Double.parseDouble(jTable13.getValueAt(i, 5).toString()) >= 0.00) {
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO st_orders("
                                        + "supplier, item, units, quantity, unit_price, gross_value, "
                                        + "net_value, ordered, order_no, "
                                        + "date_due, date, received, code, item_strength,"
                                        + "ordering_store, ordered_by, quotation_no, days_to_deliver, brand, "
                                        + "country, remarks, doc_type, criteria)"
                                        + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                                    pstmt2.setObject(1, jTextField93.getText());
                                    pstmt2.setObject(2, jTable13.getValueAt(i, 2));
                                    pstmt2.setObject(3, jTable13.getValueAt(i, 3));
                                    pstmt2.setDouble(4, java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString()));
                                    pstmt2.setDouble(5, java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()));
                                    pstmt2.setDouble(6, java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString()));
                                    pstmt2.setDouble(7, java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString()));
                                    pstmt2.setBoolean(8, true);
                                    pstmt2.setString(9, oder_no);
                                    pstmt2.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker5.getDate()));
                                    pstmt2.setDate(11, current_date);
                                    pstmt2.setBoolean(12, false);
                                    pstmt2.setObject(13, jTable13.getValueAt(i, 1));
                                    pstmt2.setObject(14, "");
                                    pstmt2.setString(15, jTextPane4.getText());
                                    pstmt2.setString(16, jTextField11.getText());
                                    pstmt2.setString(17, jTextField38.getText());
                                    pstmt2.setObject(18, jTable13.getValueAt(i, 6));
                                    pstmt2.setObject(19, jTable13.getValueAt(i, 7));
                                    pstmt2.setObject(20, jTable13.getValueAt(i, 8));
                                    pstmt2.setObject(21, jTable13.getValueAt(i, 9));
                                    pstmt2.setObject(22, jComboBox11.getSelectedItem());
                                    pstmt2.setObject(23, jComboBox12.getSelectedItem());

                                    pstmt2.executeUpdate();

                                    /*
                                    * java.sql.PreparedStatement pstmt3 =
                                    * connectDB.prepareStatement("UPDATE
                                        * st_analyse_requisation SET ordered
                                        * ='true' WHERE item_description = '" +
                                        * jTable1.getValueAt(i, 1).toString() + "'
                                        * and quantity_to_order > 0");
                                        * pstmt3.executeUpdate();
                                        * java.sql.PreparedStatement pstmt31 =
                                        * connectDB.prepareStatement("UPDATE
                                            * st_stock_item SET qty_ordered =
                                            * qty_ordered + " + new
                                            * java.lang.Double(quantity) + ",
                                            * quantity_toorder = quantity_toorder - " +
                                            * new java.lang.Double(quantity) + " WHERE
                                            * description = '" + jTable1.getValueAt(i,
                                            * 0).toString() + "'");
                                    * pstmt31.executeUpdate();
                                    *
                                    */

                                    //quantity = Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString());
                                    java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField38.getText() + "'");
                                    pstmt31.executeUpdate();

                                    java.sql.PreparedStatement pstmtCommit2Votebook = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField38.getText() + "'");
                                    pstmtCommit2Votebook.executeUpdate();

                                    //}
                                //Update the vote balance against the committed amount
//                                com.afrisoftech.lib.VoteBook.setVoteBalance(connectDB,
//                                    com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(i, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(i, 4).toString()) * Double.parseDouble(jTable13.getValueAt(i, 5).toString()),
//                                    com.afrisoftech.lib.VoteBook.getVote(connectDB, jTable13.getValueAt(i, 2).toString(),
//                                        com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)),
//                                    com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
                            } else {
                                javax.swing.JOptionPane.showMessageDialog(this, "Sorry! You cannot commit more than the budget on the vote.");
                            }
                        }
                    }

                    /*
                    * for (int i = 0; i < jTable13.getRowCount(); i++) { if
                        * (jTable13.getValueAt(i, 5) != null) {
                            * com.afrisoftech.lib.VoteBook.setVoteBalance(connectDB,
                                * com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB,
                                    * jTable13.getValueAt(i, 2).toString(),
                                    * com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB))
                                * - Double.parseDouble(jTable13.getValueAt(i,
                                    * 4).toString()) *
                            * Double.parseDouble(jTable13.getValueAt(i,
                                * 5).toString()),
                        * com.afrisoftech.lib.VoteBook.getVote(connectDB,
                            * jTable13.getValueAt(i, 2).toString(),
                            * com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)),
                        * com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
                    * } }
            *
            */
            // OrdersPdf policy = new OrdersPdf();
            // policy.OrdersPdf(connectDB, jComboBox11.getSelectedItem().toString(), oder_no);

            //     java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE st_orders SET ordered ='true' WHERE item = '"+this.jComboBox1.getSelectedItem().toString()+"'");
            //     pstmt4.executeUpdate();

            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            for (int k = 0; k < jTable13.getRowCount(); k++) {
                for (int r = 0; r < jTable13.getColumnCount(); r++) {
                    jTable13.getModel().setValueAt(null, k, r);
                }
            }

            if (jComboBox11.getSelectedItem().toString().equalsIgnoreCase("LSO")) {
                com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf();

                policy.LsoMtrhPdf(connectDB, jTextField93.getText(), oder_no);
                // com.afrisoftech.hospinventory.LsoPdf policy = new com.afrisoftech.hospinventory.LsoPdf();

                // policy.LsoPdf(connectDB, jTextField93.getText(), oder_no);
            } else {

//                com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf();
//
//                policy.LpoMtrhPdf(connectDB, jTextField93.getText(), oder_no);
//                //com.afrisoftech.hospinventory.LpoPdf policy = new com.afrisoftech.hospinventory.LpoPdf();

                //policy.LpoPdf(connectDB, jTextField93.getText(), oder_no);
            }
            this.postbtn3.setEnabled(false);
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            jLabel16.setForeground(java.awt.Color.red);
            try {
                connectDB.rollback(registerSavePoint);
            } catch (java.sql.SQLException sql) {
                sql.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());

        }
        }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "You must input the authorised pass key to approve", "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);

        }

        } catch (java.sql.SQLException sqlExec) {
            sqlExec.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jDialog1.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1113CaretUpdate
        jSearchTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date,openning_date FROM st_floated_quotations WHERE quotation_no ILIKE '" + jTextField1113.getText().toString() + "%' AND ordered = false  ORDER BY 1"));

        jSearchTable4.setShowHorizontalLines(true);
        jSearchScrollPane4.setViewportView(jSearchTable4);

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1113CaretUpdate

    private void jSearchTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable4MouseClicked
        jTextField38.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 0).toString());
        jTextField5.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 1).toString());
        jTextField6.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 2).toString());
        for (int k = 0; k < jTable13.getRowCount(); k++) {
            for (int r = 0; r < jTable13.getColumnCount(); r++) {
                jTable13.getModel().setValueAt(null, k, r);
            }
        }
        try {

            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
                + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "'");

            while (rsetTable11X.next()) {
                jTextPane4.setText(rsetTable11X.getString(1));
                //jTextField4.setText(rsetTable11X.getString(2));
            }

            //connectDB.rollback(registerSavePoint);
        } catch (java.sql.SQLException sql) {
            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        this.postbtn3.setEnabled(true);
        this.jSearchDialog12.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable4MouseClicked

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        this.jSearchDialog12.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        if (jTextField114.getCaretPosition() < 1) {
            System.out.println("Nothing");
        } else {
            jSearchTable5.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_floated_quotations WHERE supplier ILIKE '%" + jTextField114.getText() + "%' AND quotation_no = '" + jTextField38.getText() + "' ORDER BY supplier"));
            jSearchTable5.setShowHorizontalLines(false);
            jSearchScrollPane5.setViewportView(jSearchTable5);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField114CaretUpdate

    private void jSearchTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable5MouseClicked
        jTextField93.setText(jSearchTable5.getValueAt(jSearchTable5.getSelectedRow(), 0).toString());
        for (int k = 0; k < jTable13.getRowCount(); k++) {
            for (int r = 0; r < jTable13.getColumnCount(); r++) {
                jTable13.getModel().setValueAt(null, k, r);
            }
        }

        int j = 0;
        int i = 0;

        try {
            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
                + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "'");

            while (rsetTable11X.next()) {
                jTextPane4.setText(rsetTable11X.getString(1));
                //jTextField4.setText(rsetTable11X.getString(2));
            }
            /*
            * java.sql.Statement stmtTable11 = connectDB.createStatement();
            *
            * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
                * count(quotation_no) FROM st_floated_quotations WHERE quotation_no
                * ILIKE '" + this.jTextField37.getText() + "' AND supplier ILIKE '"
                * + this.jTextField92.getText() + "' ");
            *
            * while (rsetTable11.next()) { j = rsetTable11.getInt(1); }
            * java.sql.Statement stmtTable11X = connectDB.createStatement();
            *
            * java.sql.ResultSet rsetTable11X =
            * stmtTable11X.executeQuery("SELECT buyer_details, openning_date" +
                * " FROM st_floated_quotations WHERE quotation_no ILIKE '" +
                * this.jTextField37.getText() + "' AND supplier ILIKE '" +
                * this.jTextField92.getText() + "'");
            *
            * while (rsetTable11X.next()) {
                * jTextPane3.setText(rsetTable11X.getString(1));
                * jTextField4.setText(rsetTable11X.getString(2)); }
            *
            * if (j > 0) {
                */
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT DISTINCT item_number, item_code, item_description, units, quantity"
                    + ",unit_price, days_to_deliver, brand, country_origin, remarks"
                    + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "%'  "
                    + " AND supplier ILIKE '" + this.jTextField93.getText() + "' ORDER BY 1");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable13.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable13.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable13.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable13.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable13.setValueAt(rsetTable1.getObject(5), i, 4);
                    jTable13.setValueAt(rsetTable1.getObject(6), i, 5);
                    jTable13.setValueAt(rsetTable1.getObject(7), i, 6);
                    jTable13.setValueAt(rsetTable1.getObject(8), i, 7);
                    jTable13.setValueAt(rsetTable1.getObject(9), i, 8);
                    jTable13.setValueAt(rsetTable1.getObject(10), i, 9);

                    i++;

                }

                // }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        //        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        jSearchDialog5.dispose();          // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable5MouseClicked

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
        this.jSearchDialog5.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton55ActionPerformed
private void searchButton13Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog12.dispose();

        java.awt.Point point = this.jTextField38.getLocationOnScreen();

        jSearchDialog12.setSize(400, 200);

        jSearchDialog12.setLocation(point);

        jSearchDialog12.setVisible(true);


    }
private void searchButtonClicked5() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField93.getLocationOnScreen();

        jSearchDialog5.setSize(400, 200);

        jSearchDialog5.setLocation(point);

        jSearchDialog5.setVisible(true);



    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelbtn3;
    private com.afrisoftech.lib.DatePicker datePicker5;
    private javax.swing.JButton exitbtn3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog5;
    private javax.swing.JPanel jSearchPanel4;
    private javax.swing.JPanel jSearchPanel5;
    private javax.swing.JScrollPane jSearchScrollPane4;
    private javax.swing.JScrollPane jSearchScrollPane5;
    private javax.swing.JTable jSearchTable4;
    private javax.swing.JTable jSearchTable5;
    private javax.swing.JTable jTable13;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField93;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JButton postbtn3;
    private javax.swing.JButton resetbtn3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JButton searchButton5;
    // End of variables declaration//GEN-END:variables
}
