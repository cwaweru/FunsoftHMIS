/*
 * Requisitions.java
 *
 * Created on April 22, 2003, 5:12 PM
 */
package com.afrisoftech.hospinventory;

/**
 *
 * @author root
 */
public class QuotationsInfr extends javax.swing.JInternalFrame {

    java.lang.String locateSite;
    java.lang.String LOCAL_SITE = "local";
    java.lang.String REMOTE_SITE = "remote";
    javax.swing.JComboBox cmbox2 = null;
    javax.swing.JComboBox cmbox3 = null;
    javax.swing.JComboBox cmbox4 = null;
    javax.swing.JSpinner dateSpinner = null;
    javax.swing.JSpinner dateSpinner1 = null;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public QuotationsInfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton43 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel4 = new javax.swing.JPanel();
        jTextField1113 = new javax.swing.JTextField();
        jSearchScrollPane4 = new javax.swing.JScrollPane();
        jSearchTable4 = new com.afrisoftech.dbadmin.JTable();
        jButton44 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jSearchDialog5 = new javax.swing.JDialog();
        jSearchPanel5 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jSearchScrollPane5 = new javax.swing.JScrollPane();
        jSearchTable5 = new com.afrisoftech.dbadmin.JTable();
        jButton45 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jLabel39 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel6 = new javax.swing.JPanel();
        jTextField1114 = new javax.swing.JTextField();
        jSearchScrollPane6 = new javax.swing.JScrollPane();
        jSearchTable6 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField111111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton5111 = new javax.swing.JButton();
        jSearchDialog13 = new javax.swing.JDialog();
        jSearchPanel7 = new javax.swing.JPanel();
        jTextField1115 = new javax.swing.JTextField();
        jSearchScrollPane7 = new javax.swing.JScrollPane();
        jSearchTable7 = new com.afrisoftech.dbadmin.JTable();
        jButton56 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jLabel24 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jTextField39 = new javax.swing.JTextField();
        searchButton6 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        postbtn1 = new javax.swing.JButton();
        resetbtn1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel9 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        postbtn2 = new javax.swing.JButton();
        resetbtn2 = new javax.swing.JButton();
        cancelbtn2 = new javax.swing.JButton();
        exitbtn2 = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new com.afrisoftech.dbadmin.JTable();
        jPanel12 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jTextField37 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        jLabel14 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel25 = new javax.swing.JPanel();
        jTextField40 = new javax.swing.JTextField();
        searchButton7 = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        postbtn3 = new javax.swing.JButton();
        resetbtn3 = new javax.swing.JButton();
        cancelbtn3 = new javax.swing.JButton();
        exitbtn3 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new com.afrisoftech.dbadmin.JTable();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jTextField38 = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel19 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        datePicker5 = new com.afrisoftech.lib.DatePicker();
        jLabel20 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jTextField93 = new javax.swing.JTextField();
        searchButton5 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton41, gridBagConstraints);

        jButton51.setText("Close");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel3.add(jTextField1112, gridBagConstraints);

        jSearchTable3.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable3.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });
        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton43.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton43, gridBagConstraints);

        jButton53.setText("Close");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton53, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel3, gridBagConstraints);

        jSearchDialog12.setModal(true);
        jSearchDialog12.setUndecorated(true);
        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel4.setLayout(new java.awt.GridBagLayout());

        jTextField1113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel4.add(jTextField1113, gridBagConstraints);

        jSearchTable4.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable4MouseClicked(evt);
            }
        });
        jSearchScrollPane4.setViewportView(jSearchTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel4.add(jSearchScrollPane4, gridBagConstraints);

        jButton44.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton44, gridBagConstraints);

        jButton54.setText("Close");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel4.add(jButton54, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel4, gridBagConstraints);

        jSearchDialog5.setModal(true);
        jSearchDialog5.setUndecorated(true);
        jSearchDialog5.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel5.setLayout(new java.awt.GridBagLayout());

        jTextField114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel5.add(jTextField114, gridBagConstraints);

        jSearchTable5.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable5.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable5MouseClicked(evt);
            }
        });
        jSearchScrollPane5.setViewportView(jSearchTable5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel5.add(jSearchScrollPane5, gridBagConstraints);

        jButton45.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton45, gridBagConstraints);

        jButton55.setText("Close");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel5.add(jButton55, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog5.getContentPane().add(jSearchPanel5, gridBagConstraints);

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setTitle("Approve LPO/LSO");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setLocationByPlatform(true);
        jDialog1.setMinimumSize(new java.awt.Dimension(300, 150));
        jDialog1.setModal(true);
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel39.setText("Authorising Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jLabel39, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jDialog1.getContentPane().add(jPasswordField1, gridBagConstraints);

        jButton1.setText("Approve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jDialog1.getContentPane().add(jButton2, gridBagConstraints);

        jSearchDialog3.setModal(true);
        jSearchDialog3.setUndecorated(true);
        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField1114.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1114CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel6.add(jTextField1114, gridBagConstraints);

        jSearchTable6.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable6MouseClicked(evt);
            }
        });
        jSearchScrollPane6.setViewportView(jSearchTable6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel6.add(jSearchScrollPane6, gridBagConstraints);

        jButton91.setText("Cancel");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel6.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel6, gridBagConstraints);

        jSearchDialog111.setModal(true);
        jSearchDialog111.setUndecorated(true);
        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jTextField111111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel111.add(jTextField111111, gridBagConstraints);

        jSearchTable111.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable111.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });
        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton5111.setText("Close");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        jSearchDialog13.setModal(true);
        jSearchDialog13.setUndecorated(true);
        jSearchDialog13.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel7.setLayout(new java.awt.GridBagLayout());

        jTextField1115.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1115CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel7.add(jTextField1115, gridBagConstraints);

        jSearchTable7.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable7.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable7MouseClicked(evt);
            }
        });
        jSearchScrollPane7.setViewportView(jSearchTable7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel7.add(jSearchScrollPane7, gridBagConstraints);

        jButton56.setText("Close");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel7.add(jButton56, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog13.getContentPane().add(jSearchPanel7, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Quotation Requests and Processing of Orders");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel4.setAutoscrolls(true);
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        postbtn.setMnemonic('P');
        postbtn.setText("Save quotation details");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(postbtn, gridBagConstraints);

        resetbtn.setMnemonic('R');
        resetbtn.setText("RemoveRow");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(resetbtn, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(cancelbtn, gridBagConstraints);

        exitbtn.setMnemonic('C');
        exitbtn.setText("Close");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel4.add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Item Description", "Units", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setNextFocusableComponent(postbtn1);
        jTable1.setRowHeight(20);
        jTable1.setSurrendersFocusOnKeystroke(true);

        /*              try {

            crset3.setConnectionSource(pConnDB);
            crset3.execute("select department_name from pb_departments order by department_name");

            cmbox3.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "department_name", null, null,null));

            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Cost Center");

            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox3));

            //  cmbox3.addActionListener(new java.awt.event.ActionListener() {

                //  public void actionPerformed(java.awt.event.ActionEvent evt) {

                    //       cmbox3ActionPerformed(evt);
                    //  }
                //});
    } catch(java.sql.SQLException sqlExec) {

        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }
    */

    javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 4; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 1) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {
            if (i == 0) {
                column.setPreferredWidth(50);
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(50);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
    }
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jScrollPane1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel4.add(jPanel2, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
    dateSpinner = new javax.swing.JSpinner(spinerDate);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel1.add(dateSpinner, gridBagConstraints);
    */

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel1.setLayout(new java.awt.GridBagLayout());

    jLabel1.setText("Quotation Release Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel1.add(jLabel1, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel1.add(datePicker1, gridBagConstraints);

    jTextPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
    jScrollPane2.setViewportView(jTextPane1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jScrollPane2, gridBagConstraints);

    jLabel2.setText("Quotation Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel1.add(jLabel2, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel1.add(datePicker3, gridBagConstraints);

    jLabel24.setText("Select Aie Type...");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel24, gridBagConstraints);

    jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT classname FROM vb_class  ORDER BY 1 "));
    jComboBox4.setMinimumSize(new java.awt.Dimension(120, 18));
    jComboBox4.setPreferredSize(new java.awt.Dimension(120, 20));
    jComboBox4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jComboBox4, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    jPanel1.add(jLabel25, gridBagConstraints);

    jLabel26.setText("Vote");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel26, gridBagConstraints);

    jComboBox1.setEditable(true);
    jComboBox1.setMinimumSize(new java.awt.Dimension(40, 19));
    jComboBox1.setPreferredSize(new java.awt.Dimension(40, 19));
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jComboBox1, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    jPanel1.add(jLabel27, gridBagConstraints);

    jLabel28.setText("Head");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel28, gridBagConstraints);

    jComboBox2.setEditable(true);
    jComboBox2.setMinimumSize(new java.awt.Dimension(50, 19));
    jComboBox2.setPreferredSize(new java.awt.Dimension(50, 19));
    jComboBox2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jComboBox2, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    jPanel1.add(jLabel29, gridBagConstraints);

    jLabel30.setText("Subhead");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel30, gridBagConstraints);

    jComboBox3.setEditable(true);
    jComboBox3.setMinimumSize(new java.awt.Dimension(60, 19));
    jComboBox3.setPreferredSize(new java.awt.Dimension(60, 19));
    jComboBox3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jComboBox3, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    jPanel1.add(jLabel31, gridBagConstraints);

    jLabel32.setText("Sub Item");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel32, gridBagConstraints);

    jComboBox7.setEditable(true);
    jComboBox7.setMinimumSize(new java.awt.Dimension(80, 19));
    jComboBox7.setPreferredSize(new java.awt.Dimension(80, 19));
    jComboBox7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox7ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jComboBox7, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    jPanel1.add(jLabel33, gridBagConstraints);

    jLabel34.setText("Donor Code");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel34, gridBagConstraints);

    jComboBox6.setEditable(true);
    jComboBox6.setMinimumSize(new java.awt.Dimension(40, 19));
    jComboBox6.setPreferredSize(new java.awt.Dimension(40, 19));
    jComboBox6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox6ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jComboBox6, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    jPanel1.add(jLabel35, gridBagConstraints);

    jLabel36.setText("Donor Item");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel36, gridBagConstraints);

    jComboBox5.setEditable(true);
    jComboBox5.setMinimumSize(new java.awt.Dimension(50, 19));
    jComboBox5.setPreferredSize(new java.awt.Dimension(50, 19));
    jComboBox5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jComboBox5, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    jPanel1.add(jLabel37, gridBagConstraints);

    jLabel38.setText("AIE No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel38, gridBagConstraints);

    jTextField7.setEditable(false);
    jTextField7.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    jTextField7.setMinimumSize(new java.awt.Dimension(60, 19));
    jTextField7.setPreferredSize(new java.awt.Dimension(60, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jTextField7, gridBagConstraints);

    jLabel40.setText("Requisition No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel1.add(jLabel40, gridBagConstraints);

    jPanel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel20.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel20.setLayout(new java.awt.GridBagLayout());

    jTextField39.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel20.add(jTextField39, gridBagConstraints);

    searchButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton6.setToolTipText("Search");
    searchButton6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton6.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton6.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton6ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel20.add(searchButton6, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 100;
    gridBagConstraints.weightx = 1.0;
    jPanel1.add(jPanel20, gridBagConstraints);

    jLabel41.setText("Department");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel1.add(jLabel41, gridBagConstraints);

    jTextField8.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel1.add(jTextField8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel4.add(jPanel1, gridBagConstraints);

    jTabbedPane1.addTab("Enter Quotation Details", jPanel4);

    jPanel5.setLayout(new java.awt.GridBagLayout());

    jPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel31.setLayout(new java.awt.GridBagLayout());

    postbtn1.setText("Dispatch quotations");
    postbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(postbtn1, gridBagConstraints);

    resetbtn1.setMnemonic('R');
    resetbtn1.setText("RemoveRow");
    resetbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(resetbtn1, gridBagConstraints);

    cancelbtn1.setMnemonic('l');
    cancelbtn1.setText("Clear");
    cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(cancelbtn1, gridBagConstraints);

    exitbtn1.setMnemonic('c');
    exitbtn1.setText("Close");
    exitbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(exitbtn1, gridBagConstraints);

    jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel31.add(jLabel51, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel5.add(jPanel31, gridBagConstraints);

    jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel21.setLayout(new java.awt.GridBagLayout());

    jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable11.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity"
        }
    ));
    jTable11.setNextFocusableComponent(postbtn1);
    jTable11.setRowHeight(20);
    jTable11.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column1 = null;
    for (int i = 0; i < 5; i++) {
        column1 = jTable11.getColumnModel().getColumn(i);
        if (i == 0) {

            column1.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column1.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column1.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane11.setViewportView(jTable11);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel21.add(jScrollPane11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel5.add(jPanel21, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jTextField9, gridBagConstraints);
    */
    jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel11.setLayout(new java.awt.GridBagLayout());

    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel6.setLayout(new java.awt.GridBagLayout());

    jLabel4.setText("Quotation No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel6.add(jLabel4, gridBagConstraints);

    jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel7.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel7.setLayout(new java.awt.GridBagLayout());

    jTextField36.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel7.add(jTextField36, gridBagConstraints);

    searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton1.setToolTipText("Search Patient's Name");
    searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel7.add(searchButton1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel6.add(jPanel7, gridBagConstraints);

    jTextField1.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel6.add(jTextField1, gridBagConstraints);

    jLabel6.setText("Quotation Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel6.add(jLabel6, gridBagConstraints);

    jTextPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
    jTextPane2.setEditable(false);
    jScrollPane3.setViewportView(jTextPane2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel6.add(jScrollPane3, gridBagConstraints);

    jLabel8.setText("Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel6.add(jLabel8, gridBagConstraints);

    jTextField2.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel6.add(jTextField2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jPanel6, gridBagConstraints);

    jPanel8.setLayout(new java.awt.GridBagLayout());

    jLabel11.setText("Requisation Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel8.add(jLabel11, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel8.add(datePicker2, gridBagConstraints);

    jLabel9.setText("Send Quotation To");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel8.add(jLabel9, gridBagConstraints);

    jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel41.setLayout(new java.awt.GridBagLayout());

    jTextField91.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel41.add(jTextField91, gridBagConstraints);

    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton.setToolTipText("Search");
    searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel41.add(searchButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel8.add(jPanel41, gridBagConstraints);

    jLabel3.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel8.add(jLabel3, gridBagConstraints);

    jTextField9.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel8.add(jTextField9, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jPanel8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel5.add(jPanel11, gridBagConstraints);

    jTabbedPane1.addTab("Dispatch Quotations", jPanel5);

    jPanel9.setLayout(new java.awt.GridBagLayout());

    jPanel32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel32.setLayout(new java.awt.GridBagLayout());

    postbtn2.setText("Save quotation offers and pricing");
    postbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(postbtn2, gridBagConstraints);

    resetbtn2.setMnemonic('R');
    resetbtn2.setText("RemoveRow");
    resetbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(resetbtn2, gridBagConstraints);

    cancelbtn2.setMnemonic('l');
    cancelbtn2.setText("Clear");
    cancelbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(cancelbtn2, gridBagConstraints);

    exitbtn2.setMnemonic('c');
    exitbtn2.setText("Close");
    exitbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(exitbtn2, gridBagConstraints);

    jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel32.add(jLabel52, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel9.add(jPanel32, gridBagConstraints);

    jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel22.setLayout(new java.awt.GridBagLayout());

    jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable12.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity", "Unit Price", "Days to Deliver", "Brand", "Country of Origin", "Remarks"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, true, true, true, true, true
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable12.setNextFocusableComponent(postbtn1);
    jTable12.setRowHeight(20);
    jTable12.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column24 = null;
    for (int i = 0; i < 10; i++) {
        column24 = jTable12.getColumnModel().getColumn(i);
        if (i == 0) {

            column24.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column24.setPreferredWidth(200);
            } else {
                //if (i == 2) {
                    column24.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane12.setViewportView(jTable12);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel22.add(jScrollPane12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel9.add(jPanel22, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jTextField9, gridBagConstraints);
    */
    jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel12.setLayout(new java.awt.GridBagLayout());

    jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel10.setLayout(new java.awt.GridBagLayout());

    jLabel7.setText("Quotation No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel10.add(jLabel7, gridBagConstraints);

    jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel13.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel13.setLayout(new java.awt.GridBagLayout());

    jTextField37.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jTextField37, gridBagConstraints);

    searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton2.setToolTipText("Search Patient's Name");
    searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel13.add(searchButton2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel10.add(jPanel13, gridBagConstraints);

    jTextField3.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel10.add(jTextField3, gridBagConstraints);

    jLabel10.setText("Quotation Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel10.add(jLabel10, gridBagConstraints);

    jTextPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
    jTextPane3.setEditable(false);
    jScrollPane4.setViewportView(jTextPane3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel10.add(jScrollPane4, gridBagConstraints);

    jLabel12.setText("Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel10.add(jLabel12, gridBagConstraints);

    jTextField4.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel10.add(jTextField4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel12.add(jPanel10, gridBagConstraints);

    jPanel14.setLayout(new java.awt.GridBagLayout());

    jLabel13.setText("Returned on");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel14.add(jLabel13, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(datePicker4, gridBagConstraints);

    jLabel14.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel14.add(jLabel14, gridBagConstraints);

    jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel42.setLayout(new java.awt.GridBagLayout());

    jTextField92.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel42.add(jTextField92, gridBagConstraints);

    searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton3.setToolTipText("Search");
    searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel42.add(searchButton3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(jPanel42, gridBagConstraints);

    jLabel15.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel14.add(jLabel15, gridBagConstraints);

    jTextField10.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(jTextField10, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel12.add(jPanel14, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel9.add(jPanel12, gridBagConstraints);

    jTabbedPane1.addTab("Enter Returned Quotation", jPanel9);

    jPanel24.setLayout(new java.awt.GridBagLayout());

    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Item No", "Description", "Unit", "Qty", "Bidder 1", "Bidder 2", "Bidder 3", "Bidder 4", "Bidder 5"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable2.setRowHeight(22);
    jScrollPane6.setViewportView(jTable2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel24.add(jScrollPane6, gridBagConstraints);

    jPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel25.setMinimumSize(new java.awt.Dimension(150, 37));
    jPanel25.setPreferredSize(new java.awt.Dimension(150, 29));
    jPanel25.setLayout(new java.awt.GridBagLayout());

    jTextField40.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel25.add(jTextField40, gridBagConstraints);

    searchButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton7.setToolTipText("Search Patient's Name");
    searchButton7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton7.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton7.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton7ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel25.add(searchButton7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel24.add(jPanel25, gridBagConstraints);

    jLabel42.setText("Quotation No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel24.add(jLabel42, gridBagConstraints);

    jTabbedPane1.addTab("Price Comparison Schedule", jPanel24);

    jPanel15.setLayout(new java.awt.GridBagLayout());

    jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel33.setLayout(new java.awt.GridBagLayout());

    postbtn3.setText("Generate LPO/LSO");
    postbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(postbtn3, gridBagConstraints);

    resetbtn3.setMnemonic('R');
    resetbtn3.setText("RemoveRow");
    resetbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(resetbtn3, gridBagConstraints);

    cancelbtn3.setMnemonic('l');
    cancelbtn3.setText("Clear form");
    cancelbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(cancelbtn3, gridBagConstraints);

    exitbtn3.setMnemonic('c');
    exitbtn3.setText("Close form");
    exitbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(exitbtn3, gridBagConstraints);

    jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel33.add(jLabel53, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 200.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(jLabel43, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel15.add(jPanel33, gridBagConstraints);

    jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel23.setLayout(new java.awt.GridBagLayout());

    jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable13.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity", "Unit Price", "Days to Deliver", "Brand", "Country of Origin", "Remarks"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable13.setNextFocusableComponent(postbtn1);
    jTable13.setRowHeight(20);
    jTable13.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column3 = null;
    for (int i = 0; i < 5; i++) {
        column3 = jTable13.getColumnModel().getColumn(i);
        if (i == 0) {

            column3.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column3.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column3.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane13.setViewportView(jTable13);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel23.add(jScrollPane13, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel15.add(jPanel23, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jTextField9, gridBagConstraints);
    */
    jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel16.setLayout(new java.awt.GridBagLayout());

    jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel17.setLayout(new java.awt.GridBagLayout());

    jLabel16.setText("Quotation No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel17.add(jLabel16, gridBagConstraints);

    jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel18.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel18.setLayout(new java.awt.GridBagLayout());

    jTextField38.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel18.add(jTextField38, gridBagConstraints);

    searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton4.setToolTipText("Search Patient's Name");
    searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel18.add(searchButton4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel17.add(jPanel18, gridBagConstraints);

    jTextField5.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel17.add(jTextField5, gridBagConstraints);

    jLabel17.setText("Quotation Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel17.add(jLabel17, gridBagConstraints);

    jTextPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer's Designation & Address"));
    jTextPane4.setEditable(false);
    jScrollPane5.setViewportView(jTextPane4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel17.add(jScrollPane5, gridBagConstraints);

    jLabel18.setText("Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel17.add(jLabel18, gridBagConstraints);

    jTextField6.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel17.add(jTextField6, gridBagConstraints);

    jLabel22.setText("Doument Type");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel17.add(jLabel22, gridBagConstraints);

    jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "LPO", "LSO", "IMPREST", "OTHERS" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel17.add(jComboBox11, gridBagConstraints);

    jLabel23.setText("Selection Criteria");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel17.add(jLabel23, gridBagConstraints);

    jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Average Price", "Highest Price", "Delivery" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel17.add(jComboBox12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    jPanel16.add(jPanel17, gridBagConstraints);

    jPanel19.setLayout(new java.awt.GridBagLayout());

    jLabel19.setText("Date Due");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel19.add(jLabel19, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel19.add(datePicker5, gridBagConstraints);

    jLabel20.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel19.add(jLabel20, gridBagConstraints);

    jPanel43.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel43.setLayout(new java.awt.GridBagLayout());

    jTextField93.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel43.add(jTextField93, gridBagConstraints);

    searchButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton5.setToolTipText("Search");
    searchButton5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton5.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton5.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel43.add(searchButton5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel19.add(jPanel43, gridBagConstraints);

    jLabel21.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel19.add(jLabel21, gridBagConstraints);

    jTextField11.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel19.add(jTextField11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel16.add(jPanel19, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel15.add(jPanel16, gridBagConstraints);

    jTabbedPane1.addTab("Raise LPO/LSO", jPanel15);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jTabbedPane1, gridBagConstraints);

    setBounds(0, 0, 805, 428);
    }// </editor-fold>//GEN-END:initComponents

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
        this.dispose();        // Add your handling code here:
    }//GEN-LAST:event_exitbtn1ActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }   // Add your handling code here:
    }//GEN-LAST:event_resetbtnActionPerformed

    private void resetbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn1ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();

        int[] selectedRows = jTable11.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_resetbtn1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void postbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn1ActionPerformed
        /*
         * locateSite = "local";
         *
         * if (locateSite.equals(this.LOCAL_SITE)) {
         *
         * System.out.println("locateSite = " + locateSite);
         *
         * sendRequisition();
         *
         * } else {
         *
         * postLocalRequisition();
         *
         * }
         */

        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < jTable11.getRowCount(); i++) {
                if (jTable11.getModel().getValueAt(i, 0) != null) {
                    // lineNumber = lineNumber + 1;
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_floated_quotations("
                            + " buyer_details, quotation_date, openning_date, item_code, item_description, "
                            + " units, quantity, item_number, quotation_no,supplier)"
                            + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                    pstmt.setObject(1, jTextPane2.getText());
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField1.getText())));
                    pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(jTextField2.getText())));
                    pstmt.setObject(4, jTable11.getValueAt(i, 1).toString());
                    pstmt.setObject(5, jTable11.getValueAt(i, 2).toString());
                    pstmt.setObject(6, jTable11.getValueAt(i, 3).toString());
                    pstmt.setDouble(7, java.lang.Double.valueOf(jTable11.getValueAt(i, 4).toString()));
                    pstmt.setInt(8, java.lang.Integer.valueOf(jTable11.getValueAt(i, 0).toString()));
                    pstmt.setObject(9, jTextField36.getText());
                    pstmt.setObject(10, jTextField91.getText());
//                    pstmt.setInt(8, lineNumber);
//                    pstmt.setObject(9, quoteNo);
                    //System.out.println(dateSpinner.getValue().toString());

                    pstmt.executeUpdate();


                }
            }

            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            com.afrisoftech.hospinventory.mtrhreports.QuotationsSentMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsSentMtrhPdf();

            policy.QuotationsSentMtrhPdf(connectDB, jTextField36.getText(), jTextField91.getText());

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }        // Add your handling code here:
    }//GEN-LAST:event_postbtn1ActionPerformed

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        String quoteNo = null;

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());

        }

        if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else {
            if (jTable1.isEditing()) {
                jTable1.getCellEditor().stopCellEditing();
            }
            /*
             * locateSite = "local";
             *
             * if (locateSite.equals(this.LOCAL_SITE)) {
             *
             * System.out.println("locateSite = " + locateSite);
             *
             * sendRequisition();
             *
             * } else {
             *
             * postLocalRequisition();
             *
             * }
             */
        }

        int lineNumber = 0;
        try {
            connectDB.setAutoCommit(false);

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT NEXTVAL('quotation_no_seq')");
            while (rsetf.next()) {
                quoteNo = rsetf.getString(1);
            }
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i, 0) != null) {
                    lineNumber = lineNumber + 1;
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_item_to_quote("
                            + "buyer_details, quotation_date, openning_date, item_code, item_description, "
                            + "units, quantity, item_number,quotation_no,vote_class, vote, head, subhead, sub_item,"
                            + " sub_item_desc, donor_code, donor_item, aie_no,department, irq_no)"
                            + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "
                            + "?, ?, ?, ?, ?, ?, ?)");
                    pstmt.setObject(1, jTextPane1.getText());
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                    pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                    pstmt.setObject(4, jTable1.getValueAt(i, 0).toString());
                    pstmt.setObject(5, jTable1.getValueAt(i, 1).toString().toUpperCase());
                    pstmt.setObject(6, jTable1.getValueAt(i, 2).toString());
                    pstmt.setDouble(7, java.lang.Double.valueOf(jTable1.getValueAt(i, 3).toString()));
                    pstmt.setInt(8, lineNumber);
                    pstmt.setObject(9, quoteNo);
                    pstmt.setObject(10, jLabel25.getText());
                    pstmt.setObject(11, jComboBox1.getSelectedItem());
                    pstmt.setObject(12, jComboBox2.getSelectedItem());
                    pstmt.setObject(13, jComboBox3.getSelectedItem());
                    pstmt.setObject(14, jComboBox7.getSelectedItem());
                    pstmt.setObject(15, jLabel33.getText());
                    pstmt.setObject(16, jComboBox6.getSelectedItem());
                    pstmt.setObject(17, jComboBox5.getSelectedItem());
                    pstmt.setObject(18, jTextField7.getText());
                    pstmt.setObject(19, jTextField8.getText());
                    pstmt.setObject(20, jTextField39.getText());
                    //System.out.println(dateSpinner.getValue().toString());

                    pstmt.executeUpdate();



                }
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf();

            policy.QuotationsMtrhPdf(connectDB, quoteNo);
        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }
        // Add your handling code here:
    }//GEN-LAST:event_postbtnActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        for (int k = 0; k < jSearchTable2.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable2.getColumnCount(); r++) {
                jSearchTable2.getModel().setValueAt(null, k, r);
            }
        }
        this.jTextField113.setText("");
        searchButtonClicked();

        // Add your handling code here:
}//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);



    }
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (jTextField113.getCaretPosition() < 1) {
            System.out.println("Nothing");
        } else {
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier_name, code as account_no FROM st_suppliers where supplier_name ILIKE '%" + jTextField113.getText() + "%' order by supplier_name"));

            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);



        }         // Add your handling code here:
}//GEN-LAST:event_jTextField113CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        // jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jSearchDialog2.dispose();
        try {
            java.sql.Statement pstmt = connectDB.createStatement();

            java.sql.ResultSet rs = pstmt.executeQuery("select current_user");
            while (rs.next()) {

                jTextField9.setText(rs.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        } // Add your handling code here:
}//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
}//GEN-LAST:event_jButton52ActionPerformed
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog1.dispose();
        java.awt.Point point = this.jTextField36.getLocationOnScreen();

        jSearchDialog1.setSize(400, 200);

        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);


    }
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton11Clicked();        // Add your handling code here:
        // Add your handling code here:
}//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton12Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog11.dispose();
        java.awt.Point point = this.jTextField37.getLocationOnScreen();

        jSearchDialog11.setSize(400, 200);

        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);


    }
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date FROM st_item_to_quote WHERE quotation_no ILIKE '" + jTextField1111.getText().toString() + "%'  ORDER BY 1"));

        /*
         * try { searchRowSet1.execute("select distinct(order_no) as
         * scheme,supplier from st_orders where order_no ILIKE
         * '"+jTextField1111.getText().toString()+"%' ORDER BY order_no");
         *
         * jSearchTable1.setModel(new
         * org.netbeans.lib.sql.models.TableModel(searchRowSet1, new
         * org.netbeans.lib.sql.models.TableModel.Column[] { new
         * org.netbeans.lib.sql.models.TableModel.Column("scheme", "Acc no.",
         * false), new org.netbeans.lib.sql.models.TableModel.Column("supplier",
         * "Supplier", false)
         *
         * }));
         */
        jSearchTable1.setShowHorizontalLines(false);
        jSearchScrollPane1.setViewportView(jSearchTable1);


        /*
         * } catch(java.sql.SQLException sqlExec) {
         *
         * javax.swing.JOptionPane.showMessageDialog(this,
         * sqlExec.getMessage());
         *
         * }
         */
        // Add your handling code here:
}//GEN-LAST:event_jTextField1111CaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jTextField1.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }

        int j = 0;
        int i = 0;

        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();

            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(quotation_no)  FROM st_item_to_quote WHERE quotation_no ILIKE '" + this.jTextField36.getText() + "'");

            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
                    + " FROM st_item_to_quote WHERE quotation_no ILIKE '" + this.jTextField36.getText() + "%'");

            while (rsetTable11X.next()) {
                jTextPane2.setText(rsetTable11X.getString(1));
                jTextField2.setText(rsetTable11X.getString(2));
            }

            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT item_number, item_code, item_description, units, quantity"
                        + " FROM st_item_to_quote WHERE quotation_no ILIKE '" + this.jTextField36.getText() + "%'");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable1.getObject(5), i, 4);


                    i++;

                }

            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        //        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        jSearchDialog1.dispose();        // Add your handling code here:
}//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog1.dispose();          // Add your handling code here:
}//GEN-LAST:event_jButton51ActionPerformed

    private void postbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn2ActionPerformed
        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < jTable12.getRowCount(); i++) {
                if (jTable12.getModel().getValueAt(i, 0) != null && jTable12.getModel().getValueAt(i, 5) != null && jTable12.getModel().getValueAt(i, 6) != null && jTable12.getModel().getValueAt(i, 7) != null && jTable12.getModel().getValueAt(i, 8) != null) {
                    // lineNumber = lineNumber + 1;
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_floated_quotations"
                            + " SET unit_price=?, days_to_deliver=?, brand=?, country_origin=?, remarks=? WHERE "
                            + " quotation_no = '" + jTextField37.getText() + "'"
                            + " AND supplier = '" + jTextField92.getText() + "' AND item_description = '" + jTable12.getValueAt(i, 2).toString() + "'");

                    pstmt.setDouble(1, java.lang.Double.valueOf(jTable12.getValueAt(i, 5).toString()));
                    pstmt.setDouble(2, java.lang.Double.valueOf(jTable12.getValueAt(i, 6).toString()));
                    pstmt.setObject(3, jTable12.getValueAt(i, 7).toString());
                    pstmt.setObject(4, jTable12.getValueAt(i, 8).toString());
                    if (jTable12.getValueAt(i, 9) == null) {
                        pstmt.setObject(5, "-");
                    } else {
                        pstmt.setObject(5, jTable12.getValueAt(i, 9).toString());
                    }
                    pstmt.executeUpdate();


                }
            }

            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            com.afrisoftech.hospinventory.mtrhreports.QuotationsReceivedMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsReceivedMtrhPdf();

            policy.QuotationsReceivedMtrhPdf(connectDB, jTextField37.getText(), jTextField92.getText());

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }         // TODO add your handling code here:
    }//GEN-LAST:event_postbtn2ActionPerformed

    private void resetbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetbtn2ActionPerformed

    private void cancelbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelbtn2ActionPerformed

    private void exitbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn2ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton12Clicked();         // TODO add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButton11Clicked();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed

    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date,supplier FROM st_floated_quotations WHERE quotation_no ILIKE '" + jTextField1112.getText().toString() + "%'  ORDER BY 1"));
        jSearchTable3.setShowHorizontalLines(true);
        jSearchScrollPane3.setViewportView(jSearchTable3);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate

    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        jTextField37.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0).toString());
        jTextField3.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 1).toString());
        jTextField92.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 2).toString());
        for (int k = 0; k < jTable12.getRowCount(); k++) {
            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                jTable12.getModel().setValueAt(null, k, r);
            }
        }

        int j = 0;
        int i = 0;

        try {
            java.sql.Statement stmtTable11 = connectDB.createStatement();

            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(quotation_no)  FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField37.getText() + "' AND supplier ILIKE '" + this.jTextField92.getText() + "' ");

            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
                    + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField37.getText() + "'  AND supplier ILIKE '" + this.jTextField92.getText() + "'");

            while (rsetTable11X.next()) {
                jTextPane3.setText(rsetTable11X.getString(1));
                jTextField4.setText(rsetTable11X.getString(2));
            }

            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT DISTINCT item_number, item_code, item_description, units, quantity"
                        + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField37.getText() + "%'  "
                        + " AND supplier ILIKE '" + this.jTextField92.getText() + "' ORDER BY 1");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable12.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable12.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable12.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable12.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable12.setValueAt(rsetTable1.getObject(5), i, 4);


                    i++;

                }

            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        //        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        jSearchDialog11.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        this.jSearchDialog11.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton53ActionPerformed

    private void postbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn3ActionPerformed

        this.jDialog1.setVisible(true);



        // if (allowedAccess) {



        // }

        // TODO add your handling code here:
    }//GEN-LAST:event_postbtn3ActionPerformed

    private void resetbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetbtn3ActionPerformed

    private void cancelbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelbtn3ActionPerformed

    private void exitbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn3ActionPerformed

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        searchButton13Clicked();         // TODO add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed
    private void searchButton13Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog12.dispose();

        java.awt.Point point = this.jTextField38.getLocationOnScreen();

        jSearchDialog12.setSize(400, 200);

        jSearchDialog12.setLocation(point);

        jSearchDialog12.setVisible(true);


    }
    private void searchButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton5ActionPerformed
        searchButtonClicked5();
// TODO add your handling code here:
    }//GEN-LAST:event_searchButton5ActionPerformed
    private void searchButtonClicked5() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField93.getLocationOnScreen();

        jSearchDialog5.setSize(400, 200);

        jSearchDialog5.setLocation(point);

        jSearchDialog5.setVisible(true);



    }
    private void jTextField1113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1113CaretUpdate
        jSearchTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date,openning_date FROM st_floated_quotations WHERE quotation_no ILIKE '" + jTextField1113.getText().toString() + "%' AND ordered = false  ORDER BY 1"));

        jSearchTable4.setShowHorizontalLines(true);
        jSearchScrollPane4.setViewportView(jSearchTable4);

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1113CaretUpdate

    private void jSearchTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable4MouseClicked
        jTextField38.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 0).toString());
        jTextField5.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 1).toString());
        jTextField6.setText(jSearchTable4.getValueAt(jSearchTable4.getSelectedRow(), 2).toString());
        for (int k = 0; k < jTable13.getRowCount(); k++) {
            for (int r = 0; r < jTable13.getColumnCount(); r++) {
                jTable13.getModel().setValueAt(null, k, r);
            }
        }
        try {

            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
                    + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "'");

            while (rsetTable11X.next()) {
                jTextPane4.setText(rsetTable11X.getString(1));
                //jTextField4.setText(rsetTable11X.getString(2));
            }


            //connectDB.rollback(registerSavePoint);
        } catch (java.sql.SQLException sql) {
            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        this.postbtn3.setEnabled(true);
        this.jSearchDialog12.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable4MouseClicked

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        this.jSearchDialog12.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jTextField114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField114CaretUpdate
        if (jTextField114.getCaretPosition() < 1) {
            System.out.println("Nothing");
        } else {
            jSearchTable5.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_floated_quotations WHERE supplier ILIKE '%" + jTextField114.getText() + "%' AND quotation_no = '" + jTextField38.getText() + "' ORDER BY supplier"));
            jSearchTable5.setShowHorizontalLines(false);
            jSearchScrollPane5.setViewportView(jSearchTable5);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField114CaretUpdate

    private void jSearchTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable5MouseClicked
        jTextField93.setText(jSearchTable5.getValueAt(jSearchTable5.getSelectedRow(), 0).toString());
        for (int k = 0; k < jTable13.getRowCount(); k++) {
            for (int r = 0; r < jTable13.getColumnCount(); r++) {
                jTable13.getModel().setValueAt(null, k, r);
            }
        }

        int j = 0;
        int i = 0;

        try {
            java.sql.Statement stmtTable11X = connectDB.createStatement();

            java.sql.ResultSet rsetTable11X = stmtTable11X.executeQuery("SELECT buyer_details, openning_date"
                    + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "'");

            while (rsetTable11X.next()) {
                jTextPane4.setText(rsetTable11X.getString(1));
                //jTextField4.setText(rsetTable11X.getString(2));
            }
            /*
             * java.sql.Statement stmtTable11 = connectDB.createStatement();
             *
             * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
             * count(quotation_no) FROM st_floated_quotations WHERE quotation_no
             * ILIKE '" + this.jTextField37.getText() + "' AND supplier ILIKE '"
             * + this.jTextField92.getText() + "' ");
             *
             * while (rsetTable11.next()) { j = rsetTable11.getInt(1); }
             * java.sql.Statement stmtTable11X = connectDB.createStatement();
             *
             * java.sql.ResultSet rsetTable11X =
             * stmtTable11X.executeQuery("SELECT buyer_details, openning_date" +
             * " FROM st_floated_quotations WHERE quotation_no ILIKE '" +
             * this.jTextField37.getText() + "' AND supplier ILIKE '" +
             * this.jTextField92.getText() + "'");
             *
             * while (rsetTable11X.next()) {
             * jTextPane3.setText(rsetTable11X.getString(1));
             * jTextField4.setText(rsetTable11X.getString(2)); }
             *
             * if (j > 0) {
             */
            java.sql.Statement stmtTable1 = connectDB.createStatement();

            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT DISTINCT item_number, item_code, item_description, units, quantity"
                    + ",unit_price, days_to_deliver, brand, country_origin, remarks"
                    + " FROM st_floated_quotations WHERE quotation_no ILIKE '" + this.jTextField38.getText() + "%'  "
                    + " AND supplier ILIKE '" + this.jTextField93.getText() + "' ORDER BY 1");

            while (rsetTable1.next()) {

                System.out.println("Working at table row " + i);
                jTable13.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable13.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable13.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable13.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable13.setValueAt(rsetTable1.getObject(5), i, 4);
                jTable13.setValueAt(rsetTable1.getObject(6), i, 5);
                jTable13.setValueAt(rsetTable1.getObject(7), i, 6);
                jTable13.setValueAt(rsetTable1.getObject(8), i, 7);
                jTable13.setValueAt(rsetTable1.getObject(9), i, 8);
                jTable13.setValueAt(rsetTable1.getObject(10), i, 9);


                i++;

            }

            // }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        //        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        jSearchDialog5.dispose();          // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable5MouseClicked

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
        this.jSearchDialog5.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton55ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        jComboBox5.removeAllItems();
        jComboBox6.removeAllItems();
        /*
         * jLabel10.setText("[]"); jLabel11.setText("[]");
         * jLabel12.setText("[]"); jLabel18.setText("[]");
         * jLabel16.setText("[]"); jLabel22.setText("[]");
         * jLabel23.setText("[]");
         */
        jTextField6.setText("0.00");
        jTextField10.setText("0.00");
        jTextField7.setText("0.00");
        jTextField4.setText("0.00");
        jTextField9.setText("0.00");
        jTextField5.setText("0.00");
        jTextField11.setText("0.00");
//        jTextField8.setText("0.00");
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT class FROM vb_class WHERE classname = '" + jComboBox4.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel25.setText(rs.getString(1));
//                jLabel23.setForeground(Color.BLACK);

                jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT vote FROM ac_aie_allocation WHERE class = '" + rs.getString(1) + "' ORDER BY 1"));
            }
            pstmt.close();
            rs.close();
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
        /*
         * jComboBox1.addActionListener(new java.awt.event.ActionListener() {
         *
         * public void actionPerformed(java.awt.event.ActionEvent evt) {
         * jComboBox1ActionPerformed(evt); } });
         */


        // TODO add your handling code here:
}//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        jComboBox5.removeAllItems();
        jComboBox6.removeAllItems();
        jTextField6.setText("0.00");
        jTextField10.setText("0.00");
        jTextField7.setText("0.00");
        jTextField4.setText("0.00");
        jTextField9.setText("0.00");
        jTextField5.setText("0.00");
        jTextField11.setText("0.00");
//        jTextField8.setText("0.00");
       /*
         * jLabel10.setText("[]"); jLabel11.setText("[]");
         * jLabel12.setText("[]"); jLabel18.setText("[]");
         * jLabel16.setText("[]"); jLabel22.setText("[]");
         */
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT votename FROM votes WHERE vote = '" + jComboBox1.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel27.setText(rs.getString(1));
//                jLabel10.setForeground(Color.BLACK);
            }
            jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT head FROM ac_aie_allocation WHERE vote = '" + jComboBox1.getSelectedItem() + "' ORDER BY 1 "));
            /*
             * jComboBox2.addActionListener(new java.awt.event.ActionListener()
             * {
             *
             * public void actionPerformed(java.awt.event.ActionEvent evt) {
             * jComboBox2ActionPerformed(evt); } });
             */




            rs.close();
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
        // Add your handling code here:
}//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jComboBox3.removeAllItems();
        jComboBox5.removeAllItems();
        jComboBox6.removeAllItems();
        jTextField6.setText("0.00");
        jTextField10.setText("0.00");
        jTextField7.setText("0.00");
        jTextField4.setText("0.00");
        jTextField9.setText("0.00");
        jTextField5.setText("0.00");
        jTextField11.setText("0.00");
//        jTextField8.setText("0.00");
        //jLabel10.setText("[]");
       /*
         * jLabel11.setText("[]"); jLabel12.setText("[]");
         * jLabel18.setText("[]"); jLabel16.setText("[]");
         * jLabel22.setText("[]");
         *
         */
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT headname FROM heads WHERE head = '" + jComboBox2.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel29.setText(rs.getString(1));
//                jLabel11.setForeground(Color.BLACK);
            }
            jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subhead "
                    + "FROM ac_aie_allocation WHERE vote = '" + jComboBox1.getSelectedItem() + "'"
                    + " AND head = '" + jComboBox2.getSelectedItem() + "' ORDER BY 1"));
            /*
             * jComboBox3.addActionListener(new java.awt.event.ActionListener()
             * {
             *
             * public void actionPerformed(java.awt.event.ActionEvent evt) {
             * jComboBox3ActionPerformed(evt); } });
             */
            //  com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT subhead FROM subheads ORDER BY 1 ")
            pstmt.close();
            rs.close();
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }        // TODO add your handling code here:
}//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        jTextField6.setText("0.00");
        jTextField10.setText("0.00");
        jTextField7.setText("0.00");
        jTextField4.setText("0.00");
        jTextField9.setText("0.00");
        jTextField5.setText("0.00");
        jTextField11.setText("0.00");
//        jTextField8.setText("0.00");
        jComboBox5.removeAllItems();
        jComboBox6.removeAllItems();
        // jLabel10.setText("[]");
        // jLabel11.setText("[]");
        /*
         * jLabel12.setText("[]"); jLabel18.setText("[]");
         * jLabel16.setText("[]"); jLabel22.setText("[]");
         *
         */
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT subheadname FROM subheads WHERE subhead = '" + jComboBox3.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel31.setText(rs.getString(1));
//                jLabel12.setForeground(Color.BLACK);
            }

            jComboBox7.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT subitem FROM ac_aie_allocation WHERE "
                    + "subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + "AND head = '" + jComboBox2.getSelectedItem() + "' ORDER BY 1"));


            /*
             * jComboBox6.addActionListener(new java.awt.event.ActionListener()
             * {
             *
             * public void actionPerformed(java.awt.event.ActionEvent evt) {
             * jComboBox6ActionPerformed(evt); } });
             */

            pstmt.close();
            rs.close();
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }         // TODO add your handling code here:
}//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        /*
         * jLabel16.setText("[]"); jLabel22.setText("[]");
         * jLabel18.setText("[]"); jTextField6.setText("0.00");
         * jTextField10.setText("0.00"); jTextField7.setText("0.00");
         * jTextField4.setText("0.00"); jTextField9.setText("0.00");
         * jTextField5.setText("0.00"); jTextField11.setText("0.00");
         */
//        jTextField8.setText("0.00");
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT subitemname FROM subitems WHERE subitem = '" + jComboBox7.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel33.setText(rs.getString(1));
//                jLabel22.setForeground(Color.BLACK);
            }

            jComboBox6.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT donorcode FROM ac_aie_allocation WHERE "
                    + "subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + "AND head = '" + jComboBox2.getSelectedItem() + "' AND subitem = '" + jComboBox7.getSelectedItem() + "'"));

            // jComboBox6.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT donor_code FROM donor_details WHERE votes = '" + jComboBox1.getSelectedItem() + "' ORDER BY 1"));
            /*
             * jComboBox6.addActionListener(new java.awt.event.ActionListener()
             * {
             *
             * public void actionPerformed(java.awt.event.ActionEvent evt) {
             * jComboBox6ActionPerformed(evt); } });
             */

            pstmt.close();
            rs.close();
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }         // TODO add your handling code here:
}//GEN-LAST:event_jComboBox7ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        jComboBox5.removeAllItems();
        // jLabel16.setText("[]");
        //  jLabel18.setText("[]");
        jTextField6.setText("0.00");
        jTextField10.setText("0.00");
        jTextField7.setText("0.00");
        jTextField4.setText("0.00");
        jTextField9.setText("0.00");
        jTextField5.setText("0.00");
        jTextField11.setText("0.00");
//        jTextField8.setText("0.00");
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT donorname FROM vb_donors WHERE donor_code = '" + jComboBox6.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel35.setText(rs.getString(1));
//                jLabel18.setForeground(Color.BLACK);
            }
            jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT donoritem FROM ac_aie_allocation WHERE "
                    + "subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + "AND head = '" + jComboBox2.getSelectedItem() + "' AND subitem = '" + jComboBox7.getSelectedItem() + "'"
                    + "AND donorcode = '" + jComboBox6.getSelectedItem() + "'"));

            pstmt.close();
            rs.close();
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }        // TODO add your handling code here:
}//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        //   jLabel16.setText("[]");
        jTextField6.setText("0.00");
        jTextField10.setText("0.00");
        jTextField7.setText("0.00");
        jTextField4.setText("0.00");
        jTextField9.setText("0.00");
        jTextField5.setText("0.00");
        jTextField11.setText("0.00");
        //jTextField8.setText("0.00");
        double expenses = 0.00;
        double commitamt = 0.00;
        double paidamt = 0.00;
        double balance = 0.00;
        double aieamt = 0.00;
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("SELECT donor_name FROM donor_details "
                    + "WHERE donor_code = '" + jComboBox6.getSelectedItem() + "' AND votes = '" + jComboBox1.getSelectedItem() + "'");
            while (rs.next()) {
                jLabel37.setText(rs.getString(1));
//                jLabel16.setForeground(Color.BLACK);
            }

            java.sql.Statement pstmts = connectDB.createStatement();
            java.sql.ResultSet rss = pstmts.executeQuery("SELECT DISTINCT aieno FROM ac_aie_allocation WHERE "
                    + "subhead = '" + jComboBox3.getSelectedItem() + "' AND vote = '" + jComboBox1.getSelectedItem() + "'"
                    + "AND head = '" + jComboBox2.getSelectedItem() + "' AND subitem = '" + jComboBox7.getSelectedItem() + "' AND "
                    + "donorcode = '" + jComboBox6.getSelectedItem() + "' AND donoritem = '" + jComboBox5.getSelectedItem() + "'");
            while (rss.next()) {
                jTextField7.setText(rss.getString(1));
            }

            /*
             * java.sql.Statement ps = connectDB.createStatement();
             * java.sql.ResultSet rs1 = ps.executeQuery("SELECT DISTINCT
             * SUM(amount) FROM ac_aie_allocation WHERE " + "aieno = '" +
             * jTextField1.getText() + "'"); while (rs1.next()) {
             * jTextField6.setText(rs1.getString(1)); }
             *
             *
             * java.sql.Statement pstmtsa1 = connectDB.createStatement();
             * java.sql.ResultSet rssa2 = pstmtsa1.executeQuery("SELECT DISTINCT
             * SUM(amount) FROM ac_aie_allocation WHERE " + " subhead = '" +
             * jComboBox3.getSelectedItem() + "' AND vote = '" +
             * jComboBox1.getSelectedItem() + "'" + " AND head = '" +
             * jComboBox2.getSelectedItem() + "' AND subitem = '" +
             * jComboBox7.getSelectedItem() + "' " + " AND donorcode = '" +
             * jComboBox6.getSelectedItem() + "' AND donoritem = '" +
             * jComboBox5.getSelectedItem() + "'" + " AND aieno = '" +
             * jTextField1.getText() + "'"); while (rssa2.next()) {
             * jTextField10.setText(rssa2.getString(1)); aieamt =
             * rssa2.getDouble(1); } java.sql.Statement pstmtsa =
             * connectDB.createStatement(); java.sql.ResultSet rssa =
             * pstmtsa.executeQuery("SELECT DISTINCT
             * SUM(allocated_amount-paid_amount) FROM ac_aie_commitment WHERE "
             * + " subhead = '" + jComboBox3.getSelectedItem() + "' AND vote =
             * '" + jComboBox1.getSelectedItem() + "'" + " AND head = '" +
             * jComboBox2.getSelectedItem() + "' AND subitem = '" +
             * jComboBox7.getSelectedItem() + "' " + " AND donorcode = '" +
             * jComboBox6.getSelectedItem() + "' AND donoritem = '" +
             * jComboBox5.getSelectedItem() + "'" + " AND aie_no = '" +
             * jTextField1.getText() + "' "); while (rssa.next()) {
             * jTextField7.setText(rssa.getString(1)); commitamt =
             * rssa.getDouble(1); }
             *
             * java.sql.Statement pstm = connectDB.createStatement();
             * java.sql.ResultSet rssa1 = pstm.executeQuery("SELECT DISTINCT
             * SUM(paid_amount) FROM ac_aie_commitment WHERE " + " subhead = '"
             * + jComboBox3.getSelectedItem() + "' AND vote = '" +
             * jComboBox1.getSelectedItem() + "'" + " AND head = '" +
             * jComboBox2.getSelectedItem() + "' AND subitem = '" +
             * jComboBox7.getSelectedItem() + "' " + " AND donorcode = '" +
             * jComboBox6.getSelectedItem() + "' AND donoritem = '" +
             * jComboBox5.getSelectedItem() + "'" + " AND aie_no = '" +
             * jTextField1.getText() + "'"); while (rssa1.next()) {
             * jTextField4.setText(rssa1.getString(1)); paidamt =
             * rssa1.getDouble(1); } expenses = commitamt + paidamt; balance =
             * aieamt - expenses;
             * jTextField9.setText(java.lang.String.valueOf(expenses));
             * jTextField5.setText(java.lang.String.valueOf(balance));
             */
            pstmt.close();
            rs.close();
            pstmts.close();
            rss.close();
//            ps.close();
            //          rs1.close();
            //          pstmtsa.close();
            //          rssa.close();
            //          pstmtsa1.close();
            //          rssa2.close();
            //          pstm.close();
            //          rssa1.close();
        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        }         // TODO add your handling code here:
}//GEN-LAST:event_jComboBox5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.lang.String access_code = null;

        try {

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("select accessobject from defined_contribution");

            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                access_code = rset.getObject(1).toString();
            }
            //System.out.println(access_code);

            if (jPasswordField1.getText().equals(access_code)) {
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (jTable1.isEditing()) {
                        jTable1.getCellEditor().stopCellEditing();
                    }
                    String oder_no = null;

                    double quantity = 0.00;

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);

                    System.out.println(datenowSql.toString());

                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    try {
                        String order_no1 = null;
                        java.sql.Date current_date = null;
                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select date_part('year',now())|| lpad('" + order_no1 + "',6,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            oder_no = rs1.getObject(1).toString();
                        }
                        System.out.println("" + oder_no + "");
                        for (int i = 0; i < jTable13.getRowCount(); i++) {
                            if (jTable13.getModel().getValueAt(i, 0) != null) {
                                if (com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(i, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(i, 4).toString()) * Double.parseDouble(jTable13.getValueAt(i, 5).toString()) >= 0.00) {
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO st_orders("
                                            + "supplier, item, units, quantity, unit_price, gross_value, "
                                            + "net_value, ordered, order_no, "
                                            + "date_due, date, received, code, item_strength,"
                                            + "ordering_store, ordered_by, quotation_no, days_to_deliver, brand, "
                                            + "country, remarks, doc_type, criteria)"
                                            + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                                    pstmt2.setObject(1, jTextField93.getText());
                                    pstmt2.setObject(2, jTable13.getValueAt(i, 2));
                                    pstmt2.setObject(3, jTable13.getValueAt(i, 3));
                                    pstmt2.setDouble(4, java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString()));
                                    pstmt2.setDouble(5, java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()));
                                    pstmt2.setDouble(6, java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString()));
                                    pstmt2.setDouble(7, java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString()));
                                    pstmt2.setBoolean(8, true);
                                    pstmt2.setString(9, oder_no);
                                    pstmt2.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                                    pstmt2.setDate(11, current_date);
                                    pstmt2.setBoolean(12, false);
                                    pstmt2.setObject(13, jTable13.getValueAt(i, 1));
                                    pstmt2.setObject(14, "");
                                    pstmt2.setString(15, jTextPane4.getText());
                                    pstmt2.setString(16, jTextField11.getText());
                                    pstmt2.setString(17, jTextField38.getText());
                                    pstmt2.setObject(18, jTable13.getValueAt(i, 6));
                                    pstmt2.setObject(19, jTable13.getValueAt(i, 7));
                                    pstmt2.setObject(20, jTable13.getValueAt(i, 8));
                                    pstmt2.setObject(21, jTable13.getValueAt(i, 9));
                                    pstmt2.setObject(22, jComboBox11.getSelectedItem());
                                    pstmt2.setObject(23, jComboBox12.getSelectedItem());

                                    pstmt2.executeUpdate();

                                    /*
                                     * java.sql.PreparedStatement pstmt3 =
                                     * connectDB.prepareStatement("UPDATE
                                     * st_analyse_requisation SET ordered
                                     * ='true' WHERE item_description = '" +
                                     * jTable1.getValueAt(i, 1).toString() + "'
                                     * and quantity_to_order > 0");
                                     * pstmt3.executeUpdate();
                                     * java.sql.PreparedStatement pstmt31 =
                                     * connectDB.prepareStatement("UPDATE
                                     * st_stock_item SET qty_ordered =
                                     * qty_ordered + " + new
                                     * java.lang.Double(quantity) + ",
                                     * quantity_toorder = quantity_toorder - " +
                                     * new java.lang.Double(quantity) + " WHERE
                                     * description = '" + jTable1.getValueAt(i,
                                     * 0).toString() + "'");
                                     * pstmt31.executeUpdate();
                                     *
                                     */


                                    //quantity = Double.parseDouble(jTable1.getModel().getValueAt(i, 5).toString());
                                    java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField38.getText() + "'");
                                    pstmt31.executeUpdate();

                                    java.sql.PreparedStatement pstmtCommit2Votebook = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField38.getText() + "'");
                                    pstmtCommit2Votebook.executeUpdate();

                                    //}
                                    //Update the vote balance against the committed amount
//                                    com.afrisoftech.lib.VoteBook.setVoteBalance(connectDB,
//                                            com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(i, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(i, 4).toString()) * Double.parseDouble(jTable13.getValueAt(i, 5).toString()),
//                                            com.afrisoftech.lib.VoteBook.getVote(connectDB, jTable13.getValueAt(i, 2).toString(),
//                                            com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)),
//                                            com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
                                } else {
                                    javax.swing.JOptionPane.showMessageDialog(this, "Sorry! You cannot commit more than the budget on the vote.");
                                }
                            }
                        }

                        /*
                         * for (int i = 0; i < jTable13.getRowCount(); i++) { if
                         * (jTable13.getValueAt(i, 5) != null) {
                         * com.afrisoftech.lib.VoteBook.setVoteBalance(connectDB,
                         * com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB,
                         * jTable13.getValueAt(i, 2).toString(),
                         * com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB))
                         * - Double.parseDouble(jTable13.getValueAt(i,
                         * 4).toString()) *
                         * Double.parseDouble(jTable13.getValueAt(i,
                         * 5).toString()),
                         * com.afrisoftech.lib.VoteBook.getVote(connectDB,
                         * jTable13.getValueAt(i, 2).toString(),
                         * com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)),
                         * com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB));
                         * } }
                         *
                         */
                        // OrdersPdf policy = new OrdersPdf();
                        // policy.OrdersPdf(connectDB, jComboBox11.getSelectedItem().toString(), oder_no);


                        //     java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE st_orders SET ordered ='true' WHERE item = '"+this.jComboBox1.getSelectedItem().toString()+"'");
                        //     pstmt4.executeUpdate();

                        connectDB.commit();
                        connectDB.setAutoCommit(true);

                        javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                        for (int k = 0; k < jTable13.getRowCount(); k++) {
                            for (int r = 0; r < jTable13.getColumnCount(); r++) {
                                jTable13.getModel().setValueAt(null, k, r);
                            }
                        }

                        if (jComboBox11.getSelectedItem().toString().equalsIgnoreCase("LSO")) {
                            com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf();

                            policy.LsoMtrhPdf(connectDB, jTextField93.getText(), oder_no);
                            // com.afrisoftech.hospinventory.LsoPdf policy = new com.afrisoftech.hospinventory.LsoPdf();

                            // policy.LsoPdf(connectDB, jTextField93.getText(), oder_no);
                        } else {

//                            com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf();
//
//                            policy.LpoMtrhPdf(connectDB, jTextField93.getText(), oder_no);
                            //com.afrisoftech.hospinventory.LpoPdf policy = new com.afrisoftech.hospinventory.LpoPdf();

                            //policy.LpoPdf(connectDB, jTextField93.getText(), oder_no);
                        }
                        this.postbtn3.setEnabled(false);
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        jLabel7.setForeground(java.awt.Color.red);
                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            sql.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());

                    }
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "You must input the authorised pass key to approve", "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);

            }

        } catch (java.sql.SQLException sqlExec) {
            sqlExec.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jDialog1.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    private void cmbox11MouseClicked() {
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog3.setSize(600, 200);
        jSearchDialog3.setLocation(point);
        jSearchDialog3.setVisible(true);
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {

            this.cmbox11MouseClicked();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1114CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1114CaretUpdate
        // jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct item_code,description,strength,units,buying_price FROM st_stock_item WHERE description ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox2.getSelectedItem().toString()+"%' union all select distinct item_code,description,strength,units,buying_price FROM st_stock_item_others WHERE description ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox2.getSelectedItem().toString()+"%' ORDER BY description"));
        jSearchTable6.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct item_code,description,strength,packaging,buying_price FROM st_stock_item WHERE description ILIKE '%" + jTextField1114.getText() + "%' ORDER BY description"));

        jSearchScrollPane6.setViewportView(jSearchTable6);


        /*
         * if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("main
         * store")){ if(this.jTextField1111.getCaretPosition() < 2){
         * System.out.print("Nothing"); }else{
         *
         * jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select
         * distinct product,units,selling_price FROM st_stock_prices WHERE
         * product ILIKE '%"+jTextField1111.getText()+"%' and department ilike
         * '"+this.jComboBox1.getSelectedItem().toString()+"%' ORDER BY
         * product")); jSearchScrollPane1.setViewportView(jSearchTable1);
         * System.out.println("Cannot sort out");
         *
         * }
         * }else{ if(this.jTextField1111.getCaretPosition() < 2){
         * System.out.print("Nothing"); }else{
         * jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select
         * distinct description,units,buying_price FROM st_stock_item WHERE
         * description ILIKE '%"+jTextField1111.getText()+"%' and department
         * ilike '"+this.jComboBox2.getSelectedItem().toString()+"%' ORDER BY
         * description")); jSearchScrollPane1.setViewportView(jSearchTable1);
         * System.out.println("Cannot sort out");
         *
         * }
         * }
         */
        // Add your handling code here:
}//GEN-LAST:event_jTextField1114CaretUpdate

    private void jSearchTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable6MouseClicked
        double bal = 0.00;

        jTable1.setValueAt(jSearchTable6.getValueAt(jSearchTable6.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable6.getValueAt(jSearchTable6.getSelectedRow(), 1), jTable1.getSelectedRow(), 1);
        jTable1.setValueAt(jSearchTable6.getValueAt(jSearchTable6.getSelectedRow(), 2), jTable1.getSelectedRow(), 2);


        jSearchDialog3.dispose();
        // Add your handling code here:
}//GEN-LAST:event_jSearchTable6MouseClicked

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.jSearchDialog3.dispose();        // Add your handling code here:
}//GEN-LAST:event_jButton91ActionPerformed
    private void searchButton111Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog111.dispose();
        java.awt.Point point = this.jTextField39.getLocationOnScreen();
        jSearchDialog111.setSize(400, 200);
        jSearchDialog111.setLocation(point);
        jSearchDialog111.setVisible(true);


    }
    private void searchButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton6ActionPerformed
        searchButton111Clicked();
        //this.jButton1.setEnabled(true);

        // this.jButton7.setEnabled(true);// Add your handling code here:
}//GEN-LAST:event_searchButton6ActionPerformed

    private void jTextField111111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111111CaretUpdate
        if (this.jTextField111111.getCaretPosition() < 2) {
            System.out.print("Nothing");
        } else {
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                    + "DISTINCT requisition_no as rq_number,(date) as date, store_name,cost_center FROM st_receive_requisation "
                    + "WHERE requisition_no ILIKE '" + jTextField111111.getText().toString() + "%' AND "
                    //+ "cost_center ilike '" + this.jComboBox11.getSelectedItem().toString() + "%' AND "
                    //+ "store_name ilike '" + this.jComboBox2.getSelectedItem().toString() + "%'  AND "
                    + "(quantity-qty_issued) > 0 ORDER BY requisition_no"));
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);

        }   // Add your handling code here:
}//GEN-LAST:event_jTextField111111CaretUpdate
    private void populateTable22(java.lang.String patient_no) {

        int j = 0;
        try {


            java.sql.Statement stmtTable111 = connectDB.createStatement();
            java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT item_code,item_description,strength,units,price*(quantity-qty_issued)::numeric(10,2),"
                    + "(quantity-qty_issued), cost_center FROM st_receive_requisation WHERE requisition_no = '" + jTextField39.getText() + "'  and (quantity-qty_issued) >0 order by item_description");

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                jTextField8.setText(rsetTable111.getObject(7).toString());
                jTable1.setValueAt(rsetTable111.getObject(1), j, 0);
                jTable1.setValueAt(rsetTable111.getObject(2), j, 1);
                jTable1.setValueAt(rsetTable111.getObject(4), j, 2);
                jTable1.setValueAt(rsetTable111.getObject(6), j, 3);

                j++;
                //}
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }
    }
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        jTextField39.setText(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(), 0).toString());

        jSearchDialog111.dispose();
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
        this.populateTable22(this.jTextField39.getText().toString());

        /*
         * try { for (int j = 0; j < jTable1.getRowCount(); j++) { //
         * java.sql.Statement stmtTable111 = connectDB.createStatement(); if
         * (jTable1.getModel().getValueAt(j, 0) != null) {
         *
         * java.sql.Statement stmtTable11 = connectDB.createStatement();
         * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
         * sum(qty) FROM stock_balance_qty WHERE item_code ilike '" +
         * jTable1.getValueAt(j, 0).toString() + "' AND department ILIKE '" +
         * jComboBox2.getSelectedItem() + "' AND dates <= '" +
         * datePicker1.getDate() + "'"); java.sql.Statement stmtTable11x =
         * connectDB.createStatement(); java.sql.ResultSet rsetTable11x =
         * stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty
         * WHERE item_code ilike '" + jTable1.getValueAt(j, 0).toString() + "'
         * AND department ILIKE '" + jComboBox11.getSelectedItem() + "' AND
         * dates <= '" + datePicker1.getDate() + "'");
         *
         *
         * while (rsetTable11x.next()) { while (rsetTable11.next()) { double
         * storeBal = 0; double depBal = 0; storeBal = rsetTable11.getDouble(1);
         * depBal = rsetTable11x.getDouble(1); jTable1.setValueAt(storeBal, j,
         * 4); jTable1.setValueAt(depBal, j, 5); } } } } } catch
         * (java.sql.SQLException sqlExec) {
         *
         * javax.swing.JOptionPane.showMessageDialog(this,
         * sqlExec.getMessage()); }
         */
        // Add your handling code here:
}//GEN-LAST:event_jSearchTable111MouseClicked

    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
        jSearchDialog111.dispose();  // Add your handling code here:
}//GEN-LAST:event_jButton5111ActionPerformed
    private void searchButton121Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog13.dispose();
        java.awt.Point point = this.jTextField40.getLocationOnScreen();

        jSearchDialog13.setSize(400, 200);

        jSearchDialog13.setLocation(point);

        jSearchDialog13.setVisible(true);


    }
    private void searchButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton7ActionPerformed
        searchButton121Clicked();        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton7ActionPerformed

    private void jTextField1115CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1115CaretUpdate
        jSearchTable7.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT(quotation_no) AS quotation_no, quotation_date FROM st_floated_quotations WHERE quotation_no ILIKE '" + jTextField1115.getText().toString() + "%'  ORDER BY 1"));
        jSearchTable7.setShowHorizontalLines(true);
        jSearchScrollPane7.setViewportView(jSearchTable7);        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1115CaretUpdate

    private void jSearchTable7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable7MouseClicked

        for (int k = 0; k < jTable2.getRowCount(); k++) {
            for (int r = 0; r < jTable2.getColumnCount(); r++) {
                jTable2.getModel().setValueAt(null, k, r);
            }
        }
        jTextField40.setText(jSearchTable7.getValueAt(jSearchTable7.getSelectedRow(), 0).toString());
        java.lang.Object[] listofAct = this.getListofActivities();

        String col1 = null, col2 = null, col3 = null, col4 = null, col5 = null, col6 = null, col7 = null, col8 = null;
        String col9 = null, col10 = null, col11 = null, col12 = null, col13 = null, col14 = null, col15 = null;
        int tcol1 = 0, tcol2 = 0, tcol3 = 0, tcol4 = 0, tcol5 = 0, tcol6 = 0, tcol7 = 0, tcol8 = 0;
        int tcol9 = 0, tcol10 = 0, tcol11 = 0, tcol12 = 0, tcol13 = 0, tcol14 = 0, tcol15 = 0;
        try {
            int k = 0;
            String ind = null;
            java.sql.Statement st11s = connectDB.createStatement();

            java.sql.ResultSet rsetr = st11s.executeQuery("SELECT DISTINCT supplier FROM st_floated_quotations WHERE quotation_no = '" + jTextField40.getText() + "' ORDER BY 1 ASC");

            while (rsetr.next()) {
                ind = rsetr.getString(1);

                switch (k) {
                    case 0: {
                        col1 = rsetr.getString(1);
                    }
                    break;
                    case 1: {
                        col2 = rsetr.getString(1);
                    }
                    break;
                    case 2: {
                        col3 = rsetr.getString(1);
                    }
                    break;
                    case 3: {
                        col4 = rsetr.getString(1);
                    }
                    break;

                    case 4: {
                        col5 = rsetr.getString(1);
                    }
                    break;

                    /*
                     * case 5: { col6 = rsetr.getString(1); } break;
                     *
                     * case 6: { col7 = rsetr.getString(1); } break;
                     *
                     * case 7: { col8 = rsetr.getString(1); } break;
                     *
                     * case 8: { col9 = rsetr.getString(1); } break;
                     *
                     * case 9: { col10 = rsetr.getString(1); } break;
                     *
                     * case 10: { col11 = rsetr.getString(1); } break;
                     *
                     * case 11: { col12 = rsetr.getString(1); } break;
                     *
                     * case 12: { col13 = rsetr.getString(1); } break;
                     *
                     * case 13: { col14 = rsetr.getString(1); } break;
                     *
                     * case 14: { col15 = rsetr.getString(1); } break;
                     */

                    default:
                        ;
                }
                k++;

                jTable2.setValueAt(col1, 0, 4);

                if (col2 == null) {
                    jTable2.setValueAt("-", 0, 5);
                    //col5 = "-";
                } else {
                    jTable2.setValueAt(col2, 0, 5);
                }
                if (col3 == null) {
                    jTable2.setValueAt("-", 0, 6);
                    //col5 = "-";
                } else {
                    jTable2.setValueAt(col3, 0, 6);
                }
                if (col4 == null) {
                    jTable2.setValueAt("-", 0, 7);
                    //col5 = "-";
                } else {
                    jTable2.setValueAt(col4, 0, 7);
                }
                System.out.println("This is dangerous  " + col5);
                if (col5 == null) {
                    jTable2.setValueAt("-", 0, 8);
                    //col5 = "-";
                } else {
                    jTable2.setValueAt(col5, 0, 8);
                }
            }
            //    java.sql.Connection conDb1 = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");

            System.out.println(listofAct.length);
            int j = 1;
            for (int i = 0; i < listofAct.length; i++) {
                System.out.println("This Is the Item : " + listofAct[i].toString());
                java.sql.Statement st1 = connectDB.createStatement();
                java.sql.Statement st2 = connectDB.createStatement();
                java.sql.Statement st3 = connectDB.createStatement();
                java.sql.Statement st4 = connectDB.createStatement();

                java.sql.Statement st5 = connectDB.createStatement();
                java.sql.Statement st6 = connectDB.createStatement();
                java.sql.ResultSet rset4 = null;
                java.sql.ResultSet rset5 = null;
                java.sql.ResultSet rset3 = null;
                java.sql.ResultSet rset2 = null;
                java.sql.ResultSet rset6 = st6.executeQuery("SELECT item_number,item_description,units,quantity FROM st_floated_quotations WHERE item_description = '" + listofAct[i] + "'");
                java.sql.ResultSet rset1 = st1.executeQuery("SELECT unit_price FROM st_floated_quotations WHERE item_description = '" + listofAct[i] + "'  AND supplier = '" + col1 + "'");

                if (col2 == null) {
                    rset2 = st2.executeQuery("SELECT '0'");

                } else {
                    rset2 = st2.executeQuery("SELECT unit_price FROM st_floated_quotations WHERE item_description = '" + listofAct[i] + "'  AND supplier = '" + col2 + "'");
                }
                if (col3 == null) {
                    rset3 = st3.executeQuery("SELECT '0'");

                } else {
                    rset3 = st3.executeQuery("SELECT unit_price FROM st_floated_quotations WHERE item_description = '" + listofAct[i] + "'  AND supplier = '" + col3 + "'");
                }

                if (col4 == null) {
                    rset4 = st4.executeQuery("SELECT '0'");

                } else {
                    rset4 = st4.executeQuery("SELECT unit_price FROM st_floated_quotations WHERE item_description = '" + listofAct[i] + "'  AND supplier = '" + col4 + "'");
                }
                if (col5 == null) {
                    rset5 = st5.executeQuery("SELECT '0'");

                } else {
                    rset5 = st5.executeQuery("SELECT unit_price FROM st_floated_quotations WHERE item_description = '" + listofAct[i] + "'  AND supplier = '" + col5 + "'");
                }
                while (rset6.next()) {
                    while (rset1.next()) {
                        while (rset2.next()) {
                            while (rset3.next()) {
                                while (rset4.next()) {
                                    while (rset5.next()) {
                                        System.out.print(rset6.getObject(1));
                                        jTable2.setValueAt(rset6.getObject(1), j, 0);
                                        jTable2.setValueAt(rset6.getObject(2), j, 1);
                                        jTable2.setValueAt(rset6.getObject(3), j, 2);
                                        jTable2.setValueAt(rset6.getObject(4), j, 3);
                                        jTable2.setValueAt(rset1.getObject(1), j, 4);
                                        jTable2.setValueAt(rset2.getObject(1), j, 5);
                                        jTable2.setValueAt(rset3.getObject(1), j, 6);
                                        jTable2.setValueAt(rset4.getObject(1), j, 7);
                                        jTable2.setValueAt(rset5.getObject(1), j, 8);

                                        //jTable2.setValueAt(col5, 0, 8);
                                        j++;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            //}

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }

        this.jSearchDialog13.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchTable7MouseClicked

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton56ActionPerformed
        this.jSearchDialog13.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton56ActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        int i = jTable1.getSelectedRow();
        java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();

        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select units from st_stock_item where description = '" + cmbox2.getSelectedItem() + "'");
            while (rs.next()) {
                jTable1.setValueAt(rs.getObject(1), i, 2);
            }
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
    }

    private void sendRequisition() {

        jTable1.invalidate();

        jTable1.validate();

        jTable11.invalidate();

        jTable11.validate();

        jTable1.setEditingColumn(-1);

        jTable11.setEditingRow(-1);

        jTable11.setEditingColumn(-1);

        jTable1.setEditingRow(-1);

        jTable1.nextFocus();

        jTable11.nextFocus();

        jTable1.doLayout();

        jTable11.doLayout();

        // jTable11.getCursor().

        this.postbtn.grabFocus();

        com.afrisoftech.lib.DateLables dateLabel = new com.afrisoftech.lib.DateLables();

        java.lang.String labelString = dateLabel.getDateLabel();

        System.out.println(labelString);

        java.io.File requisFile;

        java.io.FileOutputStream requistOutStream;

        java.io.ObjectOutputStream requisObjStream;

        try {

            requisFile = java.io.File.createTempFile("REQST" + labelString + "_", ".req", new java.io.File(System.getProperty("user.dir")));

            requisFile.deleteOnExit();

            requistOutStream = new java.io.FileOutputStream(requisFile);

            requisObjStream = new java.io.ObjectOutputStream(requistOutStream);

            requisObjStream.writeObject(jTable1);

            requisObjStream.writeObject(jTable11);

            requisObjStream.flush();

        } catch (java.io.IOException IOexec) {

            javax.swing.JOptionPane.showMessageDialog(this, IOexec.getMessage());

        }

    }

    private void postLocalRequisition() {
    }

    public java.lang.Object[] getListofActivities() {

        java.lang.Object[] listofActivities = null;

        java.util.Vector listActVector = new java.util.Vector(1, 1);


        try {

            //    java.sql.Connection connDB = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rSet1 = stmt1.executeQuery("SELECT DISTINCT item_number,"
                    + "item_description FROM st_floated_quotations WHERE "
                    + "quotation_no = '" + jTextField40.getText() + "' ORDER BY 1 ASC");

            while (rSet1.next()) {
                listActVector.addElement(rSet1.getObject(2).toString());
                System.out.print(rSet1.getObject(2).toString());
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());

        }

        listofActivities = listActVector.toArray();
        System.out.println("Done list of activities ...");
        return listofActivities;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JButton cancelbtn2;
    private javax.swing.JButton cancelbtn3;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private com.afrisoftech.lib.DatePicker datePicker5;
    private javax.swing.JButton exitbtn;
    private javax.swing.JButton exitbtn1;
    private javax.swing.JButton exitbtn2;
    private javax.swing.JButton exitbtn3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton91;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JDialog jSearchDialog13;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JDialog jSearchDialog5;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JPanel jSearchPanel4;
    private javax.swing.JPanel jSearchPanel5;
    private javax.swing.JPanel jSearchPanel6;
    private javax.swing.JPanel jSearchPanel7;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JScrollPane jSearchScrollPane4;
    private javax.swing.JScrollPane jSearchScrollPane5;
    private javax.swing.JScrollPane jSearchScrollPane6;
    private javax.swing.JScrollPane jSearchScrollPane7;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JTable jSearchTable4;
    private javax.swing.JTable jSearchTable5;
    private javax.swing.JTable jSearchTable6;
    private javax.swing.JTable jSearchTable7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField111111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField1114;
    private javax.swing.JTextField jTextField1115;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JTextField jTextField93;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JButton postbtn;
    private javax.swing.JButton postbtn1;
    private javax.swing.JButton postbtn2;
    private javax.swing.JButton postbtn3;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton resetbtn1;
    private javax.swing.JButton resetbtn2;
    private javax.swing.JButton resetbtn3;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JButton searchButton5;
    private javax.swing.JButton searchButton6;
    private javax.swing.JButton searchButton7;
    // End of variables declaration//GEN-END:variables
}
