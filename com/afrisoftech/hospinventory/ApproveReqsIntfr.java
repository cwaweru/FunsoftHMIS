/*
 * companyprflintfr.java
 *
 * Created on August 13, 2002, 11:36 AM
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.UserName;

/**
 *
 * @author saleem IRQ approval form
 */
public class ApproveReqsIntfr extends javax.swing.JInternalFrame {

    private javax.swing.JComboBox cmbox = new javax.swing.JComboBox();
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    com.afrisoftech.lib.DBObject dbObject;
    String transNo = null;

    public ApproveReqsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        dbObject = new com.afrisoftech.lib.DBObject();

        connectDB = connDb;

        pConnDB = pconnDB;
//RcvBranchRequisintfr
        initComponents();

        WaitingIRQsThread waitingirqsThread = new WaitingIRQsThread();

        waitingirqsThread.start();

//        approvingdeptCmbx.setSelectedItem(UserName.getUserAllocatedStore(connectDB, UserName.getLoginName(connectDB)));
        System.err.println(UserName.getUserAllocatedStore(connectDB, UserName.getLoginName(connectDB)));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new javax.swing.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        irqnosearch = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        searchTransferNumberTxt = new javax.swing.JTextField();
        transferNumberScrollPane = new javax.swing.JScrollPane();
        searchTransferTable = new com.afrisoftech.dbadmin.JTable();
        jButton10 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        resuisitionNumberSearchDialog = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        requisitionNumberSearchTxt = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        requisitionNumberSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton5111 = new javax.swing.JButton();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        recepientStoreCmbx = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        issuingStoreCmbx = new javax.swing.JComboBox();
        rectifyTransferChkbx = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        irqnoTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        issuingItemsTable = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            /*   boolean[] canEdit = new boolean [] {
                false, true, priceEdit, false, false
            };
            */
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        raisedBytxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        approvedBytxt = new javax.swing.JTextField();
        totalValueTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        saveTransactionBtn = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();
        mainStoreCkbx = new javax.swing.JCheckBox();
        subStoreChkbx = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        irqsTbl = new com.afrisoftech.dbadmin.JTable();
        searchIRQtxt = new javax.swing.JTextField();
        refreshbtn = new javax.swing.JButton();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);

        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        irqnosearch.setModal(true);
        irqnosearch.setUndecorated(true);
        irqnosearch.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        searchTransferNumberTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchTransferNumberTxtCaretUpdate(evt);
            }
        });
        searchTransferNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTransferNumberTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel2.add(searchTransferNumberTxt, gridBagConstraints);

        searchTransferTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        searchTransferTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTransferTableMouseClicked(evt);
            }
        });
        transferNumberScrollPane.setViewportView(searchTransferTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(transferNumberScrollPane, gridBagConstraints);

        jButton10.setText("Dispose");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        irqnosearch.getContentPane().add(jSearchPanel2, gridBagConstraints);

        resuisitionNumberSearchDialog.setModal(true);
        resuisitionNumberSearchDialog.setUndecorated(true);
        resuisitionNumberSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        requisitionNumberSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                requisitionNumberSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel111.add(requisitionNumberSearchTxt, gridBagConstraints);

        requisitionNumberSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        requisitionNumberSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        requisitionNumberSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requisitionNumberSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane111.setViewportView(requisitionNumberSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton5111.setText("Close");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        resuisitionNumberSearchDialog.getContentPane().add(jSearchPanel111, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Department approval For IRQs- Stockable Items");
        setToolTipText("");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "You can only search IRQs if you have departmental rights to approve IRQs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 0, 51))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        recepientStoreCmbx.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        recepientStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recepientStoreCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(recepientStoreCmbx, gridBagConstraints);

        jLabel13.setText("Requisitioning Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel1.setText("Issiuing Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel3.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        //issuingStoreCmbx.setModel( com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct stores from store_allocation where user_name = current_user order by 1"));
        issuingStoreCmbx.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        issuingStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issuingStoreCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(issuingStoreCmbx, gridBagConstraints);

        buttonGroup2.add(rectifyTransferChkbx);
        rectifyTransferChkbx.setText("Tick All items");
        rectifyTransferChkbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rectifyTransferChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectifyTransferChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(rectifyTransferChkbx, gridBagConstraints);

        jLabel6.setText("Requisition (IRQ) No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.GridBagLayout());

        irqnoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(irqnoTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel5.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel2.add(jPanel1, gridBagConstraints);

        issuingItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Strength", "Units", "Issuing store Bal", "Rev. Store Bal.", "Qty Per Pack", "Qty. Issued", "Price", "Total", "Reverse?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        issuingItemsTable.setGridColor(new java.awt.Color(0, 204, 204));
        issuingItemsTable.setSelectionForeground(new java.awt.Color(255, 51, 0));
        issuingItemsTable.getTableHeader().setReorderingAllowed(false);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < issuingItemsTable.getColumnCount(); i++) {
            column = this.issuingItemsTable.getColumnModel().getColumn(i);
            if (i == 1) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if(i == 0){
                    column.setPreferredWidth(100);
                }else{
                    if(i == 4 || i == 5){
                        column.setPreferredWidth(100);
                    }else{
                        //if (i == 2) {
                            column.setPreferredWidth(100);
                            // }  else
                        //column.setPreferredWidth(50);
                    }
                }
            }
        }
        issuingItemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                issuingItemsTableMouseClicked(evt);
            }
        });
        issuingItemsTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                issuingItemsTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(issuingItemsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 30.0;
        gridBagConstraints.weighty = 30.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Raised By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(raisedBytxt, gridBagConstraints);

        jLabel5.setText("Approved By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel5, gridBagConstraints);

        approvedBytxt.setEditable(false);
        approvedBytxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        approvedBytxt.setForeground(new java.awt.Color(128, 128, 128));
        approvedBytxt.setText(com.afrisoftech.lib.UserName.getUserName(connectDB).toLowerCase());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(approvedBytxt, gridBagConstraints);

        totalValueTxt.setEditable(false);
        totalValueTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalValueTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalValueTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(totalValueTxt, gridBagConstraints);

        jLabel2.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        jPanel11.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel2.add(jPanel11, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Utopia", 3, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel12, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setMinimumSize(new java.awt.Dimension(25, 200));
        jPanel3.setPreferredSize(new java.awt.Dimension(50, 195));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        saveTransactionBtn.setBackground(new java.awt.Color(0, 204, 204));
        saveTransactionBtn.setMnemonic('s');
        saveTransactionBtn.setText("Approve IRQ");
        saveTransactionBtn.setToolTipText("click to store data");
        saveTransactionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTransactionBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(saveTransactionBtn, gridBagConstraints);

        jButton5.setBackground(new java.awt.Color(0, 204, 204));
        jButton5.setMnemonic('r');
        jButton5.setText("Remove Row");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton5, gridBagConstraints);

        jButton8.setBackground(new java.awt.Color(0, 204, 204));
        jButton8.setMnemonic('r');
        jButton8.setText("Reprint IRQ");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton8, gridBagConstraints);

        jButton3.setBackground(new java.awt.Color(0, 204, 204));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("click to clear fields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton3, gridBagConstraints);

        jButton4.setBackground(new java.awt.Color(0, 204, 204));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click to close");
        jButton4.setSelected(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton4, gridBagConstraints);

        jButton6.setBackground(new java.awt.Color(0, 204, 204));
        jButton6.setMnemonic('h');
        jButton6.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel3.add(spacerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        buttonGroup1.add(mainStoreCkbx);
        mainStoreCkbx.setText("Central Store");
        mainStoreCkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainStoreCkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(mainStoreCkbx, gridBagConstraints);

        buttonGroup1.add(subStoreChkbx);
        subStoreChkbx.setText("Sub Store");
        subStoreChkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subStoreChkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(subStoreChkbx, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Un approved IRQs"));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        irqsTbl.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        irqsTbl.setForeground(new java.awt.Color(102, 102, 102));
        irqsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "IRQ Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        irqsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                irqsTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(irqsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane2, gridBagConstraints);

        searchIRQtxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchIRQtxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(searchIRQtxt, gridBagConstraints);

        refreshbtn.setBackground(new java.awt.Color(204, 255, 204));
        refreshbtn.setText("Refresh List");
        refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(refreshbtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        jTabbedPane1.addTab("Department approval For IRQs", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 1270, 459);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
        resuisitionNumberSearchDialog.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5111ActionPerformed

    private void requisitionNumberSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requisitionNumberSearchTableMouseClicked
//        requisitionNumberTxt.setText(requisitionNumberSearchTable.getValueAt(requisitionNumberSearchTable.getSelectedRow(), 0).toString());
//        issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '" + requisitionNumberSearchTable.getValueAt(requisitionNumberSearchTable.getSelectedRow(), 2) + "'"));
//        recepientStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '" + requisitionNumberSearchTable.getValueAt(requisitionNumberSearchTable.getSelectedRow(), 3) + "'"));
//        resuisitionNumberSearchDialog.dispose();
//        for (int k = 0; k < issuingItemsTable.getRowCount(); k++) {
//            for (int r = 0; r < issuingItemsTable.getColumnCount(); r++) {
//                issuingItemsTable.getModel().setValueAt(null, k, r);
//            }
//        }
//        this.populateTable22(this.requisitionNumberTxt.getText().toString());
//        try {
//            for (int j = 0; j < issuingItemsTable.getRowCount(); j++) {
//                //    java.sql.Statement stmtTable111 = connectDB.createStatement();
//                if (issuingItemsTable.getModel().getValueAt(j, 0) != null) {
//
//                    java.sql.Statement stmtTable11 = connectDB.createStatement();
//                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + issuingItemsTable.getValueAt(j, 0).toString() + "' AND department ILIKE '" + issuingStoreCmbx.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");
//                    java.sql.Statement stmtTable11x = connectDB.createStatement();
//                    java.sql.ResultSet rsetTable11x = stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + issuingItemsTable.getValueAt(j, 0).toString() + "' AND department ILIKE '" + recepientStoreCmbx.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");
//
//
//                    while (rsetTable11x.next()) {
//                        while (rsetTable11.next()) {
//                            double storeBal = 0;
//                            double depBal = 0;
//                            storeBal = rsetTable11.getDouble(1);
//                            depBal = rsetTable11x.getDouble(1);
//                            issuingItemsTable.setValueAt(storeBal, j, 4);
//                            issuingItemsTable.setValueAt(depBal, j, 5);
//                        }
//                    }
//                }
//            }
//
//            totalValueTxt.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(this.issuingItemsTable, 9)));
//            approvedBytxt.setText(com.afrisoftech.lib.UserName.getLoginName(connectDB));
//        } catch (java.sql.SQLException sqlExec) {
//
//            sqlExec.printStackTrace();
//
//            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
//        }
        // Add your handling code here:
    }//GEN-LAST:event_requisitionNumberSearchTableMouseClicked
    private void populateTable22(java.lang.String processNumber) {

        //   if (this.newTransferChkbx.isSelected()) {
        //issuingItemsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT item_code,item_description, '' as strength, 1 as units, 0.00 as issuing_store_balance, 0.00 as recipient_store_balance, 1.00 as qty_per_pack, quantity::numeric(10,2), price::numeric(10,2), (quantity * price)::numeric(10,2) FROM st_receive_requisation WHERE requisition_no = '" + requisitionNumberTxt.getText() + "' and quantity - qty_issued > 0 order by item_description"));
        issuingItemsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT item_code,item_description, '' as strength, 1 as units, 0.00 as issuing_store_balance, 0.00 as recipient_store_balance, 1.00 as qty_per_pack, quantity::numeric, price::numeric, (quantity * price)::numeric TOTAL, FALSE as Approve FROM st_receive_requisation WHERE requisition_no = '" + irqnoTxt.getText() + "' and quantity - qty_issued > 0 and irq_approval=false order by item_description"));

//        } else if (this.rectifyTransferChkbx.isSelected()) {
//
//            //issuingItemsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT item_code,item as item_description, '' as strength, 1 as units, 0.00 as issuing_store_balance, 0.00 as recipient_store_balance, 1.00 as qty_per_pack, issuing::numeric(10,2), buying_price::numeric(10,2), total::numeric(10,2), false FROM st_sub_stores WHERE transaction_no = '" + transferNumberTxt.getText() + "' and issuing > 0 order by item"));
//            issuingItemsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT item_code,item as item_description, '' as strength, 1 as units, 0.00 as issuing_store_balance, 0.00 as recipient_store_balance, 1.00 as qty_per_pack, issuing::numeric, buying_price::numeric, total::numeric, false FROM st_sub_stores WHERE transaction_no = '" + irqnoTxt.getText() + "' and issuing > 0 order by item"));
//
//        }
    }
    private void requisitionNumberSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_requisitionNumberSearchTxtCaretUpdate
        if (this.requisitionNumberSearchTxt.getCaretPosition() < 2) {
            System.out.print("Nothing");
        } else {
            requisitionNumberSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                    + "DISTINCT requisition_no as rq_number,(date) as date, store_name,cost_center FROM st_receive_requisation "
                    + "WHERE requisition_no ILIKE '" + requisitionNumberSearchTxt.getText().toString() + "%' AND "
                    //+ "cost_center ilike '" + this.jComboBox11.getSelectedItem().toString() + "%' AND "
                    //+ "store_name ilike '" + this.jComboBox2.getSelectedItem().toString() + "%'  AND "
                    + "receiving> 0 and store_name ilike '" + issuingStoreCmbx.getSelectedItem() + "' ORDER BY requisition_no"));
            requisitionNumberSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(requisitionNumberSearchTable);

        }   // Add your handling code here:
    }//GEN-LAST:event_requisitionNumberSearchTxtCaretUpdate
    private void searchButton111Clicked() {
//
//        System.out.println("Showing dialog");
//
//        resuisitionNumberSearchDialog.dispose();
//        java.awt.Point point = this.requisitionNumberTxt.getLocationOnScreen();
//        resuisitionNumberSearchDialog.setSize(600, 200);
//        resuisitionNumberSearchDialog.setLocation(point);
//        resuisitionNumberSearchDialog.setVisible(true);
    }
    private void issuingStoreCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issuingStoreCmbxActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_issuingStoreCmbxActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        irqnosearch.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void searchTransferTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTransferTableMouseClicked
        irqnosearch.dispose();

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        System.out.println("Loading values Please Wait");
        irqnoTxt.setText(searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 0).toString());

        recepientStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '" + this.searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 1) + "'"));
        issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '" + searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 2) + "'"));

        java.text.DateFormat df = java.text.DateFormat.getDateInstance();

        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

        sdf.applyPattern("yyyy-MM-dd");

        try {
            datePicker1.setDate(sdf.parse(searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 3).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        // recepientStoreCmbx.setSelectedItem(searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 1).toString());
        //issuingStoreCmbx.setSelectedItem(searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 2).toString());
        this.populateTable22(irqnoTxt.getText());
        try {
            for (int j = 0; j < issuingItemsTable.getRowCount(); j++) {
                //    java.sql.Statement stmtTable111 = connectDB.createStatement();
                if (issuingItemsTable.getModel().getValueAt(j, 0) != null) {

                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + issuingItemsTable.getValueAt(j, 0).toString() + "' AND department ILIKE '" + issuingStoreCmbx.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");
                    java.sql.Statement stmtTable11x = connectDB.createStatement();
                    java.sql.ResultSet rsetTable11x = stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + issuingItemsTable.getValueAt(j, 0).toString() + "' AND department ILIKE '" + recepientStoreCmbx.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");

                    while (rsetTable11x.next()) {
                        while (rsetTable11.next()) {
                            double storeBal = 0;
                            double depBal = 0;
                            storeBal = rsetTable11.getDouble(1);
                            depBal = rsetTable11x.getDouble(1);
                            issuingItemsTable.setValueAt(storeBal, j, 4);
                            issuingItemsTable.setValueAt(depBal, j, 5);
                        }
                    }
                }
            }
            java.sql.PreparedStatement pstmts = connectDB.prepareStatement("SELECT DISTINCT user_name FROM st_receive_requisation WHERE requisition_no = '" + irqnoTxt.getText() + "'");
            java.sql.ResultSet rsets = pstmts.executeQuery();
            while (rsets.next()) {
                raisedBytxt.setText(rsets.getString(1));

            }
            totalValueTxt.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(this.issuingItemsTable, 9)));
            approvedBytxt.setText(com.afrisoftech.lib.UserName.getUserName(connectDB).toLowerCase());
        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }
        System.out.println("Finished , Loading details On Form");

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

// TODO add your handling code here:
    }//GEN-LAST:event_searchTransferTableMouseClicked

    private void searchTransferNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTransferNumberTxtActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_searchTransferNumberTxtActionPerformed

    private void searchTransferNumberTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchTransferNumberTxtCaretUpdate
        if (searchTransferNumberTxt.getText().length() > 5 && mainStoreCkbx.isSelected()) {

            searchTransferTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT DISTINCT requisition_no,cost_center,store_name,date FROM st_receive_requisation WHERE "
                    + "requisition_no ILIKE '%" + searchTransferNumberTxt.getText() + "%' and store_name ILIKE '" + issuingStoreCmbx.getSelectedItem() + "' and  UPPER(cost_center) IN (SELECT distinct UPPER(stores) from store_allocation WHERE  user_name ILIKE current_user AND type ilike 'Approve IRQ') order by date desc "));

            searchTransferTable.setShowHorizontalLines(false);
            transferNumberScrollPane.setViewportView(searchTransferTable);
        } else {
            if (searchTransferNumberTxt.getText().length() > 5 && subStoreChkbx.isSelected()) {
                searchTransferTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT DISTINCT requisition_no,cost_center,store_name,date FROM st_receive_requisation WHERE "
                        + "requisition_no ILIKE '" + searchTransferNumberTxt.getText() + "%' and cost_center ilike '" + recepientStoreCmbx.getSelectedItem() + "' and UPPER(cost_center) IN (SELECT distinct UPPER(stores) from store_allocation WHERE  user_name ILIKE current_user AND type ilike 'Approve IRQ') order by date desc "));
            }

            searchTransferTable.setShowHorizontalLines(false);
            transferNumberScrollPane.setViewportView(searchTransferTable);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_searchTransferNumberTxtCaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.irqnoTxt.getLocationOnScreen();

        irqnosearch.setSize(600, 200);

        irqnosearch.setLocation(point);

        irqnosearch.setVisible(true);

    }
    private void rectifyTransferChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectifyTransferChkbxActionPerformed
        jLabel6.setEnabled(true);
        searchButton.setEnabled(true);
        for (int i = 0; i < issuingItemsTable.getRowCount(); i++) {
            if (rectifyTransferChkbx.isSelected()) {
                issuingItemsTable.setValueAt(true, i, 10);
            } else {
                issuingItemsTable.setValueAt(false, i, 10);
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_rectifyTransferChkbxActionPerformed

    private void subStoreChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subStoreChkbxActionPerformed

        // issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT stores from store_allocation where user_name = current_user"));// and type ilike 'Issuing Stock%'"));
        issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT  initcap(store_name) from st_stores ORDER BY 1"));

        issuingStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //   jComboBox2ActionPerformed(evt);
            }
        });

        recepientStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT  store_name from st_stores ORDER BY 1"));
        recepientStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //   jComboBox2ActionPerformed(evt);
            }
        });

        // Add your handling code here:
    }//GEN-LAST:event_subStoreChkbxActionPerformed

    private void mainStoreCkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainStoreCkbxActionPerformed
        //this.jTextField1.setVisible(true);
        //this.jCheckBox2.setVisible(false);
        //issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct stores from store_allocation where user_name = current_user order by 1"));
        issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' as store_name union all select distinct initcap(store_name) from st_main_stores order by store_name"));
        issuingStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //  jComboBox2ActionPerformed(evt);
            }
        });

        recepientStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct initcap(store_name) from st_stores ORDER BY 1"));
        recepientStoreCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //   jComboBox2ActionPerformed(evt);
            }
        });

        // Add your handling code here:
    }//GEN-LAST:event_mainStoreCkbxActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //      String transNo = null;

        //   if (totalValueTxt.getText() != "0.00") {
        if (irqnoTxt.getText().length() > 0) {
            try {

                com.afrisoftech.hospinventory.mtrhreports.InternalReqMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.InternalReqMtrhPdf();

                policy.InternalReqMtrhPdf(connectDB, recepientStoreCmbx.getSelectedItem().toString(), irqnoTxt.getText());

            } catch (Exception sq) {

                sq.printStackTrace();

                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "SELECT AN IRQ FIRST", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
    }//GEN-LAST:event_jTextField1111CaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    private void cmbox11MouseClicked() {
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void issuingItemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_issuingItemsTableMouseClicked
        if (issuingItemsTable.getSelectedColumn() == 10) {
            //this.cmbox1MouseClicked();
        }        // Add your handling code here:
    }//GEN-LAST:event_issuingItemsTableMouseClicked
    private void cmbox1MouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog.setSize(600, 200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        issuingItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), issuingItemsTable.getSelectedRow(), 0);
        issuingItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), issuingItemsTable.getSelectedRow(), 1);
        issuingItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), issuingItemsTable.getSelectedRow(), 2);
        issuingItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3), issuingItemsTable.getSelectedRow(), 3);
        issuingItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4), issuingItemsTable.getSelectedRow(), 6);
        issuingItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 5), issuingItemsTable.getSelectedRow(), 8);

        jSearchDialog.dispose();
        int i = issuingItemsTable.getSelectedRow();
        if (this.mainStoreCkbx.isSelected()) {
            try {
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select sum(qty),1 from stock_balance_qty where item_code = '" + issuingItemsTable.getValueAt(issuingItemsTable.getSelectedRow(), 0) + "' and department ilike '" + issuingStoreCmbx.getSelectedItem().toString() + "%' AND dates <= '" + datePicker1.getDate() + "'");
                java.sql.Statement pst = connectDB.createStatement();
                while (rs1.next()) {

                    issuingItemsTable.setValueAt(rs1.getObject(1), i, 4);
                    // jTable1.setValueAt(rs1.getObject(2),i,1);
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        } else {
            try {
                java.sql.Statement pstmt1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pstmt1.executeQuery("select sum(qty),1 from stock_balance_qty where item_code = '" + issuingItemsTable.getValueAt(issuingItemsTable.getSelectedRow(), 0) + "' and department ilike '" + issuingStoreCmbx.getSelectedItem().toString() + "%' AND dates <= '" + datePicker1.getDate() + "'");
                java.sql.Statement pst = connectDB.createStatement();
                while (rs1.next()) {
                    issuingItemsTable.setValueAt(rs1.getObject(1), i, 4);
                    //jTable1.setValueAt(rs1.getObject(2),i,1);
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        }

        try {
            java.sql.Statement pstmt12 = connectDB.createStatement();
            java.sql.ResultSet rs12 = pstmt12.executeQuery("select sum(qty),1 from stock_balance_qty where item_code = '" + issuingItemsTable.getValueAt(issuingItemsTable.getSelectedRow(), 0) + "' and department ilike '" + recepientStoreCmbx.getSelectedItem().toString() + "%' AND dates <= '" + datePicker1.getDate() + "'");

            while (rs12.next()) {
                issuingItemsTable.setValueAt(rs12.getObject(1), i, 5);

            }

        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        }

        if (issuingItemsTable.getValueAt(i, 4) == null) {

            issuingItemsTable.setValueAt(0.00, i, 4);

        }

        if (issuingItemsTable.getValueAt(i, 5) == null) {

            issuingItemsTable.setValueAt(0.00, i, 5);

        }

        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if (jTextField111.getCaretPosition() > 4) {
//        } 
//        else {
            if (mainStoreCkbx.isSelected()) {
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select DISTINCT item_code,description,strength,units,packaging, round(buying_price * 1.33), buying_price FROM stockitem WHERE (description ILIKE '%" + jTextField111.getText() + "%' OR item_code ILIKE '" + jTextField111.getText() + "%') AND department ILIKE '%" + issuingStoreCmbx.getSelectedItem() + "%' order by description"));

                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
            } else {
                if (1 == 2) {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select DISTINCT product_id,product,strength,units,(1.00)::numeric(10,2) AS packing,transfer_price::numeric(10,2) FROM stockprices WHERE (product ILIKE '%" + jTextField111.getText() + "%'  OR product_id ILIKE '" + jTextField111.getText() + "%') AND department ILIKE '%" + issuingStoreCmbx.getSelectedItem() + "%' ORDER BY product"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                } else {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select DISTINCT product_id,product,strength,units,(1.00)::numeric(10,2) AS packing,selling_price::numeric(10,2) FROM stockprices WHERE (product ILIKE '%" + jTextField111.getText() + "%' OR product_id ILIKE '" + jTextField111.getText() + "%') AND department ILIKE '%" + issuingStoreCmbx.getSelectedItem() + "%' ORDER BY product"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                }
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    public void tableModelTableChangedx() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double Gross = Double.parseDouble(this.totalValueTxt.getText());
        for (int i = 0; i < issuingItemsTable.getRowCount(); i++) {

            if (issuingItemsTable.getValueAt(i, 7) != null) {

                if (issuingItemsTable.getSelectedColumn() == 7) {

                    resFloat = resFloat + Double.parseDouble(issuingItemsTable.getModel().getValueAt(i, 9).toString());
                    totalValueTxt.setText(java.lang.String.valueOf(resFloat));
                } else {

                    resFloat = resFloat + Double.parseDouble(issuingItemsTable.getModel().getValueAt(i, 9).toString());
                    totalValueTxt.setText(java.lang.String.valueOf(resFloat));

                }
            }

        }
    }

    public void tableModelTableChangedx(javax.swing.event.TableModelEvent evt) {
        double Gross = Double.parseDouble(this.totalValueTxt.getText());
        //        double resFloat = 0.00;
        double resFloat = 0.00;

        for (int i = 0; i < issuingItemsTable.getRowCount(); i++) {

            if (issuingItemsTable.getValueAt(i, 7) != null) {

                if (issuingItemsTable.getSelectedColumn() == 7) {

                    resFloat = resFloat + Double.parseDouble(issuingItemsTable.getModel().getValueAt(i, 9).toString());

                    totalValueTxt.setText(java.lang.String.valueOf(resFloat));

                } else {
                    resFloat = resFloat + Double.parseDouble(issuingItemsTable.getModel().getValueAt(i, 9).toString());

                    totalValueTxt.setText(java.lang.String.valueOf(resFloat));

                }
            }
        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void issuingItemsTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_issuingItemsTableKeyReleased
        boolean neg = false;
        try {

            java.sql.Statement pstmt1 = connectDB.createStatement();
            java.sql.ResultSet rs1 = pstmt1.executeQuery("select neg_allow from st_stock_control"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

            while (rs1.next()) {

                neg = rs1.getBoolean(1);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sq.getMessage());

        }

        if (issuingItemsTable.getModel().getValueAt(issuingItemsTable.getSelectedRow(), 7) != null) {
            float bal = java.lang.Float.parseFloat(issuingItemsTable.getValueAt(issuingItemsTable.getSelectedRow(), 4).toString());
            float floatCol2 = java.lang.Float.parseFloat(issuingItemsTable.getValueAt(issuingItemsTable.getSelectedRow(), 7).toString());

            float floatCol3 = java.lang.Float.parseFloat(issuingItemsTable.getValueAt(issuingItemsTable.getSelectedRow(), 8).toString());
//            float pack = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());

            //   float resVal = floatCol2 * floatCol3*pack;
            if (neg == false && bal >= floatCol2) {
                float resVal = floatCol2 * floatCol3;

                java.lang.Float resFloat = new java.lang.Float(resVal);

                if (issuingItemsTable.getSelectedColumn() == issuingItemsTable.getSelectedColumn()) {

                    issuingItemsTable.setValueAt(resFloat, issuingItemsTable.getSelectedRow(), 9);

                    double Total = java.lang.Double.parseDouble(totalValueTxt.getText().toString());
                    double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                    double totalSum = Total + tableSum;
                    totalValueTxt.setText("" + totalSum + "");

                }

            } else {
                if (neg == false && bal < floatCol2) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You are not allowed to dispense more than the available stock", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    issuingItemsTable.setValueAt(0, issuingItemsTable.getSelectedRow(), 7);
                    issuingItemsTable.setValueAt(0, issuingItemsTable.getSelectedRow(), 8);

                    double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(issuingItemsTable, 7);
                    totalValueTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));

                }
            }
            if (neg == true) {
                float resVal = floatCol2 * floatCol3;

                java.lang.Float resFloat = new java.lang.Float(resVal);

                if (issuingItemsTable.getSelectedColumn() == issuingItemsTable.getSelectedColumn()) {

                    issuingItemsTable.setValueAt(resFloat, issuingItemsTable.getSelectedRow(), 9);

                    double Total = java.lang.Double.parseDouble(totalValueTxt.getText().toString());
                    double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                    double totalSum = Total + tableSum;
                    totalValueTxt.setText("" + totalSum + "");

                }
            }
        }
        this.tableModelTableChangedx();
        // Add your handling code here:
    }//GEN-LAST:event_issuingItemsTableKeyReleased
    private void populateTable1(java.lang.String patient_no) {
        int i = 0;
        try {

            //   for (int i = 0; i < jTable1.getRowCount(); i++ ) {
            //       if (jTable1.getModel().getValueAt(i,0) != null){
            java.sql.Statement stmtTable = connectDB.createStatement();

            java.sql.ResultSet rsetTable = stmtTable.executeQuery("SELECT product,balance,requisition,units FROM st_stock_prices WHERE requisition >0 AND department = '" + recepientStoreCmbx.getSelectedItem().toString() + "'");
            //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText().equalsIgnoreCase(jTextField1.getText())+"' and item = '"+jTable1.getValueAt(k,0).toString()+"'");

            while (rsetTable.next()) {

                issuingItemsTable.setValueAt(rsetTable.getObject(1), i, 0);
                issuingItemsTable.setValueAt(rsetTable.getObject(2), i, 4);
                issuingItemsTable.setValueAt(rsetTable.getObject(3), i, 2);
                issuingItemsTable.setValueAt(rsetTable.getObject(4), i, 1);
                //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);

                i++;

            }
            //   }
            // }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

    }

    private void recepientStoreCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recepientStoreCmbxActionPerformed
        for (int k = 0; k < issuingItemsTable.getRowCount(); k++) {
            for (int r = 0; r < issuingItemsTable.getColumnCount(); r++) {
                issuingItemsTable.getModel().setValueAt(null, k, r);
            }
        }

        int k = 0;

        saveTransactionBtn.setEnabled(true);

        // this.populateTable1(this.jComboBox11.getSelectedItem().toString());
        for (int j = 0; j < issuingItemsTable.getRowCount(); j++) {
            if (issuingItemsTable.getModel().getValueAt(j, 0) != null) {

                try {
                    java.sql.Statement stmtTable111 = connectDB.createStatement();

                    // java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE item = '"+jTable1.getValueAt(j,0).toString()+"' GROUP BY item");
                    //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText()+"' and item = '"+jTable1.getValueAt(j,0).toString()+"' GROUP BY item");
                    java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(quantity_instock) FROM st_stock_item WHERE department = '" + issuingStoreCmbx.getSelectedItem().toString() + "' and item_code = '" + issuingItemsTable.getValueAt(j, 0).toString() + "'");

                    while (rsetTable111.next()) {

                        issuingItemsTable.setValueAt(rsetTable111.getObject(1), j, 3);
                        //  jTable1.setValueAt(rsetTable1.getObject(3), i, 1);
                        //  jTable1.setValueAt(rsetTable1.getObject(2), i, 2);
                        //  jTable1.setValueAt(rsetTable1.getObject(4), i, 4);
                        //  jTable1.setValueAt(rsetTable1.getObject(5), i, 5);
                        //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);

                        // i++;
                    }

                    /*
                     * java.sql.Statement stmtTable1111 =
                     * connectDB.createStatement();
                     *
                     * java.sql.ResultSet rsetTable1111 =
                     * stmtTable1111.executeQuery("SELECT
                     * balance,requisation,units FROM st_stock_prices WHERE
                     * product = '"+jTable1.getValueAt(j,0).toString()+"' AND
                     * department =
                     * '"+jComboBox11.getSelectedItem().toString()+"'"); //
                     * java.sql.ResultSet rsetTable111 =
                     * stmtTable111.executeQuery("SELECT sum(receiving-issuing)
                     * FROM st_sub_stores WHERE store_name =
                     * '"+jTextField1.getText().equalsIgnoreCase(jTextField1.getText())+"'
                     * and item = '"+jTable1.getValueAt(k,0).toString()+"'");
                     *
                     * while (rsetTable1111.next()) {
                     *
                     * jTable1.setValueAt(rsetTable1111.getObject(1), j, 4);
                     * jTable1.setValueAt(rsetTable1.getObject(3), i, 1);
                     * jTable1.setValueAt(rsetTable1.getObject(2), i, 2); //
                     * jTable1.setValueAt(rsetTable1.getObject(4), i, 4); //
                     * jTable1.setValueAt(rsetTable1.getObject(5), i, 5); //
                     * jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
                     *
                     * //i++;
                     *
                     * }
                     */
                } catch (java.sql.SQLException sqlExec) {

                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

                }
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_recepientStoreCmbxActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        int rows2Delete = issuingItemsTable.getSelectedRowCount();

        int[] selectedRows = issuingItemsTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) issuingItemsTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) issuingItemsTable.getModel();

                defTableModel.removeRow(issuingItemsTable.getSelectedRow());

            }
        }
        this.tableModelTableChangedx();
        // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < issuingItemsTable.getRowCount(); k++) {
            for (int r = 0; r < issuingItemsTable.getColumnCount(); r++) {
                issuingItemsTable.getModel().setValueAt(null, k, r);
            }
        }
        issuingStoreCmbx.setSelectedItem(null);
        recepientStoreCmbx.setSelectedItem(null); // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void saveTransactionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTransactionBtnActionPerformed
        java.util.Date dateToday = new java.util.Date();
        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        if (totalValueTxt.getText() != "0.00") {
            if (issuingStoreCmbx.getSelectedItem() != null && recepientStoreCmbx.getSelectedItem() != null) {
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } else {
                    if (issuingItemsTable.isEditing()) {
                        issuingItemsTable.getCellEditor().stopCellEditing();
                    }
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);
                    try {
                        String Stock = null;
                        String actCode = null;
                        String Stock1 = null;
                        String actCode1 = null;
//                String transNo = null;
                        String userName = null;
                        String glCode = null;
                        String glType = null;
                        boolean consumable = false;
                        int itemInt = 0;
                        double sPrice = 0.00;
                        double bPrice = 0.00;
                        String code = null;
                        String category = null;
                        String productId = null;
                        java.sql.Savepoint registerSavePoint = null;
                        try {
                            connectDB.setAutoCommit(false);
                            registerSavePoint = connectDB.setSavepoint("registration");
                        } catch (java.sql.SQLException ex) {
                            ex.printStackTrace();
                        }

                        try {

                            //   if (rectifyTransferChkbx.isSelected()) {
                            // java.sql.Statement pst21 = connectDB.createStatement();
                            // java.sql.ResultSet rs1 = pst21.executeQuery("select 'T'||nextval('transfer_seq')");
                            // while (rs1.next()) {
                            //     transNo = rs1.getObject(1).toString();
                            // }
                            transNo = irqnoTxt.getText();

                            java.sql.Statement pst2 = connectDB.createStatement();
                            java.sql.ResultSet rs = pst2.executeQuery("SELECT glstock_code,store_name FROM st_stores WHERE store_name ILIKE '" + issuingStoreCmbx.getSelectedItem() + "%'");
                            while (rs.next()) {
                                actCode = rs.getObject(1).toString();
                                Stock = rs.getObject(2).toString();
                            }

                            java.sql.Statement pst22 = connectDB.createStatement();
                            java.sql.ResultSet rs2 = pst22.executeQuery("SELECT glstock_code,store_name FROM st_stores WHERE store_name ILIKE '" + recepientStoreCmbx.getSelectedItem() + "%'");
                            while (rs2.next()) {
                                actCode1 = rs2.getObject(1).toString();
                                Stock1 = rs2.getObject(2).toString();
                            }
                            java.sql.Statement pst22q = connectDB.createStatement();
                            java.sql.ResultSet rs2q = pst22q.executeQuery("SELECT cs_code,store_name FROM st_stores WHERE store_name ILIKE '" + recepientStoreCmbx.getSelectedItem() + "%'");
                            while (rs2q.next()) {
                                glCode = rs2q.getObject(1).toString();
                                glType = rs2q.getObject(2).toString();
                            }

                            java.sql.Statement pst2q = connectDB.createStatement();
                            java.sql.ResultSet rsq = pst2q.executeQuery("select current_user");
                            while (rsq.next()) {
                                userName = rsq.getObject(1).toString();
                            }

                            for (int i = 0; i < issuingItemsTable.getRowCount(); i++) {
                                if (issuingItemsTable.getValueAt(i, 10) == java.lang.Boolean.TRUE) {
                                    double price = 0;
                                    double pack = 0;
                                    double quantity = Double.parseDouble(issuingItemsTable.getModel().getValueAt(i, 7).toString());

                                    java.sql.PreparedStatement pstmt321 = connectDB.prepareStatement("UPDATE st_receive_requisation SET quantity =  " + new java.lang.Double(quantity) + ", irq_approval=true, irq_approved_by='" + com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase() + "' WHERE requisition_no = '" + irqnoTxt.getText() + "' and item_code = '" + issuingItemsTable.getValueAt(i, 0).toString() + "'");
                                    pstmt321.executeUpdate();
                                }
                            }

                            // } 
                            connectDB.commit();
                            connectDB.setAutoCommit(true);

                            javax.swing.JOptionPane.showMessageDialog(this, "IRQ Approved Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                            com.afrisoftech.hospinventory.mtrhreports.InternalReqMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.InternalReqMtrhPdf();

                            policy.InternalReqMtrhPdf(connectDB, recepientStoreCmbx.getSelectedItem().toString(), irqnoTxt.getText());

                            for (int k = 0; k < issuingItemsTable.getRowCount(); k++) {
                                for (int r = 0; r < issuingItemsTable.getColumnCount(); r++) {
                                    issuingItemsTable.getModel().setValueAt(null, k, r);
                                }
                            }

                            jButton8.doClick();
//                            raisedBytxt.setText("");
//                            this.manualS11NumberTxt.setText("");

                            //            jComboBox11.setSelectedItem(null);
                            // javax.swing.JOptionPane.showMessageDialog(this, "Enter quantity issued","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } catch (java.sql.SQLException sq) {
                            sq.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                            try {
                                connectDB.rollback(registerSavePoint);
                            } catch (java.sql.SQLException sql) {
                                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            }
                            // jLabel12.setForeground(java.awt.Color.red);
                            // jLabel12.setText("Sorry. Another  Code already exists");
                        }

                    } catch (java.lang.Exception ex) {
                        ex.printStackTrace();
                        System.out.println(ex.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Please double check your entries. The issuing and recipient stores must be set.");
            }

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Please double check your entries. There must be something to transfer.");
        }
        // Add your handling code here:
    }//GEN-LAST:event_saveTransactionBtnActionPerformed
    private void refresh() {
        irqsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT DISTINCT requisition_no,date FROM st_receive_requisation WHERE "
                + " upper(cost_center) IN (SELECT distinct upper(stores) from store_allocation WHERE  user_name ilike current_user AND type ilike 'Approve IRQ') and irq_approval=false  and requisition_no ilike 'IRQ%' and date::date>current_date-5 order by 2 desc "));
    }
    private void searchIRQtxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchIRQtxtCaretUpdate
        // TODO add your handling code here:
        if (searchIRQtxt.getCaretPosition() > 4) {
            irqsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT requisition_no,date FROM st_receive_requisation WHERE requisition_no ilike '%" + searchIRQtxt.getText() + "%' AND "
                    + "upper(cost_center) IN (SELECT distinct upper(stores) from store_allocation WHERE  user_name ilike current_user AND type ilike 'Approve IRQ')"
                    + "and requisition_no ilike 'IRQ%' and irq_approval=false  order by 1 desc "));
        }
    }//GEN-LAST:event_searchIRQtxtCaretUpdate

    private void irqsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irqsTblMouseClicked
        // TODO add your handling code here:

        String irq = irqsTbl.getValueAt(irqsTbl.getSelectedRow(), 0).toString();

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        System.out.println("Loading values Please Wait");
        irqnoTxt.setText(irq);

        recepientStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct cost_center from st_receive_requisation where requisition_no = '" + irq + "'"));
        issuingStoreCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct store_name from st_receive_requisation where requisition_no = '" + irq + "'"));

        java.text.DateFormat df = java.text.DateFormat.getDateInstance();

        java.text.SimpleDateFormat sdf = (java.text.SimpleDateFormat) df;

        sdf.applyPattern("yyyy-MM-dd");
//dddddddn
        try {
            datePicker1.setDate(sdf.parse(irqsTbl.getValueAt(irqsTbl.getSelectedRow(), 1).toString()));
        } catch (java.text.ParseException pe) {
            javax.swing.JOptionPane.showMessageDialog(this, pe.getMessage());
        }
        // recepientStoreCmbx.setSelectedItem(searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 1).toString());
        //issuingStoreCmbx.setSelectedItem(searchTransferTable.getValueAt(searchTransferTable.getSelectedRow(), 2).toString());
        this.populateTable22(irqnoTxt.getText());
        try {
            for (int j = 0; j < issuingItemsTable.getRowCount(); j++) {
                //    java.sql.Statement stmtTable111 = connectDB.createStatement();
                if (issuingItemsTable.getModel().getValueAt(j, 0) != null) {

                    java.sql.Statement stmtTable11 = connectDB.createStatement();
                    java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + issuingItemsTable.getValueAt(j, 0).toString() + "' AND department ILIKE '" + issuingStoreCmbx.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");
                    java.sql.Statement stmtTable11x = connectDB.createStatement();
                    java.sql.ResultSet rsetTable11x = stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty WHERE item_code ilike '" + issuingItemsTable.getValueAt(j, 0).toString() + "' AND department ILIKE '" + recepientStoreCmbx.getSelectedItem() + "' AND dates <= '" + datePicker1.getDate() + "'");

                    while (rsetTable11x.next()) {
                        while (rsetTable11.next()) {
                            double storeBal = 0;
                            double depBal = 0;
                            storeBal = rsetTable11.getDouble(1);
                            depBal = rsetTable11x.getDouble(1);
                            issuingItemsTable.setValueAt(storeBal, j, 4);
                            issuingItemsTable.setValueAt(depBal, j, 5);
                        }
                    }
                }
            }
            java.sql.PreparedStatement pstmts = connectDB.prepareStatement("SELECT DISTINCT user_name FROM st_receive_requisation WHERE requisition_no = '" + irqnoTxt.getText() + "'");
            java.sql.ResultSet rsets = pstmts.executeQuery();
            while (rsets.next()) {
                raisedBytxt.setText(rsets.getString(1));

            }
            totalValueTxt.setText(String.valueOf(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(this.issuingItemsTable, 9)));
            approvedBytxt.setText(com.afrisoftech.lib.UserName.getUserName(connectDB).toLowerCase());
        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }
        System.out.println("Finished , Loading details On Form");

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_irqsTblMouseClicked

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshbtnActionPerformed

    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {

        // Add your handling code here:
    }

    class WaitingIRQsThread extends Thread {

        public WaitingIRQsThread() {
        }

        public void run() {
            while (true) {
                refresh();
                try {
                    Thread.sleep(30000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();

                    //Logger.getLogger(VitalSignRecIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField approvedBytxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JTextField irqnoTxt;
    private javax.swing.JDialog irqnosearch;
    private javax.swing.JTable irqsTbl;
    private javax.swing.JTable issuingItemsTable;
    private javax.swing.JComboBox issuingStoreCmbx;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    public static javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton5111;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JCheckBox mainStoreCkbx;
    private javax.swing.JTextField raisedBytxt;
    private javax.swing.JComboBox recepientStoreCmbx;
    private javax.swing.JCheckBox rectifyTransferChkbx;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JTable requisitionNumberSearchTable;
    private javax.swing.JTextField requisitionNumberSearchTxt;
    private javax.swing.JDialog resuisitionNumberSearchDialog;
    private javax.swing.JButton saveTransactionBtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchIRQtxt;
    private javax.swing.JTextField searchTransferNumberTxt;
    private javax.swing.JTable searchTransferTable;
    private javax.swing.JPanel spacerPanel;
    private javax.swing.JCheckBox subStoreChkbx;
    private javax.swing.JTextField totalValueTxt;
    private javax.swing.JScrollPane transferNumberScrollPane;
    // End of variables declaration//GEN-END:variables
}
