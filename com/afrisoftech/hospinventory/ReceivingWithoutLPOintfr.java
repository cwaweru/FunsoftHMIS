/*
 * Requisitions.java
 *
 * Created on April 22, 2003, 5:12 PM
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.setFixedColumns;
import com.afrisoftech.lib.CurrencyFormatter;
import com.afrisoftech.lib.GetItemInfo;
import java.sql.ResultSet;

/**
 *
 * @author root
 */
public class ReceivingWithoutLPOintfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox = null;
    javax.swing.JSpinner dateSpinner = null;
    double resVal1 = 0.00;
    double resVal11 = 0.00;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    javax.swing.table.TableModel tableModel;
    private boolean uprices;
    private boolean updatePriceCheck;

    public ReceivingWithoutLPOintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        String user = null;
        try {
            java.sql.Statement pst2v = connectDB.createStatement();
            java.sql.ResultSet rsv = pst2v.executeQuery("select current_user");
            if (rsv.next()) {
                user = rsv.getObject(1).toString();
                // Stock = rs.getObject(2).toString();
            }
            jTextField9.setText(user);
            System.out.println("the user name is" + user);
        } catch (Exception userex) {
            System.out.println("user error is " + userex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchItemDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        searchSupplierdialog = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton10 = new javax.swing.JButton();
        searchUnits = new javax.swing.JDialog();
        tenderrecordspnl4 = new javax.swing.JPanel();
        tenderrecordstxt2 = new javax.swing.JTextField();
        tenderrecordsspnl4 = new javax.swing.JScrollPane();
        unitsTbl = new com.afrisoftech.dbadmin.JTable();
        closebtn5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deliveredBytxt = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel41 = new javax.swing.JPanel();
        supplierTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        deliveryNoteNumberTxt = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lpoNumberTxt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        viewGrndetails = new javax.swing.JButton();
        bypassinspectionchk = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grnItemsTable = new com.afrisoftech.dbadmin.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        searchItemDialog.setModal(true);
        searchItemDialog.setUndecorated(true);
        searchItemDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchItemDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        searchSupplierdialog.setModal(true);
        searchSupplierdialog.setUndecorated(true);
        searchSupplierdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchSupplierdialog.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField112, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton10.setText("Dispose");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        searchUnits.setModal(true);
        searchUnits.setUndecorated(true);
        searchUnits.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl4.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt2CaretUpdate(evt);
            }
        });
        tenderrecordstxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl4.add(tenderrecordstxt2, gridBagConstraints);

        unitsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        unitsTbl.setToolTipText("Click on the target row to select the patient from the search.");
        unitsTbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        unitsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unitsTblMouseClicked(evt);
            }
        });
        tenderrecordsspnl4.setViewportView(unitsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl4.add(tenderrecordsspnl4, gridBagConstraints);

        closebtn5.setText("Close");
        closebtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl4.add(closebtn5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchUnits.getContentPane().add(tenderrecordspnl4, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Receiving Goods (GRN for goods where LPO was not raised through the system)");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);
        */
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 102));
        jLabel9.setText("Received from");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel12.setText("Received By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel12, gridBagConstraints);

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(jTextField9, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 102));
        jLabel13.setText("Store Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 102));
        jLabel2.setText("Delivered By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        deliveredBytxt.setFont(new java.awt.Font("Ubuntu Medium", 0, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(deliveredBytxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 102));
        jLabel4.setText("Delivery Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jComboBox2, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        supplierTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(supplierTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(jPanel41, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Payable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jRadioButton1, gridBagConstraints);

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("Cash Purchases");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jRadioButton3, gridBagConstraints);

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setText("Donations");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jPanel5, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 102));
        jLabel11.setText("Delivery Note Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(deliveryNoteNumberTxt, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(255, 255, 255));
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField6, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 102));
        jLabel14.setText("LPO Number");
        jLabel14.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel14.setMinimumSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 10);
        jPanel1.add(jLabel14, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 102));
        jLabel10.setText("GL-CODE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel6.add(lpoNumberTxt, gridBagConstraints);

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jPanel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jSeparator1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 4.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        postbtn.setBackground(new java.awt.Color(0, 255, 204));
        postbtn.setMnemonic('s');
        postbtn.setText("Generate GRN");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(postbtn, gridBagConstraints);

        resetbtn.setBackground(new java.awt.Color(0, 255, 204));
        resetbtn.setMnemonic('s');
        resetbtn.setText("Save and print GRN");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(resetbtn, gridBagConstraints);

        cancelbtn.setBackground(new java.awt.Color(0, 255, 204));
        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear entries");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(cancelbtn, gridBagConstraints);

        exitbtn.setBackground(new java.awt.Color(0, 255, 204));
        exitbtn.setMnemonic('c');
        exitbtn.setText("Close form");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel5, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(0, 255, 204));
        jButton1.setMnemonic('r');
        jButton1.setText("Remove row");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(0, 255, 204));
        jButton2.setMnemonic('h');
        jButton2.setText("Help");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton2, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel15, gridBagConstraints);

        viewGrndetails.setBackground(new java.awt.Color(0, 255, 204));
        viewGrndetails.setText("View GRN Details");
        viewGrndetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewGrndetailsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel3.add(viewGrndetails, gridBagConstraints);

        bypassinspectionchk.setText("By-Pass inspection");
        bypassinspectionchk.setEnabled(false);
        bypassinspectionchk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bypassinspectionchkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(bypassinspectionchk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        grnItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Strength", "Units/Pack", "Qty", "Unit Price", "Disc %", "Disc. Total", "Vat %", "Vat Amt.", "Value", "Batch No.", "Expiry Date", "Item Code", "Issuing Units", "Issuing Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, false, true, false, true, true, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grnItemsTable.setGridColor(new java.awt.Color(204, 204, 255));
        cmbox = new javax.swing.JComboBox();
        //try{
            /*      crset2.setConnectionSource(pConnDB);
            crset2.setCommand("select distinct description FROM st_stock_item order by description");

            cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset2, "description", null, null, null));
            javax.swing.table.TableColumn s = this.jTable1.getColumn("Item");
            s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
            cmbox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmboxActionPerformed(evt);
                }
            });
            //      } catch(java.sql.SQLException sqlExec) {

            //        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

            //   }
        */
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 13; i++) {
            column = grnItemsTable.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(500); //sport column is bigger
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(200);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }

        javax.swing.table.TableColumn dateEditor = grnItemsTable.getColumnModel().getColumn(11);
        //com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new org.jdesktop.swingx.JXDatePicker(), grnDetailsTable);
        com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), grnItemsTable);
        dateEditor.setCellEditor(dateCellEditor);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer.TRAILING);
        dateEditor.setCellRenderer(cellRenderer);

        grnItemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grnItemsTableMouseClicked(evt);
            }
        });
        grnItemsTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grnItemsTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(grnItemsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 50.0;
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Total Discount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel6, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField4, gridBagConstraints);

        jLabel7.setText("VAT Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel7, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField1, gridBagConstraints);

        jLabel8.setText("Net Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel8, gridBagConstraints);

        jTextField5.setEditable(false);
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField5, gridBagConstraints);

        jLabel1.setText("Gross Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel1, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(jTextField2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Central Stores");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Sub Store");
        jCheckBox2.setEnabled(false);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jCheckBox2, gridBagConstraints);

        setBounds(0, 0, 1322, 450);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        // jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        supplierTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        searchSupplierdialog.dispose();
        deliveredBytxt.setText(supplierTxt.getText());
        resetbtn.setEnabled(true);
        postbtn.setEnabled(true);
        try {
            java.sql.Statement pstmt = connectDB.createStatement();

            java.sql.ResultSet rs = pstmt.executeQuery("select current_user");
            while (rs.next()) {

                jTextField9.setText(rs.getObject(1).toString());
            }
        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        } // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.searchSupplierdialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (jTextField113.getCaretPosition() < 3) {
            System.out.println("Nothing");
        } else {
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT supplier_name, code as account_no from st_suppliers where supplier_name ILIKE '%" + jTextField113.getText() + "%' order by supplier_name"));

            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);

        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.supplierTxt.getLocationOnScreen();

        searchSupplierdialog.setSize(700, 200);

        searchSupplierdialog.setLocation(point);

        searchSupplierdialog.setVisible(true);

    }
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        for (int k = 0; k < jSearchTable2.getRowCount(); k++) {
            for (int r = 0; r < jSearchTable2.getColumnCount(); r++) {
                jSearchTable2.getModel().setValueAt(null, k, r);
            }
        }
        this.jTextField113.setText("");
        searchButtonClicked();

        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, ""
                + "select '-' UNION select stores from store_allocation where user_name = current_user and type ilike 'direct purch%' ORDER BY 1"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        // Add your handling code here:
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if (this.jCheckBox1.isSelected()) {
            try {
                java.sql.Statement pstmt = connectDB.createStatement();

                java.sql.ResultSet rs = pstmt.executeQuery("select glstock_code from st_stores  where store_name ilike '" + jComboBox2.getSelectedItem().toString() + "%'");
                while (rs.next()) {

                    this.jTextField6.setText(rs.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        } else {
            try {
                java.sql.Statement pstmt = connectDB.createStatement();

                java.sql.ResultSet rs = pstmt.executeQuery("select glstock_code from st_stores  where store_name ilike '" + jComboBox2.getSelectedItem().toString() + "%'");
                while (rs.next()) {

                    this.jTextField6.setText(rs.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqlex) {
                sqlex.printStackTrace();
                System.out.println(sqlex.getMessage());
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, ""
                + "select '-' UNION SELECT DISTINCT stores from store_allocation where user_name = current_user and type ilike 'direct purch%' ORDER BY 1"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void grnItemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnItemsTableMouseClicked
        if (grnItemsTable.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();
        }
//        else if (grnItemsTable.getSelectedColumn() == 2) {
//            
//            java.awt.Point p = jScrollPane2.getLocationOnScreen();
//            searchUnits.setLocation(p);
//            searchUnits.setSize(jScrollPane2.getWidth() * 3 / 4, 200);
//            searchUnits.setVisible(true);
//        }

        // Add your handling code here:
    }//GEN-LAST:event_grnItemsTableMouseClicked
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        searchItemDialog.setSize(700, 200);
        searchItemDialog.setLocation(point);
        searchItemDialog.setVisible(true);
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        searchItemDialog.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        //if(this.jComboBox2.getSelectedItem().equals("GENERAL STORE")){
        if (this.jTextField111.getCaretPosition() < 1) {
            System.out.print("Nothing");
        } else {
            setFixedColumns.DisallowReordering(jSearchTable);
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, ""
                    + "select DISTINCT description,strength,packaging,buying_price,item_code FROM stockitem WHERE description ILIKE '%" + jTextField111.getText() + "%' and department ilike '" + jComboBox2.getSelectedItem() + "' order by description"));
            ///jSearchTable.setAutoResizeMode(AUTO_RESIZE_ALL_COLUMNS);
            jSearchScrollPane.setViewportView(jSearchTable);
            setFixedColumns.DisallowReordering(jSearchTable);

            System.out.println("Cannot sort out");

        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        grnItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), grnItemsTable.getSelectedRow(), 0);
        grnItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), grnItemsTable.getSelectedRow(), 1);
        grnItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), grnItemsTable.getSelectedRow(), 2);
        grnItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 3), grnItemsTable.getSelectedRow(), 4);
        grnItemsTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 4), grnItemsTable.getSelectedRow(), 12);

        grnItemsTable.setValueAt(new java.lang.Double(0), grnItemsTable.getSelectedRow(), 5);
        grnItemsTable.setValueAt(new java.lang.Double(0), grnItemsTable.getSelectedRow(), 7);
        grnItemsTable.setValueAt(new java.lang.Double(0), grnItemsTable.getSelectedRow(), 6);
        grnItemsTable.setValueAt(new java.lang.Double(0), grnItemsTable.getSelectedRow(), 9);
        //  jTable1.setValueAt(new java.lang.Double(1), jTable1.getSelectedRow(), 2);
        int j = 0;

        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.Statement pstmt1 = connectDB.createStatement();

            java.sql.ResultSet rs1 = pstmt1.executeQuery("select count(product) from st_stock_prices sc where product = '" + jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0) + "'");
            while (rs1.next()) {
                j = rs1.getInt(1);
            }

        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        }

        searchItemDialog.dispose();
        jTextField111.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        double quantity = 0.00;
        double price = 0.00;
        double pkge = 0.00;
        double qty = 0.00;
        double uprice = 0.00;
        double rates = 0.00;

        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);

        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String transNo = null;
        String glType = null;
        String VouchNo = null;
        String StocktransNo = null;

        int invoices = 0;
        try {

            postbtn.doClick(); //ActionPerformed(evt);
            //  connectDB.setAutoCommit(false);
            //   if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("main store")){
            java.sql.Statement pst2 = connectDB.createStatement();
            java.sql.ResultSet rs = pst2.executeQuery("select code,activity from pb_activity where code ilike '" + jTextField6.getText() + "%'");
            while (rs.next()) {
                actCode = rs.getObject(1).toString();
                Stock = rs.getObject(2).toString();
            }
            java.sql.Statement pst1 = connectDB.createStatement();
            java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
            while (rs1.next()) {
                accountCode = rs1.getObject(1).toString();
                glType = rs1.getObject(2).toString();

            }
            // com.afrisoftech.reports.DiscCreditorsInvoicesPdf policy = new com.afrisoftech.reports.DiscCreditorsInvoicesPdf();
            // policy.DiscCreditorsInvoicesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker1.getDate().toLocaleString(), jTextField91.getText().toString(), this.jTextField7.getText().toString());
//            com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf policy = new com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf();
//            policy.SthirteenPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker1.getDate().toLocaleString(), jTextField91.getText().toString(), this.deliveryNoteNumberTxt.getText().toString());

            //       jTextField7.setText("");
            deliveredBytxt.setText("");
            jTextField2.setText("00");
            jTextField4.setText("00");
            jTextField1.setText("00");
            jTextField5.setText("00");

            //  javax.swing.JOptionPane.showMessageDialog(this, "Enter quantity received","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sq.getMessage());
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
        //
//        GRNThread grnThread = new GRNThread();
//        
//        grnThread.start();
//        
//        resetbtn.setEnabled(false);
//        
//        postbtn.setEnabled(false);

        // Add your handling code here:
    }//GEN-LAST:event_resetbtnActionPerformed

    private void grnItemsTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grnItemsTableKeyReleased
        double resFloat = 0.00;
        double resVal = 0.00;
        double total = 0.00;
        double total1 = 0.00;
        double discount1 = 0.00;
        double vat = 0.00;
        double VatAmt = 0.00;
        double qty = 0.00;
        double floatCol3 = 0.00;

        if (grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 11) != null) {
            if (!com.afrisoftech.hospinventory.InventoryLevels.getExpiryStatus(grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 11).toString())) {
                javax.swing.JOptionPane.showMessageDialog(this, "This item does not meet the threashold for quality assurance in terms of expiry date.");
                grnItemsTable.setValueAt(null, grnItemsTable.getSelectedRow(), 11);
            }
        }
        //  double totalSum = 0.00;
        if (grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), grnItemsTable.getSelectedColumn()) != null) {

            String issuingUnits = com.afrisoftech.lib.GetItemInfo.getItemUnits(grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 12).toString(), connectDB);

            double conversion = GetItemInfo.getConversion(issuingUnits, grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 2).toString(), connectDB);

            System.out.println("Conversion is " + CurrencyFormatter.getFormattedDouble(conversion));

            qty = java.lang.Double.parseDouble(grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 3).toString()) * conversion;

            floatCol3 = java.lang.Double.parseDouble(grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 4).toString());

            //            if (jTable1.getValueAt(jTable1.getSelectedRow(), 3) != null) {
            total = qty * floatCol3;
            //                jTable1.setValueAt(new java.lang.Float(total), jTable1.getSelectedRow(), 7);

            if (grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 5) != null) {
                discount1 = java.lang.Double.parseDouble(grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 5).toString());

                resVal = total * discount1 / 100;
                // total = ((qty * floatCol3) - ((qty * floatCol3)*discount1/100));
                // resVal = (qty * floatCol3)*discount1/100;
                grnItemsTable.setValueAt(new java.lang.Float(resVal), grnItemsTable.getSelectedRow(), 6);
                grnItemsTable.setValueAt(new java.lang.Float(total - resVal), grnItemsTable.getSelectedRow(), 9);

                this.tableModelTableChanged1();

                if (grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 7) != null) {
                    vat = java.lang.Double.parseDouble(grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 7).toString());
                    // total = (((total) + ((qty * floatCol3)*vat/100)) - ((qty * floatCol3)*discount1/100));

                    VatAmt = (total - resVal) * vat / 100;
                    grnItemsTable.setValueAt(new java.lang.Float(VatAmt), grnItemsTable.getSelectedRow(), 8);
                    grnItemsTable.setValueAt(new java.lang.Float(resVal), grnItemsTable.getSelectedRow(), 6);
                    grnItemsTable.setValueAt(new java.lang.Float((total - resVal) + VatAmt), grnItemsTable.getSelectedRow(), 9);

                    this.tableModelTableChanged2();
                    //jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
                }

            } else if (grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 7) != null) {
                vat = java.lang.Double.parseDouble(grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 7).toString());

                total1 = ((qty * floatCol3));

                total = ((qty * floatCol3) + ((qty * floatCol3) * vat / 100));
                VatAmt = ((qty * floatCol3) * vat / 100);
                grnItemsTable.setValueAt(new java.lang.Float(VatAmt), grnItemsTable.getSelectedRow(), 8);

                //this.jTextField1.setText(java.lang.String.valueOf(VatAmt));
                grnItemsTable.setValueAt(new java.lang.Float(total), grnItemsTable.getSelectedRow(), 9);
                this.tableModelTableChanged2();

            } else //  }else
            if (grnItemsTable.getValueAt(grnItemsTable.getSelectedRow(), 7) != null) {
                grnItemsTable.setValueAt(new java.lang.Float(total), grnItemsTable.getSelectedRow(), 9);
            }
            this.tableModelTableChanged();

            for (int i = 0; i < grnItemsTable.getRowCount(); i++) {

                if (grnItemsTable.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {

                    resFloat = resFloat + Double.parseDouble(grnItemsTable.getValueAt(i, 9).toString());

                }
            }

            grnItemsTable.setValueAt(issuingUnits, grnItemsTable.getSelectedRow(), 13);
            grnItemsTable.setValueAt(new java.lang.Float(qty), grnItemsTable.getSelectedRow(), 14);

            //  this.tableModelTableChanged();
        }
        double net = Double.parseDouble(this.jTextField2.getText());
        double vats = Double.parseDouble(this.jTextField1.getText());
        jTextField5.setText(java.lang.String.valueOf(net - vats));
        //  if (jTable1.getValueAt(jTable1.getSelectedRow(), 4) != null) {
        //      vat = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());

        //       total = (((qty * floatCol3) + ((qty * floatCol3)*vat/100)) - ((qty * floatCol3)*discount1/100));
        // }
        // Add your handling code here:
    }//GEN-LAST:event_grnItemsTableKeyReleased

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        this.setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int rows2Delete = grnItemsTable.getSelectedRowCount();

        int[] selectedRows = grnItemsTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) grnItemsTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) grnItemsTable.getModel();

                defTableModel.removeRow(grnItemsTable.getSelectedRow());
            }
        }
        tableModelTableChanged();
        tableModelTableChanged1();
        tableModelTableChanged2();

        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        jTextField6.setText("");
        jComboBox2.setSelectedIndex(0);
        deliveryNoteNumberTxt.setText("");
        supplierTxt.setText("");
        deliveredBytxt.setText("");
        jTextField2.setText("00");
        jTextField4.setText("00");
        jTextField1.setText("00");
        jTextField5.setText("00");
        lpoNumberTxt.setText("");
        for (int k = 0; k < grnItemsTable.getRowCount(); k++) {
            for (int r = 0; r < grnItemsTable.getColumnCount(); r++) {
                grnItemsTable.getModel().setValueAt(null, k, r);
            }
        }

        jTextField2.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = grnItemsTable.getSelectedRow();

        if (selectedGuaran != null) {

            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                // java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"'");

                java.sql.ResultSet rs = pstmt.executeQuery("select units from stockitem where description = '" + selectedGuaran + "'");
                while (rs.next()) {

                    grnItemsTable.setValueAt(rs.getObject(1), i, 1);

                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }

        }

    }

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed

        if ((supplierTxt.getText().toString().isEmpty()
                || jTextField6.getText().toString().isEmpty()
                || deliveredBytxt.getText().toString().isEmpty()
                || lpoNumberTxt.getText().toString().isEmpty()
                || deliveryNoteNumberTxt.getText().toString().isEmpty())) {
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR :\n"
                    + "Please Ensure you have entered all fields in red ", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        } else {
            java.util.Date periodFrom = null;
            java.util.Date periodTo = null;

            try {

                java.sql.Statement stmtf = connectDB.createStatement();
                java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
                while (rsetf.next()) {
                    periodFrom = rsetf.getDate(1);
                    periodTo = rsetf.getDate(2);
                }

            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());

            }

            if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } else {
                if (grnItemsTable.isEditing()) {
                    grnItemsTable.getCellEditor().stopCellEditing();
                }
                grnItemsTable.setEditingRow(-1);

                tableModelTableChanged();
                tableModelTableChanged1();
                tableModelTableChanged2();
                double quantity = 0.00;
                double price = 0.00;
                double pkge = 1.00;
                double qty = 0.00;
                double uprice = 0.00;
                double rates = 0.00;

                java.util.Calendar calendar = java.util.Calendar.getInstance();

                long dateNow = calendar.getTimeInMillis();

                java.sql.Date datenowSql = new java.sql.Date(dateNow);
                try {
                    java.sql.PreparedStatement pstmtCheck = connectDB.prepareStatement("SELECT update_prices FROM st_stock_control");
                    java.sql.ResultSet rsetCheck = pstmtCheck.executeQuery();
                    while (rsetCheck.next()) {
                        updatePriceCheck = rsetCheck.getBoolean(1);
                    }
                    String Stock = null;
                    String actCode = null;
                    String accountCode = null;
                    String glType = null;
                    String transNo = null;
                    String accountCoded = null;
                    String glTyped = null;
                    String units = null;
                    String StocktransNo = null;
                    int invoices = 0;
                    String supCode = null;
                    String Purchases = null;
                    String cosCode = null;
                    String CostofSale = null;

                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    try {

                        //   if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("main store")){
                        java.sql.Statement pst2 = connectDB.createStatement();
                        java.sql.ResultSet rs = pst2.executeQuery("select code,activity from pb_activity where code ilike '" + this.jTextField6.getText() + "%'");
                        while (rs.next()) {
                            actCode = rs.getObject(1).toString();
                            Stock = rs.getObject(2).toString();
                        }
                        java.sql.Statement pst1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category ILIKE 'CP'");
                        while (rs1.next()) {
                            accountCode = rs1.getObject(1).toString();
                            glType = rs1.getObject(2).toString();
                        }

                        java.sql.Statement pst1i = connectDB.createStatement();
                        java.sql.ResultSet rs1i = pst1i.executeQuery("select code,activity from pb_activity where activity_category ILIKE 'GRN'");
                        while (rs1i.next()) {
                            accountCoded = rs1i.getObject(1).toString();
                            glTyped = rs1i.getObject(2).toString();
                        }
                        java.sql.Statement ps = connectDB.createStatement();
                        java.sql.Statement ps22 = connectDB.createStatement();
                        java.sql.Statement ps11 = connectDB.createStatement();
                        java.sql.Statement ps11r = connectDB.createStatement();

                        java.sql.ResultSet rst = ps11.executeQuery("select nextval('transaction_no_seq')");
                        while (rst.next()) {
                            rst.getObject(1).toString();

                            transNo = rst.getObject(1).toString();
                        }

                        java.sql.Statement pst21 = connectDB.createStatement();
                        java.sql.ResultSet rs111 = pst21.executeQuery("select nextval('stock_delivery_seq')");
                        while (rs111.next()) {
                            StocktransNo = rs111.getObject(1).toString();
                        }

                        String GRNtransNo = null;
                        java.sql.Statement pstgrno = connectDB.createStatement();
                        java.sql.ResultSet rsgrno = pstgrno.executeQuery("select  nextval('grn_generator_seq')");
                        if (rsgrno.next()) {
                            GRNtransNo = "KNH/GRN/00" + rsgrno.getObject(1).toString();
                            System.out.println("THE DRN TRANSACTION NO IS " + GRNtransNo);
                        }

                        java.sql.Statement pstmt1t = connectDB.createStatement();
                        java.sql.ResultSet rs1t = pstmt1t.executeQuery("select update_prices from st_stock_control"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1t.next()) {

                            uprices = rs1t.getBoolean(1);
                        }
                        for (int i = 0; i < grnItemsTable.getRowCount(); i++) {
                            if (grnItemsTable.getValueAt(i, 9) != null) {
                                java.sql.Statement pst21r = connectDB.createStatement();
                                //         java.sql.ResultSet rstr = ps11r.executeQuery("SELECT mark_up FROM st_stores WHERE store_name ILIKE '"+jComboBox2.getSelectedItem().toString()+"'");
                                java.sql.ResultSet rstrs = pst21r.executeQuery("SELECT units FROM stockitem st WHERE st.item_code = '" + grnItemsTable.getValueAt(i, 12).toString() + "'");
                                while (rstrs.next()) {
                                    units = rstrs.getString(1);
                                }

                                java.sql.ResultSet rstr = ps11r.executeQuery("SELECT mc.markups FROM  st_main_category mc,stockitem st WHERE st.department ILIKE '" + jComboBox2.getSelectedItem().toString() + "' AND mc.description = st.sub_cat_code AND st.item_code = '" + grnItemsTable.getValueAt(i, 12).toString() + "'");
                                while (rstr.next()) {
                                    if (rstr.getDouble(1) > 0) {
                                        rates = rstr.getDouble(1);
                                    } else {
                                        rates = 1;
                                    }
                                }

                                pkge = Double.parseDouble(grnItemsTable.getValueAt(i, 2).toString());

                                qty = Double.parseDouble(grnItemsTable.getValueAt(i, 3).toString());

                                uprice = Double.parseDouble(grnItemsTable.getValueAt(i, 4).toString());

                                quantity = qty * pkge;

                                price = uprice / pkge;

                                // price = uprice ;
                                java.sql.Date expiryDate = null;
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement(""
                                        + "insert into st_stock_cardex "
                                        + "values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");

                                pstmt.setString(1, lpoNumberTxt.getText());
                                pstmt.setString(2, jComboBox2.getSelectedItem().toString());
                                pstmt.setObject(3, grnItemsTable.getValueAt(i, 0) + " " + grnItemsTable.getValueAt(i, 1));
                                if (grnItemsTable.getValueAt(i, 11) != null) {
                                    java.sql.Statement pst22 = connectDB.createStatement();
                                    java.sql.ResultSet rs22 = pst22.executeQuery("select '" + grnItemsTable.getValueAt(i, 11).toString() + "'::date");
                                    while (rs22.next()) {
                                        expiryDate = rs22.getDate(1);

                                    }
                                    pstmt.setDate(4, expiryDate);
                                } else {
                                    pstmt.setDate(4, null);
                                }
                                pstmt.setDouble(5, 0.00);
                                pstmt.setDouble(6, price);
                                pstmt.setObject(7, units);
                                pstmt.setString(8, jTextField9.getText());
                                pstmt.setString(9, deliveredBytxt.getText());
                                pstmt.setString(10, StocktransNo);
                                pstmt.setDouble(11, quantity);
                                pstmt.setDouble(12, 0.00);
                                pstmt.setDouble(13, java.lang.Double.valueOf(grnItemsTable.getValueAt(i, 6).toString()));
                                pstmt.setString(14, "");
                                pstmt.setString(15, "");
                                pstmt.setObject(16, supplierTxt.getText());
                                pstmt.setString(17, deliveryNoteNumberTxt.getText());//StocktransNo);
                                pstmt.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt.setString(19, "");
                                pstmt.setString(20, "Receiving");
                                pstmt.setDouble(21, java.lang.Double.valueOf(grnItemsTable.getValueAt(i, 9).toString()));
                                pstmt.setDouble(22, java.lang.Double.valueOf(grnItemsTable.getValueAt(i, 6).toString()));
                                pstmt.setString(23, jTextField6.getText());
                                if (deliveryNoteNumberTxt.getText().equals("")) {
                                    javax.swing.JOptionPane.showMessageDialog(this, "delivery Note NumberTxt Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                                } else {

                                    pstmt.setString(24, deliveryNoteNumberTxt.getText());
                                }
                                pstmt.setString(25, jComboBox2.getSelectedItem().toString());
                                pstmt.setString(26, transNo);
                                pstmt.setDouble(27, 0.00);
                                pstmt.setString(28, jTextField9.getText());
                                pstmt.setBoolean(29, false);
                                pstmt.setDouble(30, java.lang.Double.valueOf(grnItemsTable.getValueAt(i, 7).toString()));
                                pstmt.setObject(31, null);
                                pstmt.setObject(32, grnItemsTable.getValueAt(i, 12));
                                pstmt.setObject(33, grnItemsTable.getValueAt(i, 1));
                                pstmt.setObject(34, StocktransNo);
                                pstmt.executeUpdate();

                                java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into st_sub_stores"
                                        + " values(? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                pstmt11.setString(1, jComboBox2.getSelectedItem().toString());
                                pstmt11.setObject(2, grnItemsTable.getValueAt(i, 0).toString());
                                pstmt11.setDouble(3, quantity);
                                pstmt11.setDouble(4, 0.00);
                                pstmt11.setDouble(5, 0.00);
                                pstmt11.setDouble(6, java.lang.Double.valueOf(grnItemsTable.getValueAt(i, 9).toString()));
                                pstmt11.setDouble(7, 0.00);
                                pstmt11.setObject(8, StocktransNo);
                                pstmt11.setString(9, "-");
                                pstmt11.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                                pstmt11.setString(11, jTextField9.getText());
                                pstmt11.setObject(12, units);
                                pstmt11.setObject(13, supplierTxt.getText());
                                pstmt11.setObject(14, supplierTxt.getText());
                                pstmt11.setDouble(15, price);
                                pstmt11.setObject(16, grnItemsTable.getValueAt(i, 12));
                                pstmt11.setObject(17, grnItemsTable.getValueAt(i, 1));
                                pstmt11.setObject(18, deliveryNoteNumberTxt.getText());

                                pstmt11.executeUpdate();

                                if (jRadioButton3.isSelected() || jRadioButton1.isSelected()) {
                                    if (updatePriceCheck) {
                                        java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_stock_item SET buying_price = '" + grnItemsTable.getValueAt(i, 4).toString() + "',units = '" + grnItemsTable.getValueAt(i, 2).toString() + "'  WHERE item_code ILIKE '" + grnItemsTable.getValueAt(i, 12).toString() + "' AND department ILIKE '" + jComboBox2.getSelectedItem().toString() + "%'");
                                        pstmt31.executeUpdate();
                                        java.sql.PreparedStatement pstmt32c = connectDB.prepareStatement("UPDATE st_stock_prices SET transfer_price = round(" + new java.lang.Double(price * rates) + "), selling_price = round('" + (price * rates) + "')  WHERE product_id ILIKE '" + grnItemsTable.getValueAt(i, 12).toString() + "'");//  AND department ILIKE '" + jComboBox2.getSelectedItem().toString() + "%'");
                                        pstmt32c.executeUpdate();
                                        if (uprices) {
                                            if (rates > 1) {
                                                java.sql.PreparedStatement pstmt32 = connectDB.prepareStatement("UPDATE st_stock_prices SET transfer_price = round(" + new java.lang.Double(price * rates) + "),selling_price = round('" + (price * rates) + "')  WHERE product_id ILIKE '" + grnItemsTable.getValueAt(i, 12).toString() + "'");//  AND department ILIKE '" + jComboBox2.getSelectedItem().toString() + "%'");
                                                pstmt32.executeUpdate();
                                            } else {
                                                java.sql.PreparedStatement pstmt32 = connectDB.prepareStatement("UPDATE st_stock_prices SET transfer_price = round(" + new java.lang.Double(price * rates) + ")  WHERE product_id ILIKE '" + grnItemsTable.getValueAt(i, 12).toString() + "'");//  AND department ILIKE '" + jComboBox2.getSelectedItem().toString() + "%'");
                                                pstmt32.executeUpdate();
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("insert into ac_ledger "
                                + "values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                        pstmt1q1.setObject(1, accountCoded);
                        pstmt1q1.setString(2, glTyped);
                        pstmt1q1.setString(3, "");
                        pstmt1q1.setString(4, supplierTxt.getText());
                        if (deliveryNoteNumberTxt.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this, "delivery Note NumberTxt Missing", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else {

                            pstmt1q1.setString(6, deliveryNoteNumberTxt.getText());
                        }
                        pstmt1q1.setString(5, glTyped);
                        pstmt1q1.setString(7, "");
                        pstmt1q1.setString(8, "");
                        pstmt1q1.setString(9, "");
                        pstmt1q1.setString(10, "");
                        pstmt1q1.setString(11, "");
                        pstmt1q1.setString(12, StocktransNo);
                        pstmt1q1.setString(13, deliveredBytxt.getText());
                        pstmt1q1.setString(14, glTyped);
                        pstmt1q1.setString(15, "Stock Delivery");
                        pstmt1q1.setDouble(16, 0.00);
                        pstmt1q1.setDouble(17, java.lang.Double.valueOf(jTextField2.getText()));
                        pstmt1q1.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                        pstmt1q1.setString(19, transNo);
                        pstmt1q1.setBoolean(20, false);
                        pstmt1q1.setBoolean(21, false);
                        pstmt1q1.setBoolean(22, false);
                        pstmt1q1.setString(23, jTextField9.getText());

                        pstmt1q1.setString(24, "");
                        pstmt1q1.setString(25, "");
                        pstmt1q1.setTimestamp(26, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmt1q1.executeUpdate();

                        ///tracepoint for receiving lpo
                        java.sql.PreparedStatement loc = connectDB.prepareStatement("select location_id, document_location from document_locations where location_id =1");
                        ResultSet rset1 = loc.executeQuery();
                        java.lang.String current_location = null;
                        java.lang.String next_location = null;
                        Integer next_id = 0;
                        while (rset1.next()) {
                            Integer a = Integer.valueOf(rset1.getObject(1).toString());
                            next_id = a + 1;
                            current_location = rset1.getObject(2).toString();

                            java.sql.PreparedStatement next_loc = connectDB.prepareStatement("Select document_location from document_locations where location_id='" + next_id + "'");
                            ResultSet rset2 = next_loc.executeQuery();

                            while (rset2.next()) {
                                next_location = rset2.getObject(1).toString();
                            }

                        }

                        //insert
                        java.sql.PreparedStatement trc = connectDB.prepareStatement("INSERT INTO ac_trace_document (document_no, doc_comment, current_location, next_location) "
                                + "VALUES (?,?,?,?);");
                        trc.setObject(1, lpoNumberTxt.getText().toString());
                        trc.setObject(2, "Ok");
                        trc.setObject(3, current_location);
                        trc.setObject(4, next_location);

                        trc.executeUpdate();

                        GetItemInfo.autoUpdateInspection(lpoNumberTxt.getText(), connectDB);

                        connectDB.commit();
                        connectDB.setAutoCommit(true);

                        javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                        //bypassinspectionchk.doClick();
                        for (int k = 0; k < grnItemsTable.getRowCount(); k++) {
                            for (int r = 0; r < grnItemsTable.getColumnCount(); r++) {
                                grnItemsTable.getModel().setValueAt(null, k, r);
                            }
                        }
                        com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf policy = new com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf();
                        policy.SthirteenPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker1.getDate().toLocaleString(), supplierTxt.getText().toString(), this.deliveryNoteNumberTxt.getText().toString(), StocktransNo);
                        jTextField6.setText("");
                        cancelbtn.doClick();
                        deliveredBytxt.setText("");
                        jTextField2.setText("00");
                        jTextField4.setText("00");
                        jTextField1.setText("00");
                        jTextField5.setText("00");

                        //  javax.swing.JOptionPane.showMessageDialog(this, "Enter quantity received","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        System.out.println(sq.getMessage());
                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                    }

                } catch (java.lang.Exception ex) {
                    ex.printStackTrace();
                    System.out.println(ex.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_postbtnActionPerformed

    private void viewGrndetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewGrndetailsActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.hospinventory.StockMain.checkGRNDetails.doClick();
    }//GEN-LAST:event_viewGrndetailsActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if (this.jCheckBox1.isSelected()) {
            try {
                //gl_stock_code  FROM st_main_stores
                java.sql.Statement pstmt = connectDB.createStatement();
                System.out.println("select gl_stock_code  FROM st_main_stores  where store_name='" + jComboBox2.getSelectedItem().toString() + "'");

                //   java.sql.ResultSet rs = pstmt.executeQuery("select glstock_code from st_stores  where store_name ilike '" + jComboBox2.getSelectedItem().toString() + "%'");
                java.sql.ResultSet rs = pstmt.executeQuery("select gl_stock_code  FROM st_main_stores "
                        + " where store_name ilike '%" + jComboBox2.getSelectedItem().toString() + "%'");

                while (rs.next()) {

                    this.jTextField6.setText(rs.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        } else {
            try {
                java.sql.Statement pstmt = connectDB.createStatement();

                java.sql.ResultSet rs = pstmt.executeQuery("select glstock_code from st_stores  where "
                        + "store_name ilike '" + jComboBox2.getSelectedItem().toString() + "%'");
                while (rs.next()) {

                    this.jTextField6.setText(rs.getObject(1).toString());
                }
            } catch (java.sql.SQLException sqlex) {
                System.out.println(sqlex.getMessage());
            }
        }

    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.lpoNumberTxt.getLocationOnScreen();

        jSearchDialog1.setSize(700, 200);

        jSearchDialog1.setLocation(point);

        jSearchDialog1.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        // TODO add your handling code here:ext
        if (jTextField112.getCaretPosition() < 3) {

            System.out.println("Nothing");

        } else {

            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct order_no from st_orders where ordered=true and received= false and order_no ilike  '%" + jTextField112.getText() + "%'"));

        }

    }//GEN-LAST:event_jTextField112CaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        // TODO add your handling code here:
        lpoNumberTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jButton10.doClick();
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        this.jSearchDialog1.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // File file = new File("a.mp3")
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bypassinspectionchkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bypassinspectionchkActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_bypassinspectionchkActionPerformed

    private void tenderrecordstxt2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt2CaretUpdate
        // TODO add your handling code here:
        unitsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT '-' UNION SELECT DISTINCT bulk_supply_unit FROM st_packing "));
    }//GEN-LAST:event_tenderrecordstxt2CaretUpdate

    private void tenderrecordstxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt2ActionPerformed

    private void unitsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unitsTblMouseClicked
        // TODO add your handling code here:
        grnItemsTable.setValueAt(unitsTbl.getValueAt(unitsTbl.getSelectedRow(), 0), grnItemsTable.getSelectedRow(), 2);
        closebtn5.doClick();
    }//GEN-LAST:event_unitsTblMouseClicked

    private void closebtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn5ActionPerformed
        // TODO add your handling code here:
        searchUnits.dispose();
    }//GEN-LAST:event_closebtn5ActionPerformed

    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        for (int i = 0; i < grnItemsTable.getRowCount(); i++) {

            if (grnItemsTable.getValueAt(i, 0) != null) {

                //                if (jTable1.getSelectedColumn() == 2) {
                resFloat = resFloat + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 9).toString());
                jTextField2.setText(java.lang.String.valueOf(resFloat));
                jTextField5.setText(java.lang.String.valueOf(resFloat - Disc - Vat));
                //                }else{

                //  resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 7).toString());
                //   jTextField2.setText(java.lang.String.valueOf(resFloat));
                //  }
            }

            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }

    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        //        double resFloat = 0.00;
        double resFloat = 0.00;

        for (int i = 0; i < grnItemsTable.getRowCount(); i++) {

            if (grnItemsTable.getValueAt(i, 0) != null) {

                //   if (jTable1.getSelectedColumn() == 3) {
                resFloat = resFloat + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 9).toString());

                jTextField2.setText(java.lang.String.valueOf(resFloat));
                jTextField5.setText(java.lang.String.valueOf(resFloat - Disc - Vat));

                //  }else{
                //      resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 7).toString());
                //      jTextField2.setText(java.lang.String.valueOf(resFloat));
                //}
            }
        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 12 and 21.");
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;

        for (int i = 0; i < grnItemsTable.getRowCount(); i++) {

            if (grnItemsTable.getValueAt(i, 5) != null) {

                if (grnItemsTable.getSelectedColumn() == 5) {

                    resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 6).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                }

                resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 6).toString());
                jTextField4.setText(java.lang.String.valueOf(resFloat1));
                jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));
                //   else{
                //       javax.swing.JOptionPane.showMessageDialog(this,"Disc. % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                //   }

            }
        }
    }

    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {

        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;

        for (int i = 0; i < grnItemsTable.getRowCount(); i++) {

            if (grnItemsTable.getValueAt(i, 5) != null) {

                if (grnItemsTable.getSelectedColumn() == 5) {

                    resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 6).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                } else {

                    resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 6).toString());
                    jTextField4.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                    // else{
                    // javax.swing.JOptionPane.showMessageDialog(this,"Disc. % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged2() {
        System.out.println("Calculating totals for table 12 and 21.");
        //        double resFloat = 0.00;
        double resFloat1 = 0.00;
        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        for (int i = 0; i < grnItemsTable.getRowCount(); i++) {

            if (grnItemsTable.getValueAt(i, 0) != null) {

                if (grnItemsTable.getSelectedColumn() == 7) {

                    resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 8).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                } else {

                    resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 8).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                    //   javax.swing.JOptionPane.showMessageDialog(this,"Vat % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }

            //               jTextField31.setText(java.lang.String.valueOf(resFloat));
        }
    }

    public void tableModelTableChanged2(javax.swing.event.TableModelEvent evt) {

        double Gross = Double.parseDouble(this.jTextField2.getText());
        double Disc = Double.parseDouble(this.jTextField1.getText());
        double Vat = Double.parseDouble(this.jTextField4.getText());
        double resFloat1 = 0.00;

        for (int i = 0; i < grnItemsTable.getRowCount(); i++) {

            if (grnItemsTable.getValueAt(i, 7) != null) {

                if (grnItemsTable.getSelectedColumn() == 7) {

                    resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 7).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));

                } else {

                    resFloat1 = resFloat1 + Double.parseDouble(grnItemsTable.getModel().getValueAt(i, 7).toString());
                    jTextField1.setText(java.lang.String.valueOf(resFloat1));
                    jTextField5.setText(java.lang.String.valueOf(Gross - Disc - Vat));
                    //    javax.swing.JOptionPane.showMessageDialog(this,"Vat % cannot be null","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    class GRNThread extends java.lang.Thread {

        public void run() {
            double quantity = 0.00;
            double price = 0.00;
            double pkge = 0.00;
            double qty = 0.00;
            double uprice = 0.00;
            double rates = 0.00;

            java.util.Calendar calendar = java.util.Calendar.getInstance();

            long dateNow = calendar.getTimeInMillis();

            java.sql.Date datenowSql = new java.sql.Date(dateNow);

            String Stock = null;
            String actCode = null;
            String accountCode = null;
            String transNo = null;
            String glType = null;
            String VouchNo = null;
            String StocktransNo = null;

            int invoices = 0;
            try {

                postbtn.doClick(); //ActionPerformed(evt);
                //  connectDB.setAutoCommit(false);
                //   if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("main store")){
                java.sql.Statement pst2 = connectDB.createStatement();
                java.sql.ResultSet rs = pst2.executeQuery("select code,activity from pb_activity where code ilike '" + jTextField6.getText() + "%'");
                while (rs.next()) {
                    actCode = rs.getObject(1).toString();
                    Stock = rs.getObject(2).toString();
                }
                java.sql.Statement pst1 = connectDB.createStatement();
                java.sql.ResultSet rs1 = pst1.executeQuery("select code,activity from pb_activity where activity_category = 'CP'");
                while (rs1.next()) {
                    accountCode = rs1.getObject(1).toString();
                    glType = rs1.getObject(2).toString();

                }
            // com.afrisoftech.reports.DiscCreditorsInvoicesPdf policy = new com.afrisoftech.reports.DiscCreditorsInvoicesPdf();
                // policy.DiscCreditorsInvoicesPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker1.getDate().toLocaleString(), jTextField91.getText().toString(), this.jTextField7.getText().toString());
//            com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf policy = new com.afrisoftech.hospinventory.mtrhreports.SthirteenPdf();
//            policy.SthirteenPdf(connectDB, this.datePicker1.getDate().toLocaleString(), this.datePicker1.getDate().toLocaleString(), jTextField91.getText().toString(), this.deliveryNoteNumberTxt.getText().toString());

                //       jTextField7.setText("");
                deliveredBytxt.setText("");
                jTextField2.setText("00");
                jTextField4.setText("00");
                jTextField1.setText("00");
                jTextField5.setText("00");

                //  javax.swing.JOptionPane.showMessageDialog(this, "Enter quantity received","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sq.getMessage());
                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox bypassinspectionchk;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton closebtn5;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JTextField deliveredBytxt;
    private javax.swing.JTextField deliveryNoteNumberTxt;
    public javax.swing.JButton exitbtn;
    private javax.swing.JTable grnItemsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField lpoNumberTxt;
    private javax.swing.JButton postbtn;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JDialog searchItemDialog;
    private javax.swing.JDialog searchSupplierdialog;
    private javax.swing.JDialog searchUnits;
    private javax.swing.JTextField supplierTxt;
    private javax.swing.JPanel tenderrecordspnl4;
    private javax.swing.JScrollPane tenderrecordsspnl4;
    private javax.swing.JTextField tenderrecordstxt2;
    private javax.swing.JTable unitsTbl;
    private javax.swing.JButton viewGrndetails;
    // End of variables declaration//GEN-END:variables
}
