/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import static com.afrisoftech.hospinventory.StockMain.connectDB;
import static com.afrisoftech.hospinventory.StockMain.medicdspane;
import com.afrisoftech.lib.GetItemInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
//

/**
 *
 * @author saleem
 */
public class Merging_SuppliersNewIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;

    /**
     * Creates new form Merging_SuppliersNewIntfr
     */
    JComboBox cmbox51 = new JComboBox();

    int jt = 0;
    private int val;
    private int count1;
    private int nextVal;

    public Merging_SuppliersNewIntfr(java.sql.Connection connDB) {

        connectDB = connDB;

        initComponents();

        cmbox51.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct supplier_name from st_suppliers order by 1"));
        cmbox51.setVisible(true);
        refresh();
        calculator();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchitem1dlg = new javax.swing.JDialog();
        tenderrecordspnl1 = new javax.swing.JPanel();
        castxt = new javax.swing.JTextField();
        tenderrecordsspnl1 = new javax.swing.JScrollPane();
        castbl = new com.afrisoftech.dbadmin.JTable();
        closebtn2 = new javax.swing.JButton();
        searchitem1dlg1 = new javax.swing.JDialog();
        tenderrecordspnl2 = new javax.swing.JPanel();
        trontxt = new javax.swing.JTextField();
        tenderrecordsspnl2 = new javax.swing.JScrollPane();
        trontbl = new com.afrisoftech.dbadmin.JTable();
        closebtn3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        spacerLabel = new javax.swing.JLabel();
        mergeItemsBtn = new javax.swing.JButton();
        clearFormBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        originalNameLabel = new javax.swing.JLabel();
        originalCodeLable = new javax.swing.JLabel();
        targetItemCodeLbel = new javax.swing.JLabel();
        targetItemNameLabel = new javax.swing.JLabel();
        originalsupCodeTxt = new javax.swing.JTextField();
        targetItemCodeTxt = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        supplierNametxt = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        originalSupNametxt = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierTbl = new com.afrisoftech.dbadmin.JTable();
        jButton1 = new javax.swing.JButton();
        refreshbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pendTxt = new javax.swing.JTextField();
        seltxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        searchitem1dlg.setModal(true);
        searchitem1dlg.setUndecorated(true);
        searchitem1dlg.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl1.setLayout(new java.awt.GridBagLayout());

        castxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                castxtCaretUpdate(evt);
            }
        });
        castxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                castxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl1.add(castxt, gridBagConstraints);

        castbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        castbl.setToolTipText("Click on the target row to select the patient from the search.");
        castbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        castbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                castblMouseClicked(evt);
            }
        });
        tenderrecordsspnl1.setViewportView(castbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl1.add(tenderrecordsspnl1, gridBagConstraints);

        closebtn2.setText("Close");
        closebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl1.add(closebtn2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchitem1dlg.getContentPane().add(tenderrecordspnl1, gridBagConstraints);

        searchitem1dlg1.setModal(true);
        searchitem1dlg1.setUndecorated(true);
        searchitem1dlg1.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl2.setLayout(new java.awt.GridBagLayout());

        trontxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                trontxtCaretUpdate(evt);
            }
        });
        trontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trontxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl2.add(trontxt, gridBagConstraints);

        trontbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        trontbl.setToolTipText("Click on the target row to select the patient from the search.");
        trontbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        trontbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trontblMouseClicked(evt);
            }
        });
        tenderrecordsspnl2.setViewportView(trontbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl2.add(tenderrecordsspnl2, gridBagConstraints);

        closebtn3.setText("Close");
        closebtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl2.add(closebtn3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchitem1dlg1.getContentPane().add(tenderrecordspnl2, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Merge Inventory Items - (Merges transactions of 2 similar items into *Target Name and Code) ");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        buttonPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerLabel, gridBagConstraints);

        mergeItemsBtn.setText("Merge Records");
        mergeItemsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeItemsBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(mergeItemsBtn, new java.awt.GridBagConstraints());

        clearFormBtn.setText("Clear Form");
        clearFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(clearFormBtn, new java.awt.GridBagConstraints());

        closeFormBtn.setText("Close Form");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(closeFormBtn, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(buttonPanel, gridBagConstraints);

        mainPanel.setLayout(new java.awt.GridBagLayout());

        originalNameLabel.setText("Original Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(originalNameLabel, gridBagConstraints);

        originalCodeLable.setText("Original Supplier Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(originalCodeLable, gridBagConstraints);

        targetItemCodeLbel.setText("Correct Supplier Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(targetItemCodeLbel, gridBagConstraints);

        targetItemNameLabel.setText("Correct Supplier Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        mainPanel.add(targetItemNameLabel, gridBagConstraints);

        originalsupCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        mainPanel.add(originalsupCodeTxt, gridBagConstraints);

        targetItemCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        mainPanel.add(targetItemCodeTxt, gridBagConstraints);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        supplierNametxt.setEditable(false);
        supplierNametxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        supplierNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierNametxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(supplierNametxt, gridBagConstraints);

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel16.add(jButton7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(jPanel16, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        originalSupNametxt.setEditable(false);
        originalSupNametxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        originalSupNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                originalSupNametxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(originalSupNametxt, gridBagConstraints);

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel17.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(jPanel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        jPanel1.add(mainPanel, gridBagConstraints);

        jTabbedPane1.addTab("Merging Supplier Records", jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        supplierTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct trim(supplier) as supp_name,'' as CORRECT_NAME, false as confirm,false as new_supplier  from st_orders where upper(supplier) not in (select distinct upper(supplier_name) from st_suppliers)"));
        //cmbox51.addActionListener(new java.awt.event.ActionListener() {

            //         public void actionPerformed(java.awt.event.ActionEvent evt) {

                //            cmbox51ActionPerformed(evt);
                //      }
            // });

    javax.swing.table.TableColumn teditor2 = this.supplierTbl.getColumn("CORRECT_NAME");
    teditor2.setCellEditor(new javax.swing.DefaultCellEditor(cmbox51));
    supplierTbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            supplierTblMouseClicked(evt);
        }
        public void mousePressed(java.awt.event.MouseEvent evt) {
            supplierTblMousePressed(evt);
        }
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            supplierTblMouseReleased(evt);
        }
    });
    jScrollPane1.setViewportView(supplierTbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jScrollPane1, gridBagConstraints);

    jButton1.setText("Match Selected Records");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jButton1, gridBagConstraints);

    refreshbtn.setText("Refresh");
    refreshbtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            refreshbtnActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(refreshbtn, gridBagConstraints);

    jLabel1.setText("Pending entries");
    jPanel2.add(jLabel1, new java.awt.GridBagConstraints());

    jLabel2.setText("Selected Entries");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jLabel2, gridBagConstraints);

    pendTxt.setEditable(false);
    pendTxt.setText("0");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(pendTxt, gridBagConstraints);

    seltxt.setEditable(false);
    seltxt.setText("0");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(seltxt, gridBagConstraints);

    jButton2.setText("New Suppliers");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    jPanel2.add(jButton2, gridBagConstraints);

    jTabbedPane1.addTab("Match Tender Awards supplier names with existing ones", jPanel2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jTabbedPane1, gridBagConstraints);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed

        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed
    private void cmbox51ActionPerformed(java.awt.event.ActionEvent evt) {
        System.err.println("This is a success");
    }

    private void mergeItemsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeItemsBtnActionPerformed
        // TODO add your handling code here:
        if (supplierNametxt.getText().length() > 1) {
            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Are you Sure To Change [" + originalSupNametxt.getText() + "] To\n [" + supplierNametxt.getText() + "] ? This update is irreversible", "CONFIRMATION", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
                try {
                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

                    //
                    connectDB.setAutoCommit(false);

                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_sub_stores SET sub_store = '" + supplierNametxt.getText() + "' WHERE sub_store ilike '" + originalSupNametxt.getText() + "'  ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("DELETE FROM st_suppliers  WHERE supplier_name ilike '" + originalSupNametxt.getText() + "' and code= '" + originalsupCodeTxt.getText() + "'");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_suppliers SET supplier_name = '" + supplierNametxt.getText() + "', code='" + targetItemCodeTxt.getText() + "' WHERE supplier_name ilike '" + originalSupNametxt.getText() + "' and code= '" + originalsupCodeTxt.getText() + "'");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_stock_cardex SET delivered_by = '" + supplierNametxt.getText() + "', supplier = '" + supplierNametxt.getText() + "' WHERE supplier ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_orders SET supplier = '" + supplierNametxt.getText() + "' WHERE supplier ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_recommendation SET supplier = '" + supplierNametxt.getText() + "' WHERE supplier ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_floated_quotations SET supplier = '" + supplierNametxt.getText() + "' WHERE supplier ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE ac_accounts_payable SET dealer = '" + supplierNametxt.getText() + "' WHERE dealer ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE ac_accounts_payable SET payee = '" + supplierNametxt.getText() + "' WHERE payee ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE ac_dashboard SET supplier = '" + supplierNametxt.getText() + "' WHERE supplier ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE ac_reprinting_vouchers SET payee= '" + supplierNametxt.getText() + "' WHERE payee ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    System.err.println("Done==Last small Tables,Starting ac_ledger");

                    pstmt = connectDB.prepareStatement("UPDATE ac_ledger SET dealer = '" + supplierNametxt.getText() + "' WHERE dealer ilike '" + originalSupNametxt.getText() + "' ");
                    pstmt.executeUpdate();

                    System.err.println("Funsoft supplier update -Cascaded- version 3.2");

                    System.err.println("This is of import");

                    PreparedStatement pst = connectDB.prepareStatement("SELECT DISTINCT code,oid from st_suppliers where code in (select code from st_suppliers group by 1 having count(code) > 1) and supplier_name in (select supplier_name from st_suppliers group by 1 having count(supplier_name) > 1) and code='" + targetItemCodeTxt.getText() + "' order by 2 limit 1");
                    ResultSet rset = pst.executeQuery();
                    String oid = "-";
                    while (rset.next()) {

                        oid = rset.getString(2);

                    }

                    //java.sql.PreparedStatement pstmduplicate = connectDB.prepareStatement("DELETE FROM st_suppliers WHERE code = '" + targetItemCodeTxt.getText() + "' AND supplier_name = '" + supplierNametxt.getText() + "' AND oid !='" + oid + "'");
                    //pstmduplicate.executeUpdate();
                    GetItemInfo.updateTrail("Merge of supplier_name [" + originalSupNametxt.getText() + "] and [" + supplierNametxt.getText() + "] into " + supplierNametxt.getText(), connectDB);

                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

                    JOptionPane.showMessageDialog(this, "Supplier records merged succesfully");

                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    clearFormBtn.doClick();

                } catch (SQLException ex) {
                    Logger.getLogger(Merging_SuppliersNewIntfr.class.getName()).log(Level.SEVERE, null, ex);
                    ex.printStackTrace();
                    System.err.println("Hello, boys!");
                    try {
                        connectDB.rollback();
                    } catch (SQLException ex1) {
                        Logger.getLogger(Merging_SuppliersNewIntfr.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                }
            }
        }
    }//GEN-LAST:event_mergeItemsBtnActionPerformed

    private void supplierNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierNametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierNametxtActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        java.awt.Point p = supplierNametxt.getLocationOnScreen();
        searchitem1dlg1.setLocation(p);
        searchitem1dlg1.setSize(supplierNametxt.getWidth(), 200);
        searchitem1dlg1.setVisible(true);
        castxt.setText(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void originalSupNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_originalSupNametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_originalSupNametxtActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = originalSupNametxt.getLocationOnScreen();
        searchitem1dlg.setLocation(p);
        searchitem1dlg.setSize(supplierNametxt.getWidth(), 200);
        searchitem1dlg.setVisible(true);
        castxt.setText(null);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void castxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_castxtCaretUpdate
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (this.castxt.getCaretPosition() > 2) {
            System.out.print("Got Results");

            castbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select  code, supplier_name FROM st_suppliers WHERE supplier_name ILIKE '%" + castxt.getText() + "%'  order by 2"));
            castbl.setShowHorizontalLines(false);
            tenderrecordsspnl1.setViewportView(castbl);

        }
    }//GEN-LAST:event_castxtCaretUpdate

    private void castxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_castxtActionPerformed
        // TODO add your handling code here:
        //0240940
    }//GEN-LAST:event_castxtActionPerformed

    private void castblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_castblMouseClicked

        // TODO add your handling code here:
        if (jt == 0) {
            originalsupCodeTxt.setText(castbl.getValueAt(castbl.getSelectedRow(), 0).toString());

            originalSupNametxt.setText(castbl.getValueAt(castbl.getSelectedRow(), 1).toString());
        } else if (jt == 1) {

            supplierTbl.setValueAt(castbl.getValueAt(castbl.getSelectedRow(), 1).toString(), supplierTbl.getSelectedRow(), 1);
            supplierTbl.setValueAt(true, supplierTbl.getSelectedRow(), 2);
            calculator();
        }

        searchitem1dlg.dispose();
    }//GEN-LAST:event_castblMouseClicked

    private void closebtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn2ActionPerformed
        // TODO add your handling code here:
        searchitem1dlg.dispose();
    }//GEN-LAST:event_closebtn2ActionPerformed

    private void trontxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_trontxtCaretUpdate
        // TODO add your handling code here:
        if (this.trontxt.getCaretPosition() > 2) {
            System.out.print("Do you wanna know a story");

            trontbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select  code, supplier_name FROM st_suppliers WHERE supplier_name ILIKE  '%" + trontxt.getText() + "%'  order by 2"));
            trontbl.setShowHorizontalLines(false);

            tenderrecordsspnl2.setViewportView(trontbl);

        }
    }//GEN-LAST:event_trontxtCaretUpdate

    private void trontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trontxtActionPerformed

    private void trontblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trontblMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            targetItemCodeTxt.setText(trontbl.getValueAt(trontbl.getSelectedRow(), 0).toString());

            supplierNametxt.setText(trontbl.getValueAt(trontbl.getSelectedRow(), 1).toString());

            // ClearTable.clearthisTable(biderCodetbl);
//            tendeDescTxt.setText(com.afrisoftech.lib.GetItemInfo.getITenderDesc(tenderTxt.getText(), connectDB));
        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(SSOTenderEvaluationIntfr.class.getName()).log(Level.ALL.SEVERE, null, ex);
        }
        searchitem1dlg1.dispose();
    }//GEN-LAST:event_trontblMouseClicked
    private void calculator() {
        int count = 0;
        pendTxt.setText(String.valueOf(supplierTbl.getRowCount()));

        for (int i = 0; i < supplierTbl.getRowCount(); i++) {
            if (supplierTbl.getValueAt(i, 2) == Boolean.TRUE) {
                count++;
            }
        }
        val = count;

        seltxt.setText(String.valueOf(val));
    }

    private void refresh() {

        // jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct st.requisition_no FROM st_assign_buyers bs,st_receive_requisation st where bs.requisition_no=st.requisition_no and  bs.assigned_by is not null and st.monthly_usage='Quotation' and st.mode_of_purchase_approved=true and bs.buyer=current_user and st.requisition_no not IN (select  DISTINCT substring (IRQ_NO ,1 ,9) from st_item_to_quote )  order by 1"));
        supplierTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct trim(supplier) as supp_name,'' as correct_name, false as confirm,false as new_supplier  from st_orders where upper(supplier) not in (select distinct upper(supplier_name) from st_suppliers)"));

        for (int i = 0; i < supplierTbl.getRowCount(); i++) {
            supplierTbl.setValueAt(false, i, 2);
            supplierTbl.setValueAt(false, i, 3);
        }
    }

    private void closebtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn3ActionPerformed
        // TODO add your handling code here:
        searchitem1dlg1.dispose();
    }//GEN-LAST:event_closebtn3ActionPerformed

    private void clearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBtnActionPerformed
        // TODO add your handling code here:
        originalSupNametxt.setText(null);
        originalsupCodeTxt.setText(null);
        supplierNametxt.setText(null);
        targetItemCodeTxt.setText(null);
    }//GEN-LAST:event_clearFormBtnActionPerformed

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed
        // TODO add your handling code here:
        refresh();
        calculator();
    }//GEN-LAST:event_refreshbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        count1 = 0;
        nextVal = 0;
        try {

            for (int i = 0; i < supplierTbl.getRowCount(); i++) {
                connectDB.setAutoCommit(false);

                if (supplierTbl.getValueAt(i, 2) == Boolean.TRUE) {

                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_orders SET supplier =?  WHERE trim(supplier) ilike ?  ");
                    pstmt.setObject(1, supplierTbl.getValueAt(i, 1));
                    pstmt.setObject(2, supplierTbl.getValueAt(i, 0));
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_recommendation SET supplier = ? WHERE trim(supplier) ilike ? ");
                    pstmt.setObject(1, supplierTbl.getValueAt(i, 1));
                    pstmt.setObject(2, supplierTbl.getValueAt(i, 0));
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_floated_quotations SET supplier = ? WHERE trim(supplier) ilike ? ");
                    pstmt.setObject(1, supplierTbl.getValueAt(i, 1));
                    pstmt.setObject(2, supplierTbl.getValueAt(i, 0));
                    pstmt.executeUpdate();

                    connectDB.setAutoCommit(true);
                    connectDB.commit();

                }

                count1++;

            }
        } catch (SQLException ex) {
                        ex.printStackTrace();             //ex.printStackTrace();
        }

        refreshbtn.doClick();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void supplierTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierTblMouseClicked
        // TODO add your handling code here:
        if (supplierTbl.getSelectedColumn() == 1) {
            java.awt.Point p = jScrollPane1.getLocationOnScreen();
            searchitem1dlg.setLocation(p);
            searchitem1dlg.setSize(jScrollPane1.getWidth() * 1 / 2, 200);
            searchitem1dlg.setVisible(true);
            castxt.setText(null);
        }

    }//GEN-LAST:event_supplierTblMouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        jt = jTabbedPane1.getSelectedIndex();
        System.err.println("Selected index " + jt);
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void supplierTblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierTblMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_supplierTblMouseReleased

    private void supplierTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierTblMousePressed
        // TODO add your handling code here:
        if (supplierTbl.getSelectedColumn() == 3) {
            if (supplierTbl.getModel().getValueAt(supplierTbl.getSelectedRow(), 3) == Boolean.FALSE) {
                System.out.println("true so execute");
                supplierTbl.setValueAt(supplierTbl.getModel().getValueAt(supplierTbl.getSelectedRow(), 0).toString().replace("M/S", "").trim(), supplierTbl.getSelectedRow(), 1);

                supplierTbl.setValueAt(false, supplierTbl.getSelectedRow(), 2);

            } else {

                System.out.println("false so no execute");
                supplierTbl.setValueAt(null, supplierTbl.getSelectedRow(), 1);
                supplierTbl.setValueAt(false, supplierTbl.getSelectedRow(), 2);

            }
        } else if (supplierTbl.getSelectedColumn() == 2) {

            supplierTbl.setValueAt(false, supplierTbl.getSelectedRow(), 3);
            supplierTbl.setValueAt(null, supplierTbl.getSelectedRow(), 1);

        }
    }//GEN-LAST:event_supplierTblMousePressed
    private java.lang.Boolean RecordExists(String supplier) {
        Boolean status = false;
        try {

            java.sql.Statement pss = connectDB.createStatement();
            java.sql.ResultSet rsts = pss.executeQuery("SELECT  DISTINCT CASE WHEN '" + supplier.trim().toUpperCase() + "' "
                    + "IN (SELECT distinct trim(UPPER(supplier_name)) from st_suppliers) "
                    + "THEN TRUE ELSE FALSE "
                    + "END AS status from st_suppliers order by 1 limit  1 ");
            while (rsts.next()) {
                // rsts.getObject(1).toString();

                status = rsts.getBoolean(1);
            }

        } catch (SQLException ex) {
                        ex.printStackTrace();             //ex.printStackTrace();
        }
        return status;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        count1 = 0;
        nextVal = 0;

        try {
            for (int i = 0; i < supplierTbl.getRowCount(); i++) {
                nextVal = 0;
                if (supplierTbl.getValueAt(i, 3) == Boolean.TRUE && RecordExists(supplierTbl.getValueAt(i, 1).toString()) == false) {

                    java.sql.Statement pss = connectDB.createStatement();
                    java.sql.ResultSet rsts = pss.executeQuery("select nextval('creditors_seq')");
                    while (rsts.next()) {
                        // rsts.getObject(1).toString();

                        val = rsts.getInt(1);
                    }
                    nextVal = val;
                    java.sql.PreparedStatement pst = connectDB.prepareStatement("INSERT INTO "
                            + "st_suppliers(code,supplier_name,short_name,date,gl_code)\n"
                            + "VALUES(?,?,?,?,?)");
                    pst.setObject(1, "CR" + nextVal);
                    pst.setObject(2, supplierTbl.getValueAt(i, 1));
                    pst.setObject(3, supplierTbl.getValueAt(i, 1));
                    pst.setObject(4, com.afrisoftech.lib.UserName.getServerDate(connectDB));
                    pst.setObject(5, "300-70700-30001");
                    pst.executeUpdate();

                    System.err.println("Done, details below:\n"
                            + "currval was [" + (val - 1) + "] \n nextval used[" + nextVal + "]\n For supplier " + supplierTbl.getValueAt(i, 1));

                    ///updating existing
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_orders SET supplier = ?  WHERE trim(supplier) ilike ?  ");
                    pstmt.setObject(1, supplierTbl.getValueAt(i, 1));
                    pstmt.setObject(2, supplierTbl.getValueAt(i, 0));
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_recommendation SET supplier = ? WHERE trim(supplier) ilike ? ");
                    pstmt.setObject(1, supplierTbl.getValueAt(i, 1));
                    pstmt.setObject(2, supplierTbl.getValueAt(i, 0));
                    pstmt.executeUpdate();

                    pstmt = connectDB.prepareStatement("UPDATE st_floated_quotations SET supplier = ? WHERE trim(supplier) ilike ? ");
                    pstmt.setObject(1, supplierTbl.getValueAt(i, 1));
                    pstmt.setObject(2, supplierTbl.getValueAt(i, 0));
                    pstmt.executeUpdate();

                }

                connectDB.setAutoCommit(true);
                connectDB.commit();
                count1++;
            }
            refresh();
            calculator();
        } catch (SQLException ex) {
                        ex.printStackTrace();             //ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    class WaitingSuppliers extends Thread {

        public WaitingSuppliers() {
        }

        public void run() {
            while (true) {
                refresh();
                try {
                    Thread.sleep(30000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();

                    //Logger.getLogger(VitalSignRecIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTable castbl;
    private javax.swing.JTextField castxt;
    private javax.swing.JButton clearFormBtn;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JButton closebtn2;
    private javax.swing.JButton closebtn3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton mergeItemsBtn;
    private javax.swing.JLabel originalCodeLable;
    private javax.swing.JLabel originalNameLabel;
    private javax.swing.JTextField originalSupNametxt;
    private javax.swing.JTextField originalsupCodeTxt;
    private javax.swing.JTextField pendTxt;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JDialog searchitem1dlg;
    private javax.swing.JDialog searchitem1dlg1;
    private javax.swing.JTextField seltxt;
    private javax.swing.JLabel spacerLabel;
    private javax.swing.JTextField supplierNametxt;
    private javax.swing.JTable supplierTbl;
    private javax.swing.JLabel targetItemCodeLbel;
    private javax.swing.JTextField targetItemCodeTxt;
    private javax.swing.JLabel targetItemNameLabel;
    private javax.swing.JPanel tenderrecordspnl1;
    private javax.swing.JPanel tenderrecordspnl2;
    private javax.swing.JScrollPane tenderrecordsspnl1;
    private javax.swing.JScrollPane tenderrecordsspnl2;
    private javax.swing.JTable trontbl;
    private javax.swing.JTextField trontxt;
    // End of variables declaration//GEN-END:variables
}
