/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.TableModel;
//import static com.afrisoftech.hospinventory.SSOTendering.TechnicalEvalutionMainPane;
import com.afrisoftech.lib.ClearTable;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
//import org.openide.util.Exceptions;

/**
 *
 * @author saleem
 */
public class AwardApprovalsIntfr extends javax.swing.JPanel {

    /**
     * Creates new form AwardApprovalsIntfr
     */
    public java.lang.String dbUserName = null;
    public static java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    public String selectedAgenda = null;
    private Object SelectedPR;
    private Object agendaNo;

    public AwardApprovalsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        refreshTable();
        refreshTable2();

        WaitingPRsThread wprs = new WaitingPRsThread();
        wprs.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchAgenda = new javax.swing.JDialog();
        tenderrecordspnlt = new javax.swing.JPanel();
        tenderrecordstxtt = new javax.swing.JTextField();
        tenderrecordsspnlt = new javax.swing.JScrollPane();
        tenderrecordstblt = new com.afrisoftech.dbadmin.JTable();
        closebtnt = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        tenderTxt = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        bidderTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel12 = new javax.swing.JPanel();
        Save = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        postbtn1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        PurchaseItemsTbl1 = new com.afrisoftech.dbadmin.JTable();
        jPanel19 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        userPostedtxt = new javax.swing.JTextField();
        datepostedtxt = new javax.swing.JTextField();
        agNotxt1txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        prqNotxt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        userTxt1txt = new javax.swing.JTextField();
        jLabel113 = new javax.swing.JLabel();
        agDatetxt2 = new javax.swing.JTextField();
        jPanel42 = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        agendaTxtarea1 = new javax.swing.JTextPane();
        NoreqPane1 = new javax.swing.JPanel();
        approvalLbl1 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        agendaTbl1 = new com.afrisoftech.dbadmin.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PurchaseItemsTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        agDatetxt = new javax.swing.JTextField();
        DueDateTxt = new javax.swing.JTextField();
        agNotxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tenderNotxt = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        userTxt = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        agendaTxtarea = new javax.swing.JTextPane();
        NoreqPane = new javax.swing.JPanel();
        approvalLbl = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        agendaTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        agendaTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TenderNoTxt = new javax.swing.JTextField();
        techReportbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTbl = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        approveBtn = new javax.swing.JButton();
        rejectionBtn = new javax.swing.JButton();
        reprintBtn = new javax.swing.JButton();
        preRptbtn = new javax.swing.JButton();
        finevalbtn = new javax.swing.JButton();
        reversalPanel = new javax.swing.JPanel();

        searchAgenda.setModal(true);
        searchAgenda.setUndecorated(true);
        searchAgenda.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnlt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnlt.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxtt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxttCaretUpdate(evt);
            }
        });
        tenderrecordstxtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnlt.add(tenderrecordstxtt, gridBagConstraints);

        tenderrecordstblt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstblt.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstblt.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstblt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbltMouseClicked(evt);
            }
        });
        tenderrecordsspnlt.setViewportView(tenderrecordstblt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnlt.add(tenderrecordsspnlt, gridBagConstraints);

        closebtnt.setText("Close");
        closebtnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtntActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnlt.add(closebtnt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchAgenda.getContentPane().add(tenderrecordspnlt, gridBagConstraints);

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setBounds(new java.awt.Rectangle(550, 200, 1200, 350));
        jDialog1.setUndecorated(true);
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel10.setBackground(new java.awt.Color(51, 51, 51));

        tenderTxt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tenderTxt.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.add(tenderTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jDialog1.getContentPane().add(jPanel10, gridBagConstraints);

        bidderTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_orders WHERE quotation_no='"+TenderNoTxt.getText()+"'"));
        jScrollPane4.setViewportView(bidderTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 6.0;
        jDialog1.getContentPane().add(jScrollPane4, gridBagConstraints);

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel12.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel12.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        Save.setBackground(new java.awt.Color(0, 204, 204));
        Save.setMnemonic('s');
        Save.setText("Print Notifications");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel12.add(Save, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(0, 204, 204));
        jButton2.setText("Close Dialog");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel12.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jDialog1.getContentPane().add(jPanel12, gridBagConstraints);

        setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jPanel14.setLayout(new java.awt.GridBagLayout());

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jPanel16.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel16.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel16.setRequestFocusEnabled(false);
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel17.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel17.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        postbtn1.setBackground(new java.awt.Color(51, 255, 204));
        postbtn1.setMnemonic('s');
        postbtn1.setText("Approve Agenda For Mode of Purchase");
        postbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(postbtn1, gridBagConstraints);

        cancelbtn1.setBackground(new java.awt.Color(51, 255, 204));
        cancelbtn1.setMnemonic('l');
        cancelbtn1.setText("           Clear              ");
        cancelbtn1.setPreferredSize(new java.awt.Dimension(206, 25));
        cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(cancelbtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel16.add(jPanel17, gridBagConstraints);

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel18.setLayout(new java.awt.GridBagLayout());

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        PurchaseItemsTbl1.setForeground(new java.awt.Color(0, 0, 0));
        PurchaseItemsTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Bidder", "Item Desc", "Unit", "Quantity", "Unit Price", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column1 = null;
        for (int i = 0; i < 4; i++) {
            column1 = PurchaseItemsTbl1.getColumnModel().getColumn(i);
            if (i == 0) {

                column1.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column1.setPreferredWidth(200);
                } else {
                    //if (i == 2) {
                        column1.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }
        PurchaseItemsTbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PurchaseItemsTbl1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(PurchaseItemsTbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel18.add(jScrollPane5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel16.add(jPanel18, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel19.setBackground(new java.awt.Color(204, 255, 204));
        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel6.setForeground(new java.awt.Color(0, 51, 204));
        jLabel6.setText("Agenda Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel6, gridBagConstraints);

        jLabel112.setForeground(new java.awt.Color(0, 51, 204));
        jLabel112.setText("Posted By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel112, gridBagConstraints);

        userPostedtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(userPostedtxt, gridBagConstraints);

        datepostedtxt.setEditable(false);
        datepostedtxt.setBackground(new java.awt.Color(204, 255, 204));
        datepostedtxt.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(datepostedtxt, gridBagConstraints);

        agNotxt1txt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(agNotxt1txt, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("PRQ Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel7, gridBagConstraints);

        prqNotxt.setEditable(false);
        prqNotxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        prqNotxt.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(prqNotxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jSeparator2, gridBagConstraints);

        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Entered By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel8, gridBagConstraints);

        userTxt1txt.setEditable(false);
        userTxt1txt.setText(com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(userTxt1txt, gridBagConstraints);

        jLabel113.setForeground(new java.awt.Color(0, 51, 204));
        jLabel113.setText("Date Posted");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel19.add(jLabel113, gridBagConstraints);

        agDatetxt2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(agDatetxt2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel16.add(jPanel19, gridBagConstraints);

        jPanel42.setBackground(new java.awt.Color(204, 204, 255));
        jPanel42.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel42.setLayout(new java.awt.GridBagLayout());

        jScrollPane22.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        agendaTxtarea1.setEditable(false);
        agendaTxtarea1.setBackground(new java.awt.Color(204, 204, 255));
        agendaTxtarea1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jScrollPane22.setViewportView(agendaTxtarea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jScrollPane22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel16.add(jPanel42, gridBagConstraints);

        NoreqPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 0, 51), null, null));
        NoreqPane1.setLayout(new java.awt.GridBagLayout());

        approvalLbl1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        approvalLbl1.setForeground(new java.awt.Color(255, 0, 51));
        approvalLbl1.setText("No: Of Agendas Awaiting Approval");
        NoreqPane1.add(approvalLbl1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(NoreqPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel16, gridBagConstraints);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agendas Awaiting Approval", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel20.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel20.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        jScrollPane6.setMinimumSize(new java.awt.Dimension(250, 100));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(250, 100));

        agendaTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "AGENDA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        agendaTbl1.setMinimumSize(new java.awt.Dimension(90, 34));
        agendaTbl1.setPreferredSize(new java.awt.Dimension(90, 750));
        agendaTbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agendaTbl1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agendaTbl1MouseEntered(evt);
            }
        });
        jScrollPane6.setViewportView(agendaTbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel20.add(jScrollPane6, gridBagConstraints);

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel20.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jPanel14, gridBagConstraints);

        jTabbedPane1.addTab("Approval of Mode of Purchase", jPanel13);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel6.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel6.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel6.setRequestFocusEnabled(false);
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel7.setMinimumSize(new java.awt.Dimension(250, 27));
        jPanel7.setPreferredSize(new java.awt.Dimension(250, 27));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        postbtn.setBackground(new java.awt.Color(51, 255, 204));
        postbtn.setMnemonic('s');
        postbtn.setText("    Save & Print Agenda   ");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(postbtn, gridBagConstraints);

        cancelbtn.setBackground(new java.awt.Color(51, 255, 204));
        cancelbtn.setMnemonic('l');
        cancelbtn.setText("           Clear              ");
        cancelbtn.setPreferredSize(new java.awt.Dimension(206, 25));
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(cancelbtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jPanel7, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        PurchaseItemsTbl.setForeground(new java.awt.Color(0, 0, 0));
        PurchaseItemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Bidder", "Item Desc", "Unit", "Quantity", "Unit Price", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = PurchaseItemsTbl.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }

        PurchaseItemsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PurchaseItemsTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(PurchaseItemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel8.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel6.add(jPanel8, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel9.setBackground(new java.awt.Color(204, 255, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setText("Agenda Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel9.add(jLabel3, gridBagConstraints);

        jLabel111.setForeground(new java.awt.Color(0, 51, 204));
        jLabel111.setText("Date Agenda Raised");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel9.add(jLabel111, gridBagConstraints);

        agDatetxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(agDatetxt, gridBagConstraints);

        DueDateTxt.setEditable(false);
        DueDateTxt.setBackground(new java.awt.Color(204, 255, 204));
        DueDateTxt.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(DueDateTxt, gridBagConstraints);

        agNotxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(agNotxt, gridBagConstraints);

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel9.add(jLabel4, gridBagConstraints);

        tenderNotxt.setEditable(false);
        tenderNotxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tenderNotxt.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(tenderNotxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jSeparator1, gridBagConstraints);

        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Entered By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel9.add(jLabel5, gridBagConstraints);

        userTxt.setEditable(false);
        userTxt.setText(com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(userTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel6.add(jPanel9, gridBagConstraints);

        jPanel41.setBackground(new java.awt.Color(204, 204, 255));
        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jScrollPane21.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        agendaTxtarea.setEditable(false);
        agendaTxtarea.setBackground(new java.awt.Color(204, 204, 255));
        agendaTxtarea.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jScrollPane21.setViewportView(agendaTxtarea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jScrollPane21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel6.add(jPanel41, gridBagConstraints);

        NoreqPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 0, 51), null, null));
        NoreqPane.setLayout(new java.awt.GridBagLayout());

        approvalLbl.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        approvalLbl.setForeground(new java.awt.Color(255, 0, 51));
        approvalLbl.setText("No: Of Agendas Awaiting Approval");
        NoreqPane.add(approvalLbl, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(NoreqPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel6, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agendas Awaiting Approval", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel11.setMinimumSize(new java.awt.Dimension(100, 250));
        jPanel11.setPreferredSize(new java.awt.Dimension(100, 250));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setMinimumSize(new java.awt.Dimension(250, 100));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(250, 100));

        agendaTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "AGENDA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        agendaTbl.setMinimumSize(new java.awt.Dimension(90, 34));
        agendaTbl.setPreferredSize(new java.awt.Dimension(90, 750));
        agendaTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agendaTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(agendaTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel5, gridBagConstraints);

        jTabbedPane1.addTab("Agenda Approvals", jPanel4);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Agenda No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel1.add(jLabel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        agendaTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(agendaTxt, gridBagConstraints);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel1.add(jPanel2, gridBagConstraints);

        jLabel2.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel1.add(jLabel2, gridBagConstraints);

        TenderNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel1.add(TenderNoTxt, gridBagConstraints);

        techReportbtn.setBackground(new java.awt.Color(204, 255, 255));
        techReportbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CNT0.GIF"))); // NOI18N
        techReportbtn.setText("Technical Evaluation Report");
        techReportbtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        techReportbtn.setBorderPainted(false);
        techReportbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        techReportbtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        techReportbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        techReportbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techReportbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 0.5;
        jPanel1.add(techReportbtn, gridBagConstraints);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("List of Bidders Approved For Award"));

        itemsTbl.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        itemsTbl.setForeground(new java.awt.Color(102, 102, 102));
        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Bidder", "Item Awarded", "Units", "Quantity Awarded", "Quantity Required", "Unit Price", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTbl.setGridColor(new java.awt.Color(0, 51, 204));
        itemsTbl.setSelectionBackground(new java.awt.Color(204, 255, 255));
        jScrollPane1.setViewportView(itemsTbl);
        if (itemsTbl.getColumnModel().getColumnCount() > 0) {
            itemsTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        approveBtn.setBackground(new java.awt.Color(204, 204, 255));
        approveBtn.setMnemonic('a');
        approveBtn.setText("Save & Print Notification of Award");
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(approveBtn, gridBagConstraints);

        rejectionBtn.setBackground(new java.awt.Color(204, 204, 255));
        rejectionBtn.setMnemonic('e');
        rejectionBtn.setText("Reject To Financial Evaluation");
        rejectionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectionBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(rejectionBtn, gridBagConstraints);

        reprintBtn.setBackground(new java.awt.Color(204, 204, 255));
        reprintBtn.setMnemonic('l');
        reprintBtn.setText("Reprint Notifications");
        reprintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reprintBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(reprintBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel3, gridBagConstraints);

        preRptbtn.setBackground(new java.awt.Color(204, 255, 255));
        preRptbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/WayUpArrow.gif"))); // NOI18N
        preRptbtn.setText("Peliminary Evaluation Report");
        preRptbtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        preRptbtn.setBorderPainted(false);
        preRptbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        preRptbtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        preRptbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        preRptbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preRptbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(preRptbtn, gridBagConstraints);

        finevalbtn.setBackground(new java.awt.Color(204, 255, 255));
        finevalbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/anthony-c.gif"))); // NOI18N
        finevalbtn.setText("Financial Evaluation Report");
        finevalbtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        finevalbtn.setBorderPainted(false);
        finevalbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        finevalbtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        finevalbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        finevalbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finevalbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(finevalbtn, gridBagConstraints);

        jTabbedPane1.addTab("Approval for Awarding", jPanel1);
        jTabbedPane1.addTab("Reversal of Awards", reversalPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jTabbedPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void techReportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techReportbtnActionPerformed
        // TODO add your handling code here:
        if (agendaTxt.getText().length() < 1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Select Agenda Number First");
        } else {
            //javax.swing.JOptionPane.showMessageDialog(this, "Work In Progress...");

            TenderTechnicalReportPDF policy = new TenderTechnicalReportPDF();
            policy.TenderTechnicalReportPDF(connectDB, TenderNoTxt.getText());

        }
    }//GEN-LAST:event_techReportbtnActionPerformed

    private void tenderrecordstxttCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxttCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxtt.getCaretPosition() > 4) {
            System.out.print("Nothing");

            tenderrecordstblt.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT  agenda_no AGENDA_NO, quotation_no TENDER_NO FROM st_recommendation  WHERE agenda_no ILIKE '%" + tenderrecordstxtt.getText() + "%' OR quotation_no ILIKE '%" + tenderrecordstxtt.getText() + "%' "));
            //nb: cert_of_incorp is not null
            tenderrecordstblt.setShowHorizontalLines(false);

            tenderrecordsspnlt.setViewportView(tenderrecordstblt);

            //            int n=0, m=0;
            //            if(tenderrecordstbl3.getValueAt(n, m)==null){
            //            java.awt.Point p = tenderrecordsspnl3.getLocationOnScreen();
            //            jLabel9.setVisible(true);
            //            jLabel9.setLocation(p);
            //            }
        }
    }//GEN-LAST:event_tenderrecordstxttCaretUpdate

    private void tenderrecordstxttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxttActionPerformed

    private void tenderrecordstbltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbltMouseClicked
        // TODO add your handling code here:
        agendaTxt.setText(tenderrecordstblt.getValueAt(tenderrecordstblt.getSelectedRow(), 0).toString());
        TenderNoTxt.setText(tenderrecordstblt.getValueAt(tenderrecordstblt.getSelectedRow(), 1).toString());

        int checker = 0;

//        for (int k = 0; k < itemsTbl.getModel().getRowCount(); k++) {
//            for (int r = 0; r < itemsTbl.getModel().getColumnCount(); r++) {
//                itemsTbl.getModel().setValueAt(null, k, r);
//            }
//        }
        ClearTable.clearthisTable(itemsTbl);
        try {

            java.sql.PreparedStatement cde = connectDB.prepareStatement("select  supplier, description,unit,quantity,price,remarks from st_recommendation  where quotation_no = '" + TenderNoTxt.getText() + "' AND financial_approved=true AND supplier NOT IN (SELECT DISTINCT supplier FROM  st_orders where quotation_no = '" + TenderNoTxt.getText() + "' )");
            ResultSet a = cde.executeQuery();
            int i = 0;
            while (a.next()) {
                itemsTbl.setValueAt(a.getObject(1).toString(), i, 0);
                itemsTbl.setValueAt(a.getObject(2).toString(), i, 1);
                itemsTbl.setValueAt(a.getObject(3).toString(), i, 2);
                itemsTbl.setValueAt(a.getDouble(4), i, 3);

                itemsTbl.setValueAt(a.getDouble(5), i, 5);
                itemsTbl.setValueAt(a.getObject(6).toString(), i, 6);

                // itemsTbl.setValueAt(a.getObject(1).toString(), i, 0);
                PreparedStatement pst = connectDB.prepareStatement("select distinct quantity  from st_floated_quotations where quotation_no ='" + TenderNoTxt.getText() + "' and supplier ILIKE '" + itemsTbl.getValueAt(i, 0) + "' and  item_description ilike '" + itemsTbl.getValueAt(i, 1) + "'");
                ResultSet pst1 = pst.executeQuery();
                while (pst1.next()) {

                    itemsTbl.setValueAt(pst1.getDouble(1), i, 4);

                }

                checker++;

                i++;

            }

            System.out.println(checker);
            if (checker < 1) {

                JOptionPane.showMessageDialog(this, "Tender Items already Awarded, Reprint Notifications?");
                approveBtn.setEnabled(false);
                reprintBtn.doClick();

            } else {
                approveBtn.setEnabled(true);
            }

            this.closebtnt.doClick();
        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }//GEN-LAST:event_tenderrecordstbltMouseClicked

    private void closebtntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtntActionPerformed
        // TODO add your handling code here:
        searchAgenda.dispose();
    }//GEN-LAST:event_closebtntActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        System.out.println("Showing dialog");

        java.awt.Point point = this.agendaTxt.getLocationOnScreen();

        searchAgenda.setSize(400, 200);

        searchAgenda.setLocation(point);
        searchAgenda.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    private java.lang.String getBidderName(java.lang.String bidderCode) {
        String name = null;
        try {
            java.sql.Statement cd = connectDB.createStatement();

            ResultSet cditm = cd.executeQuery("SELECT distinct supplier FROM st_preliminary_results where quotation_no = '" + TenderNoTxt.getText().toString() + "' and supplier_code='" + bidderCode + "' ;");

            while (cditm.next()) {

                name = cditm.getObject(1).toString();
                System.out.println(name);

            }
        } catch (SQLException ex) {
            Logger.getLogger(SSOFInancialEvaluationIntfr.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
        return name;

    }
    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        // TODO add your handling code here:
        //2   

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 0) != null) {
                try {

                    //1 Getting The Code
                    java.sql.PreparedStatement code = connectDB.prepareStatement("SELECT DISTINCT item_code from st_floated_quotations WHERE item_description ilike '" + itemsTbl.getValueAt(i, 1) + "'");
                    ResultSet getCode = code.executeQuery();
                    String itemCode = null;
                    while (getCode.next()) {

                        itemCode = getCode.getObject(1).toString();

                    }
                    System.out.println("Inserting Item [" + itemCode + "] For " + getBidderName(itemsTbl.getValueAt(i, 0).toString()));

                    //2
                    java.sql.PreparedStatement save1 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered=true WHERE supplier ilike '" + itemsTbl.getValueAt(i, 0) + "' and quotation_no ilike '" + TenderNoTxt.getText().toString() + "' and  item_description = '" + itemsTbl.getValueAt(i, 1) + "' ");
                    save1.executeUpdate();

                    //3
                    java.sql.PreparedStatement savelpo = connectDB.prepareStatement("INSERT INTO st_orders(quotation_no, supplier, criteria, item, quantity, unit_price, days_to_deliver,units,code)"
                            + " VALUES (?,?,?,?,?,?,?,?,?);");

                    savelpo.setObject(1, TenderNoTxt.getText().toString());
                    savelpo.setObject(2, itemsTbl.getValueAt(i, 0));
                    savelpo.setObject(3, "Lowest Price");
                    savelpo.setObject(4, itemsTbl.getValueAt(i, 1));
                    savelpo.setObject(5, Double.valueOf(itemsTbl.getValueAt(i, 3).toString()));
                    savelpo.setObject(6, Double.valueOf(itemsTbl.getValueAt(i, 5).toString()));
                    savelpo.setObject(7, 0.00);
                    //select units, item_code from stockitem where description ='AMOXICILLIN 250MG CAPSULES'
                    savelpo.setObject(8, itemsTbl.getValueAt(i, 2));
                    savelpo.setObject(9, itemCode);

                    savelpo.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(AwardApprovalsIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }

        TenderTrack.TrackTable(connectDB, "awarding", com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase() + "-" + com.afrisoftech.lib.UserName.getServerDate(connectDB), TenderNoTxt.getText());
        JOptionPane.showMessageDialog(null, "Tender Items Been Awarded Successfully!", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        bidderTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_orders WHERE quotation_no='" + TenderNoTxt.getText() + "'"));
        tenderTxt.setText(TenderNoTxt.getText());
        jDialog1.setBounds(150, 100, 500, 400);
        jDialog1.setVisible(true);
        //tenderTbl.setText(tenderNotxt.getText());

        ClearTable.clearthisTable(itemsTbl);
    }//GEN-LAST:event_approveBtnActionPerformed

    private void reprintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reprintBtnActionPerformed
        // TODO add your handling code here:
        bidderTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_orders WHERE quotation_no='" + TenderNoTxt.getText() + "'"));
        tenderTxt.setText(TenderNoTxt.getText());
        jDialog1.setBounds(150, 100, 500, 400);

        jDialog1.setVisible(true);
    }//GEN-LAST:event_reprintBtnActionPerformed

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed

        if (PurchaseItemsTbl.getValueAt(0, 0) == null) {

            javax.swing.JOptionPane.showMessageDialog(this, "Select An Agenda");
        } else {

            try {

                java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("UPDATE st_recommendation  SET agenda_approval =true, approved_by='" + userTxt.getText() + "'"
                        + " WHERE quotation_no='" + tenderNotxt.getText() + "' ");
                pstmt7.executeUpdate();

                connectDB.commit();

                ClearTable.clearthisTable(PurchaseItemsTbl);

                TenderaAgendaAwardPDF policy = new TenderaAgendaAwardPDF();
                policy.TenderaAgendaAwardPDF(connectDB, tenderNotxt.getText());
                javax.swing.JOptionPane.showMessageDialog(this, "Agenda Approved Successfully");
                tenderNotxt.setText(null);
            } catch (SQLException ex) {
                try {
                    connectDB.rollback();
                    ex.printStackTrace();
                } catch (SQLException ex1) {
                    ex1.printStackTrace();
                    Logger.getLogger(PROperationpnl.class.getName()).log(Level.SEVERE, null, ex1);
                }
                Logger.getLogger(RequisitionApprovalIntFr.class.getName()).log(Level.SEVERE, null, ex);
            }

            ClearTable.clearthisTable(PurchaseItemsTbl);
            refreshTable();
        }
        // Add your handling code here:
    }//GEN-LAST:event_postbtnActionPerformed
    private void refreshTable() {

        agendaTbl.setModel(TableModel.createTableVectors(connectDB, "SELECT DISTINCT agenda_no from st_recommendation WHERE agenda_approval=false and agenda_no is not null and  agenda_rejection=false"));

    }

    private void refreshTable2() {

        //agendaTbl1.setModel(TableModel.createTableVectors(connectDB, "SELECT DISTINCT requisition_no,agenda_no from st_receive_requisation WHERE (requisition_no ilike '%PRQ%' or requisition_no ILIKE 'SRQ%') and (monthly_usage ilike 'Q%' or monthly_usage ilike 'T%' or monthly_usage ilike '%P%') and agenda_no!='-' and mode_of_purchase_approved=false "));0332697
        agendaTbl1.setModel(TableModel.createTableVectors(connectDB, "SELECT DISTINCT requisition_no, agenda_no from st_receive_requisation WHERE (requisition_no ilike '%PRQ%' or requisition_no ILIKE '%SRQ%') and (monthly_usage ilike 'Q%' or monthly_usage ilike 'T%' or monthly_usage ilike '%P%') and agenda_no !='-' and mode_of_purchase_approved=false "));

    }

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed

        ClearTable.clearthisTable(PurchaseItemsTbl);

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void PurchaseItemsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PurchaseItemsTblMouseClicked

        // Add your handling code here:
    }//GEN-LAST:event_PurchaseItemsTblMouseClicked

    private void agendaTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendaTblMouseClicked

        ClearTable.clearthisTable(PurchaseItemsTbl);
        ////clear the JTextPane
        agendaTxtarea.setText(null);

        //////Fill the PR table and other details
        int rowselect = agendaTbl.getSelectedRow();
        String getAgenda = null;
        getAgenda = agendaTbl.getValueAt(rowselect, 0).toString();
        selectedAgenda = getAgenda;

        PurchaseItemsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT supplier, description, unit,quantity,price,remarks FROM st_recommendation WHERE agenda_no='" + selectedAgenda + "'"));
        //query upp;

        jScrollPane2.setViewportView(PurchaseItemsTbl);
        ////a query to fill the remaining details
        // Date_raised,agenda_no,agenda_desc,tender_no
        java.sql.Statement stmt;
        try {
            stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("SELECT date, agenda_no, agenda_description,quotation_no "
                    + "FROM st_recommendation WHERE agenda_no='" + selectedAgenda + "'");
            int rows = 0;
            while (rset.next()) {
                agDatetxt.setText(rset.getString(1));
                agNotxt.setText(rset.getString(2));
                agendaTxtarea.setText(rset.getString(3));
                tenderNotxt.setText(rset.getString(4));

            }

            //   refreshTable();
            //  setColumnAlignmentCenter(ApprovalTbl,1);
        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(RequisitionApprovalIntFr.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_agendaTblMouseClicked

    private void rejectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectionBtnActionPerformed

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            if (itemsTbl.getValueAt(i, 0) != null) {
                System.out.println((itemsTbl.getValueAt(i, 0).toString()) + " Item[" + itemsTbl.getValueAt(i, 1) + "]");
                try {
                    // TODO add your handling code here:

                    PreparedStatement pst = connectDB.prepareStatement("UPDATE st_recommendation SET financial_approved=false WHERE quotation_no='" + TenderNoTxt.getText() + "' AND supplier ilike '" + (itemsTbl.getValueAt(i, 0).toString()) + "' AND description= '" + itemsTbl.getValueAt(i, 1) + "'");

                    pst.executeUpdate();

                } catch (SQLException ex) {
                    Logger.getLogger(AwardApprovalsIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }

    }//GEN-LAST:event_rejectionBtnActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        if (jTabbedPane1.getSelectedIndex() == 2) {

            JInternalFrame KickOlson = null;

            KickOlson = (JInternalFrame) new ReversalOfAwards(connectDB, null);
            KickOlson.setVisible(true);
            reversalPanel.removeAll();
            reversalPanel.setLayout(new java.awt.BorderLayout());
            reversalPanel.add(KickOlson, java.awt.BorderLayout.CENTER);
            reversalPanel.updateUI();
            System.out.println("I Kicked OLson at SCM Interface");

        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void preRptbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preRptbtnActionPerformed
        // TODO add your handling code here:
        if (agendaTxt.getText().length() < 1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Select Agenda Number First");
        } else {
            //javax.swing.JOptionPane.showMessageDialog(this, "Work In Progress...");
            TenderPreliminaryReportPDF policy = new TenderPreliminaryReportPDF();
            policy.TenderPreliminaryReportPDF(connectDB, TenderNoTxt.getText());

        }
    }//GEN-LAST:event_preRptbtnActionPerformed

    private void finevalbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finevalbtnActionPerformed
        // TODO add your handling code here:
        if (agendaTxt.getText().length() < 1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Select Agenda Number First");
        } else {
            TenderFinancialReportPDF policy = new TenderFinancialReportPDF();
            policy.TenderFinancialReportPDF(connectDB, TenderNoTxt.getText());
//            com.afrisoftech.hospinventory.TenderSummaryReportPDF policy1 = new com.afrisoftech.hospinventory.TenderSummaryReportPDF();
//            policy1.TenderSummaryReportPDF(connectDB, TenderNoTxt.getText());  
        }
    }//GEN-LAST:event_finevalbtnActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed

        for (int i = 0; i < bidderTbl.getRowCount(); i++) {
            com.afrisoftech.hospinventory.mtrhreports.SupplierNotificationPDF policy = new com.afrisoftech.hospinventory.mtrhreports.SupplierNotificationPDF();
            policy.SupplierNotificationPDF(connectDB, TenderNoTxt.getText(), bidderTbl.getValueAt(i, 0).toString());
        }

    }//GEN-LAST:event_SaveActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jDialog1.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void postbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn1ActionPerformed
        // TODO add your handling code here:

        try {
            for (int i = 0; i < PurchaseItemsTbl1.getRowCount(); i++) {
                if (PurchaseItemsTbl1.getValueAt(i, 7) == Boolean.TRUE) {
                    java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("UPDATE st_receive_requisation  SET approval_status =true , mode_of_purchase_approved=true   WHERE requisition_no='" + prqNotxt.getText() + "' and agenda_no ilike '" + agNotxt1txt.getText() + "' ");
                    pstmt7.executeUpdate();
           //         connectDB.commit();
                }
            }
            ClearTable.clearthisTable(PurchaseItemsTbl1);
            javax.swing.JOptionPane.showMessageDialog(this, "Agenda Approved Successfully");
            tenderNotxt.setText(null);
            refreshTable2();
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
//            try {
//                connectDB.rollback();
//                ex.printStackTrace();
//            } catch (SQLException ex1) {
//                ex1.printStackTrace();
//                Logger.getLogger(PROperationpnl.class.getName()).log(Level.SEVERE, null, ex1);
//            }
            Logger.getLogger(RequisitionApprovalIntFr.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_postbtn1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        // TODO add your handling code here:
        ClearTable.clearthisTable(PurchaseItemsTbl1);
        
          java.lang.reflect.Field[] field;

                        try {

                            java.lang.Class cl = Class.forName("com.afrisoftech.hospinventory.AwardApprovalsIntfr");

                            field = cl.getDeclaredFields();

                            System.out.println("Class loaded");

                            for (int j = 0; j < field.length; j++) {

                                if (field[j].getName().endsWith("txt")) {
                                    
                                    System.out.println(field[j]);
                                    //field[j].set(field[j]., " ");
                                }

                            }

                        } catch (java.lang.Exception Exc) {

                            Exc.printStackTrace();

                            System.out.println("Error");
                        }
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void PurchaseItemsTbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PurchaseItemsTbl1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PurchaseItemsTbl1MouseClicked

    private void agendaTbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendaTbl1MouseClicked
        // TODO add your handling code here:

        SelectedPR = agendaTbl1.getValueAt(agendaTbl1.getSelectedRow(), 0);
        agendaNo = agendaTbl1.getValueAt(agendaTbl1.getSelectedRow(), 1);
        prqNotxt.setText((String) SelectedPR);
        agNotxt1txt.setText((String) agendaNo);

        userPostedtxt.setText(com.afrisoftech.lib.UserName.getUserFromTrail(prqNotxt.getText(), connectDB));

        datepostedtxt.setText(com.afrisoftech.lib.UserName.getTimestampFromTrail(prqNotxt.getText(), connectDB));

        PurchaseItemsTbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT item_code, item_description, units,quantity,price,price*quantity TOTAL , monthly_usage Mode_of_Purchase, FALSE AS approve FROM st_receive_requisation WHERE requisition_no='" + SelectedPR + "'"));

    }//GEN-LAST:event_agendaTbl1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed


        refreshTable2();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void agendaTbl1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendaTbl1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_agendaTbl1MouseEntered

    class WaitingPRsThread extends Thread {

        public WaitingPRsThread() {
        }

        public void run() {
            while (true) {
                refreshTable2();
                try {
                    Thread.sleep(30000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();

                    //Logger.getLogger(VitalSignRecIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DueDateTxt;
    private javax.swing.JPanel NoreqPane;
    private javax.swing.JPanel NoreqPane1;
    private javax.swing.JTable PurchaseItemsTbl;
    private javax.swing.JTable PurchaseItemsTbl1;
    private javax.swing.JButton Save;
    private javax.swing.JTextField TenderNoTxt;
    private javax.swing.JTextField agDatetxt;
    private javax.swing.JTextField agDatetxt2;
    private javax.swing.JTextField agNotxt;
    private javax.swing.JTextField agNotxt1txt;
    private javax.swing.JTable agendaTbl;
    private javax.swing.JTable agendaTbl1;
    private javax.swing.JTextField agendaTxt;
    private javax.swing.JTextPane agendaTxtarea;
    private javax.swing.JTextPane agendaTxtarea1;
    private javax.swing.JLabel approvalLbl;
    private javax.swing.JLabel approvalLbl1;
    private javax.swing.JButton approveBtn;
    private javax.swing.JTable bidderTbl;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JButton closebtnt;
    private javax.swing.JTextField datepostedtxt;
    private javax.swing.JButton finevalbtn;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton postbtn;
    private javax.swing.JButton postbtn1;
    private javax.swing.JButton preRptbtn;
    private javax.swing.JTextField prqNotxt;
    private javax.swing.JButton rejectionBtn;
    private javax.swing.JButton reprintBtn;
    private javax.swing.JPanel reversalPanel;
    private javax.swing.JDialog searchAgenda;
    private javax.swing.JButton techReportbtn;
    private javax.swing.JTextField tenderNotxt;
    private javax.swing.JLabel tenderTxt;
    private javax.swing.JPanel tenderrecordspnlt;
    private javax.swing.JScrollPane tenderrecordsspnlt;
    private javax.swing.JTable tenderrecordstblt;
    private javax.swing.JTextField tenderrecordstxtt;
    private javax.swing.JTextField userPostedtxt;
    private javax.swing.JTextField userTxt;
    private javax.swing.JTextField userTxt1txt;
    // End of variables declaration//GEN-END:variables
}
