/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.accounting.*;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author root
 */
public class CheckGrnDetails extends javax.swing.JInternalFrame {

    /**
     * Creates new form loanpymntintfr
     */
    javax.swing.table.TableModel tableModel = null;
    // javax.swing.table.TableModel tableModel1 = null;
    boolean controlFlag = true;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    int st_cardex_oid;
    Vector v = new Vector();
    private String transaction_no = null;

    public CheckGrnDetails(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton51 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        orderNumberTxt = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        grnDetailsTable = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        grnsearchTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grn2PayablesLinkingTable = new com.afrisoftech.dbadmin.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        supplierNameTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        supplierCodeTxt = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        lpoNumberTxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        totalGrnAmountTxt = new javax.swing.JTextField();
        qtyTtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton51.setText("Dispose");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton511.setText("Dispose");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog2.setLocationByPlatform(true);
        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        orderNumberTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                orderNumberTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(orderNumberTxt, gridBagConstraints);

        grnDetailsTable.setToolTipText("Click on the target row to select the patient from the search.");
        grnDetailsTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        grnDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grnDetailsTableMouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(grnDetailsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Close Dialog");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        jLabel4.setText("Total Amount for Goods Receipt Note (GRN)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jLabel4, gridBagConstraints);

        grnsearchTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(grnsearchTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Examination of Creditors Invoices");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel21.setLayout(new java.awt.GridBagLayout());

        grn2PayablesLinkingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Lpo No", "Delivey No", "Invoice No.", "Reference", "Price/Item", "QTY", "GRN Amt", "Amt To Transfer", "Link"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grn2PayablesLinkingTable.setGridColor(new java.awt.Color(204, 204, 255));
        javax.swing.table.TableColumn dateEditor = grn2PayablesLinkingTable.getColumnModel().getColumn(0);
        //com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new org.jdesktop.swingx.JXDatePicker(), grn2PayablesLinkingTable);
        com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), grn2PayablesLinkingTable);
        dateEditor.setCellEditor(dateCellEditor);
        //jTable1.setRowHeight(30);
        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(cellRenderer.TRAILING);
        dateEditor.setCellRenderer(cellRenderer);

        javax.swing.table.TableColumn ccDateEditorw = grn2PayablesLinkingTable.getColumnModel().getColumn(7);
        com.afrisoftech.lib.DateCellEditor ccDateCellEditorw = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), grn2PayablesLinkingTable);
        ccDateEditorw.setCellEditor(ccDateCellEditorw);
        //jTable1.setRowHeight(30);
        //this.procurementPlanTbl.getColumnModel().getColumn(i).setCellEditor(new javax.swing.DefaultCellEditor((javax.swing.JComboBox)new com.afrisoftech.lib.DatePicker()));
        grn2PayablesLinkingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn2PayablesLinkingTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                grn2PayablesLinkingTableMouseReleased(evt);
            }
        });
        grn2PayablesLinkingTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grn2PayablesLinkingTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(grn2PayablesLinkingTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel21.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.blue, java.awt.Color.magenta, null, null));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search by Supplier");
        jLabel1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel22.setLayout(new java.awt.GridBagLayout());

        supplierNameTxt.setEditable(false);
        supplierNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierNameTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel22.add(supplierNameTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setEnabled(false);
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel22.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel22, gridBagConstraints);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Acc No");
        jLabel5.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        supplierCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(supplierCodeTxt, gridBagConstraints);

        jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel23.setLayout(new java.awt.GridBagLayout());

        lpoNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(lpoNumberTxt, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel23.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel23, gridBagConstraints);

        jLabel3.setText("Search by GRN/LPO/LSO Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jCheckBox2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(204, 0, 0));
        jCheckBox2.setText("Link");
        jCheckBox2.setMaximumSize(new java.awt.Dimension(25, 27));
        jCheckBox2.setMinimumSize(new java.awt.Dimension(65, 27));
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jCheckBox2, gridBagConstraints);

        totalGrnAmountTxt.setEditable(false);
        totalGrnAmountTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalGrnAmountTxt.setForeground(new java.awt.Color(204, 0, 0));
        totalGrnAmountTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalGrnAmountTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DialogInput", 1, 12))); // NOI18N
        totalGrnAmountTxt.setMinimumSize(new java.awt.Dimension(206, 21));
        totalGrnAmountTxt.setPreferredSize(new java.awt.Dimension(25, 61));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(totalGrnAmountTxt, gridBagConstraints);

        qtyTtField.setEditable(false);
        qtyTtField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        qtyTtField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "QTY", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        qtyTtField.setMinimumSize(new java.awt.Dimension(196, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(qtyTtField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 500.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel2, gridBagConstraints);

        setBounds(0, 0, 853, 561);
    }// </editor-fold>//GEN-END:initComponents

    private void grn2PayablesLinkingTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn2PayablesLinkingTableKeyReleased
        /*     double resFloat = 0.00;
         //  double totalSum = 0.00;
         double floatTotal = java.lang.Double.parseDouble(jTextField1.getText());
    
         if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) != null) {
         double amtToalloc = java.lang.Double.parseDouble(jTextField2.getText());
         double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
    
         double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
         double balance = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
    
    
         if (floatCol3 <= amtToalloc && amtToalloc >= 0){
    
         double resVal =floatCol2 - floatCol3;
    
    
         jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
         } else
         if (floatCol3 > amtToalloc && amtToalloc > 0){
         javax.swing.JOptionPane.showMessageDialog(this,"You cannot allocate amount higher than the amount to allocate","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         }
    
    
    
         this.tableModelTableChanged();
         }else
         if (jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4) == null) {
         jTable1.setValueAt(new java.lang.Double(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()), jTable1.getSelectedRow(), 5);
         this.tableModelTableChanged();
         }
         */
        // Add your handling code here:
    }//GEN-LAST:event_grn2PayablesLinkingTableKeyReleased

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog1.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
      
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select voucher_no,numeric_uminus(balance) as balance from ac_accounts_payable where dealer ilike '" + supplierNameTxt.getText() + "' and balance < 0 and voucher_no ILIKE '" + jTextField1111.getText().toString() + "%'"));

        /* try {
         // searchRowSet.execute("select scheme_manager as scheme from ac_schemes");
        
         searchRowSet1.execute("select voucher_no,numeric_uminus(balance) as balance from ac_accounts_payable where dealer ilike '"+jTextField36.getText()+"' and balance < 0 and voucher_no ILIKE '"+jTextField1111.getText().toString()+"%'");
         //   searchRowSet.execute();
         //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where first_name '~ '~"+jTextField11.getText()+"' order by name");
        
         jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
         new org.netbeans.lib.sql.models.TableModel.Column("voucher_no", "Voucher No.", false),
         new org.netbeans.lib.sql.models.TableModel.Column("balance", "Amount", false)
         // new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
         }));
         */
        jSearchTable1.setShowHorizontalLines(false);
        jSearchScrollPane1.setViewportView(jSearchTable1);


        /*  } catch(java.sql.SQLException sqlExec) {
       
         javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
       
         }*/
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate

    private void grn2PayablesLinkingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn2PayablesLinkingTableMouseClicked
                  if (grn2PayablesLinkingTable.getSelectedColumn() == 8) // jCheckBox2.setSelected(false);
        {
//            linkGRNToCreditorBtn.setEnabled(false);
        }
        {
            Double totalAmnt = 0.0, qtytotal = 0.0;
            if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.TRUE) {
                totalAmnt = 0.0;
                qtytotal = 0.0;
                if (v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
                    //  v.remove(grn2PayablesLinkingTable.getSelectedRow());
                } else if (!v.contains(grn2PayablesLinkingTable.getSelectedRow())) {
                    v.add(grn2PayablesLinkingTable.getSelectedRow());
                }
            } else if (Boolean.valueOf(grn2PayablesLinkingTable.getModel().getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 9).toString()) == java.lang.Boolean.FALSE) {
                totalAmnt = 0.0;
                qtytotal = 0.0;
                v.remove(grn2PayablesLinkingTable.getSelectedRow());
            }




            for (int i = 0; i < v.size(); i++) {
                Double total = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 7).toString());
                totalAmnt = totalAmnt + total;
                Double totals = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(Integer.parseInt(v.elementAt(i).toString()), 6).toString());
                qtytotal = qtytotal + totals;

            }

//            
//          
            System.out.println(totalAmnt);
            totalGrnAmountTxt.setText(totalAmnt.toString());
            qtyTtField.setText(qtytotal.toString());

        }
    }//GEN-LAST:event_grn2PayablesLinkingTableMouseClicked
    /*   public void tableModelTableChanged() {
     System.out.println("Calculating totals for table 11 and 2.");
     //        double resFloat = 0.00;
     double resFloat = 0.00;
  
  
     for (int i = 0; i < jTable1.getRowCount(); i++) {
  
     if (jTable1.getModel().getValueAt(i, 0) != null) {
  
     resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
     jTextField3.setText(java.lang.String.valueOf(resFloat));
  
     } else{
     resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
     jTextField3.setText(java.lang.String.valueOf(resFloat));
  
     }
     }
     //               jTextField31.setText(java.lang.String.valueOf(resFloat));
     }
  
     public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
  
     //        double resFloat = 0.00;
     double resFloat = 0.00;
  
     for (int i = 0; i < jTable1.getRowCount(); i++) {
  
     if (jTable1.getModel().getValueAt(i, 0) != null) {
  
     //   if (jTable11.getSelectedColumn() == 1) {
  
     resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
     //   }
  
     jTextField3.setText(java.lang.String.valueOf(resFloat));
  
     }else{
     resFloat = resFloat + Double.parseDouble(jTable1.getModel().getValueAt(i, 3).toString());
  
     //   }
  
     jTextField3.setText(java.lang.String.valueOf(resFloat));
     }
  
     }
  
     //   */    //        jTextField31.setText(java.lang.String.valueOf(resFloat));
    //    }

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        supplierCodeTxt.setText("");
        //  jTextField2.setText("");
        //     jTextField3.setText("");
        for (int k = 0; k < grn2PayablesLinkingTable.getRowCount(); k++) {
            for (int r = 0; r < grn2PayablesLinkingTable.getColumnCount(); r++) {
                grn2PayablesLinkingTable.getModel().setValueAt(null, k, r);
            }
        }
        this.supplierNameTxt.setText("");
      

        supplierNameTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        supplierCodeTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jSearchDialog.dispose();

        //   this.populateTable1(this.jTextField4.getText());



        //jTextField361.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());





        /*  tableModel = jTable1.getModel();
       
         tableModel.addTableModelListener(new javax.swing.event.TableModelListener() {
       
         public void tableChanged(javax.swing.event.TableModelEvent evt) {
       
         tableModelTableChanged(evt);
       
         }
       
         });
         */


        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if (jTextField111.getCaretPosition() < 3) {

            System.out.println("Nothing");
        } else {
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(supplier_name) as scheme ,code from st_suppliers where supplier_name ILIKE '" + jTextField111.getText().toString() + "%'"));


            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);



        }           // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.supplierNameTxt.getLocationOnScreen();

        jSearchDialog.setSize(600, 200);

        jSearchDialog.setLocation(point);

        jSearchDialog.setVisible(true);

    }
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed

        System.out.println("Showing dialog");

        java.awt.Point point = this.lpoNumberTxt.getLocationOnScreen();

        jSearchDialog2.setSize(800, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void orderNumberTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_orderNumberTxtCaretUpdate

         v.removeAllElements();
        if (orderNumberTxt.getText().length() > 4) {
            grnDetailsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct supplier as supplier_name,  order_no as LPO_LSO_NO from st_stock_cardex st where st.approved=FALSE "
                    + "and order_no ilike '%" + orderNumberTxt.getText() + "%' and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' group by supplier,order_no  order by supplier_name"));
//grnDetailsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct supplier as supplier_name,  order_no as LPO_LSO_NO from st_stock_cardex st where st.approved=FALSE 
//and order_no ilike '%59596%' and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal'  group by supplier,order_no  order by supplier_name
//            grnDetailsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct supplier as supplier_name, st.date as date_received, order_no as LPO_LSO_NO, delivery_note_no, invoice_no,store as receiving_store, st.transaction_no from st_stock_cardex st,ac_ledger ac where st.approved=FALSE \n" +
//"and order_no ilike '%"+ orderNumberTxt.getText() + "%' and st.transaction_type ilike 'Receiving' and delivered_by!= 'Reversal' and ac.reconciled = false and ac.transaction_no = st.transaction_no and ac.credit > 0.00 group by supplier,st.date,order_no,delivery_note_no,invoice_no,store,st.transaction_no,ac.voucher_no  order by supplier_name,st.transaction_no"));
//          
          
            // grnDetailsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier as supplier_name, st.date as date_received, order_no as LPO_LSO_NO, delivery_note_no, invoice_no, store as receiving_store, item, quantity_received, st.debit as item_total_amount, st.transaction_no from st_stock_cardex st, ac_ledger ac where order_no ilike '%" + orderNumberTxt.getText() + "%' and st.transaction_type ilike 'Receiving' and ac.reconciled = false and ac.transaction_no = st.transaction_no and ac.credit > 0.00 group by ac.voucher_no having sum(ac.credit-ac.debit) > 0 order by item"));
            //   grnDetailsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier as supplier_name, date as date_received, order_no as LPO_LSO_NO, delivery_note_no, invoice_no, store as receiving_store, item, quantity_received, debit as item_total_amount, transaction_no from st_stock_cardex where order_no ilike '%" + orderNumberTxt.getText() + "%' and transaction_type ilike 'Receiving' and ac_ledger.reconciled = false order by item"));

            // grnsearchTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(grnDetailsTable, 8)));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_orderNumberTxtCaretUpdate

    private void grnDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnDetailsTableMouseClicked

        v.removeAllElements();
        supplierCodeTxt.setText("");
        lpoNumberTxt.setText(grnDetailsTable.getValueAt(grnDetailsTable.getSelectedRow(), 1).toString());
        for (int k = 0; k < grn2PayablesLinkingTable.getRowCount(); k++) {
            for (int r = 0; r < grn2PayablesLinkingTable.getColumnCount(); r++) {
                grn2PayablesLinkingTable.getModel().setValueAt(null, k, r);
            }
        }

        try {
            java.sql.Statement pstmtSupplier = connectDB.createStatement();

            try {
 
                int k = 0;
                                java.sql.ResultSet rsetSupplier = pstmtSupplier.executeQuery("SELECT  supplier as supplier_name,"
                                        + "(select summer from funsoft_link_grn (order_no,invoice_no,item,item_code)) as quantity_received,"
                        + " order_no as LPO_LSO_NO, delivery_note_no, invoice_no,item,store as receiving_store "
                        + " from st_stock_cardex where approved=false and invoice_no in "
                        + "(select invoice_no from st_stock_cardex where approved=false and "
                        + " order_no= '" + grnDetailsTable.getValueAt(grnDetailsTable.getSelectedRow(), 1) + "') and "
                        + "order_no= '" + grnDetailsTable.getValueAt(grnDetailsTable.getSelectedRow(), 1) + "' "
                        + " group by 5,1,2,3,4,6,7 having sum(debit-quantity_ordered) >=0 order by invoice_no");

                while (rsetSupplier.next()) {

                    supplierNameTxt.setText(rsetSupplier.getString(1));
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(3), k, 1);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(4), k, 2);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(5), k, 3);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(6), k, 4);
                    grn2PayablesLinkingTable.setValueAt(rsetSupplier.getObject(2), k, 6);
                    
                    
                      String name=  rsetSupplier.getString(6);
                       String correct_name=name;
                     
                      
                      if(correct_name.contains("'")){
                            correct_name=  name.substring(0, name.indexOf("'"));
                      }
                      else if(!correct_name.contains("'")){
                            correct_name= name;
                      }
                     
                                       
                     java.sql.Statement pstmtSupplierDate = connectDB.createStatement();
                    java.sql.ResultSet rsetSupplierDate = pstmtSupplierDate.executeQuery(""
                            + "SELECT  date,sum(debit-quantity_ordered) as reversed_qty,price_per_item FROM st_stock_cardex  where " +
" approved=false and order_no='" + rsetSupplier.getObject(3) + "' "
                            + " and invoice_no='" + rsetSupplier.getObject(5) + "' and supplier ='" + rsetSupplier.getObject(1) + "' " +
" and item ilike'%" + correct_name + "%' and store='" + rsetSupplier.getObject(7) + "' " +
"                             group by date,price_per_item ");
                    
                    if (rsetSupplierDate.next()) {
                        grn2PayablesLinkingTable.setValueAt(rsetSupplierDate.getObject(1), k, 0);
                        
                           grn2PayablesLinkingTable.setValueAt(rsetSupplierDate.getObject(3), k, 5);
                    }
                    
                    
                     java.sql.Statement pstmtdebit = connectDB.createStatement();
                    java.sql.ResultSet rsetdebit = pstmtdebit.executeQuery(""
                            + "SELECT  sum(debit-quantity_ordered) as reversed_qty FROM st_stock_cardex  where " +
" approved=false and order_no='" + rsetSupplier.getObject(3) + "' "
                            + " and invoice_no='" + rsetSupplier.getObject(5) + "' and supplier ='" + rsetSupplier.getObject(1) + "' " +
" and item ilike'%" + correct_name + "%' and store='" + rsetSupplier.getObject(7) + "' " +
"                            ");
                    
                    if (rsetdebit.next()) {
                       
                         grn2PayablesLinkingTable.setValueAt(rsetSupplierDate.getObject(2), k, 7);
                          
                    }
                    
                    
                    k = k + 1;

                }
            } catch (Exception r) {
                r.printStackTrace();
            }


            java.sql.PreparedStatement pstmtSuppliercode = connectDB.prepareStatement("SELECT code FROM st_suppliers WHERE supplier_name = '" + grnDetailsTable.getValueAt(grnDetailsTable.getSelectedRow(), 0) + "'");

            java.sql.ResultSet rsetSuppliercode = pstmtSuppliercode.executeQuery();

            while (rsetSuppliercode.next()) {
                supplierCodeTxt.setText(rsetSuppliercode.getString(1));
            }
        } catch (Exception y) {
            y.printStackTrace();
            System.out.println(y);
        }


        jSearchDialog2.dispose();
    }//GEN-LAST:event_grnDetailsTableMouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed

        jSearchDialog2.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void grn2PayablesLinkingTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn2PayablesLinkingTableMouseReleased
        if (grn2PayablesLinkingTable.getSelectedColumn() == 1) {

            if (grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1) != null) {

                java.awt.Point point = this.lpoNumberTxt.getLocationOnScreen();

                jSearchDialog2.setSize(900, 200);

                jSearchDialog2.setLocation(point);

                jSearchDialog2.setVisible(true);

                orderNumberTxt.grabFocus();

                orderNumberTxt.setText(grn2PayablesLinkingTable.getValueAt(grn2PayablesLinkingTable.getSelectedRow(), 1).toString());
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_grn2PayablesLinkingTableMouseReleased

    private void supplierNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierNameTxtActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
                 Double total = 0.0,qtytotal = 0.0;
            for (int k = 0; k < grn2PayablesLinkingTable.getRowCount(); k++) {
                if (jCheckBox2.isSelected() == true) {
                 

                    if (grn2PayablesLinkingTable.getValueAt(k, 0) != null) {
                        total = total + Double.parseDouble(grn2PayablesLinkingTable.getValueAt(k, 7).toString());
                        grn2PayablesLinkingTable.setValueAt(grn2PayablesLinkingTable.getValueAt(k, 7), k, 8);
                         grn2PayablesLinkingTable.setValueAt(true, k, 9);
                         
                           Double totals = Double.parseDouble(grn2PayablesLinkingTable.getModel().getValueAt(k, 6).toString());
                qtytotal = qtytotal + totals;




                    }

                    totalGrnAmountTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(total));
                    qtyTtField.setText(qtytotal.toString());

                } else if (jCheckBox2.isSelected() == false) {
                    if (grn2PayablesLinkingTable.getValueAt(k, 0) != null) {
                        totalGrnAmountTxt.setText("0.00");
                        
                        grn2PayablesLinkingTable.setValueAt(0.0, k, 8);
                        total = 0.0;
                        grn2PayablesLinkingTable.setValueAt(false, k, 9);
                        qtyTtField.setText("0.00");


                    }
                }
            }
            
       
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged

    }//GEN-LAST:event_jCheckBox2ItemStateChanged
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable grn2PayablesLinkingTable;
    private javax.swing.JTable grnDetailsTable;
    private javax.swing.JTextField grnsearchTxt;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton52;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField lpoNumberTxt;
    private javax.swing.JTextField orderNumberTxt;
    private javax.swing.JTextField qtyTtField;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField supplierCodeTxt;
    private javax.swing.JTextField supplierNameTxt;
    private javax.swing.JTextField totalGrnAmountTxt;
    // End of variables declaration//GEN-END:variables
}
