/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

/**
 *
 * @author MUGISPL
 */
public class MergeSuppliersIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form MergeSuppliersIntfr
     */
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    int row = 0;

    public MergeSuppliersIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        newtxtfld = new javax.swing.JTextField();
        updatebtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        oldsupplierstable = new javax.swing.JTable();
        updaterbtn = new javax.swing.JRadioButton();
        mergesuppliesrbtn = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierstable = new com.afrisoftech.dbadmin.JTable();
        jTextField3 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jSplitPane1.setDividerLocation(500);
        jSplitPane1.setOneTouchExpandable(true);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setText("Old Supplier Name..");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 102));
        jLabel2.setText("New Supplier Name..");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        newtxtfld.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(newtxtfld, gridBagConstraints);

        updatebtn.setText("Update Supplier Name");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel1.add(updatebtn, gridBagConstraints);

        oldsupplierstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "CODE", "SUPPLIER NAME", "Tick TO Remove "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(oldsupplierstable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        buttonGroup1.add(updaterbtn);
        updaterbtn.setText("Update Supplier Name");
        updaterbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updaterbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(updaterbtn, gridBagConstraints);

        buttonGroup1.add(mergesuppliesrbtn);
        mergesuppliesrbtn.setText("Merge Supplier Names");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel1.add(mergesuppliesrbtn, gridBagConstraints);

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        jPanel1.add(jButton1, gridBagConstraints);

        jSplitPane1.setRightComponent(jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        supplierstable.setBorder(new javax.swing.border.MatteBorder(null));
        supplierstable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT code, supplier_name  FROM st_suppliers order by 2;"));
        supplierstable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        supplierstable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierstableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(supplierstable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jTextField3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search supplier.......", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DialogInput", 1, 12), new java.awt.Color(255, 0, 102))); // NOI18N
        jTextField3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField3CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel2.add(jTextField3, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jSplitPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField3CaretUpdate
        if (jTextField3.getText().length() > 4) {

            supplierstable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                    + "SELECT code, supplier_name  FROM st_suppliers where supplier_name ilike '%" + jTextField3.getText().trim() + "%' order by 2;"));

        }
    }//GEN-LAST:event_jTextField3CaretUpdate

    private void supplierstableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierstableMouseClicked

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        if (mergesuppliesrbtn.isSelected() == true) {
            newtxtfld.setText(supplierstable.getValueAt(supplierstable.getSelectedRow(), 1).toString().trim());
            oldsupplierstable.setValueAt(supplierstable.getValueAt(supplierstable.getSelectedRow(), 0).toString().trim(), row, 0);
            oldsupplierstable.setValueAt(supplierstable.getValueAt(supplierstable.getSelectedRow(), 1).toString().trim(), row, 1);

            row = row + 1;
        } else if (updaterbtn.isSelected() == true) {
            newtxtfld.setText(supplierstable.getValueAt(supplierstable.getSelectedRow(), 1).toString().trim());
            oldsupplierstable.setValueAt(supplierstable.getValueAt(supplierstable.getSelectedRow(), 0).toString().trim(), 0, 0);
            oldsupplierstable.setValueAt(supplierstable.getValueAt(supplierstable.getSelectedRow(), 1).toString().trim(), 0, 1);
            row = 0;
        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_supplierstableMouseClicked

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        try {

            connectDB.setAutoCommit(false);
            for (int i = 0; i < oldsupplierstable.getRowCount(); i++) {
                if (oldsupplierstable.getModel().getValueAt(i, 0) != null && oldsupplierstable.getModel().getValueAt(i, 0).toString().length() > 0) {
                    try {

                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE st_suppliers   SET supplier_name='" + newtxtfld.getText().trim() + "' WHERE supplier_name='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "' ");
                        pstmt1.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt1 error is " + sq);
                    }
                    try {
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("UPDATE  ac_ledger   SET   dealer='" + newtxtfld.getText().trim() + "'   WHERE  dealer='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "';");
                        pstmt2.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt2 error is " + sq);
                    }

                    try {
                        java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("UPDATE ac_accounts_payable  SET   dealer='" + newtxtfld.getText().trim() + "'  WHERE  dealer='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "';");
                        pstmt3.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt3 error is " + sq);
                    }

                    try {
                        java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE st_stock_cardex   SET supplier='" + newtxtfld.getText().trim() + "' WHERE supplier='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "';");
                        pstmt4.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt4 error is " + sq);
                    }

                    try {
                        java.sql.PreparedStatement pstmt5 = connectDB.prepareStatement("UPDATE ac_bills   SET dealer='" + newtxtfld.getText().trim() + "' WHERE dealer='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "';");
                        pstmt5.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt5 error is " + sq);
                    }

                    try {
                        java.sql.PreparedStatement pstmt6 = connectDB.prepareStatement("UPDATE ac_petty_cash   SET  payee='" + newtxtfld.getText().trim() + "' WHERE  payee='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "';");
                        pstmt6.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt6 error is " + sq);
                    }

                    try {
                        java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("UPDATE ac_cash_book   SET  dealer='" + newtxtfld.getText().trim() + "' WHERE dealer='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "';");
                        pstmt7.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt7 error is " + sq);
                    }

                    try {
                        java.sql.PreparedStatement pstmt8 = connectDB.prepareStatement("UPDATE cr_allocation   SET  trans_type='" + newtxtfld.getText().trim() + "' WHERE trans_type='" + oldsupplierstable.getValueAt(i, 1).toString().trim() + "';");
                        pstmt8.executeUpdate();
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println("\n\n the pstmt8 error is " + sq);
                    }
                    if (mergesuppliesrbtn.isSelected() == true) {

                        try {
                            System.out.println(oldsupplierstable.getModel().getValueAt(i, 2).toString() + "the value of boolean at " + i);
                            if (Boolean.valueOf(oldsupplierstable.getModel().getValueAt(i, 2).toString()) == java.lang.Boolean.TRUE) {
                                java.sql.PreparedStatement pstmtdel = connectDB.prepareStatement("DELETE FROM st_suppliers WHERE code='" + oldsupplierstable.getValueAt(i, 0).toString().trim() + "' ");
                                pstmtdel.executeUpdate();
                            }
                        } catch (Exception sq) {
                            sq.printStackTrace();
                            System.out.println("\n\n the pstmt delete error is " + sq);
                        }
                    }

                }
                if (updaterbtn.isSelected() == true) {
                    i = oldsupplierstable.getRowCount();
                }

            }

            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! Update Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            jButton1.doClick();

            this.supplierstable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT code, supplier_name  FROM st_suppliers order by 2;"));

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_updatebtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        newtxtfld.setText(null);
        row = 0;
        for (int i = 0; i < oldsupplierstable.getRowCount(); i++) {
            oldsupplierstable.setValueAt("", i, 1);
            oldsupplierstable.setValueAt("", i, 0);
            oldsupplierstable.setValueAt(false, i, 2);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updaterbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updaterbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updaterbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JRadioButton mergesuppliesrbtn;
    private javax.swing.JTextField newtxtfld;
    private javax.swing.JTable oldsupplierstable;
    private javax.swing.JTable supplierstable;
    private javax.swing.JButton updatebtn;
    private javax.swing.JRadioButton updaterbtn;
    // End of variables declaration//GEN-END:variables
}
