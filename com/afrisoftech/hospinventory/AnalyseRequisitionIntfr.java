/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.ClearTable;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class AnalyseRequisitionIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form AnalyseRequisitionIntfr
     */
    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public AnalyseRequisitionIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        WaitingPRsThread waitingPrsThread = new WaitingPRsThread();

        waitingPrsThread.start();

        jLabel2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        searchtendert = new javax.swing.JDialog();
        tenderrecordspnlt = new javax.swing.JPanel();
        tenderrecordstxtt = new javax.swing.JTextField();
        tenderrecordsspnlt = new javax.swing.JScrollPane();
        tenderrecordstblt = new com.afrisoftech.dbadmin.JTable();
        closebtnt = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        requisitionTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        analysisDatepckr = new com.afrisoftech.lib.DatePicker();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pritemsTbl = new com.afrisoftech.dbadmin.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        analysisdataTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        prs_tbl = new javax.swing.JTable();
        action_buttons = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        searchtendert.setModal(true);
        searchtendert.setUndecorated(true);
        searchtendert.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnlt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnlt.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxtt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxttCaretUpdate(evt);
            }
        });
        tenderrecordstxtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnlt.add(tenderrecordstxtt, gridBagConstraints);

        tenderrecordstblt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstblt.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstblt.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstblt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbltMouseClicked(evt);
            }
        });
        tenderrecordsspnlt.setViewportView(tenderrecordstblt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnlt.add(tenderrecordsspnlt, gridBagConstraints);

        closebtnt.setText("Close");
        closebtnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtntActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnlt.add(closebtnt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtendert.getContentPane().add(tenderrecordspnlt, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Departmental Heads Approval");
        setMinimumSize(new java.awt.Dimension(138, 32));
        setPreferredSize(new java.awt.Dimension(859, 602));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Requisition Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("By Stock Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Based on Pre-Set Reorder level");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox2, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        requisitionTxt.setEditable(false);
        requisitionTxt.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(requisitionTxt, gridBagConstraints);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel6.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 300);
        jPanel3.add(jPanel6, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(51, 0, 255));
        jLabel2.setText("From:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 350);
        jPanel3.add(analysisDatepckr, gridBagConstraints);

        jLabel5.setText("Date  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel3.add(jLabel5, gridBagConstraints);

        jCheckBox3.setForeground(new java.awt.Color(255, 0, 0));
        jCheckBox3.setText("TICK ALL");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jCheckBox3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(153, 255, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        pritemsTbl.setBackground(new java.awt.Color(204, 255, 204));
        pritemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Quantity Ordered", "Strength", "Date Due", "Save"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        pritemsTbl.getTableHeader().setReorderingAllowed(false);
        pritemsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pritemsTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(pritemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel4.add(jScrollPane2, gridBagConstraints);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1043, 550));

        analysisdataTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        analysisdataTbl.setShowHorizontalLines(false);
        analysisdataTbl.setShowVerticalLines(false);
        analysisdataTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(analysisdataTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        prs_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        prs_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prs_tblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(prs_tbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        action_buttons.setLayout(new java.awt.GridBagLayout());

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setText("Approve PR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        action_buttons.add(jButton2, gridBagConstraints);

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        action_buttons.add(jButton3, gridBagConstraints);

        jButton4.setBackground(new java.awt.Color(204, 255, 204));
        jButton4.setText("Clear Form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        action_buttons.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(action_buttons, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tenderrecordstxttCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxttCaretUpdate
        //refresh();
        if (this.tenderrecordstxtt.getCaretPosition() > 3) {

            tenderrecordstblt.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct requisition_no FROM st_receive_requisation where analysed=false and  (requisition_no ilike 'PRQ%' or requisition_no ilike 'SRQ%') and requisition_no ilike '%" + tenderrecordstxtt.getText() + "%' ; "));
            //nb: cert_of_incorp is not null
            tenderrecordstblt.setShowHorizontalLines(false);

            tenderrecordsspnlt.setViewportView(tenderrecordstblt);

        }
    }//GEN-LAST:event_tenderrecordstxttCaretUpdate
    private void refresh() {

        prs_tbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct requisition_no PRQ_NO,date FROM st_receive_requisation where analysed=false and  (requisition_no ilike 'PRQ%' or requisition_no ilike 'SRQ%') and upper(store_name) IN (SELECT distinct UPPER(stores) from store_allocation WHERE  user_name ILIKE current_user AND type ilike 'Approve PRQ/SRQ' limit 1) and date::date>current_date-5 "));

        prs_tbl.setShowHorizontalLines(false);

        //tenderrecordsspnlt.setViewportView(tenderrecordstblt);
    }

    class WaitingPRsThread extends Thread {

        public WaitingPRsThread() {
        }

        public void run() {
            while (true) {
                refresh();
                try {
                    Thread.sleep(30000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();

                    //Logger.getLogger(VitalSignRecIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }


    private void tenderrecordstxttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxttActionPerformed
    private void populate() {
        requisitionTxt.setText(prs_tbl.getValueAt(prs_tbl.getSelectedRow(), 0).toString());

        for (int k = 0; k < analysisdataTbl.getModel().getRowCount(); k++) {
            for (int r = 0; r < analysisdataTbl.getModel().getColumnCount(); r++) {
                analysisdataTbl.getModel().setValueAt(null, k, r);
            }
        }
        //clear table
        for (int k = 0; k < pritemsTbl.getModel().getRowCount(); k++) {
            for (int r = 0; r < pritemsTbl.getModel().getColumnCount(); r++) {
                pritemsTbl.getModel().setValueAt(null, k, r);
            }
        }
        jLabel2.setVisible(false);

        try {
            java.sql.PreparedStatement cde = connectDB.prepareStatement("select distinct cost_center FROM st_receive_requisation where requisition_no='" + requisitionTxt.getText().toString() + "'");

            ResultSet a = cde.executeQuery();

            while (a.next()) {
                jLabel2.setVisible(true);
                jLabel2.setText(a.getObject(1).toString());
            }

            pritemsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct item_code,item_description, units, quantity, date_due, date as Date_Raised, price Unit_Price,FALSE as save FROM st_receive_requisation where requisition_no='" + requisitionTxt.getText().toString() + "' order by 1;"));
            pritemsTbl.setShowGrid(true);
            jScrollPane2.setViewportView(pritemsTbl);
            this.closebtnt.doClick();
        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }
    private void tenderrecordstbltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbltMouseClicked
        // TODO add your handling code here:
        requisitionTxt.setText(tenderrecordstblt.getValueAt(tenderrecordstblt.getSelectedRow(), 0).toString());

        for (int k = 0; k < analysisdataTbl.getModel().getRowCount(); k++) {
            for (int r = 0; r < analysisdataTbl.getModel().getColumnCount(); r++) {
                analysisdataTbl.getModel().setValueAt(null, k, r);
            }
        }
        //clear table
        for (int k = 0; k < pritemsTbl.getModel().getRowCount(); k++) {
            for (int r = 0; r < pritemsTbl.getModel().getColumnCount(); r++) {
                pritemsTbl.getModel().setValueAt(null, k, r);
            }
        }
        jLabel2.setVisible(false);

        try {
            java.sql.PreparedStatement cde = connectDB.prepareStatement("select distinct cost_center FROM st_receive_requisation where requisition_no='" + requisitionTxt.getText().toString() + "'");

            ResultSet a = cde.executeQuery();

            a.next();
            jLabel2.setVisible(true);
            jLabel2.setText(a.getObject(1).toString());

            pritemsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct item_code,item_description, units, quantity, date_due, date as Date_Raised, price Unit_Price,FALSE as save FROM st_receive_requisation where requisition_no='" + requisitionTxt.getText().toString() + "';"));
            pritemsTbl.setShowGrid(true);
            jScrollPane2.setViewportView(pritemsTbl);
            this.closebtnt.doClick();
        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }//GEN-LAST:event_tenderrecordstbltMouseClicked

    private void closebtntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtntActionPerformed
        // TODO add your handling code here:
        searchtendert.dispose();
    }//GEN-LAST:event_closebtntActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        java.awt.Point p = requisitionTxt.getLocationOnScreen();
        searchtendert.setSize(400, 300);
        searchtendert.setLocation(p);
        searchtendert.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pritemsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pritemsTblMouseClicked
        // TODO add your handling code here:
        //select sum((issuing)/30)::numeric(30,2) from st_sub_stores where item='METRONIDAZOLE 200mg' and trans_date::date<= '2013-05-25'

        java.lang.String item = pritemsTbl.getValueAt(pritemsTbl.getSelectedRow(), 0).toString();
        Integer a = 0;
        Integer Month_average = 0;

        if (jCheckBox1.isSelected() == true) {
            try {
                //

                analysisdataTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, " SELECT   distinct department STORE,item_code,description, sum(qty) Stock_Balance, '0.00' as Monthly_Usage FROM stock_balance_qty  WHERE item_code ilike '" + item + "' and department= upper(department) and department ilike  ('%STORE%')   group by 1,2,3"));

                System.out.println(" SELECT  item_code,description, sum(qty) as Stock_Balance, '' Monthly_Usage FROM stock_balance_qty  WHERE item_code =  '" + item + "' group by 1,2 order by 1 asc ");

                java.sql.PreparedStatement st1 = connectDB.prepareStatement("select current_date-'" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(analysisDatepckr.getDate()) + "'");
                ResultSet rset2 = st1.executeQuery();
                System.out.println("select current_date-'" + com.afrisoftech.lib.SQLDateFormat.getSQLDate(analysisDatepckr.getDate()) + "'");

                while (rset2.next()) {

                    a = Integer.valueOf(rset2.getObject(1).toString());
                    Month_average = a / 30;

                }

                for (int i = 0; i < analysisdataTbl.getRowCount(); i++) {
                    try {
                        java.sql.Statement st = connectDB.createStatement();
                        // ResultSet rset1 = st.executeQuery("SELECT (sum(qty)::NUMERIC(15,0))/3 AS usage FROM stock_balance_qty where department = ''"+analysisdataTbl.getValueAt(i, 0)+"'' AND item_code = '" + pritemsTbl.getValueAt(i, 0) + "' AND dates BETWEEN (current_date-90) AND current_date");
                        ResultSet rset1 = st.executeQuery("SELECT (sum(issuing)/3)::NUMERIC(15,2) FROM st_sub_stores WHERE item='" + pritemsTbl.getModel().getValueAt(pritemsTbl.getSelectedRow(), 1).toString() + "' AND store_name ='" + analysisdataTbl.getValueAt(i, 0) + "' and trans_date>(current_date-90) ");

                        while (rset1.next()) {

                            analysisdataTbl.getModel().setValueAt(rset1.getObject(1), i, 4);

                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(AnalyseRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } //
            //         if(jCheckBox2.isSelected()==false){
            //
            //
            //         jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, item));
            //
            //
            //         }
            catch (SQLException ex) {
                Logger.getLogger(AnalyseRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        //

//         if(jCheckBox2.isSelected()==false){
//         
//         
//         jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, item));
//         
//         
//         }
    }//GEN-LAST:event_pritemsTblMouseClicked

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        jCheckBox1.setSelected(true);
        try {
            java.sql.PreparedStatement pst = connectDB.prepareStatement("select current_date-90");
            ResultSet rset2 = pst.executeQuery();
            while (rset2.next()) {

                analysisDatepckr.setDate(rset2.getDate(1));

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(AnalyseRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_formInternalFrameOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            for (int i = 0; i < pritemsTbl.getRowCount(); i++) {
                if (pritemsTbl.getModel().getValueAt(i, 7) == java.lang.Boolean.TRUE) {
                    java.sql.PreparedStatement pst = connectDB.prepareStatement("update st_receive_requisation set analysed=true, received_requisation=current_user,quantity= '" + Double.valueOf(pritemsTbl.getValueAt(i, 3).toString().replace(",", "")) + "' where requisition_no='" + requisitionTxt.getText().toString() + "' and item_code='" + pritemsTbl.getValueAt(i, 0) + "';");
                    pst.executeUpdate();
                }
            }
            java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("UPDATE st_pr_progress SET  dept_approval =? WHERE purchase_req ilike '%" + requisitionTxt.getText() + "%'");

            pstmt4.setObject(1, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase() + "-" + new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
            //pstmt4.setObject(2, requisitionTxt.getText().toString());

            pstmt4.executeUpdate();

            javax.swing.JOptionPane.showMessageDialog(this, " This PRQ has been Forwarded To Supplies Department", "CONFIRMATION", JOptionPane.INFORMATION_MESSAGE);
            com.afrisoftech.lib.GetItemInfo.updateTrail("Approved requisition " + requisitionTxt.getText(), connectDB);
            ClearTable.clearthisTable(pritemsTbl);
            ClearTable.clearthisTable(analysisdataTbl);
            requisitionTxt.setText(null);
            refresh();

        } catch (SQLException ex) {
            try {
                javax.swing.JOptionPane.showMessageDialog(this, ex);
                connectDB.rollback();
                ex.printStackTrace();
                Logger.getLogger(AnalyseRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(AnalyseRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void prs_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prs_tblMouseClicked
        // TODO add your handling code here:
        populate();
    }//GEN-LAST:event_prs_tblMouseClicked

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < pritemsTbl.getRowCount(); i++) {

            pritemsTbl.setValueAt(true, i, 7);

        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel action_buttons;
    private com.afrisoftech.lib.DatePicker analysisDatepckr;
    private javax.swing.JTable analysisdataTbl;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton closebtnt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable pritemsTbl;
    private javax.swing.JTable prs_tbl;
    private javax.swing.JTextField requisitionTxt;
    private javax.swing.JDialog searchtendert;
    private javax.swing.JPanel tenderrecordspnlt;
    private javax.swing.JScrollPane tenderrecordsspnlt;
    private javax.swing.JTable tenderrecordstblt;
    private javax.swing.JTextField tenderrecordstxtt;
    // End of variables declaration//GEN-END:variables
}
