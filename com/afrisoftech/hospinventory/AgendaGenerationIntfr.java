/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.ClearTable;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class AgendaGenerationIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form AgendaGenerationIntfr
     */
     java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    com.afrisoftech.lib.DBObject dbObject = new com.afrisoftech.lib.DBObject();
    private String evaluation_dtls;
    public AgendaGenerationIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

       /// refreshStatus = true;

        connectDB = connDb;

        pConnDB = pconnDB;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchtoCreateAgenda = new javax.swing.JDialog();
        tenderrecordspnlt = new javax.swing.JPanel();
        tenderrecordstxtt = new javax.swing.JTextField();
        tenderrecordsspnlt = new javax.swing.JScrollPane();
        tenderrecordstblt = new com.afrisoftech.dbadmin.JTable();
        closebtnt = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        tenderNoTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTbl = new com.afrisoftech.dbadmin.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        agendaDescTxtArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        closebtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        manualAgendaTxt = new javax.swing.JTextField();

        searchtoCreateAgenda.setModal(true);
        searchtoCreateAgenda.setUndecorated(true);
        searchtoCreateAgenda.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnlt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnlt.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxtt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxttCaretUpdate(evt);
            }
        });
        tenderrecordstxtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnlt.add(tenderrecordstxtt, gridBagConstraints);

        tenderrecordstblt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstblt.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstblt.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstblt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbltMouseClicked(evt);
            }
        });
        tenderrecordsspnlt.setViewportView(tenderrecordstblt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnlt.add(tenderrecordsspnlt, gridBagConstraints);

        closebtnt.setText("Close");
        closebtnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtntActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnlt.add(closebtnt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtoCreateAgenda.getContentPane().add(tenderrecordspnlt, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Generating An Agenda For Recommendation Of Bidders For Award");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        tenderNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(tenderNoTxt, gridBagConstraints);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 320);
        jPanel2.add(jPanel3, gridBagConstraints);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List of Bidders Recommended For Financial Evaluation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 51, 204)));

        itemsTbl.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        itemsTbl.setForeground(new java.awt.Color(102, 102, 102));
        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Bidder", "Item Code", "Item Awarded", "Units", "Quantity Awarded", "Quantity Quoted", "Unit Price", "Total", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTbl.setGridColor(new java.awt.Color(0, 0, 255));
        itemsTbl.setSelectionBackground(new java.awt.Color(255, 153, 153));
        itemsTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(itemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 4.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jLabel2.setText("Agenda Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel2, gridBagConstraints);

        jScrollPane2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        agendaDescTxtArea.setColumns(20);
        agendaDescTxtArea.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        agendaDescTxtArea.setRows(5);
        jScrollPane2.setViewportView(agendaDescTxtArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel2.add(jScrollPane2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel2.add(jSeparator1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setMnemonic('a');
        jButton2.setText("Generate Agenda For Award");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jButton2, gridBagConstraints);

        closebtn.setBackground(new java.awt.Color(204, 204, 255));
        closebtn.setMnemonic('l');
        closebtn.setText("     Close Form      ");
        closebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        jPanel2.add(closebtn, gridBagConstraints);

        jLabel3.setText("Manual Agenda Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel3, gridBagConstraints);

        manualAgendaTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 320);
        jPanel2.add(manualAgendaTxt, gridBagConstraints);

        jTabbedPane1.addTab("Agenda For Approvals for Award of Tender", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTabbedPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        System.out.println("Showing dialog");

        java.awt.Point point = this.tenderNoTxt.getLocationOnScreen();

        searchtoCreateAgenda.setSize(400, 200);

        searchtoCreateAgenda.setLocation(point);
        searchtoCreateAgenda.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tenderrecordstxttCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxttCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxtt.getCaretPosition() > 4) {
            System.out.print("Nothing");

            //        } else
        //
        //        {
           // tenderrecordstblt.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct a.quotation_no from st_technical_evaluation a,st_floated_quotations b where a.quotation_no= b.quotation_no and b.ordered=false and a.total_mark='100' and a.quotation_no ILIKE '%" + tenderrecordstxtt.getText() + "%' "));
            
            tenderrecordstblt.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT quotation_no FROM st_recommendation where quotation_no ILIKE '%" + tenderrecordstxtt.getText() + "%' "));
            //nb: cert_of_incorp is not null
            tenderrecordstblt.setShowHorizontalLines(false);

            tenderrecordsspnlt.setViewportView( tenderrecordstblt);

            //            int n=0, m=0;
            //            if(tenderrecordstbl3.getValueAt(n, m)==null){
                //            java.awt.Point p = tenderrecordsspnl3.getLocationOnScreen();
                //            jLabel9.setVisible(true);
                //            jLabel9.setLocation(p);
                //            }

        }
    }//GEN-LAST:event_tenderrecordstxttCaretUpdate

    private void tenderrecordstxttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxttActionPerformed

    private void tenderrecordstbltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbltMouseClicked
        // TODO add your handling code here:
        tenderNoTxt.setText(tenderrecordstblt.getValueAt(tenderrecordstblt.getSelectedRow(), 0).toString());
       // tenderNoTxt.setText(tenderrecordstblt.getValueAt(tenderrecordstblt.getSelectedRow(), 1).toString());

        int checker =0;

        ClearTable.clearthisTable(itemsTbl);

        try {

            java.sql.PreparedStatement cde = connectDB.prepareStatement("select distinct supplier_code, description,unit,quantity,price,(quantity*price),remarks from st_recommendation WHERE quotation_no='"+tenderNoTxt.getText()+"' AND agenda_approval=false and ordered_qty=0");
            ResultSet a = cde.executeQuery();
            int i= 0;
            while (a.next()) {
                itemsTbl.setValueAt(a.getObject(1).toString(), i, 0);
                itemsTbl.setValueAt(a.getObject(2).toString(), i, 2);
                itemsTbl.setValueAt(a.getObject(3).toString(), i, 3);
                itemsTbl.setValueAt(a.getDouble(4), i, 4);
                itemsTbl.setValueAt(a.getDouble(5), i, 6);
                itemsTbl.setValueAt(a.getDouble(6), i, 7);
                itemsTbl.setValueAt(dbObject.getDBObject(a.getObject(7), "-"), i, 8);
                

                java.sql.PreparedStatement pst = connectDB.prepareStatement("Select distinct supplier from st_technical_evaluation "
                        + "where supplier_code='"+itemsTbl.getValueAt(i, 0)+"' and quotation_no='"+tenderNoTxt.getText()+"'");
                    ResultSet getsupp = pst.executeQuery();
                    String supplier = null;
                          while(getsupp.next()){
                              
                          supplier = getsupp.getObject(1).toString();
                          System.out.println("This "+supplier);

                          
                          }
                      java.sql.PreparedStatement pst2 = connectDB.prepareStatement("select item_code , units,quantity,unit_price , (quantity*unit_price) from st_floated_quotations"
                                  + " where supplier ilike '"+supplier+"' and quotation_no ilike '"+tenderNoTxt.getText()+"' "
                              + "and item_description ilike '"+itemsTbl.getValueAt(i, 2)+"'");
                
                          ResultSet populate = pst2.executeQuery();
                           while(populate.next()){
                           
                           itemsTbl.setValueAt(populate.getObject(1).toString(), i, 1);
                           //itemsTbl.setValueAt(populate.getObject(2), i, 3);
                           //itemsTbl.setValueAt(populate.getObject(3), i, 4);
                           itemsTbl.setValueAt(populate.getDouble(3), i, 5);
                           //itemsTbl.setValueAt(populate.getObject(5), i, 6);
                           //itemsTbl.setValueAt(false, i, 7);
                           
                           }
                
                
                checker++;

                i++;

            }

            System.out.println(checker);
            if(checker<1){

                JOptionPane.showMessageDialog(this, "Bidders In This tender Have been exhausted");

            }

            //            jLabel1.setText("this form has only bidders who passed the preliminary evaluation; ONLY "+i+ "  bidders are visible for technical evaluation");
            //            jLabel1.setForeground(Color.red);
            //            jLabel1.setVisible(true);

            this.closebtnt.doClick();
            
            agendaDescTxtArea.setText("Application to Deliberate on and award Tender No "+tenderNoTxt.getText()+" : "+com.afrisoftech.lib.GetItemInfo.getITenderDesc(tenderNoTxt.getText(), connectDB)+"");
        }

        catch (Exception ex) {
            ex.printStackTrace();

        }
    }//GEN-LAST:event_tenderrecordstbltMouseClicked

    private void closebtntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtntActionPerformed
        // TODO add your handling code here:
        searchtoCreateAgenda.dispose();
    }//GEN-LAST:event_closebtntActionPerformed

    private void closebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closebtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
if(manualAgendaTxt.getText().length()<1 || agendaDescTxtArea.getText().length()<1){

JOptionPane.showMessageDialog(this, "Agenda Number/Agenda Description is a must");


}
        
else{  
        
        try {
             // TODO add your handling code here:
           connectDB.setAutoCommit(false);
           
  
              java.sql.PreparedStatement pstList = connectDB.prepareStatement("UPDATE st_recommendation SET agenda_no='"+manualAgendaTxt.getText()+"' WHERE  quotation_no='"+tenderNoTxt.getText()+"'");

               
              pstList.executeUpdate();
              
          
               ///tracking  

          
           
           evaluation_dtls=com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase()+"-"+manualAgendaTxt.getText()+"-"+com.afrisoftech.lib.UserName.getServerDate(connectDB);
           
    
          
           
           
               TenderTrack.TrackTable(connectDB, "agenda_gen", evaluation_dtls , tenderNoTxt.getText());

    

             
             JOptionPane.showMessageDialog(this, "Agenda For Award Generated "+manualAgendaTxt.getText(),"CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);
             
             ClearTable.clearthisTable(itemsTbl);
             
             
             
             
             
             
             
             
         } catch (SQLException ex) {
             
             Logger.getLogger(AgendaGenerationIntfr.class.getName()).log(Level.SEVERE, null, ex);
         }
}
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea agendaDescTxtArea;
    private javax.swing.JButton closebtn;
    private javax.swing.JButton closebtnt;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField manualAgendaTxt;
    private javax.swing.JDialog searchtoCreateAgenda;
    private javax.swing.JTextField tenderNoTxt;
    private javax.swing.JPanel tenderrecordspnlt;
    private javax.swing.JScrollPane tenderrecordsspnlt;
    private javax.swing.JTable tenderrecordstblt;
    private javax.swing.JTextField tenderrecordstxtt;
    // End of variables declaration//GEN-END:variables
}
