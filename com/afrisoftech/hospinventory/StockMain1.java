/*
 * medic.java
 *
 * Created on October 22, 2002, 11:51 AM
 */
package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */

public class StockMain1 extends javax.swing.JFrame {

    javax.swing.ImageIcon imgIcon;
    public static java.sql.Connection connectDB = null;
    public java.lang.String dbUserName = null;
    boolean domainsReset = false;
    String cashPoint = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    int Orders = 0;
    int Issuing = 1;
    int Receiving = 2;
    int Requisations = 3;
    int Outorders = 4;
    int journal = 6;
    int Banking = 7;
    int Stores = 8;
    int Lpos = 9;
    int TransfByNo = 10;
    int StoreSales = 11;
    int IssuesByStore = 12;
    int StoreAudit = 13;
    int DrugsPerPat = 20;
    int DrugFlow = 22;
    int SupplierInvoices = 87;
    int StockAudit = 203;
    int StockBal = 24;
    int StockItems = 25;
    int StoresStocks = 26;
    int PrescPerDoc = 27;
    int StoresStocksBl = 28;
    int DailyPrs = 94;
    int PrintReqInt = 52501;
    int ReplenReqInt = 52502;
    int Diag = 95;
    int Diagnosis = 97;
    int DrugCons = 2020;
    int MainStoresAudit = 29;
    int DailyTransf = 161;
    int TransfByStore = 160;
    int SalesByUser = 155;
    int SalesSumm = 154;
    int StatisticalSales = 165;
    int StoreCredited = 5273;
    int DetTransf = 2222;
    int DrugMovement = 170;
    int SuppCreditorsInv = 36;
    int DirectPurchGrn = 336;
    int PriceList = 200;
    int PrescFee = 201;
    int StockVal = 202;
    int StockCat = 203;
    int PrintOrder = 181;
    int AgedTransf = 185;
    int AgedReceive = 186;
    int SuppliesPerDrg = 187;
    int MainStoresBalDet = 188;
    int AvgCons = 189;
    int RequisationsByDep = 215;
    int WeeklyStoresDrgMvt = 220;
    int MonthlyStoresDrgMvt = 221;
    int PendReq = 238;
    int DeptCost = 240;
    int WeeklyTransf = 517;
    int OrdersSumm = 1101;
    int OrdersSummBySupp = 1102;
    int SalesByUserSumm = 1103;
    int SalesByDocSumm = 1104;
    int itemsForOrder = 516;
    int StockBelow = 518;
    int PrescPerCate = 519;
    int PrescPerCatePat = 520;
    int PharReceipt = 521;
    int PrescPerCatePatNos = 522;
    int DormantDrugs = 523;
    int PrescPerCatePatDate = 524;
    int PrintOrderInt = 525;
    int StoreReqByReq = 526;
    int summinvices = 1115;
    int StockBalMain = 224;
    int StoresBalTxt = 5271;
    // int StoresBalCateTxt = 52720;
    int StockCountSummary = 5273;
    int ItemsSupplied = 5274;
    int PatientBill = 16;
    int InterimPatientBill = 5272;
    int StockLedger = 5275;
    int Quotations = 5276;
    int DrugBalPerStore = 5277;

    /** Creates new form medic */
    public StockMain1(java.sql.Connection connDB, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDB;

        pConnDB = pconnDB;


        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPopupMenu1 = new javax.swing.JPopupMenu();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        fmgrBttn = new javax.swing.JButton();
        calcBttn = new javax.swing.JButton();
        brwsrBttn = new javax.swing.JButton();
        editButtn = new javax.swing.JButton();
        mailBttn = new javax.swing.JButton();
        mtmediaBttn = new javax.swing.JButton();
        helpBttn = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jPanel2 = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        medicdspane = new javax.swing.JDesktopPane();
        purchasemb = new javax.swing.JMenuBar();
        setupmn = new javax.swing.JMenu();
        mainstoremnit = new javax.swing.JMenuItem();
        branchesmnit = new javax.swing.JMenuItem();
        suppnonmnit = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JSeparator();
        packingmnit = new javax.swing.JMenuItem();
        stockcatlmnit = new javax.swing.JMenuItem();
        ItemCategorymnit = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JSeparator();
        supmn = new javax.swing.JMenu();
        supplrmnit = new javax.swing.JMenuItem();
        closesupplaccmnit = new javax.swing.JMenuItem();
        orderconsmnit = new javax.swing.JMenuItem();
        stockmngtmnit1 = new javax.swing.JMenuItem();
        stockmngtmnit = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        stockpricesetmnit = new javax.swing.JMenuItem();
        directPriceAdjustmentmnit = new javax.swing.JMenuItem();
        autoUpdatestockPricesMnit = new javax.swing.JMenuItem();
        Prescfeemnit = new javax.swing.JMenuItem();
        storeAllocationmnit = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JSeparator();
        updatedomainsmnit = new javax.swing.JMenuItem();
        userprofmnit = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        exitmnit1 = new javax.swing.JMenuItem();
        opsmn = new javax.swing.JMenu();
        requisitionsmn = new javax.swing.JMenu();
        rcvbrrequismnit = new javax.swing.JMenuItem();
        analysereqmnit = new javax.swing.JMenuItem();
        raiseprocreqmnit = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        quotationmnit = new javax.swing.JMenuItem();
        ordermn = new javax.swing.JMenu();
        Processordermnit = new javax.swing.JMenuItem();
        directordermnit = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        Cancelordermnit = new javax.swing.JMenuItem();
        ammendordermnit = new javax.swing.JMenuItem();
        stock1mn = new javax.swing.JMenu();
        directpurchmnit = new javax.swing.JMenuItem();
        receivingmnit = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        stockreturn2suppliermnit = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        issuingmnit = new javax.swing.JMenuItem();
        IssuingConmnit = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        stockmanagn = new javax.swing.JMenu();
        Astockcountmnit = new javax.swing.JMenuItem();
        addStockmnit = new javax.swing.JMenuItem();
        grtmnit = new javax.swing.JMenuItem();
        assetsmn = new javax.swing.JMenu();
        Depreciationmnit = new javax.swing.JMenuItem();
        Depreciationratesmnit = new javax.swing.JMenuItem();
        AssetAllocmnit = new javax.swing.JMenuItem();
        asstregmnit = new javax.swing.JMenuItem();
        assetlocmnit = new javax.swing.JMenuItem();
        insurancemnit = new javax.swing.JMenuItem();
        assetrepmnit = new javax.swing.JMenuItem();
        barcodegenmni = new javax.swing.JMenuItem();
        pharmacymn = new javax.swing.JMenu();
        pharmacyopmnit = new javax.swing.JMenuItem();
        raisebillmnit = new javax.swing.JMenuItem();
        raisebillipmnit = new javax.swing.JMenuItem();
        patientbillingmnit = new javax.swing.JMenuItem();
        dispenseprescriptionsmnit = new javax.swing.JMenuItem();
        pharmacyreturnsmnit = new javax.swing.JMenuItem();
        pharmacyoperatinsmnit = new javax.swing.JMenuItem();
        Receptcopyphamnit = new javax.swing.JMenuItem();
        dispensepaidmnit = new javax.swing.JMenuItem();
        reportsmn = new javax.swing.JMenu();
        listsmnit = new javax.swing.JMenu();
        stockitemsmnit = new javax.swing.JMenuItem();
        StockCategorymnit = new javax.swing.JMenuItem();
        suppliersmnit = new javax.swing.JMenuItem();
        pricelistmnit = new javax.swing.JMenuItem();
        stockpricesmnit = new javax.swing.JMenuItem();
        requisitionmnit = new javax.swing.JMenu();
        reqbyreqperstoremnit = new javax.swing.JMenuItem();
        pendreqbydepmnit = new javax.swing.JMenuItem();
        reqbydepmnit = new javax.swing.JMenuItem();
        requisationmnit = new javax.swing.JMenuItem();
        anarequsationmnit = new javax.swing.JMenuItem();
        stockReplenishmentReqmnit = new javax.swing.JMenuItem();
        intRequisitionmnit = new javax.swing.JMenuItem();
        purchasingmnit = new javax.swing.JMenu();
        intRequisitionmnit1 = new javax.swing.JMenuItem();
        printorderwithoutpricemnit = new javax.swing.JMenuItem();
        printordersmnit = new javax.swing.JMenuItem();
        ordersbysuppmnit = new javax.swing.JMenuItem();
        ordersSummnit = new javax.swing.JMenuItem();
        ordersmnit = new javax.swing.JMenuItem();
        outstandingordersmnit = new javax.swing.JMenuItem();
        supplierinvmnit = new javax.swing.JMenuItem();
        receivinmnit = new javax.swing.JMenu();
        receivedrepmnit = new javax.swing.JMenuItem();
        invoiceperSuppmnit = new javax.swing.JMenuItem();
        stocksreceivagedmnit = new javax.swing.JMenuItem();
        suppliesperdrugmnit = new javax.swing.JMenuItem();
        iteSsuppliedSummarymnit = new javax.swing.JMenuItem();
        stockmovtreportmnit = new javax.swing.JMenu();
        drugflowmnit = new javax.swing.JMenuItem();
        storesstockbalmnit = new javax.swing.JMenuItem();
        mainstoresAuditmnit = new javax.swing.JMenuItem();
        Dailytransfmnit = new javax.swing.JMenuItem();
        transfbystmnit = new javax.swing.JMenuItem();
        detailtransmnit = new javax.swing.JMenuItem();
        transferbynomnit = new javax.swing.JMenuItem();
        patientmnit = new javax.swing.JMenuItem();
        dailyprescrmnit = new javax.swing.JMenuItem();
        consumptionvsrevmnit = new javax.swing.JMenuItem();
        interiminvmnit = new javax.swing.JMenuItem();
        interimdescinvmnit = new javax.swing.JMenuItem();
        prespercatedocmnit = new javax.swing.JMenuItem();
        Prescriperdatemnit = new javax.swing.JMenuItem();
        presperdocsmnit = new javax.swing.JMenuItem();
        stockcardmnit = new javax.swing.JMenuItem();
        drugsbalsummarymnit = new javax.swing.JMenuItem();
        statisticalsmnit = new javax.swing.JMenu();
        stocksConsmnit = new javax.swing.JMenuItem();
        stockvariancesmnit = new javax.swing.JMenuItem();
        utilitymn = new javax.swing.JMenu();
        backupmnit = new javax.swing.JMenuItem();
        compactdatamnit = new javax.swing.JMenuItem();
        hospsysmnit = new javax.swing.JMenuItem();
        closingmonthmnit = new javax.swing.JMenuItem();
        closingyearmnit = new javax.swing.JMenuItem();
        lnfmn = new javax.swing.JMenu();
        swinglnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        winlnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        motiflnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        macmnit1 = new javax.swing.JCheckBoxMenuItem();
        skinmn = new javax.swing.JMenu();
        xpmnit1 = new javax.swing.JRadioButtonMenuItem();
        macos1mnit1 = new javax.swing.JRadioButtonMenuItem();
        whiltmnit1 = new javax.swing.JRadioButtonMenuItem();
        modernmnit1 = new javax.swing.JRadioButtonMenuItem();
        aquamnit1 = new javax.swing.JRadioButtonMenuItem();
        beosmnit1 = new javax.swing.JRadioButtonMenuItem();
        bbjmnit11 = new javax.swing.JRadioButtonMenuItem();
        helpmn = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(this.getCompanyName());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setPreferredSize(new java.awt.Dimension(43, 39));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        fmgrBttn.setToolTipText("File Manager");
        fmgrBttn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        fmgrBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel1.add(fmgrBttn);

        calcBttn.setToolTipText("Calculator");
        calcBttn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        calcBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel1.add(calcBttn);

        brwsrBttn.setToolTipText("Internet browser");
        brwsrBttn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        brwsrBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel1.add(brwsrBttn);

        editButtn.setToolTipText("Word processor");
        editButtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editButtn.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel1.add(editButtn);

        mailBttn.setToolTipText("Email utility");
        mailBttn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mailBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel1.add(mailBttn);

        mtmediaBttn.setToolTipText("Multimedia player");
        mtmediaBttn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mtmediaBttn.setMaximumSize(new java.awt.Dimension(20, 37));
        mtmediaBttn.setMinimumSize(new java.awt.Dimension(30, 37));
        mtmediaBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel1.add(mtmediaBttn);

        helpBttn.setToolTipText("Get system help");
        helpBttn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        helpBttn.setPreferredSize(new java.awt.Dimension(25, 25));
        jPanel1.add(helpBttn);

        jToolBar1.add(jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        mainPanel.add(jToolBar1, gridBagConstraints);

        jToolBar2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar2.setFloatable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 3));

        exitButton.setToolTipText("Exit Application");
        exitButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exitButton.setPreferredSize(new java.awt.Dimension(25, 25));
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel2.add(exitButton);

        jToolBar2.add(jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        mainPanel.add(jToolBar2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        mainPanel.add(medicdspane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        purchasemb.setPreferredSize(new java.awt.Dimension(354, 35));
        purchasemb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchasembMouseClicked(evt);
            }
        });

        setupmn.setMnemonic('S');
        setupmn.setText("Setup");
        setupmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupmnActionPerformed(evt);
            }
        });

        mainstoremnit.setText("Set Main Store");
        mainstoremnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainstoremnitActionPerformed(evt);
            }
        });
        setupmn.add(mainstoremnit);

        branchesmnit.setText("Stores");
        branchesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchesmnitActionPerformed(evt);
            }
        });
        setupmn.add(branchesmnit);

        suppnonmnit.setText("Supplies Non Pharm Allocation");
        suppnonmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppnonmnitActionPerformed(evt);
            }
        });
        setupmn.add(suppnonmnit);
        setupmn.add(jSeparator5);

        packingmnit.setText("Packing Types");
        packingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packingmnitActionPerformed(evt);
            }
        });
        setupmn.add(packingmnit);

        stockcatlmnit.setBackground(new java.awt.Color(244, 244, 240));
        stockcatlmnit.setText("Stock Categories");
        stockcatlmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockcatlmnitActionPerformed(evt);
            }
        });
        setupmn.add(stockcatlmnit);

        ItemCategorymnit.setText("Amend Item Category");
        ItemCategorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemCategorymnitActionPerformed(evt);
            }
        });
        setupmn.add(ItemCategorymnit);
        setupmn.add(jSeparator8);

        supmn.setMnemonic('S');
        supmn.setText("Supplier Register");

        supplrmnit.setText("Suppliers Registration");
        supplrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplrmnitActionPerformed(evt);
            }
        });
        supmn.add(supplrmnit);

        closesupplaccmnit.setText("Close Suppliers Account");
        closesupplaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closesupplaccmnitActionPerformed(evt);
            }
        });
        supmn.add(closesupplaccmnit);

        setupmn.add(supmn);

        orderconsmnit.setText("Ordering Constants");
        orderconsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderconsmnitActionPerformed(evt);
            }
        });
        setupmn.add(orderconsmnit);

        stockmngtmnit1.setText("Procurement Doc Conditions");
        stockmngtmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockmngtmnit1ActionPerformed(evt);
            }
        });
        setupmn.add(stockmngtmnit1);

        stockmngtmnit.setText("Sales Manager");
        stockmngtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockmngtmnitActionPerformed(evt);
            }
        });
        setupmn.add(stockmngtmnit);
        setupmn.add(jSeparator2);

        stockpricesetmnit.setText("Stock Price Setup");
        stockpricesetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockpricesetmnitActionPerformed(evt);
            }
        });
        setupmn.add(stockpricesetmnit);

        directPriceAdjustmentmnit.setText("Direct Price Adjustment");
        directPriceAdjustmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directPriceAdjustmentmnitActionPerformed(evt);
            }
        });
        setupmn.add(directPriceAdjustmentmnit);

        autoUpdatestockPricesMnit.setText("Auto-Update stock prices");
        autoUpdatestockPricesMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoUpdatestockPricesMnitActionPerformed(evt);
            }
        });
        setupmn.add(autoUpdatestockPricesMnit);

        Prescfeemnit.setText("Set Prescription Fee");
        Prescfeemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrescfeemnitActionPerformed(evt);
            }
        });
        setupmn.add(Prescfeemnit);

        storeAllocationmnit.setText("Store Allocation");
        storeAllocationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeAllocationmnitActionPerformed(evt);
            }
        });
        setupmn.add(storeAllocationmnit);
        setupmn.add(jSeparator7);

        updatedomainsmnit.setText("Update Domains");
        updatedomainsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatedomainsmnitActionPerformed(evt);
            }
        });
        setupmn.add(updatedomainsmnit);

        userprofmnit.setText("User Profiles");
        userprofmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userprofmnitActionPerformed(evt);
            }
        });
        setupmn.add(userprofmnit);
        setupmn.add(jSeparator6);

        exitmnit1.setText("Exit");
        exitmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitmnit1ActionPerformed(evt);
            }
        });
        setupmn.add(exitmnit1);

        purchasemb.add(setupmn);

        opsmn.setMnemonic('P');
        opsmn.setText("Purchasing");
        opsmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opsmnActionPerformed(evt);
            }
        });

        requisitionsmn.setText("Requisitions");

        rcvbrrequismnit.setText("Raise Branch Requisitions");
        rcvbrrequismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rcvbrrequismnitActionPerformed(evt);
            }
        });
        requisitionsmn.add(rcvbrrequismnit);

        analysereqmnit.setText("Analyse Requisitions");
        analysereqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analysereqmnitActionPerformed(evt);
            }
        });
        requisitionsmn.add(analysereqmnit);

        raiseprocreqmnit.setText("Raise Procurement Requisition");
        raiseprocreqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raiseprocreqmnitActionPerformed(evt);
            }
        });
        requisitionsmn.add(raiseprocreqmnit);

        opsmn.add(requisitionsmn);

        jMenu1.setText("Quotations");

        quotationmnit.setText("Quotation Request");
        quotationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quotationmnitActionPerformed(evt);
            }
        });
        jMenu1.add(quotationmnit);

        opsmn.add(jMenu1);

        ordermn.setText("Ordering");

        Processordermnit.setText("Process Orders");
        Processordermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessordermnitActionPerformed(evt);
            }
        });
        ordermn.add(Processordermnit);

        directordermnit.setText("Direct Ordering");
        directordermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directordermnitActionPerformed(evt);
            }
        });
        ordermn.add(directordermnit);
        ordermn.add(jSeparator1);

        Cancelordermnit.setText("Cancel Order");
        Cancelordermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelordermnitActionPerformed(evt);
            }
        });
        ordermn.add(Cancelordermnit);

        ammendordermnit.setText("Amend Order");
        ammendordermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ammendordermnitActionPerformed(evt);
            }
        });
        ordermn.add(ammendordermnit);

        opsmn.add(ordermn);

        purchasemb.add(opsmn);

        stock1mn.setMnemonic('t');
        stock1mn.setText("Stock");
        stock1mn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock1mnActionPerformed(evt);
            }
        });

        directpurchmnit.setText("Direct Purchasing");
        directpurchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directpurchmnitActionPerformed(evt);
            }
        });
        stock1mn.add(directpurchmnit);

        receivingmnit.setText("Receiving Goods - Internal LPO");
        receivingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivingmnitActionPerformed(evt);
            }
        });
        stock1mn.add(receivingmnit);

        jMenuItem1.setText("Receiving Goods - External LPO");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        stock1mn.add(jMenuItem1);

        stockreturn2suppliermnit.setText("Credit Note");
        stockreturn2suppliermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockreturn2suppliermnitActionPerformed(evt);
            }
        });
        stock1mn.add(stockreturn2suppliermnit);
        stock1mn.add(jSeparator4);

        issuingmnit.setText("Issuing Stockable Items");
        issuingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issuingmnitActionPerformed(evt);
            }
        });
        stock1mn.add(issuingmnit);

        IssuingConmnit.setText("Issuing Consumable Item");
        IssuingConmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssuingConmnitActionPerformed(evt);
            }
        });
        stock1mn.add(IssuingConmnit);
        stock1mn.add(jSeparator3);

        stockmanagn.setText("Stock Management");

        Astockcountmnit.setText("Stock Reconcilliation");
        Astockcountmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AstockcountmnitActionPerformed(evt);
            }
        });
        stockmanagn.add(Astockcountmnit);

        addStockmnit.setText("Add Stock to Stock Count");
        addStockmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockmnitActionPerformed(evt);
            }
        });
        stockmanagn.add(addStockmnit);

        stock1mn.add(stockmanagn);

        grtmnit.setText("Reverse GRN entries");
        grtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grtmnitActionPerformed(evt);
            }
        });
        stock1mn.add(grtmnit);

        purchasemb.add(stock1mn);

        assetsmn.setMnemonic('A');
        assetsmn.setText("Assets");

        Depreciationmnit.setText("Depreciation Methods");
        Depreciationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepreciationmnitActionPerformed(evt);
            }
        });
        assetsmn.add(Depreciationmnit);

        Depreciationratesmnit.setText("Depreciation Rates");
        Depreciationratesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepreciationratesmnitActionPerformed(evt);
            }
        });
        assetsmn.add(Depreciationratesmnit);

        AssetAllocmnit.setText("Asset Allocation");
        AssetAllocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssetAllocmnitActionPerformed(evt);
            }
        });
        assetsmn.add(AssetAllocmnit);

        asstregmnit.setText("Asset Register");
        asstregmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asstregmnitActionPerformed(evt);
            }
        });
        assetsmn.add(asstregmnit);

        assetlocmnit.setText("Asset Location");
        assetlocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetlocmnitActionPerformed(evt);
            }
        });
        assetsmn.add(assetlocmnit);

        insurancemnit.setText("Insurance");
        insurancemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insurancemnitActionPerformed(evt);
            }
        });
        assetsmn.add(insurancemnit);

        assetrepmnit.setText("Assets report");
        assetrepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetrepmnitActionPerformed(evt);
            }
        });
        assetsmn.add(assetrepmnit);

        barcodegenmni.setText("Bar-Code Generator");
        barcodegenmni.setActionCommand("Bar Code Generator");
        barcodegenmni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodegenmniActionPerformed(evt);
            }
        });
        assetsmn.add(barcodegenmni);

        purchasemb.add(assetsmn);

        pharmacymn.setMnemonic('h');
        pharmacymn.setText("Pharmacy");
        pharmacymn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacymnActionPerformed(evt);
            }
        });

        pharmacyopmnit.setText("Pharmacy Operations");
        pharmacyopmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacyopmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(pharmacyopmnit);

        raisebillmnit.setText("Raise Bill");
        raisebillmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raisebillmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(raisebillmnit);

        raisebillipmnit.setText("Raise Bill IP Consumables");
        raisebillipmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raisebillipmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(raisebillipmnit);

        patientbillingmnit.setText("Dispense/Billing");
        patientbillingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientbillingmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(patientbillingmnit);

        dispenseprescriptionsmnit.setText("Dispense Prescription");
        dispenseprescriptionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispenseprescriptionsmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(dispenseprescriptionsmnit);

        pharmacyreturnsmnit.setText("Pharmacy Returns");
        pharmacyreturnsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacyreturnsmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(pharmacyreturnsmnit);

        pharmacyoperatinsmnit.setText("Pharmacy POS");
        pharmacyoperatinsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacyoperatinsmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(pharmacyoperatinsmnit);

        Receptcopyphamnit.setText("Receipt Copy");
        Receptcopyphamnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceptcopyphamnitActionPerformed(evt);
            }
        });
        pharmacymn.add(Receptcopyphamnit);

        dispensepaidmnit.setText("Dispense Paid Prescription");
        dispensepaidmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispensepaidmnitActionPerformed(evt);
            }
        });
        pharmacymn.add(dispensepaidmnit);

        purchasemb.add(pharmacymn);

        reportsmn.setMnemonic('R');
        reportsmn.setText("Reports");

        listsmnit.setText("Lists");

        stockitemsmnit.setText("Stock Items");
        stockitemsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockitemsmnitActionPerformed(evt);
            }
        });
        listsmnit.add(stockitemsmnit);

        StockCategorymnit.setText("Stock Categories");
        StockCategorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StockCategorymnitActionPerformed(evt);
            }
        });
        listsmnit.add(StockCategorymnit);

        suppliersmnit.setText("Suppliers");
        suppliersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliersmnitActionPerformed(evt);
            }
        });
        listsmnit.add(suppliersmnit);

        pricelistmnit.setText("Price List");
        pricelistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricelistmnitActionPerformed(evt);
            }
        });
        listsmnit.add(pricelistmnit);

        stockpricesmnit.setText("Supplier Products");
        stockpricesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockpricesmnitActionPerformed(evt);
            }
        });
        listsmnit.add(stockpricesmnit);

        reportsmn.add(listsmnit);

        requisitionmnit.setText("Requisitions");

        reqbyreqperstoremnit.setText("Requisition per Store");
        reqbyreqperstoremnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqbyreqperstoremnitActionPerformed(evt);
            }
        });
        requisitionmnit.add(reqbyreqperstoremnit);

        pendreqbydepmnit.setText("Pending Requisitions By Department");
        pendreqbydepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendreqbydepmnitActionPerformed(evt);
            }
        });
        requisitionmnit.add(pendreqbydepmnit);

        reqbydepmnit.setText("Requisitions By Department");
        reqbydepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqbydepmnitActionPerformed(evt);
            }
        });
        requisitionmnit.add(reqbydepmnit);

        requisationmnit.setText("Requisations");
        requisationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requisationmnitActionPerformed(evt);
            }
        });
        requisitionmnit.add(requisationmnit);

        anarequsationmnit.setText("System Analysed Req.");
        anarequsationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anarequsationmnitActionPerformed(evt);
            }
        });
        requisitionmnit.add(anarequsationmnit);

        stockReplenishmentReqmnit.setText("Purchase Req.");
        stockReplenishmentReqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockReplenishmentReqmnitActionPerformed(evt);
            }
        });
        requisitionmnit.add(stockReplenishmentReqmnit);

        intRequisitionmnit.setText("Internal Requisition");
        intRequisitionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intRequisitionmnitActionPerformed(evt);
            }
        });
        requisitionmnit.add(intRequisitionmnit);

        reportsmn.add(requisitionmnit);

        purchasingmnit.setText("Purchasing");

        intRequisitionmnit1.setText("Quotations");
        intRequisitionmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intRequisitionmnit1ActionPerformed(evt);
            }
        });
        purchasingmnit.add(intRequisitionmnit1);

        printorderwithoutpricemnit.setText("L.P.O Without Prices");
        printorderwithoutpricemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printorderwithoutpricemnitActionPerformed(evt);
            }
        });
        purchasingmnit.add(printorderwithoutpricemnit);

        printordersmnit.setText("L.P.O With Prices");
        printordersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printordersmnitActionPerformed(evt);
            }
        });
        purchasingmnit.add(printordersmnit);

        ordersbysuppmnit.setText("LPO By Supplier");
        ordersbysuppmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordersbysuppmnitActionPerformed(evt);
            }
        });
        purchasingmnit.add(ordersbysuppmnit);

        ordersSummnit.setText("Orders Summary");
        ordersSummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordersSummnitActionPerformed(evt);
            }
        });
        purchasingmnit.add(ordersSummnit);

        ordersmnit.setText("Orders");
        ordersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordersmnitActionPerformed(evt);
            }
        });
        purchasingmnit.add(ordersmnit);

        outstandingordersmnit.setText("Outstanding Orders");
        outstandingordersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outstandingordersmnitActionPerformed(evt);
            }
        });
        purchasingmnit.add(outstandingordersmnit);

        supplierinvmnit.setText("Supplier Invoices");
        supplierinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierinvmnitActionPerformed(evt);
            }
        });
        purchasingmnit.add(supplierinvmnit);

        reportsmn.add(purchasingmnit);

        receivinmnit.setText("Stock Receiving");

        receivedrepmnit.setText("Received Items");
        receivedrepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivedrepmnitActionPerformed(evt);
            }
        });
        receivinmnit.add(receivedrepmnit);

        invoiceperSuppmnit.setText("Supplier GRN");
        invoiceperSuppmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceperSuppmnitActionPerformed(evt);
            }
        });
        receivinmnit.add(invoiceperSuppmnit);

        stocksreceivagedmnit.setText("Received Items Aged");
        stocksreceivagedmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocksreceivagedmnitActionPerformed(evt);
            }
        });
        receivinmnit.add(stocksreceivagedmnit);

        suppliesperdrugmnit.setText("Supplies Per Drug");
        suppliesperdrugmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliesperdrugmnitActionPerformed(evt);
            }
        });
        receivinmnit.add(suppliesperdrugmnit);

        iteSsuppliedSummarymnit.setText("Items Supplied Summary");
        iteSsuppliedSummarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iteSsuppliedSummarymnitActionPerformed(evt);
            }
        });
        receivinmnit.add(iteSsuppliedSummarymnit);

        reportsmn.add(receivinmnit);

        stockmovtreportmnit.setText("Stock Movement");

        drugflowmnit.setText("Item Flow");
        drugflowmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugflowmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(drugflowmnit);

        storesstockbalmnit.setText("Stores Stock Bal.");
        storesstockbalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storesstockbalmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(storesstockbalmnit);

        mainstoresAuditmnit.setText("Stock Movement");
        mainstoresAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainstoresAuditmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(mainstoresAuditmnit);

        Dailytransfmnit.setText("Daily Transfers");
        Dailytransfmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DailytransfmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(Dailytransfmnit);

        transfbystmnit.setText("Transfer By sSore");
        transfbystmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transfbystmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(transfbystmnit);

        detailtransmnit.setText("Detailed Transfer");
        detailtransmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailtransmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(detailtransmnit);

        transferbynomnit.setText("Transfers");
        transferbynomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferbynomnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(transferbynomnit);

        patientmnit.setText("Drugs Per Patient");
        patientmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(patientmnit);

        dailyprescrmnit.setText("Daily Prescriptions");
        dailyprescrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyprescrmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(dailyprescrmnit);

        consumptionvsrevmnit.setText("Consumption v/s Revenue");
        stockmovtreportmnit.add(consumptionvsrevmnit);

        interiminvmnit.setText("Interim Invoice");
        interiminvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interiminvmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(interiminvmnit);

        interimdescinvmnit.setText("Interim Invoice Breakdown");
        interimdescinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interimdescinvmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(interimdescinvmnit);

        prespercatedocmnit.setText("Prescription Per Category");
        prespercatedocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prespercatedocmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(prespercatedocmnit);

        Prescriperdatemnit.setText("Prescriptions per Date");
        Prescriperdatemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrescriperdatemnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(Prescriperdatemnit);

        presperdocsmnit.setText("Patient Presc. Per Category");
        presperdocsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presperdocsmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(presperdocsmnit);

        stockcardmnit.setText("St. Ledger & Control Card");
        stockcardmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockcardmnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(stockcardmnit);

        drugsbalsummarymnit.setText("Drugs Balance Summary");
        drugsbalsummarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugsbalsummarymnitActionPerformed(evt);
            }
        });
        stockmovtreportmnit.add(drugsbalsummarymnit);

        reportsmn.add(stockmovtreportmnit);

        statisticalsmnit.setText("Statistical Reports");

        stocksConsmnit.setText("Stocks Consumption");
        stocksConsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocksConsmnitActionPerformed(evt);
            }
        });
        statisticalsmnit.add(stocksConsmnit);

        stockvariancesmnit.setText("Stock Variances");
        stockvariancesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockvariancesmnitActionPerformed(evt);
            }
        });
        statisticalsmnit.add(stockvariancesmnit);

        reportsmn.add(statisticalsmnit);

        purchasemb.add(reportsmn);

        utilitymn.setMnemonic('U');
        utilitymn.setText("Utility");
        utilitymn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitymnActionPerformed(evt);
            }
        });

        backupmnit.setText("Backup");
        utilitymn.add(backupmnit);

        compactdatamnit.setText("Compacting Data");
        utilitymn.add(compactdatamnit);

        hospsysmnit.setText("Hospital System");
        hospsysmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospsysmnitActionPerformed(evt);
            }
        });
        utilitymn.add(hospsysmnit);

        closingmonthmnit.setText("Closing Month");
        utilitymn.add(closingmonthmnit);

        closingyearmnit.setText("Closing Year");
        utilitymn.add(closingyearmnit);

        purchasemb.add(utilitymn);

        lnfmn.setMnemonic('f');
        lnfmn.setText("Feel");

        buttonGroup2.add(swinglnfmnit1);
        swinglnfmnit1.setText("Metal");
        swinglnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swinglnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(swinglnfmnit1);

        buttonGroup2.add(winlnfmnit1);
        winlnfmnit1.setText("Windows");
        winlnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winlnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(winlnfmnit1);

        buttonGroup2.add(motiflnfmnit1);
        motiflnfmnit1.setText("Motif");
        motiflnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motiflnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(motiflnfmnit1);

        buttonGroup2.add(macmnit1);
        macmnit1.setText("Mac OS");
        macmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(macmnit1);

        skinmn.setText("Themes");

        buttonGroup3.add(xpmnit1);
        xpmnit1.setText("XP Luna");
        xpmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xpmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(xpmnit1);

        buttonGroup3.add(macos1mnit1);
        macos1mnit1.setText("Macintosh");
        macos1mnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macos1mnit1ActionPerformed(evt);
            }
        });
        skinmn.add(macos1mnit1);

        buttonGroup3.add(whiltmnit1);
        whiltmnit1.setText("Whistler");
        whiltmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiltmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(whiltmnit1);

        buttonGroup3.add(modernmnit1);
        modernmnit1.setText("Modern");
        modernmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(modernmnit1);

        buttonGroup3.add(aquamnit1);
        aquamnit1.setText("Aqua");
        aquamnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquamnit1ActionPerformed(evt);
            }
        });
        skinmn.add(aquamnit1);

        buttonGroup3.add(beosmnit1);
        beosmnit1.setText("BEOS");
        beosmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beosmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(beosmnit1);

        buttonGroup3.add(bbjmnit11);
        bbjmnit11.setText("BBJ");
        bbjmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbjmnit11ActionPerformed(evt);
            }
        });
        skinmn.add(bbjmnit11);

        lnfmn.add(skinmn);

        purchasemb.add(lnfmn);

        helpmn.setMnemonic('H');
        helpmn.setText("Help");
        helpmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpmnActionPerformed(evt);
            }
        });
        purchasemb.add(helpmn);

        setJMenuBar(purchasemb);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printorderwithoutpricemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printorderwithoutpricemnitActionPerformed
com.afrisoftech.lib.HosOrdersPanel dates = new com.afrisoftech.lib.HosOrdersPanel(this, pConnDB, true, this.Lpos, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_printorderwithoutpricemnitActionPerformed

    private void intRequisitionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intRequisitionmnitActionPerformed
        com.afrisoftech.lib.HosIntReqPanel dates = new com.afrisoftech.lib.HosIntReqPanel(this, pConnDB, true, this.PrintReqInt, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_intRequisitionmnitActionPerformed

    private void stockReplenishmentReqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockReplenishmentReqmnitActionPerformed
        com.afrisoftech.lib.HosReplenReqPanel dates = new com.afrisoftech.lib.HosReplenReqPanel(this, pConnDB, true, this.ReplenReqInt, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_stockReplenishmentReqmnitActionPerformed

    private void raiseprocreqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raiseprocreqmnitActionPerformed
        javax.swing.JInternalFrame dismth = new RaiseProcRequisintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // TODO add your handling code here:
    }//GEN-LAST:event_raiseprocreqmnitActionPerformed

    private void detailtransmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailtransmnitActionPerformed
        com.afrisoftech.lib.HosTransDetPanel dates = new com.afrisoftech.lib.HosTransDetPanel(this, pConnDB, true, this.DetTransf, connectDB);

        dates.setVisible(true);

    // TODO add your handling code here:
    }//GEN-LAST:event_detailtransmnitActionPerformed

    private void consumptionvsrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumptionvsrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel_1 dates = new com.afrisoftech.lib.HosDatePanel_1(this, true, this.DrugCons, connectDB);

        dates.setVisible(true);
    //com.afrisoftech.lib.HosStoreDatePanel dates = new com.afrisoftech.lib.HosStoreDatePane(this,pConnDB, true, this.DrugCons, connectDB);

    //    dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_consumptionvsrevmnitActionPerformed

    private void grtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grtmnitActionPerformed
        javax.swing.JInternalFrame dismth = new CreditNoteintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // TODO add your handling code here:
    }//GEN-LAST:event_grtmnitActionPerformed

    private void reqbyreqperstoremnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqbyreqperstoremnitActionPerformed
        com.afrisoftech.lib.HosStoresDatePanel dates = new com.afrisoftech.lib.HosStoresDatePanel(this, pConnDB, true, StoreReqByReq, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_reqbyreqperstoremnitActionPerformed

    private void stockmngtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockmngtmnitActionPerformed
        javax.swing.JInternalFrame dismth = new com.afrisoftech.hospinventory.StockMngtIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_stockmngtmnitActionPerformed

    private void mainstoremnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainstoremnitActionPerformed
        javax.swing.JInternalFrame dismth = new com.afrisoftech.hospinventory.MainStoreintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_mainstoremnitActionPerformed

    private void ItemCategorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemCategorymnitActionPerformed
        javax.swing.JInternalFrame dismth = new com.afrisoftech.hospinventory.AmmendMainStockCategoryintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_ItemCategorymnitActionPerformed

    private void ReceptcopyphamnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceptcopyphamnitActionPerformed
        com.afrisoftech.lib.HosReceiptsPatDatePanel dates = new com.afrisoftech.lib.HosReceiptsPatDatePanel(this, pConnDB, true, this.PharReceipt, connectDB);
        dates.setVisible(true);

// TODO add your handling code here:
    }//GEN-LAST:event_ReceptcopyphamnitActionPerformed

    private void pharmacyopmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacyopmnitActionPerformed
        com.afrisoftech.hospinventory.StockMain1.LoadComboTaskPanel LoadComboTaskPanel = new com.afrisoftech.hospinventory.StockMain1.LoadComboTaskPanel();

        LoadComboTaskPanel.start();
    // Add your handling code here:
    }//GEN-LAST:event_pharmacyopmnitActionPerformed
    // public com.afrisoftech.hospital.HospitalMain getMainClass() {

    public com.afrisoftech.hospinventory.StockMain1 getMainClass() {

        return this;

    }

    private class LoadComboTaskPanel extends java.lang.Thread {

        public void LoadComboTaskPanel() {
        }

        public void run() {
            getMainClass().setCursor(java.awt.Cursor.WAIT_CURSOR);
            com.afrisoftech.hospinventory.BillingTasksIntfr comp = new com.afrisoftech.hospinventory.BillingTasksIntfr(connectDB, pConnDB);
            medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            //   comp.registrationButton.doClick();
            try {
                comp.setSelected(true);
            } catch (java.beans.PropertyVetoException pvt) {
            }
            getMainClass().setCursor(java.awt.Cursor.DEFAULT_CURSOR);
            stop();
            destroy();
        }
    }

    private void pharmacyoperatinsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacyoperatinsmnitActionPerformed
        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select code from ac_cash_points_setup where description ilike current_user");
            while (rsetx.next()) {
                cashPoint = rsetx.getObject(1).toString();

            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND cash_point = '" + cashPoint + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                // javax.swing.JOptionPane.showMessageDialog(this, "There is no Shift running");

                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        // pstmt.setString(1, System.getProperty("cashpoint"));
                        pstmt.setString(1, cashPoint);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");


                    com.afrisoftech.hospinventory.PosBillingIntfr comp = new com.afrisoftech.hospinventory.PosBillingIntfr(connectDB, pConnDB);
                    medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {

                com.afrisoftech.hospinventory.PosBillingIntfr comp = new com.afrisoftech.hospinventory.PosBillingIntfr(connectDB, pConnDB);
                medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }



    // Add your handling code here:
    }//GEN-LAST:event_pharmacyoperatinsmnitActionPerformed

    private void ordersbysuppmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordersbysuppmnitActionPerformed
        com.afrisoftech.lib.HosCreditorsDatePanel dates = new com.afrisoftech.lib.HosCreditorsDatePanel(this, pConnDB, true, OrdersSummBySupp, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_ordersbysuppmnitActionPerformed

    private void ordersSummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordersSummnitActionPerformed
        com.afrisoftech.lib.HosStockDatePanel dates = new com.afrisoftech.lib.HosStockDatePanel(this, true, OrdersSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_ordersSummnitActionPerformed

    private void pendreqbydepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendreqbydepmnitActionPerformed
        com.afrisoftech.lib.HosStoresDatePanel dates = new com.afrisoftech.lib.HosStoresDatePanel(this, pConnDB, true, PendReq, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_pendreqbydepmnitActionPerformed

    private void reqbydepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqbydepmnitActionPerformed
        com.afrisoftech.lib.HosStoresDatePanel dates = new com.afrisoftech.lib.HosStoresDatePanel(this, pConnDB, true, this.RequisationsByDep, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_reqbydepmnitActionPerformed

    private void AstockcountmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AstockcountmnitActionPerformed
        javax.swing.JInternalFrame suff = new StockCountingAdjintfr(connectDB);
        medicdspane.add(suff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            suff.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_AstockcountmnitActionPerformed

    private void stocksConsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocksConsmnitActionPerformed
        com.afrisoftech.lib.HosProjectedConPanel dates = new com.afrisoftech.lib.HosProjectedConPanel(this, true, this.AvgCons, connectDB);

        dates.setVisible(true);

    // ItemsAvgConsPdf policy = new ItemsAvgConsPdf();
    // policy.ItemsAvgConsPdf(connectDB);  // Add your handling code here:
    }//GEN-LAST:event_stocksConsmnitActionPerformed

    private void suppliesperdrugmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliesperdrugmnitActionPerformed
        com.afrisoftech.lib.HosDrugsDatePanel dates = new com.afrisoftech.lib.HosDrugsDatePanel(this, pConnDB, true, this.SuppliesPerDrg, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_suppliesperdrugmnitActionPerformed

    private void stocksreceivagedmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocksreceivagedmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AgedReceive, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_stocksreceivagedmnitActionPerformed

    private void StockCategorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StockCategorymnitActionPerformed
        com.afrisoftech.lib.HosStockCatDatePanel dates = new com.afrisoftech.lib.HosStockCatDatePanel(this, pConnDB, true, this.StockCat, connectDB);

        dates.setVisible(true);
    // Add your handling code here:
    }//GEN-LAST:event_StockCategorymnitActionPerformed

    private void stockvariancesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockvariancesmnitActionPerformed
        com.afrisoftech.lib.HosStoresDatePanel dates = new com.afrisoftech.lib.HosStoresDatePanel(this, pConnDB, true, this.StockVal, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_stockvariancesmnitActionPerformed

    private void PrescfeemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrescfeemnitActionPerformed
        javax.swing.JInternalFrame dismth = new PrescriptionFeeIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    // Add your handling code here:
    }//GEN-LAST:event_PrescfeemnitActionPerformed

    private void pricelistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricelistmnitActionPerformed
        com.afrisoftech.lib.HosStoresDatePanel dates = new com.afrisoftech.lib.HosStoresDatePanel(this, pConnDB, true, this.PriceList, connectDB);

        dates.setVisible(true);
    // Add your handling code here:
    }//GEN-LAST:event_pricelistmnitActionPerformed

    private void invoiceperSuppmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceperSuppmnitActionPerformed
        com.afrisoftech.lib.HosCreditorsDatePanel dates = new com.afrisoftech.lib.HosCreditorsDatePanel(this, pConnDB, true, SuppCreditorsInv, connectDB);

        dates.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_invoiceperSuppmnitActionPerformed

    private void DailytransfmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DailytransfmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DailyTransf, connectDB);

        dates.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_DailytransfmnitActionPerformed

    private void transfbystmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transfbystmnitActionPerformed
        com.afrisoftech.lib.HosStoresDetailedDatePanel dates = new com.afrisoftech.lib.HosStoresDetailedDatePanel(this, pConnDB, true, this.TransfByStore, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_transfbystmnitActionPerformed

    private void closesupplaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closesupplaccmnitActionPerformed
        javax.swing.JInternalFrame dismth = new CloseSupplierAccIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_closesupplaccmnitActionPerformed

    private void supplierinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierinvmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.SupplierInvoices, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_supplierinvmnitActionPerformed

    private void ammendordermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ammendordermnitActionPerformed
        javax.swing.JInternalFrame dismth = new AmmendOrderintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
    }//GEN-LAST:event_ammendordermnitActionPerformed

    private void mainstoresAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainstoresAuditmnitActionPerformed
        com.afrisoftech.lib.HosStores dates = new com.afrisoftech.lib.HosStores(this, pConnDB, true, this.MainStoresAudit, connectDB);

        dates.setVisible(true);
    // Add your handling code here:
    }//GEN-LAST:event_mainstoresAuditmnitActionPerformed

    private void dailyprescrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyprescrmnitActionPerformed
        // com.afrisoftech.lib.HosStoresDatePanel dates = new com.afrisoftech.lib.HosStoresDatePanel(this,pConnDB, true, this.DailyPrs, connectDB);

        // dates.setVisible(true);

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DailyPrs, connectDB);

        dates.setVisible(true);

    // Add your handling code here:
    }//GEN-LAST:event_dailyprescrmnitActionPerformed

    private void stock1mnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock1mnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_stock1mnActionPerformed

    private void orderconsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderconsmnitActionPerformed
        javax.swing.JInternalFrame dismth = new OrderingConsIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    // Add your handling code here:
    }//GEN-LAST:event_orderconsmnitActionPerformed

    private void drugflowmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugflowmnitActionPerformed
        com.afrisoftech.lib.HosStoresDrugsDatePanel dates = new com.afrisoftech.lib.HosStoresDrugsDatePanel(this, pConnDB, true, this.DrugFlow, connectDB);

        dates.setVisible(true);
    // com.afrisoftech.lib.HosStoresDrugsDatePanel_1 dates = new com.afrisoftech.lib.HosStoresDrugsDatePanel_1(this,pConnDB, true, this.DrugFlow, connectDB);

    //dates.setVisible(true);

    }//GEN-LAST:event_drugflowmnitActionPerformed

    private void directordermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directordermnitActionPerformed
        javax.swing.JInternalFrame dismth = new DirectOrderingintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_directordermnitActionPerformed

    private void patientmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientmnitActionPerformed
        com.afrisoftech.lib.HosPatientDatePanel dates = new com.afrisoftech.lib.HosPatientDatePanel(this, pConnDB, true, this.DrugsPerPat, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_patientmnitActionPerformed

    private void pharmacyreturnsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacyreturnsmnitActionPerformed
        javax.swing.JInternalFrame dismth = new PharmReturnsIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_pharmacyreturnsmnitActionPerformed

    private void stockitemsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockitemsmnitActionPerformed
        com.afrisoftech.lib.HosStoresPriceNoPrice dates = new com.afrisoftech.lib.HosStoresPriceNoPrice(this, pConnDB, true, this.StockLedger, connectDB);

        dates.setVisible(true);
    // Add your handling code here:
    }//GEN-LAST:event_stockitemsmnitActionPerformed

    private void exitmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitmnit1ActionPerformed

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

            this.dispose();

        }        // Add your handling code here:
    }//GEN-LAST:event_exitmnit1ActionPerformed

    private void updatedomainsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatedomainsmnitActionPerformed

        this.domainsReset = true;

        this.updateActivityDomains();

        this.domainsReset = false;
    // Add your handling code here:
    }//GEN-LAST:event_updatedomainsmnitActionPerformed

    private void hospsysmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospsysmnitActionPerformed
        /*  com.afrisoftech.hospital.HospitalMain hospital = new com.afrisoftech.hospital.HospitalMain(this.connectDB, this.pConnDB);

        hospital.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        //this.setContentPane(hospitalStock.getContentPane());
        hospital.setVisible(true);

        this.hide();
         */// Add your handling code here:
    }//GEN-LAST:event_hospsysmnitActionPerformed

    private void storesstockbalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storesstockbalmnitActionPerformed
        com.afrisoftech.lib.HosStores dates = new com.afrisoftech.lib.HosStores(this, pConnDB, true, this.Stores, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_storesstockbalmnitActionPerformed

    private void patientbillingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientbillingmnitActionPerformed
        javax.swing.JInternalFrame dismth = new PatientsBillingIntfr_(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_patientbillingmnitActionPerformed

    private void stockpricesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockpricesmnitActionPerformed
        java.lang.Object[] memNos = null;

        memNos = this.getSuppName();

        System.out.println(memNos);

        java.lang.Object suppObj = javax.swing.JOptionPane.showInputDialog(this, "Please enter Supplier", "Price List", javax.swing.JOptionPane.OK_CANCEL_OPTION, imgIcon, memNos, memNos[0]);

        java.lang.String supName = suppObj.toString();

        com.afrisoftech.hospinventory.StockPricesPdf mdetails = new com.afrisoftech.hospinventory.StockPricesPdf();

        mdetails.StockPricesPdf(supName, connectDB);

    /*     StockPricesPdf policy = new StockPricesPdf();
    
    policy.StockPricesPdf(connectDB);  */      // Add your handling code here:
    }//GEN-LAST:event_stockpricesmnitActionPerformed

    private void receivedrepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivedrepmnitActionPerformed

        com.afrisoftech.lib.HosStockDatePanel dates = new com.afrisoftech.lib.HosStockDatePanel(this, true, this.Receiving, connectDB);

        dates.setVisible(true);
    //     ReceivedItemsPdf policy = new ReceivedItemsPdf();
    //   policy.ReceivedItemsPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_receivedrepmnitActionPerformed

    private void requisationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requisationmnitActionPerformed
        com.afrisoftech.lib.HosStockDatePanel dates = new com.afrisoftech.lib.HosStockDatePanel(this, true, this.Requisations, connectDB);

        dates.setVisible(true);
    //     RequisationPdf policy = new RequisationPdf();
    //    policy.RequisationPdf(connectDB);         // Add your handling code here:
    }//GEN-LAST:event_requisationmnitActionPerformed

    private void anarequsationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anarequsationmnitActionPerformed

        com.afrisoftech.lib.StoresReqDatePanel dates = new com.afrisoftech.lib.StoresReqDatePanel(this, pConnDB, true, this.Stores, connectDB);

        dates.setVisible(true);
//        AnalysedReqPdf policy = new AnalysedReqPdf();
//        policy.AnalysedReqPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_anarequsationmnitActionPerformed

    private void suppliersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliersmnitActionPerformed
        SuppliersPdf policy = new SuppliersPdf();
        policy.SuppliersPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_suppliersmnitActionPerformed

    private void outstandingordersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outstandingordersmnitActionPerformed
        com.afrisoftech.lib.HosStockDatePanel dates = new com.afrisoftech.lib.HosStockDatePanel(this, true, this.Outorders, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_outstandingordersmnitActionPerformed

    private void ordersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordersmnitActionPerformed
        com.afrisoftech.lib.HosStockDatePanel dates = new com.afrisoftech.lib.HosStockDatePanel(this, true, this.Orders, connectDB);

        dates.setVisible(true);
    //      OrderedItemsPdf policy = new OrderedItemsPdf();
    //     policy.OrderedItemsPdf(connectDB); // Add your handling code here:
    }//GEN-LAST:event_ordersmnitActionPerformed

    private void printordersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printordersmnitActionPerformed
        /*        java.lang.Object[] memNos = null;

        memNos = this.getOrderNo();

        System.out.println(memNos);

        java.lang.Object orderObj = javax.swing.JOptionPane.showInputDialog(this, "Please enter Supplier", "Price List", javax.swing.JOptionPane.OK_CANCEL_OPTION, imgIcon, memNos, memNos[0]);

        java.lang.String orderNo = orderObj.toString();

        com.afrisoftech.hospinventory.AllOrdersPdf mdetails = new com.afrisoftech.hospinventory.AllOrdersPdf();

        mdetails.AllOrdersPdf(orderNo, connectDB);
         */

        com.afrisoftech.lib.HosOrdersPanel dates = new com.afrisoftech.lib.HosOrdersPanel(this, pConnDB, true, this.PrintOrder, connectDB);

        dates.setVisible(true);
    // Add your handling code here:
    }//GEN-LAST:event_printordersmnitActionPerformed

    private void utilitymnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitymnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_utilitymnActionPerformed

    private void pharmacymnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacymnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_pharmacymnActionPerformed

    private void ProcessordermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessordermnitActionPerformed
        javax.swing.JInternalFrame dismth = new Orderintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_ProcessordermnitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        /*        this.invalidate();

        jTree1 = this.createJTree();

        this.validate();
         */// Add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void purchasembMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchasembMouseClicked
        /*
        this.invalidate();

        jTree1 = this.createJTree();

        this.validate();

         */       // Add your handling code here:
    }//GEN-LAST:event_purchasembMouseClicked

    private void stockreturn2suppliermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockreturn2suppliermnitActionPerformed
        //   javax.swing.JInternalFrame dismth = new SupplyReturnsintfr(connectDB, pConnDB);
        javax.swing.JInternalFrame dismth = new CreditNoteintfr_1(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_stockreturn2suppliermnitActionPerformed

    private void rcvbrrequismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rcvbrrequismnitActionPerformed
        javax.swing.JInternalFrame dismth = new RcvBranchRequisintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_rcvbrrequismnitActionPerformed

    private void analysereqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analysereqmnitActionPerformed
        javax.swing.JInternalFrame dismth = new AnalyseRequisintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_analysereqmnitActionPerformed

    private void directpurchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directpurchmnitActionPerformed
        javax.swing.JInternalFrame dismth = new DirectPurchintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_directpurchmnitActionPerformed

    private void opsmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opsmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_opsmnActionPerformed

    private void branchesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchesmnitActionPerformed
        javax.swing.JInternalFrame dismth = new Branchesintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_branchesmnitActionPerformed

    private void setupmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_setupmnActionPerformed

    private void bbjmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbjmnit11ActionPerformed

        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/bbjthemepack.zip"));

    // Add your handling code here:
    }//GEN-LAST:event_bbjmnit11ActionPerformed

    private void beosmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beosmnit1ActionPerformed

        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/beosthemepack.zip"));

    // Add your handling code here:
    }//GEN-LAST:event_beosmnit1ActionPerformed

    private void aquamnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquamnit1ActionPerformed

        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/aquathemepack.zip"));

    // Add your handling code here:
    }//GEN-LAST:event_aquamnit1ActionPerformed

    private void modernmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernmnit1ActionPerformed

        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/modernthemepack.zip"));

    // Add your handling code here:
    }//GEN-LAST:event_modernmnit1ActionPerformed

    private void whiltmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiltmnit1ActionPerformed

        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/whistlerthemepack.zip"));

    // Add your handling code here:
    }//GEN-LAST:event_whiltmnit1ActionPerformed

    private void macos1mnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macos1mnit1ActionPerformed

        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/macosthemepack.zip"));

    // Add your handling code here:
    }//GEN-LAST:event_macos1mnit1ActionPerformed

    private void xpmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xpmnit1ActionPerformed

        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/xplunathemepack.zip"));

    // Add your handling code here:
    }//GEN-LAST:event_xpmnit1ActionPerformed

    private void macmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macmnit1ActionPerformed

        this.changeTheme("it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel", null);

    // Add your handling code here:
    }//GEN-LAST:event_macmnit1ActionPerformed

    private void motiflnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motiflnfmnit1ActionPerformed

        this.changeTheme("com.sun.java.swing.plaf.motif.MotifLookAndFeel", null);

    // Add your handling code here:
    }//GEN-LAST:event_motiflnfmnit1ActionPerformed

    private void winlnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winlnfmnit1ActionPerformed


        this.changeTheme("com.sun.java.swing.plaf.windows.WindowsLookAndFeel", null);

    // Add your handling code here:
    }//GEN-LAST:event_winlnfmnit1ActionPerformed

    private void swinglnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swinglnfmnit1ActionPerformed

        this.changeTheme("javax.swing.plaf.metal.MetalLookAndFeel", null);

    // Add your handling code here:
    }//GEN-LAST:event_swinglnfmnit1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

            this.dispose();

        }
    // Add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void sharescontribmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sharescontribmnitActionPerformed

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

            this.dispose();

        }
    // Add your handling code here:
    }//GEN-LAST:event_sharescontribmnitActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

            this.dispose();

        }
    // Add your handling code here:
    }//GEN-LAST:event_exitButtonActionPerformed

    private void userprofmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userprofmnitActionPerformed
        UserSetupInventoryHospitalIntfr comp = new UserSetupInventoryHospitalIntfr(connectDB, pConnDB);
        
        //UsersetupInventoryIntfr comp = new UsersetupInventoryIntfr(connectDB, pConnDB);
        this.medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    // Add your handling code here:
    }//GEN-LAST:event_userprofmnitActionPerformed

    private void stockpricesetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockpricesetmnitActionPerformed
        javax.swing.JInternalFrame pdigg = new Stockpricesintfr(connectDB, pConnDB);
        medicdspane.add(pdigg, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            pdigg.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_stockpricesetmnitActionPerformed

    private void CancelordermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelordermnitActionPerformed
        javax.swing.JInternalFrame crdt = new Outstandingordersintfr(connectDB, pConnDB);
        medicdspane.add(crdt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            crdt.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    // Add your handling code here:
    }//GEN-LAST:event_CancelordermnitActionPerformed

    private void stockcatlmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockcatlmnitActionPerformed
        javax.swing.JInternalFrame hspt = new StockGroupsintfr(connectDB, pConnDB);
        medicdspane.add(hspt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            hspt.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_stockcatlmnitActionPerformed

    private void receivingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivingmnitActionPerformed
        javax.swing.JInternalFrame bed = new Receivingintfr(connectDB, pConnDB);
        medicdspane.add(bed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            bed.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    // Add your handling code here:
    }//GEN-LAST:event_receivingmnitActionPerformed

    private void issuingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issuingmnitActionPerformed

        javax.swing.JInternalFrame cred = new Issiuingintfr(connectDB, pConnDB);
        medicdspane.add(cred, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            cred.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_issuingmnitActionPerformed

    private void supplrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplrmnitActionPerformed
        javax.swing.JInternalFrame supp = new SupplierreGistrationintfr(connectDB, pConnDB);
        medicdspane.add(supp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            supp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_supplrmnitActionPerformed

    private void helpmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_helpmnActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

            this.dispose();

        }

    }//GEN-LAST:event_exitForm

    private void IssuingConmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssuingConmnitActionPerformed
        javax.swing.JInternalFrame cred = new IssiuingConsumablesintfr(connectDB, pConnDB);
        medicdspane.add(cred, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            cred.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_IssuingConmnitActionPerformed

    private void raisebillmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raisebillmnitActionPerformed
        javax.swing.JInternalFrame dismth = new PatientsBillingIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // TODO add your handling code here:
    }//GEN-LAST:event_raisebillmnitActionPerformed

    private void iteSsuppliedSummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iteSsuppliedSummarymnitActionPerformed
        com.afrisoftech.lib.HosStockDatePanel dates = new com.afrisoftech.lib.HosStockDatePanel(this, true, this.ItemsSupplied, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
}//GEN-LAST:event_iteSsuppliedSummarymnitActionPerformed

    private void interiminvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interiminvmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, this.PatientBill, connectDB);

        dates.setVisible(true);        // Add your handling code here:
}//GEN-LAST:event_interiminvmnitActionPerformed

    private void interimdescinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interimdescinvmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, this.InterimPatientBill, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
}//GEN-LAST:event_interimdescinvmnitActionPerformed

    private void addStockmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockmnitActionPerformed
        javax.swing.JInternalFrame suff = new StockAdditionintfr(connectDB);
        medicdspane.add(suff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            suff.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // TODO add your handling code here:
}//GEN-LAST:event_addStockmnitActionPerformed

    private void prespercatedocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prespercatedocmnitActionPerformed
        com.afrisoftech.lib.HosStoresDatePanel dates = new com.afrisoftech.lib.HosStoresDatePanel(this,pConnDB, true, this.PrescPerCate, connectDB);

        dates.setVisible(true);    // Add your handling code here:
}//GEN-LAST:event_prespercatedocmnitActionPerformed

    private void PrescriperdatemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrescriperdatemnitActionPerformed
        com.afrisoftech.lib.HosStoresCategoryDatePanel dates = new com.afrisoftech.lib.HosStoresCategoryDatePanel(this,pConnDB, true, this.PrescPerCatePatDate, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_PrescriperdatemnitActionPerformed

    private void presperdocsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presperdocsmnitActionPerformed
        com.afrisoftech.lib.HosStoresCategoryDatePanel dates = new com.afrisoftech.lib.HosStoresCategoryDatePanel(this,pConnDB, true, this.PrescPerCatePat, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
}//GEN-LAST:event_presperdocsmnitActionPerformed

    private void transferbynomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferbynomnitActionPerformed
        com.afrisoftech.lib.HosIssuesPanel dates = new com.afrisoftech.lib.HosIssuesPanel(this, pConnDB,true, this.TransfByNo, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
}//GEN-LAST:event_transferbynomnitActionPerformed

    private void packingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packingmnitActionPerformed
        javax.swing.JInternalFrame dismth = new Packingintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // TODO add your handling code here:
}//GEN-LAST:event_packingmnitActionPerformed
 
    private void dispenseprescriptionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispenseprescriptionsmnitActionPerformed
    javax.swing.JInternalFrame dismth = new DispenseBillingIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_dispenseprescriptionsmnitActionPerformed

    private void stockcardmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockcardmnitActionPerformed
 com.afrisoftech.lib.HosStoresDrugsDatePanel dates = new com.afrisoftech.lib.HosStoresDrugsDatePanel(this, pConnDB, true, this.StockLedger, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_stockcardmnitActionPerformed

    private void dispensepaidmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispensepaidmnitActionPerformed
javax.swing.JInternalFrame dismth = new DispenseIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_dispensepaidmnitActionPerformed

    private void quotationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quotationmnitActionPerformed
javax.swing.JInternalFrame dismth = new com.afrisoftech.hospinventory.QuotationsInfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_quotationmnitActionPerformed

    private void intRequisitionmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intRequisitionmnit1ActionPerformed
com.afrisoftech.lib.HosQuotationPanel dates = new com.afrisoftech.lib.HosQuotationPanel(this, pConnDB, true, this.Quotations, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_intRequisitionmnit1ActionPerformed

    private void DepreciationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepreciationmnitActionPerformed
        com.afrisoftech.accounting.DepreciationMethodsintfr comp = new com.afrisoftech.accounting.DepreciationMethodsintfr(connectDB, pConnDB);
        medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
}//GEN-LAST:event_DepreciationmnitActionPerformed

    private void DepreciationratesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepreciationratesmnitActionPerformed
        com.afrisoftech.accounting.Depreciationintfr comp = new com.afrisoftech.accounting.Depreciationintfr(connectDB, pConnDB);
        medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_DepreciationratesmnitActionPerformed

    private void AssetAllocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssetAllocmnitActionPerformed
        com.afrisoftech.hospinventory.AssetAllocationIntfr prod = new com.afrisoftech.hospinventory.AssetAllocationIntfr(connectDB, pConnDB);
        medicdspane.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
}//GEN-LAST:event_AssetAllocmnitActionPerformed

    private void asstregmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asstregmnitActionPerformed
        AssetsRegintfr comp = new AssetsRegintfr(connectDB, pConnDB);
        medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_asstregmnitActionPerformed

    private void assetlocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetlocmnitActionPerformed
        AssetsLocIntfr comp = new AssetsLocIntfr(connectDB, pConnDB);
        medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
}//GEN-LAST:event_assetlocmnitActionPerformed

    private void insurancemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insurancemnitActionPerformed
        AsseInsuranceIntfr comp = new AsseInsuranceIntfr(connectDB, pConnDB);
        medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
}//GEN-LAST:event_insurancemnitActionPerformed

    private void assetrepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetrepmnitActionPerformed
        com.afrisoftech.reports.AssetsRegPdf comp = new com.afrisoftech.reports.AssetsRegPdf();
        comp.AssetsRegPdf(connectDB);   // Add your handling code here:
}//GEN-LAST:event_assetrepmnitActionPerformed

    private void barcodegenmniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodegenmniActionPerformed
        com.afrisoftech.hospinventory.BarCodeGeneratorIntfr prod = new com.afrisoftech.hospinventory.BarCodeGeneratorIntfr(connectDB, pConnDB);
        medicdspane.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
}//GEN-LAST:event_barcodegenmniActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        javax.swing.JInternalFrame bed = new ReceivingWithoutLPOintfr(connectDB, pConnDB);
        medicdspane.add(bed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            bed.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void autoUpdatestockPricesMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoUpdatestockPricesMnitActionPerformed
        javax.swing.JInternalFrame bed = new StockpricesAutoUpdateIntfr(connectDB, pConnDB);
        medicdspane.add(bed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            bed.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_autoUpdatestockPricesMnitActionPerformed

    private void directPriceAdjustmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directPriceAdjustmentmnitActionPerformed
         javax.swing.JInternalFrame bed = new DirectStockPricesSetupintfr(connectDB, pConnDB);
        medicdspane.add(bed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            bed.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // TODO add your handling code here:
    }//GEN-LAST:event_directPriceAdjustmentmnitActionPerformed

    private void storeAllocationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeAllocationmnitActionPerformed
        com.afrisoftech.accounting.PharmacyPointsIntfr comp = new com.afrisoftech.accounting.PharmacyPointsIntfr(connectDB, pConnDB);
        medicdspane.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_storeAllocationmnitActionPerformed

    private void suppnonmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppnonmnitActionPerformed
        com.afrisoftech.hospinventory.StoreSuppliesintfr dismth = new com.afrisoftech.hospinventory.StoreSuppliesintfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_suppnonmnitActionPerformed

    private void raisebillipmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raisebillipmnitActionPerformed
      com.afrisoftech.hospinventory.PatientsBillingIpIntfr dismth = new com.afrisoftech.hospinventory.PatientsBillingIpIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } 
        
        // TODO add your handling code here:
    }//GEN-LAST:event_raisebillipmnitActionPerformed

    private void stockmngtmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockmngtmnit1ActionPerformed
         com.afrisoftech.hospinventory.CommentsOnDocumentsIntfr dismth = new com.afrisoftech.hospinventory.CommentsOnDocumentsIntfr(connectDB, pConnDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } 
        
        // TODO add your handling code here:
    }//GEN-LAST:event_stockmngtmnit1ActionPerformed

    private void drugsbalsummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugsbalsummarymnitActionPerformed
com.afrisoftech.lib.HosDrugsSummaryPanel dates = new com.afrisoftech.lib.HosDrugsSummaryPanel(this, pConnDB, true, this.DrugBalPerStore, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_drugsbalsummarymnitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        StockMain1 stockInstance = new StockMain1(connect2DB(), getPooledConnectionSource());

        stockInstance.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        // stockInstance.setSize(java.awt.Toolkit.getDefaultToolkit().getScreenSize());

        stockInstance.setVisible(true);

    }

    public static java.sql.Connection connect2DB() {

        java.sql.Connection connDBStock = null;

        try {

            java.lang.Class.forName("org.postgresql.Driver");

        } catch (java.lang.ClassNotFoundException cnf) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), cnf.getMessage());

        }

        try {

            connDBStock = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/medic", "postgres", "pilsiner");

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());

        }

        return connDBStock;

    }

    java.lang.String getCompanyName() {

        java.lang.String title = null;

        try {

            java.lang.Class.forName("org.postgresql.Driver");

        } catch (java.lang.ClassNotFoundException cnf) {
        }

        try {

            //        java.sql.Connection cn = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital", "postgres", "pilsiner");

            java.sql.Statement stmt1 = this.connectDB.createStatement();

            java.sql.ResultSet rs1 = stmt1.executeQuery("select hospital_name from pb_hospitalprofile");

            while (rs1.next()) {

                title = (rs1.getString(1));
            }

        } catch (java.sql.SQLException sqlEx) {
            //javax.swing.JOptionPane.showMessageDialog(this, "There is a problem trying to fetch Company Name from database. Contact System Administrator", "Missing Company Profile!", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
        return title;
    }

    public void changeThemeByUrl(java.lang.String lnf, java.net.URL themepack) {

        java.lang.String themepackPath = null;


        com.l2fprod.gui.plaf.skin.Skin skin = null;

        //  System.out.println(themepackPath);

        try {

            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);

        } catch (java.lang.Exception exec) {
        }

        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);

        java.awt.Component[] component_array = null;


        component_array = this.getComponents();

        try {

            try {

                try {

                    try {


                        javax.swing.UIManager.setLookAndFeel(lnf);

                        jToolBar1.updateUI();

                        this.jPopupMenu1.updateUI();

                        javax.swing.SwingUtilities.updateComponentTreeUI(this);

                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());

                        javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);

                        this.purchasemb.setBorder(new javax.swing.border.TitledBorder(null, "Inventory/Stock System", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));


                    } catch (java.lang.ClassNotFoundException cnfExec) {

                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());

                    }


                } catch (java.lang.InstantiationException instExec) {

                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());

                }

            } catch (java.lang.IllegalAccessException illegExec) {

                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());

            }

        } catch (javax.swing.UnsupportedLookAndFeelException unsuppExec) {

            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());

        }

    }

    public void changeTheme(java.lang.String lnf, java.lang.String themepack) {

        java.lang.String themepackPath = null;


        com.l2fprod.gui.plaf.skin.Skin skin = null;

        //  System.out.println(themepackPath);

        try {

            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);

        } catch (java.lang.Exception exec) {
            // javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
        }

        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);

        java.awt.Component[] component_array = null;


        component_array = this.getComponents();

        try {

            try {

                try {

                    try {


                        javax.swing.UIManager.setLookAndFeel(lnf);

                        jToolBar1.updateUI();

                        this.jPopupMenu1.updateUI();

                        javax.swing.SwingUtilities.updateComponentTreeUI(this);

                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());

                        javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);

                        this.purchasemb.setBorder(new javax.swing.border.TitledBorder(null, "Inventory/Stock System", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));


                    } catch (java.lang.ClassNotFoundException cnfExec) {

                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());

                    }


                } catch (java.lang.InstantiationException instExec) {

                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());

                }

            } catch (java.lang.IllegalAccessException illegExec) {

                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());

            }

        } catch (javax.swing.UnsupportedLookAndFeelException unsuppExec) {

            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());

        }

    }

    public void menuItemsDisabler(java.lang.Object[] menuList2Disable) {

        java.lang.reflect.Field[] fieldsArray = null;

        javax.swing.JMenuItem disMenuItems = null;


        try {
            java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hospinventory.StockMain1");

            try {

                fieldsArray = classMain.getDeclaredFields();

                for (int n = 0; n < fieldsArray.length; n++) {

                    if (fieldsArray[n].getName().endsWith("mnit")) {

                        disMenuItems = (javax.swing.JMenuItem) fieldsArray[n].get(this);

                        //System.out.println(fieldsArray[n].getName()+"\t"+"\t"+"\t"+disMenuItems.getText());


                        // disMenuItems.setEnabled(false);
                        disMenuItems.setVisible(false);

                        for (int m = 0; m < menuList2Disable.length; m++) {

                            if (fieldsArray[n].getName().equals(menuList2Disable[m])) {

                                java.lang.Object obj = (java.lang.Object) fieldsArray[n];

                                try {

                                    javax.swing.JMenuItem men2dis = (javax.swing.JMenuItem) fieldsArray[n].get(this);

                                    men2dis.setVisible(true);

                                } catch (java.lang.IllegalAccessException illAcc) {

                                    System.out.println(illAcc.getMessage());

                                }

                            }

                        }

                    }

                }


            } catch (java.lang.IllegalAccessException illAcc) {

                System.out.println(illAcc.getMessage());

            }

        } catch (java.lang.ClassNotFoundException clsNotFnd) {

            javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");

        }

    }

    public static org.netbeans.lib.sql.pool.PooledConnectionSource getPooledConnectionSource() {

        org.netbeans.lib.sql.pool.PooledConnectionSource pooledConnectionSource1 = new org.netbeans.lib.sql.pool.PooledConnectionSource();

        pooledConnectionSource1.setDatabase("jdbc:postgresql://localhost:5432/medic");

        pooledConnectionSource1.setDriver("org.postgresql.Driver");

        pooledConnectionSource1.setPassword("02ac219a6b011019ea966757de3451d2399ce04dd82596d3ba4266a8845ab7f80861", true);

        pooledConnectionSource1.setUsername("postgres");

        return pooledConnectionSource1;
    }

    public javax.swing.JTree createJTree() {

        javax.swing.JTree treeModel = new javax.swing.JTree();

        treeModel.add(this.purchasemb);

        return treeModel;
    }

    public java.lang.Object[] getSuppName() {

        java.util.Vector memVector = new java.util.Vector(1, 1);

        java.lang.Object[] suppObj = null;



        try {


            java.sql.Statement connStmt = connectDB.createStatement();

            java.sql.ResultSet rSet = connStmt.executeQuery("SELECT DISTINCT supplier FROM st_product_list");

            while (rSet.next()) {

                memVector.addElement(rSet.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        suppObj = memVector.toArray();

        return suppObj;

    }

    public java.lang.Object[] getOrderNo() {

        java.util.Vector memVector = new java.util.Vector(1, 1);

        java.lang.Object[] orderObj = null;



        try {


            java.sql.Statement connStmt = connectDB.createStatement();

            java.sql.ResultSet rSet = connStmt.executeQuery("SELECT DISTINCT order_no FROM st_orders");

            while (rSet.next()) {

                memVector.addElement(rSet.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        orderObj = memVector.toArray();

        return orderObj;

    }

    //   public javax.swing.JMenuBar getJMenuBar() {
    //       return this.purchasemb;
    //   }
    public void updateActivityDomains() {

        if (domainsReset) {

            try {

                java.sql.PreparedStatement pstmt_del = this.connectDB.prepareStatement("DELETE FROM menu_item_list WHERE app_name = 'hospital_inventory'");

                pstmt_del.execute();

            } catch (java.sql.SQLException sqlExec) {

                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

            }

            try {

                java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hospinventory.StockMain1");

                java.lang.reflect.Field[] fieldsArray = classMain.getDeclaredFields();

                for (int n = 0; n < fieldsArray.length; n++) {

                    if (fieldsArray[n].getName().endsWith("mnit")) {


                        try {


                            javax.swing.JMenuItem disMenuItems = (javax.swing.JMenuItem) fieldsArray[n].get(this);


                            try {


                                Class.forName("org.postgresql.Driver");


                            } catch (java.lang.ClassNotFoundException cnfExec) {


                                System.out.println("Can't locate PostgreSQL driver");


                            }

                            try {

                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into menu_item_list values(?, ?, ?)");

                                System.out.println("Ready to insert menu items");

                                pstmt.setString(1, fieldsArray[n].getName());

                                pstmt.setString(2, disMenuItems.getText());

                                pstmt.setString(3, "hospital_inventory");

                                pstmt.executeUpdate();

                            } catch (java.sql.SQLException sq) {

                                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                                System.out.println(sq.getMessage());

                            }



                        } catch (java.lang.IllegalAccessException illAcc) {

                            System.out.println(illAcc.getMessage());

                        }
                    }

                }

            } catch (java.lang.ClassNotFoundException clsNotFnd) {

                javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");

            }
        }

    }

    public static javax.swing.JMenuBar getStockMenuBar() {

        return purchasemb;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AssetAllocmnit;
    private javax.swing.JMenuItem Astockcountmnit;
    private javax.swing.JMenuItem Cancelordermnit;
    private javax.swing.JMenuItem Dailytransfmnit;
    private javax.swing.JMenuItem Depreciationmnit;
    private javax.swing.JMenuItem Depreciationratesmnit;
    private javax.swing.JMenuItem IssuingConmnit;
    private javax.swing.JMenuItem ItemCategorymnit;
    private javax.swing.JMenuItem Prescfeemnit;
    private javax.swing.JMenuItem Prescriperdatemnit;
    private javax.swing.JMenuItem Processordermnit;
    private javax.swing.JMenuItem Receptcopyphamnit;
    private javax.swing.JMenuItem StockCategorymnit;
    private javax.swing.JMenuItem addStockmnit;
    private javax.swing.JMenuItem ammendordermnit;
    private javax.swing.JMenuItem analysereqmnit;
    private javax.swing.JMenuItem anarequsationmnit;
    private javax.swing.JRadioButtonMenuItem aquamnit1;
    private javax.swing.JMenuItem assetlocmnit;
    private javax.swing.JMenuItem assetrepmnit;
    private javax.swing.JMenu assetsmn;
    private javax.swing.JMenuItem asstregmnit;
    private javax.swing.JMenuItem autoUpdatestockPricesMnit;
    private javax.swing.JMenuItem backupmnit;
    private javax.swing.JMenuItem barcodegenmni;
    private javax.swing.JRadioButtonMenuItem bbjmnit11;
    private javax.swing.JRadioButtonMenuItem beosmnit1;
    private javax.swing.JMenuItem branchesmnit;
    private javax.swing.JButton brwsrBttn;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton calcBttn;
    private javax.swing.JMenuItem closesupplaccmnit;
    private javax.swing.JMenuItem closingmonthmnit;
    private javax.swing.JMenuItem closingyearmnit;
    private javax.swing.JMenuItem compactdatamnit;
    private javax.swing.JMenuItem consumptionvsrevmnit;
    private javax.swing.JMenuItem dailyprescrmnit;
    private javax.swing.JMenuItem detailtransmnit;
    private javax.swing.JMenuItem directPriceAdjustmentmnit;
    public static javax.swing.JMenuItem directordermnit;
    private javax.swing.JMenuItem directpurchmnit;
    private javax.swing.JMenuItem dispensepaidmnit;
    private javax.swing.JMenuItem dispenseprescriptionsmnit;
    private javax.swing.JMenuItem drugflowmnit;
    private javax.swing.JMenuItem drugsbalsummarymnit;
    private javax.swing.JButton editButtn;
    private javax.swing.JButton exitButton;
    private javax.swing.JMenuItem exitmnit1;
    private javax.swing.JButton fmgrBttn;
    private javax.swing.JMenuItem grtmnit;
    private javax.swing.JButton helpBttn;
    private javax.swing.JMenu helpmn;
    private javax.swing.JMenuItem hospsysmnit;
    private javax.swing.JMenuItem insurancemnit;
    private javax.swing.JMenuItem intRequisitionmnit;
    private javax.swing.JMenuItem intRequisitionmnit1;
    private javax.swing.JMenuItem interimdescinvmnit;
    private javax.swing.JMenuItem interiminvmnit;
    private javax.swing.JMenuItem invoiceperSuppmnit;
    public static javax.swing.JMenuItem issuingmnit;
    private javax.swing.JMenuItem iteSsuppliedSummarymnit;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JMenu listsmnit;
    private javax.swing.JMenu lnfmn;
    private javax.swing.JCheckBoxMenuItem macmnit1;
    private javax.swing.JRadioButtonMenuItem macos1mnit1;
    private javax.swing.JButton mailBttn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuItem mainstoremnit;
    private javax.swing.JMenuItem mainstoresAuditmnit;
    public static javax.swing.JDesktopPane medicdspane;
    private javax.swing.JRadioButtonMenuItem modernmnit1;
    private javax.swing.JCheckBoxMenuItem motiflnfmnit1;
    private javax.swing.JButton mtmediaBttn;
    private javax.swing.JMenu opsmn;
    private javax.swing.JMenuItem orderconsmnit;
    private javax.swing.JMenu ordermn;
    private javax.swing.JMenuItem ordersSummnit;
    private javax.swing.JMenuItem ordersbysuppmnit;
    private javax.swing.JMenuItem ordersmnit;
    private javax.swing.JMenuItem outstandingordersmnit;
    private javax.swing.JMenuItem packingmnit;
    public static javax.swing.JMenuItem patientbillingmnit;
    private javax.swing.JMenuItem patientmnit;
    private javax.swing.JMenuItem pendreqbydepmnit;
    private javax.swing.JMenu pharmacymn;
    public static javax.swing.JMenuItem pharmacyoperatinsmnit;
    private javax.swing.JMenuItem pharmacyopmnit;
    public static javax.swing.JMenuItem pharmacyreturnsmnit;
    private javax.swing.JMenuItem prespercatedocmnit;
    private javax.swing.JMenuItem presperdocsmnit;
    private javax.swing.JMenuItem pricelistmnit;
    private javax.swing.JMenuItem printordersmnit;
    private javax.swing.JMenuItem printorderwithoutpricemnit;
    public static javax.swing.JMenuBar purchasemb;
    private javax.swing.JMenu purchasingmnit;
    private javax.swing.JMenuItem quotationmnit;
    private javax.swing.JMenuItem raisebillipmnit;
    private javax.swing.JMenuItem raisebillmnit;
    private javax.swing.JMenuItem raiseprocreqmnit;
    private javax.swing.JMenuItem rcvbrrequismnit;
    private javax.swing.JMenuItem receivedrepmnit;
    public static javax.swing.JMenuItem receivingmnit;
    private javax.swing.JMenu receivinmnit;
    private javax.swing.JMenu reportsmn;
    private javax.swing.JMenuItem reqbydepmnit;
    private javax.swing.JMenuItem reqbyreqperstoremnit;
    private javax.swing.JMenuItem requisationmnit;
    private javax.swing.JMenu requisitionmnit;
    private javax.swing.JMenu requisitionsmn;
    private javax.swing.JMenu setupmn;
    private javax.swing.JMenu skinmn;
    private javax.swing.JMenu statisticalsmnit;
    private javax.swing.JMenu stock1mn;
    private javax.swing.JMenuItem stockReplenishmentReqmnit;
    private javax.swing.JMenuItem stockcardmnit;
    private javax.swing.JMenuItem stockcatlmnit;
    private javax.swing.JMenuItem stockitemsmnit;
    private javax.swing.JMenu stockmanagn;
    private javax.swing.JMenuItem stockmngtmnit;
    private javax.swing.JMenuItem stockmngtmnit1;
    private javax.swing.JMenu stockmovtreportmnit;
    private javax.swing.JMenuItem stockpricesetmnit;
    private javax.swing.JMenuItem stockpricesmnit;
    private javax.swing.JMenuItem stockreturn2suppliermnit;
    private javax.swing.JMenuItem stocksConsmnit;
    private javax.swing.JMenuItem stocksreceivagedmnit;
    private javax.swing.JMenuItem stockvariancesmnit;
    private javax.swing.JMenuItem storeAllocationmnit;
    private javax.swing.JMenuItem storesstockbalmnit;
    private javax.swing.JMenu supmn;
    private javax.swing.JMenuItem supplierinvmnit;
    private javax.swing.JMenuItem suppliersmnit;
    private javax.swing.JMenuItem suppliesperdrugmnit;
    private javax.swing.JMenuItem supplrmnit;
    private javax.swing.JMenuItem suppnonmnit;
    private javax.swing.JCheckBoxMenuItem swinglnfmnit1;
    private javax.swing.JMenuItem transfbystmnit;
    private javax.swing.JMenuItem transferbynomnit;
    private javax.swing.JMenuItem updatedomainsmnit;
    private javax.swing.JMenuItem userprofmnit;
    private javax.swing.JMenu utilitymn;
    private javax.swing.JRadioButtonMenuItem whiltmnit1;
    private javax.swing.JCheckBoxMenuItem winlnfmnit1;
    private javax.swing.JRadioButtonMenuItem xpmnit1;
    // End of variables declaration//GEN-END:variables
}
