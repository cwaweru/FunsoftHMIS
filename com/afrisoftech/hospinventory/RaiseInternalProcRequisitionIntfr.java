/*
 * Requisitions.java
 *
 * Created on April 22, 2003, 5:12 PM
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.dbadmin.setFixedColumns;
import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.SQLDateFormat;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class RaiseInternalProcRequisitionIntfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox2 = null;
    javax.swing.JComboBox cmbox3 = null;
    javax.swing.JComboBox cmbox4 = null;
    java.io.File filePortrait = null;
    javax.swing.JSpinner dateSpinner = null;
    javax.swing.JSpinner dateSpinner1 = null;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    Boolean JOptionCheck = false;
    String userName = null;
    private double bal;

    public RaiseInternalProcRequisitionIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();

        String title = "Raising an Internal PR";

        setTitle("TRANSACTION TYPE: " + title);
        try {
            /////To make an external purchase Requisition
            java.sql.Statement pst2 = connectDB.createStatement();
            java.sql.ResultSet rs = pst2.executeQuery("select current_user");
            while (rs.next()) {

                userTxt.setForeground(Color.red);
                userTxt.setText(rs.getObject(1).toString());
                userName = rs.getObject(1).toString();

            }
        } catch (Exception esv) {
            System.out.println(esv.getMessage());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        itemSearchDialog = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        itemSearchtxt = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        prvsReqDialog = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        prvsreqTxt = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        viewbtn = new javax.swing.ButtonGroup();
        prvsRequisition = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        prqtxt = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        prTbl = new com.afrisoftech.dbadmin.JTable();
        jButton512 = new javax.swing.JButton();
        stockiTemdialog = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        itemSearchtxt1 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        stockiTemsearchtbl = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        USERCMBX = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        scheduleDlg = new javax.swing.JDialog();
        jSearchPanel13 = new javax.swing.JPanel();
        prvsreqTxt1 = new javax.swing.JTextField();
        jSearchScrollPane13 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton513 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        itemScrollpane = new javax.swing.JScrollPane();
        InternalPrTbl = new com.afrisoftech.dbadmin.JTable();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        procDptCbx = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        deptRaisingReq = new javax.swing.JComboBox();
        jLabel111 = new javax.swing.JLabel();
        jPanel61 = new javax.swing.JPanel();
        existingTNo = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        reqdatepicker = new com.afrisoftech.lib.DatePicker();
        datedueDtPcker = new com.afrisoftech.lib.DatePicker();
        jLabel8 = new javax.swing.JLabel();
        userTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        formProcCbx = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        ItemCategoryCbx = new javax.swing.JComboBox();
        storebalChk = new javax.swing.JCheckBox();
        tenderQtychk = new javax.swing.JCheckBox();
        jPanel62 = new javax.swing.JPanel();
        existingPNo = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel63 = new javax.swing.JPanel();
        existingPNo1 = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jTextField1 = new javax.swing.JTextField();

        itemSearchDialog.setModal(true);
        itemSearchDialog.setUndecorated(true);
        itemSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        itemSearchtxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemSearchtxtCaretUpdate(evt);
            }
        });
        itemSearchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSearchtxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(itemSearchtxt, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        itemSearchDialog.getContentPane().add(jSearchPanel1, gridBagConstraints);

        prvsReqDialog.setModal(true);
        prvsReqDialog.setUndecorated(true);
        prvsReqDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        prvsreqTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                prvsreqTxtCaretUpdate(evt);
            }
        });
        prvsreqTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prvsreqTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(prvsreqTxt, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton511.setText("Close");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        prvsReqDialog.getContentPane().add(jSearchPanel11, gridBagConstraints);

        prvsRequisition.setModal(true);
        prvsRequisition.setUndecorated(true);
        prvsRequisition.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        prqtxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                prqtxtCaretUpdate(evt);
            }
        });
        prqtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prqtxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel12.add(prqtxt, gridBagConstraints);

        prTbl.setToolTipText("Click on the target row to select the patient from the search.");
        prTbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        prTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prTblMouseClicked(evt);
            }
        });
        jSearchScrollPane12.setViewportView(prTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton512.setText("Close");
        jButton512.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton512ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton512, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        prvsRequisition.getContentPane().add(jSearchPanel12, gridBagConstraints);

        stockiTemdialog.setModal(true);
        stockiTemdialog.setUndecorated(true);
        stockiTemdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        itemSearchtxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemSearchtxt1CaretUpdate(evt);
            }
        });
        itemSearchtxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSearchtxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel2.add(itemSearchtxt1, gridBagConstraints);

        stockiTemsearchtbl.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        stockiTemsearchtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockiTemsearchtblMouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(stockiTemsearchtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton92.setText("Dispose");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        stockiTemdialog.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Buyer name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jLabel9, gridBagConstraints);

        USERCMBX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(USERCMBX, gridBagConstraints);

        jLabel10.setText("Purchasing Section");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jLabel10, gridBagConstraints);

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION SELECT DISTINCT section from section_allocation"));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jComboBox2, gridBagConstraints);

        scheduleDlg.setModal(true);
        scheduleDlg.setUndecorated(true);
        scheduleDlg.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel13.setLayout(new java.awt.GridBagLayout());

        prvsreqTxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                prvsreqTxt1CaretUpdate(evt);
            }
        });
        prvsreqTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prvsreqTxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel13.add(prvsreqTxt1, gridBagConstraints);

        jSearchTable12.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable12.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });
        jSearchScrollPane13.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel13.add(jSearchScrollPane13, gridBagConstraints);

        jButton513.setText("Close");
        jButton513.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton513ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel13.add(jButton513, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        scheduleDlg.getContentPane().add(jSearchPanel13, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Raise Requisitions For Procurement");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/Folders/Folder Yellow.png"))); // NOI18N
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        postbtn.setBackground(new java.awt.Color(51, 255, 204));
        postbtn.setMnemonic('s');
        postbtn.setText("Save");
        postbtn.setPreferredSize(new java.awt.Dimension(123, 25));
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(postbtn, gridBagConstraints);

        resetbtn.setBackground(new java.awt.Color(51, 255, 204));
        resetbtn.setText("Reset Table");
        resetbtn.setPreferredSize(new java.awt.Dimension(123, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(resetbtn, gridBagConstraints);

        cancelbtn.setBackground(new java.awt.Color(51, 255, 204));
        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear");
        cancelbtn.setPreferredSize(new java.awt.Dimension(123, 25));
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(cancelbtn, gridBagConstraints);

        exitbtn.setBackground(new java.awt.Color(51, 255, 204));
        exitbtn.setMnemonic('c');
        exitbtn.setText("Close");
        exitbtn.setPreferredSize(new java.awt.Dimension(123, 25));
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel5, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(51, 255, 204));
        jButton1.setMnemonic('r');
        jButton1.setText("Remove Row");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel4.add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        itemScrollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        itemScrollpane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        InternalPrTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Units", "Required Qty", "Quoted Price", "Stock Balance", "Monthly usage", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Float.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InternalPrTbl.getTableHeader().setReorderingAllowed(false);
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = InternalPrTbl.getColumnModel().getColumn(i);
            if (i == 1) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 0) {
                    column.setPreferredWidth(100);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(100);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }
        InternalPrTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InternalPrTblMouseClicked(evt);
            }
        });
        InternalPrTbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InternalPrTblKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InternalPrTblKeyTyped(evt);
            }
        });
        itemScrollpane.setViewportView(InternalPrTbl);
        if (InternalPrTbl.getColumnModel().getColumnCount() > 0) {
            InternalPrTbl.getColumnModel().getColumn(5).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel2.add(itemScrollpane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel4.add(jPanel2, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder("Reason for Purchase"));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jScrollPane21.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTextPane4.setText("-");
        jScrollPane21.setViewportView(jTextPane4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jScrollPane21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel4.add(jPanel41, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Tender to Use first"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        procDptCbx.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        procDptCbx.setForeground(new java.awt.Color(0, 204, 204));
        procDptCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"(select '-' union select distinct initcap(store_name) from st_main_stores ) order by 1" ));
        procDptCbx.setEnabled(false);
        procDptCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                procDptCbxItemStateChanged(evt);
            }
        });
        procDptCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procDptCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 5, 0);
        jPanel1.add(procDptCbx, gridBagConstraints);

        jLabel3.setText("Requisitioning Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        deptRaisingReq.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(select '-' union select distinct initcap(store_name) from st_main_stores) order by 1"));
        deptRaisingReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptRaisingReqActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(deptRaisingReq, gridBagConstraints);

        jLabel111.setText("Requisition Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel111, gridBagConstraints);

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        existingTNo.setEditable(false);
        existingTNo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        existingTNo.setForeground(new java.awt.Color(102, 102, 102));
        existingTNo.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                existingTNoCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(existingTNo, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel61.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel61, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Use Existing Tender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 28, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel4.setText("Due Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel22.setForeground(new java.awt.Color(255, 0, 102));
        jLabel22.setText("*Receiving Store ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel22, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(reqdatepicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel1.add(datedueDtPcker, gridBagConstraints);

        jLabel8.setText("User");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        userTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanel1.add(userTxt, gridBagConstraints);

        jLabel7.setText("Procurement Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        formProcCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Formal Procurement", "Direct Purchase" }));
        formProcCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                formProcCbxItemStateChanged(evt);
            }
        });
        formProcCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formProcCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 50);
        jPanel1.add(formProcCbx, gridBagConstraints);

        jLabel6.setText("Sub Item");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        ItemCategoryCbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "(select subitemname from subitems UNION select '-' ) order by 1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel1.add(ItemCategoryCbx, gridBagConstraints);

        viewbtn.add(storebalChk);
        storebalChk.setText("View Store Balances");
        storebalChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storebalChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        jPanel1.add(storebalChk, gridBagConstraints);

        viewbtn.add(tenderQtychk);
        tenderQtychk.setText("Remaining Tender Qty");
        tenderQtychk.setEnabled(false);
        tenderQtychk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderQtychkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        jPanel1.add(tenderQtychk, gridBagConstraints);

        jPanel62.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel62.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel62.setLayout(new java.awt.GridBagLayout());

        existingPNo.setEditable(false);
        existingPNo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        existingPNo.setForeground(new java.awt.Color(102, 102, 102));
        existingPNo.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                existingPNoCaretUpdate(evt);
            }
        });
        existingPNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingPNoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(existingPNo, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel62.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel62, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setText("Retrieve Existing PR file");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 28, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jPanel63.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel63.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel63.setLayout(new java.awt.GridBagLayout());

        existingPNo1.setEditable(false);
        existingPNo1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        existingPNo1.setForeground(new java.awt.Color(102, 102, 102));
        existingPNo1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                existingPNo1CaretUpdate(evt);
            }
        });
        existingPNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingPNo1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel63.add(existingPNo1, gridBagConstraints);

        searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton3.setToolTipText("Search");
        searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel63.add(searchButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel63, gridBagConstraints);

        jLabel11.setForeground(new java.awt.Color(0, 51, 204));
        jLabel11.setText("Order From a schedule");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 28, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel4.add(jPanel1, gridBagConstraints);

        jTabbedPane1.addTab("Products In The Catalog", jPanel4);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct irq_no, item_code, item_description, units, quantity, tender_no  FROM st_item_to_quote ORDER BY 1 DESC"));
        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane2, gridBagConstraints);

        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("Search Requisition Number or Item Description or Item Code...");
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 500);
        jPanel6.add(jTextField1, gridBagConstraints);

        jTabbedPane1.addTab("PR Register", jPanel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 1197, 522);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        prvsReqDialog.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        existingTNo.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());

        prvsReqDialog.dispose();

        ClearTable.clearthisTable(InternalPrTbl);

        int k = 0;

        this.postbtn.setEnabled(true);
        // this.populateTable11(this.prvsTxt.getText());  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    private void populateTable11(java.lang.String patient_no) {
        int i = 0;
        try {

            java.sql.Statement stmtTable = connectDB.createStatement();

            java.sql.ResultSet rsetTable = stmtTable.executeQuery("SELECT  item_code,item_description, units, quantity::numeric,price, (quantity*price::numeric)::numeric(15,2), balance, reason, monthly_usage,terms,cost_center FROM st_receive_requisation WHERE requisition_no = '" + existingPNo.getText() + "' order by item_description");
            // java.sql.ResultSet rsetTable = stmtTable.executeQuery("select distinct code,item,units from st_orders where quotation_no ='"+existingTNo.getText()+"'");
            while (rsetTable.next()) {
                // java.sql.Statement stmtTable1 = connectDB.createStatement();
                // java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("SELECT item_code FROM st_stock_item where description='"+rsetTable.getObject(1).toString()+"' ");
//                java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("SELECT sum(quantity-ordered_qty) FROM st_recommendation WHERE  description='"+rsetTable.getObject(2).toString()+"' AND quotation_no ='"+prvsTxt.getText()+"' ");
//
//                while(rsetTablex.next()){
//                bal =rsetTablex.getDouble(1);
//
//                }

                // if(bal>0) {
                InternalPrTbl.setValueAt(rsetTable.getObject(1), i, 0);
                InternalPrTbl.setValueAt(rsetTable.getObject(2), i, 1);
                InternalPrTbl.setValueAt(rsetTable.getObject(3), i, 2);
                InternalPrTbl.setValueAt(rsetTable.getObject(4), i, 3);
                InternalPrTbl.setValueAt(rsetTable.getObject(5), i, 4);
                //InternalPrTbl.setValueAt(rsetTable.getObject(6), i, 5);
                InternalPrTbl.setValueAt(rsetTable.getObject(7), i, 5);
                InternalPrTbl.setValueAt(rsetTable.getObject(10), i, 7);
                InternalPrTbl.setValueAt(rsetTable.getObject(9), i, 6);

                jTextPane4.setText(rsetTable.getObject(8).toString());

                //InternalPrTbl.setValueAt(bal, i, 5);
                deptRaisingReq.setSelectedItem(rsetTable.getObject(11));

                i++;

                // }
            }
            /*
             java.sql.Statement stmtTablez = connectDB.createStatement();

             java.sql.ResultSet rsetTablez = stmtTablez.executeQuery("SELECT DISTINCT cost_center FROM st_receive_requisation WHERE requisition_no ilike '"+jTextField361.getText()+"'");
             while (rsetTablez.next()) {
             jTextField10.setText(rsetTablez.getObject(1).toString());
             }
             */
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

    }

    private void populateTable111(java.lang.String patient_no) {
        int i = 0;
        try {

            java.sql.Statement stmtTable = connectDB.createStatement();

            java.sql.ResultSet rsetTable = stmtTable.executeQuery("SELECT  item_code,item_description, units, quantity::numeric,price, (quantity*price::numeric)::numeric(15,2), '' as balance, remarks, 0.0 as monthly_usage,'' as terms,cost_center FROM st_purchase_schedule WHERE requisition_no = '" + existingPNo1.getText() + "' AND processed=false "
                    + "and item_code IN (SELECT distinct trim(code) FROM st_orders WHERE quotation_no='"+existingTNo.getText()+"') order by item_description");
            // java.sql.ResultSet rsetTable = stmtTable.executeQuery("select distinct code,item,units from st_orders where quotation_no ='"+existingTNo.getText()+"'");
            while (rsetTable.next()) {
                // java.sql.Statement stmtTable1 = connectDB.createStatement();
                // java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("SELECT item_code FROM st_stock_item where description='"+rsetTable.getObject(1).toString()+"' ");
//                java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("SELECT sum(quantity-ordered_qty) FROM st_recommendation WHERE  description='"+rsetTable.getObject(2).toString()+"' AND quotation_no ='"+prvsTxt.getText()+"' ");
//
//                while(rsetTablex.next()){
//                bal =rsetTablex.getDouble(1);
//
//                }

                // if(bal>0) {
                InternalPrTbl.setValueAt(rsetTable.getObject(1), i, 0);
                InternalPrTbl.setValueAt(rsetTable.getObject(2), i, 1);
                InternalPrTbl.setValueAt(rsetTable.getObject(3), i, 2);
                InternalPrTbl.setValueAt(rsetTable.getObject(4), i, 3);
                InternalPrTbl.setValueAt(rsetTable.getObject(5), i, 4);
                //InternalPrTbl.setValueAt(rsetTable.getObject(6), i, 5);
                InternalPrTbl.setValueAt(rsetTable.getObject(7), i, 5);
                InternalPrTbl.setValueAt(rsetTable.getObject(10), i, 7);
                InternalPrTbl.setValueAt(rsetTable.getObject(9), i, 6);

                jTextPane4.setText(rsetTable.getObject(8).toString());

                //InternalPrTbl.setValueAt(bal, i, 5);
                deptRaisingReq.setSelectedItem(rsetTable.getObject(11));

                i++;

                // }
            }
            /*
             java.sql.Statement stmtTablez = connectDB.createStatement();

             java.sql.ResultSet rsetTablez = stmtTablez.executeQuery("SELECT DISTINCT cost_center FROM st_receive_requisation WHERE requisition_no ilike '"+jTextField361.getText()+"'");
             while (rsetTablez.next()) {
             jTextField10.setText(rsetTablez.getObject(1).toString());
             }
             */
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            sqlExec.printStackTrace();

        }



        if(i<1){
            JOptionPane.showMessageDialog(this,"Schedule already ordered or selected tender is incorrect", "Recheck!", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void prvsreqTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_prvsreqTxtCaretUpdate

        if (prvsreqTxt.getCaretPosition() > 2) {

            //jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select distinct requisition_no as Req_No from st_receive_requisation where requisition_no ILIKE '" + jTextField11111.getText().toString() + "%' and (requisition_no ilike 'PRQ%' OR requisition_no ilike 'SRQ%') AND analysed=FALSE ORDER BY requisition_no"));
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select distinct quotation_no as Ref_No from st_orders where quotation_no ILIKE '%" + prvsreqTxt.getText().toString() + "%' ORDER BY quotation_no"));
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
        }
// Add your handling code here:
    }//GEN-LAST:event_prvsreqTxtCaretUpdate
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        prvsReqDialog.dispose();
        java.awt.Point point = this.existingTNo.getLocationOnScreen();

        prvsReqDialog.setSize(400, 200);

        prvsReqDialog.setLocation(point);
        prvsReqDialog.setVisible(true);

    }
    private void InternalPrTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InternalPrTblMouseClicked
        if (InternalPrTbl.getSelectedColumn() == 0) {

            if (existingTNo.getText().length() > 0) {

                this.cmbox11MouseClicked();
            } else {

                JOptionPane.showMessageDialog(this, "PLEASE SELECT TENDER TO OBTAIN ITEMS TO REQUEST");
//                System.out.println("Showing dialog");
//
//                // prvsReqDialog.dispose();
//                java.awt.Point point = this.itemScrollpane.getLocationOnScreen();
//
//                stockiTemdialog.setSize(400, 200);
//
//                stockiTemdialog.setLocation(point);
//                stockiTemdialog.setVisible(true);

            }

        }
        // Add your handling code here:
    }//GEN-LAST:event_InternalPrTblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int rows2Delete = InternalPrTbl.getSelectedRowCount();

        int[] selectedRows = InternalPrTbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) InternalPrTbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) InternalPrTbl.getModel();

                defTableModel.removeRow(InternalPrTbl.getSelectedRow());
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.itemSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        double bal = 0.00;

        InternalPrTbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0), InternalPrTbl.getSelectedRow(), 0);
        InternalPrTbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1), InternalPrTbl.getSelectedRow(), 1);
        InternalPrTbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2), InternalPrTbl.getSelectedRow(), 2);
        //InternalPrTbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 4), InternalPrTbl.getSelectedRow(), 5);
        InternalPrTbl.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 3), InternalPrTbl.getSelectedRow(), 4);

        itemSearchDialog.dispose();

        //  tenderQtychk.doClick();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void itemSearchtxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemSearchtxtCaretUpdate
        setFixedColumns.DisallowReordering(jSearchTable1);

        if (itemSearchtxt.getCaretPosition() > 4) {
//select distinct code,item,units from st_orders st,
//      jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select item_code, description, units,buying_price,reorder_level from st_stock_item " +
//"where department ilike '%"+procDptCbx.getSelectedItem().toString()+"%' and (description ilike '%"+jTextField1111.getText()+"%' OR item_code ilike '%"+jTextField1111.getText()+"%' )"));
//        }

//            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select b.code, b.item, b.units,b.unit_price,a.reorder_level from st_stock_item a, st_orders b\n"
//                    + "where initcap(a.description) = initcap(b.item) and a.department ilike '" + deptRaisingReq.getSelectedItem().toString() + "' and (a.description ilike '%" + itemSearchtxt.getText() + "%' or a.item_code ilike '%" + itemSearchtxt.getText() + "%') AND b.quotation_no ilike '" + existingTNo.getText() + "'"));
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select distinct code, item, units,unit_price,1 reorder_level from  st_orders \n"
                    + "where  (item ilike '%" + itemSearchtxt.getText() + "%' or code ilike '%" + itemSearchtxt.getText() + "%') AND quotation_no ilike '" + existingTNo.getText() + "'"));

            jSearchScrollPane1.setViewportView(jSearchTable1);

        }

    }//GEN-LAST:event_itemSearchtxtCaretUpdate
    private void cmbox11MouseClicked() {
        System.out.println("Showing dialog");
        java.awt.Point point = itemScrollpane.getLocationOnScreen();
        itemSearchDialog.setSize(600, 200);
        itemSearchDialog.setLocation(point);
        itemSearchDialog.setVisible(true);
    }

    private void cmboxMouseClicked() {
        System.out.println("Showing dialog");
        java.awt.Point point = existingTNo.getLocationOnScreen();
        prvsReqDialog.setSize(300, 200);
        prvsReqDialog.setLocation(point);
        prvsReqDialog.setVisible(true);
    }
    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed
    /* private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
     cmbox2 = new javax.swing.JComboBox();

     int i = jTable1.getSelectedRow();
     //   java.lang.Object res_cmbox2 = cmbox3.getSelectedItem();

     //  if (!(jTable1.getValueAt(i,0).toString().equals(null))){
     try {

     crset1.setConnectionSource(pConnDB);
     crset1.execute("select description from st_stock_item where department = '"+jTable1.getValueAt(i,0).toString()+"' ORDER By description");

     cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));

     javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Item Description");

     seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));

     cmbox2.addActionListener(new java.awt.event.ActionListener() {

     public void actionPerformed(java.awt.event.ActionEvent evt) {

     cmbox2ActionPerformed(evt);
     }
     });
     } catch(java.sql.SQLException sqlExec) {

     javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

     }
     //  }
     }*/
    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        for (int k = 0; k < InternalPrTbl.getRowCount(); k++) {
            for (int r = 0; r < InternalPrTbl.getColumnCount(); r++) {
                InternalPrTbl.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed

        // this.storebalChk.doClick();
        String description = null;
        String code = null;
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String transNo = null;
        String transNo1 = null;
        String glType = null;
        String user = null;

        String glCode = null;
        String units = null;
        com.afrisoftech.lib.DBObject DBObject = new com.afrisoftech.lib.DBObject();

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

        try {

            connectDB.setAutoCommit(false);
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rs2 = ps.executeQuery("select 'PRQ'||lpad(nextval('proc_req_no_seq')::text,6,0::TEXT)");
            while (rs2.next()) {
                transNo = rs2.getObject(1).toString();
            }

            if (InternalPrTbl.getModel().getValueAt(0, 0) != null) {

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_receive_requisation VALUES(?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?)");
                for (int i = 0; i < InternalPrTbl.getRowCount(); i++) {

                    if (InternalPrTbl.getModel().getValueAt(i, 0) != null && InternalPrTbl.getModel().getValueAt(i, 3) != null && InternalPrTbl.getModel().getValueAt(0, 5) != null) {
                        JOptionCheck = true;
                        pstmt.setObject(1, "");
                        pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(reqdatepicker.getDate()));
                        pstmt.setObject(3, procDptCbx.getSelectedItem());
                        ////description
                        pstmt.setObject(4, InternalPrTbl.getValueAt(i, 1).toString());

                        pstmt.setObject(5, InternalPrTbl.getValueAt(i, 2).toString());
                        ///qty
                        pstmt.setDouble(6, Double.parseDouble(InternalPrTbl.getValueAt(i, 3).toString()));

                        pstmt.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datedueDtPcker.getDate()));
                        pstmt.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datedueDtPcker.getDate()));

                        // pstmt.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                        pstmt.setBoolean(9, false);
                        pstmt.setBoolean(10, false);
                        pstmt.setObject(11, formProcCbx.getSelectedItem().toString());
                        //requisition no
                        pstmt.setString(12, transNo);
                        ////price
                        pstmt.setDouble(13, java.lang.Double.valueOf(InternalPrTbl.getValueAt(i, 4).toString()));

                        pstmt.setString(14, userName);
                        pstmt.setObject(15, procDptCbx.getSelectedItem());
                        pstmt.setDouble(16, 0.00);
                        Double bal = 0.0;
                        if (InternalPrTbl.getValueAt(i, 5) == null) {
                            pstmt.setDouble(17, bal);
                        } else {
                            pstmt.setDouble(17, java.lang.Double.valueOf(InternalPrTbl.getValueAt(i, 5).toString()));
                        }
                        pstmt.setBoolean(18, false);

                        pstmt.setString(19, DBObject.getDBObject(existingTNo.getText(), "-"));
                        pstmt.setObject(20, "");
                        pstmt.setTimestamp(21, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                        pstmt.setObject(22, "");
                        pstmt.setString(23, jTextPane4.getText());

                        if (InternalPrTbl.getValueAt(i, 5) == null) {
                            pstmt.setDouble(24, bal);
                        } else {
                            pstmt.setDouble(24, Double.valueOf(InternalPrTbl.getValueAt(i, 5).toString()));
                        }
                        //remarks
                        String remark = null;

                        remark = "-";
                        pstmt.setObject(25, remark);
                        pstmt.setDouble(26, 0);

                        pstmt.setObject(27, formProcCbx.getSelectedItem().toString());
                        pstmt.setObject(28, "");
                        pstmt.setObject(29, InternalPrTbl.getValueAt(i, 0).toString());
                        pstmt.setDouble(30, 0);
                        pstmt.setDouble(31, 0);
                        pstmt.setObject(32, "-");
                        pstmt.setObject(33, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        if (InternalPrTbl.getValueAt(i, 6) == null) {
                            pstmt.setObject(34, bal);
                        } else {
                            pstmt.setObject(34, Double.valueOf(InternalPrTbl.getValueAt(i, 6).toString()));
                        }

                        pstmt.setObject(35, "Internal Requisition");
                        pstmt.setBoolean(36, false);
                        pstmt.setBoolean(37, false);

                        String n = null;
                        try {
                            n = InternalPrTbl.getValueAt(i, 4).toString();
                            if (n == null) {
                                n = "0.00";
                            }
                        } catch (Exception esc) {
                            System.out.println(esc.getMessage());
                        }
                        // pstmt.setObject(36,n);
                        System.out.println("Old Function");
                        pstmt.executeUpdate();

                    } else {
                        if (i == 0) {
                            JOptionPane.showMessageDialog(null, "Enter all the Highlighted values in the Table");
                        }

                    }
                }

                if (JOptionCheck == true) {
                    java.sql.PreparedStatement pstmts = connectDB.prepareStatement("INSERT INTO st_subitems_pr_grouping(pr_no, sub_item, allocated) VALUES (?, ?, ?)");

                    pstmts.setObject(1, transNo);
                    pstmts.setObject(2, ItemCategoryCbx.getSelectedItem());
                    pstmts.setBoolean(3, false);

                    pstmts.executeUpdate();

                    pstmts = connectDB.prepareStatement("UPDATE st_purchase_schedule SET processed=? , date_processed=current_timestamp WHERE requisition_no =?");

                    pstmts.setObject(1, true);
                    pstmts.setObject(2, existingPNo1.getText());
                    pstmts.executeUpdate();

                    connectDB.commit();
                    connectDB.setAutoCommit(true);
                    jLabel5.setForeground(java.awt.Color.blue);
                    javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Requisition No. is '" + transNo + "'", "Comfirmation", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    com.afrisoftech.hospinventory.InternalRequisitionPDF policy = new com.afrisoftech.hospinventory.InternalRequisitionPDF();

                    policy.InternalRequisitionPDF(connectDB, procDptCbx.getSelectedItem().toString(), deptRaisingReq.getSelectedItem().toString(), transNo, userTxt.getText().toString());

                    for (int k = 0; k < InternalPrTbl.getRowCount(); k++) {
                        for (int r = 0; r < InternalPrTbl.getColumnCount(); r++) {
                            InternalPrTbl.getModel().setValueAt(null, k, r);
                        }
                    }
                    existingPNo.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(null, "You need to add Items to make a Purchase Requisition", "ERROR MESSAGE!", JOptionPane.ERROR_MESSAGE);

            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            
            sq.printStackTrace();
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_postbtnActionPerformed

    private void InternalPrTblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InternalPrTblKeyReleased
        Double qtyrequired = Double.valueOf(InternalPrTbl.getModel().getValueAt(InternalPrTbl.getSelectedRow(), 3).toString().replace(",", ""));

        try {
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            String item = InternalPrTbl.getValueAt(InternalPrTbl.getSelectedRow(), 0).toString();

            java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("select sum(qty) from stock_balance_qty where item_code ilike '" + item + "' and department ilike '%" + procDptCbx.getSelectedItem() + "%' AND dates::date <=  '" + SQLDateFormat.getSQLDate(reqdatepicker.getDate()) + "'");

            while (rsetTablex.next()) {
                bal = rsetTablex.getDouble(1);

            }
            InternalPrTbl.setValueAt(bal, InternalPrTbl.getSelectedRow(), 5);
        } catch (SQLException ex) {
            Logger.getLogger(RaiseInternalProcRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_InternalPrTblKeyReleased

    private void prvsreqTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prvsreqTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prvsreqTxtActionPerformed

    private void procDptCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procDptCbxActionPerformed
    }//GEN-LAST:event_procDptCbxActionPerformed

    private void deptRaisingReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptRaisingReqActionPerformed

        procDptCbx.setSelectedItem(deptRaisingReq.getSelectedItem());


        /* if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Main Store")){
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select store_name from st_stores order by store_name asc");
         while (rs.next()){
         //   jTable1.setValueAt(rs.getObject(1),i,1);
         jComboBox1.setSelectedItem(rs.getString(1));
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());

         }
         } else{
         try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select department_name from pb_departments order by department_name asc");
         while (rs.next()){
         //   jTable1.setValueAt(rs.getObject(1),i,1);
         jComboBox1.setSelectedItem(rs.getString(1));
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());

         }

         }
         */
        /*  try {
         java.sql.Statement pstmt = connectDB.createStatement();
         java.sql.ResultSet rs = pstmt.executeQuery("select store_name from st_main_stores where store_name not ilike 'procure%' order by store_name asc");
         while (rs.next()){
         //   jTable1.setValueAt(rs.getObject(1),i,1);
         jComboBox1.setSelectedItem(rs.getString(1));
         }
         } catch(java.sql.SQLException sqlex){
         System.out.println(sqlex.getMessage());

         }
         */
        // Add your handling code here:
    }//GEN-LAST:event_deptRaisingReqActionPerformed

    private void existingTNoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_existingTNoCaretUpdate
        // TODO add your handling code here:
        jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT requisition_no FROM st_receive_requisation WHERE (requisition_no ilike 'PRQ%' or requisition_no ilike '%" + existingTNo.getText().toString() + "%'  ) and processed = false"));
//        }
        jSearchScrollPane11.setViewportView(jSearchTable11);
    }//GEN-LAST:event_existingTNoCaretUpdate

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed

        this.cmboxMouseClicked();

        // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void procDptCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_procDptCbxItemStateChanged
        // TODO add your handling code here:
//        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select a.item_code, a.description, a.units,a.buying_price,a.reorder_level from st_stock_item a, st_orders b\n" +
//"where a.description = b.item and a.department ='"+procDptCbx.getSelectedItem().toString()+"' and a.description ilike '%"+jTextField1111.getText()+"%'"));
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select a.item_code, a.description, a.units,a.buying_price,a.reorder_level from st_stock_item a, st_orders b\n"
                + "where a.description = b.item and a.department ='" + procDptCbx.getSelectedItem().toString() + "'  AND b.quotation_no ='" + existingTNo.getText() + "'"));

    }//GEN-LAST:event_procDptCbxItemStateChanged

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
        if (jTextField1.getText().toString().equalsIgnoreCase("Search Requisition Number or Item Description or Item Code...")) {

            jTextField1.setText(null);
        }
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        if (jTextField1.getText().toString().equalsIgnoreCase("Search Requisition Number or Item Description or Item Code...")) {
            jTextField1.setText(null);
            jTextField1.setForeground(Color.BLACK);
        } else {
            System.out.println("Nothing!!!");

        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        if (jTextField1.getText().length() == 0) {
            jTextField1.setForeground(Color.GRAY);
            jTextField1.setText("Search Requisition Number or Item Description or Item Code...");
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        // TODO add your handling code here:
        if (jTextField1.getText().equalsIgnoreCase("Search Requisition Number or Item Description or Item Code...")) {
            System.out.println("Nothing to Search!!!");

        } else {
            jTextField1.setForeground(Color.BLACK);
            if (jTextField1.getCaretPosition() > 4) {
                jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct irq_no, item_code, item_description, units, quantity, tender_no  FROM st_item_to_quote\n"
                        + "WHERE item_code ilike '%" + jTextField1.getText() + "%' OR irq_no ilike '%" + jTextField1.getText() + "%' OR item_description ilike '%" + jTextField1.getText() + "%'\n"
                        + ";"));
            }
        }

    }//GEN-LAST:event_jTextField1CaretUpdate

    private void tenderQtychkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderQtychkActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < InternalPrTbl.getRowCount(); i++) {

            if (InternalPrTbl.getValueAt(i, 0) != null) {
                try {
                    java.sql.Statement stmtTable1 = connectDB.createStatement();
                    // java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("SELECT item_code FROM st_stock_item where description='"+rsetTable.getObject(1).toString()+"' ");
                    java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("SELECT sum(quantity-ordered_qty) FROM st_recommendation WHERE  description ilike '" + InternalPrTbl.getValueAt(i, 1) + "' AND quotation_no ='" + existingTNo.getText() + "' ");

                    while (rsetTablex.next()) {
                        bal = rsetTablex.getDouble(1);

                    }
                    InternalPrTbl.setValueAt(bal, i, 6);
                } catch (SQLException ex) {
                    Logger.getLogger(RaiseInternalProcRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }
    }//GEN-LAST:event_tenderQtychkActionPerformed

    private void storebalChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storebalChkActionPerformed
        // TODO add your handling code here:
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        for (int i = 0; i < InternalPrTbl.getRowCount(); i++) {

            if (InternalPrTbl.getValueAt(i, 0) != null) {
                try {
                    java.sql.Statement stmtTable1 = connectDB.createStatement();
                    String item = InternalPrTbl.getValueAt(i, 0).toString();

                    // java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("select sum(receiving-issuing) from st_sub_stores where item_code = '" + item + "' and store_name ilike '%" + procDptCbx.getSelectedItem() + "%' AND trans_date::date < '" + SQLDateFormat.getSQLDate(reqdatepicker.getDate()) + "' order by 1 asc");
                    java.sql.ResultSet rsetTablex = stmtTable1.executeQuery("select sum(qty) from stock_balance_qty where item_code ilike '" + item + "' and department ilike '%" + procDptCbx.getSelectedItem() + "%' AND dates::date <=  '" + SQLDateFormat.getSQLDate(reqdatepicker.getDate()) + "'");
//select sum(qty) from stock_balance_qty where item_code = ? and department = ? AND dates::date <=  ?
                    while (rsetTablex.next()) {
                        bal = rsetTablex.getDouble(1);

                    }
                    InternalPrTbl.setValueAt(bal, i, 5);
                } catch (SQLException ex) {
                    Logger.getLogger(RaiseInternalProcRequisitionIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_storebalChkActionPerformed

    private void itemSearchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSearchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemSearchtxtActionPerformed

    private void existingPNoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_existingPNoCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_existingPNoCaretUpdate

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        // TODO add your handling code here:
        //0174358 15800 9860

        System.out.println("Showing dialog");
        java.awt.Point point = existingPNo.getLocationOnScreen();
        prvsRequisition.setSize(300, 200);
        prvsRequisition.setLocation(point);
        prvsRequisition.setVisible(true);
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void existingPNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingPNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingPNoActionPerformed

    private void prqtxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_prqtxtCaretUpdate
        // TODO add your handling code here:
        if (prqtxt.getCaretPosition() > 4) {
            prTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select distinct requisition_no as Req_No from st_receive_requisation where requisition_no ILIKE '%" + prqtxt.getText().toString() + "%' and (requisition_no ilike 'PRQ%' OR requisition_no ilike 'SRQ%')  ORDER BY requisition_no"));
        }
    }//GEN-LAST:event_prqtxtCaretUpdate

    private void prqtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prqtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prqtxtActionPerformed

    private void prTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prTblMouseClicked
        // TODO add your handling code here:

        existingPNo.setText(prTbl.getValueAt(prTbl.getSelectedRow(), 0).toString());
        this.prvsRequisition.dispose();
        this.populateTable11(this.existingPNo.getText());
    }//GEN-LAST:event_prTblMouseClicked

    private void jButton512ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton512ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton512ActionPerformed

    private void itemSearchtxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemSearchtxt1CaretUpdate
        // TODO add your handling code here:
        if (itemSearchtxt1.getCaretPosition() > 4) {
            stockiTemsearchtbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select distinct  item_code,description,units,buying_price,reorder_level from st_stock_item WHERE (item_code ILIKE '%" + itemSearchtxt1.getText() + "%' OR description ILIKE '%" + itemSearchtxt1.getText() + "%') AND department ilike '" + deptRaisingReq.getSelectedItem().toString() + "'"));

            jSearchScrollPane2.setViewportView(stockiTemsearchtbl);
        }
    }//GEN-LAST:event_itemSearchtxt1CaretUpdate

    private void itemSearchtxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSearchtxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemSearchtxt1ActionPerformed

    private void stockiTemsearchtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockiTemsearchtblMouseClicked
        // TODO add your handling code here:

        stockiTemdialog.dispose();
        InternalPrTbl.setValueAt(stockiTemsearchtbl.getValueAt(stockiTemsearchtbl.getSelectedRow(), 0), InternalPrTbl.getSelectedRow(), 0);
        InternalPrTbl.setValueAt(stockiTemsearchtbl.getValueAt(stockiTemsearchtbl.getSelectedRow(), 1), InternalPrTbl.getSelectedRow(), 1);
        InternalPrTbl.setValueAt(stockiTemsearchtbl.getValueAt(stockiTemsearchtbl.getSelectedRow(), 2), InternalPrTbl.getSelectedRow(), 2);
        InternalPrTbl.setValueAt(stockiTemsearchtbl.getValueAt(stockiTemsearchtbl.getSelectedRow(), 3), InternalPrTbl.getSelectedRow(), 4);
    }//GEN-LAST:event_stockiTemsearchtblMouseClicked

    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        // TODO add your handling code here:
        stockiTemdialog.dispose();
    }//GEN-LAST:event_jButton92ActionPerformed

    private void InternalPrTblKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InternalPrTblKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_InternalPrTblKeyTyped

    private void formProcCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formProcCbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formProcCbxActionPerformed

    private void formProcCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_formProcCbxItemStateChanged
        // TODO add your handling code here:
        if (formProcCbx.getSelectedItem().toString().contains("Direct")) {

        }
    }//GEN-LAST:event_formProcCbxItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        USERCMBX.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT USER_NAME from section_allocation where section ilike '" + jComboBox2.getSelectedItem() + "' and status=true"));

    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void existingPNo1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_existingPNo1CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_existingPNo1CaretUpdate

    private void existingPNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingPNo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingPNo1ActionPerformed

    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        // TODO add your handling code here:
        if (existingTNo.getText().length() > 0) {

            System.out.println("Showing dialog");
            java.awt.Point point = existingPNo1.getLocationOnScreen();
            scheduleDlg.setSize(300, 200);
            scheduleDlg.setLocation(point);
            scheduleDlg.setVisible(true);
            ClearTable.clearthisTable(jSearchTable12);
            prvsreqTxt1.setText(null);
        } else {

            JOptionPane.showMessageDialog(this, "PLEASE SELECT EXISTING TENDER FIRST");
        }


    }//GEN-LAST:event_searchButton3ActionPerformed

    private void prvsreqTxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_prvsreqTxt1CaretUpdate
        // TODO add your handling code here:
        if (prvsreqTxt1.getCaretPosition() > 4) {
            jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select distinct requisition_no as Req_No from st_purchase_schedule where requisition_no ILIKE '%" + prvsreqTxt1.getText().toString() + "%'  ORDER BY requisition_no"));
        }
    }//GEN-LAST:event_prvsreqTxt1CaretUpdate

    private void prvsreqTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prvsreqTxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prvsreqTxt1ActionPerformed

    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
        // TODO add your handling code here:
        existingPNo1.setText(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(), 0).toString());
        scheduleDlg.dispose();
        this.populateTable111(this.existingPNo1.getText());
    }//GEN-LAST:event_jSearchTable12MouseClicked

    private void jButton513ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton513ActionPerformed
        // TODO add your handling code here:
        scheduleDlg.dispose();
    }//GEN-LAST:event_jButton513ActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        int i = InternalPrTbl.getSelectedRow();
        java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();

        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select units from st_stock_item where description = '" + cmbox2.getSelectedItem() + "'");
            while (rs.next()) {
                InternalPrTbl.setValueAt(rs.getObject(1), i, 2);
            }

        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
    }

    private void processBrRequisitionFile(java.io.File filePortrait2Process) {
//        this.invalidate();
//
//        try {
//
//            try {
//
//                java.io.FileInputStream requisFileIOStream = new java.io.FileInputStream(filePortrait2Process);
//
//                java.io.ObjectInputStream requisObjInStream = new java.io.ObjectInputStream(requisFileIOStream);
//
//                javax.swing.JTable requisTable = (javax.swing.JTable) requisObjInStream.readObject();
//
//                javax.swing.JTable requisTable2 = (javax.swing.JTable) requisObjInStream.readObject();
//
//                //  jScrollPane1.setViewportView(requisTable);
//                jScrollPane11.setViewportView(requisTable2);
//
//                PurchaseItemsTbl.setModel(requisTable.getModel());
//
//                jTable11.setModel(requisTable2.getModel());
//                this.validate();
//
//            } catch (java.lang.ClassNotFoundException cnfExec) {
//
//                javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());
//
//            }
//
//        } catch (java.io.IOException ioExec) {
//
//            javax.swing.JOptionPane.showMessageDialog(this, ioExec.getMessage());
//
//        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InternalPrTbl;
    private javax.swing.JComboBox ItemCategoryCbx;
    private javax.swing.JComboBox USERCMBX;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelbtn;
    private com.afrisoftech.lib.DatePicker datedueDtPcker;
    private javax.swing.JComboBox deptRaisingReq;
    private javax.swing.JTextField existingPNo;
    private javax.swing.JTextField existingPNo1;
    private javax.swing.JTextField existingTNo;
    public static javax.swing.JButton exitbtn;
    private javax.swing.JComboBox formProcCbx;
    private javax.swing.JScrollPane itemScrollpane;
    private javax.swing.JDialog itemSearchDialog;
    private javax.swing.JTextField itemSearchtxt;
    private javax.swing.JTextField itemSearchtxt1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton512;
    private javax.swing.JButton jButton513;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton92;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JPanel jSearchPanel13;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane12;
    private javax.swing.JScrollPane jSearchScrollPane13;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JButton postbtn;
    private javax.swing.JTable prTbl;
    private javax.swing.JComboBox procDptCbx;
    private javax.swing.JTextField prqtxt;
    private javax.swing.JDialog prvsReqDialog;
    private javax.swing.JDialog prvsRequisition;
    private javax.swing.JTextField prvsreqTxt;
    private javax.swing.JTextField prvsreqTxt1;
    private com.afrisoftech.lib.DatePicker reqdatepicker;
    private javax.swing.JButton resetbtn;
    private javax.swing.JDialog scheduleDlg;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    private javax.swing.JDialog stockiTemdialog;
    private javax.swing.JTable stockiTemsearchtbl;
    private javax.swing.JCheckBox storebalChk;
    private javax.swing.JCheckBox tenderQtychk;
    private javax.swing.JTextField userTxt;
    private javax.swing.ButtonGroup viewbtn;
    // End of variables declaration//GEN-END:variables
}
