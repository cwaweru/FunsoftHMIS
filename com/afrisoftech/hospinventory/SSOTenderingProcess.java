/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.DesktopApi;
import static com.afrisoftech.lib.DesktopApi.EnumOS.linux;
import static com.afrisoftech.lib.DesktopApi.EnumOS.macos;
import static com.afrisoftech.lib.DesktopApi.EnumOS.solaris;
import static com.afrisoftech.lib.DesktopApi.EnumOS.windows;
import static com.afrisoftech.lib.DesktopApi.getOs;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Array;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.HashMap;
import java.util.Vector;
import org.postgresql.largeobject.LargeObject;
import org.postgresql.largeobject.LargeObjectManager;
import javax.swing.*;

        
/**
 *
 * @author sytem partners
 */
public class SSOTenderingProcess extends javax.swing.JPanel {

    /**
     * Creates new form SSOTenderingProcess
     */
    Vector money = new Vector();
      JPanel MainPanellToLoad=null;
      java.sql.Connection connectDB = null;
       double bid = 0.0;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    public SSOTenderingProcess(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
              connectDB = connDb;
       
              

               pConnDB = pconnDB;
               
               initComponents();
               
               
               jLabel2.setVisible(false);
               jLabel45.setVisible(false);
               jLabel8.setVisible(false);
               jLabel56.setVisible(false);
               
               searchButton3.setEnabled(false);
               searchButton8.setEnabled(false);
               
               
               ///populate current user
                try {
                
                        java.sql.Statement pstmth = connectDB.createStatement();            
                          java.sql.ResultSet rsh = pstmth.executeQuery("select current_user  , header_name from pb_header");
                         // java.sql.ResultSet name = pstmth.executeQuery("select header_name from pb_header");
                   while (rsh.next()) {

                       usernamedispatchtxt.setText(rsh.getObject(1).toString());
                       usernameprocessprtxt.setText(rsh.getObject(1).toString());
                       usernameopentendertxt.setText(rsh.getObject(1).toString());
                       usernamereturnedtxt.setText(rsh.getObject(1).toString());
                       usernamelpotxt.setText(rsh.getObject(1).toString());
                       jTextPane1.setText(rsh.getObject(2).toString());
                       jTextPane4.setText(rsh.getObject(2).toString());
                       
                         }
                  
          } catch (SQLException ex) {
              Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
          }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchrequisition = new javax.swing.JDialog();
        userrecordspnl = new javax.swing.JPanel();
        requisitiontxt = new javax.swing.JTextField();
        requisitionspnl = new javax.swing.JScrollPane();
        requisitiontbl = new com.afrisoftech.dbadmin.JTable();
        closebtn = new javax.swing.JButton();
        searchtender = new javax.swing.JDialog();
        tenderrecordspnl = new javax.swing.JPanel();
        tenderrecordstxt = new javax.swing.JTextField();
        tenderrecordsspnl = new javax.swing.JScrollPane();
        tenderrecordstbl = new com.afrisoftech.dbadmin.JTable();
        closebtn1 = new javax.swing.JButton();
        searchsupplier = new javax.swing.JDialog();
        searchsupplierpnl = new javax.swing.JPanel();
        searchsuppliertxt = new javax.swing.JTextField();
        searchsupplierspnl = new javax.swing.JScrollPane();
        searchsupplierstbl = new com.afrisoftech.dbadmin.JTable();
        closebtn2 = new javax.swing.JButton();
        searchtender1 = new javax.swing.JDialog();
        tenderrecordspnl1 = new javax.swing.JPanel();
        tenderrecordstxt1 = new javax.swing.JTextField();
        tenderrecordsspnl1 = new javax.swing.JScrollPane();
        tenderrecordstbl1 = new com.afrisoftech.dbadmin.JTable();
        closebtn3 = new javax.swing.JButton();
        searchsupplier1 = new javax.swing.JDialog();
        searchsupplierpnl1 = new javax.swing.JPanel();
        searchsuppliertxt1 = new javax.swing.JTextField();
        searchsupplierspnl1 = new javax.swing.JScrollPane();
        searchsupplierstbl1 = new com.afrisoftech.dbadmin.JTable();
        closebtn4 = new javax.swing.JButton();
        searchsupplier2 = new javax.swing.JDialog();
        searchsupplierpnl2 = new javax.swing.JPanel();
        searchsuppliertxt2 = new javax.swing.JTextField();
        searchsupplierspnl2 = new javax.swing.JScrollPane();
        searchsupplierstbl2 = new com.afrisoftech.dbadmin.JTable();
        closebtn5 = new javax.swing.JButton();
        searchtender2 = new javax.swing.JDialog();
        tenderrecordspnl2 = new javax.swing.JPanel();
        tenderrecordstxt2 = new javax.swing.JTextField();
        tenderrecordsspnl2 = new javax.swing.JScrollPane();
        tenderrecordstbl2 = new com.afrisoftech.dbadmin.JTable();
        closebtn6 = new javax.swing.JButton();
        searchsupplier3 = new javax.swing.JDialog();
        searchsupplierpnl3 = new javax.swing.JPanel();
        searchsuppliertxt3 = new javax.swing.JTextField();
        searchsupplierspnl3 = new javax.swing.JScrollPane();
        searchsupplierstbl3 = new com.afrisoftech.dbadmin.JTable();
        closebtn7 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser((new java.io.File(System.getProperty("images.dir"))));
        searchtender3 = new javax.swing.JDialog();
        tenderrecordspnl3 = new javax.swing.JPanel();
        tenderrecordstxt3 = new javax.swing.JTextField();
        tenderrecordsspnl3 = new javax.swing.JScrollPane();
        tenderrecordstbl3 = new com.afrisoftech.dbadmin.JTable();
        closebtn8 = new javax.swing.JButton();
        lpopasswd = new javax.swing.JDialog();
        jPanel56 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        searchsupplier4 = new javax.swing.JDialog();
        searchsupplierpnl4 = new javax.swing.JPanel();
        searchsuppliertxt4 = new javax.swing.JTextField();
        searchsupplierspnl4 = new javax.swing.JScrollPane();
        searchsupplierstbl4 = new com.afrisoftech.dbadmin.JTable();
        closebtn9 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lpopasswd1 = new javax.swing.JDialog();
        jPanel58 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPasswordField2 = new javax.swing.JPasswordField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        aienotxt = new javax.swing.JTextField();
        deptraisingtxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jPanel18 = new javax.swing.JPanel();
        requistntxt = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        usernameprocessprtxt = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        aienotxt1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel9 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        postbtn2 = new javax.swing.JButton();
        resetbtn1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jPanel38 = new javax.swing.JPanel();
        jPanel39 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        tenderdatetxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        openingdatetxt = new javax.swing.JTextField();
        jPanel44 = new javax.swing.JPanel();
        tendernotxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        jPanel41 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        usernamedispatchtxt = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        buyerdetailspne = new javax.swing.JTextPane();
        jLabel41 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        suppliertxt = new javax.swing.JTextField();
        searchButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.afrisoftech.dbadmin.JTable();
        jPanel10 = new javax.swing.JPanel();
        usernameopentendertxt = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jPanel45 = new javax.swing.JPanel();
        opentendertxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel17 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        savedocs = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        bqavailedckk = new javax.swing.JCheckBox();
        jButton14 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTextField12 = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        bidavailedchk = new javax.swing.JCheckBox();
        jLabel23 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel47 = new javax.swing.JPanel();
        jPanel48 = new javax.swing.JPanel();
        postbtn3 = new javax.swing.JButton();
        exitbtn4 = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jPanel49 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable6 = new com.afrisoftech.dbadmin.JTable();
        jPanel50 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jPanel12 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        postbtn1 = new javax.swing.JButton();
        exitbtn2 = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new com.afrisoftech.dbadmin.JTable();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        usernamereturnedtxt = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        datePicker5 = new com.afrisoftech.lib.DatePicker();
        jPanel43 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        suppliernametxt = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        receivetendertxt = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        TechnicalEvaluationPane = new javax.swing.JPanel();
        EvaluationTypePane = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        TechnicalEvalutionMainPane = new javax.swing.JPanel();
        financialEvaluation = new javax.swing.JPanel();
        jPanel54 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new com.afrisoftech.dbadmin.JTable();
        jPanel20 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel21 = new javax.swing.JPanel();
        jTextField39 = new javax.swing.JTextField();
        searchButton5 = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable4 = new com.afrisoftech.dbadmin.JTable();
        jLabel45 = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel55 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        postbtn4 = new javax.swing.JButton();
        resetbtn3 = new javax.swing.JButton();
        cancelbtn3 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new com.afrisoftech.dbadmin.JTable();
        jPanel30 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jTextField40 = new javax.swing.JTextField();
        searchButton6 = new javax.swing.JButton();
        jTextField15 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jLabel34 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel36 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel36 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        datePicker6 = new com.afrisoftech.lib.DatePicker();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        usernamelpotxt = new javax.swing.JTextField();
        jPanel57 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();

        searchrequisition.setModal(true);
        searchrequisition.setUndecorated(true);
        searchrequisition.getContentPane().setLayout(new java.awt.GridBagLayout());

        userrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        userrecordspnl.setLayout(new java.awt.GridBagLayout());

        requisitiontxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                requisitiontxtCaretUpdate(evt);
            }
        });
        requisitiontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requisitiontxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        userrecordspnl.add(requisitiontxt, gridBagConstraints);

        requisitiontbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        requisitiontbl.setToolTipText("Click on the target row to select the patient from the search.");
        requisitiontbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        requisitiontbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requisitiontblMouseClicked(evt);
            }
        });
        requisitionspnl.setViewportView(requisitiontbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        userrecordspnl.add(requisitionspnl, gridBagConstraints);

        closebtn.setText("Close");
        closebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userrecordspnl.add(closebtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchrequisition.getContentPane().add(userrecordspnl, gridBagConstraints);

        searchtender.setModal(true);
        searchtender.setUndecorated(true);
        searchtender.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxtCaretUpdate(evt);
            }
        });
        tenderrecordstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl.add(tenderrecordstxt, gridBagConstraints);

        tenderrecordstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstblMouseClicked(evt);
            }
        });
        tenderrecordsspnl.setViewportView(tenderrecordstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl.add(tenderrecordsspnl, gridBagConstraints);

        closebtn1.setText("Close");
        closebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl.add(closebtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender.getContentPane().add(tenderrecordspnl, gridBagConstraints);

        searchsupplier.setModal(true);
        searchsupplier.setUndecorated(true);
        searchsupplier.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxtCaretUpdate(evt);
            }
        });
        searchsuppliertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl.add(searchsuppliertxt, gridBagConstraints);

        searchsupplierstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstblMouseClicked(evt);
            }
        });
        searchsupplierspnl.setViewportView(searchsupplierstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl.add(searchsupplierspnl, gridBagConstraints);

        closebtn2.setText("Close");
        closebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl.add(closebtn2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier.getContentPane().add(searchsupplierpnl, gridBagConstraints);

        searchtender1.setModal(true);
        searchtender1.setUndecorated(true);
        searchtender1.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl1.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt1CaretUpdate(evt);
            }
        });
        tenderrecordstxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl1.add(tenderrecordstxt1, gridBagConstraints);

        tenderrecordstbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl1.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tenderrecordstbl1MouseEntered(evt);
            }
        });
        tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl1.add(tenderrecordsspnl1, gridBagConstraints);

        closebtn3.setText("Close");
        closebtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl1.add(closebtn3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender1.getContentPane().add(tenderrecordspnl1, gridBagConstraints);

        searchsupplier1.setModal(true);
        searchsupplier1.setUndecorated(true);
        searchsupplier1.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl1.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt1CaretUpdate(evt);
            }
        });
        searchsuppliertxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl1.add(searchsuppliertxt1, gridBagConstraints);

        searchsupplierstbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl1.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl1MouseEntered(evt);
            }
        });
        searchsupplierspnl1.setViewportView(searchsupplierstbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl1.add(searchsupplierspnl1, gridBagConstraints);

        closebtn4.setText("Close");
        closebtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl1.add(closebtn4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier1.getContentPane().add(searchsupplierpnl1, gridBagConstraints);

        searchsupplier2.setModal(true);
        searchsupplier2.setUndecorated(true);
        searchsupplier2.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl2.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt2CaretUpdate(evt);
            }
        });
        searchsuppliertxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl2.add(searchsuppliertxt2, gridBagConstraints);

        searchsupplierstbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl2.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl2.setShowHorizontalLines(false);
        boolean[]  canEdit =new boolean[] {
            false

        };
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl2MouseEntered(evt);
            }
        });
        searchsupplierspnl2.setViewportView(searchsupplierstbl2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl2.add(searchsupplierspnl2, gridBagConstraints);

        closebtn5.setText("Close");
        closebtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl2.add(closebtn5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier2.getContentPane().add(searchsupplierpnl2, gridBagConstraints);

        searchtender2.setModal(true);
        searchtender2.setUndecorated(true);
        searchtender2.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl2.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt2CaretUpdate(evt);
            }
        });
        tenderrecordstxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl2.add(tenderrecordstxt2, gridBagConstraints);

        tenderrecordstbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl2.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl2MouseClicked(evt);
            }
        });
        tenderrecordsspnl2.setViewportView(tenderrecordstbl2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl2.add(tenderrecordsspnl2, gridBagConstraints);

        closebtn6.setText("Close");
        closebtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl2.add(closebtn6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender2.getContentPane().add(tenderrecordspnl2, gridBagConstraints);

        searchsupplier3.setModal(true);
        searchsupplier3.setUndecorated(true);
        searchsupplier3.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl3.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt3CaretUpdate(evt);
            }
        });
        searchsuppliertxt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl3.add(searchsuppliertxt3, gridBagConstraints);

        searchsupplierstbl3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl3.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl3.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl3MouseEntered(evt);
            }
        });
        searchsupplierspnl3.setViewportView(searchsupplierstbl3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl3.add(searchsupplierspnl3, gridBagConstraints);

        closebtn7.setText("Close");
        closebtn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl3.add(closebtn7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier3.getContentPane().add(searchsupplierpnl3, gridBagConstraints);

        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jFileChooser1, gridBagConstraints);

        searchtender3.setModal(true);
        searchtender3.setUndecorated(true);
        searchtender3.getContentPane().setLayout(new java.awt.GridBagLayout());

        tenderrecordspnl3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tenderrecordspnl3.setLayout(new java.awt.GridBagLayout());

        tenderrecordstxt3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tenderrecordstxt3CaretUpdate(evt);
            }
        });
        tenderrecordstxt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenderrecordstxt3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        tenderrecordspnl3.add(tenderrecordstxt3, gridBagConstraints);

        tenderrecordstbl3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tenderrecordstbl3.setToolTipText("Click on the target row to select the patient from the search.");
        tenderrecordstbl3.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        tenderrecordstbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenderrecordstbl3MouseClicked(evt);
            }
        });
        tenderrecordsspnl3.setViewportView(tenderrecordstbl3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        tenderrecordspnl3.add(tenderrecordsspnl3, gridBagConstraints);

        closebtn8.setText("Close");
        closebtn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        tenderrecordspnl3.add(closebtn8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchtender3.getContentPane().add(tenderrecordspnl3, gridBagConstraints);

        lpopasswd.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        lpopasswd.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel56.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Authorisation Password Here"));
        jPanel56.setAutoscrolls(true);
        jPanel56.setLayout(new java.awt.GridBagLayout());

        jButton17.setText("Raise LPO   ");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton17, gridBagConstraints);

        jButton18.setText("Close Dialog");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel56.add(jButton18, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel56.add(jPasswordField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        lpopasswd.getContentPane().add(jPanel56, gridBagConstraints);

        searchsupplier4.setModal(true);
        searchsupplier4.setUndecorated(true);
        searchsupplier4.getContentPane().setLayout(new java.awt.GridBagLayout());

        searchsupplierpnl4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchsupplierpnl4.setLayout(new java.awt.GridBagLayout());

        searchsuppliertxt4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchsuppliertxt4CaretUpdate(evt);
            }
        });
        searchsuppliertxt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliertxt4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        searchsupplierpnl4.add(searchsuppliertxt4, gridBagConstraints);

        searchsupplierstbl4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        searchsupplierstbl4.setToolTipText("Click on the target row to select the patient from the search.");
        searchsupplierstbl4.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        searchsupplierstbl4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchsupplierstbl4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchsupplierstbl4MouseEntered(evt);
            }
        });
        searchsupplierspnl4.setViewportView(searchsupplierstbl4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        searchsupplierpnl4.add(searchsupplierspnl4, gridBagConstraints);

        closebtn9.setText("Close");
        closebtn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplierpnl4.add(closebtn9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchsupplier4.getContentPane().add(searchsupplierpnl4, gridBagConstraints);

        jLabel9.setText("No Results");

        lpopasswd1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        lpopasswd1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel58.setBorder(javax.swing.BorderFactory.createTitledBorder("You Need Authorisation to complete"));
        jPanel58.setAutoscrolls(true);
        jPanel58.setLayout(new java.awt.GridBagLayout());

        jButton20.setText("Delete PDF");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel58.add(jButton20, gridBagConstraints);

        jButton21.setText("Close Dialog");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel58.add(jButton21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 100);
        jPanel58.add(jPasswordField2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        lpopasswd1.getContentPane().add(jPanel58, gridBagConstraints);

        setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Tender Details"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Tender Opening Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel6, gridBagConstraints);

        jLabel5.setText("Item Category Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 20);
        jPanel7.add(jLabel5, gridBagConstraints);

        aienotxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 10);
        jPanel7.add(aienotxt, gridBagConstraints);

        deptraisingtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(deptraisingtxt, gridBagConstraints);

        jLabel7.setText("Tender Closing Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 20);
        jPanel7.add(jLabel7, gridBagConstraints);

        jTextPane1.setEditable(false);
        jTextPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Buyer Address Here"));
        jScrollPane1.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel7.add(jScrollPane1, gridBagConstraints);

        jLabel4.setText("Dept. Raising Requisition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel4, gridBagConstraints);

        jLabel1.setText("Search Requisition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 30);
        jPanel7.add(datePicker2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 30);
        jPanel7.add(datePicker3, gridBagConstraints);

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel18.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        requistntxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(requistntxt, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton4.setToolTipText("Search Patient's Name");
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel18.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(jPanel18, gridBagConstraints);

        usernameprocessprtxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 30);
        jPanel7.add(usernameprocessprtxt, gridBagConstraints);

        jLabel48.setText("Broad Item Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel48, gridBagConstraints);

        aienotxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 10);
        jPanel7.add(aienotxt1, gridBagConstraints);

        jLabel3.setText("User");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        jPanel7.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel1.add(jPanel7, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Units", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        /*              try {

            crset3.setConnectionSource(pConnDB);
            crset3.execute("select department_name from pb_departments order by department_name");

            cmbox3.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "department_name", null, null,null));

            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Cost Center");

            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox3));

            //  cmbox3.addActionListener(new java.awt.event.ActionListener() {

                //  public void actionPerformed(java.awt.event.ActionEvent evt) {

                    //       cmbox3ActionPerformed(evt);
                    //  }
                //});
    } catch(java.sql.SQLException sqlExec) {

        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }
    */

    javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 4; i++) {
        column = jTable1.getColumnModel().getColumn(i);
        if (i == 1) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {
            if (i == 0) {
                column.setPreferredWidth(50);
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(50);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
    }
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane3.setViewportView(jTable1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel8.add(jScrollPane3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 9.0;
    jPanel1.add(jPanel8, gridBagConstraints);

    jPanel9.setLayout(new java.awt.GridBagLayout());

    jButton1.setText("Save");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton1, gridBagConstraints);

    jButton2.setText("Remove Rows");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton2, gridBagConstraints);

    jButton3.setText("Clear");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton3, gridBagConstraints);

    jButton4.setText("Close");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
    jPanel9.add(jButton4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jPanel9, gridBagConstraints);

    jTabbedPane1.addTab("Enter Tender Details", jPanel1);

    jPanel25.setLayout(new java.awt.GridBagLayout());

    jPanel26.setLayout(new java.awt.GridBagLayout());

    jPanel37.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel37.setLayout(new java.awt.GridBagLayout());

    postbtn2.setText("Dispatch Tender");
    postbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(postbtn2, gridBagConstraints);

    resetbtn1.setMnemonic('R');
    resetbtn1.setText("RemoveRow");
    resetbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(resetbtn1, gridBagConstraints);

    cancelbtn1.setMnemonic('l');
    cancelbtn1.setText("Clear");
    cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(cancelbtn1, gridBagConstraints);

    exitbtn1.setMnemonic('c');
    exitbtn1.setText("Close");
    exitbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel37.add(exitbtn1, gridBagConstraints);

    jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel37.add(jLabel51, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel26.add(jPanel37, gridBagConstraints);

    jPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel27.setLayout(new java.awt.GridBagLayout());

    jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable11.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity"
        }
    ));
    jTable11.setNextFocusableComponent(postbtn1);
    jTable11.setRowHeight(20);
    jTable11.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column1 = null;
    for (int i = 0; i < 5; i++) {
        column1 = jTable11.getColumnModel().getColumn(i);
        if (i == 0) {

            column1.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column1.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column1.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane11.setViewportView(jTable11);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel27.add(jScrollPane11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel26.add(jPanel27, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel38.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel38.setLayout(new java.awt.GridBagLayout());

    jPanel39.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel39.setLayout(new java.awt.GridBagLayout());

    jLabel20.setText("Tender Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel20, gridBagConstraints);

    tenderdatetxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(tenderdatetxt, gridBagConstraints);

    jLabel21.setText("Tender Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel21, gridBagConstraints);

    jLabel29.setText("Opening Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel29, gridBagConstraints);

    openingdatetxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(openingdatetxt, gridBagConstraints);

    jPanel44.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel44.setLayout(new java.awt.GridBagLayout());

    tendernotxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel44.add(tendernotxt, gridBagConstraints);

    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton.setToolTipText("Search");
    searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel44.add(searchButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(jPanel44, gridBagConstraints);

    jLabel40.setText("Dispatch Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel39.add(jLabel40, gridBagConstraints);

    datePicker4.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel39.add(datePicker4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel38.add(jPanel39, gridBagConstraints);

    jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
    jPanel41.setLayout(new java.awt.GridBagLayout());

    jLabel42.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel41.add(jLabel42, gridBagConstraints);

    usernamedispatchtxt.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel41.add(usernamedispatchtxt, gridBagConstraints);

    buyerdetailspne.setEditable(false);
    buyerdetailspne.setBorder(javax.swing.BorderFactory.createTitledBorder("Buyer's Designation & Address"));
    jScrollPane8.setViewportView(buyerdetailspne);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 1.0;
    jPanel41.add(jScrollPane8, gridBagConstraints);

    jLabel41.setText("Send Tender To");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel41.add(jLabel41, gridBagConstraints);

    jPanel40.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel40.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel40.setLayout(new java.awt.GridBagLayout());

    suppliertxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel40.add(suppliertxt, gridBagConstraints);

    searchButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton8.setToolTipText("Search Patient's Name");
    searchButton8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton8.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton8.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton8ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel40.add(searchButton8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel41.add(jPanel40, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel38.add(jPanel41, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel26.add(jPanel38, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel25.add(jPanel26, gridBagConstraints);

    jTabbedPane1.addTab("Dispatch Tender", jPanel25);

    jPanel2.setLayout(new java.awt.GridBagLayout());

    jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct su.code code , fu.supplier supplier  FROM st_floated_quotations fu, \n" +
        "st_suppliers su where  quotation_no ilike '" +opentendertxt.getText()+ "' and fu.supplier=su.supplier_name\n" +
        ""));

// new String [] {
    //    "SupplierID", "Supplier Name", "Tender Number", "Open Tender"
    //}

    //);
    jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable2MouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(jTable2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    jPanel2.add(jScrollPane2, gridBagConstraints);

    jPanel10.setLayout(new java.awt.GridBagLayout());

    usernameopentendertxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 200, 0, 0);
    jPanel10.add(usernameopentendertxt, gridBagConstraints);

    jLabel44.setText("Select Tender");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    jPanel10.add(jLabel44, gridBagConstraints);

    jPanel45.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel45.setLayout(new java.awt.GridBagLayout());

    opentendertxt.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel45.add(opentendertxt, gridBagConstraints);

    searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton1.setToolTipText("Search");
    searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel45.add(searchButton1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel10.add(jPanel45, gridBagConstraints);

    jLabel2.setForeground(new java.awt.Color(255, 0, 51));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel10.add(jLabel2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel2.add(jPanel10, gridBagConstraints);

    jPanel11.setLayout(new java.awt.GridBagLayout());

    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/refresh.jpg"))); // NOI18N
    jButton5.setText("Refresh Records");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 2.0;
    jPanel11.add(jButton5, gridBagConstraints);

    jButton6.setText("Close Form");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jButton6, gridBagConstraints);

    jButton7.setText("Open Tender(s)");
    jButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton7ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 2.0;
    jPanel11.add(jButton7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel2.add(jPanel11, gridBagConstraints);

    jTabbedPane1.addTab("Tender Opening", jPanel2);

    jPanel3.setLayout(new java.awt.GridBagLayout());

    jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
    jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTabbedPane2MouseClicked(evt);
        }
    });

    jPanel17.setLayout(new java.awt.GridBagLayout());

    jPanel31.setLayout(new java.awt.GridBagLayout());

    jButton16.setText("Edit Data");
    jButton16.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton16ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(jButton16, gridBagConstraints);

    savedocs.setText("Save  Form Details");
    savedocs.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            savedocsActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(savedocs, gridBagConstraints);

    jButton15.setText("Remove Saved Docs");
    jButton15.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton15ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel31.add(jButton15, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel17.add(jPanel31, gridBagConstraints);

    jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder("Bidders' Documentation"));
    jPanel29.setLayout(new java.awt.GridBagLayout());

    jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/pdf1.jpg"))); // NOI18N
    jButton13.setText("Upload pdf");
    jButton13.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton13ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jButton13, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(bqavailedckk, gridBagConstraints);

    jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/pdf1.jpg"))); // NOI18N
    jButton14.setText("Upload  pdf");
    jButton14.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton14ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jButton14, gridBagConstraints);

    jLabel30.setForeground(new java.awt.Color(255, 0, 0));
    jLabel30.setText("Tax Certificate");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel30, gridBagConstraints);

    jLabel32.setForeground(new java.awt.Color(255, 0, 0));
    jLabel32.setText("Certificate of Incorporation");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel32, gridBagConstraints);

    jTextField13.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jTextField13, gridBagConstraints);

    jLabel28.setForeground(new java.awt.Color(255, 0, 0));
    jLabel28.setText("Business Questionnaire");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel28, gridBagConstraints);

    jLabel17.setText("tick if properly filled");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jLabel17, gridBagConstraints);

    jTextArea3.setColumns(20);
    jTextArea3.setRows(5);
    jTextArea3.setBorder(javax.swing.BorderFactory.createTitledBorder("Comment  on Documentation"));
    jScrollPane15.setViewportView(jTextArea3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jScrollPane15, gridBagConstraints);

    jTextField12.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel29.add(jTextField12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 6.0;
    jPanel17.add(jPanel29, gridBagConstraints);

    jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Bidding Information"));
    jPanel23.setLayout(new java.awt.GridBagLayout());

    jComboBox1.setEditable(true);
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Equity" }));
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jComboBox1, gridBagConstraints);

    jLabel26.setForeground(new java.awt.Color(255, 0, 0));
    jLabel26.setText("Bank Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel26, gridBagConstraints);

    jTextField8.setEditable(false);
    jTextField8.setForeground(new java.awt.Color(255, 102, 153));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jTextField8, gridBagConstraints);

    jLabel24.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
    jLabel24.setText("(tick if availed)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel24, gridBagConstraints);

    jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField11CaretUpdate(evt);
        }
    });
    jTextField11.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField11ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jTextField11, gridBagConstraints);

    jLabel25.setText("Bid Ammount");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel25, gridBagConstraints);

    jLabel27.setForeground(new java.awt.Color(255, 0, 0));
    jLabel27.setText("Bid Ref No.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel27, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(bidavailedchk, gridBagConstraints);

    jLabel23.setForeground(new java.awt.Color(255, 0, 0));
    jLabel23.setText("Original 1% Bid Bond Form ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel23, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jTextField14, gridBagConstraints);

    jLabel22.setForeground(new java.awt.Color(255, 0, 0));
    jLabel22.setText("1% Bid(Kshs)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jLabel22, gridBagConstraints);

    jTextArea4.setColumns(20);
    jTextArea4.setForeground(new java.awt.Color(0, 0, 0));
    jTextArea4.setRows(5);
    jTextArea4.setBorder(javax.swing.BorderFactory.createTitledBorder("Comments on Bidding info"));
    jScrollPane16.setViewportView(jTextArea4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel23.add(jScrollPane16, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 6.0;
    jPanel17.add(jPanel23, gridBagConstraints);

    jTabbedPane2.addTab("Tender Documentation", jPanel17);

    jPanel5.setLayout(new java.awt.GridBagLayout());

    jPanel47.setLayout(new java.awt.GridBagLayout());

    jPanel48.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel48.setLayout(new java.awt.GridBagLayout());

    postbtn3.setText("Save Item Details");
    postbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel48.add(postbtn3, gridBagConstraints);

    exitbtn4.setMnemonic('c');
    exitbtn4.setText("Remove Row(s)");
    exitbtn4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel48.add(exitbtn4, gridBagConstraints);

    jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel48.add(jLabel54, gridBagConstraints);

    jButton12.setText("Edit");
    jButton12.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton12ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel48.add(jButton12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 3.0;
    jPanel47.add(jPanel48, gridBagConstraints);

    jPanel49.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel49.setLayout(new java.awt.GridBagLayout());

    jTable6.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null,  new Boolean(true)},
            {null, null, null, null, null,  new Boolean(false)},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null}
        },
        new String [] {
            "Item Code", "Description", "Days To Deliver", "Brand", "Country of Orign", "Item Entered"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
    });
    jScrollPane9.setViewportView(jTable6);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 4.0;
    jPanel49.add(jScrollPane9, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 20.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel47.add(jPanel49, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel50.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel50.setLayout(new java.awt.GridBagLayout());

    jCheckBox2.setText("Select All Items");
    jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel50.add(jCheckBox2, gridBagConstraints);

    jTextPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Comments Here for Posting"));
    jScrollPane10.setViewportView(jTextPane2);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
    jPanel50.add(jScrollPane10, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel47.add(jPanel50, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel5.add(jPanel47, gridBagConstraints);

    jTabbedPane2.addTab("Product Specifications", jPanel5);

    jPanel12.setLayout(new java.awt.GridBagLayout());

    jPanel32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel32.setLayout(new java.awt.GridBagLayout());

    postbtn1.setText("Save Tender Offers ");
    postbtn1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn1ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(postbtn1, gridBagConstraints);

    exitbtn2.setMnemonic('c');
    exitbtn2.setText("Close");
    exitbtn2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitbtn2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(exitbtn2, gridBagConstraints);

    jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel32.add(jLabel52, gridBagConstraints);

    jButton8.setText("Clear");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel32.add(jButton8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.weighty = 3.0;
    jPanel12.add(jPanel32, gridBagConstraints);

    jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel22.setLayout(new java.awt.GridBagLayout());

    jTable12.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Item Code", "Item Description", "Units", "Qty", "Unit Price"
        }
    ));
    jTable12.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable12MouseClicked(evt);
        }
    });
    jScrollPane12.setViewportView(jTable12);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel22.add(jScrollPane12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 25.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel12.add(jPanel22, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel13.setLayout(new java.awt.GridBagLayout());

    jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Tender No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel14.setLayout(new java.awt.GridBagLayout());

    jTextField4.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(jTextField4, gridBagConstraints);

    jLabel11.setText("Tender Opened");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel14.add(jLabel11, gridBagConstraints);

    jLabel12.setText("Tender Closing date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel14.add(jLabel12, gridBagConstraints);

    jTextField5.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(jTextField5, gridBagConstraints);

    jLabel13.setText("Bid Amount(Kshs)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel14.add(jLabel13, gridBagConstraints);

    jTextField1.setEditable(false);
    jTextField1.setForeground(new java.awt.Color(255, 0, 51));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel14.add(jTextField1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jPanel14, gridBagConstraints);

    jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Supplier Here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel16.setLayout(new java.awt.GridBagLayout());

    jLabel14.setText("Returned on");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel16.add(jLabel14, gridBagConstraints);

    jLabel16.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel16.add(jLabel16, gridBagConstraints);

    usernamereturnedtxt.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel16.add(usernamereturnedtxt, gridBagConstraints);

    jTextPane3.setEditable(false);
    jTextPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Supplier Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jScrollPane4.setViewportView(jTextPane3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel16.add(jScrollPane4, gridBagConstraints);

    datePicker5.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel16.add(datePicker5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jPanel16, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 10.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel12.add(jPanel13, gridBagConstraints);

    jTabbedPane2.addTab("Item Pricing/Product Specs", jPanel12);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel3.add(jTabbedPane2, gridBagConstraints);

    jPanel43.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Tender Here"));
    jPanel43.setForeground(new java.awt.Color(0, 0, 0));
    jPanel43.setLayout(new java.awt.GridBagLayout());

    jPanel46.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 204, 204)));
    jPanel46.setLayout(new java.awt.GridBagLayout());

    jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel42.setLayout(new java.awt.GridBagLayout());

    suppliernametxt.setEditable(false);
    suppliernametxt.setForeground(new java.awt.Color(0, 51, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel42.add(suppliernametxt, gridBagConstraints);

    searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton3.setToolTipText("Search");
    searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel42.add(searchButton3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel46.add(jPanel42, gridBagConstraints);

    jLabel15.setForeground(new java.awt.Color(255, 0, 0));
    jLabel15.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 10);
    jPanel46.add(jLabel15, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 1.0;
    jPanel46.add(jLabel56, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
    jPanel43.add(jPanel46, gridBagConstraints);

    jPanel53.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 204, 204)));
    jPanel53.setLayout(new java.awt.GridBagLayout());

    jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel15.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel15.setLayout(new java.awt.GridBagLayout());

    receivetendertxt.setEditable(false);
    receivetendertxt.setForeground(new java.awt.Color(0, 51, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel15.add(receivetendertxt, gridBagConstraints);

    searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton2.setToolTipText("Search Patient's Name");
    searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel15.add(searchButton2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel53.add(jPanel15, gridBagConstraints);

    jLabel10.setForeground(new java.awt.Color(255, 0, 0));
    jLabel10.setText("Tender Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel53.add(jLabel10, gridBagConstraints);

    jLabel8.setText("jLabel8");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 1.0;
    jPanel53.add(jLabel8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel43.add(jPanel53, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel3.add(jPanel43, gridBagConstraints);

    jTabbedPane1.addTab("Enter Returned Tenders", jPanel3);

    jPanel4.setLayout(new java.awt.GridBagLayout());

    jTabbedPane3.setBackground(new java.awt.Color(0, 255, 255));
    jTabbedPane3.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

    TechnicalEvaluationPane.setLayout(new java.awt.GridBagLayout());

    EvaluationTypePane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    EvaluationTypePane.setLayout(new java.awt.GridBagLayout());

    jCheckBox3.setText("General Evaluation");
    jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    EvaluationTypePane.add(jCheckBox3, gridBagConstraints);

    jCheckBox4.setText("Pharmaceuticals Evaluation");
    jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    EvaluationTypePane.add(jCheckBox4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    TechnicalEvaluationPane.add(EvaluationTypePane, gridBagConstraints);

    TechnicalEvalutionMainPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    TechnicalEvalutionMainPane.setLayout(new java.awt.GridBagLayout());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    TechnicalEvaluationPane.add(TechnicalEvalutionMainPane, gridBagConstraints);

    jTabbedPane3.addTab("Technical Evaluation", TechnicalEvaluationPane);

    financialEvaluation.setLayout(new java.awt.GridBagLayout());

    jPanel54.setLayout(new java.awt.GridBagLayout());

    jPanel19.setLayout(new java.awt.GridBagLayout());

    jTable3.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "Bidders", "Award"
        }
    ));
    jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable3MouseClicked(evt);
        }
    });
    jScrollPane5.setViewportView(jTable3);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    jPanel19.add(jScrollPane5, gridBagConstraints);

    jPanel20.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel20.setLayout(new java.awt.GridBagLayout());

    jLabel18.setText("Tender No:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 30);
    jPanel20.add(jLabel18, gridBagConstraints);

    jLabel19.setText("Sort By");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 30);
    jPanel20.add(jLabel19, gridBagConstraints);

    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Highest Price" }));
    jComboBox2.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jComboBox2ItemStateChanged(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel20.add(jComboBox2, gridBagConstraints);

    jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel21.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel21.setLayout(new java.awt.GridBagLayout());

    jTextField39.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel21.add(jTextField39, gridBagConstraints);

    searchButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton5.setToolTipText("Search Patient's Name");
    searchButton5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton5.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton5.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel21.add(searchButton5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel20.add(jPanel21, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel19.add(jPanel20, gridBagConstraints);

    jSplitPane1.setLeftComponent(jPanel19);

    jPanel24.setLayout(new java.awt.GridBagLayout());

    jTable4.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Item Code", "Item Description", "Date to Deliver", "Qty", "Price"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane6.setViewportView(jTable4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 10.0;
    jPanel24.add(jScrollPane6, gridBagConstraints);

    jLabel45.setForeground(new java.awt.Color(255, 51, 102));
    jLabel45.setText("jLabel45");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.5;
    jPanel24.add(jLabel45, gridBagConstraints);

    jSplitPane1.setRightComponent(jPanel24);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel54.add(jSplitPane1, gridBagConstraints);

    actionPanel.setLayout(new java.awt.GridBagLayout());

    jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32x32/download.jpg"))); // NOI18N
    jButton9.setText("Done Approval");
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 120, 5, 120);
    actionPanel.add(jButton9, gridBagConstraints);

    jButton10.setText("Close Form");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 120, 5, 120);
    actionPanel.add(jButton10, gridBagConstraints);

    jButton11.setText("?Help");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 120, 5, 120);
    actionPanel.add(jButton11, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel54.add(actionPanel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    financialEvaluation.add(jPanel54, gridBagConstraints);

    jTabbedPane3.addTab("Financial Evaluation/Award", financialEvaluation);
    jTabbedPane3.addTab("Contract Management", jPanel55);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel4.add(jTabbedPane3, gridBagConstraints);

    jTabbedPane1.addTab("Evaluation& Contract", jPanel4);

    jPanel6.setLayout(new java.awt.GridBagLayout());

    jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel33.setLayout(new java.awt.GridBagLayout());

    postbtn4.setMnemonic('n');
    postbtn4.setText("Generate LPO/LSO");
    postbtn4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            postbtn4ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(postbtn4, gridBagConstraints);

    resetbtn3.setMnemonic('R');
    resetbtn3.setText("RemoveRow");
    resetbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            resetbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(resetbtn3, gridBagConstraints);

    cancelbtn3.setMnemonic('l');
    cancelbtn3.setText("Clear form");
    cancelbtn3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelbtn3ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weightx = 2.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(cancelbtn3, gridBagConstraints);

    jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel33.add(jLabel53, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 200.0;
    gridBagConstraints.weighty = 1.0;
    jPanel33.add(jLabel43, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 3.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
    jPanel6.add(jPanel33, gridBagConstraints);

    jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel28.setLayout(new java.awt.GridBagLayout());

    jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    jTable13.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null}
        },
        new String [] {
            "No", "Item Code", "Item Description", "Units", "Quantity", "Unit Price"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable13.setSurrendersFocusOnKeystroke(true);
    /*cmbox4 = new javax.swing.JComboBox();

    cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select department_name from pb_departments order by department_name"));

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

    *
    javax.swing.SpinnerDateModel spinerDateTable1 = new javax.swing.SpinnerDateModel();

    javax.swing.JSpinner dateSpinnerTable1 = new javax.swing.JSpinner(spinerDateTable1);

    javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Date Due");

    seditor.setCellEditor(new javax.swing.DefaultCellEditor(dateSpinnerTable1));
    */
    javax.swing.table.TableColumn column3 = null;
    for (int i = 0; i < 5; i++) {
        column3 = jTable13.getColumnModel().getColumn(i);
        if (i == 0) {

            column3.setPreferredWidth(8); //sport column is bigger
        } else {
            if (i == 2) {
                column3.setPreferredWidth(400);
            } else {
                //if (i == 2) {
                    column3.setPreferredWidth(40);
                    // }  else
                //column1.setPreferredWidth(50);

            }
        }
    }
    jScrollPane13.setViewportView(jTable13);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
    jPanel28.add(jScrollPane13, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
    jPanel6.add(jPanel28, gridBagConstraints);

    /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
    dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
    jPanel11.add(dateSpinner1, gridBagConstraints);
    /*     gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(usernamedispatchtxt, gridBagConstraints);
    */
    jPanel30.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel30.setLayout(new java.awt.GridBagLayout());

    jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Quotation No. here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));
    jPanel34.setLayout(new java.awt.GridBagLayout());

    jLabel31.setText("Tender No");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel31, gridBagConstraints);

    jPanel35.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel35.setMinimumSize(new java.awt.Dimension(82, 37));
    jPanel35.setLayout(new java.awt.GridBagLayout());

    jTextField40.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel35.add(jTextField40, gridBagConstraints);

    searchButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
    searchButton6.setToolTipText("Search Patient's Name");
    searchButton6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    searchButton6.setMaximumSize(new java.awt.Dimension(74, 53));
    searchButton6.setMinimumSize(new java.awt.Dimension(74, 53));
    searchButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    searchButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButton6ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel35.add(searchButton6, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel34.add(jPanel35, gridBagConstraints);

    jTextField15.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel34.add(jTextField15, gridBagConstraints);

    jLabel33.setText("Closing Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel33, gridBagConstraints);

    jTextPane4.setEditable(false);
    jTextPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Buyer's Designation & Address"));
    jScrollPane7.setViewportView(jTextPane4);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 4.0;
    gridBagConstraints.weighty = 4.0;
    jPanel34.add(jScrollPane7, gridBagConstraints);

    jLabel34.setText("Openning Date");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel34, gridBagConstraints);

    jTextField16.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel34.add(jTextField16, gridBagConstraints);

    jLabel35.setText("Document Type");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel35, gridBagConstraints);

    jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "LPO", "LSO", "IMPREST", "OTHERS" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel34.add(jComboBox11, gridBagConstraints);

    jLabel36.setText("Selection Criteria");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    jPanel34.add(jLabel36, gridBagConstraints);

    jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Lowest Price", "Average Price", "Highest Price", "Delivery" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel34.add(jComboBox12, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 100.0;
    jPanel30.add(jPanel34, gridBagConstraints);

    jPanel36.setLayout(new java.awt.GridBagLayout());

    jLabel37.setText("Date Due");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel36.add(jLabel37, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel36.add(datePicker6, gridBagConstraints);

    jLabel38.setText("Supplier");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel36.add(jLabel38, gridBagConstraints);

    jLabel39.setText("User Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
    jPanel36.add(jLabel39, gridBagConstraints);

    usernamelpotxt.setEditable(false);
    usernamelpotxt.setEnabled(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel36.add(usernamelpotxt, gridBagConstraints);

    jPanel57.setLayout(new java.awt.GridBagLayout());

    jTextField2.setEditable(false);
    jTextField2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField2ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel57.add(jTextField2, gridBagConstraints);

    jButton19.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton19ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weighty = 1.0;
    jPanel57.add(jButton19, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel36.add(jPanel57, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel30.add(jPanel36, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 8.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
    jPanel6.add(jPanel30, gridBagConstraints);

    jTabbedPane1.addTab("Raise LPO/LSO(s)", jPanel6);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(jTabbedPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
   
    private void searchquotation() {
    
System.out.println("Showing dialog");

        //searchrequisition.dispose();
        java.awt.Point point = this.requistntxt.getLocationOnScreen();
        searchrequisition.setSize(400, 200);
        searchrequisition.setLocation(point);
        searchrequisition.setVisible(true);
}    private void searchreceivedtenders() {
     java.awt.Point point = this.receivetendertxt.getLocationOnScreen();
        searchtender1.setSize(400, 200);
        searchtender1.setLocation(point);
        searchtender1.setVisible(true); 
        searchButton3.setEnabled(true);
    
    }   

     private void searchawardedsuppliers(){
    java.awt.Point point = this.suppliernametxt.getLocationOnScreen();
        searchsupplier1.setSize(400, 200);
        searchsupplier1.setLocation(point);
        searchsupplier1.setVisible(true);
        
//         searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier, quotation_date   "
//                    + "FROM st_floated_quotations WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' order by quotation_date desc;"));
//            searchsupplierstbl1.setShowHorizontalLines(false);
//            
//            searchsupplierspnl1.setViewportView(searchsupplierstbl1);
       
    }
   private void uploadfile(){
//         java.awt.Point a = this.jLabel30.getLocationOnScreen();
//       
//        jDialog1.setSize(500, 300);
//        jDialog1.setLocation(a);
//        
//        jDialog1.setVisible(true); 
//        jDialog1.setEnabled(true);
             com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();
             filter.addExtension("pdf");
             jFileChooser1.setFileFilter(filter);
             
//             int returnVal = jFileChooser1.showOpenDialog(this);
//              System.out.println("sasa hii" +returnVal);
//              
//              if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
//
//                  
//                  File doc = jFileChooser1.getSelectedFile();
//                  File doc2 = jFileChooser1.getSelectedFile();
//                  //real stuff down here
////            System.out.println("You chose to open this file: "
////                    +jFileChooser1.getSelectedFile().getPath());
//                      String pic =doc.getName();
//                      String picp = doc.getAbsolutePath();
//                     
//                      String pic2 =doc2.getName();
//                      String picp2 = doc2.getAbsolutePath();
//                      
//                    
//                
//              }
              
              
//              File taxcert =null;
//              try{
//              taxcert =new File(picp);
//              
//              }
//              catch{
//              
//              }    
    
    }    private void searchtendertopay(){
     System.out.println("Showing dialog");

        //searchrequisition.dispose();
        java.awt.Point point = this.jTextField40.getLocationOnScreen();
        searchtender2.setSize(400, 200);
        searchtender2.setLocation(point);
        searchtender2.setVisible(true);
    
    
    
    }    private void searchsuppliertopay(){
//    java.awt.Point point = this.jTextField93.getLocationOnScreen();
//        searchsupplier3.setSize(400, 200);
//        searchsupplier3.setLocation(point);
//        searchsupplier3.setVisible(true);
//    
    
    
    }    private void searchtendertoaward(){
        jLabel9.setVisible(false);
        java.awt.Point point = this.jTextField39.getLocationOnScreen();
        searchtender3.setSize(400, 200);
        searchtender3.setLocation(point);
        searchtender3.setVisible(true);
    
    
    
    }
   
    private void requisitiontxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_requisitiontxtCaretUpdate
        if (this.requisitiontxt.getCaretPosition() >1) {
            System.out.print("Nothing");

        } else
        {
            requisitiontbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT requisition_no, agenda_no, date_buyer_assigned \n" +
"  FROM st_assign_buyers where pr_status= false order by date_buyer_assigned asc ;"));
            requisitiontbl.setShowHorizontalLines(false);
            requisitionspnl.setViewportView(requisitiontbl);

        }   // Add your handling code here:
    }//GEN-LAST:event_requisitiontxtCaretUpdate

    private void requisitiontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requisitiontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requisitiontxtActionPerformed

    private void requisitiontblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requisitiontblMouseClicked
        requistntxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 0).toString());
        //depttxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 3).toString());
        //grouptxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 2).toString());
        
        searchrequisition.dispose();
        deptraisingtxt.setText(null);
        aienotxt.setText(null);
        aienotxt1.setText(null);
       //clear table 
      for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
      
         int j = 0;
        try {
            java.sql.Statement code = connectDB.createStatement();
            java.sql.Statement o = connectDB.createStatement();   
            java.sql.Statement stmtTable111 = connectDB.createStatement();
            
             java.sql.ResultSet cd = code.executeQuery("SELECT  sub_item, allocated FROM st_subitems_pr_grouping where pr_no ilike '"+requistntxt.getText().toString()+"';");
                     while (cd.next()){   
                          aienotxt.setText(cd.getObject(1).toString());
                            System.out.println("let's find the code now");
                             java.sql.ResultSet d = o.executeQuery("SELECT subitem FROM subitems where subitemname ilike '"+aienotxt.getText().toString()+"%'");
                                  while (d.next()){
               
                                  aienotxt1.setText(d.getString(1).toString());
                                  System.out.println("we have it now");
                                    }
                                        }
             java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT item_code, item_description, units, quantity, store_name  "
                    + "FROM st_receive_requisation  where  requisition_no = '" + requistntxt.getText() + "'  ");

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                deptraisingtxt.setText(rsetTable111.getObject(5).toString());
                
                
                jTable1.setValueAt(rsetTable111.getObject(1), j, 0);
                jTable1.setValueAt(rsetTable111.getObject(2), j, 1);
                jTable1.setValueAt(rsetTable111.getObject(3), j, 2);
                jTable1.setValueAt(rsetTable111.getObject(4), j, 3);

                j++;
                //}
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }
        
        //jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT subitemname FROM subitems"));
        
         

//        
//        adduserbtn.setEnabled(false);
        //        for (int k = 0; k < jTable1.getRowCount(); k++) {
            //            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                //                jTable1.getModel().setValueAt(null, k, r);
                //            }
            //        }
        //        this.populateTable22(this.jTextField39.getText().toString());

        /*
        * try { for (int j = 0; j < jTable1.getRowCount(); j++) { //
            * java.sql.Statement stmtTable111 = connectDB.createStatement(); if
            * (jTable1.getModel().getValueAt(j, 0) != null) {
                *
                * java.sql.Statement stmtTable11 = connectDB.createStatement();
                * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
                    * sum(qty) FROM stock_balance_qty WHERE item_code ilike '" +
                    * jTable1.getValueAt(j, 0).toString() + "' AND department ILIKE '" +
                    * jComboBox2.getSelectedItem() + "' AND dates <= '" +
                    * datePicker1.getDate() + "'"); java.sql.Statement stmtTable11x =
                * connectDB.createStatement(); java.sql.ResultSet rsetTable11x =
                * stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty
                    * WHERE item_code ilike '" + jTable1.getValueAt(j, 0).toString() + "'
                    * AND department ILIKE '" + jComboBox11.getSelectedItem() + "' AND
                    * dates <= '" + datePicker1.getDate() + "'");
                    *
                    *
                    * while (rsetTable11x.next()) { while (rsetTable11.next()) { double
                        * storeBal = 0; double depBal = 0; storeBal = rsetTable11.getDouble(1);
                        * depBal = rsetTable11x.getDouble(1); jTable1.setValueAt(storeBal, j,
                            * 4); jTable1.setValueAt(depBal, j, 5); } } } } } catch
    * (java.sql.SQLException sqlExec) {
        *
        * javax.swing.JOptionPane.showMessageDialog(this,
            * sqlExec.getMessage()); }
    */
    // Add your handling code here:
    }//GEN-LAST:event_requisitiontblMouseClicked

    private void closebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtnActionPerformed
        searchrequisition.dispose();  // Add your handling code here:
    }//GEN-LAST:event_closebtnActionPerformed
    private void searchsuppliers(){
    
    java.awt.Point point = this.suppliertxt.getLocationOnScreen();
        searchsupplier.setSize(400, 200);
        searchsupplier.setLocation(point);
        searchsupplier.setVisible(true);
    
    
    
    }    private void searchtenders(){
        System.out.println("Showing dialog");

        //searchrequisition.dispose();
        java.awt.Point point = this.tendernotxt.getLocationOnScreen();
        searchtender.setSize(400, 200);
        searchtender.setLocation(point);
        searchtender.setVisible(true);
    
    
    }
    private void tenderrecordstxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxtCaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else
            
        {
            tenderrecordstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT tender_no, quotation_date, buyer_details FROM st_item_to_quote where "
                    + "tender_no ilike 'T%' and  tender_no ilike '" +tenderrecordstxt.getText()+"%' order by quotation_date desc;"));
            tenderrecordstbl.setShowHorizontalLines(false);
            
            tenderrecordsspnl.setViewportView(tenderrecordstbl);

        } 
        
    }//GEN-LAST:event_tenderrecordstxtCaretUpdate

    private void tenderrecordstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxtActionPerformed

    private void tenderrecordstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstblMouseClicked
          
                ///clear the items table
            for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }
              // TODO add your handling code here:
               tendernotxt.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 0).toString());
               tenderdatetxt.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 1).toString());
               buyerdetailspne.setText(tenderrecordstbl.getValueAt(tenderrecordstbl.getSelectedRow(), 2).toString());
               searchButton8.setEnabled(true);
              // searchtender.dispose();
               
               
               
             try {
                 
                 
                 
                 //populate opening date
                 java.sql.Statement selectdate = connectDB.createStatement();

                  java.sql.ResultSet date = selectdate.executeQuery("SELECT  openning_date FROM st_item_to_quote WHERE tender_no ILIKE '" + this.tenderrecordstxt.getText() + "%'");

                  while (date.next()) {
                      
                      openingdatetxt.setText(date.getString(1));
                      
                  }
             //populating table
                  int i=0,j;
                  java.sql.Statement stmtTable1 = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT item_number, item_code, item_description, units, quantity"
                    + " FROM st_item_to_quote WHERE tender_no ILIKE '" + this.tendernotxt.getText() + "%'");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable11.setValueAt(rsetTable1.getObject(5), i, 4);

                    i++;

                }
        
      
             
             
                } 
             
             catch (SQLException ex) {
              Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
          }

         
         searchtender.dispose();
         
    }//GEN-LAST:event_tenderrecordstblMouseClicked

    private void closebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn1ActionPerformed
        // TODO add your handling code here:
        searchtender.dispose();
    }//GEN-LAST:event_closebtn1ActionPerformed

    private void searchsuppliertxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxtCaretUpdate
        // TODO add your handling code here:
        if (this.searchsuppliertxt.getCaretPosition() > 1) {
            System.out.print("Nothing");

        } else
            
        {
            searchsupplierstbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier FROM st_td_collection where collected=false and supplier ILIKE '" + searchsuppliertxt.getText() + "%' and tender_no ilike '%"+tendernotxt.getText().toString()+"%' order by supplier"));
            searchsupplierstbl.setShowHorizontalLines(false);
            
            searchsupplierspnl.setViewportView(searchsupplierstbl);

        } 
        
            
        
    }//GEN-LAST:event_searchsuppliertxtCaretUpdate

    private void searchsuppliertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxtActionPerformed

    private void searchsupplierstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstblMouseClicked
        
              // TODO add your handling code here:
               suppliertxt.setText(searchsupplierstbl.getValueAt(searchsupplierstbl.getSelectedRow(), 0).toString());
             
             
               searchsupplier.dispose();
         
    }//GEN-LAST:event_searchsupplierstblMouseClicked

    private void closebtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn2ActionPerformed
        // TODO add your handling code here:
         searchsupplier.dispose();
    }//GEN-LAST:event_closebtn2ActionPerformed

    private void tenderrecordstxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt1CaretUpdate
        // TODO add your handling code here:
         if (this.tenderrecordstxt1.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else
           // '" +tenderrecordstxt1.getText()+"%'
        {
            tenderrecordstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  DISTINCT te.tender, da.quotation_date, openning_date FROM st_tender_suppliers te, st_floated_quotations da where quotation_no ilike 'T%' and  da.quotation_no =te.tender and quotation_no  ilike '" +tenderrecordstxt1.getText()+"%'and te.opened = true"));
            tenderrecordstbl1.setShowHorizontalLines(false);
            
            tenderrecordsspnl1.setViewportView(tenderrecordstbl1);

        } 
        
        
        
    }//GEN-LAST:event_tenderrecordstxt1CaretUpdate

    private void tenderrecordstxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt1ActionPerformed

    private void tenderrecordstbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl1MouseClicked
        // TODO add your handling code here:
        receivetendertxt.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 0).toString());
        jTextField5.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 1).toString());
        jTextField4.setText(tenderrecordstbl1.getValueAt(tenderrecordstbl1.getSelectedRow(), 2).toString());
        
//        searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT supplier, quotation_date   "
//                    + "FROM st_floated_quotations WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' order by quotation_date desc;"));
//        searchsupplierstbl1.setShowHorizontalLines(false);
            
       // searchsupplierspnl1.setViewportView(searchsupplierstbl1);
             
        // clear table
         for (int k = 0; k < jTable12.getRowCount(); k++) {
            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                jTable12.getModel().setValueAt(null, k, r);
            }
        }
        
       suppliernametxt.setText(null);
       //jTextPane3.setText(null);
       
         
              try {
  
                 //populate suppliers searchtable   
                 searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier;"));
                 searchsupplierstbl1.setShowHorizontalLines(false);
                 searchsupplierspnl1.setViewportView(searchsupplierstbl1);

                 searchButton3.setEnabled(true);
                 searchtender1.dispose();
                 
//                 //populate combo
//                 jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT item_description FROM st_floated_quotations WHERE quotation_no ILIKE '"+receivetendertxt.getText().toString()+"';"));
              } 
              
              catch (Exception ex) {
                 ex.printStackTrace();
              }
    
     
        
    }//GEN-LAST:event_tenderrecordstbl1MouseClicked

    private void closebtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn3ActionPerformed
        // TODO add your handling code here:
        
        searchtender1.dispose();
    }//GEN-LAST:event_closebtn3ActionPerformed

    private void searchsuppliertxt1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt1CaretUpdate
        // TODO add your handling code here:
        if (this.searchsuppliertxt1.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else
            
        { //'" +receivetendertxt.getText()+"%'
            searchsupplierstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT su.supplier_name, da.quotation_date  FROM st_tender_suppliers su, st_floated_quotations da WHERE quotation_no ilike '" +receivetendertxt.getText()+"%' AND da.quotation_no =su.tender  and su.supplier_name =da.supplier;"));
            searchsupplierstbl1.setShowHorizontalLines(false);
            
            searchsupplierspnl1.setViewportView(searchsupplierstbl1);

        } 
        
        
    }//GEN-LAST:event_searchsuppliertxt1CaretUpdate

    private void searchsuppliertxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt1ActionPerformed

    private void searchsupplierstbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl1MouseClicked

        // TODO add your handling code here:
        suppliernametxt.setText(searchsupplierstbl1.getValueAt(searchsupplierstbl1.getSelectedRow(), 0).toString());
          
     // clear table
         for (int k = 0; k < jTable12.getRowCount(); k++) {
            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                jTable12.getModel().setValueAt(null, k, r);
            }
        }
     try     {
         
         int i = 0,j=0;
                  java.sql.Statement populateitems = connectDB.createStatement();

                java.sql.ResultSet rsetTable1 = populateitems.executeQuery("SELECT item_code, item_description, units, quantity,unit_price FROM st_floated_quotations WHERE "
       + "quotation_no ilike '" + this.receivetendertxt.getText() + "%' and supplier ilike '" + this.suppliernametxt.getText() + "%'");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    
                    jTable12.setValueAt(rsetTable1.getObject(1), i, 0);
                    jTable12.setValueAt(rsetTable1.getObject(2), i, 1);
                    jTable12.setValueAt(rsetTable1.getObject(3), i, 2);
                    jTable12.setValueAt(rsetTable1.getObject(4), i, 3);
                    jTable12.setValueAt(rsetTable1.getObject(5), i, 4);
                    
                    jTable6.setValueAt(rsetTable1.getObject(1), j, 0);
                    jTable6.setValueAt(rsetTable1.getObject(2), j, 1);

                    i++;
                    j++;
                    
                    jLabel8.setVisible(true);
                    jLabel8.setText("Items On Tender: "+i);
                }
        //  populate the supplier address
             java.sql.Statement supplieradd = connectDB.createStatement();
            java.sql.ResultSet rsetTable111 = supplieradd.executeQuery("SELECT  "
           + "concat (supplier_name,  ' ' ,  town, '-', country) FROM st_suppliers  where  supplier_name = '" + suppliernametxt.getText() + "'  ");

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                jTextPane3.setText(rsetTable111.getObject(1).toString());       
              //}
            }
            
            //total bid
             java.sql.Statement sum = connectDB.createStatement();
             java.sql.ResultSet computetotal = sum.executeQuery("SELECT sum(quantity*unit_price) as total_price FROM st_floated_quotations where quotation_no='"+receivetendertxt.getText().toString()+"' and  supplier ilike '"+suppliernametxt.getText().toString()+"'");
            // SELECT sum(quantity*unit_price) as total_price FROM st_floated_quotations where quotation_no= 'T13' and supplier ilike 'ALPH%'
             while (computetotal.next()){
             
             jTextField1.setText(computetotal.getObject(1).toString());
            // Double bid = Double.parseDouble(jTextField11.getText().toString())*0.01;
         // Object bidv= bid;         
           // jTextField8.setText(bid.toString());   
             }
             
              //populate combo
         
             //java.sql.ResultSet rs = ps.executeQuery();
             
            //String b = ps.toString();
               //  jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT item_description FROM st_floated_quotations WHERE quotation_no ILIKE '"+receivetendertxt.getText().toString()+"' and  supplier ilike '"+suppliernametxt.getText().toString()+"';"));
                // jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT item_description FROM st_floated_quotations WHERE quotation_no ILIKE '"+receivetendertxt.getText().toString()+"' and  supplier ilike '"+suppliernametxt.getText().toString()+"';"));
                  
                 
                 //populate   itemcode
//                  java.sql.PreparedStatement icode = connectDB.prepareStatement("SELECT distinct item_code FROM st_floated_quotations where item_description ilike '"+jComboBox3.getSelectedItem().toString()+"' ;");   
//                  java.sql.ResultSet itemcde= icode.executeQuery();
//              
//                  itemcde.next();
//              
//                 // jTextField7.setText(itemcde.getObject(1).toString());
//                  //populate specs
//                  java.sql.Statement lst = connectDB.createStatement();
//                  java.sql.ResultSet lstmodel = lst.executeQuery("SELECT  brand, specs FROM st_criteria where tender_no ilike '"+receivetendertxt.getText().toString()+"' and item_code ilike '"+jTextField7.getText().toString()+"';");
//                     while (lstmodel.next()){
//                     String a = lstmodel.getObject(1).toString();
//                     String b = lstmodel.getObject(2).toString();
//                     
//                     jTextArea1.setText("Brand: "+a+ "\nSpeciication: " +b);
//                     
//                     }
                  //jList1.setModel(com.afrisoftech.lib.ListModel.listModel(connectDB, "SELECT  specs FROM st_criteria where tender_no ilike '"+receivetendertxt.getText().toString()+"' and item_code ilike '"+jTextField7.getText().toString()+"';"));
                  //jList1.setModel(com.afrisoftech.lib.ListModel.listModel(connectDB, "SELECT  brand FROM st_criteria where tender_no ilike '"+receivetendertxt.getText().toString()+"' and item_code ilike '"+jTextField7.getText().toString()+"';"));
     } 
             
             catch (SQLException ex) {
              Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
          }
     searchsupplier1.dispose();
    }//GEN-LAST:event_searchsupplierstbl1MouseClicked

    private void closebtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn4ActionPerformed
        // TODO add your handling code here:
        searchsupplier1.dispose();
    }//GEN-LAST:event_closebtn4ActionPerformed

    private void searchsupplierstbl1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl1MouseEntered
        private void opentender(){
            
        java.awt.Point point = this.opentendertxt.getLocationOnScreen();
        searchsupplier2.setSize(400, 200);
        searchsupplier2.setLocation(point);
        searchsupplier2.setVisible(true); 
          }
    private void searchsuppliertxt2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt2CaretUpdate
        // TODO add your handling code here:
        if (this.searchsuppliertxt2.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else
            
        {
            searchsupplierstbl2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct quotation_no FROM st_floated_quotations;"));
            searchsupplierstbl2.setShowHorizontalLines(false);
            
            searchsupplierspnl2.setViewportView(searchsupplierstbl2);

        } 
        
    }//GEN-LAST:event_searchsuppliertxt2CaretUpdate

    private void searchsuppliertxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt2ActionPerformed

    private void searchsupplierstbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl2MouseClicked
        // TODO add your handling code here:
        opentendertxt.setText(searchsupplierstbl2.getValueAt(searchsupplierstbl2.getSelectedRow(), 0).toString());
         jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct su.code code , fu.supplier supplier  FROM st_floated_quotations fu, \n" +
"st_suppliers su where  quotation_no ilike '" +opentendertxt.getText()+ "' and fu.supplier=su.supplier_name\n" +
"and ordered=false"));    
          jLabel2.setVisible(true);
          jLabel2.setText("TOTAL NUMBER OF APPLICANTS: "+jTable2.getRowCount());
         
        searchsupplier2.dispose();
    }//GEN-LAST:event_searchsupplierstbl2MouseClicked

    private void searchsupplierstbl2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl2MouseEntered

    private void closebtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn5ActionPerformed
        // TODO add your handling code here:
        searchsupplier2.dispose();
        
    }//GEN-LAST:event_closebtn5ActionPerformed

    private void tenderrecordstxt2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt2CaretUpdate
        // TODO add your handling code here:
        if (this.tenderrecordstxt2.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else
            
        {
            tenderrecordstbl2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT quotation_no, supplier FROM st_orders where quotation_no ilike '" +tenderrecordstxt2.getText().toString()+"%' and ordered = false "));
            tenderrecordstbl2.setShowHorizontalLines(false);
            
            tenderrecordsspnl2.setViewportView(tenderrecordstbl2);

        } 
        
        
        
    }//GEN-LAST:event_tenderrecordstxt2CaretUpdate

    private void tenderrecordstxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt2ActionPerformed

    private void tenderrecordstbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl2MouseClicked
        // TODO add your handling code here:
        jTextField40.setText(tenderrecordstbl2.getValueAt(tenderrecordstbl2.getSelectedRow(), 0).toString());
       // jTextField2.setText(tenderrecordstbl2.getValueAt(tenderrecordstbl2.getSelectedRow(), 1).toString());
       
       // SELECT distinct quotation_no, buyer_details, quotation_date, openning_date, item_code, item_description,units, quantity,unit_price,days_to_deliver, brand, country_origin, remarks FROM st_floated_quotations where quotation_no ilike '' and supplier ilike ''and ordered = true and unit_price >0.00 order by quotation_no desc ;
        searchsupplierstbl4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_orders WHERE quotation_no ILIKE '" + jTextField40.getText().toString() + "%' and ordered=false"));
        searchsupplierstbl4.setShowHorizontalLines(true);
        searchsupplierspnl4.setViewportView(searchsupplierstbl4);
       
        

         
         searchtender2.dispose();
        
        
        
        
        
    }//GEN-LAST:event_tenderrecordstbl2MouseClicked

    private void closebtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn6ActionPerformed
        // TODO add your handling code here:
        searchtender2.dispose();
    }//GEN-LAST:event_closebtn6ActionPerformed

    private void searchsuppliertxt3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt3CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt3CaretUpdate

    private void searchsuppliertxt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt3ActionPerformed

    private void searchsupplierstbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl3MouseClicked

    private void searchsupplierstbl3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl3MouseEntered

    private void closebtn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn7ActionPerformed
        // TODO add your handling code here:
        searchsupplier3.dispose();
    }//GEN-LAST:event_closebtn7ActionPerformed

    private void tenderrecordstxt3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tenderrecordstxt3CaretUpdate
        // TODO add your handling code here:
         if (this.tenderrecordstxt3.getCaretPosition() < 1) {
            System.out.print("Nothing");

        } else
            
        {
            tenderrecordstbl3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct quotation_no TENDER_NO FROM st_floated_quotations"
                    + " where unit_price  >0.00 and quotation_no ILIKE '%" + tenderrecordstxt3.getText() + "%'  and ordered = false "));
            tenderrecordstbl3.setShowHorizontalLines(false);
            
            tenderrecordsspnl3.setViewportView( tenderrecordstbl3);
            
//            int n=0, m=0;
//            if(tenderrecordstbl3.getValueAt(n, m)==null){
//            java.awt.Point p = tenderrecordsspnl3.getLocationOnScreen();
//            jLabel9.setVisible(true);
//            jLabel9.setLocation(p);
//            }
            
        } 
        
        
    }//GEN-LAST:event_tenderrecordstxt3CaretUpdate

    private void tenderrecordstxt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenderrecordstxt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstxt3ActionPerformed

    private void tenderrecordstbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl3MouseClicked
        // TODO add your handling code here:
                 jTextField39.setText(tenderrecordstbl3.getValueAt(tenderrecordstbl3.getSelectedRow(), 0).toString());
         // try {
                 
                                                                                                    //SELECT  distinct a.supplier, false award FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike 'T%' and a.supplier= b.supplier and b.approved = true

                
                   jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct a.supplier, false award FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"'and a.supplier= b.supplier and b.approved = true group by a.supplier;"));
                   jTable3.setShowHorizontalLines(false);                
                   jScrollPane5.setViewportView(jTable3);
                   searchtender3.dispose();
                 
                 
                 
                 
//                  java.sql.PreparedStatement tems = connectDB.prepareStatement("SELECT  distinct supplier, false award FROM st_floated_quotations where  quotation_no ilike'"+jTextField39.getText().toString()+"';");
//                  
//                  jTable3.setValueAt(1, jTable3.getRowCount(), 0);
//                  jTable3.setValueAt(2, jTable3.getRowCount(), 1);
//              
//                  searchtender3.dispose();
//          } 
//          
//          
//          catch (SQLException ex) {
//              Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
//          }
        
        
        
        
        

        
    }//GEN-LAST:event_tenderrecordstbl3MouseClicked

    private void closebtn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn8ActionPerformed
        // TODO add your handling code here:
        searchtender3.dispose();
    }//GEN-LAST:event_closebtn8ActionPerformed
        private void deletepdfs(){
    
     try {
              // TODO add your handling code here:
      //        com.afrisoftech.hospinventory.criteria a = new com.afrisoftech.hospinventory.criteria(new javax.swing.JFrame(),true,tenderNo,connectDB,null);
      //         a.setLocation(450,250);
      //        a.setVisible(true);
              if(receivetendertxt.getText().isEmpty() || suppliernametxt.getText().isEmpty()){
              javax.swing.JOptionPane.showMessageDialog(this, "Both tender number and supplier must be selected", "Caution Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
              }
                  
              else {
                  java.sql.Statement user = connectDB.createStatement();
              java.sql.ResultSet getuser = user.executeQuery("select current_user");
              while (getuser.next()){
              Object usr = getuser.getObject(1).toString();
              
            //  com.afrisoftech.hospinventory.deletepdfs a = new com.afrisoftech.hospinventory.deletepdfs(null, true, usr,receivetendertxt.getText().toString(),suppliernametxt.getText().toString());
              com.afrisoftech.hospinventory.deletepdfs a = new com.afrisoftech.hospinventory.deletepdfs(new javax.swing.JFrame(), true, usr, receivetendertxt.getText().toString(),suppliernametxt.getText().toString(), connectDB, null);
              a.setLocation(300,300);
              a.setVisible(true);
              a.setModal(true);
              }}
              
             
             
          }
          
          catch (SQLException ex) {
              ex.printStackTrace();
          }
    
    
    
    }
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
         java.lang.String access_code = null;
          try {
              java.sql.PreparedStatement pstmt = connectDB.prepareStatement("select accessobject from defined_contribution");
              
              java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                access_code = rset.getObject(1).toString();
            }
            
             if (jPasswordField1.getText().equals(access_code)) {
                  jButton18.doClick();
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                try {

                    java.sql.Statement stmtf = connectDB.createStatement();
                    java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker6.getDate() + "' BETWEEN period_from AND period_to");
                    while (rsetf.next()) {
                        periodFrom = rsetf.getDate(1);
                        periodTo = rsetf.getDate(2);
                    }

                } 
                
                    catch (java.sql.SQLException sq) {
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    System.out.println(sq.getMessage());

                }

                if (datePicker6.getDate().before(periodFrom) || datePicker6.getDate().after(periodTo)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } 
                
                else {
                    if (jTable13.isEditing()) {
                        jTable13.getCellEditor().stopCellEditing();
                    }
                    
                    String oder_no = null;

                    double quantity = 0.00;

                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql = new java.sql.Date(dateNow);

                    System.out.println(datenowSql.toString());
//registering savepointr
                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");
                    } 
                    
                        catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                    }

                    //begin insert-orderno generation
                    try {
                        String order_no1 = null;
                        java.sql.Date current_date = null;
                        java.sql.Statement pstmt1s = connectDB.createStatement();
                        java.sql.ResultSet rs1s = pstmt1s.executeQuery("select nextval('order_no_seq'),CURRENT_DATE"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1s.next()) {
                            order_no1 = rs1s.getObject(1).toString();
                            current_date = rs1s.getDate(2);
                        }

                        java.sql.Statement pstmt1 = connectDB.createStatement();
                        java.sql.ResultSet rs1 = pstmt1.executeQuery("select date_part('year',now())|| lpad('" + order_no1 + "',6,'0'),date('now')"); //from orders where supplier ='"+jTable1.getValueAt(i,4).toString()+"'");

                        while (rs1.next()) {
                            oder_no = rs1.getObject(1).toString();
                        }
                        
                        System.out.println("" + oder_no + "");
                        //insert into db
                       
                        java.lang.Boolean checker=true;
                        String unallocateditems=" ";
                        
                        
             for(int h=0;h<jTable13.getRowCount();h++){ 
               if(jTable13.getValueAt(h, 2)!=null){
                   
                   System.out.println("votebook balance " + com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(h, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)));
                   
                   System.out.println("money to pay  " + Double.parseDouble(jTable13.getValueAt(h, 4).toString()) * Double.parseDouble(jTable13.getValueAt(h, 5).toString()));
                 if  (com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(h, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(h, 4).toString()) * Double.parseDouble(jTable13.getValueAt(h, 5).toString()) < 0.00) {
                      checker=false;  
                      money.addElement(jTable13.getValueAt(h, 2));
                      
                    System.out.println("I executed because there is no money "+checker);
                 }
                 
//                  else {      
//                             checker=false;
//                             
//                                    }
             }        
             }
             
              System.out.println("The value for checker is "+checker);
             
             if(checker==false){
                 
                 
                 for(int i=0; i<money.size();i++)
                 {
                 unallocateditems=money.elementAt(i).toString() +", "+unallocateditems;
                 }
                 
                 javax.swing.JOptionPane.showMessageDialog(this, "You Cannot order for the following unallocated items  " + unallocateditems);
             }
             
             
             
             else   {
                   
                   
                      for (int i = 0; i < jTable13.getRowCount(); i++) {
                            if (jTable13.getModel().getValueAt(i, 1) != null) {
                                
                                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("UPDATE st_orders set"
                                            + " gross_value='"+java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString())+"'"
                                            + ",net_value='"+java.lang.Double.valueOf(jTable13.getValueAt(i, 5).toString()) * java.lang.Double.valueOf(jTable13.getValueAt(i, 4).toString())+"'"
                                            + ",ordered=true, order_no='"+oder_no+"', "
                                            + "date_due='"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker6.getDate())+"'"
                                            + ",date='"+current_date+"' , item_strength='n/a' ,"
                                            + "doc_type='"+jComboBox11.getSelectedItem()+"', criteria='"+jComboBox12.getSelectedItem().toString()+"' "
                                            + "where quotation_no='"+jTextField40.getText().toString()+"' "
                                            + "and supplier='"+jTextField2.getText().toString()+"' and item='"+jTable13.getValueAt(i, 2).toString()+"'");

                                   

                                    pstmt2.executeUpdate();

                                    System.out.println("sonice");
                                   


                                    
//                                    java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField40.getText() + "'");
//                                    pstmt31.executeUpdate();

//                                    java.sql.PreparedStatement pstmtCommit2Votebook = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered = true WHERE quotation_no = '" + jTextField40.getText() + "'");
//                                    pstmtCommit2Votebook.executeUpdate();

                                    
                                    com.afrisoftech.lib.VoteBook.setVoteBalance(connectDB,
                                        com.afrisoftech.lib.VoteBook.getVoteBalance(connectDB, jTable13.getValueAt(i, 2).toString(), com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)) - Double.parseDouble(jTable13.getValueAt(i, 4).toString()) * Double.parseDouble(jTable13.getValueAt(i, 5).toString()),
                                        com.afrisoftech.lib.VoteBook.getVote(connectDB, jTable13.getValueAt(i, 2).toString(),
                                        com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB)),
                                        com.afrisoftech.lib.FinancialYear.getActiveFinancialYear(connectDB), jTable13.getValueAt(i, 2).toString());
                                    
                                         } 
                                  
                            }
                        connectDB.commit();
                        connectDB.setAutoCommit(true);

                        javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                        for (int k = 0; k < jTable13.getRowCount(); k++) {
                            for (int r = 0; r < jTable13.getColumnCount(); r++) {
                                jTable13.getModel().setValueAt(null, k, r);
                            }
                        }

                        if (jComboBox11.getSelectedItem().toString().equalsIgnoreCase("LSO")) {
                            com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LsoMtrhPdf();

                            policy.LsoMtrhPdf(connectDB, jTextField2.getText(), oder_no);
                            // com.afrisoftech.hospinventory.LsoPdf policy = new com.afrisoftech.hospinventory.LsoPdf();

                            // policy.LsoPdf(connectDB, jTextField93.getText(), oder_no);
                        } else {

//                            com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.LpoMtrhPdf();
//
//                            policy.LpoMtrhPdf(connectDB, jTextField2.getText(), oder_no);
                            //com.afrisoftech.hospinventory.LpoPdf policy = new com.afrisoftech.hospinventory.LpoPdf();

                            //policy.LpoPdf(connectDB, jTextField93.getText(), oder_no);
                        }
                        
                        this.postbtn3.setEnabled(false);
                        
                    
                 
                    }
               
              
                             
                        

                       
                      
                        
                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        jLabel7.setForeground(java.awt.Color.red);
                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            sql.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());

                    }
                }
                 
            }
             else {
                jButton18.doClick();
                javax.swing.JOptionPane.showMessageDialog(this, "You must input the authorised pass key to approve", "Warning Message", javax.swing.JOptionPane.WARNING_MESSAGE);

            }
          
          
          
          }         
              catch (SQLException ex) {
             ex.printStackTrace();
             javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
          }
         
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
       this.lpopasswd.dispose();
    }//GEN-LAST:event_jButton18ActionPerformed
    private void searchsuppliertoaward(){
    java.awt.Point point = this.jLabel38.getLocationOnScreen();
        searchsupplier4.setSize(400, 200);
        searchsupplier4.setLocation(point);
        searchsupplier4.setVisible(true);
    
    
    
    
    
    }
    private void searchsuppliertxt4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchsuppliertxt4CaretUpdate
        // TODO add your handling code here:
        
        if (searchsuppliertxt4.getCaretPosition()>2){
         searchsupplierstbl4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT supplier FROM st_orders WHERE quotation_no ILIKE '" + jTextField40.getText().toString() + "%' and ordered=false  ORDER BY 1"));
        searchsupplierstbl4.setShowHorizontalLines(true);
        searchsupplierspnl4.setViewportView(searchsupplierstbl4);
        }
        
        
        
    }//GEN-LAST:event_searchsuppliertxt4CaretUpdate

    private void searchsuppliertxt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliertxt4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsuppliertxt4ActionPerformed

    private void searchsupplierstbl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl4MouseClicked
        // TODO add your handling code here:
        jTextField2.setText(searchsupplierstbl4.getValueAt(searchsupplierstbl4.getSelectedRow(), 0).toString());
        
        
        //populate table
        try {
            
             //populating table
                  int i=0,j=0;
                   String r = jTextField2.getText().toString();
                  String e = jTextField40.getText().toString();
                 
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT  distinct a.code, a.item, b.quotation_date, b.openning_date , a.units, a.quantity,a.unit_price  FROM st_orders a, st_floated_quotations b "
                        + "where  b.quotation_no = '"+e+"' and b.supplier='"+r+"'  and a.ordered = false ");              
                
                while (rsetTable1.next()) {
                    
                    
                    System.out.println("Working at table row " + i);
                    
                    
                    jTextField15.setText(rsetTable1.getObject(3).toString());
                    jTextField16.setText(rsetTable1.getObject(4).toString());
                    
                    jTable13.setValueAt(i+1, i, 0);
                    
                    jTable13.setValueAt(rsetTable1.getObject(1), i, 1);
                    jTable13.setValueAt(rsetTable1.getObject(2), i, 2);
                    jTable13.setValueAt(rsetTable1.getObject(5), i, 3);
                    jTable13.setValueAt(rsetTable1.getObject(6), i, 4);
                    jTable13.setValueAt(rsetTable1.getObject(7),i, 5);
                    
//                    jTable13.setValueAt(rsetTable1.getObject(11),i, 7);
//                    jTable13.setValueAt(rsetTable1.getObject(12),i, 8);
//                    jTable13.setValueAt(rsetTable1.getObject(13),i, 9);
                    
                       
                    i++;
                    
                    

                }
        
      
             
             
                } 
             
             catch (SQLException ex) {
              ex.printStackTrace();
          }
        
        
        
        searchsupplier4.dispose();
    }//GEN-LAST:event_searchsupplierstbl4MouseClicked

    private void searchsupplierstbl4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchsupplierstbl4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplierstbl4MouseEntered

    private void closebtn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn9ActionPerformed
        // TODO add your handling code here:
        searchsupplier4.dispose();
    }//GEN-LAST:event_closebtn9ActionPerformed

    private void tenderrecordstbl1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenderrecordstbl1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tenderrecordstbl1MouseEntered

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        lpopasswd1.dispose();
        java.lang.String access_code = null;
          try {
              java.sql.PreparedStatement pstmt = connectDB.prepareStatement("select accessobject from defined_contribution");
              
              java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                access_code = rset.getObject(1).toString();
            }
            
                 if (jPasswordField1.getText().equals(access_code)) {
                     jButton21.doClick();

                       deletepdfs();
             }
             
             else{
             jButton21.doClick();
             javax.swing.JOptionPane.showMessageDialog(this, "you are not authorised to delete a pdf");
             }
          }   
          catch (Exception ex){
          ex.printStackTrace();
          
          }
          
  
        
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:

        //        if (jTabbedPane1.getSelectedIndex()==3){
            //        if (receivetendertxt.getText()==null) {
                //            searchButton3.setEnabled(false);
                //
                //        }
            //        else if (receivetendertxt.getText()!=null) {
                //            searchButton3.setEnabled(true);
                //        }}
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        searchsuppliertoaward();

    }//GEN-LAST:event_jButton19ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void searchButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton6ActionPerformed
        //searchButton13Clicked();         // TODO add your handling code here:

        searchtendertopay();
    }//GEN-LAST:event_searchButton6ActionPerformed

    private void cancelbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn3ActionPerformed
        // TODO add your handling code here:
        jComboBox11.setSelectedIndex(0);

        jComboBox12.setSelectedIndex(0);

        jTextField40.setText(null);

        jTextField16.setText(null);

        jTextField15.setText(null);

        jTextField2.setText(null);

        for (int k = 0; k < jTable13.getModel().getRowCount(); k++) {
            for (int r = 0; r < jTable13.getModel().getColumnCount(); r++) {
                jTable13.getModel().setValueAt(null, k, r);
            }
        }

    }//GEN-LAST:event_cancelbtn3ActionPerformed

    private void resetbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn3ActionPerformed
        // TODO add your handling code here:
         int rows2Delete = jTable13.getSelectedRowCount();

        int[] selectedRows = jTable13.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable13.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable13.getModel();

                defTableModel.removeRow(jTable13.getSelectedRow());
            }
        }    
    }//GEN-LAST:event_resetbtn3ActionPerformed

    private void postbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn4ActionPerformed
        //javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        //searchrequisition.dispose();
        java.awt.Point point = jLabel35.getLocationOnScreen();
        lpopasswd.setSize(400, 200);
        lpopasswd.setLocation(point);
        lpopasswd.setVisible(true);

        // javax.swing.JDialog a =jDialog2 ;

        //        this.jDialog2.setVisible(true);
        //
        //        jComboBox11.setSelectedIndex(0);
        //
        //         jComboBox12.setSelectedIndex(0);
        //
        //         jTextField40.setText(null);
        //
        //         jTextField16.setText(null);
        //
        //         jTextField15.setText(null);
        //
        //         jTextField2.setText(null);
        //
        //        for (int k = 0; k < jTable13.getModel().getRowCount(); k++) {
            //                             for (int r = 0; r < jTable13.getModel().getColumnCount(); r++) {
                //                                         jTable13.getModel().setValueAt(null, k, r);
                //                                                 }
            //                                          }
        //

        //this.jDialog1.setVisible(true);

        // if (allowedAccess) {

            // }

        // TODO add your handling code here:
    }//GEN-LAST:event_postbtn4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            connectDB.setAutoCommit(false);

            // for (int i = 0; i < jTable3.getRowCount(); i++) {
                String s =jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 1).toString();
                System.out.println("mimi"  +s);
                if (s.toString() == "true") {
                    // lineNumber = lineNumber + 1;

                    //  java.sql.PreparedStatement save = connectDB.prepareStatement("UPDATE st_floated_quotations"
                        // UPDATE st_floated_quotations SET  ordered=true WHERE supplier ilike '' and quotation_no ilike ''
                        System.out.println("mimi"  +s);

                        try{
                            int k=0;
                            for(int p=0; p<jTable4.getModel().getRowCount();p++)  {
                                java.sql.PreparedStatement save1 = connectDB.prepareStatement("UPDATE st_floated_quotations SET ordered=true WHERE supplier ilike '" +jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 0).toString()+"' and quotation_no ilike '"+jTextField39.getText().toString()+"' and  item_description = '"+jTable4.getModel().getValueAt(p, 1).toString()+"' ");
                                save1.executeUpdate();
                            }
                            System.out.println("nimeupdate");

                            //insert records for lpo (ordering)
                            int  j;
                            for (int i = 0; i < jTable4.getModel().getRowCount(); i++)

                            {
                                java.sql.PreparedStatement savelpo = connectDB.prepareStatement("INSERT INTO st_orders (quotation_no, supplier, criteria, item, quantity, unit_price, days_to_deliver, units,code)"
                                    + " VALUES (?,?,?,?,?,?,?,?);");

                                savelpo.setObject(1, jTextField39.getText().toString());
                                savelpo.setObject(2, jTable3.getModel().getValueAt(jTable3.getSelectedRow(),0).toString());
                                savelpo.setObject(3, jComboBox2.getSelectedItem().toString());
                                savelpo.setObject(4,jTable4.getModel().getValueAt(i,1).toString());
                                savelpo.setObject(5,  jTable4.getModel().getValueAt(i,3));
                                savelpo.setObject(6,jTable4.getModel().getValueAt(i,4));
                                savelpo.setObject(7, jTable4.getModel().getValueAt(i,2));
                                savelpo.setObject(8, jTable4.getModel().getValueAt(i,5));
                                savelpo.setObject(9, jTable4.getModel().getValueAt(i,0));

                                savelpo.executeUpdate();
                            }

                            System.out.println("nimeuptena");

                            ///clear table
                            //                        for (int k = 0; k < jTable4.getModel().getRowCount(); k++) {
                                //                             for (int r = 0; r < jTable4.getModel().getColumnCount(); r++) {
                                    //                                         jTable4.getModel().setValueAt(null, k, r);
                                    //                                                 }
                                //                                          }
                            //
                            //
                            //                        for (int k = 0; k < jTable3.getModel().getRowCount(); k++) {
                                //                             for (int r = 0; r < jTable3.getModel().getColumnCount(); r++) {
                                    //                                         jTable3.getModel().setValueAt(null, k, r);
                                    //                                                 }
                                //                                          }
                            connectDB.commit();
                            connectDB.setAutoCommit(true);
                            javax.swing.JOptionPane.showMessageDialog(this, "Supplier Awarded Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                        }

                        catch (SQLException n) {
                            Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, n);
                        }

                    }

                    else{
                        int i = 0;
                        javax.swing.JOptionPane.showMessageDialog(this, "PLEASE SELECT AWARD CHECKBOX for " +jTable3.getModel().getValueAt(jTable3.getSelectedRow(), i).toString()+ " TO PROCEED", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    }

                }

                catch (SQLException ex) {
                    Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
                }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void searchButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton5ActionPerformed
        // searchButton13Clicked();
        searchtendertoaward();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButton5ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked

        // TODO add your handling code here:
        //
        String a =  jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString();

        jTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  item_code, item_description, days_to_deliver, quantity, unit_price, units  FROM st_floated_quotations where unit_price>0.00 and quotation_no ilike '"+jTextField39.getText().toString()+"' and supplier ilike '"+a.toString()+"' ;"));
        jTable4.setShowHorizontalLines(false);
        jTable4.getModel().isCellEditable(jTable4.getRowCount(), jTable4.getColumnCount());

        jScrollPane6.setViewportView(jTable4);

        //sum bid
        try {
            java.sql.Statement bid = connectDB.createStatement();
            java.sql.ResultSet computebid = bid.executeQuery("SELECT sum(quantity*unit_price)  FROM st_floated_quotations where quotation_no ilike '"+jTextField39.getText().toString()+"' and  supplier ilike '"+a.toString()+"'");

            while (computebid.next()){
                jLabel45.setVisible(true);

                String b = computebid.getObject(1).toString();

                jLabel45.setText("Total Bid ammount:  "+b);
            }
            //java.sql.Statement evalitms = connectDB.createStatement();
            //java.sql.ResultSet items= evalitms.executeQuery("SELECT  item_code, item_description, days_to_deliver, quantity, unit_price FROM st_floated_quotations where supplier ilike '"+a.toString()+"' and quotation_no ilike '"jTextField39.getText().toString()"' ;");
        }

        catch (SQLException ex) {
            Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTable3MouseClicked

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
javax.swing.JOptionPane.showMessageDialog(this, "Coming Soon!");
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        ////check the Tabbed Pane clicked
        MainPanellToLoad=new JPanel();
        jSplitPane1.setDividerLocation(84);
        MainPanellToLoad = (JPanel) new SSOGeneralEvaluaton(connectDB,null);
        TechnicalEvalutionMainPane.removeAll();
        TechnicalEvalutionMainPane.setLayout(new java.awt.BorderLayout());
        TechnicalEvalutionMainPane.add(MainPanellToLoad, java.awt.BorderLayout.CENTER);
        TechnicalEvalutionMainPane.updateUI();
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchreceivedtenders();         // TODO add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

//GEN-FIRST:event_searchButton3ActionPerformed
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt){
        searchawardedsuppliers();
    
    }
//GEN-LAST:event_searchButton3ActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // TODO add your handling code here:
        //        if (jTabbedPane2.getSelectedIndex()==1){
            //          jLabel8.setText(null);
            //        //clear the supplier name
            //        suppliernametxt.setText(null);
            //
            //        //clear the supplier address
            //          jTextPane3.setText(null);
            //
            //         for (int k = 0; k < jTable12.getRowCount(); k++) {
                //            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                    //                jTable12.getModel().setValueAt(null, k, r);
                    //            }
                //        }
            //
            //
            //        }
        //
        //        if(jTabbedPane2.getSelectedIndex()==2)
        //        {
            //
            //           jLabel8.setText(null);
            //          //clear the supplier name
            //          suppliernametxt.setText(null);
            //
            //          //clear the supplier address
            //          jTextPane3.setText(null);
            //          //clear the table
            //          for (int k = 0; k < jTable12.getRowCount(); k++) {
                //            for (int r = 0; r < jTable12.getColumnCount(); r++) {
                    //                jTable12.getModel().setValueAt(null, k, r);
                    //            }
                //        }
            //        }
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable12MouseClicked
        //        // TODO add your handling code here:
        //        if (jTable12.getValueAt(jTable12.getSelectedRow(), 5)==true){
            //
            //            javax.swing.table.DefaultTableModel defTableModel4 = (javax.swing.table.DefaultTableModel) jTable12.getModel();
            //
            //             defTableModel4.removeRow(jTable12.getSelectedRow());
            //
            //
            //
            //        }
    }//GEN-LAST:event_jTable12MouseClicked

    private void exitbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitbtn2ActionPerformed

    private void postbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn1ActionPerformed
        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < jTable12.getRowCount(); i++) {
                if (jTable12.getModel().getValueAt(i, 1) != null) {
                    

                        java.sql.PreparedStatement save = connectDB.prepareStatement("UPDATE st_floated_quotations SET unit_price=? WHERE quotation_no = '" + receivetendertxt.getText().toString() + "' AND supplier = '" + suppliernametxt.getText().toString() + "' AND item_description = '" +jTable12.getValueAt(i, 2).toString()+ "'");

                        save.setInt(1, java.lang.Integer.parseInt(jTable12.getValueAt(i, 4).toString()));

                     
                        save.executeUpdate();

              

                }
            }

            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            com.afrisoftech.hospinventory.mtrhreports.QuotationsReceivedMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsReceivedMtrhPdf();

            policy.QuotationsReceivedMtrhPdf(connectDB, receivetendertxt.getText(), suppliernametxt.getText());

            //            //total bid
            //             java.sql.Statement sum = connectDB.createStatement();
            //             java.sql.ResultSet computetotal = sum.executeQuery("SELECT sum(quantity*unit_price) as total_price FROM st_floated_quotations where quotation_no='"+receivetendertxt.getText().toString()+"' and  supplier ilike '"+suppliernametxt.getText().toString()+"'");
            //            // SELECT sum(quantity*unit_price) as total_price FROM st_floated_quotations where quotation_no= 'T13' and supplier ilike 'ALPH%'
            //             while (computetotal.next()){
                //
                //             jTextField11.setText(computetotal.getObject(1).toString());
                //             Double bid = Double.parseDouble(jTextField11.getText().toString())*0.01;
                //          Object bidv= bid;
                //            jTextField8.setText(bid.toString());
                //             }

        }
        catch (Exception sq) {
            javax.swing.JOptionPane.showMessageDialog(this, "ensure you fill all entries", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            System.out.println(sq.getMessage());
        }
    }//GEN-LAST:event_postbtn1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox2.isSelected()){
            for( int i=0 ; i< jTable6.getRowCount(); i++){

                if(jTable6.getValueAt(i,0)!=null){

                    jTable6.setValueAt(true, i, 5);
                    System.out.println("tester  .... "+i);
                }

            }
            jCheckBox2.setLabel("Unselect");

        }
        else{
            for( int i=0 ; i< jTable6.getRowCount(); i++){

                if(jTable6.getValueAt(i,0)!=null){

                    jTable6.setValueAt(false, i, 5);
                    System.out.println("untester  .... "+i);
                }

            }

        }

    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {
            // TODO add your handling code here:
            for (int k = 0; k < jTable6.getRowCount(); k++) {
                for (int r = 0; r < jTable6.getColumnCount(); r++) {
                    jTable6.getModel().setValueAt(null, k, r);
                }
            }

            int i =0, j=0;
            java.sql.Statement load = connectDB.createStatement();
            java.sql.ResultSet loadn =load.executeQuery("select item_code, item_description, days_to_deliver, brand, country_origin, remarks FROM st_floated_quotations where supplier ='"+suppliernametxt.getText().toString()+"' and quotation_no='"+receivetendertxt.getText().toString()+"'");
            while (loadn.next()){

                jTable6.setValueAt(loadn.getObject(1), i, 0);
                jTable6.setValueAt(loadn.getObject(2), i, 1);
                jTable6.setValueAt(loadn.getObject(3), i, 2);
                jTable6.setValueAt(loadn.getObject(4), i, 3);
                jTable6.setValueAt(loadn.getObject(5), i, 4);

                i++;
                jTextPane2.setText(loadn.getObject(6).toString());
            }
            postbtn3.setLabel("Update Data");
            jCheckBox2.doClick();
        }

        //

        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void exitbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn4ActionPerformed
        // TODO add your handling code here:
          int rows2Delete = jTable6.getSelectedRowCount();

        int[] selectedRows = jTable6.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable6.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable6.getModel();

                defTableModel.removeRow(jTable6.getSelectedRow());
            }
        }
    }//GEN-LAST:event_exitbtn4ActionPerformed

    private void postbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn3ActionPerformed
        // TODO add your handling code here:

        if(receivetendertxt.getText().length()>0 && suppliernametxt.getText().length()>0 ){

            try {
                connectDB.setAutoCommit(false);

                for (int i = 0; i < jTable6.getRowCount(); i++) {
                    if (jTable6.getModel().getValueAt(i, 1) != null) {
                        if (Boolean.valueOf(jTable6.getModel().getValueAt(i, 5).toString()) == java.lang.Boolean.TRUE) {

                            java.sql.PreparedStatement save = connectDB.prepareStatement("UPDATE st_floated_quotations SET days_to_deliver=?, brand=?, country_origin=? , remarks= ? WHERE quotation_no = '" + receivetendertxt.getText() + "' AND supplier = '" + suppliernametxt.getText() + "' AND item_description = '" + jTable6.getValueAt(i, 1).toString() + "'");

                            if (jTable6.getValueAt(i, 2).toString().length()<=0) {
                                save.setObject(1, 0);
                            }
                            else{
                                save.setInt(1, Integer.parseInt(jTable6.getValueAt(i, 2).toString()));
                            }

                            if (jTable6.getValueAt(i, 3).toString().length()<=0) {
                                save.setObject(2, "N/a");
                            }
                            else{
                                save.setObject(2, (jTable6.getValueAt(i, 3).toString()));
                            }

                            if (jTable6.getValueAt(i, 4).toString().length()<=0 ) {
                                save.setObject(3, "N/a");
                            }
                            else{
                                save.setObject(3, (jTable6.getValueAt(i, 4).toString()));
                            }

                            //textarea
                            if (jTextPane2.getText().toString().length()<=0 ) {
                                save.setObject(4, "N/a");
                            }
                            else{
                                save.setObject(4, (jTextPane2.getText().toString()));
                            }

                            save.executeUpdate();

                            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        }

                        else{
                            javax.swing.JOptionPane.showMessageDialog(this, "Select Items on "+" Items Entered "+" column");
                            connectDB.rollback();
                        }
                    }
                }

                connectDB.commit();
                connectDB.setAutoCommit(true);

            }

            catch (SQLException ex) {
                try {
                    connectDB.rollback();
                    ex.printStackTrace();
                }
                catch (SQLException ex1) {
                    ex1.printStackTrace();
                }

            }

        }

        else{

            javax.swing.JOptionPane.showMessageDialog(this, "Tender No and Supplier Must Be Selected");

        }

        postbtn3.setLabel("Save Item Details");

    }//GEN-LAST:event_postbtn3ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        // TODO add your handling code here:
        if (this.jTextField11.getCaretPosition() >= 1) {
            System.out.print("Nothing");
            try{
                int d =Integer.parseInt(jTextField11.getText());

                jTextField11.requestFocusInWindow();
                Double bid = Double.parseDouble(jTextField11.getText().toString())*100;
                // Object bidv= bid;
                jTextField8.setText(bid.toString());
            }

            catch(Exception u ) {
                JOptionPane.showMessageDialog(this, "Incorrect Data Type! Numbers Only!", "Wrong Value Entered", JOptionPane.ERROR_MESSAGE);
                jTextField11.requestFocusInWindow();
                jTextField11.setText(null);
                jTextField8.setText(null);
                jTextField11.requestFocusInWindow();
                return;

            }

        }
        else

        {

            jTextField11.requestFocusInWindow();
            jTextField11.setText(null);
            jTextField8.setText(null);
            //checktype
            //                 tenderrecordstxt3.addKeyListener(new KeyAdapter() {
                //
                //                  @Override
                //                  public void keyPressed(KeyEvent e)
                //                  {
                    //                  int key = e.getKeyCode();
                    //                   /* Restrict input to only integers */
                    //                if (key < 96 && key > 105)
                    //                {
                        //                   tenderrecordstxt3.setText(null);
                        //                  }
                    //                else{
                        //                     Double bid = Double.parseDouble(jTextField11.getText().toString())*100;
                        //                     Object bidv= bid;
                        //                    jTextField8.setText(bid.toString());
                        //
                        //
                        //                     }
                    //                  }
                //
                //
                //
                //
                //                 });

        System.out.println("manze jo");

        }

    }//GEN-LAST:event_jTextField11CaretUpdate

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:

        uploadfile();
        int returnVal = jFileChooser1.showOpenDialog(this);
        System.out.println("sasa hii" +returnVal);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File doc2 = jFileChooser1.getSelectedFile();

            String pic2 =doc2.getName();
            String picp2 = doc2.getAbsolutePath();

            jTextField12.setText(pic2);

            System.out.println("umeupload" +pic2.toString());

            jTextField13.setText(pic2);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:

        uploadfile();
        int returnVal = jFileChooser1.showOpenDialog(this);
        System.out.println("sasa hii" +returnVal);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            File doc = jFileChooser1.getSelectedFile();

            String pic =doc.getName();
            String picp = doc.getAbsolutePath();

            jTextField12.setText(picp.toString());

            System.out.println("umeupload" +pic.toString());

            //                      File taxcert =null;
            //
            //                    try{
                //                      taxcert = new File(pic);
                //
                //                      FileInputStream fis;
                //
                //                      fis = new FileInputStream(pic);
                //
                //                     System.out.println("eh jo niko mbele");
                //                    }
            //                    catch(Exception up){
                //                        JOptionPane.showMessageDialog(null, up.getMessage());
                //
                //                    }

        }

        //System.out.println("this is" +picp.toString());
        // jTextField12.setText(jFileChooser1.getSelectedFile().toString());

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
    if(receivetendertxt.getText().isEmpty() || suppliernametxt.getText().isEmpty()){
              javax.swing.JOptionPane.showMessageDialog(this, "Both tender number and supplier must be selected", "Caution Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
              }
                  
  else {
     try {
        java.sql.Statement user = connectDB.createStatement();
        java.sql.ResultSet getuser = user.executeQuery("select current_user");
        while (getuser.next()){
           Object usr = getuser.getObject(1).toString();
  
  
            com.afrisoftech.hospinventory.deletepdfs a = new com.afrisoftech.hospinventory.deletepdfs(new javax.swing.JFrame(), true, usr, receivetendertxt.getText().toString(),suppliernametxt.getText().toString(), connectDB, null);
            java.awt.Point p = jTextField11.getLocationOnScreen();
            a.setLocation(p);
            a.setVisible(true);
            a.setModal(true);
             }
            
            }
      catch(Exception ex1){
            
            ex1.printStackTrace();
            }
    }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void savedocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savedocsActionPerformed
        try {

            java.sql.Statement time = connectDB.createStatement();
            java.sql.ResultSet gettime = time.executeQuery("select to_char(current_timestamp, 'YYYY-MM-DD HH24:MI')");

            java.sql.Statement user = connectDB.createStatement();

            File doc = jFileChooser1.getSelectedFile();
            String picp = doc.getAbsolutePath();

            File  taxcert = new File(picp);

            FileInputStream fis;

            fis = new FileInputStream(taxcert);

            System.out.println("eh jo niko mbele");

            //  PreparedStatement ps = conn.prepareStatement("INSERT INTO images VALUES (?, ?)");
            java.sql.PreparedStatement ps = connectDB.prepareStatement ("INSERT INTO st_floated_quotation_docs(bid_bond, bid_ref_no, bank_name, business_questionnaire, tax_cert, entered_by, supplier_name, bid_amount, documentation_info, bidding_info, tender_no) VALUES (?,?,?,?,?,?,?,?,?,?,?);");
            //pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(tenderdatetxt.getText())))
            // ps.setString(1, file.getName());
            if (jTextField11.getText().toString()!=null){
                ps.setObject(1, jTextField11.getText().toString());
            }
            else{
                ps.setObject(1, "n/a");
            }

            ps.setObject(2, jTextField14.getText().toString());

            ps.setObject(3, jComboBox1.getSelectedItem().toString());

            if (bqavailedckk.isSelected()){

                ps.setObject(4, "business questionnaire duly filled");
            }
            else{
                ps.setObject(4, "n/a, check documentation ");

            }

            ps.setBinaryStream(5, fis, (int)taxcert.length());

            java.sql.ResultSet getuser = user.executeQuery("select current_user");
            while (getuser.next()){
                Object usr = getuser.getObject(1).toString();
                ps.setObject(6, usr);
            }
            ps.setObject(7, suppliernametxt.getText().toString());

            if(jTextField8.getText().toString()!=null){
                ps.setObject(8, jTextField8.getText().toString());
            }
            else{
                ps.setObject(8, "n/a");
            }

            if(jTextArea3.getText().toString()!=null){
                ps.setObject(9, jTextArea3.getText().toString());
            }
            else{
                ps.setObject(9, "n/a");
            }

            if(jTextArea4.getText().toString()!=null){
                ps.setObject(10, jTextArea4.getText().toString());
            }
            else{
                ps.setObject(10, "n/a");
            }

            ps.setObject(11, receivetendertxt.getText().toString());

            //  ps.setBinaryStream(2, fis, (int)file.length());
            // ps.setObject(3, tme);
            ps.executeUpdate();
            System.out.println("eh manze niko mbele");
            javax.swing.JOptionPane.showMessageDialog(this, "   Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            //jLabel55.setText(picp);
            //ps.close();
            fis.close();
            //toa report
            connectDB.commit();
            String supplier = suppliernametxt.getText().toString();

            com.afrisoftech.hospinventory.mtrhreports.taxcertPDF policy = new com.afrisoftech.hospinventory.mtrhreports.taxcertPDF();
            policy.taxcert(connectDB, supplier);

        }

        catch (Exception ex) {
            try {
                connectDB.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex1);
            }
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "   Please check your entries ", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }

        // TODO add your handling code here:

    }//GEN-LAST:event_savedocsActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
   if(Desktop.isDesktopSupported()){
     try{
     
     File file = new File("/home/saleem/Documents/Funsoft\\ HMIS/PhysicsForm1.doc");
     Desktop.getDesktop().open(file);
     System.out.println(file.getAbsolutePath());
     }
     catch(IOException ex){
     ex.printStackTrace();
     
     
     }
   
   
   }
   
   else{
       
      getOs();
      
     
     
   }
        
        
        
        
    }//GEN-LAST:event_jButton16ActionPerformed
     
    
    
    //determine the os
    public static DesktopApi.EnumOS getOs() {

        String s = System.getProperty("os.name").toLowerCase();
        
        if (s.contains("win")) {
            return DesktopApi.EnumOS.windows;
        }

        if (s.contains("mac")) {
            return DesktopApi.EnumOS.macos;
        }

        if (s.contains("solaris")) {
            return DesktopApi.EnumOS.solaris;
        }

        if (s.contains("sunos")) {
            return DesktopApi.EnumOS.solaris;
        }

        if (s.contains("linux")) {
            return DesktopApi.EnumOS.linux;
        }

        if (s.contains("unix")) {
            return DesktopApi.EnumOS.linux;
        } else {
            return DesktopApi.EnumOS.unknown;
        }
    }
    
    
    
    //get the opsys
     public static enum EnumOS {
        linux, macos, solaris, unknown, windows;

        public boolean isLinux() {

            return this == linux || this == solaris;
        }


        public boolean isMac() {

            return this == macos;
        }


        public boolean isWindows() {

            return this == windows;
        }
     }
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        //  int i=0;

        for ( int  i = 0; i < jTable2.getRowCount(); i++) {
            Object b = jTable2.getModel().getValueAt(i, 2).toString();
            System.out.println("mmmmm"+b);

            try {

                java.sql.PreparedStatement flag = connectDB.prepareStatement("UPDATE st_tender_suppliers SET opened=true WHERE tender = '"+opentendertxt.getText().toString()+"';");    //AND supplier_name ilike '"+jTable2.getModel().getValueAt(i, 1).toString()+"'

                flag.executeUpdate();

            }
            catch (SQLException ex) {
                Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully for "+opentendertxt.getText(), "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct su.code code , fu.supplier supplier ,false open_tender FROM st_floated_quotations fu, \n" +
            "st_suppliers su where  quotation_no ilike '" +opentendertxt.getText()+ "' and fu.supplier=su.supplier_name\n" +
            ""));
    jLabel2.setVisible(true);

    jLabel2.setText("TOTAL NUMBER OF APPLICANTS: "+jTable2.getRowCount());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        // TODO add your handling code here:
        opentender();
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:

        // new String [] {
            //    "SupplierID", "Supplier Name", "Tender Number", "Open Tender"
            //}

    }//GEN-LAST:event_jTable2MouseClicked

    private void searchButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton8ActionPerformed
        searchsuppliers();
    }//GEN-LAST:event_searchButton8ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchtenders();

    }//GEN-LAST:event_searchButtonActionPerformed

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
        //this.dispose();        // Add your handling code here:
    }//GEN-LAST:event_exitbtn1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void resetbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn1ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();

        int[] selectedRows = jTable11.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_resetbtn1ActionPerformed

    private void postbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn2ActionPerformed
        /*
        * locateSite = "local";
        *
        * if (locateSite.equals(this.LOCAL_SITE)) {
            *
            * System.out.println("locateSite = " + locateSite);
            *
            * sendRequisition();
            *
            * } else {
            *
            * postLocalRequisition();
            *
            * }
        */

        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < jTable11.getRowCount(); i++) {
                if (jTable11.getModel().getValueAt(i, 0) != null) {
                    // lineNumber = lineNumber + 1;
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_floated_quotations("
                        + " buyer_details, quotation_date, openning_date, item_code, item_description, "
                        + " units, quantity, item_number, quotation_no,supplier)"
                        + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                    pstmt.setObject(1, buyerdetailspne.getText());
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(tenderdatetxt.getText())));
                    pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(openingdatetxt.getText())));
                    pstmt.setObject(4, jTable11.getValueAt(i, 1).toString());
                    pstmt.setObject(5, jTable11.getValueAt(i, 2).toString());
                    pstmt.setObject(6, jTable11.getValueAt(i, 3).toString());
                    pstmt.setDouble(7, java.lang.Double.valueOf(jTable11.getValueAt(i, 4).toString()));
                    pstmt.setInt(8, java.lang.Integer.valueOf(jTable11.getValueAt(i, 0).toString()));
                    pstmt.setObject(9, tendernotxt.getText());
                    pstmt.setObject(10, suppliertxt.getText());
                    //                    pstmt.setInt(8, lineNumber);
                    //                    pstmt.setObject(9, quoteNo);
                    //System.out.println(dateSpinner.getValue().toString());

                    pstmt.executeUpdate();

                    java.sql.PreparedStatement suppr = connectDB.prepareStatement
                    ("INSERT INTO st_tender_suppliers (tender, supplier_name) VALUES (?,?)");
                    suppr.setObject(1, tendernotxt.getText());
                    suppr.setObject(2, suppliertxt.getText());
                    //                     suppr.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(datePicker4.getDate().toString())));
                    //datePicker4
                    suppr.executeUpdate();

                    //////////////////getting the tender no

                }
            }

            java.sql.PreparedStatement done = connectDB.prepareStatement("UPDATE st_td_collection SET collected=true WHERE supplier='"+suppliertxt.getText().toString()+"' and tender_no ilike '%"+tendernotxt.getText().toString()+"'");
            done.executeUpdate();
            //+com.afrisoftech.lib.SQLDateFormat.getSQLDate((datePicker4.getDate()))+
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            com.afrisoftech.hospinventory.mtrhreports.TendersSentMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.TendersSentMtrhPdf();

            policy.TendersSentMtrhPdf(connectDB, tendernotxt.getText(), suppliertxt.getText());

        } catch (java.sql.SQLException sq) {
            try {
                connectDB.rollback();
            } catch (SQLException ex) {
                Logger.getLogger(SSOTenderingProcess.class.getName()).log(Level.SEVERE, null, ex);
            }
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }        // Add your handling code here:
    }//GEN-LAST:event_postbtn2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }
        requistntxt.setText(null);
        deptraisingtxt.setText(null);
        // jTextPane1.setText(null);
        //          jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        //
        //jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            //    public void actionPerformed(java.awt.event.ActionEvent evt) {
                //        jComboBox4ActionPerformed(evt);
                //    }
            //});
    aienotxt.setText(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        String tenderNo = null;

        //generating tenderno
        System.out.println("uuu");

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }

        System.out.println("yy");

        int lineNumber = 0;
        try {
            connectDB.setAutoCommit(false);

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT 'TNo' || NEXTVAL('tender_no_seq')");
            while (rsetf.next()) {
                tenderNo = rsetf.getString(1);
            }

            System.out.println("ll");
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i, 0) != null) {
                    lineNumber = lineNumber + 1;
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_item_to_quote(\n" +
                        "            buyer_details, quotation_date, openning_date, item_code, item_description, \n" +
                        "            units, quantity, time_saved, item_number, item_serial, tender_no, \n" +
                        "            vote_class, vote, head, subhead, sub_item, sub_item_desc, donor_code, \n" +
                        "            donor_item, aie_no, department, irq_no)\n" +
                        "    VALUES (?, ?, ?, ?, ?, \n" +
                        "            ?, ?, ?, ?, ?, ?, \n" +
                        "            ?, ?, ?, ?, ?, ?, ?, \n" +
                        "            ?, ?, ?, ?);");

                    pstmt.setObject(1, jTextPane1.getText());
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                    pstmt.setDate(3, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker3.getDate()));
                    pstmt.setObject(4, jTable1.getValueAt(i, 0).toString());
                    pstmt.setObject(5, jTable1.getValueAt(i, 1).toString().toUpperCase());
                    pstmt.setObject(6, jTable1.getValueAt(i, 2).toString());
                    pstmt.setDouble(7, java.lang.Double.valueOf(jTable1.getValueAt(i, 3).toString()));
                    pstmt.setTimestamp(8, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                    pstmt.setObject(9, lineNumber);
                    pstmt.setObject(10, 2);
                    pstmt.setObject(11, tenderNo);
                    pstmt.setObject(12, null);
                    pstmt.setObject(13, null);
                    pstmt.setObject(14, null);
                    pstmt.setObject(15, null);
                    pstmt.setObject(16, null);
                    pstmt.setObject(17, null);
                    pstmt.setObject(18, null);
                    pstmt.setObject(19, null);
                    pstmt.setObject(20, null);
                    pstmt.setObject(21, null);
                    pstmt.setObject(22, null);
                    //System.out.println(dateSpinner.getValue().toString());

                    pstmt.executeUpdate();

                    System.out.println("mmmmmmmmm");

                }
                // com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.QuotationsMtrhPdf();

                // policy.QuotationsMtrhPdf(connectDB, tenderNo);
            }

            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully for "+tenderNo, "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

//            com.afrisoftech.hospinventory.criteria a = new com.afrisoftech.hospinventory.criteria(new javax.swing.JFrame(),true,tenderNo,connectDB,null);
//            a.setLocation(450,250);
//            a.setVisible(true);
            
            
            String b = aienotxt.getText().toString();
            com.afrisoftech.hospinventory.mtrhreports.EOIMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.EOIMtrhPdf();
            policy.QuotationsMtrhPdf(connectDB, tenderNo);

            java.sql.Statement flag=connectDB.createStatement();
            java.sql.ResultSet le =flag.executeQuery("UPDATE st_assign_buyers SET  pr_status=true WHERE requisition_no ='"+requistntxt.getText().toString()+"';");

        }

        catch (java.sql.SQLException l) {
            javax.swing.JOptionPane.showMessageDialog(this, l.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(l.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {

            //this.cmbox11MouseClicked();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        // searchButton13Clicked();         // TODO add your handling code here:

        searchquotation();
    }//GEN-LAST:event_searchButton4ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
                           
               if(jComboBox2.getSelectedIndex()==1)
               {
                  jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct a.supplier, false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"'and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 asc"));
                  jTable3.setShowHorizontalLines(false);                
                  jScrollPane5.setViewportView(jTable3);
                  jLabel45.setText(null);
               }
               else if(jComboBox2.getSelectedIndex()==2){
                  jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct a.supplier, false Award, sum(quantity*unit_price) Total_Amt FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"'and a.supplier= b.supplier and b.approved = true group by a.supplier order by 3 desc"));
                  jTable3.setShowHorizontalLines(false);                
                  jScrollPane5.setViewportView(jTable3);    
                  jLabel45.setText(null);
               }
               else{
               
                  jTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT  distinct a.supplier, false award FROM st_floated_quotations a, st_technical_evaluation b where a.ordered =false and a.quotation_no ilike'"+jTextField39.getText().toString()+"'and a.supplier= b.supplier and b.approved = true;"));
                  jTable3.setShowHorizontalLines(false);                
                  jScrollPane5.setViewportView(jTable3);
               
                  
               }
 
            
    }//GEN-LAST:event_jComboBox2ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EvaluationTypePane;
    private javax.swing.JPanel TechnicalEvaluationPane;
    public static javax.swing.JPanel TechnicalEvalutionMainPane;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JTextField aienotxt;
    private javax.swing.JTextField aienotxt1;
    private javax.swing.JCheckBox bidavailedchk;
    private javax.swing.JCheckBox bqavailedckk;
    private javax.swing.JTextPane buyerdetailspne;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JButton cancelbtn3;
    private javax.swing.JButton closebtn;
    private javax.swing.JButton closebtn1;
    private javax.swing.JButton closebtn2;
    private javax.swing.JButton closebtn3;
    private javax.swing.JButton closebtn4;
    private javax.swing.JButton closebtn5;
    private javax.swing.JButton closebtn6;
    private javax.swing.JButton closebtn7;
    private javax.swing.JButton closebtn8;
    private javax.swing.JButton closebtn9;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private com.afrisoftech.lib.DatePicker datePicker5;
    private com.afrisoftech.lib.DatePicker datePicker6;
    private javax.swing.JTextField deptraisingtxt;
    private javax.swing.JButton exitbtn1;
    private javax.swing.JButton exitbtn2;
    private javax.swing.JButton exitbtn4;
    private javax.swing.JPanel financialEvaluation;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JDialog lpopasswd;
    private javax.swing.JDialog lpopasswd1;
    private javax.swing.JTextField openingdatetxt;
    private javax.swing.JTextField opentendertxt;
    private javax.swing.JButton postbtn1;
    private javax.swing.JButton postbtn2;
    private javax.swing.JButton postbtn3;
    private javax.swing.JButton postbtn4;
    private javax.swing.JTextField receivetendertxt;
    private javax.swing.JScrollPane requisitionspnl;
    private javax.swing.JTable requisitiontbl;
    private javax.swing.JTextField requisitiontxt;
    private javax.swing.JTextField requistntxt;
    private javax.swing.JButton resetbtn1;
    private javax.swing.JButton resetbtn3;
    private javax.swing.JButton savedocs;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton3;
    private javax.swing.JButton searchButton4;
    private javax.swing.JButton searchButton5;
    private javax.swing.JButton searchButton6;
    private javax.swing.JButton searchButton8;
    private javax.swing.JDialog searchrequisition;
    private javax.swing.JDialog searchsupplier;
    private javax.swing.JDialog searchsupplier1;
    private javax.swing.JDialog searchsupplier2;
    private javax.swing.JDialog searchsupplier3;
    private javax.swing.JDialog searchsupplier4;
    private javax.swing.JPanel searchsupplierpnl;
    private javax.swing.JPanel searchsupplierpnl1;
    private javax.swing.JPanel searchsupplierpnl2;
    private javax.swing.JPanel searchsupplierpnl3;
    private javax.swing.JPanel searchsupplierpnl4;
    private javax.swing.JScrollPane searchsupplierspnl;
    private javax.swing.JScrollPane searchsupplierspnl1;
    private javax.swing.JScrollPane searchsupplierspnl2;
    private javax.swing.JScrollPane searchsupplierspnl3;
    private javax.swing.JScrollPane searchsupplierspnl4;
    private javax.swing.JTable searchsupplierstbl;
    private javax.swing.JTable searchsupplierstbl1;
    private javax.swing.JTable searchsupplierstbl2;
    private javax.swing.JTable searchsupplierstbl3;
    private javax.swing.JTable searchsupplierstbl4;
    private javax.swing.JTextField searchsuppliertxt;
    private javax.swing.JTextField searchsuppliertxt1;
    private javax.swing.JTextField searchsuppliertxt2;
    private javax.swing.JTextField searchsuppliertxt3;
    private javax.swing.JTextField searchsuppliertxt4;
    private javax.swing.JDialog searchtender;
    private javax.swing.JDialog searchtender1;
    private javax.swing.JDialog searchtender2;
    private javax.swing.JDialog searchtender3;
    private javax.swing.JTextField suppliernametxt;
    private javax.swing.JTextField suppliertxt;
    private javax.swing.JTextField tenderdatetxt;
    private javax.swing.JTextField tendernotxt;
    private javax.swing.JPanel tenderrecordspnl;
    private javax.swing.JPanel tenderrecordspnl1;
    private javax.swing.JPanel tenderrecordspnl2;
    private javax.swing.JPanel tenderrecordspnl3;
    private javax.swing.JScrollPane tenderrecordsspnl;
    private javax.swing.JScrollPane tenderrecordsspnl1;
    private javax.swing.JScrollPane tenderrecordsspnl2;
    private javax.swing.JScrollPane tenderrecordsspnl3;
    private javax.swing.JTable tenderrecordstbl;
    private javax.swing.JTable tenderrecordstbl1;
    private javax.swing.JTable tenderrecordstbl2;
    private javax.swing.JTable tenderrecordstbl3;
    private javax.swing.JTextField tenderrecordstxt;
    private javax.swing.JTextField tenderrecordstxt1;
    private javax.swing.JTextField tenderrecordstxt2;
    private javax.swing.JTextField tenderrecordstxt3;
    private javax.swing.JTextField usernamedispatchtxt;
    private javax.swing.JTextField usernamelpotxt;
    private javax.swing.JTextField usernameopentendertxt;
    private javax.swing.JTextField usernameprocessprtxt;
    private javax.swing.JTextField usernamereturnedtxt;
    private javax.swing.JPanel userrecordspnl;
    // End of variables declaration//GEN-END:variables
}
