/*
 * Requisitions.java
 *
 * Created on April 22, 2003, 5:12 PM
 */
package com.afrisoftech.hospinventory;

/**
 *
 * @author  root
 */
public class RaiseProcRequisintfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox2 = null;
    javax.swing.JComboBox cmbox3 = null;
    javax.swing.JComboBox cmbox4 = null;
    java.io.File filePortrait = null;
    javax.swing.JSpinner dateSpinner = null;
    javax.swing.JSpinner dateSpinner1 = null;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public RaiseProcRequisintfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        postbtn = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel111 = new javax.swing.JLabel();
        jPanel61 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox5 = new javax.swing.JCheckBox();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jCheckBox6 = new javax.swing.JCheckBox();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        postbtn1 = new javax.swing.JButton();
        resetbtn1 = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        exitbtn1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField11111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });
        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton511.setText("Close");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Raise Requisitions For Procurement");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        postbtn.setMnemonic('s');
        postbtn.setText("Save");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(postbtn, gridBagConstraints);

        resetbtn.setText("Reset");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(resetbtn, gridBagConstraints);

        cancelbtn.setMnemonic('l');
        cancelbtn.setText("Clear");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(cancelbtn, gridBagConstraints);

        exitbtn.setMnemonic('c');
        exitbtn.setText("Close");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(exitbtn, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel5, gridBagConstraints);

        jButton1.setMnemonic('r');
        jButton1.setText("Remove Row");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel4.add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Item Description", "Units", "Quantity", "Price", "Balance", "Code", "Remark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        /*java.lang.Object[] strCmb = {"Normal","Urgent",""};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);

        javax.swing.table.TableColumn teditor = this.jTable1.getColumn("Status");

        teditor.setCellEditor(new javax.swing.DefaultCellEditor(cmBox));
        */

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel4.add(jPanel2, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate = new javax.swing.SpinnerDateModel();
        dateSpinner = new javax.swing.JSpinner(spinerDate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel1.add(dateSpinner, gridBagConstraints);

        */
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Auto Req.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField1, gridBagConstraints);

        jLabel21.setText("Department to utilize items");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel21, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_main_stores where store_name not ilike 'procure%' order by store_name"));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBox1, gridBagConstraints);

        jLabel3.setText("Procuring Department/Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_main_stores where code ilike '%M%' order by store_name"));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(jComboBox2, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("Normal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jCheckBox2, gridBagConstraints);

        buttonGroup1.add(jCheckBox3);
        jCheckBox3.setText("Urgent");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jCheckBox3, gridBagConstraints);

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("Emergency");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel6, gridBagConstraints);

        jLabel111.setText("Requisition Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel111, gridBagConstraints);

        jPanel61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jTextField361.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField361, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel61.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel61, gridBagConstraints);

        jLabel1.setText("Search Requisition no");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 28, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jCheckBox4.setText("Merge Requisitions?");
        jCheckBox4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jCheckBox4, gridBagConstraints);

        jLabel4.setText("Due Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jComboBox3.setEditable(true);
        jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT distinct supplier_name FROM st_suppliers where (supplier_name is not null or supplier_name != '') ORDER BY supplier_name"));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jComboBox3, gridBagConstraints);

        jLabel9.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jCheckBox5.setText("Modify");
        jCheckBox5.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jCheckBox5, gridBagConstraints);

        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select depart_name from pb_main_department order by depart_name asc"));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jComboBox4, gridBagConstraints);

        jLabel22.setText("Requisitioning Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel22, gridBagConstraints);

        jCheckBox6.setText("Reverse");
        jCheckBox6.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jCheckBox6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel1.add(datePicker2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel4.add(jPanel1, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder("Reason for Purchase"));
        jPanel41.setLayout(new java.awt.GridBagLayout());

        jScrollPane21.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane21.setViewportView(jTextPane4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jScrollPane21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel4.add(jPanel41, gridBagConstraints);

        jTabbedPane1.addTab("Product In The Catalog", jPanel4);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel31.setLayout(new java.awt.GridBagLayout());

        postbtn1.setMnemonic('s');
        postbtn1.setText("Register New Items");
        postbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(postbtn1, gridBagConstraints);

        resetbtn1.setText("Reset");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(resetbtn1, gridBagConstraints);

        cancelbtn1.setMnemonic('l');
        cancelbtn1.setText("Clear");
        cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(cancelbtn1, gridBagConstraints);

        exitbtn1.setMnemonic('c');
        exitbtn1.setText("Close");
        exitbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(exitbtn1, gridBagConstraints);

        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(jLabel51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel5.add(jPanel31, gridBagConstraints);

        jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cost Center", "Item Description", "Units", "Quantity", "Date Due", "Allocate Stock Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable11.setShowHorizontalLines(false);
        cmbox4 = new javax.swing.JComboBox();

        cmbox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select store_name from st_stores order by store_name asc"));

        javax.swing.table.TableColumn seditor = this.jTable11.getColumn("Cost Center");

        seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox4));

        for (int i = 0; i < 3; i++) {
            column = jTable11.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {
                if (i == 1) {
                    column.setPreferredWidth(200);
                } else {
                    //if (i == 2) {
                        column.setPreferredWidth(200);
                        // }  else
                    //column.setPreferredWidth(50);

                }
            }
        }
        jScrollPane11.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel21.add(jScrollPane11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel5.add(jPanel21, gridBagConstraints);

        /*        javax.swing.SpinnerDateModel spinerDate1 = new javax.swing.SpinnerDateModel();
        dateSpinner1 = new javax.swing.JSpinner(spinerDate1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel11.add(dateSpinner1, gridBagConstraints);
        /*     gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jTextField1, gridBagConstraints);
        */
        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel11.setText("Requisation Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel5.add(jPanel11, gridBagConstraints);

        jTabbedPane1.addTab("-", jPanel5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 838, 522);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        com.afrisoftech.hospinventory.RaiseProcRequisIntfrintfr other = new RaiseProcRequisIntfrintfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        com.afrisoftech.hospinventory.ProqReqModifyWholeintfr other = new ProqReqModifyWholeintfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        this.postbtn.setEnabled(true);

        /*       for (int k = 0; k < jTable1.getRowCount(); k++ ) {
        for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
        jTable1.getModel().setValueAt(null,k,r);
        }
        }
        double quantityToOrder = 0.00;
        double ReoderLevel = 0.00;
        double sumQty = 0.00;
        try {
        java.lang.Object[] listofAct = this.getListofActivities();
        for (int i = 0; i < listofAct.length; i++){
        java.sql.Statement st32 = connectDB.createStatement();
        java.sql.ResultSet rset11 = st32.executeQuery("select description,units,quantity_toorder from st_stock_item WHERE description ILIKE '%"+listofAct[i]+"%' AND quantity_toorder > 0");
        while (rset11.next()) {
        
        //   System.out.println("Working at table row "+i);
        jTable1.setValueAt(rset11.getObject(1), i, 0);
        jTable1.setValueAt(rset11.getObject(2), i, 1);
        jTable1.setValueAt(rset11.getObject(3), i, 2);
        
        i++;
        
        }
        
        
        }
        for (int i = 0; i < jTable1.getRowCount(); i++) {
        
        if (jTable1.getModel().getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
        
        java.sql.Statement st321 = connectDB.createStatement();
        java.sql.ResultSet rset111 = st321.executeQuery("select price from st_product_list WHERE description ILIKE '%"+jTable1.getValueAt(i,0).toString()+"%' AND supplier = '"+jComboBox1.getSelectedItem().toString()+"'");
        while (rset111.next()) {
        
        jTable1.setValueAt(rset111.getObject(1), i, 3);
        }
        
        }
        }
        
        for (int k = 0; k < jTable1.getRowCount(); k++) {
        
        if (jTable1.getModel().getValueAt(k, 0) != null) {
        double qtyReq = java.lang.Double.parseDouble(jTable1.getValueAt(k, 2).toString());
        double qtyReq1 = java.lang.Double.parseDouble(jTable1.getValueAt(k, 3).toString());
        jTable1.setValueAt(new java.lang.Double(qtyReq*qtyReq1), k, 4);
        }
        }
        java.sql.Statement pstmt = connectDB.createStatement();
        
        java.sql.ResultSet rs = pstmt.executeQuery("select current_user");
        while (rs.next()){
        
        jTextField9.setText(rs.getObject(1).toString());
        }
        } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
        }
         */
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        com.afrisoftech.hospinventory.MergingReqIntfr other = new MergingReqIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        jSearchDialog11.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTextField361.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        //    jTextField361.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        jSearchDialog11.dispose();
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        int k = 0;

        this.postbtn.setEnabled(true);
        this.populateTable11(this.jTextField361.getText());  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    private void populateTable11(java.lang.String patient_no) {
        int i = 0;
        try {

            //   for (int i = 0; i < jTable1.getRowCount(); i++ ) {
            //       if (jTable1.getModel().getValueAt(i,0) != null){

            java.sql.Statement stmtTable = connectDB.createStatement();

            java.sql.ResultSet rsetTable = stmtTable.executeQuery("SELECT item_description,units,quantity*units::numeric,price,(quantity*price*units::numeric)::numeric(15,2),balance,reason FROM st_receive_requisation WHERE requisition_no ilike '" + jTextField361.getText() + "' order by item_description");
            //  java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT sum(receiving-issuing) FROM st_sub_stores WHERE store_name = '"+jTextField1.getText().equalsIgnoreCase(jTextField1.getText())+"' and item = '"+jTable1.getValueAt(k,0).toString()+"'");

            while (rsetTable.next()) {

                jTable1.setValueAt(rsetTable.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable.getObject(6), i, 4);
                jTextPane4.setText(rsetTable.getString(7));
                //  jTable1.setValueAt("0.00", i, 5);
                // jTable1.setValueAt(rsetTable.getObject(5), i, 6);
                //   jTable1.setValueAt(rsetTable1.getObject(6), i, 6);

                i++;

            }

            /*
            java.sql.Statement stmtTablez = connectDB.createStatement();
            
            java.sql.ResultSet rsetTablez = stmtTablez.executeQuery("SELECT DISTINCT cost_center FROM st_receive_requisation WHERE requisition_no ilike '"+jTextField361.getText()+"'");
            while (rsetTablez.next()) {
            jTextField10.setText(rsetTablez.getObject(1).toString());
            }
             */
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }


    }
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
// int j = 0;
        // try {
        //  java.sql.Statement stmt = connectDB.createStatement();
        // java.sql.ResultSet rset = stmt.executeQuery("SELECT count(requisition_no) FROM st_receive_requisation WHERE requisition_no ilike 'PRQ%' and processed = false");

        //   while (rset.next()) {
        //      j = rset.getInt(1);
        //  }
        //  if (j > 0){


        jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct requisition_no as Req_No from st_receive_requisation where requisition_no ILIKE '" + jTextField11111.getText().toString() + "%' and (requisition_no ilike 'IRQ%' OR requisition_no ilike 'SRQ%') AND PROCESSED=FALSE ORDER BY requisition_no"));
        //   }
     /*   try {
        searchRowSet1.execute("select distinct order_no as scheme,(supplier) as name from st_orders where order_no ILIKE '"+jTextField1111.getText().toString()+"%' ORDER BY order_no");
        
        jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
        new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Order No.", false),
        new org.netbeans.lib.sql.models.TableModel.Column("name", "Supplier", false),
        // new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Acc No.", false)
        }));
         */

        //   } catch(java.sql.SQLException sqlExec) {

        //      javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        //   }
        jSearchTable11.setShowHorizontalLines(false);
        jSearchScrollPane11.setViewportView(jSearchTable11);

// Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(requisition_no) FROM st_receive_requisation WHERE (requisition_no ilike 'IRQ%' OR requisition_no ilike 'SRQ%') and processed = false");

            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0) {

                searchButton11Clicked();
            } else {
                System.out.println("There are no pending requistions for the selected Department");
            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

// Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog11.dispose();
        java.awt.Point point = this.jTextField361.getLocationOnScreen();

        jSearchDialog11.setSize(400, 200);

        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);


    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedColumn() == 0) {

            this.cmbox11MouseClicked();
        }           // Add your handling code here:


        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        /* if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Main Store")){
        try {
        java.sql.Statement pstmt = connectDB.createStatement();
        java.sql.ResultSet rs = pstmt.executeQuery("select store_name from st_stores order by store_name asc");
        while (rs.next()){
        //   jTable1.setValueAt(rs.getObject(1),i,1);
        jComboBox1.setSelectedItem(rs.getString(1));
        }
        } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
        
        }
        } else{
        try {
        java.sql.Statement pstmt = connectDB.createStatement();
        java.sql.ResultSet rs = pstmt.executeQuery("select department_name from pb_departments order by department_name asc");
        while (rs.next()){
        //   jTable1.setValueAt(rs.getObject(1),i,1);
        jComboBox1.setSelectedItem(rs.getString(1));
        }
        } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
        
        }
        
        }
         */
        /*  try {
        java.sql.Statement pstmt = connectDB.createStatement();
        java.sql.ResultSet rs = pstmt.executeQuery("select store_name from st_main_stores where store_name not ilike 'procure%' order by store_name asc");
        while (rs.next()){
        //   jTable1.setValueAt(rs.getObject(1),i,1);
        jComboBox1.setSelectedItem(rs.getString(1));
        }
        } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
        
        }
         */
// Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        /*      if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Main Store")){
        
        crset31.setCommand("select store_name from st_stores order by store_name asc");
        try {
        crset31.execute();
        
        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset31, "store_name", null, null, null));
        }catch (java.sql.SQLException sql){}
        
        } else{
        crset31.setCommand("select department_name from pb_departments order by department_name asc");
        try {
        crset31.execute();
        
        jComboBox1.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset31, "store_name", null, null, null));
        
        
        } catch(java.sql.SQLException sqlex){
        System.out.println(sqlex.getMessage());
        
        }
        
        
        }*/ // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int rows2Delete = jTable1.getSelectedRowCount();

        int[] selectedRows = jTable1.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.jSearchDialog1.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        double bal = 0.00;

        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1), jTable1.getSelectedRow(), 1);
        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2), jTable1.getSelectedRow(), 3);
        jTable1.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 3), jTable1.getSelectedRow(), 5);
        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select sum(QTY) from stock_balance_qty  WHERE description ILIKE '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "' AND department ILIKE '" + jComboBox1.getSelectedItem() + "'");
            while (rs.next()) {

                bal = rs.getDouble(1);
                jTable1.setValueAt(java.lang.String.valueOf(bal), jTable1.getSelectedRow(), 4);
                //jComboBox1.setSelectedItem(rs.getString(1));
            }
        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());

        }

        jSearchDialog1.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT description,units,buying_price,item_code FROM st_stock_item WHERE description ILIKE '%" + jTextField1111.getText() + "%' ORDER BY description"));
        jSearchScrollPane1.setViewportView(jSearchTable1);


        /*   if(this.jComboBox2.getSelectedItem().toString().equalsIgnoreCase("main store")){
        if(this.jTextField1111.getCaretPosition() < 2){
        System.out.print("Nothing");
        }else{
        
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct product,units,selling_price FROM st_stock_prices WHERE product ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox1.getSelectedItem().toString()+"%' ORDER BY product"));
        jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        
        }
        }else{
        if(this.jTextField1111.getCaretPosition() < 2){
        System.out.print("Nothing");
        }else{
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct description,units,buying_price FROM st_stock_item WHERE description ILIKE '%"+jTextField1111.getText()+"%' and department ilike '"+this.jComboBox2.getSelectedItem().toString()+"%' ORDER BY description"));
        jSearchScrollPane1.setViewportView(jSearchTable1);
        System.out.println("Cannot sort out");
        
        }
        }*/
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void cmbox11MouseClicked() {
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        jSearchDialog1.setSize(600, 200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
    }

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_exitbtnActionPerformed

    private void exitbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtn1ActionPerformed
        this.setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_exitbtn1ActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtn1ActionPerformed
    /* private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
    cmbox2 = new javax.swing.JComboBox();
    
    int i = jTable1.getSelectedRow();
    //   java.lang.Object res_cmbox2 = cmbox3.getSelectedItem();
    
    //  if (!(jTable1.getValueAt(i,0).toString().equals(null))){
    try {
    
    crset1.setConnectionSource(pConnDB);
    crset1.execute("select description from st_stock_item where department = '"+jTable1.getValueAt(i,0).toString()+"' ORDER By description");
    
    cmbox2.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset1, "description", null, null,null));
    
    javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Item Description");
    
    seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox2));
    
    cmbox2.addActionListener(new java.awt.event.ActionListener() {
    
    public void actionPerformed(java.awt.event.ActionEvent evt) {
    
    cmbox2ActionPerformed(evt);
    }
    });
    } catch(java.sql.SQLException sqlExec) {
    
    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
    
    }
    //  }
    }*/
    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked

        javax.swing.JFileChooser chooserPortrait = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));

        com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();

        filter.addExtension("req");

        filter.setDescription("Requisition Files");

        chooserPortrait.setFileFilter(filter);

        int returnVal = chooserPortrait.showOpenDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            System.out.println("You chose to open this file: "
                    + chooserPortrait.getSelectedFile().getName());

            filePortrait = chooserPortrait.getSelectedFile();

            this.jTextField1.setText(filePortrait.getName());

            processBrRequisitionFile(filePortrait);
        }


        // Add your handling code here:
    }//GEN-LAST:event_jTextField1MouseClicked

    private void postbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtn1ActionPerformed
        javax.swing.JInternalFrame dismth = new StockGroupsintfr(connectDB, pConnDB);
        this.getParent().add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_postbtn1ActionPerformed

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed
        System.out.println(jTextField1.getText());
        String description = null;
        String code = null;
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String transNo = null;
        String transNo1 = null;
        String glType = null;
        String user = null;
        String userName = null;
        String glCode = null;
        String units = null;
        String ChkBx = null;
        if (this.jCheckBox1.isSelected()) {
            ChkBx = this.jCheckBox1.getText();
        } else {
            if (this.jCheckBox2.isSelected()) {
                ChkBx = this.jCheckBox2.getText();
            } else {
                ChkBx = this.jCheckBox3.getText();
            }
        }
        try {

            connectDB.setAutoCommit(false);


            java.sql.Statement pst2 = connectDB.createStatement();
            java.sql.ResultSet rs = pst2.executeQuery("select current_user");
            while (rs.next()) {
                userName = rs.getObject(1).toString();
            }
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rs2 = ps.executeQuery("select 'PRQ'||lpad(nextval('proc_req_no_seq')::text,6,0::TEXT)");
            while (rs2.next()) {
                transNo = rs2.getObject(1).toString();
            }



            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO st_receive_requisation VALUES(?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getModel().getValueAt(i, 2) != null) {
                    pstmt.setObject(1, jComboBox4.getSelectedItem());
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                    pstmt.setObject(3, jComboBox1.getSelectedItem());
                    pstmt.setObject(4, jTable1.getValueAt(i, 0).toString());
                    pstmt.setObject(5, jTable1.getValueAt(i, 1).toString());
                    pstmt.setDouble(6, java.lang.Double.valueOf(jTable1.getValueAt(i, 2).toString()));
                    pstmt.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                    pstmt.setDate(8, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));

// pstmt.setDate(8,com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                    pstmt.setBoolean(9, false);
                    pstmt.setBoolean(10, false);
                    pstmt.setObject(11, ChkBx);
                    pstmt.setString(12, transNo);
                    pstmt.setDouble(13, java.lang.Double.valueOf(jTable1.getValueAt(i, 3).toString()));
                    pstmt.setString(14, userName);
                    pstmt.setObject(15, jComboBox2.getSelectedItem());
                    pstmt.setDouble(16, 0.00);
                    pstmt.setDouble(17, java.lang.Double.valueOf(jTable1.getValueAt(i, 4).toString()));
                    pstmt.setBoolean(18, false);
                    pstmt.setString(19, jTextField361.getText() + "-" + userName);
                    pstmt.setObject(20, jComboBox3.getSelectedItem());
                    pstmt.setTimestamp(21, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));//com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.util.Calendar.getInstance().getTime()));
                    pstmt.setObject(22, jComboBox4.getSelectedItem());
                    pstmt.setString(23, jTextPane4.getText());
                    pstmt.setDouble(24, 0);
                    pstmt.setObject(25, jTable1.getValueAt(i, 6).toString());
                    pstmt.setDouble(26, 0);
                    pstmt.setObject(27, "");
                    pstmt.setObject(28, "");
                    pstmt.setObject(29, jTable1.getValueAt(i, 5).toString());
                    pstmt.setDouble(30, 0);
                    pstmt.setDouble(31, 0);
                    pstmt.setString(32, "");
                    pstmt.executeUpdate();

                }
            }

            java.sql.PreparedStatement pstmt221 = connectDB.prepareStatement("UPDATE st_receive_requisation set processed=true WHERE requisition_no = '" + jTextField361.getText() + "'");
            pstmt221.executeUpdate();

            connectDB.commit();
            connectDB.setAutoCommit(true);
            jLabel5.setForeground(java.awt.Color.blue);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully Requisition No. is '" + transNo + "'", "Comfirmation", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            //com.afrisoftech.hospinventory.PurchaseReqFormPdf policy = new com.afrisoftech.hospinventory.PurchaseReqFormPdf();

           // policy.PurchaseReqFormPdf(connectDB, jComboBox1.getSelectedItem().toString(), transNo);

            com.afrisoftech.hospinventory.mtrhreports.PurchaseReqFormMtrhPdf policy = new com.afrisoftech.hospinventory.mtrhreports.PurchaseReqFormMtrhPdf();

            //policy.PurchaseReqFormMtrhPdf(connectDB, jComboBox4.getSelectedItem().toString(),jComboBox1.getSelectedItem().toString(), transNo);


            for (int k = 0; k < jTable1.getRowCount(); k++) {
                for (int r = 0; r < jTable1.getColumnCount(); r++) {
                    jTable1.getModel().setValueAt(null, k, r);
                }
            }
        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_postbtnActionPerformed
    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt) {
        int i = jTable1.getSelectedRow();
        java.lang.Object res_cmbox2 = cmbox2.getSelectedItem();

        try {
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rs = pstmt.executeQuery("select units from st_stock_item where description = '" + cmbox2.getSelectedItem() + "'");
            while (rs.next()) {
                jTable1.setValueAt(rs.getObject(1), i, 2);
            }

        } catch (java.sql.SQLException sqlex) {
            System.out.println(sqlex.getMessage());
        }
    }

    private void processBrRequisitionFile(java.io.File filePortrait2Process) {

        this.invalidate();

        try {

            try {

                java.io.FileInputStream requisFileIOStream = new java.io.FileInputStream(filePortrait2Process);

                java.io.ObjectInputStream requisObjInStream = new java.io.ObjectInputStream(requisFileIOStream);

                javax.swing.JTable requisTable = (javax.swing.JTable) requisObjInStream.readObject();

                javax.swing.JTable requisTable2 = (javax.swing.JTable) requisObjInStream.readObject();

                //  jScrollPane1.setViewportView(requisTable);
                jScrollPane11.setViewportView(requisTable2);

                jTable1.setModel(requisTable.getModel());

                jTable11.setModel(requisTable2.getModel());
                this.validate();

            } catch (java.lang.ClassNotFoundException cnfExec) {

                javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());

            }

        } catch (java.io.IOException ioExec) {

            javax.swing.JOptionPane.showMessageDialog(this, ioExec.getMessage());

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    public static javax.swing.JButton exitbtn;
    private javax.swing.JButton exitbtn1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton91;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField361;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JButton postbtn;
    private javax.swing.JButton postbtn1;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton resetbtn1;
    private javax.swing.JButton searchButton1;
    // End of variables declaration//GEN-END:variables
}
