/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospinventory;

import com.afrisoftech.lib.ClearTable;
import com.afrisoftech.lib.DBObject;
import com.afrisoftech.lib.FinancialYear;
import com.afrisoftech.lib.GetInstitutionInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class AddendumIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddendumIntfr
     */
    
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private int num_of_prs;
    int prelcode =1;
    int techcode =2;
    com.afrisoftech.lib.DBObject DBObject = new com.afrisoftech.lib.DBObject();
    
    public AddendumIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

       // refreshStatus = true;

        connectDB = connDb;

        pConnDB = pconnDB;
        
        initComponents();
//        itemsTbl.getColumn(0).setPreferredWidth(50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchrequisition = new javax.swing.JDialog();
        userrecordspnl = new javax.swing.JPanel();
        requisitiontxt = new javax.swing.JTextField();
        requisitionspnl = new javax.swing.JScrollPane();
        requisitiontbl = new com.afrisoftech.dbadmin.JTable();
        closebtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        closingdatepcker = new com.afrisoftech.lib.DatePicker();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jPanel18 = new javax.swing.JPanel();
        tendernotxt = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        criteriaTbl = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        zoomPrelcritbtn = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        itemsTbl = new com.afrisoftech.dbadmin.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        specsTbl = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        commentsTxtArea = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        zoomUserSpecsbtn = new javax.swing.JButton();

        searchrequisition.setModal(true);
        searchrequisition.setUndecorated(true);
        searchrequisition.getContentPane().setLayout(new java.awt.GridBagLayout());

        userrecordspnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        userrecordspnl.setLayout(new java.awt.GridBagLayout());

        requisitiontxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                requisitiontxtCaretUpdate(evt);
            }
        });
        requisitiontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requisitiontxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        userrecordspnl.add(requisitiontxt, gridBagConstraints);

        requisitiontbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        requisitiontbl.setToolTipText("Click on the target row to select the patient from the search.");
        requisitiontbl.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        requisitiontbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requisitiontblMouseClicked(evt);
            }
        });
        requisitionspnl.setViewportView(requisitiontbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        userrecordspnl.add(requisitionspnl, gridBagConstraints);

        closebtn.setText("Close");
        closebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userrecordspnl.add(closebtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchrequisition.getContentPane().add(userrecordspnl, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Updating Tender Records");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 0, 255), null, new java.awt.Color(255, 0, 51)));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Tender Opening/Closing Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Due Date");
        jLabel7.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel7, gridBagConstraints);

        jLabel1.setText("Tender Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(closingdatepcker, gridBagConstraints);

        datePicker3.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(datePicker3, gridBagConstraints);

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel18.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        tendernotxt.setEditable(false);
        tendernotxt.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(tendernotxt, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton4.setToolTipText("Search Patient's Name");
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel18.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(jPanel18, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tender Criteria"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        criteriaTbl.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        criteriaTbl.setForeground(new java.awt.Color(0, 51, 204));
        criteriaTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "#", "Preliminary Crieria"
            }
        ));
        criteriaTbl.setGridColor(new java.awt.Color(0, 0, 204));
        jScrollPane1.setViewportView(criteriaTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jCheckBox1.setText("Default Values");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jCheckBox1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jPanel2, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        zoomPrelcritbtn.setBackground(new java.awt.Color(204, 255, 255));
        zoomPrelcritbtn.setText("Zoom Table");
        zoomPrelcritbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomPrelcritbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(zoomPrelcritbtn, gridBagConstraints);

        jButton5.setBackground(new java.awt.Color(153, 255, 204));
        jButton5.setMnemonic('v');
        jButton5.setText("Remove Row");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel1.add(jPanel7, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(0, 0, 204), null, null));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setMnemonic('e');
        jButton1.setText("Update Tender Records");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
        jPanel9.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setMnemonic('r');
        jButton2.setText("Remove Rows");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
        jPanel9.add(jButton2, gridBagConstraints);

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setMnemonic('c');
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
        jPanel9.add(jButton3, gridBagConstraints);

        jButton4.setBackground(new java.awt.Color(204, 204, 255));
        jButton4.setMnemonic('l');
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 100);
        jPanel9.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel9, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBackground(new java.awt.Color(153, 255, 153));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tender Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Units", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTbl.setSurrendersFocusOnKeystroke(true);
        /*              try {

            crset3.setConnectionSource(pConnDB);
            crset3.execute("select department_name from pb_departments order by department_name");

            cmbox3.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset3, "department_name", null, null,null));

            javax.swing.table.TableColumn seditor = this.jTable1.getColumn("Cost Center");

            seditor.setCellEditor(new javax.swing.DefaultCellEditor(cmbox3));

            //  cmbox3.addActionListener(new java.awt.event.ActionListener() {

                //  public void actionPerformed(java.awt.event.ActionEvent evt) {

                    //       cmbox3ActionPerformed(evt);
                    //  }
                //});
    } catch(java.sql.SQLException sqlExec) {

        javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

    }
    */

    javax.swing.table.TableColumn column = null;
    for (int i = 0; i < 4; i++) {
        column = itemsTbl.getColumnModel().getColumn(i);
        if (i == 1) {

            column.setPreferredWidth(300); //sport column is bigger
        } else {
            if (i == 0) {
                column.setPreferredWidth(50);
            } else {
                //if (i == 2) {
                    column.setPreferredWidth(50);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
    }
    itemsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            itemsTblMouseClicked(evt);
        }
    });
    jScrollPane3.setViewportView(itemsTbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    jPanel8.add(jScrollPane3, gridBagConstraints);

    jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Specs Table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));

    specsTbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    specsTbl.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
    specsTbl.setForeground(new java.awt.Color(255, 0, 102));
    specsTbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "#", "Technical Specs"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, true
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    specsTbl.setGridColor(new java.awt.Color(0, 0, 204));
    specsTbl.setSelectionBackground(new java.awt.Color(153, 255, 255));
    specsTbl.setSelectionForeground(new java.awt.Color(204, 0, 0));
    jScrollPane2.setViewportView(specsTbl);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    jPanel8.add(jScrollPane2, gridBagConstraints);

    jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Comments Here"));

    commentsTxtArea.setColumns(20);
    commentsTxtArea.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
    commentsTxtArea.setRows(5);
    commentsTxtArea.setText("N/A\n");
    commentsTxtArea.setWrapStyleWord(true);
    jScrollPane4.setViewportView(commentsTxtArea);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    jPanel8.add(jScrollPane4, gridBagConstraints);

    jPanel6.setBorder(javax.swing.BorderFactory.createCompoundBorder());
    jPanel6.setLayout(new java.awt.GridBagLayout());

    zoomUserSpecsbtn.setBackground(new java.awt.Color(204, 255, 255));
    zoomUserSpecsbtn.setText("Zoom Table");
    zoomUserSpecsbtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            zoomUserSpecsbtnActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 80, 0, 0);
    jPanel6.add(zoomUserSpecsbtn, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel8.add(jPanel6, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 9.0;
    jPanel3.add(jPanel8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 9.0;
    jPanel1.add(jPanel3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel5.add(jPanel1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jPanel5, gridBagConstraints);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        // searchButton13Clicked();         // TODO add your handling code here:

        //searchquotation();
        
        System.out.println("Showing dialog");

        //searchrequisition.dispose();
        java.awt.Point point = this.tendernotxt.getLocationOnScreen();
        searchrequisition.setSize(400, 200);
        searchrequisition.setLocation(point);
        searchrequisition.setVisible(true);
    }//GEN-LAST:event_searchButton4ActionPerformed
        private void searchquotation() {
    

} 
    private void itemsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTblMouseClicked
      
       if(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 1)!=null){ 
        String desc = itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 1).toString();
        
        
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        
           try {
               
            java.sql.PreparedStatement techSpecs = connectDB.prepareStatement("select  DISTINCT  specs from st_criteria where item_desc ilike '%"+desc+"%' AND specs is not null GROUP BY 1");
          
            ResultSet techs = techSpecs.executeQuery();
            int j =0;
            while(techs.next()){
                specsTbl.setValueAt(j+1, j, 0);
                specsTbl.setValueAt(DBObject.getDBObject(techs.getObject(1), "-"), j, 1);
            
                 j++;
            
            }
            
         }
           
           
           
           catch (SQLException ex) {
               Logger.getLogger(AddendumIntfr.class.getName()).log(Level.SEVERE, null, ex);
               ex.printStackTrace();
               
           }
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        
        
        
        
        
        
       }
    }//GEN-LAST:event_itemsTblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        String tenderNo = null;

        //generating tenderno
        System.out.println("uuu");

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select period_from,period_to FROM period_setup");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
        }

        System.out.println("yy");

        int lineNumber = 0;
        try {
            connectDB.setAutoCommit(false);

            java.sql.Statement stmtf = connectDB.createStatement();
            

            System.out.println("ll");
            for (int i = 0; i < itemsTbl.getRowCount(); i++) {
                if (itemsTbl.getModel().getValueAt(i, 0) != null) {
                    lineNumber = lineNumber + 1;
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE st_item_to_quote "
                            + "SET  buyer_details=?,  openning_date=?, quantity=? WHERE item_code='"+itemsTbl.getValueAt(i, 0)+"' \n" +
                              " AND tender_no ='"+tendernotxt.getText()+"'");

                    pstmt.setObject(1, GetInstitutionInfo.HeaderName(connectDB));
                    pstmt.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(closingdatepcker.getDate()));
                    pstmt.setDouble(3, java.lang.Double.valueOf(itemsTbl.getValueAt(i, 3).toString()));

                    pstmt.executeUpdate();
                    //--------------------
                    java.sql.PreparedStatement pstmtFloated = connectDB.prepareStatement("UPDATE st_floated_quotations "
                    + "SET buyer_details=?,  openning_date=?, quantity=?"
                    + " WHERE item_code='"+itemsTbl.getValueAt(i, 0)+"' \n" +
                      " AND  quotation_no='"+tendernotxt.getText()+"'");
            
                    pstmtFloated.setObject(1, GetInstitutionInfo.HeaderName(connectDB));
                    pstmtFloated.setDate(2, com.afrisoftech.lib.SQLDateFormat.getSQLDate(closingdatepcker.getDate()));
                    pstmtFloated.setDouble(3, java.lang.Double.valueOf(itemsTbl.getValueAt(i, 3).toString()));

                    pstmtFloated.executeUpdate();
                    

                }
            }
            
            
            
            java.sql.PreparedStatement delprelCriteria = connectDB.prepareStatement("DELETE  from st_preliminary_criteria  where quotation_no ='"+tendernotxt.getText()+"'");
            delprelCriteria.execute();
            
            for(int i=0;i<criteriaTbl.getRowCount();i++){
               if(criteriaTbl.getValueAt(i, 0)!=null){
            java.sql.PreparedStatement inscr = connectDB.prepareStatement("INSERT INTO st_preliminary_criteria(quotation_no, pr_code, pr_item) VALUES (?, ?, initcap(?));");
            inscr.setObject(1, tendernotxt.getText());
            inscr.setObject(2, i+1);
            inscr.setObject(3, criteriaTbl.getValueAt(i, 1));
            
            inscr.executeUpdate();
            
            
            }
            }
            //Security plan
            //
            java.sql.PreparedStatement sec = connectDB.prepareStatement("INSERT INTO security(\"desc\", amend, username,remarks) VALUES (?, ?, ?,?);");
            sec.setObject(1, tendernotxt.getText());
            sec.setObject(2, "T");
            sec.setObject(3, com.afrisoftech.lib.UserName.getLoginName(connectDB).toLowerCase());
            sec.setObject(4, commentsTxtArea.getText());
            sec.executeUpdate();

            
        connectDB.commit();
        connectDB.setAutoCommit(true);

        javax.swing.JOptionPane.showMessageDialog(this, "Tender Updated Successfully for "+tendernotxt.getText(), "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        for (int k = 0; k < itemsTbl.getRowCount(); k++) {
            for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
                itemsTbl.getModel().setValueAt(null, k, r);
            }
        }
        tendernotxt.setText(null);
//        deptraisingtxt.setText(null);
        }

        catch (Exception l) {
            l.printStackTrace();
            System.out.println(l.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int rows2Delete = itemsTbl.getSelectedRowCount();

        int[] selectedRows = itemsTbl.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) itemsTbl.getModel();

                defTableModel.removeRow(itemsTbl.getSelectedRow());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        for (int k = 0; k < itemsTbl.getRowCount(); k++) {
            for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
                itemsTbl.getModel().setValueAt(null, k, r);
            }
        }
        tendernotxt.setText(null);
//        deptraisingtxt.setText(null);
        // jTextPane1.setText(null);
        //          jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        //
        //jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            //    public void actionPerformed(java.awt.event.ActionEvent evt) {
                //        jComboBox4ActionPerformed(evt);
                //    }
            //});
    //aienotxt.setText(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void requisitiontxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_requisitiontxtCaretUpdate
        if (this.requisitiontxt.getCaretPosition()>4) {
            System.out.print("Nothing");

//        } else
//        {
            //            requisitiontbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT requisition_no, agenda_no, date_buyer_assigned \n" +
                //"  FROM st_assign_buyers where pr_status= false order by date_buyer_assigned asc ;"));

    requisitiontbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct quotation_no FROM st_floated_quotations where ordered=false and quotation_no  ilike '%"+requisitiontxt.getText()+"%'  order by 1"));

    requisitiontbl.setShowHorizontalLines(false);
    requisitionspnl.setViewportView(requisitiontbl);

    }   // Add your handling code here:
    }//GEN-LAST:event_requisitiontxtCaretUpdate

    private void requisitiontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requisitiontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requisitiontxtActionPerformed

    private void requisitiontblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requisitiontblMouseClicked
        tendernotxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 0).toString());
        //depttxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 3).toString());
        //grouptxt.setText(requisitiontbl.getValueAt(requisitiontbl.getSelectedRow(), 2).toString());

        searchrequisition.dispose();
        
        ClearTable.clearthisTable(criteriaTbl);
        ClearTable.clearthisTable(specsTbl);
        ClearTable.clearthisTable(itemsTbl);
        
       
//        for (int k = 0; k < itemsTbl.getRowCount(); k++) {
//            for (int r = 0; r < itemsTbl.getColumnCount(); r++) {
//                itemsTbl.getModel().setValueAt(null, k, r);
//            }
//        }

        int j = 0;
        try {
            java.sql.Statement prelimCriteria  = connectDB.createStatement();
            
            java.sql.Statement stmtTable111 = connectDB.createStatement();

          
            java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery("SELECT DISTINCT item_code, item_description, units, quantity, buyer_details FROM st_floated_quotations  where  quotation_no = '" + tendernotxt.getText() + "'  ");

            while (rsetTable111.next()) {
                //  java.sql.ResultSet rsetTable11xx = stmtTable11xx.executeQuery("SELECT strength FROM stockitem WHERE item_code ilike '"+rsetTable111.getObject(5)+"'");

                //  while (rsetTable11xx.next()) {
                    //deptraisingtxt.setText(rsetTable111.getObject(5).toString());

                    itemsTbl.setValueAt(rsetTable111.getObject(1), j, 0);
                    itemsTbl.setValueAt(rsetTable111.getObject(2), j, 1);
                    itemsTbl.setValueAt(rsetTable111.getObject(3), j, 2);
                    itemsTbl.setValueAt(rsetTable111.getObject(4), j, 3);

                    j++;
                    //}
            }
            
            ResultSet pcr = prelimCriteria.executeQuery("select distinct pr_item from st_preliminary_criteria  where quotation_no ='"+tendernotxt.getText()+"'");
            int k =0;
            while(pcr.next()){
            criteriaTbl.setValueAt(k+1, k, 0);
            criteriaTbl.setValueAt(DBObject.getDBObject(pcr.getObject(1), "-"), k, 1);
            
            k++;
            
            
            }
            System.out.println("Done Loading Values...");
            
            
            
            
            
            
            
            

        }
        
        
        
        
        
        catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }

        //jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT subitemname FROM subitems"));

        //
        //        adduserbtn.setEnabled(false);
        //        for (int k = 0; k < jTable1.getRowCount(); k++) {
            //            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                //                jTable1.getModel().setValueAt(null, k, r);
                //            }
            //        }
        //        this.populateTable22(this.jTextField39.getText().toString());

        /*
        * try { for (int j = 0; j < jTable1.getRowCount(); j++) { //
            * java.sql.Statement stmtTable111 = connectDB.createStatement(); if
            * (jTable1.getModel().getValueAt(j, 0) != null) {
                *
                * java.sql.Statement stmtTable11 = connectDB.createStatement();
                * java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT
                    * sum(qty) FROM stock_balance_qty WHERE item_code ilike '" +
                    * jTable1.getValueAt(j, 0).toString() + "' AND department ILIKE '" +
                    * jComboBox2.getSelectedItem() + "' AND dates <= '" +
                    * datePicker1.getDate() + "'"); java.sql.Statement stmtTable11x =
                * connectDB.createStatement(); java.sql.ResultSet rsetTable11x =
                * stmtTable11x.executeQuery("SELECT sum(qty) FROM stock_balance_qty
                    * WHERE item_code ilike '" + jTable1.getValueAt(j, 0).toString() + "'
                    * AND department ILIKE '" + jComboBox11.getSelectedItem() + "' AND
                    * dates <= '" + datePicker1.getDate() + "'");
                    *
                    *
                    * while (rsetTable11x.next()) { while (rsetTable11.next()) { double
                        * storeBal = 0; double depBal = 0; storeBal = rsetTable11.getDouble(1);
                        * depBal = rsetTable11x.getDouble(1); jTable1.setValueAt(storeBal, j,
                            * 4); jTable1.setValueAt(depBal, j, 5); } } } } } catch
    * (java.sql.SQLException sqlExec) {
        *
        * javax.swing.JOptionPane.showMessageDialog(this,
            * sqlExec.getMessage()); }
    */
    // Add your handling code here:
    }//GEN-LAST:event_requisitiontblMouseClicked

    private void closebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtnActionPerformed
        searchrequisition.dispose();  // Add your handling code here:
    }//GEN-LAST:event_closebtnActionPerformed

    private void zoomPrelcritbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomPrelcritbtnActionPerformed
        // TODO add your handling code here:
        if(criteriaTbl.getValueAt(0, 1)!=null){
           ShowPrelCriteriaDialog  mn=new ShowPrelCriteriaDialog(new javax.swing.JFrame(), true,connectDB,tendernotxt.getText(),prelcode);
        mn.setVisible(true);
   
        }
         else{
            JOptionPane.showMessageDialog(this, "Nothing to Display");
        }
        
   
    }//GEN-LAST:event_zoomPrelcritbtnActionPerformed

    private void zoomUserSpecsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomUserSpecsbtnActionPerformed
        // TODO add your handling code here:
    if(itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 1)!=null || itemsTbl.getValueAt(0, 1)!=null){ 
        String desc = itemsTbl.getValueAt(itemsTbl.getSelectedRow(), 1).toString();
        if(specsTbl.getValueAt(0, 1)!=null){
           ShowPrelCriteriaDialog  mn=new ShowPrelCriteriaDialog(new javax.swing.JFrame(), true,connectDB,desc,techcode);
        mn.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Nothing to Display");
        }
      }
    else{
            JOptionPane.showMessageDialog(this, "Nothing to Display");
        }
    }//GEN-LAST:event_zoomUserSpecsbtnActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(tendernotxt.getText().length()>0){        
        try {
             // TODO add your handling code here:

             PreparedStatement pst = connectDB.prepareStatement("SELECT DISTINCT pr_item  FROM st_preliminary_criteria WHERE default_val =TRUE;");
             
             ResultSet rset = pst.executeQuery();
             int i =0;
             while(rset.next()){
             
                 criteriaTbl.setValueAt(tendernotxt.getText()+"/00"+i+1, i, 0);
                 
                 criteriaTbl.setValueAt(rset.getObject(1), i, 1);
             
             i++;
             }
             
   
         } catch (SQLException ex) {
             Logger.getLogger(TenderAdIntfr.class.getName()).log(Level.SEVERE, null, ex);
         }
}
    else{
    JOptionPane.showMessageDialog(this, "Select Tender Number First", "Error Message", JOptionPane.ERROR_MESSAGE);

    }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ClearTable.removeSelectedRows(criteriaTbl);
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closebtn;
    private com.afrisoftech.lib.DatePicker closingdatepcker;
    private javax.swing.JTextArea commentsTxtArea;
    private javax.swing.JTable criteriaTbl;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane requisitionspnl;
    private javax.swing.JTable requisitiontbl;
    private javax.swing.JTextField requisitiontxt;
    private javax.swing.JButton searchButton4;
    private javax.swing.JDialog searchrequisition;
    private javax.swing.JTable specsTbl;
    private javax.swing.JTextField tendernotxt;
    private javax.swing.JPanel userrecordspnl;
    private javax.swing.JButton zoomPrelcritbtn;
    private javax.swing.JButton zoomUserSpecsbtn;
    // End of variables declaration//GEN-END:variables
}
