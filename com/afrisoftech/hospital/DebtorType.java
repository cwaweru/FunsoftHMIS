/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */

package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class DebtorType extends javax.swing.JInternalFrame {
    
    /** Creates new form countryintfr */
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public DebtorType(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this debtor_type_id. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSeparator1 = new javax.swing.JSeparator();
        saveDataBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        removeRowBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        debtorTypeTbl = new com.afrisoftech.dbadmin.JTable();
        deleteDataBtn = new javax.swing.JButton();
        clearFormBtn = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Debtor Types Setup");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        saveDataBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
        saveDataBtn.setMnemonic('O');
        saveDataBtn.setText("Save data");
        saveDataBtn.setToolTipText("Click here to enter data");
        saveDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(saveDataBtn, gridBagConstraints);

        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif"))); // NOI18N
        editBtn.setMnemonic('E');
        editBtn.setText("Edit");
        editBtn.setToolTipText("Click here to edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(editBtn, gridBagConstraints);

        removeRowBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        removeRowBtn.setMnemonic('r');
        removeRowBtn.setText("Remove Row");
        removeRowBtn.setToolTipText("Click here to clear fields");
        removeRowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(removeRowBtn, gridBagConstraints);

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
        closeBtn.setMnemonic('C');
        closeBtn.setText("Close");
        closeBtn.setToolTipText("Click here to close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(closeBtn, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel3, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Debtor Type Code, Description & Comments here"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        debtorTypeTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Type Code", "Debtor Type Description", "Comments"
            }
        ));
        jScrollPane1.setViewportView(debtorTypeTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        deleteDataBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        deleteDataBtn.setMnemonic('d');
        deleteDataBtn.setText("Delete");
        deleteDataBtn.setToolTipText("Click here to clear fields");
        deleteDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDataBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(deleteDataBtn, gridBagConstraints);

        clearFormBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif"))); // NOI18N
        clearFormBtn.setMnemonic('l');
        clearFormBtn.setText("Clear");
        clearFormBtn.setToolTipText("Click here to clear fields");
        clearFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(clearFormBtn, gridBagConstraints);

        setBounds(0, 0, 600, 350);
    }// </editor-fold>//GEN-END:initComponents
        
    private void clearFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBtnActionPerformed
        for (int k = 0; k < debtorTypeTbl.getRowCount(); k++ ) {
            for (int r = 0; r < debtorTypeTbl.getColumnCount(); r++ ) {
                debtorTypeTbl.getModel().setValueAt(null,k,r);
            }
        }
        saveDataBtn.setLabel("Save data");
// TODO add your handling debtor_type_id here:
    }//GEN-LAST:event_clearFormBtnActionPerformed
        
    private void deleteDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDataBtnActionPerformed
        try{
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("DELETE from debtor_type WHERE debtor_type_id = '"+debtorTypeTbl.getModel().getValueAt(debtorTypeTbl.getSelectedRow(),0).toString()+"'");
            pstmt31.executeUpdate();
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
        }catch(java.sql.SQLException sq){
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
        }
        editBtnActionPerformed(evt);
        // TODO add your handling debtor_type_id here:
    }//GEN-LAST:event_deleteDataBtnActionPerformed
    
    private void saveDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataBtnActionPerformed
        try {
            connectDB.setAutoCommit(false);
            for (int i = 0; i < debtorTypeTbl.getRowCount(); i++){
                if (debtorTypeTbl.getModel().getValueAt(i,0) != null){
                    if(saveDataBtn.getText().equalsIgnoreCase("Update")){
                        java.sql.PreparedStatement pstmt311 = connectDB.prepareStatement("UPDATE debtor_type SET debtor_type_description = '"+debtorTypeTbl.getValueAt(i,1).toString()+"', debtor_type_comment = '"+debtorTypeTbl.getValueAt(i,2)+"' WHERE debtor_type_id = '"+debtorTypeTbl.getValueAt(i,0).toString()+"'");
                        pstmt311.executeUpdate();
                    }else{
                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into debtor_type values(?,initcap(?), initcap(?))");
                        pstmt1.setObject(1,debtorTypeTbl.getValueAt(i,0));
                        pstmt1.setObject(2,debtorTypeTbl.getValueAt(i,1));
                        pstmt1.setObject(3,debtorTypeTbl.getValueAt(i,2));
                        pstmt1.executeUpdate();
                    }
                }
                
            }
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully","Comfirmation",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            saveDataBtn.setLabel("Save");
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            
            System.out.println(sq.getMessage());
            jLabel3.setForeground(java.awt.Color.red);
            jLabel3.setText("Sorry. A similar debtor type already exists");
        } // Add your handling debtor_type_id here:
    }//GEN-LAST:event_saveDataBtnActionPerformed
    
    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        for (int k = 0; k < debtorTypeTbl.getRowCount(); k++ ) {
            for (int r = 0; r < debtorTypeTbl.getColumnCount(); r++ ) {
                debtorTypeTbl.getModel().setValueAt(null,k,r);
            }
        }
        int i = 0;
        debtorTypeTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select debtor_type_id,debtor_type_description, debtor_type_comment from debtor_type ORDER BY debtor_type_description"));
        saveDataBtn.setLabel("Update");// Add your handling debtor_type_id here:
    }//GEN-LAST:event_editBtnActionPerformed
    
    private void removeRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowBtnActionPerformed
        for (int i = 0; i < debtorTypeTbl.getColumnCount(); i++){
            debtorTypeTbl.setValueAt(null,debtorTypeTbl.getSelectedRow(),i);
        }       // Add your handling debtor_type_id here:
    }//GEN-LAST:event_removeRowBtnActionPerformed
    
    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        dispose();        // Add your handling debtor_type_id here:
    }//GEN-LAST:event_closeBtnActionPerformed
                    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearFormBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTable debtorTypeTbl;
    private javax.swing.JButton deleteDataBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton removeRowBtn;
    private javax.swing.JButton saveDataBtn;
    // End of variables declaration//GEN-END:variables
    
}
