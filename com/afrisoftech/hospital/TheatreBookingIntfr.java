/*
  * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.hospital;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Francis Waweru
 */
public class TheatreBookingIntfr extends javax.swing.JInternalFrame {

    private javax.swing.JComboBox cmbox;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public TheatreBookingIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        jSplitPane1 = new javax.swing.JSplitPane();
        searchservicetxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        serviceSearchTable = new com.afrisoftech.dbadmin.JTable();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        servicesTable = new com.afrisoftech.dbadmin.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        mainserviceCMBX = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jComboBox4 = new javax.swing.JComboBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jCheckBox9 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        wardbooking = new javax.swing.JCheckBox();
        newBooking = new javax.swing.JCheckBox();
        theatreBooking = new javax.swing.JCheckBox();
        oldbooking = new javax.swing.JCheckBox();

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setTitle("service search");
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSplitPane1.setDividerLocation(50);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        searchservicetxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Service", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 153, 204)));
        searchservicetxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchservicetxtCaretUpdate(evt);
            }
        });
        jSplitPane1.setLeftComponent(searchservicetxt);

        serviceSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serviceSearchTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(serviceSearchTable);

        jSplitPane1.setRightComponent(jScrollPane3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jDialog1.getContentPane().add(jSplitPane1, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Bookings");
        setPreferredSize(new java.awt.Dimension(1500, 950));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('O');
        jButton1.setText("Save Booking");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient here"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });
        jScrollPane2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jScrollPane2KeyReleased(evt);
            }
        });

        servicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Service", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        servicesTable.setShowHorizontalLines(false);
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 2; i++) {
            column = servicesTable.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        servicesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                servicesTableMouseClicked(evt);
            }
        });
        servicesTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                servicesTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                servicesTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(servicesTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 633;
        gridBagConstraints.ipady = 39;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 6, 0, 6);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 36, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel11.setText("Patient Name ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 36, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 147;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(jTextField11, gridBagConstraints);

        jLabel21.setText("Health Information Officer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 36, 0, 0);
        jPanel1.add(jLabel21, gridBagConstraints);

        jComboBox11.setEditable(true);
        jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT UPPER(f_name||' '||l_name) FROM secure_menu_access WHERE login_name = CURRENT_USER"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(jComboBox11, gridBagConstraints);

        jLabel1.setText("Telphone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 20, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Revenue Source");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 36, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        mainserviceCMBX.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct main_service from pb_operating_parameters  order by main_service "));
        mainserviceCMBX.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 115;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(mainserviceCMBX, gridBagConstraints);

        jLabel3.setText("Appointment Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 20, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField36, gridBagConstraints);

        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 71;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 30, 0, 0);
        jPanel1.add(jPanel6, gridBagConstraints);

        jLabel4.setText("Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 20, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(jTextField2, gridBagConstraints);

        jLabel5.setText("Clinic /Theatre/ Department to Attend");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 36, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Patient Source");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 20, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jTextField3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(jTextField3, gridBagConstraints);

        jLabel8.setText("Book after [days]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 20, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jTextField4.setText("1");
        jTextField4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField4CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 90;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 30, 0, 0);
        jPanel1.add(jTextField4, gridBagConstraints);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Comments"));
        jScrollPane1.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 623;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 16, 6);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '- SELECT' UNION (SELECT Clinics FROM pb_clinics WHERE patients_per_day > 0 ORDER BY 1 asc) UNION (SELECT theatre_name  FROM hp_theatre order by theatre_name) order by 1"));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 115;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(jComboBox4, gridBagConstraints);

        buttonGroup1.add(jCheckBox3);
        jCheckBox3.setText("Normal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 8, 0, 0);
        jPanel1.add(jCheckBox3, gridBagConstraints);

        buttonGroup1.add(jCheckBox5);
        jCheckBox5.setText("Urgent");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 7, 0, 0);
        jPanel1.add(jCheckBox5, gridBagConstraints);

        jLabel10.setText("Unit No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 20, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 90;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 30, 0, 0);
        jPanel1.add(jTextField5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(datePicker1, gridBagConstraints);

        jCheckBox9.setText("Reschedule");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 10, 0, 0);
        jPanel1.add(jCheckBox9, gridBagConstraints);

        jLabel12.setText("Total Booked Patients");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 36, 0, 0);
        jPanel1.add(jLabel12, gridBagConstraints);

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 0, 0);
        jPanel1.add(jTextField7, gridBagConstraints);

        jButton2.setText("View List");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 20, 0, 0);
        jPanel1.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton6, gridBagConstraints);

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.orange, java.awt.Color.pink, null, java.awt.Color.blue));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(jCheckBox1);
        jCheckBox1.setText("Out Patient");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        buttonGroup2.add(jCheckBox2);
        jCheckBox2.setText("In Patient");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jCheckBox2, gridBagConstraints);

        buttonGroup3.add(jCheckBox4);
        jCheckBox4.setText("Search By name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jCheckBox4, gridBagConstraints);

        buttonGroup3.add(jCheckBox31);
        jCheckBox31.setText("Search By No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jCheckBox31, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Type of Booking", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 0, 51))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 0, 51));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        buttonGroup4.add(wardbooking);
        wardbooking.setText("Ward Booking");
        wardbooking.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                wardbookingItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(wardbooking, gridBagConstraints);

        buttonGroup4.add(newBooking);
        newBooking.setText("New Booking");
        newBooking.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                newBookingItemStateChanged(evt);
            }
        });
        newBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBookingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(newBooking, gridBagConstraints);

        buttonGroup4.add(theatreBooking);
        theatreBooking.setText("Theatre Booking");
        theatreBooking.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                theatreBookingItemStateChanged(evt);
            }
        });
        theatreBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatreBookingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(theatreBooking, gridBagConstraints);

        buttonGroup4.add(oldbooking);
        oldbooking.setText("Old Booking");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(oldbooking, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel3, gridBagConstraints);

        setBounds(0, 0, 1002, 488);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
     
        
        
        jTextField1.setText("");
        //  jTextField2.setText("");
//        jTextField3.setText("0.00");
        jLabel7.setText("");
        int i = 0;
        int j = 0;
        for (int k = 0; k < servicesTable.getRowCount(); k++) {
            for (int r = 0; r < servicesTable.getColumnCount(); r++) {
                servicesTable.getModel().setValueAt(null, k, r);
            }
        }
        this.jSearchDialog1.dispose();
        jTextField36.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jTextField11.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        jTextField2.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        jTextField1.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 3).toString());
        
           if(this.jCheckBox1.isSelected()==true){
          
        jTextField5.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 4).toString());
        } if(this.jCheckBox2.isSelected()==true){
            jTextField3.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 4).toString());
        }
        
        
        
               if(jCheckBox9.isSelected())
        {
        System.out.println("It is executing 1");
        
             if (this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()) {

            if (jTextField111.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, p_name as name,'' as address,telno,unit_no from pb_bookings where patient_no ILIKE '" + jTextField111.getText() + "%' OR unit_no ilike '" + jTextField111.getText() + "%'  order by p_name"));
                                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);


            }
        } else  
            if (this.jCheckBox1.isSelected() && this.jCheckBox4.isSelected()) {
                if (jTextField111.getCaretPosition() < 3) {
                    System.out.println("Nothing");
                } else {
                    jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, p_name as name,'' as address,telno,unit_no from pb_bookings p_name ILIKE '" + jTextField111.getText() + "%' order by p_name"));
                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);

                }
            }
         
              System.out.println("It is executing 2");
         try{
             
              System.out.println("It is executing 3");
             java.sql.Statement stmtf = connectDB.createStatement();
                java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT p_name, service, quantity, status, booking_date, booking_no, \n" +
"       appointment_date, patient_no, doctor_req, telno, email, clinic, \n" +
"       patient_source, booking_type, type_of_booking, unit_no\n" +
"  FROM pb_bookings where patient_no='"+jTextField36.getText()+"' and appointment_date>current_date ");
                while (rsetf.next()) {
                   // periodFrom = rsetf.getDate(1);
                   // periodTo = rsetf.getDate(2);
                    datePicker1.setDate(rsetf.getDate(7));
                    System.out.println(rsetf.getDate(7));
                    jTextField1.setText(rsetf.getString(10));
                    jTextField2.setText(rsetf.getString(11));
                    servicesTable.setValueAt(rsetf.getString(2), 0, 0);
                    servicesTable.setValueAt(rsetf.getString(3), 0, 1);
                    jComboBox4.setSelectedItem(rsetf.getString(12));
                   // buttonGroup4.setSelected(null, isIcon);
                }
         }      catch (SQLException ex) {
                    Logger.getLogger(TheatreBookingIntfr.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog1.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");
        if (jCheckBox1.isSelected()) {
            // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
            java.awt.Point point = this.jTextField36.getLocationOnScreen();

            jSearchDialog1.setSize(400, 200);

            jSearchDialog1.setLocation(point);
            jSearchDialog1.setVisible(true);
        } else if (jCheckBox2.isSelected()) {
            jSearchDialog1.dispose();
            java.awt.Point point = this.jTextField36.getLocationOnScreen();

            jSearchDialog1.setSize(400, 200);

            jSearchDialog1.setLocation(point);
            jSearchDialog1.setVisible(true);
        }

    }
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
   
        
        
        
        
        if (this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()) {

            if (jTextField111.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,address,tel_no,patient_race as unit_no from hp_patient_register where patient_no ILIKE '" + jTextField111.getText() + "%' OR patient_race ilike '" + jTextField111.getText() + "%'  order by second_name"));
              
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);


            }
        } else {
            if (this.jCheckBox1.isSelected() && this.jCheckBox4.isSelected()) {
                if (jTextField111.getCaretPosition() < 3) {
                    System.out.println("Nothing");
                } else {
                    jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, address,tel_no,patient_race as unit_no  from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '" + jTextField111.getText() + "%' order by second_name"));
                 
                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);



                }
            }
        }
        // }else{
        if ((this.jCheckBox2.isSelected() ) && this.jCheckBox31.isSelected()) {

          
            if (jTextField111.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                System.out.println("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,address,tel_no," +
"(SELECT ward  FROM hp_admission WHERE patient_no ILIKE '%" + jTextField111.getText() + "%' and discharge=false order by date_admitted desc) as ward" +
" from hp_inpatient_register where patient_no ILIKE '%" + jTextField111.getText() + "%' order by second_name");
                
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                        + "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,address,tel_no," +
"(SELECT ward  FROM hp_admission WHERE patient_no ILIKE '%" + jTextField111.getText() + "%' and discharge=false order by date_admitted desc limit 1) as ward" +
" from hp_inpatient_register where patient_no ILIKE '%" + jTextField111.getText() + "%' order by second_name"));

              
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);


            }
        } else  
            if ((this.jCheckBox2.isSelected() ) && this.jCheckBox4.isSelected()) {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                        + "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, address,tel_no ,\n" +
"(SELECT ward  FROM hp_admission WHERE patient_name ILIKE (second_name||' '||first_name||' '||last_name)  and discharge=false order by date_admitted desc) as ward\n" +
"FROM hp_inpatient_register WHERE second_name||' '||first_name||' '||last_name ILIKE '%" + jTextField111.getText() + "%' ORDER BY second_name"));

                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);


            }
          
        
        
        
       
        
        
        
        
        
        
        
             if(jCheckBox9.isSelected())
        {
        
        
             if (this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()) {

            if (jTextField111.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, p_name as name,'' as address,telno,unit_no from pb_bookings where patient_no ILIKE '" + jTextField111.getText() + "%' OR unit_no ilike '" + jTextField111.getText() + "%' and appointment_date>current_date  order by p_name"));
                                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);


            }
        } else {
            if (this.jCheckBox1.isSelected() && this.jCheckBox4.isSelected()) {
                if (jTextField111.getCaretPosition() < 3) {
                    System.out.println("Nothing");
                } else {
                    jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, p_name as name,'' as address,telno,unit_no from pb_bookings p_name ILIKE '" + jTextField111.getText() + "%' order by p_name"));
                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);

                }
            }
        }
        }
        
             
        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        int rows2Delete = servicesTable.getSelectedRowCount();

        int[] selectedRows = servicesTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {



                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) servicesTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }



            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) servicesTable.getModel();

                defTableModel.removeRow(servicesTable.getSelectedRow());
            }
        }
        
        
        
        
        
   
        
        

        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

     
    
    private void servicesTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servicesTableKeyReleased
        if (servicesTable.getModel().getValueAt(servicesTable.getSelectedRow(), 1) != null) {
            try {
                float floatCol2 = java.lang.Float.parseFloat(servicesTable.getValueAt(servicesTable.getSelectedRow(), 1).toString());

               // float floatCol3 = java.lang.Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());

                float resVal = floatCol2;

                java.lang.Float resFloat = new java.lang.Float(resVal);

               /* if (jTable1.getSelectedColumn() == 1) {

                    jTable1.setValueAt(resFloat, jTable1.getSelectedRow(), 3);

                    /*                double Total = java.lang.Double.parseDouble(jTextField3.getText().toString());
                    double tableSum = java.lang.Double.parseDouble(resFloat.toString());
                    double totalSum = Total + tableSum;
                    jTextField3.setText(""+totalSum+"");
                     /
                }*/
                
                
               java.sql.Statement pstmt1 = connectDB.createStatement();
                    java.sql.ResultSet rs1 = pstmt1.executeQuery("select main_service FROM pb_operating_parameters WHERE service_type ilike '"+servicesTable.getValueAt(servicesTable.getSelectedRow(), 0)+"'");
                while (rs1.next()){
                //jTextField4.setText(rs.getObject(1).toString());
               mainserviceCMBX.setSelectedItem(rs1.getObject(1).toString());
                }
            }
            // Add your handling code here:
            catch (SQLException ex) {
                Logger.getLogger(TheatreBookingIntfr.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }


        // Add your handling code here:
    }//GEN-LAST:event_servicesTableKeyReleased
  
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
   
                                        

    
//    
//    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
//       
//        java.sql.Statement pstmt1;
//       
////            pstmt1 = connectDB.createStatement();
////        
////                java.sql.ResultSet rs1 = pstmt1.executeQuery("select  FROM pb_operating_parameters WHERE service_type ilike '"+jTable1.getValueAt(jTable1.getSelectedRow(), 0)+"'");
////            while (rs1.next()){
////            //jTextField4.setText(rs.getObject(1).toString());
////           jComboBox1.setSelectedItem(rs1.getObject(1).toString());
////            }
//        
//        
//        
//        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
//        int i = jTable1.getSelectedRow();
//
//        if (selectedGuaran != null) {
//
//            try {
//                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
//                java.sql.Statement pstmt = connectDB.createStatement();
//                java.sql.ResultSet rs = pstmt.executeQuery("select rate,main_service from pb_operating_parameters where service_type = '" + selectedGuaran + "'");
//
//                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
//                while (rs.next()) {
//                    //jTextField4.setText(rs.getObject(1).toString());
//                    jTable1.setValueAt(rs.getObject(1), i, 1);
//                    jComboBox1.setSelectedItem(rs.getObject(2).toString());
//                    //jTable1.setValueAt(rs.getObject(2),i,4);
//                    
//                    
//                }
//                
//                
//                
//            } catch (java.sql.SQLException sqlex) {
//                System.out.println(sqlex.getMessage());
//            }
//
//        }
//
//    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        // jTextField2.setText("");
//        jTextField3.setText("");
        for (int k = 0; k < servicesTable.getRowCount(); k++) {
            for (int r = 0; r < servicesTable.getColumnCount(); r++) {
                servicesTable.getModel().setValueAt(null, k, r);
            }
        }

        // this.jComboBox131.setSelectedItem(null);
        //   jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        boolean status = false;
        String bookingNO=null;
        try{
    java.sql.Statement ps114 = connectDB.createStatement();
                java.sql.ResultSet rst114 = ps114.executeQuery("SELECT confirmation,booking_no FROM pb_bookings WHERE "
                        + "patient_no='"+jTextField36.getText()+"'");
                while (rst114.next()) {
                    status = rst114.getBoolean(1);
                    bookingNO= rst114.getString(2);
                }
        }
        catch(Exception esd){
            System.out.println("the error is "+esd);
        }
        if(status==false){
        //else javax.swing.JOptionPane.showMessageDialog(this, " patient Name", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());

        String billNo = null;

        String transNo = null;

        int patients = 0;
        int bookings = 0;

        String user = null;
        String bookingType = null;
        String bookingstatus = null;
        
        try {
            connectDB.setAutoCommit(false);
          

            if (jCheckBox3.isSelected()) {
                bookingType = "Normal";
            } else {
                bookingType = "Urgent";
            }
           
            
            if (newBooking.isSelected()) {
                bookingstatus = "New Booking";
            } else
                if (oldbooking.isSelected()) {
                bookingstatus = "Old Booking";
            }
                 else
                if (theatreBooking.isSelected()) {
                bookingstatus = "Theatre Booking";
            }
           
             else
                    if (wardbooking.isSelected())
                {
                bookingstatus = "Ward Booking";
            }
if(jTextField36.getText().equalsIgnoreCase("") || jTextField11.getText().equalsIgnoreCase("") || jTextField5.getText().equalsIgnoreCase("") )
            {
                 javax.swing.JOptionPane.showMessageDialog(this, "You need to enter the patient Information", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }



else   

{    
            if(jButton1.getText().equalsIgnoreCase("Update Booking"))
             {
                
                 java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE pb_bookings set appointment_date='"+datePicker1.getDate()+"' where patient_no='"+jTextField36.getText()+"' and appointment_date>current_date ");
                   System.out.println(datePicker1.getDate());
                   System.out.println(jTextField36.getText());
                    
                    pstmt1.executeUpdate();
                    
                }
                 
                 
             
             
             else
             {

            if (jCheckBox1.isSelected()) {

                java.sql.Statement ps114 = connectDB.createStatement();
                java.sql.ResultSet rst114 = ps114.executeQuery("SELECT COUNT(patient_no) FROM pb_bookings WHERE "
                        + "clinic ILIKE '" + jComboBox4.getSelectedItem() + "' AND appointment_date = '" + datePicker1.getDate() + "' AND patient_source = 'OP'");
                while (rst114.next()) {
                    patients = rst114.getInt(1);
                }

                java.sql.Statement ps1141 = connectDB.createStatement();
                java.sql.ResultSet rst1141 = ps1141.executeQuery("SELECT patients_per_day FROM pb_clinics WHERE clinics ILIKE '" + jComboBox4.getSelectedItem() + "'");
                while (rst1141.next()) {
                    bookings = rst1141.getInt(1);
                }
            } else {
                if (jCheckBox2.isSelected()) {
                    java.sql.Statement ps114 = connectDB.createStatement();
                    java.sql.ResultSet rst114 = ps114.executeQuery("SELECT COUNT(patient_no) FROM pb_bookings WHERE "
                            + "clinic ILIKE '" + jComboBox4.getSelectedItem() + "' AND appointment_date = '" + datePicker1.getDate() + "'  AND patient_source = 'IP'");
                    while (rst114.next()) {
                        patients = rst114.getInt(1);
                    }
                    java.sql.Statement ps1141 = connectDB.createStatement();
                    java.sql.ResultSet rst1141 = ps1141.executeQuery("SELECT ip_number FROM pb_clinics WHERE clinics ILIKE '" + jComboBox4.getSelectedItem() + "'");
                    while (rst1141.next()) {
                        bookings = rst1141.getInt(1);
                    }
                } else {
                    if (newBooking.isSelected()) {
                        java.sql.Statement ps114 = connectDB.createStatement();
                        java.sql.ResultSet rst114 = ps114.executeQuery("SELECT COUNT(patient_no) FROM pb_bookings WHERE "
                                + "clinic ILIKE '" + jComboBox4.getSelectedItem() + "' AND appointment_date = '" + datePicker1.getDate() + "'  AND patient_source = 'NP'");
                        while (rst114.next()) {
                            patients = rst114.getInt(1);
                        }
                        java.sql.Statement ps1141 = connectDB.createStatement();
                        java.sql.ResultSet rst1141 = ps1141.executeQuery("SELECT discharged_no FROM pb_clinics WHERE clinics ILIKE '" + jComboBox4.getSelectedItem() + "'");
                        while (rst1141.next()) {
                            bookings = rst1141.getInt(1);
                        }
                    }
                }
            }
          {
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('booking_no_seq')");
                while (rst11.next()) {
                    // rst11.getObject(1).toString();
                    billNo = rst11.getObject(1).toString();
                }
                java.sql.Statement ps11x = connectDB.createStatement();
                java.sql.ResultSet rst11x = ps11x.executeQuery("select DISTINCT UPPER(f_name||' '||l_name) FROM secure_menu_access WHERE login_name = CURRENT_USER ");
                while (rst11x.next()) {
                    user = rst11x.getObject(1).toString();
                }
                if(bookingstatus.length()>0){
                for (int i = 0; i < servicesTable.getRowCount(); i++) {
                    if (servicesTable.getModel().getValueAt(i, 0) != null) {

                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO pb_bookings VALUES(initcap(?),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){

                        pstmt.setString(1, jTextField11.getText());
                        pstmt.setObject(2, servicesTable.getValueAt(i, 0).toString());
                        pstmt.setDouble(3, java.lang.Double.valueOf(servicesTable.getValueAt(i, 1).toString()));
                        pstmt.setString(4, "Booked");
                        pstmt.setTimestamp(5, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmt.setString(6, billNo);
                        pstmt.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                        pstmt.setString(8, jTextField36.getText());
                        pstmt.setString(9, user);
                        pstmt.setString(10, jTextField1.getText());
                        pstmt.setObject(11, jTextField2.getText());
                        pstmt.setObject(12, jComboBox4.getSelectedItem());
                        pstmt.setObject(13, jTextField3.getText());
                        pstmt.setObject(14, bookingType);
                        pstmt.setObject(15, bookingstatus);
                        pstmt.setObject(16,jTextField5.getText() );
                        pstmt.executeUpdate();
                    }
                }
                }
            }               
             }

                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);


                jLabel7.setForeground(java.awt.Color.blue);
                jLabel7.setText("");
                jTextPane1.setText("");
                jTextField36.setText("");
                jTextField1.setText("");
                jTextField11.setText("");
                
                 for (int k = 0; k < servicesTable.getRowCount(); k++) {
            for (int r = 0; r < servicesTable.getColumnCount(); r++) {
                servicesTable.getModel().setValueAt(null, k, r);
            }
        }
}     // this.getContentPane().removeAll();
                // this.initComponents();
            
            //  jComboBox2.setSelectedItem(null);
        } catch (java.sql.SQLException sq) {

            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        }
        else{
             javax.swing.JOptionPane.showMessageDialog(this,  "The Patient NO : "+jTextField36.getText()+" has an active Booking No "+bookingNO+"",null, javax.swing.JOptionPane.ERROR_MESSAGE);
        } 


// Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField4CaretUpdate
        if (this.jTextField4.getText().equalsIgnoreCase("")) {
        } else {
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            int age = Integer.parseInt(jTextField4.getText());
            if (jTextField4.getText().toCharArray().length > 0) {
                for (int i = 0; i < age; i++) {
                    calendar.roll(java.util.Calendar.DAY_OF_YEAR, true);
                }
                System.out.println(calendar.getTime());
                if (calendar.getTime().toString().startsWith("S")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "The appointment date falls on WEEKEND please choose another Date");
//                    jTextField4.setText("0");
                } else {
                    this.datePicker1.setDate(calendar.getTime());
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "You MUST provide Days as a number.");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4CaretUpdate

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jTextField3.setText("OP");
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jTextField3.setText("IP");
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void newBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBookingActionPerformed
        jTextField3.setText("NP");
        // TODO add your handling code here:
    }//GEN-LAST:event_newBookingActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
if(jCheckBox9.isSelected()) 
{
    jButton1.setText("Update Booking");
}

else 
   jButton1.setText("Save Booking");

    // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void servicesTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servicesTableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicesTableKeyPressed

    private void jScrollPane2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2KeyReleased

    private void theatreBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatreBookingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_theatreBookingActionPerformed

    private void theatreBookingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_theatreBookingItemStateChanged
      if(theatreBooking.isSelected()==true){
jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '0SELECT' UNION (SELECT theatre_name  FROM hp_theatre order by theatre_name) order by 1"));
      }
      
    }//GEN-LAST:event_theatreBookingItemStateChanged

    private void wardbookingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_wardbookingItemStateChanged
        if(wardbooking.isSelected()==true){
        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, ""
               + "SELECT '0SELECT' UNION (select distinct ward_name  from hp_wards ORDER BY 1 asc)  order by 1"));
        }
    }//GEN-LAST:event_wardbookingItemStateChanged

    private void newBookingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newBookingItemStateChanged
     if(newBooking.isSelected()==true){
        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '0SELECT' UNION (SELECT Clinics FROM pb_clinics WHERE patients_per_day > 0 ORDER BY 1 asc)  order by 1"));
     }
    }//GEN-LAST:event_newBookingItemStateChanged

    private void searchservicetxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchservicetxtCaretUpdate
        if(searchservicetxt.getText().length()>3){  
            this.serviceSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,""
            + "select distinct service_type,rate  from pb_operating_parameters where  service_type ilike '%"+searchservicetxt.getText().toString().trim()+"%'  "));
    }
    }//GEN-LAST:event_searchservicetxtCaretUpdate

    private void serviceSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serviceSearchTableMouseClicked
         servicesTable.setValueAt(serviceSearchTable.getValueAt(serviceSearchTable.getSelectedRow(), 0), servicesTable.getSelectedRow(), 0);
         servicesTable.setValueAt(serviceSearchTable.getValueAt(serviceSearchTable.getSelectedRow(), 1), servicesTable.getSelectedRow(), 1);
         jDialog1.dispose();
    }//GEN-LAST:event_serviceSearchTableMouseClicked

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
       
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void servicesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_servicesTableMouseClicked
       if ((servicesTable.getSelectedColumn() == 0) ) {
            System.out.println("Showing dialog");
        java.awt.Point point = mainserviceCMBX.getLocationOnScreen();
        jDialog1.setSize(400,200);
        jDialog1.setLocation(point);
        jDialog1.setVisible(true);
        }
    }//GEN-LAST:event_servicesTableMouseClicked

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
     
        try{
    java.sql.Statement ps114 = connectDB.createStatement();
                java.sql.ResultSet rst114 = ps114.executeQuery("select count(distinct patient_no) from pb_bookings where appointment_date='"+datePicker1.getDate()+"' and clinic='"+jComboBox4.getSelectedItem().toString()+"'\n" +
"");
                while (rst114.next()) {
                    jTextField7.setText(String.valueOf( rst114.getInt(1)));
                    
                }
        }
        catch(Exception esd){
            System.out.println("the error is "+esd);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
com.afrisoftech.reports.BookingsListAttPdf policy = new com.afrisoftech.reports.BookingsListAttPdf();

                policy.BookingsListAttPdf(connectDB, this.datePicker1.getDate(), this.datePicker1.getDate(), jComboBox4.getSelectedItem().toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JComboBox mainserviceCMBX;
    private javax.swing.JCheckBox newBooking;
    private javax.swing.JCheckBox oldbooking;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchservicetxt;
    private javax.swing.JTable serviceSearchTable;
    private javax.swing.JTable servicesTable;
    private javax.swing.JCheckBox theatreBooking;
    private javax.swing.JCheckBox wardbooking;
    // End of variables declaration//GEN-END:variables
}
