/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospital;

import java.beans.PropertyChangeEvent;
import java.sql.SQLException;
import org.openide.util.Exceptions;

/**
 *
 * @author Charles
 */
public class NameAdjustmentIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form NameAdjustmentIntfr
     */
    java.sql.Connection connectDB = null;

    public NameAdjustmentIntfr(java.sql.Connection connDB) {
        connectDB = connDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nameSearchDialog = new javax.swing.JDialog();
        nameSearchPanel = new javax.swing.JPanel();
        nameSearchTxt = new javax.swing.JTextField();
        nameSearchScrollPane = new javax.swing.JScrollPane();
        patientSearchTable = new com.afrisoftech.dbadmin.JTable();
        closeButton = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        headerPanel = new javax.swing.JPanel();
        patientSearchPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        patientNamesTxt = new javax.swing.JTextField();
        patientUnitNumberTxt = new javax.swing.JTextField();
        reasonScrollPane = new javax.swing.JScrollPane();
        reasonforChangeTxt = new javax.swing.JTextArea();
        opdChkbx = new javax.swing.JCheckBox();
        ipdChkbx = new javax.swing.JCheckBox();
        noSearchChkbx = new javax.swing.JCheckBox();
        nameSearchChkbx = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        newFirstNameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        newMiddleNameTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        newSurNameTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        intPatientNoTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        visitTxt = new javax.swing.JLabel();
        commandPanel = new javax.swing.JPanel();
        spacerLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        closeFormButton = new javax.swing.JButton();
        changesNamesListingPane = new javax.swing.JPanel();
        startDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JXTable();
        commandPanel1 = new javax.swing.JPanel();
        spacerLabel1 = new javax.swing.JLabel();
        saveButton1 = new javax.swing.JButton();
        clearButton1 = new javax.swing.JButton();
        closeFormButton1 = new javax.swing.JButton();

        nameSearchDialog.setModal(true);
        nameSearchDialog.setUndecorated(true);
        nameSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        nameSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nameSearchPanel.setLayout(new java.awt.GridBagLayout());

        nameSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                nameSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        nameSearchPanel.add(nameSearchTxt, gridBagConstraints);

        patientSearchTable.setToolTipText(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.patientSearchTable.toolTipText")); // NOI18N
        patientSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = patientSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        patientSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientSearchTableMouseClicked(evt);
            }
        });
        nameSearchScrollPane.setViewportView(patientSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        nameSearchPanel.add(nameSearchScrollPane, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(closeButton, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.closeButton.text")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        nameSearchPanel.add(closeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        nameSearchDialog.getContentPane().add(nameSearchPanel, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.title")); // NOI18N
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        headerPanel.setLayout(new java.awt.GridBagLayout());

        patientSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        patientSearchPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        patientSearchPanel.add(jLabel1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(jLabel2, gridBagConstraints);

        patientNamesTxt.setEditable(false);
        patientNamesTxt.setText(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.patientNamesTxt.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(patientNamesTxt, gridBagConstraints);

        patientUnitNumberTxt.setEditable(false);
        patientUnitNumberTxt.setText(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.patientUnitNumberTxt.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(patientUnitNumberTxt, gridBagConstraints);

        reasonScrollPane.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.reasonScrollPane.viewportBorder.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 255))); // NOI18N

        reasonforChangeTxt.setColumns(20);
        reasonforChangeTxt.setRows(5);
        reasonScrollPane.setViewportView(reasonforChangeTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        patientSearchPanel.add(reasonScrollPane, gridBagConstraints);

        buttonGroup2.add(opdChkbx);
        opdChkbx.setForeground(new java.awt.Color(51, 51, 255));
        opdChkbx.setMnemonic('o');
        org.openide.awt.Mnemonics.setLocalizedText(opdChkbx, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.opdChkbx.text")); // NOI18N
        opdChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(opdChkbx, gridBagConstraints);

        buttonGroup2.add(ipdChkbx);
        ipdChkbx.setForeground(new java.awt.Color(255, 0, 51));
        ipdChkbx.setMnemonic('i');
        ipdChkbx.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(ipdChkbx, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.ipdChkbx.text")); // NOI18N
        ipdChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(ipdChkbx, gridBagConstraints);

        buttonGroup3.add(noSearchChkbx);
        noSearchChkbx.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(noSearchChkbx, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.noSearchChkbx.text")); // NOI18N
        noSearchChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(noSearchChkbx, gridBagConstraints);

        buttonGroup3.add(nameSearchChkbx);
        org.openide.awt.Mnemonics.setLocalizedText(nameSearchChkbx, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.nameSearchChkbx.text")); // NOI18N
        nameSearchChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(nameSearchChkbx, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.jLabel4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(jLabel4, gridBagConstraints);

        newFirstNameTxt.setText(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.newFirstNameTxt.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(newFirstNameTxt, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.jLabel5.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(jLabel5, gridBagConstraints);

        newMiddleNameTxt.setText(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.newMiddleNameTxt.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(newMiddleNameTxt, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.jLabel6.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(jLabel6, gridBagConstraints);

        newSurNameTxt.setText(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.newSurNameTxt.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(newSurNameTxt, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.jLabel7.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(jLabel7, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        intPatientNoTxt.setEditable(false);
        intPatientNoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intPatientNoTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(intPatientNoTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.searchButton.toolTipText")); // NOI18N
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(jPanel41, gridBagConstraints);

        visitTxt.setForeground(new java.awt.Color(102, 102, 255));
        org.openide.awt.Mnemonics.setLocalizedText(visitTxt, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.visitTxt.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(visitTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        headerPanel.add(patientSearchPanel, gridBagConstraints);

        commandPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(spacerLabel, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.spacerLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 19, 0, 0);
        commandPanel.add(spacerLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(saveButton, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.saveButton.text")); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commandPanel.add(saveButton, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(clearButton, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.clearButton.text")); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commandPanel.add(clearButton, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(closeFormButton, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.closeFormButton.text")); // NOI18N
        closeFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commandPanel.add(closeFormButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(commandPanel, gridBagConstraints);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.headerPanel.TabConstraints.tabTitle"), headerPanel); // NOI18N

        changesNamesListingPane.setLayout(new java.awt.GridBagLayout());

        startDatePicker.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.startDatePicker.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 255))); // NOI18N

        this.startDatePicker.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                changeDate();
            }
        });
        startDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                startDatePickerPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        changesNamesListingPane.add(startDatePicker, gridBagConstraints);

        endDatePicker.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.endDatePicker.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 255))); // NOI18N

        this.endDatePicker.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                changeDate();
            }
        });
        endDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                endDatePickerPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        changesNamesListingPane.add(endDatePicker, gridBagConstraints);

        jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, current_patient_name, new_patient_name, reason_for_change, timestamp_changed, user_name FROM patient_name_changes  WHERE timestamp_changed::date BETWEEN '"+startDatePicker.getDate()+"' AND '"+endDatePicker.getDate()+"' ORDER BY 3"));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        changesNamesListingPane.add(jScrollPane1, gridBagConstraints);

        commandPanel1.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(spacerLabel1, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.spacerLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 19, 0, 0);
        commandPanel1.add(spacerLabel1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(saveButton1, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.saveButton1.text")); // NOI18N
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commandPanel1.add(saveButton1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(clearButton1, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.clearButton1.text")); // NOI18N
        clearButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commandPanel1.add(clearButton1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(closeFormButton1, org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.closeFormButton1.text")); // NOI18N
        closeFormButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commandPanel1.add(closeFormButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        changesNamesListingPane.add(commandPanel1, gridBagConstraints);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(NameAdjustmentIntfr.class, "NameAdjustmentIntfr.changesNamesListingPane.TabConstraints.tabTitle"), changesNamesListingPane); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_nameSearchTxtCaretUpdate

        if (this.opdChkbx.isSelected() && this.noSearchChkbx.isSelected()) {

            if (nameSearchTxt.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, patient_race as unit_number from hp_patient_register where patient_no ILIKE '" + nameSearchTxt.getText() + "%'  or patient_race ilike '%" + nameSearchTxt.getText() + "%' and last_visit > current_date - 10 order by second_name"));

                patientSearchTable.setShowHorizontalLines(false);
                nameSearchScrollPane.setViewportView(patientSearchTable);

            }
        } else {
            if (this.opdChkbx.isSelected() && this.nameSearchChkbx.isSelected()) {
                if (nameSearchTxt.getCaretPosition() < 3) {
                    System.out.println("Nothing");
                } else {
                    patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, patient_race as unit_number from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '" + nameSearchTxt.getText() + "%'  or patient_race ilike '%" + nameSearchTxt.getText() + "%' and last_visit > current_date - 10 order by second_name"));

                    patientSearchTable.setShowHorizontalLines(false);
                    nameSearchScrollPane.setViewportView(patientSearchTable);

                }
            }
        }

        if (this.ipdChkbx.isSelected() && this.noSearchChkbx.isSelected()) {

            if (nameSearchTxt.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, name, unit_number from inpatient_list where patient_no ILIKE '" + nameSearchTxt.getText() + "%' or unit_number ilike '%" + nameSearchTxt.getText() + "%' order by name"));

                patientSearchTable.setShowHorizontalLines(false);
                nameSearchScrollPane.setViewportView(patientSearchTable);

            }
        } else {
            if (this.ipdChkbx.isSelected() && this.nameSearchChkbx.isSelected()) {
                patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, name, unit_number from inpatient_list where name ILIKE '" + nameSearchTxt.getText() + "%' or unit_number ilike '%" + nameSearchTxt.getText() + "%' order by name"));

                patientSearchTable.setShowHorizontalLines(false);
                nameSearchScrollPane.setViewportView(patientSearchTable);

            }
        }       // Add your handling code here:
    }//GEN-LAST:event_nameSearchTxtCaretUpdate

    private void patientSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientSearchTableMouseClicked
        intPatientNoTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 0).toString());
        patientUnitNumberTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 2).toString());
        patientNamesTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 1).toString());
        this.nameSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_patientSearchTableMouseClicked

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.nameSearchDialog.dispose();       // Add your handling code here:
    }//GEN-LAST:event_closeButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearForm();
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void closeFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormButtonActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_closeFormButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void intPatientNoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intPatientNoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intPatientNoTxtActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (!intPatientNoTxt.getText().isEmpty() && !patientNamesTxt.getText().isEmpty()) {
            if (!newFirstNameTxt.getText().isEmpty() && !newMiddleNameTxt.getText().isEmpty() && !newSurNameTxt.getText().isEmpty() && reasonforChangeTxt.getText().length() > 10) {
                try {
                    java.sql.PreparedStatement pstmtNameChange = connectDB.prepareStatement("UPDATE hp_patient_register SET first_name = TRIM(INITCAP(?)), second_name = TRIM(INITCAP(?)), last_name = TRIM(INITCAP(?)) WHERE patient_no = ?");
                    pstmtNameChange.setString(1, newFirstNameTxt.getText());
                    pstmtNameChange.setString(2, newMiddleNameTxt.getText());
                    pstmtNameChange.setString(3, newSurNameTxt.getText());
                    pstmtNameChange.setString(4, intPatientNoTxt.getText());
                    pstmtNameChange.executeUpdate();
                    java.sql.PreparedStatement pstmtNameChange1 = connectDB.prepareStatement("UPDATE hp_patient_visit SET name = TRIM(INITCAP(?)) WHERE patient_no = ?");
                    pstmtNameChange1.setString(1, newFirstNameTxt.getText() + " " + newMiddleNameTxt.getText() + " " + newSurNameTxt.getText());
                    pstmtNameChange1.setString(2, intPatientNoTxt.getText());
                    pstmtNameChange1.executeUpdate();
                    java.sql.PreparedStatement pstmtNameChange2 = connectDB.prepareStatement("UPDATE hp_admission SET patient_name = TRIM(INITCAP(?)) WHERE patient_no = ?");
                    pstmtNameChange2.setString(1, newFirstNameTxt.getText() + " " + newMiddleNameTxt.getText() + " " + newSurNameTxt.getText());
                    pstmtNameChange2.setString(2, intPatientNoTxt.getText());
                    pstmtNameChange2.executeUpdate();
                    java.sql.PreparedStatement pstmtNameChange4 = connectDB.prepareStatement("UPDATE hp_mortuary SET patient_name = TRIM(INITCAP(?)) WHERE patient_no = ?");
                    pstmtNameChange4.setString(1, newFirstNameTxt.getText() + " " + newMiddleNameTxt.getText() + " " + newSurNameTxt.getText());
                    pstmtNameChange4.setString(2, intPatientNoTxt.getText());
                    pstmtNameChange4.executeUpdate();
                    java.sql.PreparedStatement pstmtNameChange5 = connectDB.prepareStatement("UPDATE hp_inpatient_register SET first_name = TRIM(INITCAP(?)), second_name = TRIM(INITCAP(?)), last_name = TRIM(INITCAP(?)) WHERE patient_no = ?");
                    pstmtNameChange5.setString(1, newFirstNameTxt.getText());
                    pstmtNameChange5.setString(2, newMiddleNameTxt.getText());
                    pstmtNameChange5.setString(3, newSurNameTxt.getText());
                    pstmtNameChange5.setString(4, intPatientNoTxt.getText());
                    pstmtNameChange5.executeUpdate();
                    java.sql.PreparedStatement pstmtNameChange6 = connectDB.prepareStatement("UPDATE hp_pharmacy SET patient_name = TRIM(INITCAP(?)) WHERE patient_no = ?");
                    pstmtNameChange6.setString(1, newFirstNameTxt.getText() + " " + newMiddleNameTxt.getText() + " " + newSurNameTxt.getText());
                    pstmtNameChange6.setString(2, intPatientNoTxt.getText());
                    pstmtNameChange6.executeUpdate();
                    java.sql.PreparedStatement pstmtNameChange7 = connectDB.prepareStatement("UPDATE hp_patient_billing SET patient_name = TRIM(INITCAP(?)) WHERE patient_no = ?");
                    pstmtNameChange7.setString(1, newFirstNameTxt.getText() + " " + newMiddleNameTxt.getText() + " " + newSurNameTxt.getText());
                    pstmtNameChange7.setString(2, intPatientNoTxt.getText());
                    pstmtNameChange7.executeUpdate();

                    java.sql.PreparedStatement pstmtNameChangeAudit = connectDB.prepareStatement("INSERT INTO patient_name_changes(patient_no, current_patient_name,"
                            + " new_patient_name, reason_for_change)    VALUES (?, ?, TRIM(INITCAP(?)), ?)");
                    pstmtNameChangeAudit.setString(1, intPatientNoTxt.getText());
                    pstmtNameChangeAudit.setString(2, patientNamesTxt.getText());
                    pstmtNameChangeAudit.setString(3, newFirstNameTxt.getText() + " " + newMiddleNameTxt.getText() + " " + newSurNameTxt.getText());
                    pstmtNameChangeAudit.setString(4, reasonforChangeTxt.getText());
                    pstmtNameChangeAudit.execute();
                    java.sql.PreparedStatement pstmtNameChange8 = connectDB.prepareStatement("UPDATE ac_debtors SET item = TRIM(INITCAP(?)) WHERE admission_no = ?");
                    pstmtNameChange8.setString(1, newFirstNameTxt.getText() + " " + newMiddleNameTxt.getText() + " " + newSurNameTxt.getText());
                    pstmtNameChange8.setString(2, intPatientNoTxt.getText());
                    pstmtNameChange8.executeUpdate();
                    clearForm();
                    javax.swing.JOptionPane.showMessageDialog(this, "Patient names update successfully");
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                    javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                }

            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "You MUST set values for the preferred patient names");

            }

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "You MUST retrieve a patient file in order to continue");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, current_patient_name, new_patient_name, reason_for_change, timestamp_changed, user_name FROM patient_name_changes  WHERE timestamp_changed::date BETWEEN '" + startDatePicker.getDate() + "' AND '" + endDatePicker.getDate() + "' ORDER BY 3");        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton1ActionPerformed

    private void clearButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButton1ActionPerformed

    private void closeFormButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormButton1ActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_closeFormButton1ActionPerformed

    private void startDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_startDatePickerPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_startDatePickerPropertyChange

    private void endDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_endDatePickerPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_endDatePickerPropertyChange
    private void searchButtonClicked2() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.intPatientNoTxt.getLocationOnScreen();

        nameSearchDialog.setSize(700, 200);

        nameSearchDialog.setLocation(point);

        nameSearchDialog.setVisible(true);

    }

    private void changeDate() {
        com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, current_patient_name, new_patient_name, reason_for_change, timestamp_changed, user_name FROM patient_name_changes  WHERE timestamp_changed::date BETWEEN '"+startDatePicker.getDate()+"' AND '"+endDatePicker.getDate()+"' ORDER BY 3");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JPanel changesNamesListingPane;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clearButton1;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton closeFormButton;
    private javax.swing.JButton closeFormButton1;
    private javax.swing.JPanel commandPanel;
    private javax.swing.JPanel commandPanel1;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JTextField intPatientNoTxt;
    private javax.swing.JCheckBox ipdChkbx;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JCheckBox nameSearchChkbx;
    private javax.swing.JDialog nameSearchDialog;
    private javax.swing.JPanel nameSearchPanel;
    private javax.swing.JScrollPane nameSearchScrollPane;
    private javax.swing.JTextField nameSearchTxt;
    private javax.swing.JTextField newFirstNameTxt;
    private javax.swing.JTextField newMiddleNameTxt;
    private javax.swing.JTextField newSurNameTxt;
    private javax.swing.JCheckBox noSearchChkbx;
    private javax.swing.JCheckBox opdChkbx;
    private javax.swing.JTextField patientNamesTxt;
    private javax.swing.JPanel patientSearchPanel;
    private javax.swing.JTable patientSearchTable;
    private javax.swing.JTextField patientUnitNumberTxt;
    private javax.swing.JScrollPane reasonScrollPane;
    private javax.swing.JTextArea reasonforChangeTxt;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveButton1;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel spacerLabel;
    private javax.swing.JLabel spacerLabel1;
    private com.afrisoftech.lib.DatePicker startDatePicker;
    private javax.swing.JLabel visitTxt;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
       
        this.patientNamesTxt.setText(null);
        this.intPatientNoTxt.setText(null);
        this.nameSearchTxt.setText(null);
        this.newFirstNameTxt.setText(null);
        this.newMiddleNameTxt.setText(null);
        this.newSurNameTxt.setText(null);
        this.reasonforChangeTxt.setText(null); }
}
