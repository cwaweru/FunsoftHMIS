/*
 * branchintfr.java
 *
 * Created on August 13, 2002, 10:14 AM
 */
package com.afrisoftech.hospital;

/**
 *
 * @author root
 */
public class ChangePatPaymodeIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public ChangePatPaymodeIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton41 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        dispose11 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        dispose1 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel582 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        patientNameTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        patientNoTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        paymentModeCmbx = new javax.swing.JComboBox();
        outPatientRdbtn = new javax.swing.JRadioButton();
        inPatientRdbtn = new javax.swing.JRadioButton();
        patientNoChkbx = new javax.swing.JCheckBox();
        patientNameChkbx = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        datePicker = new com.afrisoftech.lib.DatePicker();
        jPanel5 = new javax.swing.JPanel();
        jPanel5.setVisible(false);
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        schemeManagerTxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        memberNameTxt = new javax.swing.JTextField();
        memberSearchBtn = new javax.swing.JButton();
        memberNoTxt = new javax.swing.JTextField();
        jPanel641 = new javax.swing.JPanel();
        schemeNameTxt = new javax.swing.JTextField();
        schemeSearchBtn = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        schemeSearchNoChkbx = new javax.swing.JCheckBox();
        schemeSearchChkbx = new javax.swing.JCheckBox();
        jLabel141 = new javax.swing.JLabel();
        schemeAccountNoTxt = new javax.swing.JTextField();

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton41.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton41, gridBagConstraints);

        jButton5.setText("Dispose");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable11MouseClicked(evt);
                }
            });
            jSearchScrollPane11.setViewportView(jSearchTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            dispose11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose11ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel11.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

            jSearchDialog1.setModal(true);
            jSearchDialog1.setUndecorated(true);
            jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jSearchPanel1.setLayout(new java.awt.GridBagLayout());

            jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1112CaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel1.add(jTextField1112, gridBagConstraints);

            jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable1.setShowHorizontalLines(false);
            /*int rowsNo = 0;
            //try {

                crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

                crset1.setConnectionSource(pConnDB);

                // try {
                    //crset1.execute();

                    // crset2.setExecuteOnLoad(true);
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                        new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                        new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                    }));

                    tableModel = jSearchTable.getModel();

                    jSearchScrollPane.setViewportView(jSearchTable);

                    /*   }catch(java.sql.SQLException sqlex){
                    javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                    System.out.println(sqlex.getMessage());

                }

                javax.swing.table.TableColumn column = null;

                for (int i = 0; i < 4; i++) {

                    column = jSearchTable.getColumnModel().getColumn(i);

                    if (i == 1) {

                        column.setPreferredWidth(400);
                        //sport column is bigger
                    } else {

                        column.setPreferredWidth(200);

                    }
                }*/
                jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        jSearchTable1MouseClicked(evt);
                    }
                });
                jSearchScrollPane1.setViewportView(jSearchTable1);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.gridwidth = 3;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 20.0;
                jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

                dispose1.setMnemonic('l');
                dispose1.setText("Close");
                dispose1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        dispose1ActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jSearchPanel1.add(dispose1, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

                setClosable(true);
                setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
                setIconifiable(true);
                setMaximizable(true);
                setResizable(true);
                setTitle("Change Patient Payment Mode");
                setDoubleBuffered(true);
                setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif"))); // NOI18N
                try {
                    setSelected(true);
                } catch (java.beans.PropertyVetoException e1) {
                    e1.printStackTrace();
                }
                setVisible(true);
                addComponentListener(new java.awt.event.ComponentAdapter() {
                    public void componentShown(java.awt.event.ComponentEvent evt) {
                        formComponentShown(evt);
                    }
                });
                getContentPane().setLayout(new java.awt.GridBagLayout());

                jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif"))); // NOI18N
                jButton2.setMnemonic('O');
                jButton2.setText("Ok");
                jButton2.setToolTipText("Click here to enter data");
                jButton2.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton2ActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 7;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                getContentPane().add(jButton2, gridBagConstraints);

                jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF"))); // NOI18N
                jButton4.setMnemonic('C');
                jButton4.setText("Close");
                jButton4.setToolTipText("Click here to close window");
                jButton4.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton4ActionPerformed(evt);
                    }
                });
                jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        jButton4MouseClicked(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 7;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                getContentPane().add(jButton4, gridBagConstraints);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 4;
                gridBagConstraints.gridwidth = 4;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                getContentPane().add(jSeparator1, gridBagConstraints);

                jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 5;
                gridBagConstraints.gridwidth = 4;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                getContentPane().add(jLabel4, gridBagConstraints);

                jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                jPanel1.setLayout(new java.awt.GridBagLayout());

                jLabel582.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel582.setText("Patient No");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
                jPanel1.add(jLabel582, gridBagConstraints);

                jLabel1.setText("Patient Name");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
                jPanel1.add(jLabel1, gridBagConstraints);

                patientNameTxt.setEditable(false);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel1.add(patientNameTxt, gridBagConstraints);

                jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                jPanel2.setLayout(new java.awt.GridBagLayout());

                patientNoTxt.setEditable(false);
                patientNoTxt.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        patientNoTxtActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel2.add(patientNoTxt, gridBagConstraints);

                searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
                searchButton.setToolTipText("Search By No.");
                searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
                searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
                searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                searchButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        searchButtonActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                jPanel2.add(searchButton, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel1.add(jPanel2, gridBagConstraints);

                jLabel2.setText("Payment Mode");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                jPanel1.add(jLabel2, gridBagConstraints);

                paymentModeCmbx.setSelectedItem(null);
                // javax.swing.JComboBox strCmb;
                java.lang.Object[] strCmb = {"Cash","Credit Card","Scheme","Cheque"};

                javax.swing.DefaultComboBoxModel comboModel = new javax.swing.DefaultComboBoxModel(strCmb);

                paymentModeCmbx.setModel(comboModel);

                paymentModeCmbx.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        paymentModeCmbxActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.ipadx = 2;
                gridBagConstraints.weightx = 1.0;
                jPanel1.add(paymentModeCmbx, gridBagConstraints);

                buttonGroup3.add(outPatientRdbtn);
                outPatientRdbtn.setText("Out Patient");
                outPatientRdbtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
                outPatientRdbtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
                outPatientRdbtn.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        outPatientRdbtnActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
                jPanel1.add(outPatientRdbtn, gridBagConstraints);

                buttonGroup3.add(inPatientRdbtn);
                inPatientRdbtn.setText("In Patient");
                inPatientRdbtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
                inPatientRdbtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.weightx = 1.0;
                jPanel1.add(inPatientRdbtn, gridBagConstraints);

                patientNoChkbx.setBackground(new java.awt.Color(0, 255, 204));
                buttonGroup4.add(patientNoChkbx);
                patientNoChkbx.setText("Patient No");
                patientNoChkbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
                patientNoChkbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.weightx = 1.0;
                jPanel1.add(patientNoChkbx, gridBagConstraints);

                patientNameChkbx.setBackground(new java.awt.Color(0, 255, 204));
                buttonGroup4.add(patientNameChkbx);
                patientNameChkbx.setText("Patient Name");
                patientNameChkbx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
                patientNameChkbx.setMargin(new java.awt.Insets(0, 0, 0, 0));
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.weightx = 1.0;
                jPanel1.add(patientNameChkbx, gridBagConstraints);

                jLabel3.setText("Date");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                jPanel1.add(jLabel3, gridBagConstraints);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 2.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
                jPanel1.add(datePicker, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridwidth = 4;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 3.0;
                gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
                getContentPane().add(jPanel1, gridBagConstraints);

                jPanel5.setBackground(new java.awt.Color(255, 239, 255));
                jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select type of scheme & then select staff no", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11), new java.awt.Color(102, 102, 255))); // NOI18N
                jPanel5.setMinimumSize(new java.awt.Dimension(100, 143));
                jPanel5.setPreferredSize(new java.awt.Dimension(100, 129));
                jPanel5.setLayout(new java.awt.GridBagLayout());

                jLabel10.setText("Member Name");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                jPanel5.add(jLabel10, gridBagConstraints);

                jLabel12.setText("Member No.");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                jPanel5.add(jLabel12, gridBagConstraints);

                jLabel14.setText("Scheme Manager");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 3;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                jPanel5.add(jLabel14, gridBagConstraints);

                schemeManagerTxt.setEditable(false);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 3;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel5.add(schemeManagerTxt, gridBagConstraints);

                jLabel18.setText("Scheme Name");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                jPanel5.add(jLabel18, gridBagConstraints);

                jPanel64.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                jPanel64.setMinimumSize(new java.awt.Dimension(82, 37));
                jPanel64.setLayout(new java.awt.GridBagLayout());

                memberNameTxt.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        memberNameTxtActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel64.add(memberNameTxt, gridBagConstraints);

                memberSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
                memberSearchBtn.setToolTipText("Search");
                memberSearchBtn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                memberSearchBtn.setMaximumSize(new java.awt.Dimension(74, 53));
                memberSearchBtn.setMinimumSize(new java.awt.Dimension(74, 53));
                memberSearchBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                memberSearchBtn.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        memberSearchBtnActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 1;
                jPanel64.add(memberSearchBtn, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                jPanel5.add(jPanel64, gridBagConstraints);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel5.add(memberNoTxt, gridBagConstraints);

                jPanel641.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
                jPanel641.setLayout(new java.awt.GridBagLayout());

                schemeNameTxt.setEditable(false);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel641.add(schemeNameTxt, gridBagConstraints);

                schemeSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
                schemeSearchBtn.setToolTipText("Search");
                schemeSearchBtn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
                schemeSearchBtn.setMaximumSize(new java.awt.Dimension(74, 53));
                schemeSearchBtn.setMinimumSize(new java.awt.Dimension(74, 53));
                schemeSearchBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                schemeSearchBtn.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        schemeSearchBtnActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 1;
                jPanel641.add(schemeSearchBtn, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.ipadx = 20;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel5.add(jPanel641, gridBagConstraints);

                jPanel7.setLayout(new java.awt.GridBagLayout());

                buttonGroup2.add(schemeSearchNoChkbx);
                schemeSearchNoChkbx.setSelected(true);
                schemeSearchNoChkbx.setText("Search By No");
                schemeSearchNoChkbx.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        schemeSearchNoChkbxActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel7.add(schemeSearchNoChkbx, gridBagConstraints);

                buttonGroup2.add(schemeSearchChkbx);
                schemeSearchChkbx.setText("Search By Name");
                jPanel7.add(schemeSearchChkbx, new java.awt.GridBagConstraints());

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.weightx = 1.0;
                jPanel5.add(jPanel7, gridBagConstraints);

                jLabel141.setText("Scheme A/C No.");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
                jPanel5.add(jLabel141, gridBagConstraints);

                schemeAccountNoTxt.setEditable(false);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel5.add(schemeAccountNoTxt, gridBagConstraints);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 5;
                gridBagConstraints.gridwidth = 5;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 5.0;
                gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
                getContentPane().add(jPanel5, gridBagConstraints);

                setBounds(0, 0, 701, 333);
            }// </editor-fold>//GEN-END:initComponents

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        memberNameTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        memberNoTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        //  jTextField15.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());

        /* try {
        
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer_name from ac_schemes where scheme_name ='"+jTextField15.getText()+"'");
            while (rset.next()){
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                jTextField2.setText(rset.getObject(1).toString());
                //jTextField1.setText(rset.getObject(2).toString());
                //jTextField4.setText(rset.getObject(3).toString());
        
        
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
         */
        jSearchDialog1.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void dispose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose1ActionPerformed
        jSearchDialog1.dispose();        // Add your handling code here:
    }//GEN-LAST:event_dispose1ActionPerformed

    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        if (jTextField1112.getCaretPosition() < 3) {

            System.out.println("Nothing");
        } else {
            if (this.schemeSearchChkbx.isSelected()) {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_name ILIKE '" + jTextField1112.getText().toString() + "%' and sheme_name = '" + schemeNameTxt.getText().toString() + "' ORDER BY staff_name"));

                /* try {
                    searchRowSet1.execute("select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_name ILIKE '"+jTextField1112.getText().toString()+"%' and sheme_name = '"+jTextField3611.getText().toString()+"' ORDER BY staff_name");
                
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Member Acc.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("sheme_name", "Scheme Name", false)
                
                    }));
                 */
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);

            } else {

                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_no ILIKE '" + jTextField1112.getText().toString() + "%' and sheme_name = '" + schemeNameTxt.getText().toString() + "' ORDER BY staff_no"));

                /*  try {
                    searchRowSet1.execute("select trim(staff_no) as scheme, staff_name as name,sheme_name from scheme_members_view where staff_no ILIKE '"+jTextField1112.getText().toString()+"%' and sheme_name = '"+jTextField3611.getText().toString()+"' ORDER BY staff_no");
               
                    jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Member Acc.", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("sheme_name", "Scheme Name", false)
               
                    }));
                 */
                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);

            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        jSearchDialog1.dispose();
        java.awt.Point point = this.memberNameTxt.getLocationOnScreen();

        jSearchDialog1.setSize(400, 200);

        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);

    }
    private void memberSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberSearchBtnActionPerformed
        searchButton11Clicked();         // Add your handling code here:
    }//GEN-LAST:event_memberSearchBtnActionPerformed

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked

        schemeNameTxt.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
        //jTextField13.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        schemeManagerTxt.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 2).toString());
        schemeAccountNoTxt.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());

        java.util.Date exp = null;
        java.util.Date date = null;
        double limit = 0.00;
        double balance = 0.00;
        String Suspended = null;
        String Closed = null;
        jSearchDialog11.dispose();
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select sum(balance-credit_bal) from ac_debtors where account_no = '" + schemeAccountNoTxt.getText() + "' and dealer = '" + schemeManagerTxt.getText() + "'");
            while (rset1.next()) {
                balance = rset1.getDouble(1);
            }
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select suspended, closed,expiry_date,current_date,scheme_limit from ac_schemes where account_no = '" + schemeAccountNoTxt.getText() + "' and payer_name = '" + schemeManagerTxt.getText() + "'");
            while (rset.next()) {
                Suspended = rset.getObject(1).toString();
                Closed = rset.getObject(2).toString();
                exp = rset.getDate(3);
                date = rset.getDate(4);
                limit = rset.getDouble(5);
            }
            if (Suspended.equals("true")) {

                javax.swing.JOptionPane.showMessageDialog(this, "SCHEME SUSPENDED !!", "Suspension MESSAGE", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                memberNameTxt.setText("");
                schemeManagerTxt.setText("");
            } else {
                if (Closed.equals("true")) {

                    javax.swing.JOptionPane.showMessageDialog(this, "SCHEME CLOSED !!", "Viability MESSAGE", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    memberNameTxt.setText("");
                    schemeManagerTxt.setText("");
                } else {

                    if (exp.before(date)) {

                        javax.swing.JOptionPane.showMessageDialog(this, "SCHEME EXPIRED !! ON " + date, "Expiry MESSAGE", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        memberNameTxt.setText("");
                        schemeManagerTxt.setText("");
                    } else {
                        if (balance > limit) {

                            javax.swing.JOptionPane.showMessageDialog(this, "SCHEME LIMIT IS " + limit + " AND DEBT IS " + balance + "\n Hence Limit exceeded by " + (balance - limit), "Debt Status MESSAGE", javax.swing.JOptionPane.PLAIN_MESSAGE);
                            memberNameTxt.setText("");
                            schemeManagerTxt.setText("");
                        }
                    }
                }
            }
        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked

    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog11.dispose();        // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if (jTextField1111.getCaretPosition() < 3) {

            System.out.println("Nothing");
        } else {

            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '" + jTextField1111.getText() + "%' and (allowed ilike 'Both' or allowed ilike 'IP%') order by scheme_name"));

            /* try {
            
                searchRowSet11.execute("SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' and (allowed ilike 'Both' or allowed ilike 'IP%') order by scheme_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
            
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
            
                }));
             */
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);

        }  // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate

    private void schemeSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeSearchBtnActionPerformed
        searchButton11aClicked();         // Add your handling code here:
    }//GEN-LAST:event_schemeSearchBtnActionPerformed
    private void searchButton11aClicked() {

        System.out.println("Showing dialog");

        jSearchDialog11.dispose();
        java.awt.Point point = this.schemeNameTxt.getLocationOnScreen();

        jSearchDialog11.setSize(400, 200);

        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);

    }
    private void paymentModeCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentModeCmbxActionPerformed
        if (paymentModeCmbx.getSelectedItem().toString().equalsIgnoreCase("Scheme")) {
            // jPanel2.setVisible(false);
            jPanel5.setVisible(true);
            //panel5Showing = true;
            /*   try {
              
                    java.sql.Statement stmt = connectDB.createStatement();
                    java.sql.ResultSet rset = stmt.executeQuery("select payer,description,account_no,member_name from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
                    while (rset.next()){
                        // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                        jTextField2.setText(rset.getObject(1).toString());
                        jTextField361.setText(rset.getObject(2).toString());
                        jTextField13.setText(rset.getObject(3).toString());
                        jTextField36.setText(rset.getObject(4).toString());
              
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    System.out.println("Insert not successful");
                }*/
        } else {
            //jPanel2.setVisible(false);
            jPanel5.setVisible(false);
        }   // Add your handling code here:
    }//GEN-LAST:event_paymentModeCmbxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        patientNoTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        patientNameTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.patientNoTxt.getLocationOnScreen();

        jSearchDialog.setSize(400, 200);

        jSearchDialog.setLocation(point);

        jSearchDialog.setVisible(true);

    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jSearchDialog.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if (jTextField111.getCaretPosition() < 4) {

            System.out.println("Nothing");
        } else {
            if (inPatientRdbtn.isSelected()) {
                if (patientNoChkbx.isSelected()) {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(patient_no) as patient_no,second_name||' '||first_name as name from hp_inpatient_register where patient_no ILIKE '%" + jTextField111.getText().toString() + "%' order by patient_no"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                } else {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(patient_no) as patient_no,second_name||' '||first_name as name from hp_inpatient_register where second_name||' '||first_name ILIKE '%" + jTextField111.getText().toString() + "%' order by second_name"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                }
            } else {
                if (outPatientRdbtn.isSelected()) {
                    if (patientNoChkbx.isSelected()) {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, name, year_of_birth, residence from patient_select where patient_no ILIKE '%" + jTextField111.getText() + "%' order by patient_no"));
                        jSearchTable.setShowHorizontalLines(false);
                        jSearchScrollPane.setViewportView(jSearchTable);

                    } else {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, name, year_of_birth, residence from patient_select where name ILIKE '%" + jTextField111.getText() + "%' order by name"));
                        jSearchTable.setShowHorizontalLines(false);
                        jSearchScrollPane.setViewportView(jSearchTable);
                    }
                }
            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);// Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        //try {
        this.getDesktopPane().setSelectedFrame(this);
        //}catch (java.beans.PropertyVetoException pr){
        //    System.out.println("Not Selected");
        //}
        // Add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String selectedchkbx;
        if (inPatientRdbtn.isSelected()) {
            /* try {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("begin work; UPDATE hp_patient_card set payment_mode = '"+this.jComboBox1.getSelectedItem().toString()+"' WHERE patient_no  ='"+jTextField36.getText()+"' and paid = false and (invoice_no not like 'O%' or invoice_no not like 'I%');commit work");
                
                //java.sql.PreparedStatement pstmt = con.prepareStatement ("begin work; update shares_receiptsb set deposit = (deposit + '"+jTextField3.getText()+"' + '"+jTextField12.getText()+"') where code = '"+jComboBox1.getSelectedItem()+"'and deposit = '"+jCheckBox1.getText().toString()+"';commit work");
                pstmt.executeUpdate();
                
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("begin work; UPDATE hp_admission set mode_of_payment = '"+this.jComboBox1.getSelectedItem().toString()+"',ward_code = 'Self' WHERE patient_no  ='"+jTextField36.getText()+"';commit work");
                pstmt1.executeUpdate();
                
                java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("begin work; UPDATE hp_inpatient_register set description = '-',pay_mode = '"+this.jComboBox1.getSelectedItem().toString()+"',payer = '-',account_no = '-',member_no ='-',expiry_date = null,member_name ='-' WHERE patient_no  ='"+jTextField36.getText()+"';commit work");
                pstmtx.executeUpdate();
                
                javax.swing.JOptionPane.showMessageDialog(this,"Well Done !! INSERT Done Successfully","Comfirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }   catch(java.sql.SQLException sq){
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }*/

            if (paymentModeCmbx.getSelectedItem().toString().equalsIgnoreCase("Scheme")) {

                try {
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("begin work; UPDATE hp_inpatient_register set description = '" + schemeNameTxt.getText() + "',pay_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "',payer = '" + schemeManagerTxt.getText() + "',account_no = '" + schemeAccountNoTxt.getText() + "',member_no ='" + memberNoTxt.getText() + "',expiry_date = null,member_name ='" + memberNameTxt.getText() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "';commit work");
                    pstmt.executeUpdate();

                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("begin work; UPDATE hp_admission set mode_of_payment = '" + this.paymentModeCmbx.getSelectedItem().toString() + "',ward_code = '" + schemeNameTxt.getText() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "';commit work");
                    pstmt1.executeUpdate();

                            javax.swing.JOptionPane.showMessageDialog(this, "Payment mode changed to ["+this.paymentModeCmbx.getSelectedItem().toString()+"]", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } catch (java.sql.SQLException sq) {
                    sq.printStackTrace();
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            } else {

                try {
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("begin work; UPDATE hp_inpatient_register set description = '',pay_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "',payer = '',account_no = '',member_no ='',expiry_date = null,member_name ='' WHERE patient_no  ='" + patientNoTxt.getText() + "';commit work");

                    pstmt.executeUpdate();

                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("begin work; UPDATE hp_admission set mode_of_payment = '" + this.paymentModeCmbx.getSelectedItem().toString() + "',ward_code = 'Self' WHERE patient_no  ='" + patientNoTxt.getText() + "';commit work");
                    pstmt1.executeUpdate();

                            javax.swing.JOptionPane.showMessageDialog(this, "Payment mode changed to ["+this.paymentModeCmbx.getSelectedItem().toString()+"]", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } catch (java.sql.SQLException sq) {
                    sq.printStackTrace();
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            }
        } else {
            if (outPatientRdbtn.isSelected()) {
                try {
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("begin work; UPDATE hp_patient_card set payment_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "' and paid = false and (invoice_no not like 'O%' or invoice_no not like 'I%');commit work");

                    //java.sql.PreparedStatement pstmt = con.prepareStatement ("begin work; update shares_receiptsb set deposit = (deposit + '"+jTextField3.getText()+"' + '"+jTextField12.getText()+"') where code = '"+jComboBox1.getSelectedItem()+"'and deposit = '"+jCheckBox1.getText().toString()+"';commit work");
                    pstmt.executeUpdate();

                    java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("begin work; UPDATE hp_patient_register set description = '-',pay_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "',payer = '-',account_no = '-',card_no ='-',expiry_date = null,member_name ='-' WHERE patient_no  ='" + patientNoTxt.getText() + "';commit work");
                    pstmtx.executeUpdate();
                    java.sql.PreparedStatement pstmtqx1 = connectDB.prepareStatement("begin work; UPDATE hp_patient_visit set payment = '" + this.paymentModeCmbx.getSelectedItem().toString() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "' AND date = '" + datePicker.getDate() + "';commit work");
                    pstmtqx1.executeUpdate();

                    javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! INSERT Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } catch (java.sql.SQLException sq) {
                    sq.printStackTrace();
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                }

                if (paymentModeCmbx.getSelectedItem().toString().equalsIgnoreCase("Scheme")) {

                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("begin work; UPDATE hp_patient_register set description = '" + schemeNameTxt.getText() + "',pay_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "',payer = '" + schemeManagerTxt.getText() + "',account_no = '" + schemeAccountNoTxt.getText() + "',card_no ='" + memberNoTxt.getText() + "',expiry_date = null,member_name ='" + memberNameTxt.getText() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "';commit work");
                        pstmt.executeUpdate();

                        java.sql.PreparedStatement pstmtx = connectDB.prepareStatement("begin work; UPDATE hp_patient_billing set payment_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "', paid = false WHERE patient_no  ='" + patientNoTxt.getText() + "' AND trans_date = '" + datePicker.getDate() + "' ;commit work");
                        pstmtx.executeUpdate();

                        java.sql.PreparedStatement pstmtx1 = connectDB.prepareStatement("begin work; UPDATE hp_pharmacy set pay_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "', paid = false WHERE patient_no  ='" + patientNoTxt.getText() + "' AND date_prescribed = '" + datePicker.getDate() + "' ;commit work");
                        pstmtx1.executeUpdate();

                        java.sql.PreparedStatement pstmtqx = connectDB.prepareStatement("begin work; UPDATE hp_patient_visit set payment = '" + this.paymentModeCmbx.getSelectedItem().toString() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "' AND date = '" + datePicker.getDate() + "';commit work");
                        pstmtqx.executeUpdate();
                        javax.swing.JOptionPane.showMessageDialog(this, "Payment mode changed to ["+this.paymentModeCmbx.getSelectedItem().toString()+"]", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }
                } else {

                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("begin work; UPDATE hp_patient_register set pay_mode = '" + this.paymentModeCmbx.getSelectedItem().toString() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "';commit work");
                        pstmt.executeUpdate();

                        java.sql.PreparedStatement pstmtq = connectDB.prepareStatement("begin work; UPDATE hp_patient_visit set payment = '" + this.paymentModeCmbx.getSelectedItem().toString() + "' WHERE patient_no  ='" + patientNoTxt.getText() + "' AND date = '" + datePicker.getDate() + "';commit work");
                        pstmtq.executeUpdate();

                        javax.swing.JOptionPane.showMessageDialog(this, "Well Done !! INSERT Done Successfully", "Comfirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    } catch (java.sql.SQLException sq) {
                        sq.printStackTrace();
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }
                }
            }
        }
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);

        System.out.println(datenowSql.toString());

        java.sql.Connection con;

        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked

    private void outPatientRdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outPatientRdbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outPatientRdbtnActionPerformed

    private void patientNoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNoTxtActionPerformed

    private void memberNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_memberNameTxtActionPerformed

    private void schemeSearchNoChkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeSearchNoChkbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schemeSearchNoChkbxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.afrisoftech.lib.DatePicker datePicker;
    private javax.swing.JButton dispose1;
    private javax.swing.JButton dispose11;
    private javax.swing.JRadioButton inPatientRdbtn;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel582;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JTextField memberNameTxt;
    private javax.swing.JTextField memberNoTxt;
    private javax.swing.JButton memberSearchBtn;
    private javax.swing.JRadioButton outPatientRdbtn;
    private javax.swing.JCheckBox patientNameChkbx;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JCheckBox patientNoChkbx;
    private javax.swing.JTextField patientNoTxt;
    private javax.swing.JComboBox paymentModeCmbx;
    private javax.swing.JTextField schemeAccountNoTxt;
    private javax.swing.JTextField schemeManagerTxt;
    private javax.swing.JTextField schemeNameTxt;
    private javax.swing.JButton schemeSearchBtn;
    private javax.swing.JCheckBox schemeSearchChkbx;
    private javax.swing.JCheckBox schemeSearchNoChkbx;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

}
