/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */
package com.afrisoftech.hospital;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JSpinner;
//import org.openide.util.Exceptions;

////import com.sun.star.lib.uno.environments.java.java_environment;
/**
 *
 * @author Charles W. Waweru <cwaweru@systempartners.biz>
 */
public class UsersetupHospitalIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    private JSpinner beginDateSpinner;
    private JSpinner beginDateSpinner1;
    javax.swing.SpinnerDateModel beginDate1;

    public UsersetupHospitalIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        this.spacerLabel.setForeground(java.awt.Color.blue);
        this.spacerLabel.setText("Total number of registered users : [" + this.staffControlsTbl.getRowCount() + "]");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crsetusertables = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crsetdataccess = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        buttonGroup1 = new javax.swing.ButtonGroup();
        groupsManagerPane = new javax.swing.JTabbedPane();
        manageGroupsTabbedPane = new javax.swing.JPanel();
        groupManagementPanel = new javax.swing.JPanel();
        registerGroupPanel = new javax.swing.JPanel();
        newGroupNameLbl = new javax.swing.JLabel();
        registerNewGroupBtn = new javax.swing.JButton();
        newGroupNameTxt = new javax.swing.JTextField();
        removeGroupPanel = new javax.swing.JPanel();
        dropGroupBtn = new javax.swing.JButton();
        removeGroupCmbx = new javax.swing.JComboBox();
        assignGroupMembersPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList12 = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        targetGroupLbl = new javax.swing.JLabel();
        targetGroupCmbx = new javax.swing.JComboBox();
        userRegistrationPanel = new javax.swing.JPanel();
        jButton252 = new javax.swing.JButton();
        jSeparator71 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        logonNameTxt = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField5412 = new javax.swing.JTextField();
        jButton301 = new javax.swing.JButton();
        jLabel572 = new javax.swing.JLabel();
        jLabel582 = new javax.swing.JLabel();
        jLabel612 = new javax.swing.JLabel();
        jLabel592 = new javax.swing.JLabel();
        jLabel622 = new javax.swing.JLabel();
        jLabel642 = new javax.swing.JLabel();
        newRetypedPasswordField = new javax.swing.JPasswordField();
        newPasswordField = new javax.swing.JPasswordField();
        jComboBox3 = new javax.swing.JComboBox();
        targetGroupLbl1 = new javax.swing.JLabel();
        removeGroupCmbx2 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton3011 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        changeUserGroupBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        currentGroupTxt = new javax.swing.JTextField();
        jButton202 = new javax.swing.JButton();
        activityDomainsPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        accountNameCmbx = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        targetAccountNameCmbx = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        dataaccessPane = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jComboBox41 = new javax.swing.JComboBox();
        jLabel61 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jScrollPane31 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jComboBox42 = new javax.swing.JComboBox();
        jComboBox411 = new javax.swing.JComboBox();
        jLabel611 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        assignbtn = new javax.swing.JButton();
        revokebtn = new javax.swing.JButton();
        refreshbtn = new javax.swing.JButton();
        closebtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        accountAccessControlsPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        warnUsersForScheduledTaskChkbx = new javax.swing.JCheckBox();
        scheduleTaskBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        maintenanceTaskDescription = new javax.swing.JTextArea();
        bodyPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        daystoExpireTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        passwordLegnthTxt = new javax.swing.JTextField();
        anyCharacterCheckBox = new javax.swing.JCheckBox();
        alphaNumericCheckBox = new javax.swing.JCheckBox();
        buttonPanel = new javax.swing.JPanel();
        saveAccessControlpolicyBtn = new javax.swing.JButton();
        passwordsSpacelLabel = new javax.swing.JLabel();
        clearFormPaaswordPolicyBrn = new javax.swing.JButton();
        passwdControlCloseBtn = new javax.swing.JButton();
        staffListingPanel = new javax.swing.JPanel();
        listingPanel = new javax.swing.JPanel();
        staffControlsScrollPane = new javax.swing.JScrollPane();
        staffControlsTbl = new com.afrisoftech.dbadmin.JTable();
        staffOperationsButtonPanel = new javax.swing.JPanel();
        spacerLabel = new javax.swing.JLabel();
        updateLoginAccountBtn = new javax.swing.JButton();
        restoreAccountBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        selectAccountLbl = new javax.swing.JLabel();
        selectUserAccountTxt = new javax.swing.JTextField();
        alterUserDatePicker = new com.afrisoftech.lib.DatePicker();
        listofScheduledTasksPanel = new javax.swing.JPanel();
        scheduledTasksScrollPane = new javax.swing.JScrollPane();
        scheduledTasksTable = new com.afrisoftech.dbadmin.JTable();
        headerPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        warnUsersForScheduledTaskChkbx1 = new javax.swing.JCheckBox();
        updateScheduleTaskBtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        maintenanceTaskDescription1 = new javax.swing.JTextArea();
        taskIdLbl = new javax.swing.JLabel();
        refreshTasksScheduleBtn = new javax.swing.JButton();
        tasksCloseFormBtn = new javax.swing.JButton();
        userAdministrationAuitTrailPanel = new javax.swing.JPanel();
        auditTrailScrollPane = new javax.swing.JScrollPane();
        auditTrailTable = new com.afrisoftech.dbadmin.JXTable();
        auditHeaderPanel = new javax.swing.JPanel();
        auditTrailUserCmbx = new javax.swing.JComboBox();
        startDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        auditTrailSysAdmCmbx = new javax.swing.JComboBox();
        auditButtonPanel = new javax.swing.JPanel();
        auditTrailBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        auditSpacerLabel = new javax.swing.JLabel();

        crset3.setConnectionSource(pConnDB);

        crset1.setConnectionSource(pConnDB);

        crset2.setConnectionSource(pConnDB);

        crset4.setConnectionSource(pConnDB);

        crsetusertables.setConnectionSource(pConnDB);

        crsetdataccess.setConnectionSource(pConnDB);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("User Manager - Main Operations");
        setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        groupsManagerPane.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        groupsManagerPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        manageGroupsTabbedPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Manage Groups and Members"));
        manageGroupsTabbedPane.setLayout(new java.awt.GridBagLayout());

        groupManagementPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Register/Delete Groups"));
        groupManagementPanel.setLayout(new java.awt.GridBagLayout());

        registerGroupPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("New Groups"));
        registerGroupPanel.setLayout(new java.awt.GridBagLayout());

        newGroupNameLbl.setText("New Group Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        registerGroupPanel.add(newGroupNameLbl, gridBagConstraints);

        registerNewGroupBtn.setMnemonic('R');
        registerNewGroupBtn.setText("Register New Group");
        registerNewGroupBtn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        registerNewGroupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerNewGroupBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        registerGroupPanel.add(registerNewGroupBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        registerGroupPanel.add(newGroupNameTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        groupManagementPanel.add(registerGroupPanel, gridBagConstraints);

        removeGroupPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Remove Group"));
        removeGroupPanel.setLayout(new java.awt.GridBagLayout());

        dropGroupBtn.setMnemonic('D');
        dropGroupBtn.setText("Drop Group");
        dropGroupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropGroupBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        removeGroupPanel.add(dropGroupBtn, gridBagConstraints);

        removeGroupCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT groname FROM pg_catalog.pg_group ORDER BY groname"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        removeGroupPanel.add(removeGroupCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        groupManagementPanel.add(removeGroupPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        manageGroupsTabbedPane.add(groupManagementPanel, gridBagConstraints);

        assignGroupMembersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Assign/Remove Group Members"));
        assignGroupMembersPanel.setLayout(new java.awt.GridBagLayout());

        jList4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList4.setModel(com.afrisoftech.lib.ListModel.listModel(connectDB, "SELECT item_desc FROM menu_item_list WHERE app_name = 'hospital_main' ORDER BY item_desc"));
        jList4.setDragEnabled(true);
        jList4.setValueIsAdjusting(true);
        jList4.setVisibleRowCount(20);
        jScrollPane4.setViewportView(jList4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        assignGroupMembersPanel.add(jScrollPane4, gridBagConstraints);

        jList12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList12.setDragEnabled(true);
        jList12.setDropMode(javax.swing.DropMode.ON);
        jList12.setValueIsAdjusting(true);
        jList12.setVisibleRowCount(20);
        jScrollPane5.setViewportView(jList12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        assignGroupMembersPanel.add(jScrollPane5, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText("Available Activity Domains");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        assignGroupMembersPanel.add(jLabel9, gridBagConstraints);

        jButton5.setText("Add >>");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assignGroupMembersPanel.add(jButton5, gridBagConstraints);

        jLabel32.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 204));
        jLabel32.setText("Group Assigned Domains");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        assignGroupMembersPanel.add(jLabel32, gridBagConstraints);

        jButton6.setText("<< Remove");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assignGroupMembersPanel.add(jButton6, gridBagConstraints);

        jButton7.setMnemonic('e');
        jButton7.setText("Assign Priveledges");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assignGroupMembersPanel.add(jButton7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        assignGroupMembersPanel.add(jSeparator3, gridBagConstraints);

        targetGroupLbl.setText("Target Group Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        assignGroupMembersPanel.add(targetGroupLbl, gridBagConstraints);

        targetGroupCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT groname FROM pg_catalog.pg_group ORDER BY groname"));
        targetGroupCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetGroupCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        assignGroupMembersPanel.add(targetGroupCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        manageGroupsTabbedPane.add(assignGroupMembersPanel, gridBagConstraints);

        groupsManagerPane.addTab("User Groups", manageGroupsTabbedPane);

        userRegistrationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        userRegistrationPanel.setLayout(new java.awt.GridBagLayout());

        jButton252.setText("Close form");
        jButton252.setToolTipText("Click here to close window");
        jButton252.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton252ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userRegistrationPanel.add(jButton252, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userRegistrationPanel.add(jSeparator71, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Register new users"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        logonNameTxt.setDragEnabled(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(logonNameTxt, gridBagConstraints);

        jTextField2.setDragEnabled(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField2, gridBagConstraints);

        jTextField5412.setDragEnabled(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField5412, gridBagConstraints);

        jButton301.setMnemonic('r');
        jButton301.setText("Create User Account");
        jButton301.setToolTipText("Click here to enter data");
        jButton301.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton301ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton301, gridBagConstraints);

        jLabel572.setText("New User Account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(jLabel572, gridBagConstraints);

        jLabel582.setText("First Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(jLabel582, gridBagConstraints);

        jLabel612.setText("Last Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(jLabel612, gridBagConstraints);

        jLabel592.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel592, gridBagConstraints);

        jLabel622.setText("Initial Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel622, gridBagConstraints);

        jLabel642.setText("Confirm Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel642, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(newRetypedPasswordField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(newPasswordField, gridBagConstraints);

        jComboBox3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select depart_name from pb_main_department order by depart_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jComboBox3, gridBagConstraints);

        targetGroupLbl1.setText("Target Group Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(targetGroupLbl1, gridBagConstraints);

        removeGroupCmbx2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT groname FROM pg_catalog.pg_group ORDER BY groname"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(removeGroupCmbx2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        userRegistrationPanel.add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Remove users from the system"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel15.setText("User Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel15, gridBagConstraints);

        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' ORDER BY usename "));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jComboBox2, gridBagConstraints);

        jButton3011.setMnemonic('O');
        jButton3011.setText("Remove user");
        jButton3011.setToolTipText("Click here to enter data");
        jButton3011.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3011ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton3011, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        userRegistrationPanel.add(jPanel3, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Change user From one Group to another"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel16.setText("User Group");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel16, gridBagConstraints);

        jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT groname FROM pg_catalog.pg_group ORDER BY groname"));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 50.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel7.add(jComboBox5, gridBagConstraints);

        jLabel17.setText("User Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel17, gridBagConstraints);

        jComboBox6.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' ORDER BY usename "));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jComboBox6, gridBagConstraints);

        changeUserGroupBtn.setMnemonic('O');
        changeUserGroupBtn.setText("Change User Group");
        changeUserGroupBtn.setToolTipText("Click here to enter data");
        changeUserGroupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeUserGroupBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(changeUserGroupBtn, gridBagConstraints);

        jLabel13.setText("Current Group");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel13, gridBagConstraints);

        currentGroupTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(currentGroupTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        userRegistrationPanel.add(jPanel7, gridBagConstraints);

        jButton202.setMnemonic('n');
        jButton202.setText("Clear Fields");
        jButton202.setToolTipText("Click here to clear fields");
        jButton202.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton202ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userRegistrationPanel.add(jButton202, gridBagConstraints);

        groupsManagerPane.addTab("Users Management", userRegistrationPanel);

        activityDomainsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Manage activity domains"));
        activityDomainsPanel.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("Available Activity Domains");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        activityDomainsPanel.add(jLabel3, gridBagConstraints);

        jButton1.setMnemonic('e');
        jButton1.setText("Assign Priveledges");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        activityDomainsPanel.add(jButton1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        activityDomainsPanel.add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        activityDomainsPanel.add(jLabel4, gridBagConstraints);

        jLabel5.setText("User Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        activityDomainsPanel.add(jLabel5, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        activityDomainsPanel.add(jTextField1, gridBagConstraints);

        jLabel51.setText("Department/Section");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        activityDomainsPanel.add(jLabel51, gridBagConstraints);

        jTextField11.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        activityDomainsPanel.add(jTextField11, gridBagConstraints);

        jList11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList11.setDragEnabled(true);
        jList11.setValueIsAdjusting(true);
        jList11.setVisibleRowCount(20);
        jScrollPane2.setViewportView(jList11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        activityDomainsPanel.add(jScrollPane2, gridBagConstraints);

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        activityDomainsPanel.add(jButton2, gridBagConstraints);

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        activityDomainsPanel.add(jButton3, gridBagConstraints);

        jLabel31.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 204));
        jLabel31.setText("User Assigned Domains");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        activityDomainsPanel.add(jLabel31, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("User Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel2, gridBagConstraints);

        accountNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' ORDER BY usename"));
        accountNameCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountNameCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(accountNameCmbx, gridBagConstraints);

        jLabel22.setText("User (Target copy of profile)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel22, gridBagConstraints);

        targetAccountNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' ORDER BY usename"));
        targetAccountNameCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetAccountNameCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(targetAccountNameCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        activityDomainsPanel.add(jPanel4, gridBagConstraints);

        jList1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList1.setModel(com.afrisoftech.lib.ListModel.listModel(connectDB, "SELECT item_desc FROM menu_item_list WHERE app_name = 'hospital_main' ORDER BY item_desc"));
        jList1.setDragEnabled(true);
        jList1.setValueIsAdjusting(true);
        jList1.setVisibleRowCount(20);
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        activityDomainsPanel.add(jScrollPane1, gridBagConstraints);

        jButton4.setText("Copy User Profile");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        activityDomainsPanel.add(jButton4, gridBagConstraints);

        groupsManagerPane.addTab("Access Priviledges", activityDomainsPanel);

        dataaccessPane.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        dataaccessPane.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Assign Database Access Priveleges"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT usename FROM pg_catalog.pg_user WHERE usename !='postgres' ORDER BY usename"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jComboBox4, gridBagConstraints);

        jLabel6.setText("Group/User Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jLabel6, gridBagConstraints);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setAutoscrolls(true);

        jList2.setModel(com.afrisoftech.lib.ListModel.listModel(connectDB, "SELECT DISTINCT access_priv FROM data_access_priv"));
        jScrollPane3.setViewportView(jList2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 15.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 50);
        jPanel5.add(jScrollPane3, gridBagConstraints);

        jComboBox41.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT relname FROM pg_catalog.pg_stat_user_tables ORDER BY relname"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jComboBox41, gridBagConstraints);

        jLabel61.setText("Table Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jLabel61, gridBagConstraints);

        jLabel7.setText("Access Priveleges");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        dataaccessPane.add(jPanel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dataaccessPane.add(jSeparator2, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Revoke Database Access Priveleges"));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel71.setText("Access Priveleges");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel6.add(jLabel71, gridBagConstraints);

        jScrollPane31.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane31.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jList3.setModel(com.afrisoftech.lib.ListModel.listModel(connectDB, "SELECT DISTINCT access_priv FROM data_access_priv"));
        jScrollPane31.setViewportView(jList3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 15.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 50);
        jPanel6.add(jScrollPane31, gridBagConstraints);

        jComboBox42.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT usename FROM pg_catalog.pg_user WHERE usename !='postgres' ORDER BY usename"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jComboBox42, gridBagConstraints);

        jComboBox411.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT relname FROM pg_catalog.pg_stat_user_tables ORDER BY relname"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jComboBox411, gridBagConstraints);

        jLabel611.setText("Table Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel611, gridBagConstraints);

        jLabel62.setText("Group/User Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jLabel62, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        dataaccessPane.add(jPanel6, gridBagConstraints);

        assignbtn.setText("Assign");
        assignbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dataaccessPane.add(assignbtn, gridBagConstraints);

        revokebtn.setText("Revoke");
        revokebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revokebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dataaccessPane.add(revokebtn, gridBagConstraints);

        refreshbtn.setText("Refresh");
        refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dataaccessPane.add(refreshbtn, gridBagConstraints);

        closebtn.setText("Close");
        closebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dataaccessPane.add(closebtn, gridBagConstraints);

        jLabel8.setForeground(new java.awt.Color(0, 51, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        dataaccessPane.add(jLabel8, gridBagConstraints);

        groupsManagerPane.addTab("Data Access Management", dataaccessPane);

        accountAccessControlsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Use this form to define system wide access control policy", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 14), new java.awt.Color(0, 0, 255))); // NOI18N
        accountAccessControlsPanel.setLayout(new java.awt.GridBagLayout());

        try {
            java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
            java.util.Date dateInstance = java.util.Calendar.getInstance().getTime();

            java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
            System.out.println(dateFormat.format(formattedDate));
            javax.swing.SpinnerDateModel beginDate = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);

            beginDateSpinner = new javax.swing.JSpinner(beginDate);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            headerPanel.add(beginDateSpinner, gridBagConstraints);

        } catch(java.text.ParseException parseExec) {
            parseExec.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), parseExec.getMessage());

        }
        headerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Schedule Maintenace Activities"));
        headerPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Schedule Date/Time");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(jLabel1, gridBagConstraints);

        warnUsersForScheduledTaskChkbx.setSelected(true);
        warnUsersForScheduledTaskChkbx.setText("Warn users ahead of scheduled activity");
        warnUsersForScheduledTaskChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(warnUsersForScheduledTaskChkbx, gridBagConstraints);

        scheduleTaskBtn.setText("Save maintenance schedule");
        scheduleTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleTaskBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel.add(scheduleTaskBtn, gridBagConstraints);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder("Described the nature of the scheduled maintenance"));

        maintenanceTaskDescription.setColumns(20);
        maintenanceTaskDescription.setRows(5);
        jScrollPane6.setViewportView(maintenanceTaskDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 11.0;
        headerPanel.add(jScrollPane6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 40.0;
        accountAccessControlsPanel.add(headerPanel, gridBagConstraints);

        bodyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Define Access Control Policy"));
        bodyPanel.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Number of days to change password");
        bodyPanel.add(jLabel10, new java.awt.GridBagConstraints());

        daystoExpireTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        daystoExpireTxt.setText("30");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(daystoExpireTxt, gridBagConstraints);

        jLabel11.setText("Minimum number of characters for a password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(jLabel11, gridBagConstraints);

        passwordLegnthTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        passwordLegnthTxt.setText("8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(passwordLegnthTxt, gridBagConstraints);

        buttonGroup1.add(anyCharacterCheckBox);
        anyCharacterCheckBox.setSelected(true);
        anyCharacterCheckBox.setText("Password to have any characters");
        anyCharacterCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(anyCharacterCheckBox, gridBagConstraints);

        buttonGroup1.add(alphaNumericCheckBox);
        alphaNumericCheckBox.setText("Passowrd MUST have Alpha/Numeric characters");
        alphaNumericCheckBox.setFocusable(false);
        alphaNumericCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        alphaNumericCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alphaNumericCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bodyPanel.add(alphaNumericCheckBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        accountAccessControlsPanel.add(bodyPanel, gridBagConstraints);

        buttonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions Panel"));
        buttonPanel.setLayout(new java.awt.GridBagLayout());

        saveAccessControlpolicyBtn.setText("Save access control data");
        saveAccessControlpolicyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAccessControlpolicyBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(saveAccessControlpolicyBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(passwordsSpacelLabel, gridBagConstraints);

        clearFormPaaswordPolicyBrn.setText("Clear form");
        clearFormPaaswordPolicyBrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormPaaswordPolicyBrnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(clearFormPaaswordPolicyBrn, gridBagConstraints);

        passwdControlCloseBtn.setText("Close form");
        passwdControlCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwdControlCloseBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(passwdControlCloseBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        accountAccessControlsPanel.add(buttonPanel, gridBagConstraints);

        groupsManagerPane.addTab("Account Control Settings", accountAccessControlsPanel);

        staffListingPanel.setLayout(new java.awt.GridBagLayout());

        listingPanel.setLayout(new java.awt.GridBagLayout());

        staffControlsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct upper(login_name) as login_name, upper(f_name||' '||l_name) as user_name, department, false as dormant_account, (CASE WHEN (SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE secure_menu_access.login_name = pg_catalog.pg_roles.rolname) = true THEN 'ACTIVE' ELSE 'DORMANT' END) as ACCOUNT_STATUS from secure_menu_access order by 1"));
        staffControlsScrollPane.setViewportView(staffControlsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        listingPanel.add(staffControlsScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        staffListingPanel.add(listingPanel, gridBagConstraints);

        staffOperationsButtonPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        staffOperationsButtonPanel.add(spacerLabel, gridBagConstraints);

        updateLoginAccountBtn.setText("Update User Account");
        updateLoginAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLoginAccountBtnActionPerformed(evt);
            }
        });
        staffOperationsButtonPanel.add(updateLoginAccountBtn, new java.awt.GridBagConstraints());

        restoreAccountBtn.setText("Restore Account");
        restoreAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreAccountBtnActionPerformed(evt);
            }
        });
        staffOperationsButtonPanel.add(restoreAccountBtn, new java.awt.GridBagConstraints());

        refreshBtn.setText("Refresh Form");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        staffOperationsButtonPanel.add(refreshBtn, new java.awt.GridBagConstraints());

        closeFormBtn.setText("Close Form");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        staffOperationsButtonPanel.add(closeFormBtn, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        staffListingPanel.add(staffOperationsButtonPanel, gridBagConstraints);

        searchPanel.setLayout(new java.awt.GridBagLayout());

        selectAccountLbl.setText("Select User Account(Type logon account or employee number or name to serach)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchPanel.add(selectAccountLbl, gridBagConstraints);

        selectUserAccountTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                selectUserAccountTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchPanel.add(selectUserAccountTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        searchPanel.add(alterUserDatePicker, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        staffListingPanel.add(searchPanel, gridBagConstraints);

        groupsManagerPane.addTab("Staff Access Controls Panel", staffListingPanel);

        listofScheduledTasksPanel.setLayout(new java.awt.GridBagLayout());

        scheduledTasksScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("List if scheduled tasks"));

        scheduledTasksTable.setAutoCreateRowSorter(true);
        scheduledTasksTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT task_id, task_description, schedule_date, upper(user_name) as task_owner, task_creation_time, task_cancelled as cancel FROM maintenance_schedule order by 3"));
        scheduledTasksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scheduledTasksTableMouseClicked(evt);
            }
        });
        scheduledTasksScrollPane.setViewportView(scheduledTasksTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        listofScheduledTasksPanel.add(scheduledTasksScrollPane, gridBagConstraints);

        try {
            java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
            java.util.Date dateInstance = java.util.Calendar.getInstance().getTime();

            java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
            System.out.println(dateFormat.format(formattedDate));
            beginDate1 = new javax.swing.SpinnerDateModel(formattedDate, null, null,java.util.Calendar.DAY_OF_MONTH);

            beginDateSpinner1 = new javax.swing.JSpinner(beginDate1);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            headerPanel1.add(beginDateSpinner1, gridBagConstraints);

        } catch(java.text.ParseException parseExec) {
            parseExec.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), parseExec.getMessage());

        }
        headerPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Re-Schedule Maintenace Activities"));
        headerPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel12.setText("Re-Schedule Date/Time");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel1.add(jLabel12, gridBagConstraints);

        warnUsersForScheduledTaskChkbx1.setSelected(true);
        warnUsersForScheduledTaskChkbx1.setText("Warn users ahead of scheduled activity");
        warnUsersForScheduledTaskChkbx1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel1.add(warnUsersForScheduledTaskChkbx1, gridBagConstraints);

        updateScheduleTaskBtn.setText("Save altered maintenance schedule");
        updateScheduleTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateScheduleTaskBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel1.add(updateScheduleTaskBtn, gridBagConstraints);

        jScrollPane7.setBorder(javax.swing.BorderFactory.createTitledBorder("Rephrase the nature of the scheduled maintenance"));

        maintenanceTaskDescription1.setColumns(20);
        maintenanceTaskDescription1.setRows(5);
        jScrollPane7.setViewportView(maintenanceTaskDescription1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        headerPanel1.add(jScrollPane7, gridBagConstraints);

        taskIdLbl.setBorder(javax.swing.BorderFactory.createTitledBorder("Task ID"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        headerPanel1.add(taskIdLbl, gridBagConstraints);

        refreshTasksScheduleBtn.setText("Refresh task schedule");
        refreshTasksScheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTasksScheduleBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel1.add(refreshTasksScheduleBtn, gridBagConstraints);

        tasksCloseFormBtn.setText("Close form");
        tasksCloseFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tasksCloseFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        headerPanel1.add(tasksCloseFormBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        listofScheduledTasksPanel.add(headerPanel1, gridBagConstraints);

        groupsManagerPane.addTab("List of scheduled tasks", listofScheduledTasksPanel);

        userAdministrationAuitTrailPanel.setLayout(new java.awt.GridBagLayout());

        auditTrailTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT * FROM account_access_control ORDER BY 3")
        );
        auditTrailScrollPane.setViewportView(auditTrailTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        userAdministrationAuitTrailPanel.add(auditTrailScrollPane, gridBagConstraints);

        auditHeaderPanel.setLayout(new java.awt.GridBagLayout());

        auditTrailUserCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '--ALL--' UNION SELECT DISTINCT action_user FROM account_access_control ORDER BY 1")
        );
        auditTrailUserCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auditTrailUserCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        auditHeaderPanel.add(auditTrailUserCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        auditHeaderPanel.add(startDatePicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        auditHeaderPanel.add(endDatePicker, gridBagConstraints);

        auditTrailSysAdmCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '--ALL--' UNION SELECT DISTINCT user_account_affected FROM account_access_control ORDER BY 1"));
        auditTrailSysAdmCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auditTrailSysAdmCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        auditHeaderPanel.add(auditTrailSysAdmCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userAdministrationAuitTrailPanel.add(auditHeaderPanel, gridBagConstraints);

        auditButtonPanel.setLayout(new java.awt.GridBagLayout());

        auditTrailBtn.setText("Refresh audit trail report");
        auditTrailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auditTrailBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        auditButtonPanel.add(auditTrailBtn, gridBagConstraints);

        closeBtn.setText("Close form");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        auditButtonPanel.add(closeBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        auditButtonPanel.add(auditSpacerLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        userAdministrationAuitTrailPanel.add(auditButtonPanel, gridBagConstraints);

        groupsManagerPane.addTab("User Administration Audit Trail", userAdministrationAuitTrailPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(groupsManagerPane, gridBagConstraints);

        setBounds(0, 0, 750, 450);
    }// </editor-fold>//GEN-END:initComponents

    private void targetGroupCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetGroupCmbxActionPerformed

        java.lang.String[] listSet = null;

        java.sql.ResultSet rsetArray = null;

        java.lang.String[] listData = null;

        org.netbeans.lib.sql.NBRowSet nbRset;

        javax.swing.DefaultListModel dfListModel = new javax.swing.DefaultListModel();

        try {

            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rs = stmt.executeQuery("select menu_list from secure_menu_access_group where login_name = '" + targetGroupCmbx.getSelectedItem().toString() + "'  AND sys_name ilike 'Hospital_Main' ORDER BY menu_list");

            while (rs.next()) {

                java.sql.Array arraySet = rs.getArray(1);

                java.lang.Object[] listSetTest = (java.lang.Object[]) arraySet.getArray();

                if (!(listSetTest == null)) {

                    listSet = (java.lang.String[]) arraySet.getArray();

                    rsetArray = arraySet.getResultSet();

                } else {

                    listSet = null;

                }
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        if (listSet != null) {

            for (int i = 0; i < listSet.length; i++) {

                System.out.println(listSet[i].toString());

                dfListModel.addElement(listSet[i].toString());

            }
        } else {

            dfListModel = new javax.swing.DefaultListModel();

        }

        this.jList12.setModel(dfListModel);

        // TODO add your handling code here:
    }//GEN-LAST:event_targetGroupCmbxActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        java.util.Vector item2add = new java.util.Vector(5, 5);

        javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();

        listModel = (javax.swing.DefaultListModel) jList12.getModel();

        java.lang.Object[] selectedValues = null;

        java.util.Enumeration listEnum = listModel.elements();

        while (listEnum.hasMoreElements()) {

            item2add.addElement(listEnum.nextElement());

        }

        selectedValues = item2add.toArray();
        java.sql.Array arraySet = null;
        for (int k = 0; k < selectedValues.length; k++) {

            System.out.print("Values : " + "\t" + selectedValues[k] + "\t");
        }
        try {
            arraySet = connectDB.createArrayOf("varchar", selectedValues);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        java.sql.Array menuSqlArray = null;
        try {

            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.PreparedStatement pmstmt = connectDB.prepareStatement("UPDATE secure_menu_access_group SET menu_list = ? WHERE login_name = ? AND sys_name ilike 'hospital_main'");

            pmstmt.setArray(1, arraySet);
            System.out.println("Array posted !!!");
            pmstmt.setObject(2, targetGroupCmbx.getSelectedItem().toString());
            pmstmt.executeUpdate();

            java.sql.Statement pstmt1 = connectDB.createStatement();
            java.sql.PreparedStatement pmstmt1 = connectDB.prepareStatement("UPDATE secure_menu_access SET menu_list = ? WHERE group_name = ? AND sys_name ilike 'hospital_main'");
            pmstmt1.setArray(1, arraySet);
            pmstmt1.setObject(2, targetGroupCmbx.getSelectedItem().toString());
            pmstmt1.executeUpdate();

            System.out.println("----------------------------------------------------------------");

            java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                    + "           account_change_type, user_account_affected"
                    + "            )"
                    + "    VALUES (?, ?)");
            pstmtChangeControl.setString(1, "GROUP_ACCESS_RIGHTS_CHANGED");
            pstmtChangeControl.setString(2, targetGroupCmbx.getSelectedItem().toString());
            pstmtChangeControl.execute();

//            connectDB.commit();
//            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Successfuly updated access privileges for group : [ " + this.targetGroupCmbx.getSelectedItem().toString().toUpperCase() + " ]");
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                sql.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            sq.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        java.lang.Object[] listSel = null;

        listSel = jList12.getSelectedValues();

        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel) jList12.getModel();

        for (int i = 0; i < listSel.length; i++) {

            newdfListModel.removeElement(listSel[i]);

        }

        this.jList12.setModel(newdfListModel);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        java.lang.Object[] listSel = null;

        listSel = jList4.getSelectedValues();

        javax.swing.ListModel list12Model = jList12.getModel();

        int nofItemsList11 = list12Model.getSize();

        javax.swing.DefaultListModel newdfListModel = new javax.swing.DefaultListModel();

        for (int j = 0; j < list12Model.getSize(); j++) {

            newdfListModel.addElement(list12Model.getElementAt(j));

        }
        //        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel)jList11.getModel();

        for (int i = 0; i < listSel.length; i++) {

            if (!newdfListModel.contains(listSel[i])) {

                newdfListModel.addElement(listSel[i].toString());

            }
        }

        this.jList12.setModel(newdfListModel);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void registerNewGroupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerNewGroupBtnActionPerformed

        java.util.Vector item2add = new java.util.Vector(5, 5);

        javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();

        java.lang.Object[] selectedValues = null;

        java.util.Enumeration listEnum = listModel.elements();

        while (listEnum.hasMoreElements()) {

            item2add.addElement(listEnum.nextElement());

        }

        selectedValues = item2add.toArray();

        java.sql.Array arraySet = null;

        for (int k = 0; k < selectedValues.length; k++) {

            System.out.print("Values : " + "\t" + selectedValues[k] + "\t");
        }
        //   java.lang.String str = this.getSqlString(selectedValues);
        try {

            arraySet = connectDB.createArrayOf("varchar", selectedValues);

        } catch (SQLException ex) {

            ex.printStackTrace();

        }

        if (this.newGroupNameTxt.getText().equals("")) {

            javax.swing.JOptionPane.showMessageDialog(this, "Cannot create void group");

        } else {

            try {

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("CREATE GROUP " + newGroupNameTxt.getText().toLowerCase());
                pstmt.executeUpdate();

                removeGroupCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT groname FROM pg_catalog.pg_group ORDER BY groname"));
                targetGroupCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT groname FROM pg_catalog.pg_group ORDER BY groname"));

                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("INSERT INTO secure_menu_access_group values(lower(?),?,?,?,?,?)");

                java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("INSERT INTO secure_menu_access_group values(lower(?),?,?,?,?,?)");

                java.sql.PreparedStatement pstmt5 = connectDB.prepareStatement("INSERT INTO secure_menu_access_group values(lower(?),?,?,?,?,?)");

                java.sql.PreparedStatement pstmt6 = connectDB.prepareStatement("INSERT INTO secure_menu_access_group values(lower(?),?,?,?,?,?)");

                pstmt1.setObject(1, newGroupNameTxt.getText());
                pstmt1.setArray(2, arraySet);//Object(2, "{Exit}");

                pstmt1.setObject(3, "");
                pstmt1.setObject(4, "");
                pstmt1.setObject(5, "");
                pstmt1.setObject(6, "hospital_main");

                pstmt4.setObject(1, newGroupNameTxt.getText());
                pstmt4.setArray(2, arraySet);
                pstmt4.setObject(3, "");
                pstmt4.setObject(4, "");
                pstmt4.setObject(5, "");
                pstmt4.setObject(6, "hospital_payroll");

                pstmt5.setObject(1, newGroupNameTxt.getText());
                pstmt5.setArray(2, arraySet);
                pstmt5.setObject(3, "");
                pstmt5.setObject(4, "");
                pstmt5.setObject(5, "");
                pstmt5.setObject(6, "hospital_inventory");

                pstmt6.setObject(1, newGroupNameTxt.getText());
                pstmt6.setArray(2, arraySet);
                pstmt6.setObject(3, "");
                pstmt6.setObject(4, "");
                pstmt6.setObject(5, "");
                pstmt6.setObject(6, "hospital_hr");

                pstmt1.executeUpdate();

                pstmt4.executeUpdate();

                pstmt5.executeUpdate();

                pstmt6.executeUpdate();

                java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                        + "           account_change_type, user_account_affected"
                        + "            )"
                        + "    VALUES (?, ?)");
                pstmtChangeControl.setString(1, "GROUP_CREATION");
                pstmtChangeControl.setString(2, newGroupNameTxt.getText());
                pstmtChangeControl.execute();

            } catch (java.sql.SQLException sq) {
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                System.out.println(sq.getMessage());
                // sq.printStackTrace();
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_registerNewGroupBtnActionPerformed

    private void dropGroupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropGroupBtnActionPerformed

        try {

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("DROP GROUP " + removeGroupCmbx.getSelectedItem().toString());

            // pstmt.setString(1,removeGroupCmbx.getSelectedItem().toString());
            pstmt.executeUpdate();

            java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                    + "           account_change_type, user_account_affected"
                    + "            )"
                    + "    VALUES (?, ?)");
            pstmtChangeControl.setString(1, "GROUP_DROPPED");
            pstmtChangeControl.setString(2, removeGroupCmbx.getSelectedItem().toString());
            pstmtChangeControl.execute();

            removeGroupCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT groname FROM pg_catalog.pg_group ORDER BY groname"));

        } catch (java.sql.SQLException sqlEx) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getMessage());

        }

// TODO add your handling code here:
    }//GEN-LAST:event_dropGroupBtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        try {

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE secure_menu_access SET menu_list = (SELECT menu_list FROM secure_menu_access WHERE login_name = ? AND sys_name = 'hospital_main') WHERE login_name = ? AND sys_name = 'hospital_main'");

            pstmt.setString(1, accountNameCmbx.getSelectedItem().toString());

            pstmt.setString(2, targetAccountNameCmbx.getSelectedItem().toString());

            pstmt.executeUpdate();

            java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                    + "           account_change_type, user_account_affected"
                    + "            )"
                    + "    VALUES (?, ?)");
            pstmtChangeControl.setString(1, "ACCESS_RIGHTS_CHANGED");
            pstmtChangeControl.setString(2, targetAccountNameCmbx.getSelectedItem().toString());
            pstmtChangeControl.execute();

            javax.swing.JOptionPane.showMessageDialog(this, "Successfully updated the system access profile for user : [ " + targetAccountNameCmbx.getSelectedItem().toString().toUpperCase() + " ]");

        } catch (java.sql.SQLException sqlEx) {

            sqlEx.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, sqlEx.getMessage());

        }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void targetAccountNameCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetAccountNameCmbxActionPerformed

        java.lang.String[] listSet = null;

        java.sql.ResultSet rsetArray = null;

        java.lang.String[] listData = null;

        org.netbeans.lib.sql.NBRowSet nbRset;

        javax.swing.DefaultListModel dfListModel = new javax.swing.DefaultListModel();

        //org.netbeans.lib.sql.models.ListModel list11Model = new org.netbeans.lib.sql.models.ListModel();
        //this.jList11.setModel(list11Model.);
/*
         * try {
         *
         * java.lang.Class.forName("org.postgresql.Driver");
         *
         * } catch(java.lang.ClassNotFoundException cnfExec) {
         *
         * javax.swing.JOptionPane.showMessageDialog(this,
         * cnfExec.getMessage());
         *
         * }
         */
        try {

            //          java.sql.Connection cn = java.sql.DriverManager.getConnection("jdbc:postgresql://192.168.0.100:5432/purchase","postgres", "pilsiner");
            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rs = stmt.executeQuery("select menu_list from secure_menu_access where login_name = '" + targetAccountNameCmbx.getSelectedItem().toString() + "'");

            while (rs.next()) {

                java.sql.Array arraySet = rs.getArray(1);

                java.lang.Object[] listSetTest = (java.lang.Object[]) arraySet.getArray();

                if (!(listSetTest == null)) {

                    listSet = (java.lang.String[]) arraySet.getArray();

                    rsetArray = arraySet.getResultSet();

                } else {

                    listSet = null;

                }
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        if (listSet != null) {

            for (int i = 0; i < listSet.length; i++) {

                System.out.println(listSet[i].toString());

                dfListModel.addElement(listSet[i].toString());

            }
        } else {

            dfListModel = new javax.swing.DefaultListModel();

        }

        /*
         * try {
         *
         * while(rsetArray.next()) {
         *
         * dfListModel.addElement(rsetArray.getObject(1).toString());
         *
         * }
         *
         *
         *
         * } catch(java.sql.SQLException SQLExec) {
         *
         * javax.swing.JOptionPane.showMessageDialog(this,
         * SQLExec.getMessage());
         *
         * }
         *
         * //while(rsetArray.next()) {
         */
        this.jList11.setModel(dfListModel);

        //        jList11.setModel(new org.netbeans.lib.sql.models.ListModel (crset3, "item_desc", null, null, null));
        // Add your handling code here:
    }//GEN-LAST:event_targetAccountNameCmbxActionPerformed

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed

        try {

            this.crsetdataccess.execute();

        } catch (java.sql.SQLException SqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, SqlExec.getMessage());

        }

        // Add your handling code here:
    }//GEN-LAST:event_refreshbtnActionPerformed

    private void revokebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revokebtnActionPerformed

        java.util.Calendar caled = java.util.Calendar.getInstance();

        java.util.Date date = caled.getTime();

        java.lang.String strDate = date.toLocaleString();

        java.lang.Object[] access_denied = jList3.getSelectedValues();

        if (access_denied.length < 1) {

            javax.swing.JOptionPane.showMessageDialog(this, "There must be aleast one priviledge selected!");

        } else {

            for (int j = 0; j < access_denied.length; j++) {

                try {

                    java.sql.Statement stmt_deny = connectDB.createStatement();

                    stmt_deny.executeUpdate("REVOKE " + access_denied[j].toString() + " ON " + jComboBox411.getSelectedItem().toString() + " FROM " + jComboBox42.getSelectedItem().toString());

                } catch (java.sql.SQLException SQLexec) {

                    javax.swing.JOptionPane.showMessageDialog(this, SQLexec.getMessage());

                }

            }

            this.jLabel8.setText("Access privileges updated on : " + strDate);
        }

        // Add your handling code here:
    }//GEN-LAST:event_revokebtnActionPerformed

    private void assignbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignbtnActionPerformed

        java.util.Calendar caled = java.util.Calendar.getInstance();

        java.util.Date date = caled.getTime();

        java.lang.String strDate = date.toLocaleString();

        java.lang.Object[] access_allowed = jList2.getSelectedValues();

        if (access_allowed.length < 1) {

            javax.swing.JOptionPane.showMessageDialog(this, "There must be aleast one priviledge selected!");

        } else {

            for (int j = 0; j < access_allowed.length; j++) {

                try {

                    java.sql.Statement stmt_allowed = connectDB.createStatement();

                    stmt_allowed.executeUpdate("GRANT " + access_allowed[j].toString() + " ON " + jComboBox41.getSelectedItem().toString() + " TO " + jComboBox4.getSelectedItem().toString());

                } catch (java.sql.SQLException SQLexec) {

                    javax.swing.JOptionPane.showMessageDialog(this, SQLexec.getMessage());

                }

            }

            this.jLabel8.setText("Access privileges updated on : " + strDate);
        }

        // Add your handling code here:
    }//GEN-LAST:event_assignbtnActionPerformed

    private void closebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtnActionPerformed

        this.dispose();

        // Add your handling code here:
    }//GEN-LAST:event_closebtnActionPerformed

    private void jButton3011ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3011ActionPerformed

        java.lang.String user2del = this.jComboBox2.getSelectedItem().toString();

        try {
            //  java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");

            //    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("DROP USER " + user2del);
            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("DELETE FROM secure_menu_access WHERE login_name = '" + user2del + "'");

            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("DELETE FROM secure_passwd WHERE login_name = '" + user2del + "'");

            pstmt1.executeUpdate();

            pstmt2.executeUpdate();

            pstmt1.close();

            pstmt2.close();

            //              pstmt.executeUpdate();
            this.crset1.execute();

            this.crset2.execute();

            this.crset3.execute();
            //           jLabel2.setForeground(java.awt.Color.blue);
            //           jLabel2.setText("Insert successful");
            pstmt1.executeUpdate();
            /*
             * jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,
             * "select usename from pg_user where usename !='postgres' "));
             *
             * jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,
             * "select usename from pg_user where usename !='postgres' "));
             *
             * jComboBox12.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,
             * "select usename from pg_user where usename !='postgres' "));
             */

            java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                    + "           account_change_type, user_account_affected"
                    + "            )"
                    + "    VALUES (?, ?)");
            pstmtChangeControl.setString(1, "DEREGISTER_USER");
            pstmtChangeControl.setString(2, logonNameTxt.getText());
            pstmtChangeControl.execute();
            //connectDB.commit();
            // connectDB.setAutoCommit(true);

            com.afrisoftech.lib.SecuritySettings.setUserAccessControl(connectDB, logonNameTxt.getText());
            jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

            accountNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

            targetAccountNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

            jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

            jComboBox42.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());
            // sq.printStackTrace();
        }

        // Add your handling code here:
    }//GEN-LAST:event_jButton3011ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        java.lang.Object[] listSel = null;

        listSel = jList11.getSelectedValues();

        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel) jList11.getModel();

        for (int i = 0; i < listSel.length; i++) {

            newdfListModel.removeElement(listSel[i]);

        }

        this.jList11.setModel(newdfListModel);
        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        java.lang.Object[] listSel = null;

        listSel = jList1.getSelectedValues();

        javax.swing.ListModel list11Model = jList11.getModel();

        int nofItemsList11 = list11Model.getSize();

        javax.swing.DefaultListModel newdfListModel = new javax.swing.DefaultListModel();

        for (int j = 0; j < list11Model.getSize(); j++) {

            newdfListModel.addElement(list11Model.getElementAt(j));

        }
        //        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel)jList11.getModel();

        for (int i = 0; i < listSel.length; i++) {

            if (!newdfListModel.contains(listSel[i])) {

                newdfListModel.addElement(listSel[i].toString());

            }
        }

        this.jList11.setModel(newdfListModel);

        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void accountNameCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountNameCmbxActionPerformed

        java.lang.String[] listSet = null;

        java.sql.ResultSet rsetArray = null;

        java.lang.String[] listData = null;

        org.netbeans.lib.sql.NBRowSet nbRset;

        javax.swing.DefaultListModel dfListModel = new javax.swing.DefaultListModel();

        try {

            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rs = stmt.executeQuery("select menu_list from secure_menu_access where login_name = '" + accountNameCmbx.getSelectedItem().toString() + "'  AND sys_name ilike 'Hospital_Main' ORDER BY menu_list");

            while (rs.next()) {

                java.sql.Array arraySet = rs.getArray(1);

                java.lang.Object[] listSetTest = (java.lang.Object[]) arraySet.getArray();

                if (!(listSetTest == null)) {

                    listSet = (java.lang.String[]) arraySet.getArray();

                    rsetArray = arraySet.getResultSet();

                } else {

                    listSet = null;

                }
            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        if (listSet != null) {

            for (int i = 0; i < listSet.length; i++) {

                System.out.println(listSet[i].toString());

                dfListModel.addElement(listSet[i].toString());

            }
        } else {

            dfListModel = new javax.swing.DefaultListModel();

        }

        this.jList11.setModel(dfListModel);

        try {

            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rs = stmt.executeQuery("select f_name,l_name,department from secure_menu_access where login_name = '" + accountNameCmbx.getSelectedItem().toString() + "'");

            while (rs.next()) {
                jTextField1.setText(rs.getObject(1).toString() + " " + rs.getObject(2).toString());
                jTextField11.setText(rs.getObject(3).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }

        // Add your handling code here:
    }//GEN-LAST:event_accountNameCmbxActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        /*
         * try { java.lang.Class.forName("org.postgresql.Driver"); }catch
         * (java.lang.ClassNotFoundException sl){
         * System.out.println(sl.getMessage()); }
         *
         * try { java.sql.Connection con =
         * java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/insurance","postgres","pilsiner");
         *
         * java.lang.Object[] lists = null; lists = jList1.getSelectedValues();
         * java.lang.String[] list_str = null; // list_str = lists.toString();
         * for (int i = 0; i < lists.length; i++){ java.sql.PreparedStatement
         * pstmt = con.prepareStatement("insert into ab values(?)"); // for (int
         * i = 0; i < anArray.length; i++){
         *
         * // System.out.println(lists[i].toString()); // list_str =
         * lists[i].toString();
         *
         *
         * pstmt.setObject(1,lists[i].toString());
         * //pstmt.setString(9,jComboBox13.getSelectedItem().toString());
         *
         * pstmt.executeUpdate(); } } catch(java.sql.SQLException sq){
         * javax.swing.JOptionPane.showMessageDialog(this,"ERROR: "+
         * sq.getMessage(),"Error
         * Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
         *
         * System.out.println(sq.getMessage());
         *
         * }
         */   // Add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        java.util.Vector item2add = new java.util.Vector(5, 5);

        javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();

        listModel = (javax.swing.DefaultListModel) jList11.getModel();

        java.lang.Object[] selectedValues = null;

        java.util.Enumeration listEnum = listModel.elements();

        while (listEnum.hasMoreElements()) {

            item2add.addElement(listEnum.nextElement());

        }

        selectedValues = item2add.toArray();
        java.sql.Array arraySet = null;
        for (int k = 0; k < selectedValues.length; k++) {

            System.out.print("Values : " + "\t" + selectedValues[k] + "\t");
        }
        //java.lang.String str = this.getSqlString(selectedValues);
        System.out.print("Values1 : " + "\t" + selectedValues + "\t");
        try {

            arraySet = connectDB.createArrayOf("varchar", selectedValues);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

//        str = "{"+str+"}";
        java.sql.Array menuSqlArray = null;
        try {
            //connectDB.setAutoCommit(false);
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.PreparedStatement pmstmt = connectDB.prepareStatement("UPDATE secure_menu_access SET menu_list = ? WHERE login_name = ? AND sys_name ilike 'hospital_main'");

            //pmstmt.setArray(1, new java.sql.Array())
            pmstmt.setArray(1, arraySet);
            System.out.println("Array posted !!!");
//            pmstmt.setObject(1,"{"+str+"}");

            pmstmt.setObject(2, accountNameCmbx.getSelectedItem().toString());
            pmstmt.executeUpdate();

            System.out.println("----------------------------------------------------------------");

            java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                    + "           account_change_type, user_account_affected"
                    + "            )"
                    + "    VALUES (?, ?)");
            pstmtChangeControl.setString(1, "ACCESS_RIGHTS_CHANGED");
            pstmtChangeControl.setString(2, accountNameCmbx.getSelectedItem().toString());
            pstmtChangeControl.execute();
            //connectDB.commit();
            //connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Successfuly updated access privileges for user : [ " + this.accountNameCmbx.getSelectedItem().toString().toUpperCase() + " ]");
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                sql.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            sq.printStackTrace();
        }

        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton20221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20221ActionPerformed
        /*
         * jTextField58221.setText(""); jTextField50221.setText("");
         * jTextField53221.setText(""); jTextField49221.setText("");
         * jTextField6021.setText(""); // jTextField4821.setText("");
         * jTextField1.setText(""); jTextField54121.setText(""); //
         * jTextField5721.setText(""); jTextField56121.setText("");
         */
        // Add your handling code here:
    }//GEN-LAST:event_jButton20221ActionPerformed

    private void jButton15221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15221ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jButton15221ActionPerformed

    private void jButton252ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton252ActionPerformed
        setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton252ActionPerformed

    private void jButton202ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton202ActionPerformed
        jTextField2.setText("");
        //  jTextField3.setText("");
        jTextField5412.setText("");
        this.jComboBox3.setSelectedItem(null);
        this.jComboBox2.setSelectedItem(null);

        logonNameTxt.setText("");
        this.newPasswordField.setText("");
        this.newRetypedPasswordField.setText("");

        // Add your handling code here:
    }//GEN-LAST:event_jButton202ActionPerformed

    private void jButton301ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton301ActionPerformed

        if (newPasswordField.getPassword().length > 7 && newRetypedPasswordField.getPassword().length > 7) {

            if (this.newPasswordField.getText().equals(this.newRetypedPasswordField.getText())) {

                java.lang.String[] listSet = {};

                java.sql.ResultSet rsetArray = null;

                java.lang.String[] listData = {};

                java.sql.Array arraySet = null;

                java.sql.Array arraySet1 = null;

                java.sql.Array arraySet2 = null;

                java.sql.Array arraySet3 = null;

                org.netbeans.lib.sql.NBRowSet nbRset;

                javax.swing.DefaultListModel dfListModel = new javax.swing.DefaultListModel();

                java.util.Vector item2add = new java.util.Vector(5, 5);

                javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();

                java.lang.Object[] selectedValues = null;

                java.util.Enumeration listEnum = listModel.elements();

                while (listEnum.hasMoreElements()) {

                    item2add.addElement(listEnum.nextElement());

                }

                selectedValues = item2add.toArray();

                for (int k = 0; k < selectedValues.length; k++) {

                    System.out.print("Values : " + "\t" + selectedValues[k] + "\t");
                }
                try {

                    arraySet = connectDB.createArrayOf("varchar", selectedValues);

                } catch (SQLException ex) {

                    ex.printStackTrace();

                }

                if (this.logonNameTxt.getText().equals("")) {

                    javax.swing.JOptionPane.showMessageDialog(this, "Cannot create void username");

                } else {
                    java.sql.Savepoint registerSavePoint = null;
                    try {

                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");

                        java.sql.Statement stmt = connectDB.createStatement();

                        java.sql.ResultSet rs = stmt.executeQuery("SELECT menu_list from secure_menu_access_group WHERE login_name = '" + removeGroupCmbx2.getSelectedItem().toString() + "'  AND sys_name ilike 'Hospital_Main' ORDER BY menu_list");

                        while (rs.next()) {

                            arraySet = rs.getArray(1);

                        }

                        java.sql.Statement stmt1 = connectDB.createStatement();

                        java.sql.ResultSet rs1 = stmt1.executeQuery("SELECT menu_list from secure_menu_access_group WHERE login_name = '" + removeGroupCmbx2.getSelectedItem().toString() + "'  AND sys_name ilike 'hospital_payroll' ORDER BY menu_list");

                        while (rs1.next()) {

                            arraySet1 = rs1.getArray(1);

                        }

                        java.sql.Statement stmt2 = connectDB.createStatement();

                        java.sql.ResultSet rs2 = stmt2.executeQuery("SELECT menu_list from secure_menu_access_group WHERE login_name = '" + removeGroupCmbx2.getSelectedItem().toString() + "'  AND sys_name ilike 'hospital_inventory' ORDER BY menu_list");

                        while (rs2.next()) {

                            arraySet2 = rs2.getArray(1);

                        }

                        java.sql.Statement stmt3 = connectDB.createStatement();

                        java.sql.ResultSet rs3 = stmt3.executeQuery("SELECT menu_list from secure_menu_access_group WHERE login_name = '" + removeGroupCmbx2.getSelectedItem().toString() + "'  AND sys_name ilike 'hospital_hr' ORDER BY menu_list");

                        while (rs3.next()) {

                            arraySet3 = rs3.getArray(1);

                        }

                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("CREATE USER " + logonNameTxt.getText() + " WITH PASSWORD '" + newPasswordField.getText() + "' CREATEROLE CREATEDB");

                        pstmt.execute();

                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("INSERT INTO secure_menu_access(login_name, menu_list, f_name, l_name, department, sys_name, group_name) VALUES (lower(?),?,?,?,?,?,?)");

                        java.sql.PreparedStatement pstmt4 = connectDB.prepareStatement("INSERT INTO secure_menu_access(login_name, menu_list, f_name, l_name, department, sys_name, group_name) VALUES (lower(?),?,?,?,?,?,?)");

                        java.sql.PreparedStatement pstmt5 = connectDB.prepareStatement("INSERT INTO secure_menu_access(login_name, menu_list, f_name, l_name,department, sys_name, group_name) VALUES (lower(?),?,?,?,?,?,?)");

                        java.sql.PreparedStatement pstmt6 = connectDB.prepareStatement("INSERT INTO secure_menu_access(login_name, menu_list, f_name, l_name, department, sys_name, group_name) VALUES (lower(?),?,?,?,?,?,?)");

                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("INSERT INTO secure_passwd values(lower(?),?,?,?,?,?)");

                        // java.sql.PreparedStatement pstmt3 = connectDB.prepareStatement("GRANT SELECT ON secure_passwd TO " + jTextField582.getText());
                        pstmt1.setObject(1, logonNameTxt.getText());
                        pstmt1.setArray(2, arraySet);
                        pstmt1.setObject(3, jTextField2.getText());
                        pstmt1.setObject(4, jTextField5412.getText());
                        pstmt1.setObject(5, jComboBox3.getSelectedItem().toString());
                        pstmt1.setObject(6, "hospital_main");
                        pstmt1.setObject(7, removeGroupCmbx2.getSelectedItem().toString());

                        pstmt4.setObject(1, logonNameTxt.getText());
                        pstmt4.setArray(2, arraySet1);
                        pstmt4.setObject(3, jTextField2.getText());
                        pstmt4.setObject(4, jTextField5412.getText());
                        pstmt4.setObject(5, jComboBox3.getSelectedItem().toString());
                        pstmt4.setObject(6, "hospital_payroll");
                        pstmt4.setObject(7, removeGroupCmbx2.getSelectedItem().toString());

                        pstmt5.setObject(1, logonNameTxt.getText());
                        pstmt5.setArray(2, arraySet2);
                        pstmt5.setObject(3, jTextField2.getText());
                        pstmt5.setObject(4, jTextField5412.getText());
                        pstmt5.setObject(5, jComboBox3.getSelectedItem().toString());
                        pstmt5.setObject(6, "hospital_inventory");
                        pstmt5.setObject(7, removeGroupCmbx2.getSelectedItem().toString());

                        pstmt6.setObject(1, logonNameTxt.getText());
                        pstmt6.setArray(2, arraySet3);
                        pstmt6.setObject(3, jTextField2.getText());
                        pstmt6.setObject(4, jTextField5412.getText());
                        pstmt6.setObject(5, jComboBox3.getSelectedItem().toString());
                        pstmt6.setObject(6, "hospital_hr");
                        pstmt6.setObject(7, removeGroupCmbx2.getSelectedItem().toString());

                        pstmt2.setObject(1, "P0001");
                        pstmt2.setObject(2, logonNameTxt.getText());
                        pstmt2.setObject(3, "jmenubar1");
                        pstmt2.setObject(4, "hospital_main");
                        pstmt2.setObject(5, "exitmnit");
                        pstmt2.setBoolean(6, java.lang.Boolean.TRUE);

                        //    pstmt.executeUpdate();
                        pstmt1.executeUpdate();

                        pstmt2.executeUpdate();

                        //pstmt3.executeUpdate();
                        pstmt4.executeUpdate();

                        pstmt5.executeUpdate();

                        pstmt6.executeUpdate();

                        jComboBox2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

                        accountNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

                        targetAccountNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

                        jComboBox4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

                        jComboBox42.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select usename from pg_user where usename !='postgres' "));

                        java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                                + "           account_change_type, user_account_affected"
                                + "            )"
                                + "    VALUES (?, ?)");
                        pstmtChangeControl.setString(1, "ACCOUNT_CREATION");
                        pstmtChangeControl.setString(2, logonNameTxt.getText());
                        pstmtChangeControl.execute();
                        connectDB.commit();
                        connectDB.setAutoCommit(true);

                        com.afrisoftech.lib.SecuritySettings.setUserAccessControl(connectDB, logonNameTxt.getText());

                        javax.swing.JOptionPane.showMessageDialog(this, "Successfully created new user : [" + logonNameTxt.getText() + "]");

                    } catch (java.lang.Exception sq) {
                        sq.printStackTrace();
                        //               }catch(java.sql.SQLException sq){
                        try {
                            connectDB.rollback(registerSavePoint);
                            System.out.println("Rolling back to save point at cashpoint");
                        } catch (java.sql.SQLException sql) {
                            sql.printStackTrace();
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }

                }
            } else {

                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "New password must be confirmed by an identical entry on the Retyped password entry.");

            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Please note that the password MUST be atleast 8 characters.");
        }

        // Add your handling code here:
    }//GEN-LAST:event_jButton301ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        try {
            //   jComboBox5.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT group_name FROM secure_menu_access"));
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT DISTINCT group_name FROM secure_menu_access WHERE login_name = '" + jComboBox6.getSelectedItem().toString() + "'");
            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                currentGroupTxt.setText(rset.getString(1));
            }
            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void changeUserGroupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeUserGroupBtnActionPerformed
        java.lang.String[] listSet = null;

        java.sql.ResultSet rsetArray = null;

        java.lang.String[] listData = null;

        java.sql.Array arraySet = null;

        java.sql.Array arraySet1 = null;

        java.sql.Array arraySet2 = null;

        java.sql.Array arraySet3 = null;

        org.netbeans.lib.sql.NBRowSet nbRset;

        javax.swing.DefaultListModel dfListModel = new javax.swing.DefaultListModel();

        java.util.Vector item2add = new java.util.Vector(5, 5);

        javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();

        java.lang.Object[] selectedValues = null;

        java.util.Enumeration listEnum = listModel.elements();

        while (listEnum.hasMoreElements()) {

            item2add.addElement(listEnum.nextElement());

        }

        selectedValues = item2add.toArray();

        for (int k = 0; k < selectedValues.length; k++) {

            System.out.print("Values : " + "\t" + selectedValues[k] + "\t");
        }
        try {

            arraySet = connectDB.createArrayOf("varchar", selectedValues);

        } catch (SQLException ex) {

            ex.printStackTrace();

        }
        try {

            arraySet = connectDB.createArrayOf("varchar", selectedValues);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        java.sql.Array menuSqlArray = null;
        try {

            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rs = stmt.executeQuery("SELECT menu_list from secure_menu_access_group WHERE login_name = '" + jComboBox5.getSelectedItem().toString() + "'  AND sys_name ilike 'Hospital_Main' ORDER BY menu_list");

            while (rs.next()) {

                arraySet = rs.getArray(1);

            }
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.PreparedStatement pmstmt = connectDB.prepareStatement("UPDATE secure_menu_access SET menu_list = ?, group_name = ?  WHERE login_name = ? AND sys_name ilike 'hospital_main'");

            pmstmt.setArray(1, arraySet);
            pmstmt.setObject(2, jComboBox5.getSelectedItem().toString());
            pmstmt.setObject(3, jComboBox6.getSelectedItem().toString());

            pmstmt.executeUpdate();

            System.out.println("----------------------------------------------------------------");
            java.sql.PreparedStatement pstmtChangeControl = connectDB.prepareStatement("INSERT INTO account_access_control("
                    + "           account_change_type, user_account_affected"
                    + "            )"
                    + "    VALUES (?, ?)");
            pstmtChangeControl.setString(1, "CHANGE_OF_USER_GROUP");
            pstmtChangeControl.setString(2, jComboBox6.getSelectedItem().toString());
            pstmtChangeControl.execute();
//            connectDB.commit();
//            connectDB.setAutoCommit(true);

//            com.afrisoftech.lib.SecuritySettings.setUserAccessControl(connectDB, logonNameTxt.getText());
//            connectDB.commit();
//            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Successfuly updated access privileges for user : [ " + this.jComboBox6.getSelectedItem().toString().toUpperCase() + " ]");
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                sql.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            sq.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_changeUserGroupBtnActionPerformed

    private void passwdControlCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwdControlCloseBtnActionPerformed

        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_passwdControlCloseBtnActionPerformed

    private void clearFormPaaswordPolicyBrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormPaaswordPolicyBrnActionPerformed

        initComponents();

        this.validate();
        // TODO add your handling code here:
    }//GEN-LAST:event_clearFormPaaswordPolicyBrnActionPerformed

    private void alphaNumericCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alphaNumericCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alphaNumericCheckBoxActionPerformed

    private void scheduleTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleTaskBtnActionPerformed

        java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat();

        simpleDateFormat.applyPattern("EEE MMM dd hh:mm:ss zzz yyyy");

        java.text.DateFormat dateFormat = SimpleDateFormat.getDateTimeInstance();

        System.out.println("Scheduled timestamp : [" + beginDateSpinner.getValue() + "]");
        try {
            java.sql.PreparedStatement pstmt;
            try {
                pstmt = connectDB.prepareStatement(""
                        + "    INSERT INTO maintenance_schedule("
                        + "    task_description, schedule_date)"
                        + "    VALUES (?, '" + new java.sql.Timestamp(simpleDateFormat.parse(beginDateSpinner.getValue().toString()).getTime()) + "')");
                pstmt.setString(1, maintenanceTaskDescription.getText());
                pstmt.execute();
                javax.swing.JOptionPane.showMessageDialog(this, "Maintenance schedule task registered successfully.");
            } catch (ParseException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                            ex.printStackTrace();             //Exceptions.printStackTrace(ex);
            }

            // pstmt.setTimestamp(2, new java.sql.Timestamp.);
            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_scheduleTaskBtnActionPerformed

    private void updateLoginAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLoginAccountBtnActionPerformed
        int k = javax.swing.JOptionPane.showInternalConfirmDialog(this, "ARE YOU SURE THAT YOU WANT TO DISABLE THE SELECTED ACCOUNT(S)?");
        if (k < 1) {
            for (int i = 0; i < staffControlsTbl.getRowCount(); i++) {
                if (Boolean.parseBoolean(staffControlsTbl.getValueAt(i, 3).toString())) {
                    java.sql.PreparedStatement pstmtUpdateUser;
                    try {
                        pstmtUpdateUser = connectDB.prepareStatement("ALTER ROLE " + staffControlsTbl.getValueAt(i, 0).toString().toLowerCase() + " NOLOGIN"
                                + "  NOCREATEDB"
                                + "   VALID UNTIL '1970-01-01 00:00:00'");
                        pstmtUpdateUser.execute();
                    } catch (SQLException ex) {
                        javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                                    ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                    }

                }
            }
            javax.swing.JOptionPane.showMessageDialog(this, "SELECTED USER ACCOUNT(S) HAVE BEEN DISABLED.");
            staffControlsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct upper(login_name) as login_name, upper(f_name||' '||l_name) as user_name, department, false as dormant_account, (CASE WHEN (SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE secure_menu_access.login_name = pg_catalog.pg_roles.rolname) = true THEN 'ACTIVE' ELSE 'DORMANT' END) as ACCOUNT_STATUS from secure_menu_access order by 1"));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_updateLoginAccountBtnActionPerformed

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        staffControlsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct upper(login_name) as login_name, upper(f_name||' '||l_name) as user_name, department, false as dormant_account, (CASE WHEN (SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE secure_menu_access.login_name = pg_catalog.pg_roles.rolname) = true THEN 'ACTIVE' ELSE 'DORMANT' END) as ACCOUNT_STATUS from secure_menu_access order by 1"));
// TODO add your handling code here:
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void restoreAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreAccountBtnActionPerformed
        int k = javax.swing.JOptionPane.showInternalConfirmDialog(this, "ARE YOU SURE THAT YOU WANT TO RESTORE THE SELECTED ACCOUNT(S)?");
        if (k < 1) {
            for (int i = 0; i < staffControlsTbl.getRowCount(); i++) {
                if (Boolean.parseBoolean(staffControlsTbl.getValueAt(i, 3).toString())) {
                    java.sql.PreparedStatement pstmtUpdateUser;
                    try {
                        pstmtUpdateUser = connectDB.prepareStatement("ALTER ROLE " + staffControlsTbl.getValueAt(i, 0).toString().toLowerCase() + " LOGIN"
                                + "  CREATEDB"
                                + "   VALID UNTIL '2030-12-31 00:00:00'");
                        pstmtUpdateUser.execute();
                    } catch (SQLException ex) {
                        javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                                    ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                    }

                }
            }
            javax.swing.JOptionPane.showMessageDialog(this, "SELECTED USER ACCOUNT(S) HAVE BEEN RESTORED.");
            staffControlsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct upper(login_name) as login_name, upper(f_name||' '||l_name) as user_name, department, false as dormant_account, (CASE WHEN (SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE secure_menu_access.login_name = pg_catalog.pg_roles.rolname) = true THEN 'ACTIVE' ELSE 'DORMANT' END) as ACCOUNT_STATUS from secure_menu_access order by 1"));
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_restoreAccountBtnActionPerformed

    private void selectUserAccountTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_selectUserAccountTxtCaretUpdate

        staffControlsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                + "distinct upper(login_name) as login_name, upper(f_name||' '||l_name) as user_name,"
                + " department, false as dormant_account, (CASE WHEN (SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE secure_menu_access.login_name = pg_catalog.pg_roles.rolname)"
                + " = true THEN 'ACTIVE' ELSE 'DORMANT' END) as ACCOUNT_STATUS  from secure_menu_access"
                + " WHERE login_name ilike '%" + selectUserAccountTxt.getText() + "%' or f_name||' '||l_name ilike '%" + selectUserAccountTxt.getText() + "%' order by 1"));

        // TODO add your handling code here:
    }//GEN-LAST:event_selectUserAccountTxtCaretUpdate

    private void saveAccessControlpolicyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAccessControlpolicyBtnActionPerformed

        try {
            int controlCount = 0;
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(*) FROM pb_password_control");
            while (rset.next()) {
                controlCount = rset.getInt(1);
            }
            if (controlCount < 1) {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO pb_password_control("
                        + "    password_legnth, password_expiry_period, password_aphanumeric "
                        + "    VALUES (?, ?, ?)");
                pstmt.setInt(1, java.lang.Integer.parseInt(daystoExpireTxt.getText()));
                pstmt.setInt(2, java.lang.Integer.parseInt(passwordLegnthTxt.getText()));
                if (this.anyCharacterCheckBox.isSelected()) {
                    pstmt.setBoolean(3, false);
                } else {
                    pstmt.setBoolean(3, true);
                }
                pstmt.execute();
            } else {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE pb_password_control "
                        + "    set password_legnth = ?, password_expiry_period = ?, password_aphanumeric = ?");
                pstmt.setInt(1, java.lang.Integer.parseInt(daystoExpireTxt.getText()));
                pstmt.setInt(2, java.lang.Integer.parseInt(passwordLegnthTxt.getText()));
                if (this.anyCharacterCheckBox.isSelected()) {
                    pstmt.setBoolean(3, false);
                } else {
                    pstmt.setBoolean(3, true);
                }
                pstmt.execute();
            }

            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_saveAccessControlpolicyBtnActionPerformed

    private void updateScheduleTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateScheduleTaskBtnActionPerformed

        java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat();

        simpleDateFormat.applyPattern("EEE MMM dd hh:mm:ss zzz yyyy");

        java.text.DateFormat dateFormat = SimpleDateFormat.getDateTimeInstance();

        System.out.println("Scheduled timestamp : [" + beginDateSpinner1.getValue() + "]");
        try {
            java.sql.PreparedStatement pstmt;
            try {
                pstmt = connectDB.prepareStatement(""
                        + "    UPDATE maintenance_schedule "
                        + "    SET task_description = ?, task_cancelled = ?, schedule_date = "
                        + "'" + new java.sql.Timestamp(simpleDateFormat.parse(beginDateSpinner1.getValue().toString()).getTime()) + "' WHERE task_id::varchar = ?");
                pstmt.setString(1, maintenanceTaskDescription1.getText());
                pstmt.setBoolean(2, Boolean.parseBoolean(scheduledTasksTable.getValueAt(scheduledTasksTable.getSelectedRow(), 5).toString()));
                pstmt.setString(3, taskIdLbl.getText());
                pstmt.execute();
                javax.swing.JOptionPane.showMessageDialog(this, "Maintenance schedule task updated successfully.");
                scheduledTasksTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,
                        "SELECT task_id, task_description, schedule_date, upper(user_name) as task_owner, "
                        + "task_creation_time, task_cancelled as cancel FROM maintenance_schedule order by 3"));
            } catch (ParseException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                            ex.printStackTrace();             //Exceptions.printStackTrace(ex);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_updateScheduleTaskBtnActionPerformed

    private void scheduledTasksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheduledTasksTableMouseClicked
        taskIdLbl.setText(scheduledTasksTable.getValueAt(scheduledTasksTable.getSelectedRow(), 0).toString());
        try {
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT schedule_date FROM maintenance_schedule WHERE task_id::varchar = ?");
            pstmt.setString(1, scheduledTasksTable.getValueAt(scheduledTasksTable.getSelectedRow(), 0).toString());
            java.sql.ResultSet rset = pstmt.executeQuery();
            while (rset.next()) {
                try {
                    java.text.DateFormat dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);
                    java.util.Date dateInstance = new java.util.Date(rset.getTimestamp(1).getTime());
                    java.util.Date formattedDate = dateFormat.parse(dateInstance.toLocaleString());
                    beginDate1 = new javax.swing.SpinnerDateModel(formattedDate, null, null, java.util.Calendar.DAY_OF_MONTH);
                    beginDateSpinner1.setModel(beginDate1);

                    formattedDate = dateFormat.parse(dateInstance.toLocaleString());
                    maintenanceTaskDescription1.setText(scheduledTasksTable.getValueAt(scheduledTasksTable.getSelectedRow(), 1).toString());
                } catch (ParseException ex) {
                                ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                }
            }
            // TODO add your handling code here:
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
                        ex.printStackTrace();             //Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_scheduledTasksTableMouseClicked

    private void refreshTasksScheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTasksScheduleBtnActionPerformed
        scheduledTasksTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,
                "SELECT task_id, task_description, schedule_date, upper(user_name) as task_owner, "
                + "task_creation_time, task_cancelled as cancel FROM maintenance_schedule order by 3"));
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshTasksScheduleBtnActionPerformed

    private void tasksCloseFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tasksCloseFormBtnActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_tasksCloseFormBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed

        this.dispose();

// TODO add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    private void auditTrailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auditTrailBtnActionPerformed
             auditTrailTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT * FROM account_access_control WHERE account_change_timestamp::date BETWEEN '"+startDatePicker.getDate()+"' AND '"+endDatePicker.getDate()+"' ORDER BY 3"));
        // TODO add your handling code here:
    }//GEN-LAST:event_auditTrailBtnActionPerformed

    private void auditTrailUserCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auditTrailUserCmbxActionPerformed

        if (auditTrailUserCmbx.getSelectedItem().toString().contains("--ALL--")) {
            auditTrailTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT * FROM account_access_control ORDER BY 3"));
        }else {
            auditTrailTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT * FROM account_access_control WHERE action_user ilike '"+auditTrailUserCmbx.getSelectedItem().toString()+"' ORDER BY 3"));

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_auditTrailUserCmbxActionPerformed

    private void auditTrailSysAdmCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auditTrailSysAdmCmbxActionPerformed

        if (auditTrailSysAdmCmbx.getSelectedItem().toString().contains("--ALL--")) {
            auditTrailTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT * FROM account_access_control ORDER BY 3"));
        }else {
            auditTrailTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT * FROM account_access_control WHERE user_account_affected ilike '"+auditTrailSysAdmCmbx.getSelectedItem().toString()+"' ORDER BY 3"));

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_auditTrailSysAdmCmbxActionPerformed

    public String getSqlString(java.lang.Object[] arrayfromJList) {

        java.lang.String strToArray = arrayfromJList[0].toString();

        for (int i = 1; i < arrayfromJList.length; i++) {

            strToArray = strToArray + ", " + arrayfromJList[i].toString();

        }

        System.out.println(strToArray);

        return strToArray;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accountAccessControlsPanel;
    private javax.swing.JComboBox accountNameCmbx;
    private javax.swing.JPanel activityDomainsPanel;
    private javax.swing.JCheckBox alphaNumericCheckBox;
    private com.afrisoftech.lib.DatePicker alterUserDatePicker;
    private javax.swing.JCheckBox anyCharacterCheckBox;
    private javax.swing.JPanel assignGroupMembersPanel;
    private javax.swing.JButton assignbtn;
    private javax.swing.JPanel auditButtonPanel;
    private javax.swing.JPanel auditHeaderPanel;
    private javax.swing.JLabel auditSpacerLabel;
    private javax.swing.JButton auditTrailBtn;
    private javax.swing.JScrollPane auditTrailScrollPane;
    private javax.swing.JComboBox auditTrailSysAdmCmbx;
    private javax.swing.JTable auditTrailTable;
    private javax.swing.JComboBox auditTrailUserCmbx;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton changeUserGroupBtn;
    private javax.swing.JButton clearFormPaaswordPolicyBrn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JButton closebtn;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private org.netbeans.lib.sql.NBCachedRowSet crsetdataccess;
    private org.netbeans.lib.sql.NBCachedRowSet crsetusertables;
    private javax.swing.JTextField currentGroupTxt;
    private javax.swing.JPanel dataaccessPane;
    private javax.swing.JTextField daystoExpireTxt;
    private javax.swing.JButton dropGroupBtn;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JPanel groupManagementPanel;
    private javax.swing.JTabbedPane groupsManagerPane;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel headerPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton202;
    private javax.swing.JButton jButton252;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton301;
    private javax.swing.JButton jButton3011;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox41;
    private javax.swing.JComboBox jComboBox411;
    private javax.swing.JComboBox jComboBox42;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel572;
    private javax.swing.JLabel jLabel582;
    private javax.swing.JLabel jLabel592;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel611;
    private javax.swing.JLabel jLabel612;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel622;
    private javax.swing.JLabel jLabel642;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList11;
    private javax.swing.JList jList12;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JList jList4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane31;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator71;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField5412;
    private javax.swing.JPanel listingPanel;
    private javax.swing.JPanel listofScheduledTasksPanel;
    private javax.swing.JTextField logonNameTxt;
    private javax.swing.JTextArea maintenanceTaskDescription;
    private javax.swing.JTextArea maintenanceTaskDescription1;
    private javax.swing.JPanel manageGroupsTabbedPane;
    private javax.swing.JLabel newGroupNameLbl;
    private javax.swing.JTextField newGroupNameTxt;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JPasswordField newRetypedPasswordField;
    private javax.swing.JButton passwdControlCloseBtn;
    private javax.swing.JTextField passwordLegnthTxt;
    private javax.swing.JLabel passwordsSpacelLabel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton refreshTasksScheduleBtn;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JPanel registerGroupPanel;
    private javax.swing.JButton registerNewGroupBtn;
    private javax.swing.JComboBox removeGroupCmbx;
    private javax.swing.JComboBox removeGroupCmbx2;
    private javax.swing.JPanel removeGroupPanel;
    private javax.swing.JButton restoreAccountBtn;
    private javax.swing.JButton revokebtn;
    private javax.swing.JButton saveAccessControlpolicyBtn;
    private javax.swing.JButton scheduleTaskBtn;
    private javax.swing.JScrollPane scheduledTasksScrollPane;
    private javax.swing.JTable scheduledTasksTable;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel selectAccountLbl;
    private javax.swing.JTextField selectUserAccountTxt;
    private javax.swing.JLabel spacerLabel;
    private javax.swing.JScrollPane staffControlsScrollPane;
    private javax.swing.JTable staffControlsTbl;
    private javax.swing.JPanel staffListingPanel;
    private javax.swing.JPanel staffOperationsButtonPanel;
    private com.afrisoftech.lib.DatePicker startDatePicker;
    private javax.swing.JComboBox targetAccountNameCmbx;
    private javax.swing.JComboBox targetGroupCmbx;
    private javax.swing.JLabel targetGroupLbl;
    private javax.swing.JLabel targetGroupLbl1;
    private javax.swing.JLabel taskIdLbl;
    private javax.swing.JButton tasksCloseFormBtn;
    private javax.swing.JButton updateLoginAccountBtn;
    private javax.swing.JButton updateScheduleTaskBtn;
    private javax.swing.JPanel userAdministrationAuitTrailPanel;
    private javax.swing.JPanel userRegistrationPanel;
    private javax.swing.JCheckBox warnUsersForScheduledTaskChkbx;
    private javax.swing.JCheckBox warnUsersForScheduledTaskChkbx1;
    // End of variables declaration//GEN-END:variables
}
