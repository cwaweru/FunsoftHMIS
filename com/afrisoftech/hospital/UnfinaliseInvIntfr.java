/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */
package com.afrisoftech.hospital;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author root
 */
public class UnfinaliseInvIntfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox2 = null;
    java.sql.Connection connectDB = null;
    com.afrisoftech.lib.DBObject dbObject;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public UnfinaliseInvIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        dbObject = new com.afrisoftech.lib.DBObject();

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new com.afrisoftech.dbadmin.JTable();
        jButton522 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel61 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        invoiceNumberTxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel6411 = new javax.swing.JPanel();
        searchButton21 = new javax.swing.JButton();
        schemeNameTxt = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        patientNameTxt = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        schemePayerTxt = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        patientNumberTxt = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        invoiceDateTxt = new javax.swing.JTextField();
        jLabel101 = new javax.swing.JLabel();
        debtorAccountNumberTxt = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        invoiceAmountTxt = new javax.swing.JTextField();
        transactionNumberTxt = new javax.swing.JTextField();
        visitIDTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton11 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });
        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setMnemonic('l');
        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Reinstating Inpatient Invoice");
        setPreferredSize(new java.awt.Dimension(650, 700));
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 4;
        getContentPane().add(jLabel5, gridBagConstraints);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel61MouseClicked(evt);
            }
        });
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Details"));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel31.setText("Invoice No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel31, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        invoiceNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(invoiceNumberTxt, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jPanel41, gridBagConstraints);

        jLabel12.setText("Scheme Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel12, gridBagConstraints);

        jPanel6411.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6411.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel6411.setLayout(new java.awt.GridBagLayout());

        searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton21.setToolTipText("Search");
        searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6411.add(searchButton21, gridBagConstraints);

        schemeNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6411.add(schemeNameTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel31.add(jPanel6411, gridBagConstraints);

        jLabel42.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel42, gridBagConstraints);

        patientNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(patientNameTxt, gridBagConstraints);

        jLabel71.setText("Scheme Payer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel71, gridBagConstraints);

        schemePayerTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel31.add(schemePayerTxt, gridBagConstraints);

        jLabel91.setText("Patient No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel91, gridBagConstraints);

        patientNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel31.add(patientNumberTxt, gridBagConstraints);

        jLabel81.setText("Invoice Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel81, gridBagConstraints);

        invoiceDateTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel31.add(invoiceDateTxt, gridBagConstraints);

        jLabel101.setText("Account No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel101, gridBagConstraints);

        debtorAccountNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(debtorAccountNumberTxt, gridBagConstraints);

        jLabel411.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel411, gridBagConstraints);

        invoiceAmountTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(invoiceAmountTxt, gridBagConstraints);

        transactionNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(transactionNumberTxt, gridBagConstraints);

        visitIDTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel31.add(visitIDTxt, gridBagConstraints);

        jLabel2.setText("Vist ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Transaction/Reference No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel31.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jPanel31, gridBagConstraints);
        jPanel31.getAccessibleContext().setAccessibleName("Unfinalizing an Invoice");

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jButton11.setMnemonic('O');
        jButton11.setText("Unfinalise Invoice");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton11, gridBagConstraints);

        jButton31.setMnemonic('R');
        jButton31.setText("Refresh");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton31, gridBagConstraints);

        jButton61.setMnemonic('r');
        jButton61.setText("Remove Row");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton61, gridBagConstraints);

        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton41, gridBagConstraints);

        jButton51.setMnemonic('h');
        jButton51.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jButton51, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel61.add(jPanel11, gridBagConstraints);

        jTabbedPane1.addTab("Unfinalizing an Invoice", jPanel61);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Unfinalizing an Invoice");

        setBounds(0, 0, 667, 295);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        this.invoiceNumberTxt.setText("");
        this.patientNameTxt.setText("");
//this.jTextField101.setText("");
//this.jTextField61.setText("");
        this.schemeNameTxt.setText("");
//this.jTextField41.setText("");
        this.invoiceAmountTxt.setText("");
//this.jTextField81.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        // this.tableModelTableChanged1();
        // Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jPanel61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel61MouseClicked
        //dd your handling code here:
    }//GEN-LAST:event_jPanel61MouseClicked

    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        int i = 0;
        double invoiceAmount = 0.00;
        // this.jTextField31.setText("");
        schemeNameTxt.setText("");
        debtorAccountNumberTxt.setText("");
        schemePayerTxt.setText("");
        // jTextField21.setText("");
        //  jTextField31.setText("");
        patientNameTxt.setText("");
        debtorAccountNumberTxt.setText("");

        String code = null;
        //jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
        patientNumberTxt.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 1).toString());
        invoiceNumberTxt.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        try {
            java.sql.PreparedStatement pstmtVisitID = connectDB.prepareStatement("SELECT DISTINCT visit_id FROM hp_patient_card WHERE invoice_no = ?");
            pstmtVisitID.setString(1, jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
            java.sql.ResultSet rsetVisitID = pstmtVisitID.executeQuery();
            while (rsetVisitID.next()) {
                visitIDTxt.setText(rsetVisitID.getString(1));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(UnfinaliseInvIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        // visitIDTxt.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());

        jSearchDialog22.dispose();
        try {

            java.sql.Statement stmts1 = connectDB.createStatement();
            java.sql.ResultSet rsets1 = stmts1.executeQuery("select date::date from hp_patient_card where invoice_no ='" + invoiceNumberTxt.getText() + "' order by date DESC LIMIT 1");
            while (rsets1.next()) {
                invoiceDateTxt.setText(rsets1.getObject(1).toString());
            }
            java.sql.Statement stmts = connectDB.createStatement();
            java.sql.ResultSet rsets = stmts.executeQuery("select sum(debit-credit) from ac_debtors where invoice_no ='" + invoiceNumberTxt.getText() + "'");
            while (rsets.next()) {
                invoiceAmount = rsets.getDouble(1);
            }
            System.out.println("the invoice amount " + invoiceAmount);
            if (invoiceAmount > 0.00) {
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance,item,reference_no from ac_debtors where invoice_no ='" + invoiceNumberTxt.getText() + "'");
                while (rset.next()) {
                    // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                    schemeNameTxt.setText(rset.getObject(1).toString());
                    debtorAccountNumberTxt.setText(rset.getObject(2).toString());
                    schemePayerTxt.setText(rset.getObject(3).toString());
                    invoiceAmountTxt.setText(rset.getObject(4).toString());
                    transactionNumberTxt.setText(rset.getObject(7).toString());
                    patientNameTxt.setText(rset.getObject(6).toString());

                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "This invoice cannot be unfinalised. Please consult the system administrator.");
//                java.sql.Statement stmt = connectDB.createStatement();
//                java.sql.ResultSet rset = stmt.executeQuery("select patient_name from hp_admission where patient_no ='" + patientNumberTxt.getText() + "'");
//                while (rset.next()) {
//
//                    schemeNameTxt.setText("");
//                    debtorAccountNumberTxt.setText("");
//                    schemePayerTxt.setText("");
//                    // jTextField21.setText("");
//                    // jTextField31.setText("");
//                    patientNameTxt.setText(rset.getObject(1).toString());
//
//                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        //   this.populateTable11(this.jTextField91.getText());

        jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked

    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        jSearchDialog22.dispose();// Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed

    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if (this.jTextField1132.getText().length() <= 4) {
            System.out.print("Nothing");
        } else {
            //  jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT invoice_no,admission_no as patient_no, date as invoice_date, dealer as scheme from ac_debtors  where invoice_no ilike '" + jTextField1132.getText() + "%' and debit > 0 order by invoice_no"));
            jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct invoice_no,patient_no,date as invoice_date,service as scheme from hp_patient_card where invoice_no ilike '" + jTextField1132.getText() + "%' group by 1 ,2,3,4  having sum(credit-debit) > 0 order by invoice_no asc "));
            jSearchScrollPane22.setViewportView(jSearchTable22);
            System.out.println("Cannot sort out");

        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton22Clicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton22Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.invoiceNumberTxt.getLocationOnScreen();

        jSearchDialog22.setSize(700, 200);

        jSearchDialog22.setLocation(point);

        jSearchDialog22.setVisible(true);
    }
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());

        String receiptNo = null;
        String actCode = null;
        String glCode = null;
        String bankAcc = null;
        String glCode1 = null;
        String bankAcc1 = null;
        String transNo = null;
        String payMode = null;
        String patCat = null;
        String patientAcc = null;
        String cardNo = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String actNames = null;
        String user = null;
        String actNames1 = null;
        String actCode1 = null;
        String invoiceNo = null;

        try {
            // connectDB.setAutoCommit(false);
            java.sql.Statement psg = connectDB.createStatement();
            java.sql.ResultSet rstg = psg.executeQuery("select initcap(current_user)");
            while (rstg.next()) {
                user = rstg.getObject(1).toString();
            }

            int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, user + ", Are you sure you'd like to Unfinalise Inv No: " + invoiceNumberTxt.getText() + " ?", "Caution before Unfinalising Invoice!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

            if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

                try {
                    connectDB.setAutoCommit(false);

                    //if(jCheckBox2.isSelected()){
                    java.sql.PreparedStatement pstmt221 = connectDB.prepareStatement("UPDATE HP_PATIENT_CARD SET REQUISITION_NO = INVOICE_NO WHERE PATIENT_NO = '" + patientNumberTxt.getText() + "' AND INVOICE_NO = '" + invoiceNumberTxt.getText() + "' ");
                    pstmt221.executeUpdate();
                    System.out.println("First Update");
                    java.sql.PreparedStatement pstmt2221 = connectDB.prepareStatement("UPDATE HP_PATIENT_CARD SET PAID = FALSE WHERE PATIENT_NO='" + patientNumberTxt.getText() + "' AND REQUISITION_NO = '" + invoiceNumberTxt.getText() + "' AND PAID = TRUE");
                    pstmt2221.executeUpdate();
                    System.out.println("Second Update");
                    /*
                     java.sql.PreparedStatement pstmt2223 = connectDB.prepareStatement("delete from ac_ledger WHERE PATIENT_NO ='"+patientNumberTxt.getText()+"' AND transaction_no='"+transactionNumberTxt.getText()+"' AND  SERVICE_type = 'Discount' and date='"+invoiceDateTxt.getText()+"'");
                     pstmt2223.executeUpdate();
                     System.out.println("Third Update");
                     java.sql.PreparedStatement pstmt2224 = connectDB.prepareStatement("DELETE FROM HP_PATIENT_CARD WHERE PATIENT_NO='"+patientNumberTxt.getText()+"' AND reference = '"+transactionNumberTxt.getText()+"' AND SERVICE ILIKE 'INVOICE' AND service ilike '%N.H.I.F%' or SERVICE ILIKE 'Discount%'");
                     pstmt2224.executeUpdate();
                     java.sql.PreparedStatement pstmt22241 = connectDB.prepareStatement("DELETE FROM HP_PATIENT_CARD WHERE PATIENT_NO='"+patientNumberTxt.getText()+"' AND reference = '"+transactionNumberTxt.getText()+"' AND SERVICE ILIKE 'INVOICE' AND service ilike '%NHIF%' or SERVICE ILIKE 'Discount%'");
                     pstmt22241.executeUpdate();
                     System.out.println("Fourth Update");
                     */
                    java.sql.PreparedStatement pstmt221111 = connectDB.prepareStatement("UPDATE HP_PATIENT_CARD SET INVOICE_NO = '-' WHERE PATIENT_NO='" + patientNumberTxt.getText() + "' AND REQUISITION_NO = '" + invoiceNumberTxt.getText() + "' and  debit>credit");
                    pstmt221111.executeUpdate();
                    
                    pstmt221111 = connectDB.prepareStatement("UPDATE HP_PATIENT_CARD SET INVOICE_NO = '-' where patient_no='" + patientNumberTxt.getText() + "'and invoice_no='" + invoiceNumberTxt.getText() + "'  and credit>debit and main_service not ilike 'invoice%'");
                    pstmt221111.executeUpdate();
                    
                    
                    System.out.println("Fifth Update");

                    java.sql.PreparedStatement pstmtz = connectDB.prepareStatement("UPDATE HP_ADMISSION SET CHECK_OUT = FALSE, DIAGNOSIS3=INVOICE_NO WHERE INVOICE_NO = '" + invoiceNumberTxt.getText() + "' AND PATIENT_NO = '" + patientNumberTxt.getText() + "' AND CHECK_OUT = TRUE");
                    pstmtz.executeUpdate();
                    System.out.println("Sixth Update");
                    //          for (int i = 0; i < schemeInvoicingTable.getRowCount(); i++) {
                    java.sql.Statement pss12 = connectDB.createStatement();
                    java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                    while (rsts11.next()) {
                        actCode = rsts11.getObject(1).toString();
                        actNames = rsts11.getObject(2).toString();
                    }
                    java.sql.PreparedStatement pstmtInvoices = connectDB.prepareStatement("SELECT DISTINCT account_no FROM ac_debtors WHERE invoice_no = ?");
                    pstmtInvoices.setString(1, this.invoiceNumberTxt.getText());
                    java.sql.ResultSet rsetInvoices = pstmtInvoices.executeQuery();
                    while (rsetInvoices.next()) {
                        System.out.println("DEALING WITH ACC/NO [" + rsetInvoices.getString(1) + "]");
                        boolean rebateType = false;
                        if (patientNameTxt.getText() != null) {
                            java.sql.PreparedStatement pstmtRT = connectDB.prepareStatement("SELECT rebate_type_invoicing FROM ac_schemes WHERE account_no = ?");
                            System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSELECT rebate_type_invoicing FROM ac_schemes WHERE account_no ='" + rsetInvoices.getString(1) + "'");
                            pstmtRT.setString(1, rsetInvoices.getString(1));// debtorAccountNumberTxt.getText());
                            java.sql.ResultSet rsetRT = pstmtRT.executeQuery();
                            while (rsetRT.next()) {
                                rebateType = rsetRT.getBoolean(1);
                            }
                        }
                        //    invoiceNo = com.afrisoftech.lib.InvoiceNumbers.getInvoiceNumber();
                        if (patientNameTxt.getText() != null) {
                            java.sql.Statement pss = connectDB.createStatement();
                            java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                            while (rss.next()) {
                                transNo = rss.getObject(1).toString();
                            }
                            double invoiceAmount = 0.00;
                            java.util.Date invoiceDate = null;
                            java.sql.PreparedStatement pstmtInvAmount = connectDB.prepareStatement("SELECT debit, date FROM ac_debtors WHERE invoice_no = ? AND account_no = ?");
                            pstmtInvAmount.setString(1, invoiceNumberTxt.getText());
                            pstmtInvAmount.setString(2, rsetInvoices.getString(1));
                            java.sql.ResultSet rsetInvAmount = pstmtInvAmount.executeQuery();
                            while (rsetInvAmount.next()) {
                                invoiceAmount = rsetInvAmount.getInt(1);
                                invoiceDate = rsetInvAmount.getDate(2);
                            }
                            // double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(billTable, 4);
                            String name = null;
                            String payer = null;
                            java.sql.Statement pss11h = connectDB.createStatement();
                            java.sql.ResultSet rsts1h = pss11h.executeQuery("SELECT scheme_name,payer_name,gl_code,gl_name FROM ac_schemes WHERE account_no = '" + rsetInvoices.getString(1) + "'");
                            while (rsts1h.next()) {
                                name = rsts1h.getObject(1).toString();
                                payer = rsts1h.getObject(2).toString();
                                actCode1 = rsts1h.getObject(3).toString();
                                actNames1 = rsts1h.getObject(4).toString();
                            }

                            java.sql.Statement pssq = connectDB.createStatement();
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            pstmt.setString(1, patientNumberTxt.getText());
                            pstmt.setObject(2, "Receipt");
                            pstmt.setString(3, "");
                            pstmt.setString(4, "Scheme");
                            pstmt.setString(5, transNo);
                            pstmt.setString(7, name);
                            pstmt.setString(6, "");
                            pstmt.setString(8, "");
                            pstmt.setString(9, payer);
                            pstmt.setDate(10, null);
                            pstmt.setString(11, "");
                            // pstmt.setDouble(13,java.lang.Double.valueOf(jTextField23.getText()));
                            pstmt.setDouble(12, invoiceAmount);
                            pstmt.setDouble(13, 0.00);
                            pstmt.setDate(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                            //  pstmt.setDate(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dischargeDatePicker.getDate()));
                            pstmt.setObject(15, actCode);
                            pstmt.setString(16, actNames1);// "Invoice");
                            pstmt.setDouble(17, 1.00);
                            pstmt.setObject(18, name);//schemeNameTxt.getText());
                            pstmt.setBoolean(19, true);
                            pstmt.setString(20, "Receipts");
                            pstmt.setBoolean(21, true);
                            pstmt.setString(22, actNames);
                            pstmt.setString(23, this.invoiceNumberTxt.getText());
                            pstmt.setString(24, user);
                            pstmt.setString(25, transNo);
                            pstmt.setString(26, "IP");
                            pstmt.setTimestamp(27, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt.setString(28, visitIDTxt.getText());
                            pstmt.setString(29, this.invoiceNumberTxt.getText());
                            pstmt.executeUpdate();

                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_debtors values(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?, ?,?,?,?,?,?, ?,?,?,?,?,?,?)");
                            pstmt2.setObject(1, actCode1);
                            pstmt2.setString(4, patientNumberTxt.getText());
                            pstmt2.setObject(3, patientNameTxt.getText());
                            pstmt2.setString(2, payer);
                            pstmt2.setString(5, name);
                            pstmt2.setString(6, "");
                            pstmt2.setObject(7, rsetInvoices.getString(1));
                            pstmt2.setString(8, "");
                            pstmt2.setString(9, "");
                            pstmt2.setString(10, patientNumberTxt.getText());
                            pstmt2.setString(11, transNo);
                            pstmt2.setString(12, "Raise Invoice");
                            // pstmt2.setDouble(13,java.lang.Double.valueOf(jTextField23.getText()));
                            pstmt2.setDouble(14, invoiceAmount);
                            pstmt2.setDouble(13, 0.00);
                            pstmt2.setDate(15, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                            //         pstmt2.setDate(15, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dischargeDatePicker.getDate()));
                            pstmt2.setObject(16, this.invoiceNumberTxt.getText());
                            pstmt2.setString(17, actNames1);
                            pstmt2.setBoolean(18, true);
                            pstmt2.setBoolean(19, true);
                            pstmt2.setString(20, user);
                            pstmt2.setString(21, "");
                            pstmt2.setDouble(22, invoiceAmount);
                            pstmt2.setBoolean(23, false);
                            pstmt2.setDouble(24, 0.00);
                            pstmt2.setObject(25, "");
                            pstmt2.setObject(26, null);
                            pstmt2.setBoolean(27, false);
                            pstmt2.setDouble(28, 0.00);
                            pstmt2.setObject(29, null);
                            pstmt2.setString(30, "");
                            pstmt2.setBoolean(31, false);
                            pstmt2.setDouble(32, 0.00);
                            pstmt2.setObject(33, null);
                            pstmt2.setString(34, "");
                            pstmt2.setString(35, rsetInvoices.getString(1));//debtorAccountNumberTxt.getText());
                            pstmt2.setString(36, null);
                            pstmt2.executeUpdate();

                            if (rebateType) {
                                Double nhifDiff = 0.00;
                                java.sql.PreparedStatement pstmtDiff = connectDB.prepareStatement("SELECT transaction_type, sum(debit-credit) FROM ac_ledger WHERE patient_no = '" + patientNumberTxt.getText() + "' and transaction_time::date = '" + invoiceDate + "'::date AND service_type ilike '% DIFF' and transaction_type ilike '% Rebate' group by 1");
                                java.sql.ResultSet rsetDiff = pstmtDiff.executeQuery();
                                while (rsetDiff.next()) {
                                    nhifDiff = rsetDiff.getDouble(2);
                                }
                                System.out.println("Entering rebate diff and amount = " + nhifDiff);
                                //Double nhifDiff = Double.parseDouble(netAmountTxt.getText()) - Double.parseDouble(schemeInvoicingTable.getValueAt(0, 2).toString());
                                if (nhifDiff != 0) {
                                    String diffCode = null;
                                    String diffDesc = null;
                                    java.sql.Statement pss11u = connectDB.createStatement();
                                    java.sql.ResultSet rsts1u = pss11u.executeQuery("SELECT code,activity FROM pb_activity WHERE activity_category ilike 'NH'"); //get the GL account code and description for rebate variance account
                                    while (rsts1u.next()) {
                                        diffCode = rsts1u.getObject(1).toString();
                                        diffDesc = rsts1u.getObject(2).toString();
                                    }
                                    java.sql.Statement pss1 = connectDB.createStatement();
                                    java.sql.ResultSet rss1 = pss.executeQuery("select nextval('transaction_no_seq')");
                                    while (rss1.next()) {
                                        transNo = rss1.getObject(1).toString();
                                    }
                                    java.sql.PreparedStatement pstmtp = connectDB.prepareStatement("INSERT INTO hp_patient_card VALUES(?,?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                    pstmtp.setString(1, patientNumberTxt.getText());
                                    pstmtp.setObject(2, name + " DIFF ");
                                    pstmtp.setString(3, patCat);
                                    pstmtp.setString(4, "SCHEME");
                                    pstmtp.setString(5, transNo);
                                    pstmtp.setString(7, name);
                                    pstmtp.setString(6, patientNumberTxt.getText());
                                    pstmtp.setString(8, name);//schemeNameTxt.getText());
                                    pstmtp.setString(9, name);//splsamuel   schemeNameTxt.getText());
                                    pstmtp.setDate(10, null);
                                    pstmtp.setString(11, "");
                                    if (nhifDiff > 0) {
                                        pstmtp.setDouble(13, 0.00);
                                        pstmtp.setDouble(12, nhifDiff);
                                    } else {
                                        pstmtp.setDouble(12, 0.00);
                                        pstmtp.setDouble(13, nhifDiff * -1);
                                    }
                                    pstmtp.setDate(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                                    // pstmtp.setDate(14, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dischargeDatePicker.getDate()));
                                    pstmtp.setObject(15, actCode);
                                    //      pstmtp.setObject(15, actCode);
                                    pstmtp.setString(16, actNames1);
                                    pstmtp.setDouble(17, 1);
                                    pstmtp.setObject(18, patientNameTxt.getText());
                                    pstmtp.setBoolean(19, true);
                                    pstmtp.setString(23, this.invoiceNumberTxt.getText());
                                    pstmtp.setString(20, "Remittance");
                                    pstmtp.setBoolean(21, false);
                                    pstmtp.setString(22, actNames);
                                    pstmtp.setString(24, user);
                                    pstmtp.setString(25, "-");
                                    pstmtp.setString(26, "IP");
                                    pstmtp.setTimestamp(27, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                                    pstmtp.setObject(28, visitIDTxt.getText());
                                    pstmtp.setString(29, this.invoiceNumberTxt.getText());
                                    pstmtp.executeUpdate();

                                    java.sql.PreparedStatement pstmt2x = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                    pstmt2x.setObject(1, diffCode);
                                    pstmt2x.setObject(2, diffDesc);
                                    pstmt2x.setString(3, patientNumberTxt.getText());
                                    pstmt2x.setString(4, patientNameTxt.getText());
                                    pstmt2x.setString(5, name + " DIFF ");
                                    pstmt2x.setString(6, "");
                                    pstmt2x.setString(7, "");
                                    pstmt2x.setString(10, "Scheme");
                                    pstmt2x.setString(9, "");
                                    pstmt2x.setString(8, "IP");
                                    pstmt2x.setString(11, "");
                                    pstmt2x.setString(12, "");
                                    pstmt2x.setString(13, "");
                                    pstmt2x.setString(14, name + " DIFF ");
                                    pstmt2x.setString(15, name+" Rebate");
                                    if (nhifDiff > 0) {
                                        pstmt2x.setDouble(16, 0.00);
                                        pstmt2x.setDouble(17, nhifDiff);
                                    } else {
                                        pstmt2x.setDouble(17, 0.00);
                                        pstmt2x.setDouble(16, nhifDiff * -1);
                                    }
                                    pstmt2x.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                                    //pstmt2x.setDate(18, com.afrisoftech.lib.SQLDateFormat.getSQLDate(dischargeDatePicker.getDate()));
                                    pstmt2x.setString(19, transNo);
                                    pstmt2x.setBoolean(20, false);
                                    pstmt2x.setBoolean(21, false);
                                    pstmt2x.setBoolean(22, false);
                                    pstmt2x.setString(23, user);
                                    pstmt2x.executeUpdate();
                                }
                            }
                        }

                    }

                    System.out.println("Update for receipts -- 1");
                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("UPDATE hp_patient_card set"
                            + " paid = false WHERE patient_no = '" + patientNumberTxt.getText() + "'"
                            + " AND visit_id = '" + visitIDTxt.getText() + "'"
                            + " ");
                    pstmt21.executeUpdate();

                    java.sql.PreparedStatement pstmtzq = connectDB.prepareStatement("UPDATE HP_ADMISSION SET INVOICE_NO = '-' WHERE DIAGNOSIS3  = '" + invoiceNumberTxt.getText() + "' AND PATIENT_NO = '" + invoiceNumberTxt.getText() + "' AND CHECK_OUT = FALSE");
                    //   pstmtzq.executeUpdate();
                    System.out.println("Seventh Update");
                    java.sql.PreparedStatement pstmtzqf = connectDB.prepareStatement("UPDATE  AC_DEBTORS SET dealer = 'cancelled Invoice',PROV_AMT =DEBIT,MEMBER_NO = DISPATCH_NO, DISPATCH_NO = '', TRANSACTION_TYPE = 'Invoice Reinstatement', DEBIT = 0, BALANCE = 0, account_no='cancelled inv' WHERE INVOICE_NO ='" + invoiceNumberTxt.getText() + "'  AND ADMISSION_NO = '" + patientNumberTxt.getText() + "' and account_no = '" + debtorAccountNumberTxt.getText() + "'");
                    //  pstmtzqf.executeUpdate();
                    //  System.out.println("Eighth Update");
                    
                    
                    connectDB.commit();
                    connectDB.setAutoCommit(true);

                    javax.swing.JOptionPane.showMessageDialog(this, "Invoice Unfinalised Successfully ", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                } catch (java.sql.SQLException sq) {
                    sq.printStackTrace();
                    try {
                        connectDB.rollback();
                    } catch (java.sql.SQLException sql) {
                        sql.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                }
            }

        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                sql.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            // System.out.println(ex.getMessage());
            //javax.swing.JOptionPane.showMessageDialog(this, "Please click on the data entry table(s) and \n press the TAB key once then try saving again." , "Error",javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    //    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
       /* java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
     int i = jTable1.getSelectedRow();
        
     if (selectedGuaran != null) {
        
     try {
     java.sql.Statement pstmt = connectDB.createStatement();
     java.sql.ResultSet rs = pstmt.executeQuery("select item_code,units from st_stock_item where description = '"+selectedGuaran+"'");
     while (rs.next())
     jTable1.setValueAt(rs.getObject(1),i,1);
     jTable1.setValueAt(rs.getObject(2),i,2);
     } catch(java.sql.SQLException sqlex){
     System.out.println(sqlex.getMessage());
        
     }
     */
    //}
    //   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField debtorAccountNumberTxt;
    private javax.swing.JTextField invoiceAmountTxt;
    private javax.swing.JTextField invoiceDateTxt;
    private javax.swing.JTextField invoiceNumberTxt;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton61;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel6411;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JTextField schemeNameTxt;
    private javax.swing.JTextField schemePayerTxt;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton21;
    private javax.swing.JTextField transactionNumberTxt;
    private javax.swing.JTextField visitIDTxt;
    // End of variables declaration//GEN-END:variables
}
