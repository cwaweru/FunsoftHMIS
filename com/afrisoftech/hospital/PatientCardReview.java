/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospital;

import java.sql.SQLException;

/**
 *
 * @author samuel
 */
public class PatientCardReview extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    /**
     * Creates new form PatientPreviousVisit
     */
    public PatientCardReview(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        connectDB = connDb;
        pConnDB = pconnDB;
        initComponents();
        this.setSize(700, 500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel6 = new javax.swing.JPanel();
        patNoTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        opCbx = new javax.swing.JCheckBox();
        ipCbx = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        transTbl = new com.afrisoftech.dbadmin.JTable();
        jCheckBox5 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        visitsTbl = new com.afrisoftech.dbadmin.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        catCbx = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Patient Card review");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 37));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        patNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(patNoTxt, gridBagConstraints);

        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel6, gridBagConstraints);

        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel9, gridBagConstraints);

        buttonGroup2.add(jCheckBox2);
        jCheckBox2.setText("Search by Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jCheckBox2, gridBagConstraints);

        buttonGroup1.add(opCbx);
        opCbx.setSelected(true);
        opCbx.setText("Outpatients");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(opCbx, gridBagConstraints);

        buttonGroup1.add(ipCbx);
        ipCbx.setText("Inpatient");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(ipCbx, gridBagConstraints);

        transTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(transTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        buttonGroup2.add(jCheckBox5);
        jCheckBox5.setSelected(true);
        jCheckBox5.setText("Search by No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jCheckBox5, gridBagConstraints);

        visitsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        visitsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitsTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(visitsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane2, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField1, gridBagConstraints);

        jLabel1.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabel1, gridBagConstraints);

        catCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "History/Complaints", "Examination", "Provisional Diagnosis" }));
        catCbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Category"));
        catCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catCbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(catCbx, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("View Patient Card");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jButton1, gridBagConstraints);

        jButton2.setText("Update Notes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate

        if (this.opCbx.isSelected() && this.jCheckBox5.isSelected()) {

            if (jTextField111.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,address,tel_no,patient_race as unit_no from hp_patient_register where patient_no ILIKE '" + jTextField111.getText() + "%' OR patient_race ilike '" + jTextField111.getText() + "%'  order by second_name"));

                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);

            }
        } else {
            if (this.opCbx.isSelected() && this.jCheckBox2.isSelected()) {
                if (jTextField111.getCaretPosition() < 3) {
                    System.out.println("Nothing");
                } else {
                    jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, address,tel_no,patient_race as unit_no  from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '" + jTextField111.getText() + "%' order by second_name"));

                    jSearchTable1.setShowHorizontalLines(false);
                    jSearchScrollPane1.setViewportView(jSearchTable1);

                }
            }
        }
        // }else{
        if ((this.ipCbx.isSelected()) && this.jCheckBox5.isSelected()) {

            if (jTextField111.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                System.out.println("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,address,tel_no,"
                        + "(SELECT ward  FROM hp_admission WHERE patient_no ILIKE '%" + jTextField111.getText() + "%' and discharge=false order by date_admitted desc) as ward"
                        + " from hp_inpatient_register where patient_no ILIKE '%" + jTextField111.getText() + "%' order by second_name");

                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                        + "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name,address,tel_no,"
                        + "(SELECT ward  FROM hp_admission WHERE patient_no ILIKE '%" + jTextField111.getText() + "%'  order by date_admitted desc limit 1) as ward"
                        + " from hp_inpatient_register where patient_no ILIKE '%" + jTextField111.getText() + "%' order by second_name"));

                jSearchTable1.setShowHorizontalLines(false);
                jSearchScrollPane1.setViewportView(jSearchTable1);

            }
        } else if ((this.ipCbx.isSelected()) && this.jCheckBox2.isSelected()) {
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                    + "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, address,tel_no ,\n"
                    + "(SELECT ward  FROM hp_admission WHERE patient_name ILIKE (second_name||' '||first_name||' '||last_name)   order by date_admitted desc) as ward\n"
                    + "FROM hp_inpatient_register WHERE second_name||' '||first_name||' '||last_name ILIKE '%" + jTextField111.getText() + "%' ORDER BY second_name"));

            jSearchTable1.setShowHorizontalLines(false);
            jSearchScrollPane1.setViewportView(jSearchTable1);

        }

        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked

        jTextField1.setText("");
        int i = 0;
        int j = 0;
        for (int k = 0; k < transTbl.getRowCount(); k++) {
            for (int r = 0; r < transTbl.getColumnCount(); r++) {
                transTbl.getModel().setValueAt(null, k, r);
            }
        }

        for (int k = 0; k < visitsTbl.getRowCount(); k++) {
            for (int r = 0; r < visitsTbl.getColumnCount(); r++) {
                visitsTbl.getModel().setValueAt(null, k, r);
            }
        }
        this.jSearchDialog1.dispose();
        patNoTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jTextField1.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());

        if (this.opCbx.isSelected()) {
            String MNo = patNoTxt.getText();
            visitsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT date FROM hp_patient_visit where patient_no = '" + MNo + "' UNION SELECT date_admitted::date as date FROM hp_admission WHERE patient_no= '" + MNo + "' AND patient_no IS NOT NULL UNION SELECT distinct date::date as date FROM hp_lab_results WHERE patient_no = '" + MNo + "'  UNION SELECT distinct trans_date::date as date FROM pb_doctors_request WHERE patient_no = '" + MNo + "' UNION SELECT distinct date::date as date FROM hp_signs_record WHERE patient_no = '" + MNo + "'  order by date DESC "));
        } else {
            visitsTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct date_admitted ,visit_id,ward from hp_admission where patient_no='" + patNoTxt.getText() + "'  order by 1"));
        }

        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog1.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void visitsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitsTblMouseClicked
        if (!catCbx.getSelectedItem().toString().equalsIgnoreCase("-")) {
            loadVisitData();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_visitsTblMouseClicked

    private void loadVisitData() {
        String memNo = patNoTxt.getText();
        String date = visitsTbl.getValueAt(visitsTbl.getSelectedRow(), 0).toString();
        if (catCbx.getSelectedItem().toString().equalsIgnoreCase("History/Complaints")) {
            //'' as notes, extra_oral, intra_oral, pdhx, pmhx, familysocial, review, treatmentplan
            transTbl.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT oid ,input_date::TIME(0) , INITCAP(comments) as notes, INITCAP(doctor) AS username ,cancelled ,cancel_reason FROM hp_clinical_results  where patient_no = '" + memNo + "' and date  = '" + date + "' AND comments IS NOT NULL  AND comments != '' AND comments NOT ILIKE 'null%'"));
        }

    }

    private void catCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catCbxActionPerformed
        if (!catCbx.getSelectedItem().toString().equalsIgnoreCase("-")) {
            if (visitsTbl.getSelectionModel().isSelectionEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Select the date before selecting the category!", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            } else {
                loadVisitData();
            }
        } else {
            transTbl.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{}
            ));

        }

// TODO add your handling code here:
    }//GEN-LAST:event_catCbxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (patNoTxt.getText().length() > 0) {
            java.util.Date begindate = null;
//            }
            com.afrisoftech.reports.PatientCardPdf policyReport = new com.afrisoftech.reports.PatientCardPdf();//connectDB, transdatePicker.getDate(), transdatePicker.getDate(),nameNoTxt.getText());
//
            policyReport.PatientCardPdf(connectDB, begindate, begindate, patNoTxt.getText(), false);

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "You MUST select a patient file in order to view the card");
        }// Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            java.sql.PreparedStatement pstmt311 = null;
            String oid = "-";
            int notesColumn = 0;
            int cancelColum = 0;
            for (int i = 0; i < transTbl.getRowCount(); i++) {
                oid = transTbl.getValueAt(i, 0).toString();

                if (catCbx.getSelectedItem().toString().equalsIgnoreCase("History/Complaints")) {
                    notesColumn = 5;
                    cancelColum = 4;
                    if (Boolean.valueOf(transTbl.getValueAt(i, cancelColum).toString())) {
                        pstmt311 = connectDB.prepareStatement("UPDATE hp_clinical_results SET cancelled = true,cancel_user = current_user,cancel_time = now(), cancel_reason = '" + transTbl.getValueAt(i, notesColumn).toString() + "' where oid = '" + oid + "'  ");
                        pstmt311.executeUpdate();
                    }
                }
            }
            
             javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Update Done Successfully " , "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchButton11Clicked() {

        System.out.println("Showing dialog");
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.patNoTxt.getLocationOnScreen();
        jSearchDialog1.setSize(400, 200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> catCbx;
    private javax.swing.JCheckBox ipCbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JCheckBox opCbx;
    private javax.swing.JTextField patNoTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JTable transTbl;
    private javax.swing.JTable visitsTbl;
    // End of variables declaration//GEN-END:variables
}
