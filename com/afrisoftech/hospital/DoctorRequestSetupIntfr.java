/*
 * offintfr.java
 *
 * Created on August 13, 2002, 1:55 AM
 */
package com.afrisoftech.hospital;

/**
 *
 * @author root
 */
public class DoctorRequestSetupIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form offintfr
     */
    private javax.swing.JComboBox cmbox;
    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public DoctorRequestSetupIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        searchFieldTxt = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        try{
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 =  new com.afrisoftech.dbadmin.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        try{
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }
        savelink = new javax.swing.JButton();
        editlink = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        clearlink = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2link = new com.afrisoftech.dbadmin.JTable();
        removelink = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        deletelink = new javax.swing.JButton();
        requestsCMBX = new javax.swing.JComboBox();

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        searchFieldTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchFieldTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(searchFieldTxt, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Close");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Clerking Services Setup");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('O');
        jButton1.setText("Save");
        jButton1.setToolTipText("Click here to enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('E');
        jButton2.setText("Edit");
        jButton2.setToolTipText("click to edit&update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton2, gridBagConstraints);

        jButton3.setMnemonic('C');
        jButton3.setText("Close");
        jButton3.setToolTipText("click to close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('l');
        jButton4.setText("Clear");
        jButton4.setToolTipText("Click to clear fields");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jSeparator1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Utopia", 3, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel4, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Set Wards here."));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Category Code", "categry Name", "Rev .Desc", "Rev. Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPanel1, gridBagConstraints);

        jButton5.setMnemonic('R');
        jButton5.setText("RemoveRow");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jButton5, gridBagConstraints);

        jLabel1.setText("Source");
        jPanel2.add(jLabel1, new java.awt.GridBagConstraints());

        jButton6.setMnemonic('d');
        jButton6.setText("Delete");
        jButton6.setToolTipText("Click to clear fields");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton6, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '--ALL--' As clinics UNION SELECT clinics FROM pb_clinics ORDER BY 1")
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox1, gridBagConstraints);

        jTabbedPane1.addTab("Register Request Category", jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        savelink.setMnemonic('O');
        savelink.setText("Save");
        savelink.setToolTipText("Click here to enter data");
        savelink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savelinkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(savelink, gridBagConstraints);

        editlink.setMnemonic('E');
        editlink.setText("Edit");
        editlink.setToolTipText("click to edit&update");
        editlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editlinkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(editlink, gridBagConstraints);

        jButton9.setMnemonic('C');
        jButton9.setText("Close");
        jButton9.setToolTipText("click to close");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton9, gridBagConstraints);

        clearlink.setMnemonic('l');
        clearlink.setText("Clear");
        clearlink.setToolTipText("Click to clear fields");
        clearlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearlinkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(clearlink, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jSeparator2, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Utopia", 3, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel5, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Set Wards here."));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        jTable2link.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Request Name", "Request Code", "gl Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2link.setShowHorizontalLines(false);
        jTable2link.setSurrendersFocusOnKeystroke(true);
        jTable2link.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2linkMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2link);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jPanel4, gridBagConstraints);

        removelink.setMnemonic('R');
        removelink.setText("RemoveRow");
        removelink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removelinkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(removelink, gridBagConstraints);

        jLabel2.setText("Reequest Category");
        jPanel3.add(jLabel2, new java.awt.GridBagConstraints());

        deletelink.setMnemonic('d');
        deletelink.setText("Delete");
        deletelink.setToolTipText("Click to clear fields");
        deletelink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletelinkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(deletelink, gridBagConstraints);

        requestsCMBX.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select concat(request_code,'-',request_name,'-',department) as Category FROM clerking_requests_category order by 1 asc ;"));
        requestsCMBX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                requestsCMBXItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(requestsCMBX, gridBagConstraints);

        jTabbedPane1.addTab("Link Procedures To Theatres", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 719, 350);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        this.jSearchDialog1.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked

        if (jTable1.getSelectedColumn() == 2) {
            int i = jSearchTable1.getSelectedRow();

            int j = jTable1.getSelectedColumn();

            jTable1.setValueAt(jSearchTable1.getValueAt(i, 1), jTable1.getSelectedRow(), 2);
            jTable1.setValueAt(jSearchTable1.getValueAt(i, 0), jTable1.getSelectedRow(), 3);

            jSearchDialog1.dispose();
            for (int l = 0; l < jSearchTable1.getRowCount(); l++) {
                for (int m = 0; m < jSearchTable1.getColumnCount(); m++) {
                    jSearchTable1.setValueAt(null, l, m);
                }
            }
        } else if (jTable2link.getSelectedColumn() == 0) {
            int i = jSearchTable1.getSelectedRow();

            int j = jTable2link.getSelectedColumn();

            jTable2link.setValueAt(jSearchTable1.getValueAt(i, 0), jTable2link.getSelectedRow(), 0);
            jTable2link.setValueAt(jSearchTable1.getValueAt(i, 1), jTable2link.getSelectedRow(), 1);
            jTable2link.setValueAt(jSearchTable1.getValueAt(i, 2), jTable2link.getSelectedRow(), 2);

            jSearchDialog1.dispose();
            for (int l = 0; l < jSearchTable1.getRowCount(); l++) {
                for (int m = 0; m < jSearchTable1.getColumnCount(); m++) {
                    jSearchTable1.setValueAt(null, l, m);
                }
            }
        }
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void searchFieldTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchFieldTxtCaretUpdate

        if (jTable1.getSelectedColumn() == 2) {

            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select code,activity FROM pb_activity WHERE activity ILIKE '" + searchFieldTxt.getText() + "%' and activity_category ilike 'I%' order by activity"));
            //select * from subheads
            jSearchScrollPane1.setViewportView(jSearchTable1);
            System.out.println("Cannot sort out");
        } else if (jTable2link.getSelectedColumn() == 0) {

            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                    + "select service_type,code,gl_account from pb_operating_parameters where service_type ilike '%" + searchFieldTxt.getText() + "%' and main_service ilike (SELECT revdesc FROM clerking_requests_category where request_name = '"+requestsCMBX.getSelectedItem().toString()+"') order by 1 asc"));
           //            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
           //         + "select service_type,code,gl_account from pb_operating_parameters where service_type ilike '%" + searchFieldTxt.getText() + "%' and main_service ilike 'Lab Fee%'  order by 1 asc"));
            //select * from subheads
            jSearchScrollPane1.setViewportView(jSearchTable1);
            System.out.println("Cannot sort out");
        }
    }//GEN-LAST:event_searchFieldTxtCaretUpdate

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if ((jTable1.getSelectedColumn() == 3) || (jTable1.getSelectedColumn() == 2)) {
            System.out.println("Showing dialog");
            java.awt.Point point = jTable1.getLocationOnScreen();
            jSearchDialog1.setSize(400, 200);
            jSearchDialog1.setLocation(point);
            jSearchDialog1.setVisible(true);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            connectDB.setAutoCommit(false);

            java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("DELETE FROM hp_theatre WHERE theatre_code= '" + jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString() + "'");
            pstmt31.executeUpdate();

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("DELETE FROM theatre_procedures WHERE theatre_code= '" + jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString() + "'");
            pstmt.executeUpdate();

            connectDB.commit();
            connectDB.setAutoCommit(true);

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        }
        jButton2ActionPerformed(evt);// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.setValueAt(null, jTable1.getSelectedRow(), i);
        }
// Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        int i = jTable1.getSelectedRow();

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
            jButton1.setLabel("Save");
        }
// Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++) {
            for (int r = 0; r < jTable1.getColumnCount(); r++) {
                jTable1.getModel().setValueAt(null, k, r);
            }
        }

        jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                + "SELECT request_code, request_name, department, revdesc, revcode  FROM clerking_requests_category;"));
        jButton1.setLabel("Update");        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void savelinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savelinkActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);

        System.out.println(datenowSql.toString());
        // java.lang.Object name = "false";
        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < jTable2link.getRowCount(); i++) {
                if (jTable2link.getModel().getValueAt(i, 0) != null) {

                    if (savelink.getText().equalsIgnoreCase("Update")) {
                        java.sql.PreparedStatement pstmt311 = connectDB.prepareStatement(""
                                + "UPDATE clerking_requests   SET request_category=?, request=?, req_code=?, revcode=? WHERE oid='" + requestsCMBX.getSelectedItem().toString().trim() + "' and  ");
                        pstmt311.setObject(1, requestsCMBX.getSelectedItem().toString().trim());
                        pstmt311.setObject(2, jTable2link.getValueAt(i, 0).toString());
                        pstmt311.setObject(3, jTable2link.getValueAt(i, 1).toString());
                        pstmt311.setObject(4, jTable2link.getValueAt(i, 2).toString());

                        pstmt311.executeUpdate();
                        jComboBox1.setEnabled(false);
                    } else {

                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement(""
                                + "INSERT INTO clerking_requests(request_category, request, req_code, revcode)\n"
                                + "    VALUES (?, ?, ?, ?);");

                        pstmt.setObject(1, requestsCMBX.getSelectedItem().toString());

                        pstmt.setObject(2, jTable2link.getValueAt(i, 0).toString());

                        pstmt.setObject(3, jTable2link.getValueAt(i, 1).toString());

                        pstmt.setObject(4, jTable2link.getValueAt(i, 2).toString());

                        pstmt.executeUpdate();
                    }
                }
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);

            // jLabel4.setForeground(java.awt.Color.blue);
            javax.swing.JOptionPane.showMessageDialog(this, "Insert Successful", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            for (int k = 0; k < jTable2link.getRowCount(); k++) {
                for (int r = 0; r < jTable2link.getColumnCount(); r++) {
                    jTable2link.getModel().setValueAt(null, k, r);
                }
            }
        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            jLabel5.setForeground(java.awt.Color.red);
            jLabel5.setText("Sorry.insert not successful");
        }
    }//GEN-LAST:event_savelinkActionPerformed

    private void editlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editlinkActionPerformed
        for (int k = 0; k < jTable2link.getRowCount(); k++) {
            for (int r = 0; r < jTable2link.getColumnCount(); r++) {
                jTable2link.getModel().setValueAt(null, k, r);
            }
        }

        jTable2link.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
                + "SELECT oid,request_category, request, req_code, revcode  FROM clerking_requests where request_category='" + requestsCMBX.getSelectedItem().toString().trim() + "'"));
        savelink.setLabel("Update");
    }//GEN-LAST:event_editlinkActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void clearlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearlinkActionPerformed
        for (int k = 0; k < jTable2link.getRowCount(); k++) {
            for (int r = 0; r < jTable2link.getColumnCount(); r++) {
                jTable2link.getModel().setValueAt(null, k, r);
            }
            savelink.setLabel("Save");
        }
    }//GEN-LAST:event_clearlinkActionPerformed

    private void jTable2linkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2linkMouseClicked
        if (jTable2link.getSelectedColumn() == 0) {

            System.out.println("Showing dialog");
            java.awt.Point point = jTable2link.getLocationOnScreen();
            jSearchDialog1.setSize(400, 200);
            jSearchDialog1.setLocation(point);
            jSearchDialog1.setVisible(true);
        }

    }//GEN-LAST:event_jTable2linkMouseClicked

    private void removelinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removelinkActionPerformed
        for (int i = 0; i < jTable2link.getColumnCount(); i++) {
            jTable2link.setValueAt(null, jTable2link.getSelectedRow(), i);
        }
    }//GEN-LAST:event_removelinkActionPerformed

    private void deletelinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletelinkActionPerformed
        try {
            connectDB.setAutoCommit(false);

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("DELETE FROM theatre_procedures WHERE theatre_code= '" + jTable2link.getModel().getValueAt(jTable2link.getSelectedRow(), 2).toString() + "'");
            pstmt.executeUpdate();

            connectDB.commit();
            connectDB.setAutoCommit(true);

        } catch (java.sql.SQLException sq) {
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        }
        editlinkActionPerformed(evt);
    }//GEN-LAST:event_deletelinkActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jComboBox1.getSelectedIndex() > 0) {
            java.util.Calendar calendar = java.util.Calendar.getInstance();

            long dateNow = calendar.getTimeInMillis();

            java.sql.Date datenowSql = new java.sql.Date(dateNow);

            System.out.println(datenowSql.toString());
            // java.lang.Object name = "false";
            try {
                connectDB.setAutoCommit(false);

                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    if (jTable1.getModel().getValueAt(i, 0) != null) {

                        if (jButton1.getText().equalsIgnoreCase("Update")) {
                            java.sql.PreparedStatement pstmt311 = connectDB.prepareStatement(""
                                    + "UPDATE clerking_requests_category"
                                    + "   SET request_code=?, request_name=?,  revdesc=?, revcode=? "
                                    + " WHERE request_code  = '" + jTable1.getValueAt(i, 0).toString() + "'");
                            pstmt311.setObject(1, jTable1.getValueAt(i, 0).toString());
                            pstmt311.setObject(2, jTable1.getValueAt(i, 1).toString());
                            pstmt311.setObject(3, jTable1.getValueAt(i, 2).toString());
                            pstmt311.setObject(4, jTable1.getValueAt(i, 3).toString());
                            //pstmt311.setObject(5,jComboBox1.getSelectedItem());

                            pstmt311.executeUpdate();
                            jComboBox1.setEnabled(false);
                        } else {

                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO clerking_requests_category(\n"
                                    + "            request_code, request_name,   revdesc, revcode,department)\n"
                                    + "    VALUES (?, ?, ?, ?,?);");

                            if (jTable1.getModel().getValueAt(i, 0) == null) {
                                javax.swing.JOptionPane.showMessageDialog(this, "Enter Categry Code", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            } else {
                                pstmt.setObject(1, jTable1.getValueAt(i, 0).toString());
                            }
                            if (jTable1.getModel().getValueAt(i, 1) == null) {
                                javax.swing.JOptionPane.showMessageDialog(this, "Enter Category Name", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            } else {
                                pstmt.setObject(2, jTable1.getValueAt(i, 1).toString());
                            }

                            if (jTable1.getModel().getValueAt(i, 3) == null) {
                                javax.swing.JOptionPane.showMessageDialog(this, "Enter Rev Desc", "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                            } else {
                                pstmt.setObject(3, jTable1.getValueAt(i, 2).toString());
                            }

                            pstmt.setObject(4, jTable1.getValueAt(i, 3).toString());
                            pstmt.setObject(5, jComboBox1.getSelectedItem());

                            pstmt.executeUpdate();
                        }
                    }
                }
                connectDB.commit();
                connectDB.setAutoCommit(true);

                // jLabel4.setForeground(java.awt.Color.blue);
                javax.swing.JOptionPane.showMessageDialog(this, "Insert Successful", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                for (int k = 0; k < jTable1.getRowCount(); k++) {
                    for (int r = 0; r < jTable1.getColumnCount(); r++) {
                        jTable1.getModel().setValueAt(null, k, r);
                    }
                }
            } catch (java.sql.SQLException sq) {
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                jLabel4.setForeground(java.awt.Color.red);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Select Source ", "Confirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }
         //   jLabel4.setText("Sorry.insert not successful");
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void requestsCMBXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_requestsCMBXItemStateChanged
//        jTable2link.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, ""
//                + "SELECT  theatre_code, theatre_name, procedure_name,procedure_code "
//                + "  FROM theatre_procedures where  theatre_name='" + requestsCMBX.getSelectedItem().toString() + "' order by procedure_code;"));
    }//GEN-LAST:event_requestsCMBXItemStateChanged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        if (jTabbedPane1.getSelectedIndex() == 1) {

            requestsCMBX.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select request_name as Category FROM clerking_requests_category order by 1 asc"));
 //           requestsCMBX.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select (request_code||'-'||request_name)as Category FROM clerking_requests_category order by 1 asc"));
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearlink;
    private javax.swing.JButton deletelink;
    private javax.swing.JButton editlink;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton91;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2link;
    private javax.swing.JButton removelink;
    private javax.swing.JComboBox requestsCMBX;
    private javax.swing.JButton savelink;
    private javax.swing.JTextField searchFieldTxt;
    // End of variables declaration//GEN-END:variables

}
