/*
 * stockprices.java
 *
 * Created on November 5, 2002, 11:47 AM
 */
package com.afrisoftech.hospital;

/**
 *
 * @author root
 */
public class InvAmmendIntfr extends javax.swing.JInternalFrame {

    javax.swing.JComboBox cmbox2 = null;
    java.sql.Connection connectDB = null;

    com.afrisoftech.lib.DBObject dbObject;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public InvAmmendIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        dbObject = new com.afrisoftech.lib.DBObject();

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton521 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        dispose11 = new javax.swing.JButton();
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new com.afrisoftech.dbadmin.JTable();
        jButton522 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog23 = new javax.swing.JDialog();
        jSearchPanel23 = new javax.swing.JPanel();
        jTextField1133 = new javax.swing.JTextField();
        jSearchScrollPane23 = new javax.swing.JScrollPane();
        jSearchTable23 = new com.afrisoftech.dbadmin.JTable();
        jButton523 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        invoiceNumberTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel641 = new javax.swing.JPanel();
        searchButton2 = new javax.swing.JButton();
        schemeNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        patientNameTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        schemePayerTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        patientNumberTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        originalInvoiceDateTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        accountNumberTxt = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        memberNameTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        memberNumberTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        referenceNumberTxt = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        newInvoiceTable = new javax.swing.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        ;
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        originalInvoiceAmountTxt = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        newInvoiceAmountTxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        ammendInvoiceBtn = new javax.swing.JButton();
        refreshFormBtn = new javax.swing.JButton();
        removeTableRowBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        helpBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        originalInvoiceTable = new javax.swing.JTable();
        jPanel61 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel6411 = new javax.swing.JPanel();
        searchButton21 = new javax.swing.JButton();
        jTextField71 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jTextField101 = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jTextField61 = new javax.swing.JTextField();
        jLabel101 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jLabel411 = new javax.swing.JLabel();
        jTextField111 = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        jTextField121 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel131 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel51 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jPanel11 = new javax.swing.JPanel();
        try  {
            java.lang.Class.forName("org.postgresql.Driver");
            System.out.println("Found driver");
        } catch(java.lang.ClassNotFoundException cnf){
            System.out.println("driver not found");
        }
        jButton11 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField51 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField114 = new javax.swing.JTextField();
        jLabel92 = new javax.swing.JLabel();
        jLabel531 = new javax.swing.JLabel();
        jTextField311 = new javax.swing.JTextField();
        jComboBox11 = new javax.swing.JComboBox();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel62 = new javax.swing.JLabel();
        jList1 = new javax.swing.JList();
        jLabel43 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setMnemonic('l');
        jButton52.setText("Close");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });
        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable11.setShowHorizontalLines(false);
        /*int rowsNo = 0;
        //try {

            crset1.setCommand("SELECT patient_no, (upper(first_name||' '||second_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register order by name");

            crset1.setConnectionSource(pConnDB);

            // try {
                //crset1.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(crset1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient No.", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),

                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Birth date", true),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", true)

                }));

                tableModel = jSearchTable.getModel();

                jSearchScrollPane.setViewportView(jSearchTable);

                /*   }catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());

            }

            javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }*/
            jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable11MouseClicked(evt);
                }
            });
            jSearchScrollPane11.setViewportView(jSearchTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

            dispose11.setMnemonic('l');
            dispose11.setText("Close");
            dispose11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose11ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel11.add(dispose11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

            jSearchDialog22.setModal(true);
            jSearchDialog22.setUndecorated(true);
            jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jSearchPanel22.setLayout(new java.awt.GridBagLayout());

            jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1132CaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel22.add(jTextField1132, gridBagConstraints);

            jSearchTable22.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable22.setShowHorizontalLines(false);
            /*javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable2.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }
            */
            jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable22MouseClicked(evt);
                }
            });
            jSearchScrollPane22.setViewportView(jSearchTable22);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

            jButton522.setMnemonic('l');
            jButton522.setText("Close");
            jButton522.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton522ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel22.add(jButton522, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

            jSearchDialog.setModal(true);
            jSearchDialog.setUndecorated(true);
            jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jSearchPanel.setLayout(new java.awt.GridBagLayout());

            jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField112CaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 10.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
            jSearchPanel.add(jTextField112, gridBagConstraints);

            jSearchTable.setShowHorizontalLines(false);
            /*    try {
                searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
                searchRowSet.setConnectionSource(pConnDB);

                searchRowSet.execute();

                // crset2.setExecuteOnLoad(true);
                jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

                }));
                // jSearchScrollPane.setViewportView(jSearchTable);

            } catch(java.sql.SQLException sqlex){
                javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sqlex.getMessage());
            }
            */
            jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTableMouseClicked(evt);
                }
            });
            jSearchScrollPane.setViewportView(jSearchTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

            jButton9.setText("Dispose");
            jButton9.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton9ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel.add(jButton9, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

            jSearchDialog23.setModal(true);
            jSearchDialog23.setUndecorated(true);
            jSearchDialog23.getContentPane().setLayout(new java.awt.GridBagLayout());

            jSearchPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jSearchPanel23.setLayout(new java.awt.GridBagLayout());

            jTextField1133.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField1133ActionPerformed(evt);
                }
            });
            jTextField1133.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTextField1133CaretUpdate(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 300.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
            jSearchPanel23.add(jTextField1133, gridBagConstraints);

            jSearchTable23.setToolTipText("Click on the target row to select the patient from the search.");
            jSearchTable23.setShowHorizontalLines(false);
            /*javax.swing.table.TableColumn column = null;

            for (int i = 0; i < 4; i++) {

                column = jSearchTable2.getColumnModel().getColumn(i);

                if (i == 1) {

                    column.setPreferredWidth(400);
                    //sport column is bigger
                } else {

                    column.setPreferredWidth(200);

                }
            }
            */
            jSearchTable23.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jSearchTable23MouseClicked(evt);
                }
            });
            jSearchScrollPane23.setViewportView(jSearchTable23);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 20.0;
            jSearchPanel23.add(jSearchScrollPane23, gridBagConstraints);

            jButton523.setText("Close");
            jButton523.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton523ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchPanel23.add(jButton523, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jSearchDialog23.getContentPane().add(jSearchPanel23, gridBagConstraints);

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("Amending Invoice");
            setPreferredSize(new java.awt.Dimension(650, 700));
            setVisible(true);
            getContentPane().setLayout(new java.awt.GridBagLayout());
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.gridheight = 4;
            getContentPane().add(jLabel5, gridBagConstraints);

            jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTabbedPane1MouseClicked(evt);
                }
            });

            jPanel6.setLayout(new java.awt.GridBagLayout());

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Details"));
            jPanel3.setLayout(new java.awt.GridBagLayout());

            jLabel3.setText("Invoice No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel3, gridBagConstraints);

            jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel4.setLayout(new java.awt.GridBagLayout());

            invoiceNumberTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel4.add(invoiceNumberTxt, gridBagConstraints);

            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton.setToolTipText("Search");
            searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButtonActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel4.add(searchButton, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(jPanel4, gridBagConstraints);

            jLabel1.setText("Scheme Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel1, gridBagConstraints);

            jPanel641.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel641.setMinimumSize(new java.awt.Dimension(82, 37));
            jPanel641.setLayout(new java.awt.GridBagLayout());

            searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton2.setToolTipText("Search");
            searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton2ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel641.add(searchButton2, gridBagConstraints);

            schemeNameTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel641.add(schemeNameTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            jPanel3.add(jPanel641, gridBagConstraints);

            jLabel4.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel4, gridBagConstraints);

            patientNameTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    patientNameTxtActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(patientNameTxt, gridBagConstraints);

            jLabel7.setText("Scheme Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel7, gridBagConstraints);

            schemePayerTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel3.add(schemePayerTxt, gridBagConstraints);

            jLabel9.setText("Patient No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel9, gridBagConstraints);

            patientNumberTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel3.add(patientNumberTxt, gridBagConstraints);

            jLabel8.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel8, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(originalInvoiceDateTxt, gridBagConstraints);

            jLabel10.setText("Account No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel10, gridBagConstraints);

            accountNumberTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel3.add(accountNumberTxt, gridBagConstraints);

            jLabel41.setText("Member Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel41, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel3.add(memberNameTxt, gridBagConstraints);

            jLabel11.setText("Member No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel11, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel3.add(memberNumberTxt, gridBagConstraints);

            jLabel16.setText("Reference No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel3.add(jLabel16, gridBagConstraints);

            referenceNumberTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel3.add(referenceNumberTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            jPanel6.add(jPanel3, gridBagConstraints);

            jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel5.setLayout(new java.awt.GridBagLayout());

            jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New invoice details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 11), new java.awt.Color(0, 102, 255))); // NOI18N

            newInvoiceTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null}
                },
                new String [] {
                    "Date", "Description", "Reference", "Qty", "Price", "Amt.", "Gl Code"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            newInvoiceTable.setGridColor(new java.awt.Color(204, 204, 255));
            javax.swing.table.TableColumn dateEditor = newInvoiceTable.getColumnModel().getColumn(0);
            //com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new org.jdesktop.swingx.JXDatePicker(), jTable1);
            com.afrisoftech.lib.DateCellEditor dateCellEditor = new com.afrisoftech.lib.DateCellEditor(new com.afrisoftech.lib.DatePicker(), newInvoiceTable);
            dateEditor.setCellEditor(dateCellEditor);
            //jTable1.setRowHeight(30);
            javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer();
            cellRenderer.setHorizontalAlignment(cellRenderer.TRAILING);
            dateEditor.setCellRenderer(cellRenderer);
            newInvoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    newInvoiceTableMouseClicked(evt);
                }
            });
            newInvoiceTable.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    newInvoiceTableKeyReleased(evt);
                }
            });
            jScrollPane1.setViewportView(newInvoiceTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipadx = 1;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel5.add(jScrollPane1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 50.0;
            jPanel6.add(jPanel5, gridBagConstraints);

            jPanel2.setLayout(new java.awt.GridBagLayout());

            jLabel2.setText("Original Invoice Amt");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel2.add(jLabel2, gridBagConstraints);

            originalInvoiceAmountTxt.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel2.add(originalInvoiceAmountTxt, gridBagConstraints);

            jTextField5.setEditable(false);
            jTextField5.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField5.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel2.add(jTextField5, gridBagConstraints);

            jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
            jLabel6.setText("Balance");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            jPanel2.add(jLabel6, gridBagConstraints);

            newInvoiceAmountTxt.setEditable(false);
            newInvoiceAmountTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 2.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 10);
            jPanel2.add(newInvoiceAmountTxt, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6.add(jPanel2, gridBagConstraints);

            jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel1.setLayout(new java.awt.GridBagLayout());

            ammendInvoiceBtn.setMnemonic('O');
            ammendInvoiceBtn.setText("Amend Invoice");
            ammendInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ammendInvoiceBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(ammendInvoiceBtn, gridBagConstraints);

            refreshFormBtn.setMnemonic('R');
            refreshFormBtn.setText("Refresh");
            refreshFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    refreshFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(refreshFormBtn, gridBagConstraints);

            removeTableRowBtn.setMnemonic('r');
            removeTableRowBtn.setText("Remove Row");
            removeTableRowBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    removeTableRowBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(removeTableRowBtn, gridBagConstraints);

            closeFormBtn.setMnemonic('C');
            closeFormBtn.setText("Close");
            closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    closeFormBtnActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(closeFormBtn, gridBagConstraints);

            helpBtn.setMnemonic('h');
            helpBtn.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel1.add(helpBtn, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel6.add(jPanel1, gridBagConstraints);

            jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Original invoice details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 11), new java.awt.Color(255, 0, 51))); // NOI18N

            originalInvoiceTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null}
                },
                new String [] {
                    "Date", "Description", "Reference", "Qty", "Price", "Amt", "Gl Code"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jScrollPane2.setViewportView(originalInvoiceTable);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 30.0;
            jPanel6.add(jScrollPane2, gridBagConstraints);

            jTabbedPane1.addTab("Out Patient", jPanel6);

            jPanel61.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jPanel61MouseClicked(evt);
                }
            });
            jPanel61.setLayout(new java.awt.GridBagLayout());

            jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Details"));
            jPanel31.setLayout(new java.awt.GridBagLayout());

            jLabel31.setText("Invoice No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel31, gridBagConstraints);

            jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel41.setLayout(new java.awt.GridBagLayout());

            jTextField91.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel41.add(jTextField91, gridBagConstraints);

            searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton1.setToolTipText("Search");
            searchButton1.setEnabled(false);
            searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton1ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel41.add(searchButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jPanel41, gridBagConstraints);

            jLabel12.setText("Scheme Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel12, gridBagConstraints);

            jPanel6411.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel6411.setMinimumSize(new java.awt.Dimension(82, 37));
            jPanel6411.setLayout(new java.awt.GridBagLayout());

            searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton21.setToolTipText("Search");
            searchButton21.setEnabled(false);
            searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            jPanel6411.add(searchButton21, gridBagConstraints);

            jTextField71.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel6411.add(jTextField71, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 3.0;
            jPanel31.add(jPanel6411, gridBagConstraints);

            jLabel42.setText("Patient Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel42, gridBagConstraints);

            jTextField13.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField13, gridBagConstraints);

            jLabel71.setText("Scheme Payer");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel71, gridBagConstraints);

            jTextField41.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel31.add(jTextField41, gridBagConstraints);

            jLabel91.setText("Patient No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel91, gridBagConstraints);

            jTextField101.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel31.add(jTextField101, gridBagConstraints);

            jLabel81.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel81, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jTextField61, gridBagConstraints);

            jLabel101.setText("Account No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel101, gridBagConstraints);

            jTextField81.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField81, gridBagConstraints);

            jLabel411.setText("Member Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel411, gridBagConstraints);

            jTextField111.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel31.add(jTextField111, gridBagConstraints);

            jLabel111.setText("Member No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel111, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jTextField121, gridBagConstraints);

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jPanel7.setLayout(new java.awt.GridBagLayout());

            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jPanel8.setLayout(new java.awt.GridBagLayout());

            buttonGroup1.add(jRadioButton2);
            jRadioButton2.setText("Credit Invoice");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jRadioButton2, gridBagConstraints);

            jLabel13.setText("Or");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            jPanel8.add(jLabel13, gridBagConstraints);

            buttonGroup1.add(jRadioButton1);
            jRadioButton1.setText("Debit Invoice");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel8.add(jRadioButton1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            jPanel7.add(jPanel8, gridBagConstraints);

            jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            jPanel9.setLayout(new java.awt.GridBagLayout());

            buttonGroup2.add(jCheckBox1);
            jCheckBox1.setText("Services Offered");
            jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox1ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            jPanel9.add(jCheckBox1, gridBagConstraints);

            jLabel131.setText("Or");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            jPanel9.add(jLabel131, gridBagConstraints);

            buttonGroup2.add(jCheckBox2);
            jCheckBox2.setText("Consultants");
            jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox2ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 6;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            jPanel9.add(jCheckBox2, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            jPanel7.add(jPanel9, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jPanel7, gridBagConstraints);

            jLabel14.setText("Payment Mode");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
            jPanel31.add(jLabel14, gridBagConstraints);

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Scheme" }));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel31.add(jComboBox1, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 3.0;
            jPanel61.add(jPanel31, gridBagConstraints);

            jPanel51.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel51.setLayout(new java.awt.GridBagLayout());

            jTable11.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null}
                },
                new String [] {
                    "Date", "Description", "Reference", "Qty", "Amt.", "Gl Code"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    true, false, true, true, true, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jTable11.setGridColor(new java.awt.Color(204, 204, 255));
            jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTable11KeyReleased(evt);
                }
            });
            jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable11MouseClicked(evt);
                }
            });
            jScrollPane11.setViewportView(jTable11);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 50.0;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
            jPanel51.add(jScrollPane11, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            jPanel61.add(jPanel51, gridBagConstraints);

            jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel11.setLayout(new java.awt.GridBagLayout());

            jButton11.setMnemonic('O');
            jButton11.setText("Amend Invoice");
            jButton11.setEnabled(false);
            jButton11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton11ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton11, gridBagConstraints);

            jButton31.setMnemonic('R');
            jButton31.setText("Refresh");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton31, gridBagConstraints);

            jButton61.setMnemonic('r');
            jButton61.setText("Remove Row");
            jButton61.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton61ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton61, gridBagConstraints);

            jButton41.setMnemonic('C');
            jButton41.setText("Close");
            jButton41.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton41ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton41, gridBagConstraints);

            jButton51.setMnemonic('h');
            jButton51.setText("Help");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 5;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel11.add(jButton51, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel61.add(jPanel11, gridBagConstraints);

            jPanel21.setLayout(new java.awt.GridBagLayout());

            jLabel21.setText("Debit");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel21.add(jLabel21, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel21.add(jTextField21, gridBagConstraints);

            jTextField51.setEditable(false);
            jTextField51.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField51.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            jPanel21.add(jTextField51, gridBagConstraints);

            jLabel61.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
            jLabel61.setText("Balance");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            jPanel21.add(jLabel61, gridBagConstraints);

            jTextField31.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 10);
            jPanel21.add(jTextField31, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel61.add(jPanel21, gridBagConstraints);

            jPanel10.setLayout(new java.awt.GridBagLayout());

            jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Doctor details"));
            jPanel12.setLayout(new java.awt.GridBagLayout());

            jLabel15.setText("A/C Description");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel15, gridBagConstraints);

            jLabel22.setText("GL Account");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel22, gridBagConstraints);

            jTextField114.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel12.add(jTextField114, gridBagConstraints);

            jLabel92.setText("Doctor Name");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel92, gridBagConstraints);

            jLabel531.setText("Reason");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel531, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
            jPanel12.add(jTextField311, gridBagConstraints);

            jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct activity from pb_activity ORDER BY activity"));
            jComboBox11.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox11ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel12.add(jComboBox11, gridBagConstraints);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            jPanel12.add(datePicker1, gridBagConstraints);

            jLabel62.setText("Date");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel62, gridBagConstraints);
            jPanel12.add(jList1, new java.awt.GridBagConstraints());

            jLabel43.setText("A/C No");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
            jPanel12.add(jLabel43, gridBagConstraints);

            jPanel42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel42.setLayout(new java.awt.GridBagLayout());

            jTextField92.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            jPanel42.add(jTextField92, gridBagConstraints);

            searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
            searchButton3.setToolTipText("Search");
            searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
            searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
            searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
            searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            searchButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchButton3ActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            jPanel42.add(searchButton3, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel12.add(jPanel42, gridBagConstraints);

            jTextField14.setMinimumSize(new java.awt.Dimension(0, 0));
            jTextField14.setPreferredSize(new java.awt.Dimension(0, 0));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            jPanel12.add(jTextField14, gridBagConstraints);

            jTextField15.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            jPanel12.add(jTextField15, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 6;
            gridBagConstraints.gridheight = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 2.0;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            jPanel10.add(jPanel12, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 100.0;
            jPanel61.add(jPanel10, gridBagConstraints);

            jTabbedPane1.addTab("In Patient", jPanel61);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            getContentPane().add(jTabbedPane1, gridBagConstraints);

            setBounds(0, 0, 667, 495);
        }// </editor-fold>//GEN-END:initComponents

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();

        int[] selectedRows = jTable11.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) jTable11.getModel();

                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }

        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 4);
        jTextField31.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));

        // this.tableModelTableChanged1();
        // Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jTable11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyReleased
        if (jTable11.getModel().getValueAt(jTable11.getSelectedRow(), 1) != null) {
            if (jTable11.getSelectedColumn() == jTable11.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 3).toString());
                float price = java.lang.Float.parseFloat(jTable11.getValueAt(jTable11.getSelectedRow(), 4).toString());
                float total = qty * price;
                jTable11.setValueAt(total, jTable11.getSelectedRow(), 4);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(jTable11, 4);
                jTextField31.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
            }

        }

        /*    double resFloat = 0.00;
         //  double totalSum = 0.00;
         double floatTotal = java.lang.Double.parseDouble(jTextField31.getText());
     
         if (jTable11.getValueAt(jTable11.getSelectedRow(), 1) != null) {
         double floatCol2 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 3).toString());
     
         double floatCol3 = java.lang.Double.parseDouble(jTable11.getValueAt(jTable11.getSelectedRow(), 4).toString());
     
         double resVal = floatCol2 * floatCol3;
     
     
         jTable1.setValueAt(new java.lang.Float(resVal), jTable11.getSelectedRow(), 4);
     
         for (int i = 0; i < jTable11.getRowCount(); i++) {
     
         if (jTable11.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
     
         resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());
     
     
         // totalSum = floatTotal + resFloat;
     
         }
         }
         this.tableModelTableChanged1();
         }
         */
        // Add your handling code here:
    }//GEN-LAST:event_jTable11KeyReleased
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;

        for (int i = 0; i < jTable11.getRowCount(); i++) {

            if (jTable11.getValueAt(i, 4) != null) {

                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());

                jTextField31.setText(java.lang.String.valueOf(resFloat));

            } else {
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());

                jTextField31.setText(java.lang.String.valueOf(resFloat));

            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {

        //        double resFloat = 0.00;
        double resFloat = 0.00;

        for (int i = 0; i < jTable11.getRowCount(); i++) {

            if (jTable11.getValueAt(i, 4) != null) {

                //   if (jTable11.getSelectedColumn() == 1) {
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());

                //   }
                jTextField31.setText(java.lang.String.valueOf(resFloat));

            } else {
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 4).toString());

                //   }
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }

        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void newInvoiceTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newInvoiceTableKeyReleased

        if (newInvoiceTable.getModel().getValueAt(newInvoiceTable.getSelectedRow(), 1) != null) {
            if (newInvoiceTable.getSelectedColumn() == newInvoiceTable.getSelectedColumn()) {
                float qty = java.lang.Float.parseFloat(newInvoiceTable.getValueAt(newInvoiceTable.getSelectedRow(), 3).toString());
                float price = java.lang.Float.parseFloat(newInvoiceTable.getValueAt(newInvoiceTable.getSelectedRow(), 4).toString());
                float total = qty * price;
                newInvoiceTable.setValueAt(total, newInvoiceTable.getSelectedRow(), 5);
                double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(newInvoiceTable, 5);
                newInvoiceAmountTxt.setText(java.lang.String.valueOf(totalSum));

            }

        }
        /*
         double resFloat = 0.00;
         //  double totalSum = 0.00;
         double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
           
         if (jTable1.getValueAt(jTable1.getSelectedRow(), 1) != null) {
         double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
           
         double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
           
         double resVal = floatCol2 * floatCol3;
           
           
         jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 5);
           
         for (int i = 0; i < jTable1.getRowCount(); i++) {
           
         if (jTable1.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
           
         resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 4).toString());
           
           
         // totalSum = floatTotal + resFloat;
           
         }
         }
         this.tableModelTableChanged();
         }
         */
        // Add your handling code here:
    }//GEN-LAST:event_newInvoiceTableKeyReleased
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;

        for (int i = 0; i < newInvoiceTable.getRowCount(); i++) {

            if (newInvoiceTable.getValueAt(i, 5) != null) {

                resFloat = resFloat + Double.parseDouble(newInvoiceTable.getValueAt(i, 5).toString());

                newInvoiceAmountTxt.setText(java.lang.String.valueOf(resFloat));

            } else {
                resFloat = resFloat + Double.parseDouble(newInvoiceTable.getValueAt(i, 5).toString());

                newInvoiceAmountTxt.setText(java.lang.String.valueOf(resFloat));

            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }

    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {

        //        double resFloat = 0.00;
        double resFloat = 0.00;

        for (int i = 0; i < newInvoiceTable.getRowCount(); i++) {

            if (newInvoiceTable.getValueAt(i, 5) != null) {

                //   if (jTable11.getSelectedColumn() == 1) {
                resFloat = resFloat + Double.parseDouble(newInvoiceTable.getValueAt(i, 5).toString());

                //   }
                newInvoiceAmountTxt.setText(java.lang.String.valueOf(resFloat));

            } else {
                resFloat = resFloat + Double.parseDouble(newInvoiceTable.getValueAt(i, 5).toString());

                //   }
                newInvoiceAmountTxt.setText(java.lang.String.valueOf(resFloat));
            }

        }

        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        jPanel10.setVisible(false);      // Add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jPanel61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel61MouseClicked
        jPanel10.setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jPanel61MouseClicked

    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select code from pb_activity where activity ='" + jComboBox11.getSelectedItem() + "'");
            while (rset.next()) {
                jTextField114.setText(rset.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }        // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jSearchTable23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable23MouseClicked
        jTextField92.setText(jSearchTable23.getValueAt(jSearchTable23.getSelectedRow(), 0).toString());
        jTextField15.setText(jSearchTable23.getValueAt(jSearchTable23.getSelectedRow(), 1).toString());
        this.jSearchDialog23.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable23MouseClicked

    private void jButton523ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton523ActionPerformed
        this.jSearchDialog23.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton523ActionPerformed

    private void jTextField1133CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1133CaretUpdate
        if (this.jTextField1133.getCaretPosition() < 3) {
            System.out.print("Nothing");
        } else {
            if (this.jTextField1133.getCaretPosition() < 3) {
                System.out.print("Nothing");
            } else {
                jSearchTable23.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select distinct first_name as name,staff_no from pb_doctors_list where first_name ILIKE '" + jTextField1133.getText() + "%' order by first_name"));
                /* searchRowSet23.execute("select distinct first_name as name,staff_no from pb_doctors_list where first_name ILIKE '"+jTextField1133.getText()+"%' order by first_name");
                 //   searchRowSet2.execute("select code,supplier_name as name from st_suppliers where supplier_name ILIKE '"+jTextField113.getText()+"%' order by supplier_name");
           
                 jSearchTable23.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet23, new org.netbeans.lib.sql.models.TableModel.Column[] {
                 // new org.netbeans.lib.sql.models.TableModel.Column("code", "Acc.No", false),
                 new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                 new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Member No.", false)
                 // new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
                 }));
                 */
                jSearchScrollPane23.setViewportView(jSearchTable23);
                System.out.println("Cannot sort out");

            }
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1133CaretUpdate

    private void jTextField1133ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1133ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1133ActionPerformed

    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButton23Clicked();     // Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    private void searchButton23Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();

        jSearchDialog23.setSize(600, 200);

        jSearchDialog23.setLocation(point);

        jSearchDialog23.setVisible(true);
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jPanel10.setVisible(true);
        jPanel51.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jPanel51.setVisible(true);
        jPanel10.setVisible(false);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        if (jTable11.getSelectedColumn() == 1) {

            this.cmboxMouseClicked();
        } // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked

        if (newInvoiceTable.getSelectedColumn() == 1) {
            newInvoiceTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), newInvoiceTable.getSelectedRow(), 1);
            newInvoiceTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), newInvoiceTable.getSelectedRow(), 4);
            newInvoiceTable.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), newInvoiceTable.getSelectedRow(), 6);
            //  jTable1.setValueAt(new java.lang.Double(jSearchTable.getSelectedRow(),1), jTable1.getSelectedRow(), 4);
            jSearchDialog.dispose();
        } else {
            if (jTable11.getSelectedColumn() == 1) {
                jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0), jTable11.getSelectedRow(), 1);
                jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1), jTable11.getSelectedRow(), 4);
                jTable11.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 2), jTable11.getSelectedRow(), 5);
                //  jTable1.setValueAt(new java.lang.Double(jSearchTable.getSelectedRow(),1), jTable1.getSelectedRow(), 4);
                jSearchDialog.dispose();
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if (jTextField112.getCaretPosition() > 2) {
            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select service_type as product,rate as selling_price,gl_code,main_service as department FROM pricelist WHERE service_type ILIKE '" + jTextField112.getText() + "%' order by service_type"));
            /*   searchRowSet.execute("select service_type as product,rate as selling_price,gl_code,main_service as department FROM pricelist WHERE service_type ILIKE '"+jTextField112.getText()+"%' order by service_type");// UNION ALL select service_type,rate,gl_account FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField11.getText()+"%' order by product");
           
             jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
             new org.netbeans.lib.sql.models.TableModel.Column("product", "Product", false),
             new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Selling price", false),
             new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false),
             new org.netbeans.lib.sql.models.TableModel.Column("department", "Department", false),
             }));
             */
            jSearchScrollPane.setViewportView(jSearchTable);
            System.out.println("Cannot sort out");

        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void newInvoiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newInvoiceTableMouseClicked

        if (newInvoiceTable.getSelectedColumn() == 1) {

            this.cmboxMouseClicked();
        }
        // Add your handling code here:
    }//GEN-LAST:event_newInvoiceTableMouseClicked
    private void cmboxMouseClicked() {
        if (newInvoiceTable.getSelectedColumn() == 1) {

            System.out.println("Showing dialog");
            java.awt.Point point = newInvoiceTable.getLocationOnScreen();
            jSearchDialog.setSize(600, 200);
            jSearchDialog.setLocation(point);
            jSearchDialog.setVisible(true);

        } else {
            if (jTable11.getSelectedColumn() == 1) {

                System.out.println("Showing dialog");
                java.awt.Point point = jScrollPane11.getLocationOnScreen();
                jSearchDialog.setSize(600, 200);
                jSearchDialog.setLocation(point);
                jSearchDialog.setVisible(true);

            }
        }
    }

    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        int i = 0;
        int invno = 0;
        this.jTextField31.setText("");
        jTextField71.setText("");
        jTextField81.setText("");
        jTextField41.setText("");
        jTextField21.setText("");
        jTextField31.setText("");
        jTextField13.setText("");
        jTextField81.setText("");

        String code = null;
        //jTextField13.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
        jTextField101.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        // jTextField61.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());

        jSearchDialog22.dispose();
        try {

            java.sql.Statement stmts1 = connectDB.createStatement();
            java.sql.ResultSet rsets1 = stmts1.executeQuery("select date::date from hp_patient_card where invoice_no ='" + jTextField91.getText() + "' order by date DESC LIMIT 1");
            while (rsets1.next()) {
                jTextField61.setText(rsets1.getObject(1).toString());
            }
            java.sql.Statement stmts = connectDB.createStatement();
            java.sql.ResultSet rsets = stmts.executeQuery("select count(invoice_no) from ac_debtors where invoice_no ='" + jTextField91.getText() + "'");
            while (rsets.next()) {
                invno = rsets.getInt(1);
            }

            if (invno > 0) {
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance,item from ac_debtors where invoice_no ='" + jTextField91.getText() + "'");
                while (rset.next()) {
                    // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                    jTextField71.setText(rset.getObject(1).toString());
                    jTextField81.setText(rset.getObject(2).toString());
                    jTextField41.setText(rset.getObject(3).toString());
                    jTextField21.setText(rset.getObject(4).toString());
                    jTextField31.setText(rset.getObject(5).toString());
                    jTextField13.setText(rset.getObject(6).toString());

                }
            } else {
                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.ResultSet rset = stmt.executeQuery("select patient_name from hp_admission where patient_no ='" + jTextField101.getText() + "'");
                while (rset.next()) {

                    jTextField71.setText("");
                    jTextField81.setText("");
                    jTextField41.setText("");
                    jTextField21.setText("");
                    jTextField31.setText("");
                    jTextField13.setText(rset.getObject(1).toString());

                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        this.populateTable11(this.jTextField91.getText());

        jSearchDialog22.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTable22MouseClicked
    private void populateTable11(java.lang.String patient_no1) {
        for (int k = 0; k < jTable11.getRowCount(); k++) {
            for (int r = 0; r < jTable11.getColumnCount(); r++) {
                jTable11.getModel().setValueAt(null, k, r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        /*try {
         java.sql.Statement stmt = connectDB.createStatement();
         
         java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '"+patient_no1+"'");
         
         while (rset.next()) {
         j = rset.getInt(1);
         }
         /*   if (j > 0){
         java.sql.Statement stmtTable1 = connectDB.createStatement();
         java.sql.Statement stmtTable11 = connectDB.createStatement();
         
         //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
         java.sql.ResultSet rsetTable11 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,debit from hp_patient_card where invoice_no = '"+patient_no1+"' AND debit >0 order by date::date");
         
         while (rsetTable11.next()) {
         
         System.out.println("Working at table row "+i);
         jTable11.setValueAt(rsetTable11.getObject(1), i, 0);
         jTable11.setValueAt(rsetTable11.getObject(2), i, 1);
         jTable11.setValueAt(rsetTable11.getObject(3), i, 2);
         jTable11.setValueAt(rsetTable11.getObject(4), i, 3);
         jTable11.setValueAt(rsetTable11.getObject(5), i, 4);
         // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
         
         i++;
         
         }
         
         java.sql.ResultSet rsetTable111 = stmtTable11.executeQuery(" select gl_code from pricelist where service_type = '"+jTable1.getModel().getValueAt(i,2).toString()+"'");
         
         while (rsetTable111.next()) {
         
         System.out.println("Working at table row "+i);
         jTable11.setValueAt(rsetTable111.getObject(1), i, 5);
         
         }
         }else{
         javax.swing.JOptionPane.showMessageDialog(this,"Cannot Retrive Data ","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         
         }
         
         
         } catch(java.sql.SQLException sqlExec) {
         
         javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
         
         }*/

    }


    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        jSearchDialog22.dispose();// Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed

    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if (this.jTextField1132.getCaretPosition() < 2) {
            System.out.print("Nothing");
        } else {
            jSearchTable22.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select DISTINCT invoice_no,patient_no as pat_no from hp_patient_card  where invoice_no ILIKE '" + jTextField1132.getText() + "%'  group by invoice_no,patient_no order by invoice_no"));
            /*
             // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
             searchRowSet22.execute("select DISTINCT invoice_no,patient_no as pat_no from hp_patient_card  where invoice_no ILIKE '"+jTextField1132.getText()+"%'  group by invoice_no,patient_no order by invoice_no");
          
             jSearchTable22.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet22, new org.netbeans.lib.sql.models.TableModel.Column[] {
             new org.netbeans.lib.sql.models.TableModel.Column("invoice_no", "Invoice No", false),
             new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false)
             // new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
             }));
             */
            jSearchScrollPane22.setViewportView(jSearchTable22);
            System.out.println("Cannot sort out");

        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1132CaretUpdate

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButton22Clicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButton22Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();

        jSearchDialog22.setSize(600, 200);

        jSearchDialog22.setLocation(point);

        jSearchDialog22.setVisible(true);
    }
    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        setVisible(false);        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());

        try {
            String receiptNo = null;
            String actCode = null;
            String glCode = null;
            String bankAcc = null;
            String glCode1 = null;
            String bankAcc1 = null;
            String transNo = null;
            String payMode = null;
            String patCat = null;
            String patientAcc = null;
            String cardNo = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String actNames = null;
            String user = null;
            String actNames1 = null;
            String actCode1 = null;
            String invoiceNo = null;
            String docacc = null;
            String docnames = null;
            double balance = 0.00;
            String InvDate = null;

            invoiceNo = this.jTextField91.getText();

            try {
                connectDB.setAutoCommit(false);
                java.sql.Statement stm1 = connectDB.createStatement();

                java.sql.Statement ps221 = connectDB.createStatement();
                java.sql.ResultSet rs221 = ps221.executeQuery("select nextval('transaction_no_seq')");
                while (rs221.next()) {
                    transNo = rs221.getObject(1).toString();
                }
                java.sql.Statement pss12 = connectDB.createStatement();
                java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rsts11.next()) {
                    actCode = rsts11.getObject(1).toString();
                    actNames = rsts11.getObject(2).toString();
                }

                java.sql.Statement pss12q = connectDB.createStatement();
                java.sql.ResultSet rsts11q = pss12q.executeQuery("select date from ac_debtors where invoice_no  = '" + invoiceNo + "'");
                while (rsts11q.next()) {
                    InvDate = rsts11q.getObject(1).toString();

                }

                java.sql.Statement pss12x = connectDB.createStatement();
                java.sql.ResultSet rsts11x = pss12x.executeQuery("select code,activity from pb_activity where activity_category ='CA'");
                while (rsts11x.next()) {
                    docacc = rsts11x.getObject(1).toString();
                    docnames = rsts11x.getObject(2).toString();
                }
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next()) {
                    actCode1 = rsts1.getObject(1).toString();
                    actNames1 = rsts1.getObject(2).toString();
                    user = rsts1.getObject(3).toString();
                }

                if (jRadioButton1.isSelected() && jCheckBox1.isSelected()) {
                    for (int i = 0; i < jTable11.getRowCount(); i++) {

                        if (jTable11.getModel().getValueAt(i, 0) != null) {

                            balance = Double.parseDouble(jTextField31.getText().toString());

                            java.sql.Statement pssq = connectDB.createStatement();
                            java.sql.ResultSet rse121 = pssq.executeQuery("select main_service,gl_account from pb_operating_parameters where service_type ILIKE '" + jTable11.getModel().getValueAt(i, 1).toString() + "%' union select department,gl_code from st_stock_prices where product ILIKE '" + jTable11.getModel().getValueAt(i, 1).toString() + "%'");
                            while (rse121.next()) {
                                glCode = dbObject.getDBObject(rse121.getObject(1), "-");
                                glCode1 = dbObject.getDBObject(rse121.getObject(2), "-");
                            }
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            pstmt.setString(1, jTextField101.getText());
                            pstmt.setObject(2, jTable11.getValueAt(i, 1).toString());
                            pstmt.setString(3, "");
                            pstmt.setString(4, schemePayerTxt.getText());
                            pstmt.setString(5, jTable11.getValueAt(i, 2).toString());
                            pstmt.setString(7, jTextField71.getText());
                            pstmt.setString(6, "");
                            pstmt.setString(8, "");
                            pstmt.setString(9, jTextField41.getText());
                            pstmt.setString(10, null);
                            pstmt.setString(11, "");
                            pstmt.setObject(12, jTable11.getValueAt(i, 4).toString());
                            pstmt.setString(13, "0.00");
                            pstmt.setObject(14, jTable11.getValueAt(i, 0).toString());
                            pstmt.setObject(15, actCode);
                            pstmt.setString(16, glCode);
                            pstmt.setObject(17, jTable11.getValueAt(i, 3).toString());
                            pstmt.setObject(18, jTextField121.getText());
                            pstmt.setString(19, "true");
                            pstmt.setString(20, "Billing");
                            pstmt.setString(21, "true");
                            pstmt.setString(22, actNames);
                            pstmt.setString(23, jTextField91.getText());
                            pstmt.setString(24, user);
                            pstmt.setString(25, "");
                            pstmt.setString(26, "IP");
                            pstmt.executeUpdate();

                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt2.setObject(1, jTable11.getValueAt(i, 5).toString());
                            pstmt2.setObject(2, glCode);
                            pstmt2.setString(3, jTextField101.getText());
                            pstmt2.setString(4, jTextField13.getText());
                            pstmt2.setString(5, "");
                            pstmt2.setString(6, "");
                            pstmt2.setString(7, "");
                            pstmt2.setString(8, "IP");
                            pstmt2.setString(9, "");
                            pstmt2.setString(10, jComboBox1.getSelectedItem().toString());
                            pstmt2.setString(11, "");
                            pstmt2.setString(12, "");
                            pstmt2.setString(13, "");
                            pstmt2.setString(14, jTable11.getValueAt(i, 1).toString());
                            pstmt2.setString(15, "Revenue");
                            pstmt2.setString(16, "0.00");
                            pstmt2.setObject(17, jTable11.getValueAt(i, 4).toString());
                            pstmt2.setObject(18, jTable11.getValueAt(i, 0).toString());
                            pstmt2.setString(19, jTable11.getValueAt(i, 2).toString());
                            pstmt2.setString(20, "false");
                            pstmt2.setString(21, "false");
                            pstmt2.setString(22, "false");
                            pstmt2.setString(23, user);
                            pstmt2.executeUpdate();
                        }
                    }

                    java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set balance = balance + '" + jTextField31.getText() + "',debit = debit + '" + jTextField31.getText() + "'  WHERE invoice_no = '" + jTextField91.getText() + "'");
                    pstmt22.executeUpdate();

                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt21.setObject(1, actCode);
                    pstmt21.setObject(2, actNames);
                    pstmt21.setString(3, jTextField101.getText());
                    pstmt21.setString(4, jTextField13.getText());
                    pstmt21.setString(5, "");
                    pstmt21.setString(6, "");
                    pstmt21.setString(7, "");
                    pstmt21.setString(8, "IP");
                    pstmt21.setString(9, "");
                    pstmt21.setString(10, "");
                    pstmt21.setString(11, "");
                    pstmt21.setString(12, "");
                    pstmt21.setString(13, "");
                    pstmt21.setString(14, "Invoice Adjustment");
                    pstmt21.setString(15, "Amend Invoice");
                    pstmt21.setString(16, "0.00");
                    pstmt21.setObject(17, jTextField31.getText());
                    pstmt21.setObject(18, InvDate);
                    pstmt21.setString(19, transNo);
                    pstmt21.setString(20, "false");
                    pstmt21.setString(21, "false");
                    pstmt21.setString(22, "false");
                    pstmt21.setString(23, user);
                    pstmt21.executeUpdate();
                } else {

                    if (jRadioButton2.isSelected() && jCheckBox1.isSelected()) {
                        for (int i = 0; i < jTable11.getRowCount(); i++) {

                            if (jTable11.getModel().getValueAt(i, 0) != null) {

                                java.sql.Statement pssq = connectDB.createStatement();
                                java.sql.ResultSet rse121 = pssq.executeQuery("select main_service,gl_account from pb_operating_parameters where service_type ILIKE '" + jTable11.getModel().getValueAt(i, 1).toString() + "%' union select department,gl_code from st_stock_prices where product ILIKE '" + jTable11.getModel().getValueAt(i, 1).toString() + "%'");
                                while (rse121.next()) {
                                    glCode = dbObject.getDBObject(rse121.getObject(1), "-");
                                    glCode1 = dbObject.getDBObject(rse121.getObject(2), "-");
                                }
                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                                pstmt.setString(1, jTextField101.getText());
                                pstmt.setObject(2, jTable11.getValueAt(i, 1).toString());
                                pstmt.setString(3, "");
                                pstmt.setString(4, schemePayerTxt.getText());
                                pstmt.setString(5, jTable11.getValueAt(i, 2).toString());
                                pstmt.setString(7, jTextField71.getText());
                                pstmt.setString(6, "");
                                pstmt.setString(8, "");
                                pstmt.setString(9, jTextField41.getText());
                                pstmt.setString(10, null);
                                pstmt.setString(11, "");
                                pstmt.setObject(13, jTable11.getValueAt(i, 4).toString());
                                pstmt.setString(12, "0.00");
                                pstmt.setObject(14, jTable11.getValueAt(i, 0).toString());
                                pstmt.setObject(15, actCode);
                                pstmt.setString(16, glCode);
                                pstmt.setObject(17, jTable11.getValueAt(i, 3).toString());
                                pstmt.setObject(18, jTextField121.getText());
                                pstmt.setString(19, "true");
                                pstmt.setString(20, "Billing");
                                pstmt.setString(21, "true");
                                pstmt.setString(22, actNames);
                                pstmt.setString(23, jTextField91.getText());
                                pstmt.setString(24, user);
                                pstmt.setString(25, "");
                                pstmt.setString(26, "IP");
                                pstmt.executeUpdate();

                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                pstmt2.setObject(1, jTable11.getValueAt(i, 5).toString());
                                pstmt2.setObject(2, glCode);
                                pstmt2.setString(3, jTextField101.getText());
                                pstmt2.setString(4, jTextField13.getText());
                                pstmt2.setString(5, "");
                                pstmt2.setString(6, "");
                                pstmt2.setString(7, "");
                                pstmt2.setString(8, "IP");
                                pstmt2.setString(9, "");
                                pstmt2.setString(10, jComboBox1.getSelectedItem().toString());
                                pstmt2.setString(11, "");
                                pstmt2.setString(12, "");
                                pstmt2.setString(13, "");
                                pstmt2.setString(14, jTable11.getValueAt(i, 1).toString());
                                pstmt2.setString(15, "Revenue");
                                pstmt2.setString(17, "0.00");
                                pstmt2.setObject(16, jTable11.getValueAt(i, 4).toString());
                                pstmt2.setObject(18, jTable11.getValueAt(i, 0).toString());
                                pstmt2.setString(19, jTable11.getValueAt(i, 2).toString());
                                pstmt2.setString(20, "false");
                                pstmt2.setString(21, "false");
                                pstmt2.setString(22, "false");
                                pstmt2.setString(23, user);
                                pstmt2.executeUpdate();

                            }
                        }

                        java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set balance = balance - '" + jTextField31.getText() + "',debit = debit - '" + jTextField31.getText() + "'  WHERE invoice_no = '" + jTextField91.getText() + "'");
                        pstmt22.executeUpdate();

                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt21.setObject(1, actCode);
                        pstmt21.setObject(2, actNames);
                        pstmt21.setString(3, jTextField101.getText());
                        pstmt21.setString(4, jTextField13.getText());
                        pstmt21.setString(5, "");
                        pstmt21.setString(6, "");
                        pstmt21.setString(7, "");
                        pstmt21.setString(8, "IP");
                        pstmt21.setString(9, "");
                        pstmt21.setString(10, "");
                        pstmt21.setString(11, "");
                        pstmt21.setString(12, "");
                        pstmt21.setString(13, "");
                        pstmt21.setString(14, "Invoice Adjustment");
                        pstmt21.setString(15, "Amend Invoice");
                        pstmt21.setString(17, "0.00");
                        pstmt21.setObject(16, jTextField31.getText());
                        pstmt21.setObject(18, jTextField61.getText());
                        pstmt21.setString(19, transNo);
                        pstmt21.setString(20, "false");
                        pstmt21.setString(21, "false");
                        pstmt21.setString(22, "false");
                        pstmt21.setString(23, user);
                        pstmt21.executeUpdate();
                    }
                }
                if (jRadioButton1.isSelected() && jCheckBox2.isSelected()) {
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                    pstmt.setString(1, jTextField101.getText());
                    pstmt.setObject(2, jComboBox11.getSelectedItem().toString());
                    pstmt.setString(3, "");
                    pstmt.setString(4, schemePayerTxt.getText());
                    pstmt.setString(5, transNo);
                    pstmt.setString(7, jTextField71.getText());
                    pstmt.setString(6, "");
                    pstmt.setString(8, "");
                    pstmt.setString(9, jTextField41.getText());
                    pstmt.setString(10, null);
                    pstmt.setString(11, "");
                    pstmt.setObject(12, jTextField31.getText());
                    pstmt.setString(13, "0.00");
                    pstmt.setObject(14, datePicker1.getDate().toString());
                    pstmt.setObject(15, actCode);
                    pstmt.setString(16, glCode);
                    pstmt.setObject(17, "1");
                    pstmt.setObject(18, jTextField121.getText());
                    pstmt.setString(19, "true");
                    pstmt.setString(20, "Billing");
                    pstmt.setString(21, "true");
                    pstmt.setString(22, actNames);
                    pstmt.setString(23, jTextField91.getText());
                    pstmt.setString(24, user);
                    pstmt.setString(25, "");
                    pstmt.setString(26, "IP");
                    pstmt.executeUpdate();

                    java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                    pstmt2.setObject(1, jTextField15.getText());
                    pstmt2.setObject(2, jTextField311.getText());
                    pstmt2.setString(3, jTextField92.getText());
                    pstmt2.setString(4, transNo);
                    pstmt2.setString(5, docacc);
                    pstmt2.setString(6, "Billing");
                    pstmt2.setString(8, jTextField31.getText());
                    pstmt2.setString(7, "0.00");
                    pstmt2.setString(9, jTextField92.getText());
                    pstmt2.setString(10, jTextField101.getText());
                    pstmt2.setString(11, jTextField311.getText());
                    pstmt2.setString(12, "false");
                    pstmt2.setString(13, user);
                    pstmt2.setString(14, datePicker1.getDate().toString());
                    pstmt2.setString(15, docnames);
                    pstmt2.setString(16, jTextField13.getText());
                    pstmt2.setObject(18, jTextField31.getText());
                    pstmt2.setObject(17, "0.00");
                    pstmt2.setString(19, jComboBox1.getSelectedItem().toString());
                    pstmt2.executeUpdate();

                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                    pstmt21.setObject(1, actCode);
                    pstmt21.setObject(2, actNames);
                    pstmt21.setString(3, jTextField101.getText());
                    pstmt21.setString(4, jTextField13.getText());
                    pstmt21.setString(5, "");
                    pstmt21.setString(6, "");
                    pstmt21.setString(7, "");
                    pstmt21.setString(8, "IP");
                    pstmt21.setString(9, "");
                    pstmt21.setString(10, "");
                    pstmt21.setString(11, "");
                    pstmt21.setString(12, "");
                    pstmt21.setString(13, "");
                    pstmt21.setString(14, "Invoice Adjustment");
                    pstmt21.setString(15, "Amend Invoice");
                    pstmt21.setString(16, "0.00");
                    pstmt21.setObject(17, jTextField31.getText());
                    pstmt21.setObject(18, jTextField61.getText());
                    pstmt21.setString(19, transNo);
                    pstmt21.setString(20, "false");
                    pstmt21.setString(21, "false");
                    pstmt21.setString(22, "false");
                    pstmt21.setString(23, user);
                    pstmt21.executeUpdate();

                    java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set balance = balance + '" + jTextField31.getText() + "',debit = debit + '" + jTextField31.getText() + "'  WHERE invoice_no = '" + jTextField91.getText() + "'");
                    pstmt22.executeUpdate();

                } else {

                    if (jRadioButton2.isSelected() && jCheckBox2.isSelected()) {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                        pstmt.setString(1, jTextField101.getText());
                        pstmt.setObject(2, jComboBox11.getSelectedItem().toString());
                        pstmt.setString(3, "");
                        pstmt.setString(4, schemePayerTxt.getText());
                        pstmt.setString(5, transNo);
                        pstmt.setString(7, jTextField71.getText());
                        pstmt.setString(6, "");
                        pstmt.setString(8, "");
                        pstmt.setString(9, jTextField41.getText());
                        pstmt.setString(10, null);
                        pstmt.setString(11, "");
                        pstmt.setObject(13, jTextField31.getText());
                        pstmt.setString(12, "0.00");
                        pstmt.setObject(14, datePicker1.getDate().toString());
                        pstmt.setObject(15, actCode);
                        pstmt.setString(16, glCode);
                        pstmt.setObject(17, "1");
                        pstmt.setObject(18, jTextField121.getText());
                        pstmt.setString(19, "true");
                        pstmt.setString(20, "Billing");
                        pstmt.setString(21, "true");
                        pstmt.setString(22, actNames);
                        pstmt.setString(23, jTextField91.getText());
                        pstmt.setString(24, user);
                        pstmt.setString(25, "");
                        pstmt.setString(26, "IP");
                        pstmt.executeUpdate();

                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        pstmt2.setObject(1, jTextField15.getText());
                        pstmt2.setObject(2, jTextField311.getText());
                        pstmt2.setString(3, jTextField92.getText());
                        pstmt2.setString(4, transNo);
                        pstmt2.setString(5, docacc);
                        pstmt2.setString(6, "Billing");
                        pstmt2.setString(7, jTextField31.getText());
                        pstmt2.setString(8, "0.00");
                        pstmt2.setString(9, jTextField92.getText());
                        pstmt2.setString(10, jTextField101.getText());
                        pstmt2.setString(11, jTextField311.getText());
                        pstmt2.setString(12, "false");
                        pstmt2.setString(13, user);
                        pstmt2.setString(14, datePicker1.getDate().toString());
                        pstmt2.setString(15, docnames);
                        pstmt2.setString(16, jTextField13.getText());
                        pstmt2.setObject(17, jTextField31.getText());
                        pstmt2.setObject(18, "0.00");
                        pstmt2.setString(19, jComboBox1.getSelectedItem().toString());
                        pstmt2.executeUpdate();

                        java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set balance = balance - '" + jTextField31.getText() + "',debit = debit - '" + jTextField31.getText() + "'  WHERE invoice_no = '" + jTextField91.getText() + "'");
                        pstmt22.executeUpdate();

                        java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt21.setObject(1, actCode);
                        pstmt21.setObject(2, actNames);
                        pstmt21.setString(3, jTextField101.getText());
                        pstmt21.setString(4, jTextField13.getText());
                        pstmt21.setString(5, "");
                        pstmt21.setString(6, "");
                        pstmt21.setString(7, "");
                        pstmt21.setString(8, "IP");
                        pstmt21.setString(9, "");
                        pstmt21.setString(10, "");
                        pstmt21.setString(11, "");
                        pstmt21.setString(12, "");
                        pstmt21.setString(13, "");
                        pstmt21.setString(14, "Invoice Adjustment");
                        pstmt21.setString(15, "Amend Invoice");
                        pstmt21.setString(16, "0.00");
                        pstmt21.setObject(17, jTextField31.getText());
                        pstmt21.setObject(18, InvDate);
                        pstmt21.setString(19, transNo);
                        pstmt21.setString(20, "false");
                        pstmt21.setString(21, "false");
                        pstmt21.setString(22, "false");
                        pstmt21.setString(23, user);
                        pstmt21.executeUpdate();
                    }

                }

                //  java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set payee = '"+jTextField71.getText()+"',dealer = '"+jTextField41.getText()+"',account_no = '"+jTextField81.getText()+"',balance = '"+jTextField31.getText()+"',debit = '"+jTextField21.getText()+"',date = '"+jTextField61.getText()+"' WHERE invoice_no = '"+jTextField91.getText()+"'");
                //  pstmt22.executeUpdate();
                connectDB.commit();
                connectDB.setAutoCommit(true);
                invoiceNo = jTextField91.getText();

                //  FinalInvoiceByinvPdf policy = new FinalInvoiceByinvPdf();
                //  policy.FinalInvoiceByinvPdf(connectDB,invoiceNo,invoiceNo);
                javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully ", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                memberNameTxt.setText("");
                jTextField21.setText("");
                jTextField31.setText("");
                for (int k = 0; k < jTable11.getRowCount(); k++) {
                    for (int r = 0; r < jTable11.getColumnCount(); r++) {
                        jTable11.getModel().setValueAt(null, k, r);
                    }
                }
                jTextField31.setText("");
            } catch (java.sql.SQLException sq) {

                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }

        } catch (java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void dispose11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispose11ActionPerformed
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_dispose11ActionPerformed

    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        schemeNameTxt.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 1).toString());
        schemePayerTxt.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 2).toString());
        accountNumberTxt.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());

        jSearchDialog11.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton11aClicked();         // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if (jTextField1111.getCaretPosition() < 3) {

            System.out.println("Nothing");
        } else {

            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '" + jTextField1111.getText() + "%' order by scheme_name"));
            /*
 
             searchRowSet11.execute("SELECT account_no,scheme_name,payer_name from ac_schemes where scheme_name ILIKE '"+jTextField1111.getText()+"%' order by scheme_name");
             //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
 
             jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
             new org.netbeans.lib.sql.models.TableModel.Column("account_no", "Account no", false),
             new org.netbeans.lib.sql.models.TableModel.Column("scheme_name", "Name", false),
             new org.netbeans.lib.sql.models.TableModel.Column("payer_name", "Payer", false)
 
             }));
             */
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);

        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void searchButton11aClicked() {

        System.out.println("Showing dialog");

        jSearchDialog11.dispose();
        java.awt.Point point = this.schemeNameTxt.getLocationOnScreen();

        jSearchDialog11.setSize(400, 200);

        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);
    }

    private void removeTableRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTableRowBtnActionPerformed

        int rows2Delete = newInvoiceTable.getSelectedRowCount();

        int[] selectedRows = newInvoiceTable.getSelectedRows();

        if (rows2Delete < 1) {

            java.awt.Toolkit.getDefaultToolkit().beep();

            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");

        } else {

            if (rows2Delete > 1) {

                for (int i = 0; i < selectedRows.length; i++) {

                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) newInvoiceTable.getModel();

                    defTableModel.removeRow(selectedRows[i]);

                }

            } else {

                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel) newInvoiceTable.getModel();

                defTableModel.removeRow(newInvoiceTable.getSelectedRow());
            }
        }

        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(newInvoiceTable, 5);
        //  jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        newInvoiceAmountTxt.setText(java.lang.String.valueOf(totalSum));
        ///this.tableModelTableChanged();
        // Add your handling code here:
    }//GEN-LAST:event_removeTableRowBtnActionPerformed

    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    /*  private void populateTable2(java.lang.String patient_no) {
   
     int i = 0;
     int j = 0;
     try {
     java.sql.Statement stmt = connectDB.createStatement();
   
     java.sql.ResultSet rset = stmt.executeQuery("SELECT count(patient_no) FROM hp_patient_card WHERE patient_no = '"+patient_no+"' AND paid = false");
   
     while (rset.next()) {
     j = rset.getInt(1);
     }
     if (j > 0){
     java.sql.Statement stmtTable1 = connectDB.createStatement();
   
     java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date::date as date,service,dosage as quantity,debit-credit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND payment_mode = 'Scheme'");
   
     while (rsetTable1.next()) {
   
     System.out.println("Working at table row "+i);
     jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
     jTable11.setValueAt(rsetTable1.getObject(2), i, 1);
     jTable11.setValueAt(rsetTable1.getObject(3), i, 2);
     jTable11.setValueAt(rsetTable1.getObject(4), i, 3);
     //   jTable11.setValueAt(rsetTable1.getObject(5), i, 4);
   
     i++;
   
     //                i = i + i;
     //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
     }
     }
   
     } catch(java.sql.SQLException sqlExec) {
   
     javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
   
     }
   
   
     }
   
     */

    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        String payer = null;
        String scm = null;
        String accno = null;
        String date = null;
        String cat = null;
        String code = null;
        /*    jTextField11.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
         jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
         //jTextField21.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2).toString());
         //jTextField71.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 3).toString());
     
         try {
         //
         java.sql.Statement stmt = connectDB.createStatement();
         java.sql.ResultSet rset = stmt.executeQuery("select account_no, description,payer from hp_inpatient_register where patient_no ILIKE '"+jTextField91.getText()+"%'");
         while (rset.next()){
         // jComboBox6.setSelectedItem(rset.getObject(1).toString());
         payer = dbObject.getDBObject(rset.getObject(3), "-");
         scm = dbObject.getDBObject(rset.getObject(2), "-");
         accno =dbObject.getDBObject(rset.getObject(1), "-");
         jTextField21.setText(accno);
         jTextField71.setText(scm);
         jTextField41.setText(payer);
     
     
         }
         } catch (java.sql.SQLException sqe) {
         sqe.printStackTrace();
         System.out.println("Insert not successful");
         }
     
         try{
     
         java.sql.Statement pss1 = connectDB.createStatement();
         java.sql.ResultSet rset11 = pss1.executeQuery("select account_no from ac_schemes where scheme_name = '"+jTextField71.getText()+"' and payer_name = '"+jTextField41.getText()+"'");
         while (rset11.next()){
         code = dbObject.getDBObject(rset11.getObject(1), "-");
     
     
         jTextField10.setText(code);
         // jTextField51.setText(date);
         // jTextField61.setText(cat);
         }
         } catch (java.sql.SQLException sqe) {
         sqe.printStackTrace();
         System.out.println("select not successful");
         }
     
         try{
     
         java.sql.Statement pss1 = connectDB.createStatement();
         java.sql.ResultSet rset1 = pss1.executeQuery("select account_no,expiry_date,category from hp_inpatient_register where patient_no = '"+jTextField91.getText()+"'");
         while (rset1.next()){
         cat = dbObject.getDBObject(rset1.getObject(3), "-");
         date = dbObject.getDBObject(rset1.getObject(2), null);
         accno =dbObject.getDBObject(rset1.getObject(1), "-");
     
     
         jTextField21.setText(accno);
         jTextField51.setText(date);
         jTextField61.setText(cat);
         }
     
         java.sql.Statement pss11 = connectDB.createStatement();
         java.sql.ResultSet rss11 = pss11.executeQuery("select round(sum(debit-credit),2) from hp_patient_card where patient_no = '"+jTextField91.getText()+"' AND paid = false");
         while (rss11.next()){
         // jTextField2.setText(rss1.getObject(1).toString());
         jTextField31.setText(rss11.getObject(1).toString());
         }
         } catch(java.sql.SQLException sqlex){
         javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
     
         System.out.println(sqlex.getMessage());
         }
         for (int k = 0; k < jTable11.getRowCount(); k++ ) {
         for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
         jTable11.getModel().setValueAt(null,k,r);
         }
         }
         //this.populateTable2(jTextField91.getText());
         /*        try {
         crset21.setCommand("select date::date as date,service,dosage as quantity,debit as amount FROM hp_patient_card WHERE patient_no ='"+jTextField91.getText()+"' and paid = false AND payment_mode = 'Scheme'");// union select date_prescribed as date,description as service,quantity,amount,gl_code from hp_pharmacy WHERE patient_no ='"+jTextField9.getText()+"' and paid = false");
     
         crset21.setConnectionSource(pConnDB);
     
         crset21.execute();
     
         // crset2.setExecuteOnLoad(true);
         jTable11.setModel(new org.netbeans.lib.sql.models.TableModel(crset21, new org.netbeans.lib.sql.models.TableModel.Column[] {
         new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false),
         new org.netbeans.lib.sql.models.TableModel.Column("service", "Description", false),
         new org.netbeans.lib.sql.models.TableModel.Column("quantity", "Quantity", false),
         new org.netbeans.lib.sql.models.TableModel.Column("amount", "Amount KShs.", false)
         //  new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl Code", false)
     
         }));
     
         //  tableModel = jTable1.getModel();
     
         jScrollPane11.setViewportView(jTable11);
     
         } catch(java.sql.SQLException sqlex){
         javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
     
         System.out.println(sqlex.getMessage());
         }
     
         */

        //  jSearchDialog21.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    private void searchButton21Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //     java.awt.Point point = this.jTextField11.getLocationOnScreen();
        jSearchDialog21.setSize(400, 200);

        //  jSearchDialog21.setLocation(point);
        jSearchDialog21.setVisible(true);
    }
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate

        jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select patient_no as pat_no,second_name||' '|| first_name as name from hp_inpatient_register where patient_no ILIKE '" + jTextField1131.getText() + "%' AND pay_mode = 'Scheme' order by second_name"));

        /* try {
         // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
         // searchRowSet21.execute("select trim(pr.patient_no) as pat_no,pr.first_name||' '||pr.second_name||' '||pr.last_name as name,pr.account_no AS staff_no,pr.description AS description from hp_inpatient_register pr,hp_admission ad  where pr.first_name||' '||pr.second_name||' '||pr.last_name ILIKE '"+jTextField1131.getText()+"%' AND pr.pay_mode = 'Scheme' and pr.patient_no = ad.patient_no and ad.discharge = true order by pr.first_name");
         searchRowSet21.execute("select patient_no as pat_no,second_name||' '|| first_name as name from hp_inpatient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' AND pay_mode = 'Scheme' order by second_name");
        
         jSearchTable21.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
         new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
         new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
         //   new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Member No.", false),
         //  new org.netbeans.lib.sql.models.TableModel.Column("description", "Scheme", false)
         }));
         */
        jSearchScrollPane21.setViewportView(jSearchTable21);
        System.out.println("Cannot sort out");

        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton2Clicked();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton2Clicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.invoiceNumberTxt.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);
    }
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        // if(this.jCheckBox2.isSelected()){
        if (this.jTextField113.getCaretPosition() < 2) {
            System.out.print("Nothing");
        } else {

            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select invoice_no,admission_no as pat_no,item as name,date from ac_debtors  where invoice_no ILIKE '" + jTextField113.getText() + "%' order by invoice_no"));

            /*try {
             // searchRowSet2.execute("select distinct pr.patient_no as pat_no,pr.first_name||' '||pr.second_name||' '||last_name as name,pr.account_no AS staff_no,description from hp_patient_register pr where pr.description ='"+jComboBox1.getSelectedItem()+"' AND pr.first_name||' '||pr.second_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' AND pr.pay_mode = 'Scheme' order by name");
             searchRowSet2.execute("select invoice_no,admission_no as pat_no,item as name,date from ac_debtors  where invoice_no ILIKE '"+jTextField113.getText()+"%' order by invoice_no");
             
             jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
             new org.netbeans.lib.sql.models.TableModel.Column("invoice_no", "Invoice No", false),
             new org.netbeans.lib.sql.models.TableModel.Column("pat_no", "Patient No", false),
             new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
             new org.netbeans.lib.sql.models.TableModel.Column("date", "Date", false)
             }));
             */
            jSearchScrollPane2.setViewportView(jSearchTable2);
            System.out.println("Cannot sort out");

        }

        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        int i = 0;

        this.newInvoiceAmountTxt.setText("");

        accountNumberTxt.setText("");

        String code = null;
        patientNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        patientNumberTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        invoiceNumberTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        originalInvoiceDateTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        //jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());

        jSearchDialog2.dispose();
        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payee,account_no,dealer,debit,balance,reference_no from ac_debtors where invoice_no ='" + invoiceNumberTxt.getText() + "'");
            while (rset.next()) {
                // jComboBox6.setSelectedItem(rset.getObject(1).toString());
                schemeNameTxt.setText(rset.getObject(1).toString());
                accountNumberTxt.setText(rset.getObject(2).toString());
                schemePayerTxt.setText(rset.getObject(3).toString());
                originalInvoiceAmountTxt.setText(rset.getObject(4).toString());
                newInvoiceAmountTxt.setText(rset.getObject(5).toString());
                referenceNumberTxt.setText(rset.getObject(6).toString());

            }

            java.sql.Statement stmt2 = connectDB.createStatement();
            java.sql.ResultSet rset2 = stmt2.executeQuery("select account_no,member_name from hp_patient_register where patient_no ='" + patientNumberTxt.getText() + "'");
            while (rset2.next()) {
                memberNumberTxt.setText(rset2.getObject(1).toString());
                memberNameTxt.setText(rset2.getObject(2).toString());

            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        this.populateTable1(this.invoiceNumberTxt.getText());

        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    private void populateTable1(java.lang.String patient_no) {
        for (int k = 0; k < newInvoiceTable.getRowCount(); k++) {
            for (int r = 0; r < newInvoiceTable.getColumnCount(); r++) {
                newInvoiceTable.getModel().setValueAt(null, k, r);
            }
        }

        for (int k = 0; k < originalInvoiceTable.getRowCount(); k++) {
            for (int r = 0; r < originalInvoiceTable.getColumnCount(); r++) {
                originalInvoiceTable.getModel().setValueAt(null, k, r);
            }
        }
        //       this.jComboBox1.setSelectedItem(null);
        //       this.jTextField3.setText("");
        int i = 0;
        int j = 0;
        try {
            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rset = stmt.executeQuery("SELECT count(invoice_no) FROM hp_patient_card WHERE invoice_no = '" + patient_no + "'");

            while (rset.next()) {
                j = rset.getInt(1);
            }
            if (j > 0) {
                java.sql.Statement stmtTable1 = connectDB.createStatement();
                java.sql.Statement stmtTable111 = connectDB.createStatement();

                //  java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT description, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_pharmacy WHERE patient_no = '"+patient_no+"' AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_no = '"+patient_no+"' AND paid = false");
                java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery(" select date::date,initcap(service) as service,reference,dosage,CASE WHEN (dosage <> 0 ) THEN (debit-credit)/dosage ELSE (debit-credit/1) END AS price,debit-credit from hp_patient_card where invoice_no = '" + patient_no + "' AND service not ilike 'Invoice%' order by date::date");

                while (rsetTable1.next()) {

                    System.out.println("Working at table row " + i);
                    newInvoiceTable.setValueAt(rsetTable1.getObject(1), i, 0);
                    newInvoiceTable.setValueAt(rsetTable1.getObject(2), i, 1);
                    newInvoiceTable.setValueAt(rsetTable1.getObject(3), i, 2);
                    newInvoiceTable.setValueAt(rsetTable1.getObject(4), i, 3);
                    newInvoiceTable.setValueAt(rsetTable1.getObject(5), i, 4);
                    newInvoiceTable.setValueAt(rsetTable1.getObject(6), i, 5);

                    originalInvoiceTable.setValueAt(rsetTable1.getObject(1), i, 0);
                    originalInvoiceTable.setValueAt(rsetTable1.getObject(2), i, 1);
                    originalInvoiceTable.setValueAt(rsetTable1.getObject(3), i, 2);
                    originalInvoiceTable.setValueAt(rsetTable1.getObject(4), i, 3);
                    originalInvoiceTable.setValueAt(rsetTable1.getObject(5), i, 4);
                    originalInvoiceTable.setValueAt(rsetTable1.getObject(6), i, 5);

                    java.sql.ResultSet rsetTable111 = stmtTable111.executeQuery(" select gl_code from pricelist where service_type ILIKE '" + newInvoiceTable.getModel().getValueAt(i, 1).toString() + "%' UNION all select gl_account from pb_operating_parameters where service_type ILIKE '" + newInvoiceTable.getModel().getValueAt(i, 1).toString() + "%'");

                    while (rsetTable111.next()) {

                        System.out.println("Working at table row " + i);
                        newInvoiceTable.setValueAt(rsetTable111.getObject(1), i, 6);
                        originalInvoiceTable.setValueAt(rsetTable111.getObject(1), i, 6);

                    }

                    i++;
                }

            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Cannot Retrive Data ", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

    }


    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void refreshFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshFormBtnActionPerformed
        //       this.getContentPane().removeAll();
        //       this.initComponents();
        // Add your handling code here:
    }//GEN-LAST:event_refreshFormBtnActionPerformed
    //    private void cmbox2ActionPerformed(java.awt.event.ActionEvent evt){
       /* java.lang.Object selectedGuaran = cmbox2.getSelectedItem();
     int i = jTable1.getSelectedRow();
        
     if (selectedGuaran != null) {
        
     try {
     java.sql.Statement pstmt = connectDB.createStatement();
     java.sql.ResultSet rs = pstmt.executeQuery("select item_code,units from st_stock_item where description = '"+selectedGuaran+"'");
     while (rs.next())
     jTable1.setValueAt(rs.getObject(1),i,1);
     jTable1.setValueAt(rs.getObject(2),i,2);
     } catch(java.sql.SQLException sqlex){
     System.out.println(sqlex.getMessage());
        
     }
     */
    //}
    //   }

    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
        setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void ammendInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ammendInvoiceBtnActionPerformed

        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

        System.out.println(datenowSql1.toString());

        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

        System.out.println(datenowSql.toString());
        try {
            String receiptNo = null;
            String actCode = null;
            String glCode = null;
            String bankAcc = null;
            String glCode1 = null;
            String bankAcc1 = null;
            String transNo = null;
            String payMode = null;
            String patCat = null;
            String patientAcc = null;
            String cardNo = null;
            String scheme = null;
            String cardName = null;
            String isurer = null;
            String expDate = null;
            String staffNo = null;
            String actNames = null;
            String user = null;
            String actNames1 = null;
            String actCode1 = null;
            String invoiceNo = null;

            double totalSum = 0.00;

            invoiceNo = this.invoiceNumberTxt.getText();

            java.sql.Savepoint registerSavePoint = null;
            try {
                connectDB.setAutoCommit(false);
                registerSavePoint = connectDB.setSavepoint("registration");

//                java.sql.PreparedStatement pstmt3w = connectDB.prepareStatement("delete from hp_patient_card  WHERE invoice_no = '" + invoiceNumberTxt.getText() + "'");
//                pstmt3w.executeUpdate();
                java.sql.Statement stm1 = connectDB.createStatement();
//                for (int p = 0; p < originalInvoiceTable.getRowCount(); p++) {
//                    if (originalInvoiceTable.getModel().getValueAt(p, 0) != null) {
//                        java.sql.PreparedStatement pstmt31w = connectDB.prepareStatement("delete from ac_ledger WHERE transaction_no = '" + originalInvoiceTable.getModel().getValueAt(p, 2).toString() + "' AND transaction_type != 'Issuing'");
//                        pstmt31w.executeUpdate();
//                    }
//                }

                java.sql.Statement pss12 = connectDB.createStatement();
                java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                while (rsts11.next()) {
                    actCode = rsts11.getObject(1).toString();
                    actNames = rsts11.getObject(2).toString();
                }
                java.sql.Statement pss11 = connectDB.createStatement();
                java.sql.ResultSet rsts1 = pss11.executeQuery("select code,activity,current_user from pb_activity where activity_category ='DA'");
                while (rsts1.next()) {
                    actCode1 = rsts1.getObject(1).toString();
                    actNames1 = rsts1.getObject(2).toString();
                    user = rsts1.getObject(3).toString();
                }
                com.afrisoftech.lib.InvoiceNumbers.invoiceType = false;
                String newInvoiceNo = com.afrisoftech.lib.InvoiceNumbers.getInvoiceNumber();
                //Reverse earlier billing/sales entries

                for (int i = 0; i < originalInvoiceTable.getRowCount(); i++) {
                    transNo = com.afrisoftech.lib.TransactionNumber.getTransactionNumber(connectDB);
                    if (originalInvoiceTable.getModel().getValueAt(i, 0) != null) {

                        java.sql.Statement pssq = connectDB.createStatement();
                        // java.sql.ResultSet rse121 = pssq.executeQuery("select main_service,gl_account from pb_operating_parameters where service_type ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%' union select department,gl_code from st_stock_prices where product ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%'");
                        java.sql.ResultSet rse121 = pssq.executeQuery("select activity from pb_activity where code = '" + originalInvoiceTable.getModel().getValueAt(i, 6).toString() + "'");

                        while (rse121.next()) {
                            glCode1 = dbObject.getDBObject(rse121.getObject(1), "-");
                        }
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                        pstmt.setString(1, patientNumberTxt.getText());
                        pstmt.setObject(2, originalInvoiceTable.getModel().getValueAt(i, 1).toString());
                        pstmt.setString(3, "");
                        pstmt.setString(4, "Scheme");
                        pstmt.setString(5, transNo);
                        pstmt.setString(7, schemeNameTxt.getText());
                        pstmt.setString(6, "");
                        pstmt.setString(8, "");
                        pstmt.setString(9, schemePayerTxt.getText());
                        pstmt.setDate(10, null);
                        pstmt.setString(11, "");
                        pstmt.setDouble(13, java.lang.Double.valueOf(originalInvoiceTable.getModel().getValueAt(i, 5).toString()));
                        pstmt.setDouble(12, 0);
                        pstmt.setString(20, "Billing");
                        pstmt.setObject(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(originalInvoiceTable.getValueAt(i, 0).toString())));
                        pstmt.setObject(15, actCode);
                        pstmt.setString(16, glCode1);
                        pstmt.setDouble(17, java.lang.Double.valueOf(originalInvoiceTable.getValueAt(i, 3).toString()));
                        pstmt.setObject(18, memberNumberTxt.getText());
                        pstmt.setBoolean(19, true);
                        pstmt.setBoolean(21, true);
                        pstmt.setString(22, actNames);
                        pstmt.setString(23, invoiceNumberTxt.getText());
                        pstmt.setString(24, user);
                        pstmt.setString(25, "");
                        pstmt.setString(26, "OP");
                        pstmt.executeUpdate();

                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt2.setObject(1, originalInvoiceTable.getValueAt(i, 6).toString());
                        pstmt2.setObject(2, glCode1);
                        pstmt2.setString(3, patientNumberTxt.getText());
                        pstmt2.setString(4, patientNameTxt.getText());
                        pstmt2.setString(5, "");
                        pstmt2.setString(6, cardNo);
                        pstmt2.setString(7, cardName);
                        pstmt2.setString(8, "OP");
                        pstmt2.setString(9, isurer);
                        pstmt2.setString(10, "Scheme");
                        pstmt2.setString(11, "");
                        pstmt2.setString(12, "");
                        pstmt2.setString(13, "");
                        pstmt2.setString(14, originalInvoiceTable.getValueAt(i, 1).toString());
                        pstmt2.setString(15, "Billing");
                        pstmt2.setDouble(17, 0.00);
                        pstmt2.setDouble(16, java.lang.Double.valueOf(originalInvoiceTable.getValueAt(i, 5).toString()));
                        pstmt2.setObject(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(originalInvoiceTable.getValueAt(i, 0).toString())));
                        pstmt2.setString(19, transNo);
                        pstmt2.setBoolean(20, false);
                        pstmt2.setBoolean(21, false);
                        pstmt2.setBoolean(22, false);
                        pstmt2.setString(23, user);
                        pstmt2.executeUpdate();

                        // totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(newInvoiceTable, 5);
                    }
                }
                //Register the sales information
                for (int i = 0; i < newInvoiceTable.getRowCount(); i++) {
                    transNo = com.afrisoftech.lib.TransactionNumber.getTransactionNumber(connectDB);
                    if (newInvoiceTable.getModel().getValueAt(i, 0) != null) {

                        java.sql.Statement pssq = connectDB.createStatement();
                        // java.sql.ResultSet rse121 = pssq.executeQuery("select main_service,gl_account from pb_operating_parameters where service_type ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%' union select department,gl_code from st_stock_prices where product ILIKE '"+jTable1.getModel().getValueAt(i,1).toString()+"%'");
                        java.sql.ResultSet rse121 = pssq.executeQuery("select activity from pb_activity where code ILIKE '" + newInvoiceTable.getModel().getValueAt(i, 6).toString() + "%'");

                        while (rse121.next()) {
                            glCode1 = dbObject.getDBObject(rse121.getObject(1), "-");
                        }
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?::timestamp, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                        pstmt.setString(1, patientNumberTxt.getText());
                        pstmt.setObject(2, newInvoiceTable.getModel().getValueAt(i, 1).toString());
                        pstmt.setString(3, "");
                        pstmt.setString(4, "Scheme");
                        pstmt.setString(5, transNo);
                        pstmt.setString(7, schemeNameTxt.getText());
                        pstmt.setString(6, "");
                        pstmt.setString(8, "");
                        pstmt.setString(9, schemePayerTxt.getText());
                        pstmt.setDate(10, null);
                        pstmt.setString(11, "");
                        pstmt.setDouble(12, java.lang.Double.valueOf(newInvoiceTable.getModel().getValueAt(i, 5).toString()));
                        pstmt.setDouble(13, 0);
                        pstmt.setString(20, "Billing");
                        pstmt.setObject(14, newInvoiceTable.getValueAt(i, 0)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(newInvoiceTable.getValueAt(i, 0).toString())));
                        pstmt.setObject(15, actCode);
                        pstmt.setString(16, glCode1);
                        pstmt.setDouble(17, java.lang.Double.valueOf(newInvoiceTable.getValueAt(i, 3).toString()));
                        pstmt.setObject(18, memberNumberTxt.getText());
                        pstmt.setBoolean(19, true);
                        pstmt.setBoolean(21, true);
                        pstmt.setString(22, actNames);
                        pstmt.setString(23, newInvoiceNo);
                        pstmt.setString(24, user);
                        pstmt.setString(25, "");
                        pstmt.setString(26, "OP");
                        pstmt.executeUpdate();

                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?::date, ?, ?,?,?,?)");
                        pstmt2.setObject(1, newInvoiceTable.getValueAt(i, 6).toString());
                        pstmt2.setObject(2, glCode1);
                        pstmt2.setString(3, patientNumberTxt.getText());
                        pstmt2.setString(4, patientNameTxt.getText());
                        pstmt2.setString(5, "");
                        pstmt2.setString(6, cardNo);
                        pstmt2.setString(7, cardName);
                        pstmt2.setString(8, "OP");
                        pstmt2.setString(9, isurer);
                        pstmt2.setString(10, "Scheme");
                        pstmt2.setString(11, "");
                        pstmt2.setString(12, "");
                        pstmt2.setString(13, "");
                        pstmt2.setString(14, newInvoiceTable.getValueAt(i, 1).toString());
                        pstmt2.setString(15, "Billing");
                        pstmt2.setDouble(16, 0.00);
                        pstmt2.setDouble(17, java.lang.Double.valueOf(newInvoiceTable.getValueAt(i, 5).toString()));
                        pstmt2.setObject(18, newInvoiceTable.getValueAt(i, 0)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(newInvoiceTable.getValueAt(i, 0).toString())));
                        pstmt2.setString(19, transNo);
                        pstmt2.setBoolean(20, false);
                        pstmt2.setBoolean(21, false);
                        pstmt2.setBoolean(22, false);
                        pstmt2.setString(23, user);
                        pstmt2.executeUpdate();

                        totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(newInvoiceTable, 5);

                    }
                }
                //Reverse original Invoice
                transNo = com.afrisoftech.lib.TransactionNumber.getTransactionNumber(connectDB);
                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                pstmt1.setString(1, patientNumberTxt.getText());
                pstmt1.setObject(2, "Invoice");
                pstmt1.setString(3, "");
                pstmt1.setString(4, "Scheme");
                pstmt1.setString(5, transNo);
                pstmt1.setString(7, schemeNameTxt.getText());
                pstmt1.setString(6, "");
                pstmt1.setString(8, "");
                pstmt1.setString(9, schemePayerTxt.getText());
                pstmt1.setDate(10, null);
                pstmt1.setString(11, "");
                pstmt1.setDouble(12, java.lang.Double.valueOf(originalInvoiceAmountTxt.getText()));
                pstmt1.setDouble(13, 0);
                pstmt1.setObject(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(newInvoiceTable.getValueAt(0,0).toString())));
                pstmt1.setObject(15, actCode);
                pstmt1.setString(16, glCode1);
                pstmt1.setDouble(17, 1);
                pstmt1.setObject(18, memberNumberTxt.getText());
                pstmt1.setBoolean(19, true);
                pstmt1.setString(20, "Receipts");
                pstmt1.setBoolean(21, true);
                pstmt1.setString(22, actNames);
                pstmt1.setString(23, invoiceNumberTxt.getText());
                pstmt1.setString(24, user);
                pstmt1.executeUpdate();

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                pstmt.setObject(1, actCode1);
                pstmt.setString(2, schemePayerTxt.getText());
                pstmt.setString(3, patientNameTxt.getText());
                pstmt.setString(4, patientNumberTxt.getText());
                pstmt.setString(5, schemeNameTxt.getText());
                pstmt.setString(6, "");
                if (this.accountNumberTxt.getText() == null || this.accountNumberTxt.getText().equals("-")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Account NO. MISSING !!!", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    pstmt.setString(7, accountNumberTxt.getText());
                }
                pstmt.setString(8, "");
                pstmt.setString(9, "");
                pstmt.setString(10, this.memberNumberTxt.getText());
                pstmt.setString(11, transNo);
                pstmt.setString(12, "Raise Invoice");
                pstmt.setDouble(13, 0.00);
                pstmt.setDouble(14, java.lang.Double.valueOf(originalInvoiceAmountTxt.getText()));
                pstmt.setDate(15, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(SchemeDataTable.getValueAt(0, 0).toString())));
                pstmt.setObject(16, invoiceNo);
                pstmt.setString(17, actNames1);
                pstmt.setBoolean(18, false);
                pstmt.setBoolean(19, false);
                pstmt.setString(20, user);
                pstmt.setString(21, "");
                pstmt.setDouble(22, java.lang.Double.valueOf(originalInvoiceAmountTxt.getText()));
                pstmt.setBoolean(23, false);
                pstmt.setDouble(24, 0.00);
                pstmt.setObject(25, "");
                pstmt.setObject(26, null);
                pstmt.setBoolean(27, false);
                pstmt.setDouble(28, 0.00);
                pstmt.setObject(29, null);
                pstmt.setString(30, "");
                pstmt.setBoolean(31, false);
                pstmt.setDouble(32, 0.00);
                pstmt.setObject(33, null);
                pstmt.setString(34, "");
                pstmt.setString(35, memberNumberTxt.getText());
                pstmt.setString(36, null); //com.afrisoftech.lib.ClaimNumberFactory.getClaimNumber(connectDB));// this.claimNumberTxt.getText());
                pstmt.executeUpdate();

                //New invoice generation
                transNo = com.afrisoftech.lib.TransactionNumber.getTransactionNumber(connectDB);
                java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                pstmt11.setString(1, patientNumberTxt.getText());
                pstmt11.setObject(2, "Invoice");
                pstmt11.setString(3, "");
                pstmt11.setString(4, "Scheme");
                pstmt11.setString(5, transNo);
                pstmt11.setString(7, schemeNameTxt.getText());
                pstmt11.setString(6, "");
                pstmt11.setString(8, "");
                pstmt11.setString(9, schemePayerTxt.getText());
                pstmt11.setDate(10, null);
                pstmt11.setString(11, "");
                pstmt11.setDouble(13, java.lang.Double.valueOf(newInvoiceAmountTxt.getText()));
                pstmt11.setDouble(12, 0);
                pstmt11.setObject(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(newInvoiceTable.getValueAt(0,0).toString())));
                pstmt11.setObject(15, actCode);
                pstmt11.setString(16, glCode1);
                pstmt11.setDouble(17, 1);
                pstmt11.setObject(18, memberNumberTxt.getText());
                pstmt11.setBoolean(19, true);
                pstmt11.setString(20, "Receipts");
                pstmt11.setBoolean(21, true);
                pstmt11.setString(22, actNames);
                pstmt11.setString(23, newInvoiceNo);
                pstmt11.setString(24, user);
                pstmt11.executeUpdate();

                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_debtors values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                pstmt2.setObject(1, actCode1);
                pstmt2.setString(2, schemePayerTxt.getText());
                pstmt2.setString(3, patientNameTxt.getText());
                pstmt2.setString(4, patientNumberTxt.getText());
                pstmt2.setString(5, schemeNameTxt.getText());
                pstmt2.setString(6, "");
                if (this.accountNumberTxt.getText() == null || this.accountNumberTxt.getText().equals("-")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Account NO. MISSING !!!", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    pstmt2.setString(7, accountNumberTxt.getText());
                }
                pstmt2.setString(8, "");
                pstmt2.setString(9, "");
                pstmt2.setString(10, this.memberNumberTxt.getText());
                pstmt2.setString(11, transNo);
                pstmt2.setString(12, "Raise Invoice");
                pstmt2.setDouble(13, java.lang.Double.valueOf(newInvoiceAmountTxt.getText()));
                pstmt2.setDouble(14, 0.00);
                pstmt2.setDate(15, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB)); //com.afrisoftech.lib.SQLDateFormat.getSQLDate(java.sql.Date.valueOf(SchemeDataTable.getValueAt(0, 0).toString())));
                pstmt2.setObject(16, newInvoiceNo);
                pstmt2.setString(17, actNames1);
                pstmt2.setBoolean(18, false);
                pstmt2.setBoolean(19, false);
                pstmt2.setString(20, user);
                pstmt2.setString(21, "");
                pstmt2.setDouble(22, java.lang.Double.valueOf(newInvoiceAmountTxt.getText()));
                pstmt2.setBoolean(23, false);
                pstmt2.setDouble(24, 0.00);
                pstmt2.setObject(25, "");
                pstmt2.setObject(26, null);
                pstmt2.setBoolean(27, false);
                pstmt2.setDouble(28, 0.00);
                pstmt2.setObject(29, null);
                pstmt2.setString(30, "");
                pstmt2.setBoolean(31, false);
                pstmt2.setDouble(32, 0.00);
                pstmt2.setObject(33, null);
                pstmt2.setString(34, "");
                pstmt2.setString(35, memberNumberTxt.getText());
                pstmt2.setString(36, com.afrisoftech.lib.ClaimNumberFactory.getClaimNumber(connectDB));// this.claimNumberTxt.getText());
                pstmt2.executeUpdate();

//                java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE ac_debtors set payee = '" + schemeNameTxt.getText() + "',dealer = '" + schemePayerTxt.getText() + "',account_no = '" + accountNumberTxt.getText() + "',balance = '" + totalSum + "',debit = '" + totalSum + "',date = '" + originalInvoiceDateTxt.getText() + "',item = '" + patientNameTxt.getText() + "',member_no = '" + memberNumberTxt.getText() + "'  WHERE invoice_no = '" + invoiceNumberTxt.getText() + "'");
//                pstmt22.executeUpdate();
//
//                java.sql.PreparedStatement pstmt221 = connectDB.prepareStatement("UPDATE hp_patient_register set account_no ='" + memberNumberTxt.getText() + "',member_name = '" + memberNameTxt.getText() + "' WHERE patient_no = '" + patientNumberTxt.getText() + "'");
//                pstmt221.executeUpdate();
                connectDB.commit();
                connectDB.setAutoCommit(true);
                invoiceNo = invoiceNumberTxt.getText();

                com.afrisoftech.reports.FinalInvoiceByinvPdf policy = new com.afrisoftech.reports.FinalInvoiceByinvPdf();
                policy.FinalInvoiceByinvPdf(connectDB, newInvoiceNo, newInvoiceNo);

                javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully ", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                patientNameTxt.setText("");
                originalInvoiceAmountTxt.setText("");
                newInvoiceAmountTxt.setText("");
                for (int k = 0; k < newInvoiceTable.getRowCount(); k++) {
                    for (int r = 0; r < newInvoiceTable.getColumnCount(); r++) {
                        newInvoiceTable.getModel().setValueAt(null, k, r);
                    }
                }
                for (int k = 0; k < originalInvoiceTable.getRowCount(); k++) {
                    for (int r = 0; r < originalInvoiceTable.getColumnCount(); r++) {
                        originalInvoiceTable.getModel().setValueAt(null, k, r);
                    }
                }
                newInvoiceAmountTxt.setText("");
            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                try {
                    connectDB.rollback(registerSavePoint);
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

            }

        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }
        // }// Add your handling code here:
    }//GEN-LAST:event_ammendInvoiceBtnActionPerformed

    private void patientNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNameTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountNumberTxt;
    private javax.swing.JButton ammendInvoiceBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton closeFormBtn;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JButton dispose11;
    private javax.swing.JButton helpBtn;
    private javax.swing.JTextField invoiceNumberTxt;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton523;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel531;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel641;
    private javax.swing.JPanel jPanel6411;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JDialog jSearchDialog23;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jSearchPanel23;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JScrollPane jSearchScrollPane23;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTable jSearchTable23;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField101;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTextField jTextField1133;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField121;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField311;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField61;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JTextField memberNameTxt;
    private javax.swing.JTextField memberNumberTxt;
    private javax.swing.JTextField newInvoiceAmountTxt;
    private javax.swing.JTable newInvoiceTable;
    private javax.swing.JTextField originalInvoiceAmountTxt;
    private javax.swing.JTextField originalInvoiceDateTxt;
    private javax.swing.JTable originalInvoiceTable;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JTextField referenceNumberTxt;
    private javax.swing.JButton refreshFormBtn;
    private javax.swing.JButton removeTableRowBtn;
    private javax.swing.JTextField schemeNameTxt;
    private javax.swing.JTextField schemePayerTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JButton searchButton21;
    private javax.swing.JButton searchButton3;
    // End of variables declaration//GEN-END:variables

}
